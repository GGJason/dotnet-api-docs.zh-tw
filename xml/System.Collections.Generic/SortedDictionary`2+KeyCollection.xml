<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SortedDictionary`2+KeyCollection.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f921d3fc4d3d10c26babe93cb06d66a07c4aaf02.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f921d3fc4d3d10c26babe93cb06d66a07c4aaf02</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedDictionary`2.KeyCollection">
          <source>Represents the collection of keys in a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">代表 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> 中索引鍵的集合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedDictionary`2.KeyCollection">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.KeyCollection">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Keys%2A?displayProperty=nameWithType&gt;</ph> property returns an instance of this type, containing all the keys in that <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Keys%2A?displayProperty=nameWithType&gt;</ph>屬性會傳回這種類型，其中包含中的所有索引鍵的執行個體<ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.KeyCollection">
          <source>The order of the keys in the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph> is the same as the order of elements in the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>, the same as the order of the associated values in the <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.ValueCollection&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Collections.Generic.SortedDictionary%602.Values%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">中的索引鍵的順序<ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph>中項目的順序相同<ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>中的關聯值的順序相同<ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.ValueCollection&gt;</ph>傳回<ph id="ph4">&lt;xref:System.Collections.Generic.SortedDictionary%602.Values%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.KeyCollection">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph> refers back to the keys in the original <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph>不是靜態的複本; 相反地，<ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph>中原始的索引鍵是指回<ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.KeyCollection">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> continue to be reflected in the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph>.</source>
          <target state="translated">因此，變更為<ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>才會反映在繼續<ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.KeyCollection">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">公用靜態 (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph>在 Visual Basic 中) 這種類型的成員都具備執行緒安全。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.KeyCollection">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">不保證任何執行個體成員是安全執行緒。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.KeyCollection">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph> can support multiple readers concurrently, as long as the collection is not modified.</source>
          <target state="translated">A<ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph>可以支援多個讀取器同時，只要未修改集合。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.KeyCollection">
          <source>Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">即便如此，列舉集合在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.KeyCollection">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.KeyCollection">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> whose keys are reflected in the new <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>，其索引鍵反映在新 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph> class that reflects the keys in the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph> 類別的新執行個體，反映指定 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> 中的索引鍵。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph> refers back to the keys in the original <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph>不是靜態的複本; 相反地，<ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph>中原始的索引鍵是指回<ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> continue to be reflected in the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph>.</source>
          <target state="translated">因此，變更為<ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>才會反映在繼續<ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">這個建構函式是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph>.</source>
          <target state="translated">一維陣列，表示從這個 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph> 複製過來之項目的目的地。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">陣列必須有以零為起始的索引。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中以零起始的索引，複製作業從此處開始。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph> elements to an existing one-dimensional array, starting at the specified array index.</source>
          <target state="translated">從指定的陣列索引處開始，複製 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph> 項目至現有一維陣列。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)">
          <source>The elements are copied to the array in the same order in which the enumerator iterates through the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph>.</source>
          <target state="translated">將元素複製到陣列中相同的順序，以列舉值逐一<ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於 0。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">來源 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph> 中的項目數目，大於 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 到目的 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> 結尾的可用空間。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Count">
          <source>Gets the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph> 中所包含的項目數。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph> 中所包含的項目數。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Count">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">取得這個屬性的值是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph>.</source>
          <target state="translated">傳回在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph> 中逐一查看的列舉值。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" /&gt;</ph> structure for the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph> 結構。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`for each`</ph> c + +<ph id="ph3">`For Each`</ph>在 Visual Basic 中) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，建議您使用 <ph id="ph1">`foreach`</ph>，而不要直接使用列舉值。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">此位置<ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A&gt;</ph>未定義屬性。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，您必須呼叫<ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A&gt;</ph>方法，以將列舉值前進到第一個項目，再讀取的值集合的<ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A&gt;</ph> property returns the same object until <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A&gt;</ph>屬性會傳回相同的物件直到<ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A&gt;</ph> 會將 <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A&gt;</ph> 設定為下一個項目。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A&gt;</ph>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫<ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A&gt;</ph>也會傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">如果最後一個呼叫<ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">您不能再次將 <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Enumerator.Current%2A&gt;</ph> 設定為集合的第一個項目；您必須建立新的列舉值執行個體。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> 命名空間中集合的預設實作未同步處理。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Add(`0)">
          <source>The object to add to the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">要加入至 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Add(`0)">
          <source>Adds an item to the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">將項目加入至 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Add(`0)">
          <source>This implementation always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">這個實作一律會擲回 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Add(`0)">
          <source>Always thrown; the collection is read-only.</source>
          <target state="translated">一律擲回；這個集合是唯讀的。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Clear">
          <source>Removes all items from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">從 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> 中移除所有項目。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Clear">
          <source>This implementation always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">這個實作一律會擲回 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Clear">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.ICollection%601.Count%2A&gt;</ph> property is set to 0, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.ICollection%601.Count%2A&gt;</ph>屬性設定為 0，並從項目集合的其他物件的參考也會釋放。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Clear">
          <source>Always thrown; the collection is read-only.</source>
          <target state="translated">一律擲回；這個集合是唯讀的。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Contains(`0)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> 中尋找的物件。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Contains(`0)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> contains the specified value.</source>
          <target state="translated">判斷 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> 是否包含指定的值。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item is found in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> 中找到項目，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Contains(`0)">
          <source>Implementations can vary in how they determine equality of objects; for example, <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> uses <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph>, whereas <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> allows the user to specify the <ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> implementation to use for comparing keys.</source>
          <target state="translated">實作可以改變它們如何判定相等的物件。例如，<ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>使用<ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph>，而<ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>可讓使用者指定<ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph>實作来用於比較索引鍵。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Contains(`0)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated">取得值，指出 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> 是否唯讀。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 是唯讀，則為 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#IsReadOnly">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph> 的預設實作中，這個屬性一律會傳回 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">唯讀的集合不允許在集合建立後增加、移除或修改項目。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#IsReadOnly">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">取得這個屬性的值是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Remove(`0)">
          <source>The object to remove from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">要從 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> 移除的物件。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Remove(`0)">
          <source>Removes the first occurrence of a specific object from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">從 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> 移除特定物件之第一個符合的元素。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Remove(`0)">
          <source>This implementation always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">這個實作一律會擲回 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item is successfully removed from the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已成功從 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> 中移除項目，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if item is not found in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>.</source>
          <target state="translated">如果在 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> 中找不到項目，則這個方法也會傳回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Remove(`0)">
          <source>Implementations can vary in how they determine equality of objects; for example, <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> uses <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph>, whereas <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> allows the user to specify the <ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> implementation to use for comparing keys.</source>
          <target state="translated">實作可以改變它們如何判定相等的物件。例如，<ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>使用<ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph>，而<ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>可讓使用者指定<ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph>實作来用於比較索引鍵。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection&amp;lt;TKey&amp;gt;#Remove(`0)">
          <source>Always thrown; the collection is read-only.</source>
          <target state="translated">一律擲回；這個集合是唯讀的。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">傳回逐一查看集合的列舉值。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph>，可用於逐一查看集合。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`for each`</ph> c + +<ph id="ph3">`For Each`</ph>在 Visual Basic 中) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，建議您使用 <ph id="ph1">`foreach`</ph>，而不要直接使用列舉值。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">此位置<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>未定義屬性。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，您必須呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>方法，以將列舉值前進到第一個項目，再讀取的值集合的<ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> property returns the same object until <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>屬性會傳回相同的物件直到<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 會將 <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> 設定為下一個項目。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns false.</source>
          <target state="translated">如果 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 超過集合結尾，列舉值會位於集合的最後一個項目之後，同時 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 會傳回 false。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return false.</source>
          <target state="translated">當列舉值位於這個位置時，對 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 的後續呼叫也會傳回 false。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">如果最後一個呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">您不能再次將 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> 設定為集合的第一個項目；您必須建立新的列舉值執行個體。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic&gt;</ph> namespace are not synchronized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic&gt;</ph> 命名空間中集合的預設實作未同步處理。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable&amp;lt;TKey&amp;gt;#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">一維陣列，表示從這個 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 複製過來之項目的目的地。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">陣列必須有以零為起始的索引。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中以零起始的索引，複製作業從此處開始。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an array, starting at a particular array index.</source>
          <target state="translated">從特定的陣列索引開始，將 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的項目複製到陣列中。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>If the type of the source <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">`array`</ph>, the nongeneric implementations of <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> throw an <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, whereas the generic implementations throw an <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">如果來源類型<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>無法自動轉換成目的地類型<ph id="ph2">`array`</ph>，非泛型實作<ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph>擲回<ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>，而泛型實作擲回<ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.KeyCollection.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於 0。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 是多維的。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> does not have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 沒有以零起始的索引。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">來源 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 中的項目數目，大於 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 到目的 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> 結尾的可用空間。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">來源 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的類型無法自動轉換成目的 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的類型。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">取得值，這個值表示對 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的存取是否同步 (安全執行緒)。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 的存取為同步 (安全執行緒)，則為 <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph> 的預設實作中，這個屬性一律會傳回 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> 命名空間中集合的預設實作未同步處理。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>屬性傳回的物件，可用來同步處理存取具備<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized">
          <source>Synchronization is effective only if all threads lock the object before accessing the collection.</source>
          <target state="translated">同步處理的所有執行緒存取集合之前都鎖定的物件時才有效。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">取得這個屬性的值是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">取得可用以同步存取 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">可用以同步存取 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph>, this property always returns the current instance.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /&gt;</ph> 的預設實作中，這個屬性一律會傳回目前的執行個體。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> 命名空間中集合的預設實作未同步處理。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>屬性傳回的物件，可用來同步處理存取具備<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
          <source>Synchronization is effective only if all threads lock the object before accessing the collection.</source>
          <target state="translated">同步處理的所有執行緒存取集合之前都鎖定的物件時才有效。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property for C#, C++, and Visual Basic.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>C#、 c + + 和 Visual Basic 的屬性。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
          <source>Getting the value of this property is an O(1) operation.</source>
          <target state="translated">取得這個屬性的值是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">傳回逐一查看集合的列舉值。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>，可用於逐一查看集合。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`for each`</ph> c + +<ph id="ph3">`For Each`</ph>在 Visual Basic 中) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，建議您使用 <ph id="ph1">`foreach`</ph>，而不要直接使用列舉值。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 也會將列舉值帶回至這個位置。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">此位置<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>未定義屬性。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，您必須呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>方法，以將列舉值前進到第一個項目，再讀取的值集合的<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>屬性會傳回相同的物件直到<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 會將 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為下一個項目。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>也會傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">如果最後一個呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">若要再次將 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為集合的第一個元素，您可以在呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 之後，接著呼叫 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> 命名空間中集合的預設實作未同步處理。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>