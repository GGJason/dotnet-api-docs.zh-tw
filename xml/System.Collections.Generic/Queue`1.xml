<Type Name="Queue&lt;T&gt;" FullName="System.Collections.Generic.Queue&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7bc186e6a40e180cd3bf8e904a90e097195fe7d" />
    <Meta Name="ms.sourcegitcommit" Value="850a55c780d5a95b534467969add0232fd3a6125" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/07/2018" />
    <Meta Name="ms.locfileid" Value="34829462" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Queue&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Queue`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Queue`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Queue(Of T)&#xA;Implements ICollection, IEnumerable(Of T), IReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Queue : System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_QueueDebugView`1))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="c647d-101">指定佇列中項目的類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c647d-101">Specifies the type of elements in the queue.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="c647d-102">表示物件的先進先出 (FIFO) 集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c647d-102">Represents a first-in, first-out collection of objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c647d-103">這個類別會實作泛型佇列以循環的陣列。</span><span class="sxs-lookup"><span data-stu-id="c647d-103">This class implements a generic queue as a circular array.</span></span> <span data-ttu-id="c647d-104">物件儲存在<xref:System.Collections.Generic.Queue%601>其中一端插入和移除不同的方式。</span><span class="sxs-lookup"><span data-stu-id="c647d-104">Objects stored in a <xref:System.Collections.Generic.Queue%601> are inserted at one end and removed from the other.</span></span> <span data-ttu-id="c647d-105">佇列和堆疊有用您需要進行暫存儲存位置的資訊。也就是說，您可能想要擷取其值後捨棄項目。</span><span class="sxs-lookup"><span data-stu-id="c647d-105">Queues and stacks are useful when you need temporary storage for information; that is, when you might want to discard an element after retrieving its value.</span></span> <span data-ttu-id="c647d-106">使用<xref:System.Collections.Generic.Queue%601>如果您需要存取相同的順序儲存在集合中的資訊。</span><span class="sxs-lookup"><span data-stu-id="c647d-106">Use <xref:System.Collections.Generic.Queue%601> if you need to access the information in the same order that it is stored in the collection.</span></span> <span data-ttu-id="c647d-107">使用<xref:System.Collections.Generic.Stack%601>如果您需要以相反順序存取的資訊。</span><span class="sxs-lookup"><span data-stu-id="c647d-107">Use <xref:System.Collections.Generic.Stack%601> if you need to access the information in reverse order.</span></span> <span data-ttu-id="c647d-108">使用<xref:System.Collections.Concurrent.ConcurrentQueue%601>或<xref:System.Collections.Concurrent.ConcurrentStack%601>如果您需要從多個執行緒同時存取集合。</span><span class="sxs-lookup"><span data-stu-id="c647d-108">Use <xref:System.Collections.Concurrent.ConcurrentQueue%601> or <xref:System.Collections.Concurrent.ConcurrentStack%601> if you need to access the collection from multiple threads concurrently.</span></span>  
  
 <span data-ttu-id="c647d-109">可以對三個主要作業<xref:System.Collections.Generic.Queue%601>和其項目：</span><span class="sxs-lookup"><span data-stu-id="c647d-109">Three main operations can be performed on a <xref:System.Collections.Generic.Queue%601> and its elements:</span></span>  
  
-   <span data-ttu-id="c647d-110"><xref:System.Collections.Generic.Queue%601.Enqueue%2A> 將元素加入結尾<xref:System.Collections.Generic.Queue%601>。</span><span class="sxs-lookup"><span data-stu-id="c647d-110"><xref:System.Collections.Generic.Queue%601.Enqueue%2A> adds an element to the end of the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
-   <span data-ttu-id="c647d-111"><xref:System.Collections.Generic.Queue%601.Dequeue%2A> 從開始移除最舊的項目<xref:System.Collections.Generic.Queue%601>。</span><span class="sxs-lookup"><span data-stu-id="c647d-111"><xref:System.Collections.Generic.Queue%601.Dequeue%2A> removes the oldest element from the start of the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
-   <span data-ttu-id="c647d-112"><xref:System.Collections.Generic.Queue%601.Peek%2A> 查看傳回的最舊的項目開頭，<xref:System.Collections.Generic.Queue%601>但不會移除從<xref:System.Collections.Generic.Queue%601>。</span><span class="sxs-lookup"><span data-stu-id="c647d-112"><xref:System.Collections.Generic.Queue%601.Peek%2A> peek returns the oldest element that is at the start of the <xref:System.Collections.Generic.Queue%601> but does not remove it from the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
 <span data-ttu-id="c647d-113">容量<xref:System.Collections.Generic.Queue%601>是項目數目<xref:System.Collections.Generic.Queue%601>可以保存。</span><span class="sxs-lookup"><span data-stu-id="c647d-113">The capacity of a <xref:System.Collections.Generic.Queue%601> is the number of elements the <xref:System.Collections.Generic.Queue%601> can hold.</span></span> <span data-ttu-id="c647d-114">當項目加入至<xref:System.Collections.Generic.Queue%601>，就會自動增加容量的要求以重新配置內部的陣列。</span><span class="sxs-lookup"><span data-stu-id="c647d-114">As elements are added to a <xref:System.Collections.Generic.Queue%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span> <span data-ttu-id="c647d-115">藉由呼叫，您可以減少容量<xref:System.Collections.Generic.Queue%601.TrimExcess%2A>。</span><span class="sxs-lookup"><span data-stu-id="c647d-115">The capacity can be decreased by calling <xref:System.Collections.Generic.Queue%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="c647d-116"><xref:System.Collections.Generic.Queue%601> 接受`null`參考有效的值類型，並允許重複的項目。</span><span class="sxs-lookup"><span data-stu-id="c647d-116"><xref:System.Collections.Generic.Queue%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c647d-117">下列程式碼範例示範幾個方法來<xref:System.Collections.Generic.Queue%601>泛型類別。</span><span class="sxs-lookup"><span data-stu-id="c647d-117">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Queue%601> generic class.</span></span> <span data-ttu-id="c647d-118">程式碼範例會建立字串的佇列預設容量，並使用<xref:System.Collections.Generic.Queue%601.Enqueue%2A>佇列五個字串的方法。</span><span class="sxs-lookup"><span data-stu-id="c647d-118">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="c647d-119">列舉佇列的項目，這不會變更佇列的狀態。</span><span class="sxs-lookup"><span data-stu-id="c647d-119">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="c647d-120"><xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來清除佇列的第一個字串。</span><span class="sxs-lookup"><span data-stu-id="c647d-120">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="c647d-121"><xref:System.Collections.Generic.Queue%601.Peek%2A>方法用來查看佇列中下一個項目，然後<xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來從佇列中清除。</span><span class="sxs-lookup"><span data-stu-id="c647d-121">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="c647d-122"><xref:System.Collections.Generic.Queue%601.ToArray%2A>方法用來建立陣列，並將佇列項目複製到它，然後將陣列傳遞至<xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式<xref:System.Collections.Generic.IEnumerable%601>，建立佇列的複本。</span><span class="sxs-lookup"><span data-stu-id="c647d-122">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="c647d-123">複製的項目會顯示。</span><span class="sxs-lookup"><span data-stu-id="c647d-123">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="c647d-124">兩次的佇列大小建立陣列，而<xref:System.Collections.Generic.Queue%601.CopyTo%2A>方法用來複製開始中間之陣列的陣列元素。</span><span class="sxs-lookup"><span data-stu-id="c647d-124">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="c647d-125"><xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式一次用來建立包含三個開頭的 null 項目佇列的第二個副本。</span><span class="sxs-lookup"><span data-stu-id="c647d-125">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="c647d-126"><xref:System.Collections.Generic.Queue%601.Contains%2A>方法用來顯示"4"的字串是在佇列中的第一個複本之後<xref:System.Collections.Generic.Queue%601.Clear%2A>方法清除複製和<xref:System.Collections.Generic.Queue%601.Count%2A>屬性會顯示佇列是空的。</span><span class="sxs-lookup"><span data-stu-id="c647d-126">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="c647d-127">公用靜態 (<see langword="Shared" />在 Visual Basic 中) 這種類型的成員都具備執行緒安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c647d-127">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="c647d-128">不保證任何執行個體成員是安全執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c647d-128">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="c647d-129">A<see cref="T:System.Collections.Generic.Queue`1" />可以支援多個讀取器同時，只要未修改集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c647d-129">A <see cref="T:System.Collections.Generic.Queue`1" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="c647d-130">即便如此，列舉集合在本質上並非安全執行緒程序。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c647d-130">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="c647d-131">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c647d-131">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span>
      </span>
      <span data-ttu-id="c647d-132">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c647d-132">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c647d-133">初始化 <see cref="T:System.Collections.Generic.Queue`1" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-133">Initializes a new instance of the <see cref="T:System.Collections.Generic.Queue`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Queue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Queue();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c647d-134">初始化 <see cref="T:System.Collections.Generic.Queue`1" /> 類別的新執行個體，這個執行個體為空白且具有預設的初始容量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-134">Initializes a new instance of the <see cref="T:System.Collections.Generic.Queue`1" /> class that is empty and has the default initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c647d-135">容量<xref:System.Collections.Generic.Queue%601>是項目數目，<xref:System.Collections.Generic.Queue%601>可以保存。</span><span class="sxs-lookup"><span data-stu-id="c647d-135">The capacity of a <xref:System.Collections.Generic.Queue%601> is the number of elements that the <xref:System.Collections.Generic.Queue%601> can hold.</span></span> <span data-ttu-id="c647d-136">當項目加入至<xref:System.Collections.Generic.Queue%601>，就會自動增加容量的要求以重新配置內部的陣列。</span><span class="sxs-lookup"><span data-stu-id="c647d-136">As elements are added to a <xref:System.Collections.Generic.Queue%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="c647d-137">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至<xref:System.Collections.Generic.Queue%601>。</span><span class="sxs-lookup"><span data-stu-id="c647d-137">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
 <span data-ttu-id="c647d-138">藉由呼叫，您可以減少容量<xref:System.Collections.Generic.Queue%601.TrimExcess%2A>。</span><span class="sxs-lookup"><span data-stu-id="c647d-138">The capacity can be decreased by calling <xref:System.Collections.Generic.Queue%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="c647d-139">這個建構函式是 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="c647d-139">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c647d-140">下列程式碼範例示範這個建構函式，以及其他幾個方法來<xref:System.Collections.Generic.Queue%601>泛型類別。</span><span class="sxs-lookup"><span data-stu-id="c647d-140">The following code example demonstrates this constructor and several other methods of the <xref:System.Collections.Generic.Queue%601> generic class.</span></span> <span data-ttu-id="c647d-141">程式碼範例會建立字串的佇列預設容量，並使用<xref:System.Collections.Generic.Queue%601.Enqueue%2A>佇列五個字串的方法。</span><span class="sxs-lookup"><span data-stu-id="c647d-141">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="c647d-142">列舉佇列的項目，這不會變更佇列的狀態。</span><span class="sxs-lookup"><span data-stu-id="c647d-142">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="c647d-143"><xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來清除佇列的第一個字串。</span><span class="sxs-lookup"><span data-stu-id="c647d-143">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="c647d-144"><xref:System.Collections.Generic.Queue%601.Peek%2A>方法用來查看佇列中下一個項目，然後<xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來從佇列中清除。</span><span class="sxs-lookup"><span data-stu-id="c647d-144">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="c647d-145"><xref:System.Collections.Generic.Queue%601.ToArray%2A>方法用來建立陣列，並將佇列項目複製到它，然後將陣列傳遞至<xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式<xref:System.Collections.Generic.IEnumerable%601>，建立佇列的複本。</span><span class="sxs-lookup"><span data-stu-id="c647d-145">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="c647d-146">複製的項目會顯示。</span><span class="sxs-lookup"><span data-stu-id="c647d-146">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="c647d-147">兩次的佇列大小建立陣列，而<xref:System.Collections.Generic.Queue%601.CopyTo%2A>方法用來複製開始中間之陣列的陣列元素。</span><span class="sxs-lookup"><span data-stu-id="c647d-147">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="c647d-148"><xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式一次用來建立包含三個開頭的 null 項目佇列的第二個副本。</span><span class="sxs-lookup"><span data-stu-id="c647d-148">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="c647d-149"><xref:System.Collections.Generic.Queue%601.Contains%2A>方法用來顯示"4"的字串是在佇列中的第一個複本之後<xref:System.Collections.Generic.Queue%601.Clear%2A>方法清除複製和<xref:System.Collections.Generic.Queue%601.Count%2A>屬性會顯示佇列是空的。</span><span class="sxs-lookup"><span data-stu-id="c647d-149">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Queue (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Queue(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="c647d-150">集合，要將其項目複製至新的 <see cref="T:System.Collections.Generic.Queue`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-150">The collection whose elements are copied to the new <see cref="T:System.Collections.Generic.Queue`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c647d-151">初始化 <see cref="T:System.Collections.Generic.Queue`1" /> 類別的新執行個體，其包含從指定之集合複製的項目，且具有容納複製之項目數目的足夠容量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-151">Initializes a new instance of the <see cref="T:System.Collections.Generic.Queue`1" /> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c647d-152">容量<xref:System.Collections.Generic.Queue%601>是項目數目，<xref:System.Collections.Generic.Queue%601>可以保存。</span><span class="sxs-lookup"><span data-stu-id="c647d-152">The capacity of a <xref:System.Collections.Generic.Queue%601> is the number of elements that the <xref:System.Collections.Generic.Queue%601> can hold.</span></span> <span data-ttu-id="c647d-153">當項目加入至<xref:System.Collections.Generic.Queue%601>，就會自動增加容量的要求以重新配置內部的陣列。</span><span class="sxs-lookup"><span data-stu-id="c647d-153">As elements are added to a <xref:System.Collections.Generic.Queue%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="c647d-154">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至<xref:System.Collections.Generic.Queue%601>。</span><span class="sxs-lookup"><span data-stu-id="c647d-154">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
 <span data-ttu-id="c647d-155">藉由呼叫，您可以減少容量<xref:System.Collections.Generic.Queue%601.TrimExcess%2A>。</span><span class="sxs-lookup"><span data-stu-id="c647d-155">The capacity can be decreased by calling <xref:System.Collections.Generic.Queue%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="c647d-156">將元素複製到<xref:System.Collections.Generic.Queue%601>所讀取的順序相同<xref:System.Collections.Generic.IEnumerator%601>的集合。</span><span class="sxs-lookup"><span data-stu-id="c647d-156">The elements are copied onto the <xref:System.Collections.Generic.Queue%601> in the same order they are read by the <xref:System.Collections.Generic.IEnumerator%601> of the collection.</span></span>  
  
 <span data-ttu-id="c647d-157">這個建構函式為 O (`n`) 作業，其中`n`是中的項目數`collection`。</span><span class="sxs-lookup"><span data-stu-id="c647d-157">This constructor is an O(`n`) operation, where `n` is the number of elements in `collection`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c647d-158">下列程式碼範例示範這個建構函式，以及其他幾個方法來<xref:System.Collections.Generic.Queue%601>泛型類別。</span><span class="sxs-lookup"><span data-stu-id="c647d-158">The following code example demonstrates this constructor and several other methods of the <xref:System.Collections.Generic.Queue%601> generic class.</span></span> <span data-ttu-id="c647d-159">程式碼範例會建立字串的佇列預設容量，並使用<xref:System.Collections.Generic.Queue%601.Enqueue%2A>佇列五個字串的方法。</span><span class="sxs-lookup"><span data-stu-id="c647d-159">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="c647d-160">列舉佇列的項目，這不會變更佇列的狀態。</span><span class="sxs-lookup"><span data-stu-id="c647d-160">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="c647d-161"><xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來清除佇列的第一個字串。</span><span class="sxs-lookup"><span data-stu-id="c647d-161">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="c647d-162"><xref:System.Collections.Generic.Queue%601.Peek%2A>方法用來查看佇列中下一個項目，然後<xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來從佇列中清除。</span><span class="sxs-lookup"><span data-stu-id="c647d-162">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="c647d-163"><xref:System.Collections.Generic.Queue%601.ToArray%2A>方法用來建立陣列，並將佇列項目複製到它，然後將陣列傳遞至<xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式<xref:System.Collections.Generic.IEnumerable%601>，建立佇列的複本。</span><span class="sxs-lookup"><span data-stu-id="c647d-163">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="c647d-164">複製的項目會顯示。</span><span class="sxs-lookup"><span data-stu-id="c647d-164">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="c647d-165">兩次的佇列大小建立陣列，而<xref:System.Collections.Generic.Queue%601.CopyTo%2A>方法用來複製開始中間之陣列的陣列元素。</span><span class="sxs-lookup"><span data-stu-id="c647d-165">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="c647d-166"><xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式一次用來建立包含三個開頭的 null 項目佇列的第二個副本。</span><span class="sxs-lookup"><span data-stu-id="c647d-166">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="c647d-167"><xref:System.Collections.Generic.Queue%601.Contains%2A>方法用來顯示"4"的字串是在佇列中的第一個複本之後<xref:System.Collections.Generic.Queue%601.Clear%2A>方法清除複製和<xref:System.Collections.Generic.Queue%601.Count%2A>屬性會顯示佇列是空的。</span><span class="sxs-lookup"><span data-stu-id="c647d-167">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c647d-168">
            <paramref name="collection" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-168">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Queue (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Queue(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="c647d-169">
            <see cref="T:System.Collections.Generic.Queue`1" /> 可包含的初始項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-169">The initial number of elements that the <see cref="T:System.Collections.Generic.Queue`1" /> can contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c647d-170">為具有指定初始容量且為空的 <see cref="T:System.Collections.Generic.Queue`1" /> 類別，初始化新的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-170">Initializes a new instance of the <see cref="T:System.Collections.Generic.Queue`1" /> class that is empty and has the specified initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c647d-171">容量<xref:System.Collections.Generic.Queue%601>是項目數目，<xref:System.Collections.Generic.Queue%601>可以保存。</span><span class="sxs-lookup"><span data-stu-id="c647d-171">The capacity of a <xref:System.Collections.Generic.Queue%601> is the number of elements that the <xref:System.Collections.Generic.Queue%601> can hold.</span></span> <span data-ttu-id="c647d-172">當項目加入至<xref:System.Collections.Generic.Queue%601>，就會自動增加容量的要求以重新配置內部的陣列。</span><span class="sxs-lookup"><span data-stu-id="c647d-172">As elements are added to a <xref:System.Collections.Generic.Queue%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="c647d-173">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至<xref:System.Collections.Generic.Queue%601>。</span><span class="sxs-lookup"><span data-stu-id="c647d-173">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
 <span data-ttu-id="c647d-174">藉由呼叫，您可以減少容量<xref:System.Collections.Generic.Queue%601.TrimExcess%2A>。</span><span class="sxs-lookup"><span data-stu-id="c647d-174">The capacity can be decreased by calling <xref:System.Collections.Generic.Queue%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="c647d-175">這個建構函式為 O (`n`) 作業，其中`n`是`capacity`。</span><span class="sxs-lookup"><span data-stu-id="c647d-175">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c647d-176">
            <paramref name="capacity" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-176">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c647d-177">從 <see cref="T:System.Collections.Generic.Queue`1" /> 移除所有物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-177">Removes all objects from the <see cref="T:System.Collections.Generic.Queue`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c647d-178"><xref:System.Collections.Generic.Queue%601.Count%2A> 已設為零，並從項目集合的其他物件的參考也會釋放。</span><span class="sxs-lookup"><span data-stu-id="c647d-178"><xref:System.Collections.Generic.Queue%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="c647d-179">容量會維持不變。</span><span class="sxs-lookup"><span data-stu-id="c647d-179">The capacity remains unchanged.</span></span> <span data-ttu-id="c647d-180">若要重設的容量<xref:System.Collections.Generic.Queue%601>，呼叫<xref:System.Collections.Generic.Queue%601.TrimExcess%2A>。</span><span class="sxs-lookup"><span data-stu-id="c647d-180">To reset the capacity of the <xref:System.Collections.Generic.Queue%601>, call <xref:System.Collections.Generic.Queue%601.TrimExcess%2A>.</span></span> <span data-ttu-id="c647d-181">修剪空白<xref:System.Collections.Generic.Queue%601>設定的容量<xref:System.Collections.Generic.Queue%601>預設容量。</span><span class="sxs-lookup"><span data-stu-id="c647d-181">Trimming an empty <xref:System.Collections.Generic.Queue%601> sets the capacity of the <xref:System.Collections.Generic.Queue%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="c647d-182">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.Generic.Queue%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="c647d-182">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Queue%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c647d-183">下列程式碼範例示範幾個方法來<xref:System.Collections.Generic.Queue%601>泛型類別，包括<xref:System.Collections.Generic.Queue%601.Clear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c647d-183">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Queue%601> generic class, including the <xref:System.Collections.Generic.Queue%601.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="c647d-184">程式碼範例會建立字串的佇列預設容量，並使用<xref:System.Collections.Generic.Queue%601.Enqueue%2A>佇列五個字串的方法。</span><span class="sxs-lookup"><span data-stu-id="c647d-184">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="c647d-185">列舉佇列的項目，這不會變更佇列的狀態。</span><span class="sxs-lookup"><span data-stu-id="c647d-185">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="c647d-186"><xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來清除佇列的第一個字串。</span><span class="sxs-lookup"><span data-stu-id="c647d-186">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="c647d-187"><xref:System.Collections.Generic.Queue%601.Peek%2A>方法用來查看佇列中下一個項目，然後<xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來從佇列中清除。</span><span class="sxs-lookup"><span data-stu-id="c647d-187">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="c647d-188"><xref:System.Collections.Generic.Queue%601.ToArray%2A>方法用來建立陣列，並將佇列項目複製到它，然後將陣列傳遞至<xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式<xref:System.Collections.Generic.IEnumerable%601>，建立佇列的複本。</span><span class="sxs-lookup"><span data-stu-id="c647d-188">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="c647d-189">複製的項目會顯示。</span><span class="sxs-lookup"><span data-stu-id="c647d-189">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="c647d-190">兩次的佇列大小建立陣列，而<xref:System.Collections.Generic.Queue%601.CopyTo%2A>方法用來複製開始中間之陣列的陣列元素。</span><span class="sxs-lookup"><span data-stu-id="c647d-190">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="c647d-191"><xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式一次用來建立包含三個開頭的 null 項目佇列的第二個副本。</span><span class="sxs-lookup"><span data-stu-id="c647d-191">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="c647d-192"><xref:System.Collections.Generic.Queue%601.Contains%2A>方法用來顯示"4"的字串是在佇列中的第一個複本之後<xref:System.Collections.Generic.Queue%601.Clear%2A>方法清除複製和<xref:System.Collections.Generic.Queue%601.Count%2A>屬性會顯示佇列是空的。</span><span class="sxs-lookup"><span data-stu-id="c647d-192">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Queue`1.TrimExcess" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="c647d-193">要在 <see cref="T:System.Collections.Generic.Queue`1" /> 中尋找的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-193">The object to locate in the <see cref="T:System.Collections.Generic.Queue`1" />.</span>
          </span>
          <span data-ttu-id="c647d-194">參考類型的值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-194">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c647d-195">判斷某項目是否在 <see cref="T:System.Collections.Generic.Queue`1" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-195">Determines whether an element is in the <see cref="T:System.Collections.Generic.Queue`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c647d-196">如果在 <see langword="true" /> 中找到 <paramref name="item" />，則為 <see cref="T:System.Collections.Generic.Queue`1" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-196">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.Queue`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c647d-197">這個方法會決定使用的預設相等比較子的等號比較<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>如`T`，佇列中的值型別。</span><span class="sxs-lookup"><span data-stu-id="c647d-197">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the queue.</span></span>  
  
 <span data-ttu-id="c647d-198">這個方法會執行線性搜尋;因此，這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.Generic.Queue%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="c647d-198">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Queue%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c647d-199">下列程式碼範例示範幾個方法來<xref:System.Collections.Generic.Queue%601>泛型類別，包括<xref:System.Collections.Generic.Queue%601.Contains%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c647d-199">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Queue%601> generic class, including the <xref:System.Collections.Generic.Queue%601.Contains%2A> method.</span></span>  
  
 <span data-ttu-id="c647d-200">程式碼範例會建立字串的佇列預設容量，並使用<xref:System.Collections.Generic.Queue%601.Enqueue%2A>佇列五個字串的方法。</span><span class="sxs-lookup"><span data-stu-id="c647d-200">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="c647d-201">列舉佇列的項目，這不會變更佇列的狀態。</span><span class="sxs-lookup"><span data-stu-id="c647d-201">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="c647d-202"><xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來清除佇列的第一個字串。</span><span class="sxs-lookup"><span data-stu-id="c647d-202">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="c647d-203"><xref:System.Collections.Generic.Queue%601.Peek%2A>方法用來查看佇列中下一個項目，然後<xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來從佇列中清除。</span><span class="sxs-lookup"><span data-stu-id="c647d-203">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="c647d-204"><xref:System.Collections.Generic.Queue%601.ToArray%2A>方法用來建立陣列，並將佇列項目複製到它，然後將陣列傳遞至<xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式<xref:System.Collections.Generic.IEnumerable%601>，建立佇列的複本。</span><span class="sxs-lookup"><span data-stu-id="c647d-204">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="c647d-205">複製的項目會顯示。</span><span class="sxs-lookup"><span data-stu-id="c647d-205">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="c647d-206">兩次的佇列大小建立陣列，而<xref:System.Collections.Generic.Queue%601.CopyTo%2A>方法用來複製開始中間之陣列的陣列元素。</span><span class="sxs-lookup"><span data-stu-id="c647d-206">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="c647d-207"><xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式一次用來建立包含三個開頭的 null 項目佇列的第二個副本。</span><span class="sxs-lookup"><span data-stu-id="c647d-207">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="c647d-208"><xref:System.Collections.Generic.Queue%601.Contains%2A>方法用來顯示"4"的字串是在佇列中的第一個複本之後<xref:System.Collections.Generic.Queue%601.Clear%2A>方法清除複製和<xref:System.Collections.Generic.Queue%601.Count%2A>屬性會顯示佇列是空的。</span><span class="sxs-lookup"><span data-stu-id="c647d-208">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="c647d-209">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Collections.Generic.Queue`1" /> 複製過來之項目的目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-209">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.Queue`1" />.</span>
          </span>
          <span data-ttu-id="c647d-210">
            <see cref="T:System.Array" /> 必須有以零為起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-210">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="c647d-211">
            <c>array</c> 中以零起始的索引，複製作業從此處開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-211">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c647d-212">從指定的陣列索引處開始，複製 <see cref="T:System.Collections.Generic.Queue`1" /> 項目至現有一維 <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-212">Copies the <see cref="T:System.Collections.Generic.Queue`1" /> elements to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c647d-213">將元素複製到<xref:System.Array>以相同的順序，以列舉值逐一<xref:System.Collections.Generic.Queue%601>。</span><span class="sxs-lookup"><span data-stu-id="c647d-213">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
 <span data-ttu-id="c647d-214">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.Generic.Queue%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="c647d-214">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Queue%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c647d-215">
            <paramref name="array" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-215">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c647d-216">
            <paramref name="arrayIndex" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-216">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c647d-217">來源 <see cref="T:System.Collections.Generic.Queue`1" /> 中的項目數目，大於 <paramref name="arrayIndex" /> 到目的 <paramref name="array" /> 結尾的可用空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-217">The number of elements in the source <see cref="T:System.Collections.Generic.Queue`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Queue`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c647d-218">取得 <see cref="T:System.Collections.Generic.Queue`1" /> 中所包含的項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-218">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.Queue`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c647d-219">
            <see cref="T:System.Collections.Generic.Queue`1" /> 中所包含的項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-219">The number of elements contained in the <see cref="T:System.Collections.Generic.Queue`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c647d-220">容量<xref:System.Collections.Generic.Queue%601>是項目數目，<xref:System.Collections.Generic.Queue%601>可以儲存。</span><span class="sxs-lookup"><span data-stu-id="c647d-220">The capacity of a <xref:System.Collections.Generic.Queue%601> is the number of elements that the <xref:System.Collections.Generic.Queue%601> can store.</span></span> <span data-ttu-id="c647d-221"><xref:System.Collections.Generic.Queue%601.Count%2A> 是實際的項目數目<xref:System.Collections.Generic.Queue%601>。</span><span class="sxs-lookup"><span data-stu-id="c647d-221"><xref:System.Collections.Generic.Queue%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
 <span data-ttu-id="c647d-222">大於或等於容量是一律<xref:System.Collections.Generic.Queue%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="c647d-222">The capacity is always greater than or equal to <xref:System.Collections.Generic.Queue%601.Count%2A>.</span></span> <span data-ttu-id="c647d-223">如果<xref:System.Collections.Generic.Queue%601.Count%2A>超過容量加入項目時，會增加容量會自動重新內部陣列配置之前複製的舊項目並加入新項目。</span><span class="sxs-lookup"><span data-stu-id="c647d-223">If <xref:System.Collections.Generic.Queue%601.Count%2A> exceeds the capacity while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="c647d-224">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="c647d-224">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c647d-225">下列程式碼範例示範數個屬性和方法<xref:System.Collections.Generic.Queue%601>泛型類別，包括<xref:System.Collections.Generic.Queue%601.Count%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="c647d-225">The following code example demonstrates several properties and methods of the <xref:System.Collections.Generic.Queue%601> generic class, including the <xref:System.Collections.Generic.Queue%601.Count%2A> property.</span></span>  
  
 <span data-ttu-id="c647d-226">程式碼範例會建立字串的佇列預設容量，並使用<xref:System.Collections.Generic.Queue%601.Enqueue%2A>佇列五個字串的方法。</span><span class="sxs-lookup"><span data-stu-id="c647d-226">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="c647d-227">列舉佇列的項目，這不會變更佇列的狀態。</span><span class="sxs-lookup"><span data-stu-id="c647d-227">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="c647d-228"><xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來清除佇列的第一個字串。</span><span class="sxs-lookup"><span data-stu-id="c647d-228">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="c647d-229"><xref:System.Collections.Generic.Queue%601.Peek%2A>方法用來查看佇列中下一個項目，然後<xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來從佇列中清除。</span><span class="sxs-lookup"><span data-stu-id="c647d-229">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="c647d-230"><xref:System.Collections.Generic.Queue%601.ToArray%2A>方法用來建立陣列，並將佇列項目複製到它，然後將陣列傳遞至<xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式<xref:System.Collections.Generic.IEnumerable%601>，建立佇列的複本。</span><span class="sxs-lookup"><span data-stu-id="c647d-230">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="c647d-231">複製的項目會顯示。</span><span class="sxs-lookup"><span data-stu-id="c647d-231">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="c647d-232">兩次的佇列大小建立陣列，而<xref:System.Collections.Generic.Queue%601.CopyTo%2A>方法用來複製開始中間之陣列的陣列元素。</span><span class="sxs-lookup"><span data-stu-id="c647d-232">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="c647d-233"><xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式一次用來建立包含三個開頭的 null 項目佇列的第二個副本。</span><span class="sxs-lookup"><span data-stu-id="c647d-233">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="c647d-234"><xref:System.Collections.Generic.Queue%601.Contains%2A>方法用來顯示"4"的字串是在佇列中的第一個複本之後<xref:System.Collections.Generic.Queue%601.Clear%2A>方法清除複製和<xref:System.Collections.Generic.Queue%601.Count%2A>屬性會顯示佇列是空的。</span><span class="sxs-lookup"><span data-stu-id="c647d-234">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dequeue">
      <MemberSignature Language="C#" Value="public T Dequeue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Dequeue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.Dequeue" />
      <MemberSignature Language="VB.NET" Value="Public Function Dequeue () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Dequeue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c647d-235">移除並傳回在 <see cref="T:System.Collections.Generic.Queue`1" /> 開頭的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-235">Removes and returns the object at the beginning of the <see cref="T:System.Collections.Generic.Queue`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c647d-236">從 <see cref="T:System.Collections.Generic.Queue`1" /> 的開頭移除的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-236">The object that is removed from the beginning of the <see cref="T:System.Collections.Generic.Queue`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c647d-237">這個方法與 <xref:System.Collections.Generic.Queue%601.Peek%2A> 方法類似，但是 <xref:System.Collections.Generic.Queue%601.Peek%2A> 不會修改 <xref:System.Collections.Generic.Queue%601>。</span><span class="sxs-lookup"><span data-stu-id="c647d-237">This method is similar to the <xref:System.Collections.Generic.Queue%601.Peek%2A> method, but <xref:System.Collections.Generic.Queue%601.Peek%2A> does not modify the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
 <span data-ttu-id="c647d-238">如果型別`T`是參考型別，`null`可以加入至<xref:System.Collections.Generic.Queue%601>做為值。</span><span class="sxs-lookup"><span data-stu-id="c647d-238">If type `T` is a reference type, `null` can be added to the <xref:System.Collections.Generic.Queue%601> as a value.</span></span>  
  
 <span data-ttu-id="c647d-239">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="c647d-239">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c647d-240">下列程式碼範例示範幾個方法來<xref:System.Collections.Generic.Queue%601>泛型類別，包括<xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c647d-240">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Queue%601> generic class, including the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method.</span></span>  
  
 <span data-ttu-id="c647d-241">程式碼範例會建立字串的佇列預設容量，並使用<xref:System.Collections.Generic.Queue%601.Enqueue%2A>佇列五個字串的方法。</span><span class="sxs-lookup"><span data-stu-id="c647d-241">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="c647d-242">列舉佇列的項目，這不會變更佇列的狀態。</span><span class="sxs-lookup"><span data-stu-id="c647d-242">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="c647d-243"><xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來清除佇列的第一個字串。</span><span class="sxs-lookup"><span data-stu-id="c647d-243">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="c647d-244"><xref:System.Collections.Generic.Queue%601.Peek%2A>方法用來查看佇列中下一個項目，然後<xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來從佇列中清除。</span><span class="sxs-lookup"><span data-stu-id="c647d-244">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="c647d-245"><xref:System.Collections.Generic.Queue%601.ToArray%2A>方法用來建立陣列，並將佇列項目複製到它，然後將陣列傳遞至<xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式<xref:System.Collections.Generic.IEnumerable%601>，建立佇列的複本。</span><span class="sxs-lookup"><span data-stu-id="c647d-245">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="c647d-246">複製的項目會顯示。</span><span class="sxs-lookup"><span data-stu-id="c647d-246">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="c647d-247">兩次的佇列大小建立陣列，而<xref:System.Collections.Generic.Queue%601.CopyTo%2A>方法用來複製開始中間之陣列的陣列元素。</span><span class="sxs-lookup"><span data-stu-id="c647d-247">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="c647d-248"><xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式一次用來建立包含三個開頭的 null 項目佇列的第二個副本。</span><span class="sxs-lookup"><span data-stu-id="c647d-248">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="c647d-249"><xref:System.Collections.Generic.Queue%601.Contains%2A>方法用來顯示"4"的字串是在佇列中的第一個複本之後<xref:System.Collections.Generic.Queue%601.Clear%2A>方法清除複製和<xref:System.Collections.Generic.Queue%601.Count%2A>屬性會顯示佇列是空的。</span><span class="sxs-lookup"><span data-stu-id="c647d-249">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c647d-250">
            <see cref="T:System.Collections.Generic.Queue`1" /> 是空的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-250">The <see cref="T:System.Collections.Generic.Queue`1" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.Queue`1.Enqueue(`0)" />
        <altmember cref="M:System.Collections.Generic.Queue`1.Peek" />
      </Docs>
    </Member>
    <Member MemberName="Enqueue">
      <MemberSignature Language="C#" Value="public void Enqueue (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Enqueue(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.Enqueue(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Enqueue (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Enqueue(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="c647d-251">要加入至 <see cref="T:System.Collections.Generic.Queue`1" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-251">The object to add to the <see cref="T:System.Collections.Generic.Queue`1" />.</span>
          </span>
          <span data-ttu-id="c647d-252">參考類型的值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-252">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c647d-253">將物件加入至 <see cref="T:System.Collections.Generic.Queue`1" /> 的末端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-253">Adds an object to the end of the <see cref="T:System.Collections.Generic.Queue`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c647d-254">如果<xref:System.Collections.Generic.Queue%601.Count%2A>已等於容量，容量<xref:System.Collections.Generic.Queue%601>增加的自動重新配置內部的陣列，並加入新項目之前現有的項目複製到新陣列。</span><span class="sxs-lookup"><span data-stu-id="c647d-254">If <xref:System.Collections.Generic.Queue%601.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Generic.Queue%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="c647d-255">如果<xref:System.Collections.Generic.Queue%601.Count%2A>小於比內部陣列的容量，這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="c647d-255">If <xref:System.Collections.Generic.Queue%601.Count%2A> is less than the capacity of the internal array, this method is an O(1) operation.</span></span> <span data-ttu-id="c647d-256">如果需要重新配置以容納新項目內部的陣列，這個方法會變成 O (`n`) 作業，其中`n`是<xref:System.Collections.Generic.Queue%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="c647d-256">If the internal array needs to be reallocated to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Queue%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c647d-257">下列程式碼範例示範幾個方法來<xref:System.Collections.Generic.Queue%601>泛型類別，包括<xref:System.Collections.Generic.Queue%601.Enqueue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c647d-257">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Queue%601> generic class, including the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method.</span></span>  
  
 <span data-ttu-id="c647d-258">程式碼範例會建立字串的佇列預設容量，並使用<xref:System.Collections.Generic.Queue%601.Enqueue%2A>佇列五個字串的方法。</span><span class="sxs-lookup"><span data-stu-id="c647d-258">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="c647d-259">列舉佇列的項目，這不會變更佇列的狀態。</span><span class="sxs-lookup"><span data-stu-id="c647d-259">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="c647d-260"><xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來清除佇列的第一個字串。</span><span class="sxs-lookup"><span data-stu-id="c647d-260">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="c647d-261"><xref:System.Collections.Generic.Queue%601.Peek%2A>方法用來查看佇列中下一個項目，然後<xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來從佇列中清除。</span><span class="sxs-lookup"><span data-stu-id="c647d-261">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="c647d-262"><xref:System.Collections.Generic.Queue%601.ToArray%2A>方法用來建立陣列，並將佇列項目複製到它，然後將陣列傳遞至<xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式<xref:System.Collections.Generic.IEnumerable%601>，建立佇列的複本。</span><span class="sxs-lookup"><span data-stu-id="c647d-262">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="c647d-263">複製的項目會顯示。</span><span class="sxs-lookup"><span data-stu-id="c647d-263">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="c647d-264">兩次的佇列大小建立陣列，而<xref:System.Collections.Generic.Queue%601.CopyTo%2A>方法用來複製開始中間之陣列的陣列元素。</span><span class="sxs-lookup"><span data-stu-id="c647d-264">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="c647d-265"><xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式一次用來建立包含三個開頭的 null 項目佇列的第二個副本。</span><span class="sxs-lookup"><span data-stu-id="c647d-265">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="c647d-266"><xref:System.Collections.Generic.Queue%601.Contains%2A>方法用來顯示"4"的字串是在佇列中的第一個複本之後<xref:System.Collections.Generic.Queue%601.Clear%2A>方法清除複製和<xref:System.Collections.Generic.Queue%601.Count%2A>屬性會顯示佇列是空的。</span><span class="sxs-lookup"><span data-stu-id="c647d-266">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Queue`1.Dequeue" />
        <altmember cref="M:System.Collections.Generic.Queue`1.Peek" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Queue&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.Queue`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As Queue(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::Queue&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Queue&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c647d-267">傳回在 <see cref="T:System.Collections.Generic.Queue`1" /> 中逐一查看的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-267">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.Queue`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c647d-268">
            <see cref="T:System.Collections.Generic.Queue`1.Enumerator" /> 的 <see cref="T:System.Collections.Generic.Queue`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-268">An <see cref="T:System.Collections.Generic.Queue`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.Queue`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c647d-269">`foreach` C# 語言的陳述式 (`for each` c + +`For Each`在 Visual Basic 中) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="c647d-269">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="c647d-270">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="c647d-270">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="c647d-271">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="c647d-271">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="c647d-272">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="c647d-272">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="c647d-273">在這個位置上，<xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> 並未定義。</span><span class="sxs-lookup"><span data-stu-id="c647d-273">At this position, <xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="c647d-274">因此，在讀取 <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> 的值之前，必須呼叫 <xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="c647d-274">Therefore, you must call <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="c647d-275"><xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="c647d-275"><xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="c647d-276"><xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> 會將 <xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="c647d-276"><xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="c647d-277">如果<xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="c647d-277">If <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="c647d-278">列舉值位於這個位置上，後續呼叫<xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="c647d-278">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="c647d-279">如果最後一個呼叫<xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="c647d-279">If the last call to <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="c647d-280">您不能再次將 <xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> 設定為集合的第一個項目；您必須建立新的列舉值執行個體。</span><span class="sxs-lookup"><span data-stu-id="c647d-280">You cannot set <xref:System.Collections.Generic.Queue%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="c647d-281">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="c647d-281">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="c647d-282">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A>或<xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="c647d-282">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.Queue%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.Queue%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="c647d-283">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="c647d-283">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="c647d-284">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="c647d-284">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="c647d-285">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="c647d-285">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="c647d-286">集合中的預設實作<xref:System.Collections.Generic?displayProperty=nameWithType>未同步處理。</span><span class="sxs-lookup"><span data-stu-id="c647d-286">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="c647d-287">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="c647d-287">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c647d-288">下列程式碼範例會示範<xref:System.Collections.Generic.Queue%601>是可列舉的泛型類別。</span><span class="sxs-lookup"><span data-stu-id="c647d-288">The following code example demonstrates that the <xref:System.Collections.Generic.Queue%601> generic class is enumerable.</span></span> <span data-ttu-id="c647d-289">`foreach`陳述式 (`For Each`在 Visual Basic 中`for each`c + + 中) 用來列舉佇列。</span><span class="sxs-lookup"><span data-stu-id="c647d-289">The `foreach` statement (`For Each` in Visual Basic, `for each` in C++) is used to enumerate the queue.</span></span>  
  
 <span data-ttu-id="c647d-290">程式碼範例會建立字串的佇列預設容量，並使用<xref:System.Collections.Generic.Queue%601.Enqueue%2A>佇列五個字串的方法。</span><span class="sxs-lookup"><span data-stu-id="c647d-290">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="c647d-291">列舉佇列的項目，這不會變更佇列的狀態。</span><span class="sxs-lookup"><span data-stu-id="c647d-291">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="c647d-292"><xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來清除佇列的第一個字串。</span><span class="sxs-lookup"><span data-stu-id="c647d-292">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="c647d-293"><xref:System.Collections.Generic.Queue%601.Peek%2A>方法用來查看佇列中下一個項目，然後<xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來從佇列中清除。</span><span class="sxs-lookup"><span data-stu-id="c647d-293">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="c647d-294"><xref:System.Collections.Generic.Queue%601.ToArray%2A>方法用來建立陣列，並將佇列項目複製到它，然後將陣列傳遞至<xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式<xref:System.Collections.Generic.IEnumerable%601>，建立佇列的複本。</span><span class="sxs-lookup"><span data-stu-id="c647d-294">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="c647d-295">複製的項目會顯示。</span><span class="sxs-lookup"><span data-stu-id="c647d-295">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="c647d-296">兩次的佇列大小建立陣列，而<xref:System.Collections.Generic.Queue%601.CopyTo%2A>方法用來複製開始中間之陣列的陣列元素。</span><span class="sxs-lookup"><span data-stu-id="c647d-296">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="c647d-297"><xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式一次用來建立包含三個開頭的 null 項目佇列的第二個副本。</span><span class="sxs-lookup"><span data-stu-id="c647d-297">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="c647d-298"><xref:System.Collections.Generic.Queue%601.Contains%2A>方法用來顯示"4"的字串是在佇列中的第一個複本之後<xref:System.Collections.Generic.Queue%601.Clear%2A>方法清除複製和<xref:System.Collections.Generic.Queue%601.Count%2A>屬性會顯示佇列是空的。</span><span class="sxs-lookup"><span data-stu-id="c647d-298">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.Queue`1.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public T Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Peek();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c647d-299">傳回 <see cref="T:System.Collections.Generic.Queue`1" /> 開頭的物件而不移除它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-299">Returns the object at the beginning of the <see cref="T:System.Collections.Generic.Queue`1" /> without removing it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c647d-300">在 <see cref="T:System.Collections.Generic.Queue`1" /> 前端的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-300">The object at the beginning of the <see cref="T:System.Collections.Generic.Queue`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c647d-301">這個方法與 <xref:System.Collections.Generic.Queue%601.Dequeue%2A> 方法類似，但是 <xref:System.Collections.Generic.Queue%601.Peek%2A> 不會修改 <xref:System.Collections.Generic.Queue%601>。</span><span class="sxs-lookup"><span data-stu-id="c647d-301">This method is similar to the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method, but <xref:System.Collections.Generic.Queue%601.Peek%2A> does not modify the <xref:System.Collections.Generic.Queue%601>.</span></span>  
  
 <span data-ttu-id="c647d-302">如果型別`T`是參考型別，`null`可以加入至<xref:System.Collections.Generic.Queue%601>做為值。</span><span class="sxs-lookup"><span data-stu-id="c647d-302">If type `T` is a reference type, `null` can be added to the <xref:System.Collections.Generic.Queue%601> as a value.</span></span>  
  
 <span data-ttu-id="c647d-303">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="c647d-303">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c647d-304">下列程式碼範例示範幾個方法來<xref:System.Collections.Generic.Queue%601>泛型類別，包括<xref:System.Collections.Generic.Queue%601.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c647d-304">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Queue%601> generic class, including the <xref:System.Collections.Generic.Queue%601.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="c647d-305">程式碼範例會建立字串的佇列預設容量，並使用<xref:System.Collections.Generic.Queue%601.Enqueue%2A>佇列五個字串的方法。</span><span class="sxs-lookup"><span data-stu-id="c647d-305">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="c647d-306">列舉佇列的項目，這不會變更佇列的狀態。</span><span class="sxs-lookup"><span data-stu-id="c647d-306">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="c647d-307"><xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來清除佇列的第一個字串。</span><span class="sxs-lookup"><span data-stu-id="c647d-307">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="c647d-308"><xref:System.Collections.Generic.Queue%601.Peek%2A>方法用來查看佇列中下一個項目，然後<xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來從佇列中清除。</span><span class="sxs-lookup"><span data-stu-id="c647d-308">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="c647d-309"><xref:System.Collections.Generic.Queue%601.ToArray%2A>方法用來建立陣列，並將佇列項目複製到它，然後將陣列傳遞至<xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式<xref:System.Collections.Generic.IEnumerable%601>，建立佇列的複本。</span><span class="sxs-lookup"><span data-stu-id="c647d-309">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="c647d-310">複製的項目會顯示。</span><span class="sxs-lookup"><span data-stu-id="c647d-310">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="c647d-311">兩次的佇列大小建立陣列，而<xref:System.Collections.Generic.Queue%601.CopyTo%2A>方法用來複製開始中間之陣列的陣列元素。</span><span class="sxs-lookup"><span data-stu-id="c647d-311">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="c647d-312"><xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式一次用來建立包含三個開頭的 null 項目佇列的第二個副本。</span><span class="sxs-lookup"><span data-stu-id="c647d-312">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="c647d-313"><xref:System.Collections.Generic.Queue%601.Contains%2A>方法用來顯示"4"的字串是在佇列中的第一個複本之後<xref:System.Collections.Generic.Queue%601.Clear%2A>方法清除複製和<xref:System.Collections.Generic.Queue%601.Count%2A>屬性會顯示佇列是空的。</span><span class="sxs-lookup"><span data-stu-id="c647d-313">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c647d-314">
            <see cref="T:System.Collections.Generic.Queue`1" /> 是空的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-314">The <see cref="T:System.Collections.Generic.Queue`1" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.Queue`1.Enqueue(`0)" />
        <altmember cref="M:System.Collections.Generic.Queue`1.Dequeue" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c647d-315">傳回逐一查看集合的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-315">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c647d-316">
            <see cref="T:System.Collections.Generic.IEnumerator`1" />，可用於逐一查看集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-316">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c647d-317">`foreach` C# 語言的陳述式 (`for each` c + +`For Each`在 Visual Basic 中) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="c647d-317">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="c647d-318">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="c647d-318">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="c647d-319">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="c647d-319">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="c647d-320">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="c647d-320">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="c647d-321">在這個位置上，<xref:System.Collections.Generic.IEnumerator%601.Current%2A> 並未定義。</span><span class="sxs-lookup"><span data-stu-id="c647d-321">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="c647d-322">因此，在讀取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必須呼叫 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="c647d-322">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="c647d-323"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="c647d-323"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="c647d-324"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="c647d-324"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="c647d-325">如果<xref:System.Collections.IEnumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="c647d-325">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="c647d-326">列舉值位於這個位置上，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="c647d-326">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="c647d-327">如果最後一個呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.Generic.IEnumerator%601.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="c647d-327">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="c647d-328">您不能再次將 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 設定為集合的第一個項目；您必須建立新的列舉值執行個體。</span><span class="sxs-lookup"><span data-stu-id="c647d-328">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="c647d-329">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="c647d-329">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="c647d-330">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="c647d-330">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="c647d-331">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="c647d-331">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="c647d-332">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="c647d-332">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="c647d-333">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="c647d-333">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="c647d-334">集合中的預設實作<xref:System.Collections.Generic?displayProperty=nameWithType>未同步處理。</span><span class="sxs-lookup"><span data-stu-id="c647d-334">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="c647d-335">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="c647d-335">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Queue`1.GetEnumerator" />
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="c647d-336">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Collections.ICollection" /> 複製過來之項目的目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-336">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="c647d-337">
            <see cref="T:System.Array" /> 必須有以零為起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-337">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c647d-338">
            <c>array</c> 中以零起始的索引，複製作業從此處開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-338">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c647d-339">從特定的 <see cref="T:System.Collections.ICollection" /> 索引開始，將 <see cref="T:System.Array" /> 的項目複製至 <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-339">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c647d-340">如果來源類型<xref:System.Collections.ICollection>無法自動轉換成目的地類型`array`，非泛型實作<xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType>擲回<xref:System.InvalidCastException>，而泛型實作擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="c647d-340">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="c647d-341">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.Generic.Queue%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="c647d-341">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Queue%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c647d-342">
            <paramref name="array" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-342">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c647d-343">
            <paramref name="index" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-343">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c647d-344">
            <paramref name="array" /> 是多維的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-344">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="c647d-345">-或-  <paramref name="array" /> 沒有以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-345">-or-  <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="c647d-346">-或-  來源 <see cref="T:System.Collections.ICollection" /> 中的項目數目大於從 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-346">-or-  The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="c647d-347">-或-  來源 <see cref="T:System.Collections.ICollection" /> 的型別無法自動轉換為目的地 <paramref name="array" /> 的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-347">-or-  The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c647d-348">取得值，這個值表示對 <see cref="T:System.Collections.ICollection" /> 的存取是否同步 (安全執行緒)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-348">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c647d-349">如果 <see langword="true" /> 的存取為同步 (安全執行緒)，則為 <see cref="T:System.Collections.ICollection" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-349">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c647d-350">在 <see cref="T:System.Collections.Generic.Queue`1" /> 的預設實作中，這個屬性一律會傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-350">In the default implementation of <see cref="T:System.Collections.Generic.Queue`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c647d-351">集合中的預設實作<xref:System.Collections.Generic?displayProperty=nameWithType>未同步處理。</span><span class="sxs-lookup"><span data-stu-id="c647d-351">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="c647d-352">透過集合進行列舉在本質上並非安全執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="c647d-352">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="c647d-353">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="c647d-353">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="c647d-354">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="c647d-354">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="c647d-355"><xref:System.Collections.ICollection.SyncRoot%2A> 會傳回物件，該物件可用來同步處理對 <xref:System.Collections.ICollection> 的存取。</span><span class="sxs-lookup"><span data-stu-id="c647d-355"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="c647d-356">同步處理的所有執行緒存取集合之前都鎖定這個物件時才有效。</span><span class="sxs-lookup"><span data-stu-id="c647d-356">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="c647d-357">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="c647d-357">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c647d-358">取得可用以同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-358">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c647d-359">可用以同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-359">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="c647d-360">在 <see cref="T:System.Collections.Generic.Queue`1" /> 的預設實作中，這個屬性一律會傳回目前的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-360">In the default implementation of <see cref="T:System.Collections.Generic.Queue`1" />, this property always returns the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c647d-361">集合中的預設實作<xref:System.Collections.Generic?displayProperty=nameWithType>未同步處理。</span><span class="sxs-lookup"><span data-stu-id="c647d-361">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="c647d-362">透過集合進行列舉在本質上並非安全執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="c647d-362">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="c647d-363">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="c647d-363">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="c647d-364">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="c647d-364">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="c647d-365"><xref:System.Collections.ICollection.SyncRoot%2A> 會傳回物件，該物件可用來同步處理對 <xref:System.Collections.ICollection> 的存取。</span><span class="sxs-lookup"><span data-stu-id="c647d-365"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="c647d-366">同步處理的所有執行緒存取集合之前都鎖定這個物件時才有效。</span><span class="sxs-lookup"><span data-stu-id="c647d-366">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="c647d-367">下列程式碼將示範如何使用<xref:System.Collections.ICollection.SyncRoot%2A>C#、 c + + 和 Visual Basic 的屬性。</span><span class="sxs-lookup"><span data-stu-id="c647d-367">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As IColletion = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="c647d-368">擷取這個屬性的值是一種 O(1) 運算。</span><span class="sxs-lookup"><span data-stu-id="c647d-368">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c647d-369">傳回逐一查看集合的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-369">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c647d-370">
            <see cref="T:System.Collections.IEnumerator" />，可用於逐一查看集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-370">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c647d-371">`foreach` C# 語言的陳述式 (`for each` c + +`For Each`在 Visual Basic 中) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="c647d-371">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="c647d-372">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="c647d-372">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="c647d-373">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="c647d-373">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="c647d-374">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="c647d-374">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="c647d-375"><xref:System.Collections.IEnumerator.Reset%2A> 也會將列舉值帶回至這個位置。</span><span class="sxs-lookup"><span data-stu-id="c647d-375"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="c647d-376">在這個位置上，<xref:System.Collections.IEnumerator.Current%2A> 並未定義。</span><span class="sxs-lookup"><span data-stu-id="c647d-376">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="c647d-377">因此，在讀取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必須呼叫 <xref:System.Collections.IEnumerator.Current%2A> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="c647d-377">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="c647d-378"><xref:System.Collections.IEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A> 或 <xref:System.Collections.IEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="c647d-378"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="c647d-379"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.IEnumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="c647d-379"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="c647d-380">如果<xref:System.Collections.IEnumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="c647d-380">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="c647d-381">列舉值位於這個位置上，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="c647d-381">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="c647d-382">如果最後一個呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.IEnumerator.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="c647d-382">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="c647d-383">若要再次將 <xref:System.Collections.IEnumerator.Current%2A> 設定為集合的第一個元素，您可以在呼叫 <xref:System.Collections.IEnumerator.Reset%2A> 之後，接著呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="c647d-383">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="c647d-384">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="c647d-384">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="c647d-385">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="c647d-385">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> 
  
 <span data-ttu-id="c647d-386">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="c647d-386">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="c647d-387">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="c647d-387">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="c647d-388">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="c647d-388">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="c647d-389">集合中的預設實作<xref:System.Collections.Generic?displayProperty=nameWithType>未同步處理。</span><span class="sxs-lookup"><span data-stu-id="c647d-389">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="c647d-390">這個方法是一種 o （1） 運算。</span><span class="sxs-lookup"><span data-stu-id="c647d-390">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Queue`1.GetEnumerator" />
        <altmember cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c647d-391">將 <see cref="T:System.Collections.Generic.Queue`1" /> 項目複製到新的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-391">Copies the <see cref="T:System.Collections.Generic.Queue`1" /> elements to a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c647d-392">新的陣列，包含複製自 <see cref="T:System.Collections.Generic.Queue`1" /> 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-392">A new array containing elements copied from the <see cref="T:System.Collections.Generic.Queue`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c647d-393"><xref:System.Collections.Generic.Queue%601>則不會修改。</span><span class="sxs-lookup"><span data-stu-id="c647d-393">The <xref:System.Collections.Generic.Queue%601> is not modified.</span></span> <span data-ttu-id="c647d-394">新陣列中項目的順序是從開頭項目的順序相同<xref:System.Collections.Generic.Queue%601>至它的結尾。</span><span class="sxs-lookup"><span data-stu-id="c647d-394">The order of the elements in the new array is the same as the order of the elements from the beginning of the <xref:System.Collections.Generic.Queue%601> to its end.</span></span>  
  
 <span data-ttu-id="c647d-395">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.Generic.Queue%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="c647d-395">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Queue%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c647d-396">下列程式碼範例示範幾個方法來<xref:System.Collections.Generic.Queue%601>泛型類別，包括<xref:System.Collections.Generic.Queue%601.ToArray%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c647d-396">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Queue%601> generic class, including the <xref:System.Collections.Generic.Queue%601.ToArray%2A> method.</span></span>  
  
 <span data-ttu-id="c647d-397">程式碼範例會建立字串的佇列預設容量，並使用<xref:System.Collections.Generic.Queue%601.Enqueue%2A>佇列五個字串的方法。</span><span class="sxs-lookup"><span data-stu-id="c647d-397">The code example creates a queue of strings with default capacity and uses the <xref:System.Collections.Generic.Queue%601.Enqueue%2A> method to queue five strings.</span></span> <span data-ttu-id="c647d-398">列舉佇列的項目，這不會變更佇列的狀態。</span><span class="sxs-lookup"><span data-stu-id="c647d-398">The elements of the queue are enumerated, which does not change the state of the queue.</span></span> <span data-ttu-id="c647d-399"><xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來清除佇列的第一個字串。</span><span class="sxs-lookup"><span data-stu-id="c647d-399">The <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue the first string.</span></span> <span data-ttu-id="c647d-400"><xref:System.Collections.Generic.Queue%601.Peek%2A>方法用來查看佇列中下一個項目，然後<xref:System.Collections.Generic.Queue%601.Dequeue%2A>方法用來從佇列中清除。</span><span class="sxs-lookup"><span data-stu-id="c647d-400">The <xref:System.Collections.Generic.Queue%601.Peek%2A> method is used to look at the next item in the queue, and then the <xref:System.Collections.Generic.Queue%601.Dequeue%2A> method is used to dequeue it.</span></span>  
  
 <span data-ttu-id="c647d-401"><xref:System.Collections.Generic.Queue%601.ToArray%2A>方法用來建立陣列，並將佇列項目複製到它，然後將陣列傳遞至<xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式<xref:System.Collections.Generic.IEnumerable%601>，建立佇列的複本。</span><span class="sxs-lookup"><span data-stu-id="c647d-401">The <xref:System.Collections.Generic.Queue%601.ToArray%2A> method is used to create an array and copy the queue elements to it, then the array is passed to the <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the queue.</span></span> <span data-ttu-id="c647d-402">複製的項目會顯示。</span><span class="sxs-lookup"><span data-stu-id="c647d-402">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="c647d-403">兩次的佇列大小建立陣列，而<xref:System.Collections.Generic.Queue%601.CopyTo%2A>方法用來複製開始中間之陣列的陣列元素。</span><span class="sxs-lookup"><span data-stu-id="c647d-403">An array twice the size of the queue is created, and the <xref:System.Collections.Generic.Queue%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="c647d-404"><xref:System.Collections.Generic.Queue%601.%23ctor%2A>建構函式一次用來建立包含三個開頭的 null 項目佇列的第二個副本。</span><span class="sxs-lookup"><span data-stu-id="c647d-404">The <xref:System.Collections.Generic.Queue%601.%23ctor%2A> constructor is used again to create a second copy of the queue containing three null elements at the beginning.</span></span>  
  
 <span data-ttu-id="c647d-405"><xref:System.Collections.Generic.Queue%601.Contains%2A>方法用來顯示"4"的字串是在佇列中的第一個複本之後<xref:System.Collections.Generic.Queue%601.Clear%2A>方法清除複製和<xref:System.Collections.Generic.Queue%601.Count%2A>屬性會顯示佇列是空的。</span><span class="sxs-lookup"><span data-stu-id="c647d-405">The <xref:System.Collections.Generic.Queue%601.Contains%2A> method is used to show that the string "four" is in the first copy of the queue, after which the <xref:System.Collections.Generic.Queue%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Queue%601.Count%2A> property shows that the queue is empty.</span></span>  
  
 [!code-csharp[Generic.Queue#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Queue/cs/source.cs#1)]
 [!code-vb[Generic.Queue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Queue/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c647d-406">如果該數目小於目前容量的 90%，則將容量設為 <see cref="T:System.Collections.Generic.Queue`1" /> 中項目的實際數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c647d-406">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.Queue`1" />, if that number is less than 90 percent of current capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c647d-407">這個方法可用記憶體降到最低集合的額外負荷如果沒有新的項目會加入至集合。</span><span class="sxs-lookup"><span data-stu-id="c647d-407">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span> <span data-ttu-id="c647d-408">重新配置及複製大型的成本<xref:System.Collections.Generic.Queue%601>相當大，但是，可能會因此<xref:System.Collections.Generic.Queue%601.TrimExcess%2A>方法沒有作用，如果清單是在超過容量的 90%。</span><span class="sxs-lookup"><span data-stu-id="c647d-408">The cost of reallocating and copying a large <xref:System.Collections.Generic.Queue%601> can be considerable, however, so the <xref:System.Collections.Generic.Queue%601.TrimExcess%2A> method does nothing if the list is at more than 90 percent of capacity.</span></span> <span data-ttu-id="c647d-409">這可避免產生大型重新配置成本相對較小的改善。</span><span class="sxs-lookup"><span data-stu-id="c647d-409">This avoids incurring a large reallocation cost for a relatively small gain.</span></span>  
  
 <span data-ttu-id="c647d-410">這個方法是 O (`n`) 作業，其中`n`是<xref:System.Collections.Generic.Queue%601.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="c647d-410">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Queue%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="c647d-411">若要重設<xref:System.Collections.Generic.Queue%601>設為初始狀態，請呼叫<xref:System.Collections.Generic.Queue%601.Clear%2A>方法之前先呼叫<xref:System.Collections.Generic.Queue%601.TrimExcess%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c647d-411">To reset a <xref:System.Collections.Generic.Queue%601> to its initial state, call the <xref:System.Collections.Generic.Queue%601.Clear%2A> method before calling <xref:System.Collections.Generic.Queue%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="c647d-412">修剪空白<xref:System.Collections.Generic.Queue%601>設定的容量<xref:System.Collections.Generic.Queue%601>預設容量。</span><span class="sxs-lookup"><span data-stu-id="c647d-412">Trimming an empty <xref:System.Collections.Generic.Queue%601> sets the capacity of the <xref:System.Collections.Generic.Queue%601> to the default capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Queue`1.Clear" />
        <altmember cref="P:System.Collections.Generic.Queue`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="TryDequeue">
      <MemberSignature Language="C#" Value="public bool TryDequeue (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryDequeue([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.TryDequeue(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryDequeue (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryDequeue([Runtime::InteropServices::Out] T % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryPeek">
      <MemberSignature Language="C#" Value="public bool TryPeek (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPeek([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Queue`1.TryPeek(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPeek (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPeek([Runtime::InteropServices::Out] T % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>