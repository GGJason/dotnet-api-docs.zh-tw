<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SortedList`2.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac572c1e1ae48ac3af90725e33b902861db5d83679a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72c1e1ae48ac3af90725e33b902861db5d83679a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>The type of keys in the collection.</source>
          <target state="translated">集合中的索引鍵類型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>The type of values in the collection.</source>
          <target state="translated">集合中的值類型。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedList`2">
          <source>Represents a collection of key/value pairs that are sorted by key based on the associated <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> implementation.</source>
          <target state="translated">代表根據關聯的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> 實作，依索引鍵所排序的索引鍵/值組集合。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> generic class is an array of key/value pairs with O(log <ph id="ph2">`n`</ph>) retrieval, where n is the number of elements in the dictionary.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>泛型類別是與 O 的索引鍵/值組的陣列 (記錄<ph id="ph2">`n`</ph>) 擷取，其中 n 是在字典中的項目數。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>In this, it is similar to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> generic class.</source>
          <target state="translated">在這個中，它是類似於<ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>泛型類別。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>The two classes have similar object models, and both have O(log <ph id="ph1">`n`</ph>) retrieval.</source>
          <target state="translated">兩個類別都具有類似的物件模型，且兩者都有 O (記錄<ph id="ph1">`n`</ph>) 擷取。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>Where the two classes differ is in memory use and speed of insertion and removal:</source>
          <target state="translated">兩個類別的不同之處是記憶體使用量和速度的插入和移除：</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> uses less memory than <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> 使用較少的記憶體比<ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> has faster insertion and removal operations for unsorted data, O(log <ph id="ph2">`n`</ph>) as opposed to O(<ph id="ph3">`n`</ph>) for <ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> 具有更快速插入和移除作業的未排序的資料，O (記錄<ph id="ph2">`n`</ph>) 而不是 O (<ph id="ph3">`n`</ph>) 的<ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>If the list is populated all at once from sorted data, <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> is faster than <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>.</source>
          <target state="translated">如果從已排序的資料，會同時填入此清單<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>的速度比<ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>Another difference between the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> classes is that <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> supports efficient indexed retrieval of keys and values through the collections returned by the <ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602.Keys%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Collections.Generic.SortedList%602.Values%2A&gt;</ph> properties.</source>
          <target state="translated">另一個差異<ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>和<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>類別是<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>支援有效率的索引鍵和值的集合所傳回的索引的擷取<ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602.Keys%2A&gt;</ph>和<ph id="ph5">&lt;xref:System.Collections.Generic.SortedList%602.Values%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>It is not necessary to regenerate the lists when the properties are accessed, because the lists are just wrappers for the internal arrays of keys and values.</source>
          <target state="translated">您不需要重新產生清單時存取屬性，因為清單是只包裝函式的內部陣列之索引鍵和值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Values%2A&gt;</ph> property for indexed retrieval of values from a sorted list of strings:</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Values%2A&gt;</ph>索引擷取的已排序的清單的字串值的屬性：</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> is implemented as an array of key/value pairs, sorted by the key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> 會實作為索引鍵/值組，依索引鍵排序的陣列。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>Each element can be retrieved as a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> object.</source>
          <target state="translated">每個項目可以當做擷取<ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>Key objects must be immutable as long as they are used as keys in the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">索引鍵物件必須是不變的只要它們使用中索引鍵做<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> must be unique.</source>
          <target state="translated">在每個索引鍵<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>必須是唯一的。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be, if the type of values in the list, <ph id="ph2">`TValue`</ph>, is a reference type.</source>
          <target state="translated">金鑰不能<ph id="ph1">`null`</ph>，但是值可以是，如果在清單中，值型別<ph id="ph2">`TValue`</ph>，是參考型別。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> requires a comparer implementation to sort and to perform comparisons.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> 需要的比較子實作，來排序和比較。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>The default comparer <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether the key type <ph id="ph2">`TKey`</ph> implements <ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> and uses that implementation, if available.</source>
          <target state="translated">預設比較子<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>檢查索引鍵的類型是否<ph id="ph2">`TKey`</ph>實作<ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph>，並使用該實作，如果有的話。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>If not, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether the key type <ph id="ph2">`TKey`</ph> implements <ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果沒有，<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>檢查索引鍵的類型是否<ph id="ph2">`TKey`</ph>實作<ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>If the key type <ph id="ph1">`TKey`</ph> does not implement either interface, you can specify a <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType&gt;</ph> implementation in a constructor overload that accepts a <ph id="ph3">`comparer`</ph> parameter.</source>
          <target state="translated">如果索引鍵輸入<ph id="ph1">`TKey`</ph>未實作任何一種介面，您可以指定<ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType&gt;</ph>中接受的建構函式多載實作<ph id="ph3">`comparer`</ph>參數。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>是項目數目<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">當項目加入至<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>，就會自動增加容量的要求以重新配置內部的陣列。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.TrimExcess%2A&gt;</ph> or by setting the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">藉由呼叫，您可以減少容量<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.TrimExcess%2A&gt;</ph>或藉由設定<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph>屬性明確。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>Decreasing the capacity reallocates memory and copies all the elements in the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">減少容量重新配置記憶體和中的所有項目複製<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>For very large <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph2">`enabled`</ph> attribute of the  configuration element to <ph id="ph3">`true`</ph> in the run-time environment.</source>
          <target state="translated">針對大型<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>物件，您可以藉由設定增加到 64 位元系統上的 2 億元素的最大容量<ph id="ph2">`enabled`</ph>屬性的組態項目<ph id="ph3">`true`</ph>在執行階段環境中。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`for each`</ph> c + +<ph id="ph3">`For Each`</ph>在 Visual Basic 中) 傳回集合中的項目類型的物件。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>Since the elements of the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> are key/value pairs, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">之後的項目<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>是索引鍵/值組的項目類型不是索引鍵的類型或值的類型。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>Instead, the element type is <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>.</source>
          <target state="translated">相反地，項目型別是<ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>For example:</source>
          <target state="translated">例如: </target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph>陳述式是包裝函式，只允許讀取，不寫入至集合的列舉值。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">下列程式碼範例會建立空<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>的 string 索引鍵，並使用具有字串<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>方法，將某些項目。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">此範例示範<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>方法會擲回<ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph>時嘗試加入重複的索引鍵。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph> property (the indexer in C#) to retrieve values, demonstrating that a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</source>
          <target state="translated">此範例會使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph>屬性 （C# 中為索引子） 來擷取值，擊發<ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph>要求的索引鍵不存在，而且可以取代顯示索引鍵關聯的值時，會擲回。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>The example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values if a program often must try key values that are not in the sorted list, and it shows how to use the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.ContainsKey%2A&gt;</ph> method to test whether a key exists before calling the <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> method.</source>
          <target state="translated">該示例顯示瞭如果程序經常必須嘗試不在排序列表中的鍵值，那麼如何使用 <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.TryGetValue%2A&gt;</ph> 方法作為更有效的方法來檢索值，並說明如何在調用之前使用 <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.ContainsKey%2A&gt;</ph> 方法來測試鍵是否存在 <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>The example shows how to enumerate the keys and values in the sorted list and how to enumerate the keys and values alone using the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Keys%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Values%2A&gt;</ph> property.</source>
          <target state="translated">此範例示範如何列舉的索引鍵和已排序的清單中的值以及如何列舉索引鍵和值單獨使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Keys%2A&gt;</ph>屬性和<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Values%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>Finally, the example demonstrates the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Remove%2A&gt;</ph> method.</source>
          <target state="translated">最後，此範例示範<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Remove%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">公用靜態 (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph>在 Visual Basic 中) 這種類型的成員都具備執行緒安全。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">不保證任何執行個體成員是安全執行緒。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> can support multiple readers concurrently, as long as the collection is not modified.</source>
          <target state="translated">A<ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>可以支援多個讀取器同時，只要未修改集合。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">即便如此，列舉集合在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedList`2">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedList`2">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> class that is empty, has the default initial capacity, and uses the default <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 類別的新執行個體，這個執行個體是空的、具有預設的初始容量，並且使用預設 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> must be unique according to the default comparer.</source>
          <target state="translated">在每個索引鍵<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>必須是唯一，根據預設比較子。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor">
          <source>This constructor uses the default value for the initial capacity of the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">這個建構函式使用的預設值的初始容量<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor">
          <source>To set the initial capacity, use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%29&gt;</ph> constructor.</source>
          <target state="translated">若要設定的初始容量，使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor">
          <source>If the final size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">如果您可以估計最終大小的集合，指定初始容量，就不需要執行數個調整大小作業時新增元素至<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor">
          <source>This constructor uses the default comparer for <ph id="ph1">`TKey`</ph>.</source>
          <target state="translated">這個建構函式會使用預設比較子<ph id="ph1">`TKey`</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor">
          <source>To specify a comparer, use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> constructor.</source>
          <target state="translated">若要指定比較子，請使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor">
          <source>The default comparer <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether the key type <ph id="ph2">`TKey`</ph> implements <ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> and uses that implementation, if available.</source>
          <target state="translated">預設比較子<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>檢查索引鍵的類型是否<ph id="ph2">`TKey`</ph>實作<ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph>，並使用該實作，如果有的話。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor">
          <source>If not, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether the key type <ph id="ph2">`TKey`</ph> implements <ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果沒有，<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>檢查索引鍵的類型是否<ph id="ph2">`TKey`</ph>實作<ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor">
          <source>If the key type <ph id="ph1">`TKey`</ph> does not implement either interface, you can specify a <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType&gt;</ph> implementation in a constructor overload that accepts a <ph id="ph3">`comparer`</ph> parameter.</source>
          <target state="translated">如果索引鍵輸入<ph id="ph1">`TKey`</ph>未實作任何一種介面，您可以指定<ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType&gt;</ph>中接受的建構函式多載實作<ph id="ph3">`comparer`</ph>參數。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">這個建構函式是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">下列程式碼範例會建立空<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>的 string 索引鍵，並使用具有字串<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>方法，將某些項目。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">此範例示範<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>方法會擲回<ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph>時嘗試加入重複的索引鍵。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated">比較索引鍵時所要使用的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> 實作。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph> for the type of the key.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> 表示使用索引鍵型別的預設 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> class that is empty, has the default initial capacity, and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 類別的新執行個體，這個執行個體是空白的、具有預設的初始容量，並使用指定的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> must be unique according to the specified comparer.</source>
          <target state="translated">在每個索引鍵<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>必須是唯一根據指定的比較子。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>This constructor uses the default value for the initial capacity of the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">這個建構函式使用的預設值的初始容量<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>To set the initial capacity, use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> constructor.</source>
          <target state="translated">若要設定的初始容量，使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>If the final size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">如果您可以估計最終大小的集合，指定初始容量，就不需要執行數個調整大小作業時新增元素至<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">這個建構函式是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>The following code example creates a sorted list with a case-insensitive comparer for the current culture.</source>
          <target state="translated">下列程式碼範例會建立已排序的清單，與目前的文化特性的不區分大小寫的比較子。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>The example adds four elements, some with lower-case keys and some with upper-case keys.</source>
          <target state="translated">此範例加入四個項目，一些小寫的索引鍵，一些具有英文大小寫的索引鍵。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</source>
          <target state="translated">然後此範例會嘗試新增的情況下，只有不同於現有的索引鍵的索引鍵的項目攔截產生的例外狀況，並顯示錯誤訊息。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
          <source>Finally, the example displays the elements in case-insensitive sort order.</source>
          <target state="translated">最後，這個範例會顯示項目不區分大小寫的排序次序。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> whose elements are copied to the new <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">要將其項目複製到新 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> class that contains elements copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>, has sufficient capacity to accommodate the number of elements copied, and uses the default <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 類別的新執行個體，其中包含從指定的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> 複製的項目、具有足以容納所複製項目數的容量，並且使用預設 <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> must be unique according to the default comparer; likewise, every key in the source <ph id="ph2">`dictionary`</ph> must also be unique according to the default comparer.</source>
          <target state="translated">在每個索引鍵<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>必須是唯一，根據預設值的比較子; 同樣地，在來源中的每個索引鍵<ph id="ph2">`dictionary`</ph>也必須是唯一，根據預設比較子。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>The capacity of the new <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> is set to the number of elements in <ph id="ph2">`dictionary`</ph>, so no resizing takes place while the list is being populated.</source>
          <target state="translated">新的容量<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>設定中的項目數為<ph id="ph2">`dictionary`</ph>，因此不調整大小會填入此清單時，會發生。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>This constructor uses the default comparer for <ph id="ph1">`TKey`</ph>.</source>
          <target state="translated">這個建構函式會使用預設比較子<ph id="ph1">`TKey`</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>To specify a comparer, use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> constructor.</source>
          <target state="translated">若要指定比較子，請使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>The default comparer <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether the key type <ph id="ph2">`TKey`</ph> implements <ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> and uses that implementation, if available.</source>
          <target state="translated">預設比較子<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>檢查索引鍵的類型是否<ph id="ph2">`TKey`</ph>實作<ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph>，並使用該實作，如果有的話。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>If not, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether the key type <ph id="ph2">`TKey`</ph> implements <ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果沒有，<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>檢查索引鍵的類型是否<ph id="ph2">`TKey`</ph>實作<ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>If the key type <ph id="ph1">`TKey`</ph> does not implement either interface, you can specify a <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType&gt;</ph> implementation in a constructor overload that accepts a <ph id="ph3">`comparer`</ph> parameter.</source>
          <target state="translated">如果索引鍵輸入<ph id="ph1">`TKey`</ph>未實作任何一種介面，您可以指定<ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType&gt;</ph>中接受的建構函式多載實作<ph id="ph3">`comparer`</ph>參數。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>If the data in <ph id="ph1">`dictionary`</ph> are sorted, this constructor is an O(<ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is the number of elements in <ph id="ph4">`dictionary`</ph>.</source>
          <target state="translated">如果中的資料<ph id="ph1">`dictionary`</ph>會進行排序時，這個建構函式為 O (<ph id="ph2">`n`</ph>) 作業，其中<ph id="ph3">`n`</ph>是中的項目數<ph id="ph4">`dictionary`</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>Otherwise it is an O(<ph id="ph1">`n`</ph><ph id="ph2">*</ph><ph id="ph3">`n`</ph>) operation.</source>
          <target state="translated">否則就是 O (<ph id="ph1">`n`</ph><ph id="ph2">*</ph><ph id="ph3">`n`</ph>) 作業。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source>The following code example shows how to use <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> to create a sorted copy of the information in a <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, by passing the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> to the <ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%29&gt;</ph> constructor.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>建立已排序資料的複本中的資訊<ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>，藉由傳遞<ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>至<ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> contains one or more duplicate keys.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> 包含一或多個重複的索引鍵。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> can contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 可包含的初始項目數。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> class that is empty, has the specified initial capacity, and uses the default <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 類別的新執行個體，這個執行個體是空的、具有指定的初始容量，並且使用預設 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> must be unique according to the default comparer.</source>
          <target state="translated">在每個索引鍵<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>必須是唯一，根據預設比較子。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> can hold before resizing.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>是項目數目，<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>可以保存前調整大小。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">當項目加入至<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>，就會自動增加容量的要求以重新配置內部的陣列。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.TrimExcess%2A&gt;</ph> or by setting the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">藉由呼叫，您可以減少容量<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.TrimExcess%2A&gt;</ph>或藉由設定<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph>屬性明確。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
          <source>Decreasing the capacity reallocates memory and copies all the elements in the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">減少容量重新配置記憶體和中的所有項目複製<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
          <source>This constructor uses the default comparer for <ph id="ph1">`TKey`</ph>.</source>
          <target state="translated">這個建構函式會使用預設比較子<ph id="ph1">`TKey`</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
          <source>To specify a comparer, use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> constructor.</source>
          <target state="translated">若要指定比較子，請使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
          <source>The default comparer <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether the key type <ph id="ph2">`TKey`</ph> implements <ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> and uses that implementation, if available.</source>
          <target state="translated">預設比較子<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>檢查索引鍵的類型是否<ph id="ph2">`TKey`</ph>實作<ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph>，並使用該實作，如果有的話。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
          <source>If not, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether the key type <ph id="ph2">`TKey`</ph> implements <ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果沒有，<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>檢查索引鍵的類型是否<ph id="ph2">`TKey`</ph>實作<ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
          <source>If the key type <ph id="ph1">`TKey`</ph> does not implement either interface, you can specify a <ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType&gt;</ph> implementation in a constructor overload that accepts a <ph id="ph3">`comparer`</ph> parameter.</source>
          <target state="translated">如果索引鍵輸入<ph id="ph1">`TKey`</ph>未實作任何一種介面，您可以指定<ph id="ph2">&lt;xref:System.Collections.Generic.IComparer%601?displayProperty=nameWithType&gt;</ph>中接受的建構函式多載實作<ph id="ph3">`comparer`</ph>參數。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
          <source>The following code example creates a sorted list with an initial capacity of 4 and populates it with 4 entries.</source>
          <target state="translated">下列程式碼範例會建立已排序的清單與 4 的初始容量，並填入 4 個項目。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> whose elements are copied to the new <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">要將其項目複製到新 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated">比較索引鍵時所要使用的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> 實作。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph> for the type of the key.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> 表示使用索引鍵型別的預設 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> class that contains elements copied from the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>, has sufficient capacity to accommodate the number of elements copied, and uses the specified <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 類別的新執行個體，其中包含從指定的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> 複製的項目、具有足以容納所複製項目數的容量，並且使用指定的 <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> must be unique according to the specified comparer; likewise, every key in the source <ph id="ph2">`dictionary`</ph> must also be unique according to the specified comparer.</source>
          <target state="translated">在每個索引鍵<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>必須是唯一根據指定的比較子; 同樣地，在來源中的每個索引鍵<ph id="ph2">`dictionary`</ph>也必須是唯一根據指定的比較子。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>The capacity of the new <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> is set to the number of elements in <ph id="ph2">`dictionary`</ph>, so no resizing takes place while the list is being populated.</source>
          <target state="translated">新的容量<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>設定中的項目數為<ph id="ph2">`dictionary`</ph>，因此不調整大小會填入此清單時，會發生。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>If the data in <ph id="ph1">`dictionary`</ph> are sorted, this constructor is an O(<ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is the number of elements in <ph id="ph4">`dictionary`</ph>.</source>
          <target state="translated">如果中的資料<ph id="ph1">`dictionary`</ph>會進行排序時，這個建構函式為 O (<ph id="ph2">`n`</ph>) 作業，其中<ph id="ph3">`n`</ph>是中的項目數<ph id="ph4">`dictionary`</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>Otherwise it is an O(<ph id="ph1">`n`</ph><ph id="ph2">*</ph><ph id="ph3">`n`</ph>) operation.</source>
          <target state="translated">否則就是 O (<ph id="ph1">`n`</ph><ph id="ph2">*</ph><ph id="ph3">`n`</ph>) 作業。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>The following code example shows how to use <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> to create a case-insensitive sorted copy of the information in a case-insensitive <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, by passing the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> to the <ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph> constructor.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>若要建立不區分大小寫排序 在不區分大小寫之資訊的複本<ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>，藉由傳遞<ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>至<ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source>In this example, the case-insensitive comparers are for the current culture.</source>
          <target state="translated">在此範例中，不區分大小寫的比較子會是目前的文化特性。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> contains one or more duplicate keys.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dictionary" /&gt;</ph> 包含一或多個重複的索引鍵。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> can contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 可包含的初始項目數。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated">比較索引鍵時所要使用的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> 實作。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph> for the type of the key.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> 表示使用索引鍵型別的預設 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> class that is empty, has the specified initial capacity, and uses the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 類別的新執行個體，這個執行個體是空白的、具有指定的初始容量，並使用指定的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> must be unique according to the specified comparer.</source>
          <target state="translated">在每個索引鍵<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>必須是唯一根據指定的比較子。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> can hold before resizing.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>是項目數目，<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>可以保存前調整大小。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">當項目加入至<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>，就會自動增加容量的要求以重新配置內部的陣列。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.TrimExcess%2A&gt;</ph> or by setting the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">藉由呼叫，您可以減少容量<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.TrimExcess%2A&gt;</ph>或藉由設定<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph>屬性明確。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>Decreasing the capacity reallocates memory and copies all the elements in the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">減少容量重新配置記憶體和中的所有項目複製<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The following code example creates a sorted list with an initial capacity of 5 and a case-insensitive comparer for the current culture.</source>
          <target state="translated">下列程式碼範例會建立已排序的清單，5 和不區分大小寫的比較子的目前的文化特性的初始容量。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The example adds four elements, some with lower-case keys and some with upper-case keys.</source>
          <target state="translated">此範例加入四個項目，一些小寫的索引鍵，一些具有英文大小寫的索引鍵。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</source>
          <target state="translated">然後此範例會嘗試新增的情況下，只有不同於現有的索引鍵的索引鍵的項目攔截產生的例外狀況，並顯示錯誤訊息。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
          <source>Finally, the example displays the elements in case-insensitive sort order.</source>
          <target state="translated">最後，這個範例會顯示項目不區分大小寫的排序次序。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
          <source>The key of the element to add.</source>
          <target state="translated">要加入的項目的索引鍵。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
          <source>The value of the element to add.</source>
          <target state="translated">要加入的項目的值。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">參考類型的值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
          <source>Adds an element with the specified key and value into the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">將有指定索引鍵和數值的項目加入 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be, if the type of values in the sorted list, <ph id="ph2">`TValue`</ph>, is a reference type.</source>
          <target state="translated">金鑰不能<ph id="ph1">`null`</ph>，但是值可以是，如果在已排序的清單中，值型別<ph id="ph2">`TValue`</ph>，是參考型別。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>; for example, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">您也可以使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph>加入新項目，藉由設定機碼值的屬性不存在於<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>; 例如， <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">不過，如果指定的索引鍵已存在於<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>，設定<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph>屬性會覆寫舊的值。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">相反地，<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>方法不會修改現有的項目。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph> already equals <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph>, the capacity of the <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>已等於<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph>、 容量的<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>增加的自動重新配置內部的陣列，並加入新項目之前現有的項目複製到新陣列。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation for unsorted data, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業的未排序的資料，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
          <source>It is an O(log <ph id="ph1">`n`</ph>) operation if the new element is added at the end of the list.</source>
          <target state="translated">是 O (記錄<ph id="ph1">`n`</ph>) 作業時，如果在清單結尾處加入新項目。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
          <source>If insertion causes a resize, the operation is O(<ph id="ph1">`n`</ph>).</source>
          <target state="translated">如果插入會導致調整大小，作業為 O (<ph id="ph1">`n`</ph>)。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">下列程式碼範例會建立空<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>的 string 索引鍵，並使用具有字串<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>方法，將某些項目。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">此範例示範<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>方法會擲回<ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph>時嘗試加入重複的索引鍵。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 中已存在具有相同索引鍵的元素。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.Capacity">
          <source>Gets or sets the number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> can contain.</source>
          <target state="translated">取得或設定 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 可包含的項目數目。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Capacity">
          <source>The number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> can contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 可包含的項目數。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> can store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> 是的項目數，<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>可以儲存。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph> 是實際的項目數目<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> 永遠是大於或等於<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Capacity">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>超過<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph>時加入項目，複製的舊項目並加入新項目之前，自動重新配置內部陣列增加容量。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Capacity">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.TrimExcess%2A&gt;</ph> or by setting the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">藉由呼叫，您可以減少容量<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.TrimExcess%2A&gt;</ph>或藉由設定<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph>屬性明確。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Capacity">
          <source>When the value of <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</source>
          <target state="translated">當值<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph>會設定明確地在內部陣列也重新配置到符合指定的容量。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Capacity">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the new capacity.</source>
          <target state="translated">擷取這個屬性的值是 o （1） 運算。將屬性設定為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是新的容量。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.Capacity">
          <source><ph id="ph1">&lt;see cref="P:System.Collections.Generic.SortedList`2.Capacity" /&gt;</ph> is set to a value that is less than <ph id="ph2">&lt;see cref="P:System.Collections.Generic.SortedList`2.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Collections.Generic.SortedList`2.Capacity" /&gt;</ph> 是設定為小於 <ph id="ph2">&lt;see cref="P:System.Collections.Generic.SortedList`2.Count" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.Capacity">
          <source>There is not enough memory available on the system.</source>
          <target state="translated">系統上沒有足夠的記憶體可用。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.Clear">
          <source>Removes all elements from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 中的所有項目。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph> 已設為零，並從項目集合的其他物件的參考也會釋放。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> remains unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> 維持不變。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Clear">
          <source>To reset the capacity of the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>, call <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.TrimExcess%2A&gt;</ph> or set the <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> property directly.</source>
          <target state="translated">若要重設的容量<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>，呼叫<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.TrimExcess%2A&gt;</ph>或設定<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph>直接屬性。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Clear">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> to the default capacity.</source>
          <target state="translated">修剪空白<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>設定的容量<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>預設容量。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.Comparer">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> for the sorted list.</source>
          <target state="translated">取得已排序清單的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Comparer">
          <source>The <ph id="ph1">&lt;see cref="T:System.IComparable`1" /&gt;</ph> for the current <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.IComparable`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Comparer">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 中尋找的索引鍵。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> contains a specific key.</source>
          <target state="translated">判斷 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 是否包含特定索引鍵。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 包含具有指定索引鍵的項目，則為 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (記錄<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.ContainsKey%2A&gt;</ph> method to test whether a key exists prior to calling the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.ContainsKey%2A&gt;</ph>方法來測試機碼是否存在然後才呼叫<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)">
          <source>It also shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.TryGetValue%2A&gt;</ph> method to retrieve values, which is an efficient way to retrieve values when a program frequently tries keys that are not in the sorted list.</source>
          <target state="translated">它也示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.TryGetValue%2A&gt;</ph>方法來擷取值，也就是有效的方式來擷取值，當程式經常會嘗試不在已排序的清單中的索引鍵。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)">
          <source>Finally, it shows the least efficient way to test whether keys exist, by using the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">最後，它會顯示最有效的方式來測試是否機碼存在，使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph>屬性 （C# 中為索引子）。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 中尋找的值。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">參考類型的值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> contains a specific value.</source>
          <target state="translated">判斷 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 是否包含特定值。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> contains an element with the specified value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 包含具有指定值的項目，則為 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)">
          <source>This method determines equality using the default comparer <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for the value type <ph id="ph2">`TValue`</ph>.</source>
          <target state="translated">這個方法會判斷等號比較使用預設比較子<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>實值型別<ph id="ph2">`TValue`</ph>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether the value type <ph id="ph2">`TValue`</ph> implements <ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> and uses that implementation, if available.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> 檢查是否有類型值<ph id="ph2">`TValue`</ph>實作<ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph>，並使用該實作，如果有的話。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)">
          <source>If not, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether the value type <ph id="ph2">`TValue`</ph> implements <ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果沒有，<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>類型值是否會檢查<ph id="ph2">`TValue`</ph>實作<ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)">
          <source>If the value type <ph id="ph1">`TValue`</ph> does not implement either interface, this method uses <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果類型值<ph id="ph1">`TValue`</ph>不的實作這兩種介面，這個方法會使用<ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法會執行線性搜尋;因此，平均執行時間是成比例<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated">也就是說，這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.Count">
          <source>Gets the number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 中所包含的索引鍵/值組數目。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Count">
          <source>The number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 中所包含的索引鍵/值組數目。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> can store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> 是的項目數，<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>可以儲存。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph> 是實際的項目數目<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> 永遠是大於或等於<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>超過<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph>時加入項目，複製的舊項目並加入新項目之前，自動重新配置內部陣列增加容量。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">傳回在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 中逐一查看的列舉值。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> for the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> 之 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> 類型的 <ph id="ph3">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`for each`</ph> c + +<ph id="ph3">`For Each`</ph>在 Visual Basic 中) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，建議您使用 <ph id="ph1">`foreach`</ph>，而不要直接使用列舉值。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>The dictionary is maintained in a sorted order using an internal tree.</source>
          <target state="translated">使用內部的樹狀結構以排序順序維護的字典。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>Every new element is positioned at the correct sort position, and the tree is adjusted to maintain the sort order whenever an element is removed.</source>
          <target state="translated">每個新的項目位於正確的排序位置與維護的排序次序，每當移除項目會調整樹狀目錄。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>While enumerating, the sort order is maintained.</source>
          <target state="translated">列舉，會維護排序順序。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">在這個位置上，<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> 並未定義。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，在讀取 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 的值之前，必須呼叫 <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> 以將列舉值前移至集合的第一個項目。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> 會傳回相同的物件直到呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 會將 <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> 設定為下一個項目。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">如果最後一個呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">您不能再次將 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> 設定為集合的第一個項目；您必須建立新的列舉值執行個體。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">集合中的預設實作<ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>未同步處理。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 中尋找的索引鍵。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)">
          <source>Searches for the specified key and returns the zero-based index within the entire <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">搜尋指定的索引鍵，並傳回整個 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 內以零起始的索引。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)">
          <source>The zero-based index of <ph id="ph1">&lt;paramref name="key" /&gt;</ph> within the entire <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>, if found; otherwise, -1.</source>
          <target state="translated">如果找到，則為整個 <ph id="ph1">&lt;paramref name="key" /&gt;</ph> 內 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 之以零起始的索引，否則為 -1。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)">
          <source>This method performs a binary search; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法會執行二進位搜尋。因此，這個方法是 O (記錄<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 中尋找的值。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">參考類型的值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)">
          <source>Searches for the specified value and returns the zero-based index of the first occurrence within the entire <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">搜尋指定的值，並傳回整個 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 內第一次出現之以零起始的索引。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> within the entire <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>, if found; otherwise, -1.</source>
          <target state="translated">整個 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 中第一個出現 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 之以零為起始的索引 (如有找到)，否則為 -1。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)">
          <source>This method determines equality using the default comparer <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> for the value type <ph id="ph2">`TValue`</ph>.</source>
          <target state="translated">這個方法會判斷等號比較使用預設比較子<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>實值型別<ph id="ph2">`TValue`</ph>。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether the value type <ph id="ph2">`TValue`</ph> implements <ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> and uses that implementation, if available.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> 檢查是否有類型值<ph id="ph2">`TValue`</ph>實作<ph id="ph3">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph>，並使用該實作，如果有的話。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)">
          <source>If not, <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> checks whether the value type <ph id="ph2">`TValue`</ph> implements <ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果沒有，<ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>類型值是否會檢查<ph id="ph2">`TValue`</ph>實作<ph id="ph3">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)">
          <source>If the value type <ph id="ph1">`TValue`</ph> does not implement either interface, this method uses <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果類型值<ph id="ph1">`TValue`</ph>不的實作這兩種介面，這個方法會使用<ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法會執行線性搜尋;因此，平均執行時間是成比例<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated">也就是說，這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>The key whose value to get or set.</source>
          <target state="translated">索引鍵，要讀取或設定其值。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">取得或設定與指定之索引鍵相關聯的值。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>The value associated with the specified key.</source>
          <target state="translated">與指定之索引鍵關聯的值。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>If the specified key is not found, a get operation throws a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyNotFoundException" /&gt;</ph> and a set operation creates a new element using the specified key.</source>
          <target state="translated">如果找不到指定的索引鍵，則取得作業會擲回 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyNotFoundException" /&gt;</ph>，且設定作業會使用指定的索引鍵建立新項目。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph>.</source>
          <target state="translated">這個屬性可以使用下列語法提供存取集合中特定元素的能力：<ph id="ph1">`myCollection[key]`</ph>。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be, if the type of values in the list, <ph id="ph2">`TValue`</ph>, is a reference type.</source>
          <target state="translated">金鑰不能<ph id="ph1">`null`</ph>，但是值可以是，如果在清單中，值型別<ph id="ph2">`TValue`</ph>，是參考型別。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>If the key is not found when a value is being retrieved, <ph id="ph1">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> is thrown.</source>
          <target state="translated">如果當正在擷取值，未找到索引鍵<ph id="ph1">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>If the key is not found when a value is being set, the key and value are added.</source>
          <target state="translated">如果設定值時，沒有找到索引鍵，就會加入索引鍵和值。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>; for example, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">您也可以使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph>加入新項目，藉由設定機碼值的屬性不存在於<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>; 例如， <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">不過，如果指定的索引鍵已存在於<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>，設定<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph>屬性會覆寫舊的值。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">相反地，<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>方法不會修改現有的項目。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">C# 語言使用關鍵字來定義索引，而不必實作<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic 會將 <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph> 實作為預設屬性，這樣會提供相同的索引功能。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>Retrieving the value of this property is an O(log <ph id="ph1">`n`</ph>) operation, where n is <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated">擷取這個屬性的值是 O (記錄<ph id="ph1">`n`</ph>) 作業，其中 n 是<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>Setting the property is an O(log <ph id="ph1">`n`</ph>) operation if the key is already in the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">將屬性設定為 O (記錄<ph id="ph1">`n`</ph>) 作業時，如果索引鍵已存在於<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>If the key is not in the list, setting the property is an O(<ph id="ph1">`n`</ph>) operation for unsorted data, or O(log <ph id="ph2">`n`</ph>) if the new element is added at the end of the list.</source>
          <target state="translated">如果索引鍵不在清單中，將屬性設定為 O (<ph id="ph1">`n`</ph>) 未排序的資料或 I/O 作業 (記錄<ph id="ph2">`n`</ph>) 如果清單的結尾處加入新項目。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>If insertion causes a resize, the operation is O(<ph id="ph1">`n`</ph>).</source>
          <target state="translated">如果插入會導致調整大小，作業為 O (<ph id="ph1">`n`</ph>)。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph> property (the indexer in C#) to retrieve values, demonstrating that a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</source>
          <target state="translated">下列程式碼範例使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph>屬性 （C# 中為索引子） 來擷取值，擊發<ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph>要求的索引鍵不存在，而且可以取代顯示索引鍵關聯的值時，會擲回。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>The example also shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values if a program often must try key values that are not in the sorted list.</source>
          <target state="translated">此範例也示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.TryGetValue%2A&gt;</ph>方法更有效率的方式來擷取值，如果程式通常必須嘗試不在已排序的清單中的索引鍵值。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.Item(`0)">
          <source>The property is retrieved and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not exist in the collection.</source>
          <target state="translated">會擷取屬性，且 <ph id="ph1">&lt;paramref name="key" /&gt;</ph> 不存在於集合中。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.Keys">
          <source>Gets a collection containing the keys in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>, in sorted order.</source>
          <target state="translated">取得包含 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 中已排序之索引鍵的集合。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Keys">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph>，包含 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 中的索引鍵。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Keys">
          <source>The order of the keys in the <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> is the same as the order in the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">中的索引鍵的順序<ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>中的順序相同<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Keys">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> refers back to the keys in the original <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">傳回<ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>不是靜態的複本; 相反地，<ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>中原始的索引鍵是指回<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Keys">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> continue to be reflected in the <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>.</source>
          <target state="translated">因此，變更為<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>才會反映在繼續<ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Keys">
          <source>The collection returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Keys%2A&gt;</ph> property provides an efficient way to retrieve keys by index.</source>
          <target state="translated">所傳回的集合<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Keys%2A&gt;</ph>屬性提供有效率的方式來擷取索引鍵。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Keys">
          <source>It is not necessary to regenerate the list when the property is accessed, because the list is just a wrapper for the internal array of keys.</source>
          <target state="translated">您不需要重新產生清單時在屬性經過存取時，因為清單是只包裝函式的內部陣列之索引鍵。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Keys">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Keys%2A&gt;</ph> property for indexed retrieval of keys from a sorted list of elements with string keys:</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Keys%2A&gt;</ph>索引擷取項目的已排序的清單中的 string 索引鍵的索引鍵的屬性：</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Keys">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Keys">
          <source>The following code example shows how to enumerate the keys in the sorted list using the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Keys%2A&gt;</ph> property, and how to enumerate the keys and values in the sorted list.</source>
          <target state="translated">下列程式碼範例示範如何列舉在已排序的清單中，使用金鑰<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Keys%2A&gt;</ph>屬性，以及如何列舉的索引鍵和已排序的清單中的值。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Keys">
          <source>The example also shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Keys%2A&gt;</ph> property for efficient indexed retrieval of keys.</source>
          <target state="translated">此範例也示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Keys%2A&gt;</ph>有效率的索引鍵的索引擷取的屬性。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Keys">
          <source>This code is part of a larger example that can be compiled and executed.</source>
          <target state="translated">此程式碼是可編譯及執行之較大範例的一部分。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Keys">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">請參閱 <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.Remove(`0)">
          <source>The key of the element to remove.</source>
          <target state="translated">要移除的項目索引鍵。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.Remove(`0)">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">將有指定索引鍵的項目從 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 移除。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is successfully removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果成功移除項目，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> was not found in the original <ph id="ph3">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">如果在原始的 <ph id="ph1">&lt;see langword="false" /&gt;</ph> 中找不到 <ph id="ph2">&lt;paramref name="key" /&gt;</ph>，則這個方法也會傳回 <ph id="ph3">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Remove(`0)">
          <source>This method performs a binary search; however, the elements are moved up to fill in the open spot, so this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法會執行二進位搜尋。不過，項目上移，以填入的開啟位置，因此這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Remove(`0)">
          <source>The following code example shows how to remove a key/value pair from the sorted list using the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Remove%2A&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例示範如何從使用已排序的清單中移除的索引鍵/值組<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Remove%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.Remove(`0)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.Remove(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">移除項目之以零為起始的索引。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)">
          <source>Removes the element at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 中指定之索引處的項目。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)">
          <source>This method performs a binary search; however, the elements are moved up to fill in the open spot, so this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法會執行二進位搜尋。不過，項目上移，以填入的開啟位置，因此這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.Generic.SortedList`2.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 等於或大於 <ph id="ph2">&lt;see cref="P:System.Collections.Generic.SortedList`2.Count" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">一維 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>，是從 <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 複製過來之項目的目的端。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 必須有以零為起始的索引。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中以零起始的索引，複製作業從此處開始。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">從特定的 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 索引開始，將 <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> 的項目複製至 <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>If the type of the source <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">`array`</ph>, the non-generic implementations of <ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph> throw <ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>, whereas the generic implementations throw <ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">如果來源類型<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>無法自動轉換成目的地類型<ph id="ph2">`array`</ph>，非泛型實作<ph id="ph3">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType&gt;</ph>擲回<ph id="ph4">&lt;xref:System.InvalidCastException&gt;</ph>，而泛型實作擲回<ph id="ph5">&lt;xref:System.ArgumentException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 是多維的。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> does not have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 沒有以零起始的索引。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">來源 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 中的項目數目，大於 <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> 到目的 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> 結尾的可用空間。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">來源 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的類型無法自動轉換成目的 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的類型。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">取得值，這個值表示對 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的存取是否同步 (安全執行緒)。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 的存取為同步 (安全執行緒)，則為 <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 的預設實作中，這個屬性一律會傳回 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">集合中的預設實作<ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>未同步處理。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>屬性傳回的物件，可用來同步處理存取具備<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized">
          <source>Synchronization is effective only if all threads lock this object before accessing the collection.</source>
          <target state="translated">同步處理的所有執行緒存取集合之前都鎖定這個物件時才有效。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">取得可用以同步存取 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">可用以同步存取 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>, this property always returns the current instance.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 的預設實作中，這個屬性一律會傳回目前的執行個體。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">集合中的預設實作<ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>未同步處理。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property returns an object that can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>屬性傳回的物件，可用來同步處理存取具備<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot">
          <source>Synchronization is effective only if all threads lock this object before accessing the collection.</source>
          <target state="translated">同步處理的所有執行緒存取集合之前都鎖定這個物件時才有效。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property for C#, C++, and Visual Basic.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>C#、 c + + 和 Visual Basic 的屬性。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to use as the key of the element to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>，用做要加入之項目的索引鍵。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to use as the value of the element to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>，用做要加入之項目的值。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>Adds an element with the provided key and value to the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">將具有提供之索引鍵和值的項目加入 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">您也可以使用<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>屬性所設定的值不存在的索引鍵的字典; 中加入新項目，例如<ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">不過，如果指定的索引鍵已經存在字典中，設定<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>屬性會覆寫舊的值。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">相反地，<ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph>方法不會修改現有的項目。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation for unsorted data, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業的未排序的資料，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>It is an O(log <ph id="ph1">`n`</ph>) operation if the new element is added at the end of the list.</source>
          <target state="translated">是 O (記錄<ph id="ph1">`n`</ph>) 作業時，如果在清單結尾處加入新項目。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>If insertion causes a resize, the operation is O(<ph id="ph1">`n`</ph>).</source>
          <target state="translated">如果插入會導致調整大小，作業為 O (<ph id="ph1">`n`</ph>)。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The following code example shows how to access the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> class through the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">下列程式碼範例示範如何存取<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>類別透過<ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> of strings with string keys and uses the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">程式碼範例會建立空<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>的 string 索引鍵，並使用具有字串<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph>方法，將某些項目。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key, or when a key or value of the wrong data type is supplied.</source>
          <target state="translated">此範例示範<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph>方法會擲回<ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph>當嘗試加入重複的索引鍵或索引鍵或錯誤的資料類型的值提供。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The code example demonstrates the use of several other members of the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">程式碼範例示範如何使用的數個其他成員<ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 屬於無法指派給 <ph id="ph3">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 的 <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> 索引鍵類型的類型。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the value type <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 屬於無法指派給 <ph id="ph3">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 的 <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph> 實值型別的型別。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 中已存在具有相同索引鍵的元素。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 中尋找的索引鍵。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contains an element with the specified key.</source>
          <target state="translated">判斷 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 是否包含具有指定之索引鍵的項目。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contains an element with the key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 包含具有該索引鍵的項目，則為 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>This method returns <ph id="ph1">`false`</ph> if <ph id="ph2">`key`</ph> is of a type that is not assignable to the key type <ph id="ph3">`TKey`</ph> of the <ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">這個方法會傳回<ph id="ph1">`false`</ph>如果<ph id="ph2">`key`</ph>是無法指派給金鑰類型的類型<ph id="ph3">`TKey`</ph>的<ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (記錄<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Contains%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Contains%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph>介面<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The example demonstrates that the method returns <ph id="ph1">`false`</ph> if a key of the wrong data type is supplied.</source>
          <target state="translated">此範例示範，方法會傳回<ph id="ph1">`false`</ph>如果提供錯誤的資料類型的索引鍵。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">程式碼範例是完整的範例，包括針對所提供的輸出的一部分<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`for each`</ph> c + +<ph id="ph3">`For Each`</ph>在 Visual Basic 中) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，建議您使用 <ph id="ph1">`foreach`</ph>，而不要直接使用列舉值。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 也會將列舉值帶回至這個位置。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> is undefined.</source>
          <target state="translated">在這個位置上，<ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> 並未定義。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>.</source>
          <target state="translated">因此，在讀取 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 的值之前，必須呼叫 <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> 以將列舉值前移至集合的第一個項目。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> 會傳回相同的物件直到呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 或 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 會將 <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> 設定為下一個項目。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>也會傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> is undefined.</source>
          <target state="translated">如果最後一個呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">若要再次將 <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> 設定為集合的第一個元素，您可以在呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 之後，接著呼叫 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">集合中的預設實作<ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>未同步處理。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>The following code example shows how to enumerate the key/value pairs in the sorted list by using the <ph id="ph1">`foreach`</ph> statement (<ph id="ph2">`For Each`</ph> in Visual Basic, <ph id="ph3">`for each`</ph> in C++), which hides the use of the enumerator.</source>
          <target state="translated">下列程式碼範例示範如何使用列舉已排序的清單中的索引鍵/值組<ph id="ph1">`foreach`</ph>陳述式 (<ph id="ph2">`For Each`</ph>在 Visual Basic 中<ph id="ph3">`for each`</ph>c + + 中)，這會隱藏列舉值使用。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>In particular, note that the enumerator for the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface returns <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objects rather than <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objects.</source>
          <target state="translated">特別是，請注意，列舉程式<ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph>介面傳回<ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>物件而非<ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">程式碼範例是完整的範例，包括針對所提供的輸出的一部分<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated">取得值，指出 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 是否有固定的大小。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 有固定大小，則為 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsFixedSize">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 的預設實作中，這個屬性一律會傳回 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">具有固定大小的集合不允許在集合建立後新增或移除項目，但允許對現有項目進行修改。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">具有固定大小的集合是唯讀的集合只以防止新增或移除項目; 包裝函式因此，如果變更基礎的集合，包括新增或移除項目，固定大小的集合會反映這些變更。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsFixedSize">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> is read-only.</source>
          <target state="translated">取得值，指出 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 是否唯讀。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 是唯讀，則為 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsReadOnly">
          <source>In the default implementation of <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>, this property always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 的預設實作中，這個屬性一律會傳回 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">唯讀的集合不允許在集合建立後增加、移除或修改項目。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">是唯讀的集合是唯讀的集合只具有可防止修改集合的包裝函式因此，如果基礎集合進行變更，唯讀的集合會反映這些變更。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The key of the element to get or set.</source>
          <target state="translated">要取得或設定之項目的索引鍵。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Gets or sets the element with the specified key.</source>
          <target state="translated">取得或設定具有指定索引鍵的項目。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The element with the specified key, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is not in the dictionary or <ph id="ph3">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type <ph id="ph4">&lt;paramref name="TKey" /&gt;</ph> of the <ph id="ph5">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">具有指定索引鍵的項目，如果 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 不在字典中，或 <ph id="ph2">&lt;paramref name="key" /&gt;</ph> 的類型無法指派給 <ph id="ph3">&lt;paramref name="key" /&gt;</ph> 的 <ph id="ph4">&lt;paramref name="TKey" /&gt;</ph> 索引鍵類型，則為 <ph id="ph5">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>This property returns <ph id="ph1">`null`</ph> if <ph id="ph2">`key`</ph> is of a type that is not assignable to the key type <ph id="ph3">`TKey`</ph> of the <ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">這個屬性會傳回<ph id="ph1">`null`</ph>如果<ph id="ph2">`key`</ph>是無法指派給金鑰類型的類型<ph id="ph3">`TKey`</ph>的<ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph>.</source>
          <target state="translated">這個屬性可以使用下列語法提供存取集合中特定元素的能力：<ph id="ph1">`myCollection[key]`</ph>。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">您也可以使用<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>屬性所設定的值不存在的索引鍵的字典; 中加入新項目，例如<ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">不過，如果指定的索引鍵已經存在字典中，設定<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>屬性會覆寫舊的值。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">相反地，<ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph>方法不會修改現有的項目。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The C# language uses the <bpt id="p1">[</bpt>this<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept> keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> property.</source>
          <target state="translated">C# 語言使用<bpt id="p1">[</bpt>這<ept id="p1">](~/docs/csharp/language-reference/keywords/this.md)</ept>關鍵字定義索引，而不必實作<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic 會將 <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> 實作為預設屬性，這樣會提供相同的索引功能。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Retrieving the value of this property is an O(log <ph id="ph1">`n`</ph>) operation, where n is <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated">擷取這個屬性的值是 O (記錄<ph id="ph1">`n`</ph>) 作業，其中 n 是<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Setting the property is an O(log <ph id="ph1">`n`</ph>) operation if the key is already in the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">將屬性設定為 O (記錄<ph id="ph1">`n`</ph>) 作業時，如果索引鍵已存在於<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>If the key is not in the list, setting the property is an O(<ph id="ph1">`n`</ph>) operation for unsorted data, or O(log <ph id="ph2">`n`</ph>) if the new element is added at the end of the list.</source>
          <target state="translated">如果索引鍵不在清單中，將屬性設定為 O (<ph id="ph1">`n`</ph>) 未排序的資料或 I/O 作業 (記錄<ph id="ph2">`n`</ph>) 如果清單的結尾處加入新項目。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>If insertion causes a resize, the operation is O(<ph id="ph1">`n`</ph>).</source>
          <target state="translated">如果插入會導致調整大小，作業為 O (<ph id="ph1">`n`</ph>)。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph> property (the indexer in C#) of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>, and ways the property differs from the <ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A&gt;</ph>屬性 （C# 中為索引子）<ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph>介面<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>，以及方法的屬性與不同<ph id="ph4">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The example shows that, like the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> property can change the value associated with an existing key and can be used to add a new key/value pair if the specified key is not in the sorted list.</source>
          <target state="translated">此範例示範，例如<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType&gt;</ph>屬性，<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph>屬性可以變更現有的索引鍵相關聯的值，而且可用來加入新的索引鍵/值組，如果指定的索引鍵不是已排序的清單。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The example also shows that unlike the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> property does not throw an exception if <ph id="ph3">`key`</ph> is not in the sorted list, returning a null reference instead.</source>
          <target state="translated">此範例也示範，不同於<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A?displayProperty=nameWithType&gt;</ph>屬性，<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph>屬性不會擲回例外狀況如果<ph id="ph3">`key`</ph>未在已排序的清單中，傳回 null 參考改為。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Finally, the example demonstrates that getting the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph> property returns a null reference if <ph id="ph2">`key`</ph> is not the correct data type, and that setting the property throws an exception if <ph id="ph3">`key`</ph> is not the correct data type.</source>
          <target state="translated">最後，此範例會示範該取得<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType&gt;</ph>屬性會傳回 null 參考，如果<ph id="ph2">`key`</ph>不是正確的資料型別，並設定屬性擲回例外狀況，如果<ph id="ph3">`key`</ph>不是正確的資料類型。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">程式碼範例是完整的範例，包括針對所提供的輸出的一部分<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>A value is being assigned, and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> is of a type that is not assignable to the key type <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">正在指定值，而且 <ph id="ph1">&lt;paramref name="key" /&gt;</ph> 是無法指派給 <ph id="ph3">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 的 <ph id="ph2">&lt;paramref name="TKey" /&gt;</ph> 索引鍵型別的型別。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
          <source>A value is being assigned, and <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is of a type that is not assignable to the value type <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">正在指定值，而且 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 是無法指派給 <ph id="ph3">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 的 <ph id="ph2">&lt;paramref name="TValue" /&gt;</ph> 實值型別的型別。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>，包含 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 的索引鍵。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>，包含 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 的索引鍵。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Keys">
          <source>The order of the keys in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is the same as the order in the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">中的索引鍵的順序<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>中的順序相同<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Keys">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Keys">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>, to list the keys in the dictionary.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph>介面<ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph>，若要列出的字典中索引鍵。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Keys">
          <source>The example also shows how to enumerate the key/value pairs in the sorted list; note that the enumerator for the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface returns <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objects rather than <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objects.</source>
          <target state="translated">此範例也示範如何列舉的索引鍵/值組中已排序的清單。請注意，列舉程式<ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph>介面傳回<ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>物件而非<ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Keys">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">程式碼範例是完整的範例，包括針對所提供的輸出的一部分<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">要移除的項目索引鍵。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">將有指定索引鍵的項目從 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 移除。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>This method performs a binary search; however, the elements are moved up to fill in the open spot, so this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法會執行二進位搜尋。不過，項目上移，以填入的開啟位置，因此這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Remove%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Remove%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph>介面<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">程式碼範例是完整的範例，包括針對所提供的輸出的一部分<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Values">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>，包含 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 中的值。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>，包含 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 中的值。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Values">
          <source>The order of the values in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is the same as the order in the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">中的值順序<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>中的順序相同<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Values">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Values">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Values%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface with a <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>, to list the values in the sorted list.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Values%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph>介面<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>、 列出已排序的清單中的值。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Values">
          <source>The example also shows how to enumerate the key/value pairs in the sorted list; note that the enumerator for the <ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface returns <ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> objects rather than <ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> objects.</source>
          <target state="translated">此範例也示範如何列舉的索引鍵/值組中已排序的清單。請注意，列舉程式<ph id="ph1">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph>介面傳回<ph id="ph2">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>物件而非<ph id="ph3">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Values">
          <source>The code example is part of a larger example, including output, provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph> method.</source>
          <target state="translated">程式碼範例是完整的範例，包括針對所提供的輸出的一部分<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.System%23Collections%23IDictionary%23Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">傳回逐一查看集合的列舉值。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>，可用於逐一查看集合。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`for each`</ph> c + +<ph id="ph3">`For Each`</ph>在 Visual Basic 中) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，建議您使用 <ph id="ph1">`foreach`</ph>，而不要直接使用列舉值。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 也會將列舉值帶回至這個位置。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">在這個位置上，<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 並未定義。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，在讀取 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 的值之前，必須呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 以將列舉值前移至集合的第一個項目。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 會傳回相同的物件直到呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 或 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 會將 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為下一個項目。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>也會傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">如果最後一個呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">若要再次將 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為集合的第一個元素，您可以在呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 之後，接著呼叫 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Default implementations of collections in <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> are not synchronized.</source>
          <target state="translated">集合中的預設實作<ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>未同步處理。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.TrimExcess">
          <source>Sets the capacity to the actual number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>, if that number is less than 90 percent of current capacity.</source>
          <target state="translated">如果該數目小於目前容量的 90%，則將容量設為 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 中項目的實際數目。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.TrimExcess">
          <source>This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</source>
          <target state="translated">這個方法可用記憶體降到最低集合的額外負荷如果沒有新的項目會加入至集合。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.TrimExcess">
          <source>The cost of reallocating and copying a large <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> can be considerable, however, so the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.TrimExcess%2A&gt;</ph> method does nothing if the list is at more than 90 percent of capacity.</source>
          <target state="translated">重新配置及複製大型的成本<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>相當大，但是，可能會因此<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.TrimExcess%2A&gt;</ph>方法沒有作用，如果清單是在超過容量的 90%。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.TrimExcess">
          <source>This avoids incurring a large reallocation cost for a relatively small gain.</source>
          <target state="translated">這可避免產生大型重新配置成本相對較小的改善。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.TrimExcess">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.TrimExcess">
          <source>To reset a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> to its initial state, call the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Clear%2A&gt;</ph> method before calling <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.TrimExcess%2A&gt;</ph> method.</source>
          <target state="translated">若要重設<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>設為初始狀態，請呼叫<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Clear%2A&gt;</ph>方法之前先呼叫<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.TrimExcess%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.TrimExcess">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> to the default capacity.</source>
          <target state="translated">修剪空白<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>設定的容量<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>預設容量。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.TrimExcess">
          <source>The capacity can also be set using the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph> property.</source>
          <target state="translated">容量也可以設定使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Capacity%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)">
          <source>The key whose value to get.</source>
          <target state="translated">要取得其值的索引鍵。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)">
          <source>When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">當這個方法傳回時，如果找到索引鍵，則為與指定索引鍵建立關聯的值；否則為「值」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>參數的類型預設值。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">這個參數會以未初始化的狀態傳遞。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)">
          <source>Gets the value associated with the specified key.</source>
          <target state="translated">取得指定索引鍵相關聯的值。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 包含具有指定索引鍵的項目，則為 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)">
          <source>This method combines the functionality of the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.ContainsKey%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">這個方法會結合的功能<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.ContainsKey%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)">
          <source>If the key is not found, then the <ph id="ph1">`value`</ph> parameter gets the appropriate default value for the value type <ph id="ph2">`TValue`</ph>; for example, zero (0) for integer types, <ph id="ph3">`false`</ph> for Boolean types, and <ph id="ph4">`null`</ph> for reference types.</source>
          <target state="translated">如果找不到索引鍵，然後在<ph id="ph1">`value`</ph>參數可取得適當的預設值為實值型別<ph id="ph2">`TValue`</ph>; 例如，整數類型零 (0)<ph id="ph3">`false`</ph>針對布林類型，和<ph id="ph4">`null`</ph>參考類型。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)">
          <source>This method performs a binary search; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>.</source>
          <target state="translated">這個方法會執行二進位搜尋。因此，這個方法是 O (記錄<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)">
          <source>The example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values in a program that frequently tries keys that are not in the sorted list.</source>
          <target state="translated">此範例示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.TryGetValue%2A&gt;</ph>方法更有效率的方式來擷取在程式中，經常會嘗試不在已排序的清單中的索引鍵的值。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)">
          <source>For contrast, the example also shows how the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph> property (the indexer in C#) throws exceptions when attempting to retrieve nonexistent keys.</source>
          <target state="translated">相較之下，為此範例也示範如何<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Item%2A&gt;</ph>屬性 （C# 中為索引子） 在嘗試擷取不存在的索引鍵時，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedList`2.Values">
          <source>Gets a collection containing the values in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated">取得集合，包含 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 中的值。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Values">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph>，包含 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.SortedList`2" /&gt;</ph> 中的值。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Values">
          <source>The order of the values in the <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> is the same as the order in the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">中的值順序<ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>中的順序相同<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Values">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> refers back to the values in the original <ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>.</source>
          <target state="translated">傳回<ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>不是靜態的複本; 相反地，<ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>中原始的值是指回<ph id="ph3">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Values">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> continue to be reflected in the <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>.</source>
          <target state="translated">因此，變更為<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>才會反映在繼續<ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Values">
          <source>The collection returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Values%2A&gt;</ph> property provides an efficient way to retrieve values by index.</source>
          <target state="translated">所傳回的集合<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Values%2A&gt;</ph>屬性提供有效率的方式來擷取依索引值。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Values">
          <source>It is not necessary to regenerate the list when the property is accessed, because the list is just a wrapper for the internal array of values.</source>
          <target state="translated">您不需要重新產生清單時在屬性經過存取時，因為清單是只在內部陣列值的包裝函式。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Values">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Values%2A&gt;</ph> property for indexed retrieval of values from a sorted list of strings:</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Values%2A&gt;</ph>索引擷取的已排序的清單的字串值的屬性：</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Values">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 O(1) 運算。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Values">
          <source>This code example shows how to enumerate the values in the sorted list using the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Values%2A&gt;</ph> property, and how to enumerate the keys and values in the sorted list.</source>
          <target state="translated">這個程式碼範例示範如何列舉的值，在已排序的清單中，使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Values%2A&gt;</ph>屬性，以及如何列舉的索引鍵和已排序的清單中的值。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Values">
          <source>The example also shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Values%2A&gt;</ph> property for efficient indexed retrieval of values.</source>
          <target state="translated">此範例也示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Values%2A&gt;</ph>有效率的索引值擷取的屬性。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedList`2.Values">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>類別。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>