<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDictionary`2.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d63ca205014079b51a43184fd4357d42421abe16.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d63ca205014079b51a43184fd4357d42421abe16</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The type of keys in the dictionary.</source>
          <target state="translated">字典中之索引鍵的類型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The type of values in the dictionary.</source>
          <target state="translated">字典中之值的類型。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.IDictionary`2">
          <source>Represents a generic collection of key/value pairs.</source>
          <target state="translated">表示索引鍵/值組的泛型集合。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface is the base interface for generic collections of key/value pairs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>介面是針對索引鍵/值組的泛型集合的基底介面。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>Each element is a key/value pair stored in a <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> object.</source>
          <target state="translated">每個項目是儲存在索引鍵/值組<ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>Each pair must have a unique key.</source>
          <target state="translated">每個組必須具有唯一索引鍵。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>Implementations can vary in whether they allow <ph id="ph1">`key`</ph> to be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">實作有所不同是否允許<ph id="ph1">`key`</ph>是<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The value can be <ph id="ph1">`null`</ph> and does not have to be unique.</source>
          <target state="translated">這個值可以是<ph id="ph1">`null`</ph>並不需要是唯一的。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>介面可讓包含的索引鍵和要列舉的值，但它並不代表任何特定排序順序。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`For Each`</ph> in Visual Basic, <ph id="ph3">`for each`</ph> in C++) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`For Each`</ph>在 Visual Basic 中<ph id="ph3">`for each`</ph>c + + 中) 傳回集合中的項目類型的物件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>Since each element of the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">因為每個項目<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>是索引鍵/值組，項目型別不是索引鍵的類型或值的類型。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>Instead, the element type is <ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>.</source>
          <target state="translated">相反地，項目型別是<ph id="ph1">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>For example:</source>
          <target state="translated">例如: </target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph>陳述式是包裝函式，只允許讀取，不寫入至集合的列舉值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <ph id="ph1">&lt;xref:System.Type.Equals%2A&gt;</ph> method.</source>
          <target state="translated">因為索引鍵可以被繼承，變更其行為，其絕對唯一性無法保證使用比較<ph id="ph1">&lt;xref:System.Type.Equals%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> of strings, with string keys, and accesses it through the <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface.</source>
          <target state="translated">下列程式碼範例會建立空<ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>的字串，以字串索引鍵，並存取透過<ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">此程式碼範例會使用<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph>方法，將某些項目。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> method throws <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">此範例示範<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph>方法會擲回<ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph>時嘗試加入重複的索引鍵。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property (the indexer in C#) to retrieve values, demonstrating that a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</source>
          <target state="translated">此範例會使用<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph>屬性 （C# 中為索引子） 來擷取值，擊發<ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph>要求的索引鍵不存在，而且可以取代顯示索引鍵關聯的值時，會擲回。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary, and how to use the <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A&gt;</ph> method to test whether a key exists prior to calling the <ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> method.</source>
          <target state="translated">此範例示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph>方法更有效率的方式來擷取值，如果程式通常必須嘗試不在字典中，以及如何使用中的索引鍵值為<ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A&gt;</ph>方法來測試是否在呼叫之前存在的索引鍵<ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>Finally, the example shows how to enumerate the keys and values in the dictionary, and how to enumerate the values alone using the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Values%2A&gt;</ph> property.</source>
          <target state="translated">最後，範例會示範如何列舉索引鍵和值在字典中，以及如何將列舉值單獨使用<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Values%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IDictionary`2">
          <source>The implementing class must have a means to compare keys.</source>
          <target state="translated">實作的類別必須要有方法來比較索引鍵。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>The object to use as the key of the element to add.</source>
          <target state="translated">做為要加入項目之索引鍵的物件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>The object to use as the value of the element to add.</source>
          <target state="translated">做為要加入項目之值的物件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>Adds an element with the provided key and value to the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">將具有提供之索引鍵和值的項目加入 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph> in C# (<ph id="ph3">`myCollection("myNonexistentKey") = myValue`</ph> in Visual Basic).</source>
          <target state="translated">您也可以使用<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph>屬性所設定的值不存在的索引鍵的字典; 中加入新項目，例如<ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>C# 中 (<ph id="ph3">`myCollection("myNonexistentKey") = myValue`</ph>在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">不過，如果指定的索引鍵已經存在字典中，設定<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph>屬性會覆寫舊的值。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">相反地，<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph>方法不會修改現有的項目。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>Implementations can vary in how they determine equality of objects; for example, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class uses <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>, whereas the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class allows the user to specify the <ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> implementation to use for comparing keys.</source>
          <target state="translated">實作可以改變它們如何判定相等的物件。例如，<ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>類別會使用<ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>，而<ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>類別可讓使用者指定<ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph>實作来用於比較索引鍵。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>Implementations can vary in whether they allow <ph id="ph1">`key`</ph> to be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">實作有所不同是否允許<ph id="ph1">`key`</ph>是<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>The following code example creates an empty <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> of strings, with integer keys, and accesses it through the <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface.</source>
          <target state="translated">下列程式碼範例會建立空<ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>的字串、 整數索引鍵，並存取透過<ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> method to add some elements.</source>
          <target state="translated">此程式碼範例會使用<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph>方法，將某些項目。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>The example demonstrates that the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> when attempting to add a duplicate key.</source>
          <target state="translated">此範例示範<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph>方法會擲回<ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph>時嘗試加入重複的索引鍵。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>This code is part of a larger example that can be compiled and executed.</source>
          <target state="translated">此程式碼是可編譯及執行之較大範例的一部分。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">請參閱 <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> 中已存在具有相同索引鍵的元素。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> 是唯讀的。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> 中尋找的索引鍵。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> contains an element with the specified key.</source>
          <target state="translated">判斷 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> 是否包含具有指定之索引鍵的項目。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> contains an element with the key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 包含具有該索引鍵的項目，則為 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source>Implementations can vary in how they determine equality of objects; for example, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class uses <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>, whereas the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class allows the user to specify the <ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> implementation to use for comparing keys.</source>
          <target state="translated">實作可以改變它們如何判定相等的物件。例如，<ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>類別會使用<ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>，而<ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>類別可讓使用者指定<ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph>實作来用於比較索引鍵。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source>Implementations can vary in whether they allow <ph id="ph1">`key`</ph> to be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">實作有所不同是否允許<ph id="ph1">`key`</ph>是<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A&gt;</ph> method to test whether a key exists prior to calling the <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A&gt;</ph>方法來測試機碼是否存在然後才呼叫<ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source>It also shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph> method, which can be a more efficient way to retrieve values if a program frequently tries key values that are not in the dictionary.</source>
          <target state="translated">它也示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph>方法，可以更有效率的方式來擷取值，如果程式經常會嘗試不在字典中的索引鍵值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source>Finally, it shows how to insert items using <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property (the indexer in C#).</source>
          <target state="translated">最後，它會示範如何插入項目使用<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph>屬性 （C# 中為索引子）。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source>This code is part of a larger example that can be compiled and executed.</source>
          <target state="translated">此程式碼是可編譯及執行之較大範例的一部分。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">請參閱 <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>The key of the element to get or set.</source>
          <target state="translated">要取得或設定之項目的索引鍵。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>Gets or sets the element with the specified key.</source>
          <target state="translated">取得或設定具有指定索引鍵的項目。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>The element with the specified key.</source>
          <target state="translated">具有指定索引鍵的項目。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</source>
          <target state="translated">這個屬性會提供可以使用下列語法存取集合中的特定元素的能力： <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph>在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph> in C# (<ph id="ph3">`myCollection("myNonexistentKey") = myValue`</ph> in Visual Basic).</source>
          <target state="translated">您也可以使用<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph>屬性所設定的值不存在的索引鍵的字典; 中加入新項目，例如<ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>C# 中 (<ph id="ph3">`myCollection("myNonexistentKey") = myValue`</ph>在 Visual Basic 中)。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">不過，如果指定的索引鍵已經存在字典中，設定<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph>屬性會覆寫舊的值。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">相反地，<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Add%2A&gt;</ph>方法不會修改現有的項目。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>Implementations can vary in how they determine equality of objects; for example, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class uses <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>, whereas the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class allows the user to specify the <ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> implementation to use for comparing keys.</source>
          <target state="translated">實作可以改變它們如何判定相等的物件。例如，<ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>類別會使用<ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>，而<ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>類別可讓使用者指定<ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph>實作来用於比較索引鍵。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">C# 語言使用關鍵字來定義索引，而不必實作<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic 會將 <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> 實作為預設屬性，這樣會提供相同的索引功能。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>Implementations can vary in whether they allow <ph id="ph1">`key`</ph> to be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">實作有所不同是否允許<ph id="ph1">`key`</ph>是<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property (the indexer in C#) to retrieve values, demonstrating that a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</source>
          <target state="translated">下列程式碼範例使用<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph>屬性 （C# 中為索引子） 來擷取值，擊發<ph id="ph2">&lt;xref:System.Collections.Generic.KeyNotFoundException&gt;</ph>要求的索引鍵不存在，而且可以取代顯示索引鍵關聯的值時，會擲回。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>The example also shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary.</source>
          <target state="translated">此範例也示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph>方法更有效率的方式來擷取值，如果程式通常必須嘗試不在字典中的索引鍵值。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>This code is part of a larger example that can be compiled and executed.</source>
          <target state="translated">此程式碼是可編譯及執行之較大範例的一部分。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">請參閱 <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>The property is retrieved and <ph id="ph1">&lt;paramref name="key" /&gt;</ph> is not found.</source>
          <target state="translated">屬性已擷取，並且找不到 <ph id="ph1">&lt;paramref name="key" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <source>The property is set and the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> is read-only.</source>
          <target state="translated">屬性已設定，而且 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> 是唯讀的。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IDictionary`2.Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>，包含 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> 的索引鍵。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> containing the keys of the object that implements <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>，包含實作 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> 之物件的索引鍵。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Keys">
          <source>The order of the keys in the returned <ph id="ph1">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> is unspecified, but it is guaranteed to be the same order as the corresponding values in the <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602.Values%2A&gt;</ph> property.</source>
          <target state="translated">在傳回的索引鍵的順序<ph id="ph1">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>並未指定，但一定要依照中的對應值的相同順序<ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>傳回<ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602.Values%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Keys">
          <source>The following code example shows how to enumerate keys alone using the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Keys%2A&gt;</ph> property.</source>
          <target state="translated">下列程式碼範例示範如何列舉金鑰單獨使用<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Keys%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Keys">
          <source>This code is part of a larger example that can be compiled and executed.</source>
          <target state="translated">此程式碼是可編譯及執行之較大範例的一部分。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Keys">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">請參閱 <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source>The key of the element to remove.</source>
          <target state="translated">要移除的項目索引鍵。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">將有指定索引鍵的項目從 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> 移除。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is successfully removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果成功移除項目，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source>This method also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> was not found in the original <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">如果在原始的 <ph id="ph1">&lt;see langword="false" /&gt;</ph> 中找不到 <ph id="ph2">&lt;paramref name="key" /&gt;</ph>，則這個方法也會傳回 <ph id="ph3">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source>Implementations can vary in how they determine equality of objects; for example, the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class uses <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>, whereas the <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class allows the user to specify the <ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> implementation to use for comparing keys.</source>
          <target state="translated">實作可以改變它們如何判定相等的物件。例如，<ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph>類別會使用<ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType&gt;</ph>，而<ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>類別可讓使用者指定<ph id="ph4">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph>實作来用於比較索引鍵。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source>The following code example shows how to remove a key/value pair from a dictionary using the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Remove%2A&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例示範如何移除索引鍵/值組字典，使用<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Remove%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source>This code is part of a larger example that can be compiled and executed.</source>
          <target state="translated">此程式碼是可編譯及執行之較大範例的一部分。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">請參閱 <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> 是唯讀的。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>The key whose value to get.</source>
          <target state="translated">要取得其值的索引鍵。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">當這個方法傳回時，如果找到索引鍵，則為與指定索引鍵建立關聯的值；否則為「值」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>參數的類型預設值。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">這個參數會以未初始化的狀態傳遞。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>Gets the value associated with the specified key.</source>
          <target state="translated">取得指定索引鍵相關聯的值。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object that implements <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果實作 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> 之物件包含具有指定索引鍵的元素，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>This method combines the functionality of the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property.</source>
          <target state="translated">這個方法會結合的功能<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.ContainsKey%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>If the key is not found, then the <ph id="ph1">`value`</ph> parameter gets the appropriate default value for the type <ph id="ph2">`TValue`</ph>; for example, zero (0) for integer types, <ph id="ph3">`false`</ph> for Boolean types, and <ph id="ph4">`null`</ph> for reference types.</source>
          <target state="translated">如果找不到索引鍵，然後在<ph id="ph1">`value`</ph>參數取得類型的適當預設值<ph id="ph2">`TValue`</ph>; 例如，整數類型零 (0)<ph id="ph3">`false`</ph>針對布林類型，和<ph id="ph4">`null`</ph>參考類型。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>The example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph> method to retrieve values.</source>
          <target state="translated">此範例示範如何使用<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph>方法來擷取值。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>If a program frequently tries key values that are not in a dictionary, the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph> method can be more efficient than using the <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph> property (the indexer in C#), which throws exceptions when attempting to retrieve nonexistent keys.</source>
          <target state="translated">如果程式經常會嘗試不在字典中的索引鍵值<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.TryGetValue%2A&gt;</ph>方法可以是更有效率使用<ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602.Item%2A&gt;</ph>屬性 （索引子在 C# 中），嘗試擷取不存在的索引鍵時，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>This code is part of a larger example that can be compiled and executed.</source>
          <target state="translated">此程式碼是可編譯及執行之較大範例的一部分。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">請參閱 <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.IDictionary`2.Values">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>，包含 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> 中的值。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> containing the values in the object that implements <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>，包含實作 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> 之物件中的值。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Values">
          <source>The order of the values in the returned <ph id="ph1">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> is unspecified, but it is guaranteed to be the same order as the corresponding keys in the <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602.Keys%2A&gt;</ph> property.</source>
          <target state="translated">在傳回值的順序<ph id="ph1">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>並未指定，但一定要在對應的索引鍵的順序相同<ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>傳回<ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602.Keys%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Values">
          <source>The following code example shows how to enumerate values alone using the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Values%2A&gt;</ph> property.</source>
          <target state="translated">下列程式碼範例示範如何列舉值單獨使用<ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602.Values%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Values">
          <source>This code is part of a larger example that can be compiled and executed.</source>
          <target state="translated">此程式碼是可編譯及執行之較大範例的一部分。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.IDictionary`2.Values">
          <source>See <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">請參閱 <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>