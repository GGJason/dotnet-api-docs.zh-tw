<Type Name="IEnumerable&lt;T&gt;" FullName="System.Collections.Generic.IEnumerable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b070a7cd2a9068b0547b21f8ce100d5e69573a1c" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46637906" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumerable&lt;out T&gt; : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerable`1&lt;+ T&gt; implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEnumerable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerable(Of Out T)&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEnumerable : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type seq&lt;'T&gt; = interface&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="64a41-101">要列舉之物件的型別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="64a41-101">The type of objects to enumerate.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="64a41-102">公開支援指定型別集合上簡單反覆運算的列舉值。</span>
      <span class="sxs-lookup">
        <span data-stu-id="64a41-102">Exposes the enumerator, which supports a simple iteration over a collection of a specified type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64a41-103"><xref:System.Collections.Generic.IEnumerable%601> 在為集合的基底介面<xref:System.Collections.Generic>命名空間，例如<xref:System.Collections.Generic.List%601>， <xref:System.Collections.Generic.Dictionary%602>，和<xref:System.Collections.Generic.Stack%601>與其他泛型集合，例如<xref:System.Collections.ObjectModel.ObservableCollection%601>和<xref:System.Collections.Concurrent.ConcurrentStack%601>。</span><span class="sxs-lookup"><span data-stu-id="64a41-103"><xref:System.Collections.Generic.IEnumerable%601> is the base interface for collections in the <xref:System.Collections.Generic> namespace such as <xref:System.Collections.Generic.List%601>, <xref:System.Collections.Generic.Dictionary%602>, and <xref:System.Collections.Generic.Stack%601> and other generic collections such as <xref:System.Collections.ObjectModel.ObservableCollection%601> and <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span> <span data-ttu-id="64a41-104">實作的集合<xref:System.Collections.Generic.IEnumerable%601>可以藉由使用列舉`foreach`陳述式。</span><span class="sxs-lookup"><span data-stu-id="64a41-104">Collections that implement <xref:System.Collections.Generic.IEnumerable%601> can be enumerated by using the `foreach` statement.</span></span>  
  
 <span data-ttu-id="64a41-105">這個介面的非泛型版本，請參閱<xref:System.Collections.IEnumerable?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="64a41-105">For the non-generic version of this interface, see <xref:System.Collections.IEnumerable?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="64a41-106"><xref:System.Collections.Generic.IEnumerable%601> 包含實作此介面; 時，您必須實作單一方法<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>，以傳回<xref:System.Collections.Generic.IEnumerator%601>物件。</span><span class="sxs-lookup"><span data-stu-id="64a41-106"><xref:System.Collections.Generic.IEnumerable%601> contains a single method that you must implement when implementing this interface; <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>, which returns an <xref:System.Collections.Generic.IEnumerator%601> object.</span></span> <span data-ttu-id="64a41-107">傳回<xref:System.Collections.Generic.IEnumerator%601>讓您能夠藉由公開逐一查看集合<xref:System.Collections.Generic.IEnumerator%601.Current%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="64a41-107">The returned <xref:System.Collections.Generic.IEnumerator%601> provides the ability to iterate through the collection by exposing a <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64a41-108">下列範例示範如何實作<xref:System.Collections.Generic.IEnumerable%601>介面，以及如何使用這個實作來建立 LINQ 查詢。</span><span class="sxs-lookup"><span data-stu-id="64a41-108">The following example demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface and how to use that implementation to create a LINQ query.</span></span> <span data-ttu-id="64a41-109">當您實作<xref:System.Collections.Generic.IEnumerable%601>，您也必須實作<xref:System.Collections.Generic.IEnumerator%601>或僅適用 C#，您可以使用[產生](~/docs/csharp/language-reference/keywords/yield.md)關鍵字。</span><span class="sxs-lookup"><span data-stu-id="64a41-109">When you implement <xref:System.Collections.Generic.IEnumerable%601>, you must also implement <xref:System.Collections.Generic.IEnumerator%601> or, for C# only, you can use the [yield](~/docs/csharp/language-reference/keywords/yield.md) keyword.</span></span> <span data-ttu-id="64a41-110">實作<xref:System.Collections.Generic.IEnumerator%601>也需要<xref:System.IDisposable>實作，您就會在此範例中看到。</span><span class="sxs-lookup"><span data-stu-id="64a41-110">Implementing <xref:System.Collections.Generic.IEnumerator%601> also requires <xref:System.IDisposable> to be implemented, which you will see in this example.</span></span>  
  
 [!code-csharp[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/vb/module1.vb#1)]  
  
 <span data-ttu-id="64a41-111">如需其他 C# 範例示範如何實作<xref:System.Collections.Generic.IEnumerable%601>介面，請參閱 <<c2> [ 泛型範例](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593)。</span><span class="sxs-lookup"><span data-stu-id="64a41-111">For another C# example that demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface, see the [Generics Sample](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593).</span></span> <span data-ttu-id="64a41-112">這個範例會使用`yield`關鍵字，而不實作<xref:System.Collections.Generic.IEnumerator%601>。</span><span class="sxs-lookup"><span data-stu-id="64a41-112">This sample uses the `yield` keyword instead of implementing <xref:System.Collections.Generic.IEnumerator%601>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="64a41-113">
          <see cref="T:System.Collections.Generic.IEnumerable\`1" /> 功能同位檢查與非泛型集合;實作<see cref="T:System.Collections.Generic.IEnumerable\`1" />可讓要傳遞至預期的方法的泛型集合<see cref="T:System.Collections.IEnumerable" />物件。</span>
        <span class="sxs-lookup">
          <span data-stu-id="64a41-113">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" /> is included for parity with non-generic collections; implementing <see cref="T:System.Collections.Generic.IEnumerable\`1" /> allows a generic collection to be passed to a method that expects an <see cref="T:System.Collections.IEnumerable" /> object.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
    <altmember cref="N:System.Collections" />
    <related type="Article" href="http://msdn.microsoft.com/library/c60d7589-51f2-4463-a2d5-22506bbc1554">
      <span data-ttu-id="64a41-114">逐步解說：在 Visual Basic 中實作 IEnumerable(Of T)</span>
      <span class="sxs-lookup">
        <span data-stu-id="64a41-114">Walkthrough: Implementing IEnumerable(Of T) in Visual Basic</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7">
      <span data-ttu-id="64a41-115">迭代器 (C# 和 Visual Basic)</span>
      <span class="sxs-lookup">
        <span data-stu-id="64a41-115">Iterators (C# and Visual Basic)</span>
      </span>
    </related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&amp;pathId=1364935593">
      <span data-ttu-id="64a41-116">泛型範例</span>
      <span class="sxs-lookup">
        <span data-stu-id="64a41-116">Generics Sample</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;out T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of Out T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="seq.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64a41-117">傳回可逐一查看集合的列舉程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="64a41-117">Returns an enumerator that iterates through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64a41-118">可用來逐一查看集合的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="64a41-118">An enumerator that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64a41-119">傳回<xref:System.Collections.Generic.IEnumerator%601>讓您能夠藉由公開逐一查看集合<xref:System.Collections.Generic.IEnumerator%601.Current%2A>屬性。讀取集合中的資料，但無法修改集合，您可以使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="64a41-119">The returned <xref:System.Collections.Generic.IEnumerator%601> provides the ability to iterate through the collection by exposing a <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property .You can use enumerators to read the data in a collection, but not to modify the collection.</span></span>  
  
 <span data-ttu-id="64a41-120">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="64a41-120">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="64a41-121">在這個位置上，<xref:System.Collections.Generic.IEnumerator%601.Current%2A> 並未定義。</span><span class="sxs-lookup"><span data-stu-id="64a41-121">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="64a41-122">因此，您必須呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>列舉值前進到第一個項目，再讀取的值集合的方法<xref:System.Collections.Generic.IEnumerator%601.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="64a41-122">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="64a41-123"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> 會傳回相同的物件，直到<xref:System.Collections.IEnumerator.MoveNext%2A>稱為再次<xref:System.Collections.IEnumerator.MoveNext%2A>設定<xref:System.Collections.Generic.IEnumerator%601.Current%2A>下一個項目。</span><span class="sxs-lookup"><span data-stu-id="64a41-123"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called again as <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="64a41-124">如果<xref:System.Collections.IEnumerator.MoveNext%2A>集合，也就是列舉值的結尾是否位於集合中的最後一個元素之後的階段和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="64a41-124">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="64a41-125">列舉值位於此位置，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="64a41-125">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="64a41-126">如果上次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.Generic.IEnumerator%601.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="64a41-126">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="64a41-127">您不能再次將 <xref:System.Collections.Generic.IEnumerator%601.Current%2A> 設定為集合的第一個項目；您必須建立新的列舉值執行個體。</span><span class="sxs-lookup"><span data-stu-id="64a41-127">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  

 <span data-ttu-id="64a41-128">如果變更的集合，例如加入、 修改或刪除元素，列舉值的行為是未定義。</span><span class="sxs-lookup"><span data-stu-id="64a41-128">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of the enumerator is undefined.</span></span>  
  
 <span data-ttu-id="64a41-129">列舉值並沒有獨佔存取權集合，讓列舉值會維持有效狀態，只要集合維持不變。</span><span class="sxs-lookup"><span data-stu-id="64a41-129">An enumerator does not have exclusive access to the collection so an enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="64a41-130">如果對集合進行變更，例如加入、 修改或刪除元素，列舉值無效，您可能會收到非預期的結果。</span><span class="sxs-lookup"><span data-stu-id="64a41-130">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is invalidated and you may get unexpected results.</span></span> <span data-ttu-id="64a41-131">此外，列舉集合不是安全執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="64a41-131">Also, enumerating a collection is not a thread-safe procedure.</span></span> <span data-ttu-id="64a41-132">若要確保執行緒安全，您應該列舉期間鎖定集合，或集合上實作同步處理。</span><span class="sxs-lookup"><span data-stu-id="64a41-132">To guarantee thread-safety, you should lock the collection during enumerator or implement synchronization on the collection.</span></span>  
  
 <span data-ttu-id="64a41-133">集合中的預設實作<xref:System.Collections.Generic?displayProperty=nameWithType>命名空間未同步。</span><span class="sxs-lookup"><span data-stu-id="64a41-133">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace aren't synchronized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64a41-134">下列範例示範如何實作<xref:System.Collections.Generic.IEnumerable%601>介面，並會使用該實作來建立 LINQ 查詢。</span><span class="sxs-lookup"><span data-stu-id="64a41-134">The following example demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface and uses that implementation to create a LINQ query.</span></span> <span data-ttu-id="64a41-135">當您實作<xref:System.Collections.Generic.IEnumerable%601>，您也必須實作<xref:System.Collections.Generic.IEnumerator%601>或僅適用 C#，您可以使用[產生](~/docs/csharp/language-reference/keywords/yield.md)關鍵字。</span><span class="sxs-lookup"><span data-stu-id="64a41-135">When you implement <xref:System.Collections.Generic.IEnumerable%601>, you must also implement <xref:System.Collections.Generic.IEnumerator%601> or, for C# only, you can use the [yield](~/docs/csharp/language-reference/keywords/yield.md) keyword.</span></span> <span data-ttu-id="64a41-136">實作<xref:System.Collections.Generic.IEnumerator%601>也需要<xref:System.IDisposable>實作，您就會在此範例中看到。</span><span class="sxs-lookup"><span data-stu-id="64a41-136">Implementing <xref:System.Collections.Generic.IEnumerator%601> also requires <xref:System.IDisposable> to be implemented, which you will see in this example.</span></span>  
  
 [!code-csharp[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/vb/module1.vb#1)]  
  
 <span data-ttu-id="64a41-137">如需其他 C# 範例示範如何實作<xref:System.Collections.Generic.IEnumerable%601>介面，請參閱 <<c2> [ 泛型範例](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593)。</span><span class="sxs-lookup"><span data-stu-id="64a41-137">For another C# example that demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface, see the [Generics Sample](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593).</span></span> <span data-ttu-id="64a41-138">這個範例會使用的`yield`關鍵字，而不實作<xref:System.Collections.Generic.IEnumerator%601>。</span><span class="sxs-lookup"><span data-stu-id="64a41-138">This sample uses of the `yield` keyword instead of implementing <xref:System.Collections.Generic.IEnumerator%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
        <related type="Article" href="http://msdn.microsoft.com/library/c60d7589-51f2-4463-a2d5-22506bbc1554">
          <span data-ttu-id="64a41-139">逐步解說：在 Visual Basic 中實作 IEnumerable(Of T)</span>
          <span class="sxs-lookup">
            <span data-stu-id="64a41-139">Walkthrough: Implementing IEnumerable(Of T) in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7">
          <span data-ttu-id="64a41-140">迭代器 (C# 和 Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="64a41-140">Iterators (C# and Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>