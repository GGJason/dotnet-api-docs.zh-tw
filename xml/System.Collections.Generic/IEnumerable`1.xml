<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IEnumerable`1.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe07c7628000b2c4025ed54ca68bbecc86cda707f970.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c7628000b2c4025ed54ca68bbecc86cda707f970</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IEnumerable`1">
          <source>The type of objects to enumerate.</source>
          <target state="translated">要列舉之物件的類型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.IEnumerable`1">
          <source>Exposes the enumerator, which supports a simple iteration over a collection of a specified type.</source>
          <target state="translated">公開支援指定類型集合上簡單反覆運算的列舉值。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IEnumerable`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> is the base interface for collections in the <ph id="ph2">&lt;xref:System.Collections.Generic&gt;</ph> namespace such as <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.Generic.Stack%601&gt;</ph> and other generic collections such as <ph id="ph6">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> and <ph id="ph7">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> 在為集合的基底介面<ph id="ph2">&lt;xref:System.Collections.Generic&gt;</ph>命名空間，例如<ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>， <ph id="ph4">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>，和<ph id="ph5">&lt;xref:System.Collections.Generic.Stack%601&gt;</ph>與其他泛型集合，例如<ph id="ph6">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph>和<ph id="ph7">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IEnumerable`1">
          <source>Collections that implement <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> can be enumerated by using the <ph id="ph2">`foreach`</ph> statement.</source>
          <target state="translated">實作的集合<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>可以使用列舉<ph id="ph2">`foreach`</ph>陳述式。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IEnumerable`1">
          <source>For the non-generic version of this interface, see <ph id="ph1">&lt;xref:System.Collections.IEnumerable?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個介面的非泛型版本，請參閱<ph id="ph1">&lt;xref:System.Collections.IEnumerable?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IEnumerable`1">
          <source>For the non-generic version of this interface, see <ph id="ph1">&lt;xref:System.Collections.IEnumerable?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個介面的非泛型版本，請參閱<ph id="ph1">&lt;xref:System.Collections.IEnumerable?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IEnumerable`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> contains a single method that you must implement when implementing this interface; <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>, which returns an <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> 包含實作此介面; 時，您必須實作單一方法<ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph>，它會傳回<ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IEnumerable`1">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph> provides the ability to iterate through the collection by exposing a <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> property.</source>
          <target state="translated">傳回<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph>可讓您逐一查看集合的公開<ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IEnumerable`1">
          <source>The following example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface and how to use that implementation to create a LINQ query.</source>
          <target state="translated">下列範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>介面以及如何使用這個實作來建立 LINQ 查詢。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IEnumerable`1">
          <source>When you implement <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, you must also implement <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph> or, for C# only, you can use the <bpt id="p1">[</bpt>yield<ept id="p1">](~/docs/csharp/language-reference/keywords/yield.md)</ept> keyword.</source>
          <target state="translated">當您實作<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>，您也必須實作<ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph>或僅限 C#，您可以使用<bpt id="p1">[</bpt>產生<ept id="p1">](~/docs/csharp/language-reference/keywords/yield.md)</ept>關鍵字。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IEnumerable`1">
          <source>Implementing <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph> also requires <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> to be implemented, which you will see in this example.</source>
          <target state="translated">實作<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph>也需要<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>實作，您會看到在這個範例中。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IEnumerable`1">
          <source>For another C# example that demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface, see the <bpt id="p1">[</bpt>Generics Sample<ept id="p1">](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&amp;pathId=1364935593)</ept>.</source>
          <target state="translated">如需其他 C# 範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>介面，請參閱<bpt id="p1">[</bpt>泛型範例<ept id="p1">](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&amp;pathId=1364935593)</ept>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IEnumerable`1">
          <source>This sample uses the <ph id="ph1">`yield`</ph> keyword instead of implementing <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph>.</source>
          <target state="translated">這個範例會使用<ph id="ph1">`yield`</ph>關鍵字，而不實作<ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.IEnumerable`1">
          <source><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> is included for parity with non-generic collections; implementing <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> allows a generic collection to be passed to a method that expects an <ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 包含在同位檢查的非泛型集合。實作<ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph>要傳遞給預期的方法的泛型集合可讓<ph id="ph3">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">傳回逐一查看集合的列舉值。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">可用來逐一查看集合的列舉值。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph> provides the ability to iterate through the collection by exposing a <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> property .You can use enumerators to read the data in a collection, but not to modify the collection.</source>
          <target state="translated">傳回<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph>可讓您逐一查看集合的公開<ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>屬性。讀取集合中的資料，但無法修改集合，您可以使用列舉值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">在這個位置上，<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> 並未定義。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，您必須呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>方法，以將列舉值前進到第一個項目，再讀取的值集合的<ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called again as <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph4">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> 會傳回相同的物件直到<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>做為一次呼叫<ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>設定<ph id="ph4">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>下一個項目。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>也會傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">如果最後一個呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated">您不能再次將 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> 設定為集合的第一個項目；您必須建立新的列舉值執行個體。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>An enumerator does not have exclusive access to the collection so an enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取權，因此，只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is invalidated and you may get unexpected results.</source>
          <target state="translated">如果對集合進行變更，例如加入、 修改或刪除元素，列舉值無效，您可能會收到非預期的結果。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>Also, enumerating a collection is not a thread-safe procedure.</source>
          <target state="translated">此外，列舉集合不是安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>To guarantee thread-safety, you should lock the collection during enumerator or implement synchronization on the collection.</source>
          <target state="translated">若要確保執行緒安全，您應該列舉過程中鎖定集合，或集合上實作的同步處理。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace aren't synchronized.</source>
          <target state="translated">集合中的預設實作<ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph>命名空間未同步。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>The following example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface and uses that implementation to create a LINQ query.</source>
          <target state="translated">下列範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>介面，並使用該實作建立 LINQ 查詢。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>When you implement <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>, you must also implement <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph> or, for C# only, you can use the <bpt id="p1">[</bpt>yield<ept id="p1">](~/docs/csharp/language-reference/keywords/yield.md)</ept> keyword.</source>
          <target state="translated">當您實作<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>，您也必須實作<ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph>或僅限 C#，您可以使用<bpt id="p1">[</bpt>產生<ept id="p1">](~/docs/csharp/language-reference/keywords/yield.md)</ept>關鍵字。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>Implementing <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph> also requires <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> to be implemented, which you will see in this example.</source>
          <target state="translated">實作<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph>也需要<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>實作，您會看到在這個範例中。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>For another C# example that demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface, see the <bpt id="p1">[</bpt>Generics Sample<ept id="p1">](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&amp;pathId=1364935593)</ept>.</source>
          <target state="translated">如需其他 C# 範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>介面，請參閱<bpt id="p1">[</bpt>泛型範例<ept id="p1">](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&amp;pathId=1364935593)</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <source>This sample uses of the <ph id="ph1">`yield`</ph> keyword instead of implementing <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph>.</source>
          <target state="translated">這個範例會使用的<ph id="ph1">`yield`</ph>關鍵字，而不實作<ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>