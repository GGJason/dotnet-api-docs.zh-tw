<Type Name="HashSet&lt;T&gt;+Enumerator" FullName="System.Collections.Generic.HashSet&lt;T&gt;+Enumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8fff619eef9d9805923c444d7da6ac5b4c21099f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct HashSet&lt;T&gt;.Enumerator : System.Collections.Generic.IEnumerator&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi serializable sealed beforefieldinit HashSet`1/Enumerator&lt;T&gt; extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;!T&gt;, class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.HashSet`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure HashSet(Of T).Enumerator&#xA;Implements IEnumerator(Of T)" />
  <TypeSignature Language="C++ CLI" Value="public: value class HashSet&lt;T&gt;::Enumerator : System::Collections::Generic::IEnumerator&lt;T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="599b3-101">列舉 <see cref="T:System.Collections.Generic.HashSet`1" /> 物件的項目。</span>
      <span class="sxs-lookup">
        <span data-stu-id="599b3-101">Enumerates the elements of a <see cref="T:System.Collections.Generic.HashSet`1" /> object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b3-102">`foreach` C# 語言的陳述式 (`for each` c + +`For Each`在 Visual Basic 中) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="599b3-102">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="599b3-103">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="599b3-103">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="599b3-104">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="599b3-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="599b3-105">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="599b3-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="599b3-106">此位置<xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A>未定義屬性。</span><span class="sxs-lookup"><span data-stu-id="599b3-106">At this position, the <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="599b3-107">因此，您必須呼叫<xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A>方法，以將列舉值前進到第一個項目，再讀取的值集合的<xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="599b3-107">Therefore, you must call the <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="599b3-108"><xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="599b3-108"><xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="599b3-109"><xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> 會將 <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="599b3-109"><xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="599b3-110">如果<xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="599b3-110">If <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="599b3-111">列舉值位於這個位置上，後續呼叫<xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="599b3-111">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="599b3-112">如果最後一個呼叫<xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="599b3-112">If the last call to <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="599b3-113">您不能設定<xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A>的第一個元素的集合一次; 您必須改為建立新的列舉值物件。</span><span class="sxs-lookup"><span data-stu-id="599b3-113">You cannot set <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator object instead.</span></span>  
  
 <span data-ttu-id="599b3-114">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="599b3-114">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="599b3-115">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</span><span class="sxs-lookup"><span data-stu-id="599b3-115">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="599b3-116">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="599b3-116">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="599b3-117">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="599b3-117">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="599b3-118">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="599b3-118">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="599b3-119"><xref:System.Collections.Generic?displayProperty=nameWithType> 命名空間中集合的預設實作未同步處理。</span><span class="sxs-lookup"><span data-stu-id="599b3-119">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.HashSet`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Current { T get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="599b3-120">取得位於目前列舉值位置的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b3-120">Gets the element at the current position of the enumerator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="599b3-121">位於列舉值中目前位置之 <see cref="T:System.Collections.Generic.HashSet`1" /> 集合內的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b3-121">The element in the <see cref="T:System.Collections.Generic.HashSet`1" /> collection at the current position of the enumerator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b3-122"><xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> 未定義任何下列情況：</span><span class="sxs-lookup"><span data-stu-id="599b3-122"><xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="599b3-123">在建立列舉值之後立即，會列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="599b3-123">The enumerator is positioned before the first element in the collection immediately after the enumerator is created.</span></span> <span data-ttu-id="599b3-124"><xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A>必須呼叫方法，將列舉值前進到第一個項目，再讀取的值集合的<xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="599b3-124">The <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A>.</span></span>  
  
-   <span data-ttu-id="599b3-125">在上次呼叫<xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A>傳回`false`，表示集合的結尾。</span><span class="sxs-lookup"><span data-stu-id="599b3-125">The last call to <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
 <span data-ttu-id="599b3-126"><xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="599b3-126"><xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="599b3-127"><xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> 會將 <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="599b3-127"><xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> to the next element.</span></span> <span data-ttu-id="599b3-128">如果呼叫之間修改清單<xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A>方法並取得的內容<xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A>屬性，<xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A>傳回的項目設定為時，即使列舉值無效。</span><span class="sxs-lookup"><span data-stu-id="599b3-128">If the list is modified between calling <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> method and obtaining the contents of the <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> property, <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> returns the element that it is set to, even though the enumerator is invalidated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="599b3-129">為提升效能，這個屬性不會擲回例外狀況如果列舉值位於第一個項目之前或之後的最後一個元素。</span><span class="sxs-lookup"><span data-stu-id="599b3-129">For better performance, this property does not throw an exception if the enumerator is positioned before the first element or after the last element.</span></span> <span data-ttu-id="599b3-130">未定義屬性的值。</span><span class="sxs-lookup"><span data-stu-id="599b3-130">The value of the property is undefined.</span></span> <span data-ttu-id="599b3-131">若要改為取得例外狀況，請轉換<xref:System.Collections.Generic.HashSet%601.Enumerator>至<xref:System.Collections.IEnumerator?displayProperty=nameWithType>後才能使用它的介面。</span><span class="sxs-lookup"><span data-stu-id="599b3-131">To get an exception instead, cast the <xref:System.Collections.Generic.HashSet%601.Enumerator> to the <xref:System.Collections.IEnumerator?displayProperty=nameWithType> interface before using it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.Enumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="599b3-132">釋放由 <see cref="T:System.Collections.Generic.HashSet`1.Enumerator" /> 物件使用的所有資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b3-132">Releases all resources used by a <see cref="T:System.Collections.Generic.HashSet`1.Enumerator" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="599b3-133">讓列舉程式前進至 <see cref="T:System.Collections.Generic.HashSet`1" /> 集合中的下一個項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b3-133">Advances the enumerator to the next element of the <see cref="T:System.Collections.Generic.HashSet`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="599b3-134">如果列舉值成功前移至下一個項目，則為 <see langword="true" />；如果列舉值超過集合的結尾，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b3-134">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b3-135">建立列舉值之後，列舉程式位於集合中，第一個呼叫中的第一個項目之前<xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A>方法會將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="599b3-135">After an enumerator is created, the enumerator is positioned before the first element in the collection, and the first call to the <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> method advances the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="599b3-136">如果<xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="599b3-136">If <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="599b3-137">列舉值位於這個位置上，後續呼叫<xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="599b3-137">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> also return `false`.</span></span>  
  
 <span data-ttu-id="599b3-138">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="599b3-138">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="599b3-139">如果變更集合，例如加入、 修改或刪除元素，列舉值將失效。</span><span class="sxs-lookup"><span data-stu-id="599b3-139">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="599b3-140">建立列舉值之後，集合已修改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b3-140">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="599b3-141">取得位於目前列舉值位置的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b3-141">Gets the element at the current position of the enumerator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="599b3-142">位於集合中列舉值目前位置的項目，做為 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b3-142">The element in the collection at the current position of the enumerator, as an <see cref="T:System.Object" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b3-143">建立列舉值之後或在之後<xref:System.Collections.IEnumerator.Reset%2A>呼叫方法時，<xref:System.Collections.IEnumerator.MoveNext%2A>必須呼叫方法，將列舉值前進到第一個項目，再讀取的值集合的<xref:System.Collections.IEnumerator.Current%2A>屬性，否則<xref:System.Collections.IEnumerator.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="599b3-143">After an enumerator is created or after the <xref:System.Collections.IEnumerator.Reset%2A> method is called, the <xref:System.Collections.IEnumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Collections.IEnumerator.Current%2A> property; otherwise, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="599b3-144"><xref:System.Collections.IEnumerator.Current%2A> 也會發生例外狀況，如果最後一個呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，表示集合的結尾。</span><span class="sxs-lookup"><span data-stu-id="599b3-144"><xref:System.Collections.IEnumerator.Current%2A> also throws an exception if the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
 <span data-ttu-id="599b3-145"><xref:System.Collections.IEnumerator.Current%2A> 不會移動的列舉程式及連續呼叫位置<xref:System.Collections.IEnumerator.Current%2A>傳回相同的物件直到<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="599b3-145"><xref:System.Collections.IEnumerator.Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.IEnumerator.Current%2A> return the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="599b3-146">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="599b3-146">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="599b3-147">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="599b3-147">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="599b3-148">如果呼叫之間修改集合<xref:System.Collections.IEnumerator.MoveNext%2A>方法並取得的值<xref:System.Collections.IEnumerator.Current%2A>屬性，<xref:System.Collections.IEnumerator.Current%2A>傳回項目所設定，即使列舉值已經無效。</span><span class="sxs-lookup"><span data-stu-id="599b3-148">If the collection is modified between calling <xref:System.Collections.IEnumerator.MoveNext%2A> method and obtaining the value of the <xref:System.Collections.IEnumerator.Current%2A> property, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="599b3-149">列舉值是放在集合的第一個項目之前，或最後一個項目之後。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b3-149">The enumerator is positioned before the first element of the collection or after the last element.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Reset">
      <MemberSignature Language="C#" Value="void IEnumerator.Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IEnumerator.Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset" />
      <MemberSignature Language="VB.NET" Value="Sub Reset () Implements IEnumerator.Reset" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IEnumerator.Reset() = System::Collections::IEnumerator::Reset;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="599b3-150">設定列舉值至它的初始位置，這是在集合中第一個項目之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b3-150">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="599b3-151">在呼叫<xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>，您必須呼叫<xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A>方法，以將列舉值前進到第一個項目，再讀取的值集合的<xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="599b3-151">After calling <xref:System.Collections.Generic.HashSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>, you must call the <xref:System.Collections.Generic.HashSet%601.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Collections.Generic.HashSet%601.Enumerator.Current%2A> property.</span></span>  
  
 <span data-ttu-id="599b3-152">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="599b3-152">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="599b3-153">如果變更集合，例如加入、 修改或刪除元素，列舉值將失效。</span><span class="sxs-lookup"><span data-stu-id="599b3-153">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="599b3-154">建立列舉值之後，集合已修改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="599b3-154">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>