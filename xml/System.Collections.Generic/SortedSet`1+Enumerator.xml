<Type Name="SortedSet&lt;T&gt;+Enumerator" FullName="System.Collections.Generic.SortedSet&lt;T&gt;+Enumerator">
  <TypeSignature Language="C#" Value="public struct SortedSet&lt;T&gt;.Enumerator : System.Collections.Generic.IEnumerator&lt;T&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi serializable sealed beforefieldinit SortedSet`1/Enumerator&lt;T&gt; extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;!T&gt;, class System.Collections.IEnumerator, class System.IDisposable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SortedSet`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure SortedSet(Of T).Enumerator&#xA;Implements IDeserializationCallback, IEnumerator(Of T), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public: value class SortedSet&lt;T&gt;::Enumerator : System::Collections::Generic::IEnumerator&lt;T&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="ad54c-101">列舉 <see cref="T:System.Collections.Generic.SortedSet`1" /> 物件的項目。</span><span class="sxs-lookup"><span data-stu-id="ad54c-101">Enumerates the elements of a <see cref="T:System.Collections.Generic.SortedSet`1" /> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad54c-102">`foreach` C# 語言的陳述式 (`for each` c + +`For Each`在 Visual Basic 中) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="ad54c-102">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="ad54c-103">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="ad54c-103">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="ad54c-104">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="ad54c-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="ad54c-105">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="ad54c-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="ad54c-106">此位置<xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>未定義屬性。</span><span class="sxs-lookup"><span data-stu-id="ad54c-106">At this position, the <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="ad54c-107">因此，您必須呼叫<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>方法，以將列舉值前進到第一個項目，再讀取的值集合的<xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="ad54c-107">Therefore, you must call the <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="ad54c-108"><xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="ad54c-108"><xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="ad54c-109"><xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> 會將 <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="ad54c-109"><xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="ad54c-110">如果<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="ad54c-110">If <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="ad54c-111">列舉值位於這個位置上，後續呼叫<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="ad54c-111">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="ad54c-112">如果最後一個呼叫<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="ad54c-112">If the last call to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="ad54c-113">您不能設定<xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>的第一個元素的集合一次; 您必須改為建立新的列舉值物件。</span><span class="sxs-lookup"><span data-stu-id="ad54c-113">You cannot set <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator object instead.</span></span>  
  
 <span data-ttu-id="ad54c-114">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="ad54c-114">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="ad54c-115">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>或<xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ad54c-115">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="ad54c-116">如果呼叫之間修改集合<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>方法並取得的值<xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>屬性，<xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>傳回項目所設定，即使列舉值已經無效。</span><span class="sxs-lookup"><span data-stu-id="ad54c-116">If the collection is modified between calling <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> method and obtaining the value of the <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> property, <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>   
  
 <span data-ttu-id="ad54c-117">列舉程式沒有集合的獨佔存取因此，列舉集合在本質上並非安全執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="ad54c-117">The enumerator doesn't have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ad54c-118">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="ad54c-118">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="ad54c-119">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="ad54c-119">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="ad54c-120"><xref:System.Collections.Generic?displayProperty=nameWithType> 命名空間中集合的預設實作未同步處理。</span><span class="sxs-lookup"><span data-stu-id="ad54c-120">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedSet`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Current { T get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad54c-121">取得位於目前列舉值位置上的項目。</span><span class="sxs-lookup"><span data-stu-id="ad54c-121">Gets the element at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="ad54c-122">位於列舉值中目前位置的集合中的元素。</span><span class="sxs-lookup"><span data-stu-id="ad54c-122">The element in the collection at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="ad54c-123"><xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> 傳回類型的預設值`T`任何下列情況：</span><span class="sxs-lookup"><span data-stu-id="ad54c-123"><xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> returns the default value of type `T` under any of the following conditions:</span></span>  
  
- <span data-ttu-id="ad54c-124">列舉程式位在集合中第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="ad54c-124">The enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="ad54c-125">發生這種情況建立列舉值之後或在之後<xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="ad54c-125">That happens after an enumerator is created or after the <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> method is called.</span></span> <span data-ttu-id="ad54c-126"><xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>必須呼叫方法，將列舉值前進到第一個項目，再讀取的值集合的<xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="ad54c-126">The <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> property.</span></span>  
  
- <span data-ttu-id="ad54c-127">在上次呼叫<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>傳回`false`，表示集合的結尾，列舉程式位在集合中的最後一個元素之後。</span><span class="sxs-lookup"><span data-stu-id="ad54c-127">The last call to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> returned `false`, which indicates the end of the collection and that the enumerator is positioned after the last element of the collection.</span></span>

> [!NOTE]
>  <span data-ttu-id="ad54c-128">行為是不同的非泛型<xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="ad54c-128">That behaviour is different for the non-generic <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> property.</span></span> <span data-ttu-id="ad54c-129">非泛型<xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A>屬性會擲回<xref:System.InvalidOperationException>如果列舉值位於集合或最後一個項目之後的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="ad54c-129">The non-generic <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> property throws an <xref:System.InvalidOperationException> if the enumerator is positioned before the first element of the collection or after the last element.</span></span>
 
 <span data-ttu-id="ad54c-130"><xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> 不會移動的列舉程式及連續呼叫位置<xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>傳回相同的物件直到<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>或<xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="ad54c-130"><xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> return the same object until either <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="ad54c-131">如果呼叫之間修改集合<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>方法並取得的值<xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>屬性，<xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>傳回的項目設定為時，即使列舉值無效。</span><span class="sxs-lookup"><span data-stu-id="ad54c-131">If the collection is modified between calling <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> method and obtaining the value of the <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> property, <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> returns the element that it is set to, even though the enumerator is invalidated.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Enumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad54c-132">釋放 <see cref="T:System.Collections.Generic.SortedSet`1.Enumerator" /> 所使用的所有資源。</span><span class="sxs-lookup"><span data-stu-id="ad54c-132">Releases all resources used by the <see cref="T:System.Collections.Generic.SortedSet`1.Enumerator" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad54c-133">讓列舉程式前進至 <see cref="T:System.Collections.Generic.SortedSet`1" /> 集合中的下一個項目。</span><span class="sxs-lookup"><span data-stu-id="ad54c-133">Advances the enumerator to the next element of the <see cref="T:System.Collections.Generic.SortedSet`1" /> collection.</span></span></summary>
        <returns>
          <span data-ttu-id="ad54c-134">如果列舉值成功地前移至下一個項目，則為 <see langword="true" />，如果列舉值已超過集合的結尾，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ad54c-134"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad54c-135">建立列舉值之後，列舉程式位於集合中，第一個呼叫中的第一個項目之前<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>方法會將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="ad54c-135">After an enumerator is created, the enumerator is positioned before the first element in the collection, and the first call to the <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> method advances the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="ad54c-136">如果<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="ad54c-136">If <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="ad54c-137">列舉值位於這個位置上，後續呼叫<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="ad54c-137">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> also return `false`.</span></span>  
  
 <span data-ttu-id="ad54c-138">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="ad54c-138">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="ad54c-139">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>或<xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ad54c-139">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="ad54c-140">如果呼叫之間修改集合<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>方法並取得的值<xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>屬性，<xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>傳回的項目設定為時，即使列舉值無效。</span><span class="sxs-lookup"><span data-stu-id="ad54c-140">If the collection is modified between calling <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> method and obtaining the value of the <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> property, <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> returns the element that it is set to, even though the enumerator is invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad54c-141">在建立列舉值之後，會修改集合。</span><span class="sxs-lookup"><span data-stu-id="ad54c-141">The collection was modified after the enumerator was created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedSet`1.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad54c-142">取得位於目前列舉值位置上的項目。</span><span class="sxs-lookup"><span data-stu-id="ad54c-142">Gets the element at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="ad54c-143">位於列舉值中目前位置的集合中的元素。</span><span class="sxs-lookup"><span data-stu-id="ad54c-143">The element in the collection at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
 <span data-ttu-id="ad54c-144"><xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> 擲回<xref:System.InvalidOperationException>任何下列情況：</span><span class="sxs-lookup"><span data-stu-id="ad54c-144"><xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> throws an <xref:System.InvalidOperationException> under any of the following conditions:</span></span>  
  
- <span data-ttu-id="ad54c-145">列舉程式位在集合中第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="ad54c-145">The enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="ad54c-146">發生這種情況建立列舉值之後或在之後<xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="ad54c-146">That happens after an enumerator is created or after the <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> method is called.</span></span> <span data-ttu-id="ad54c-147"><xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>必須呼叫方法，將列舉值前進到第一個項目，再讀取的值集合的<xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="ad54c-147">The <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> property.</span></span>  
  
- <span data-ttu-id="ad54c-148">在上次呼叫<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>傳回`false`，表示集合的結尾，列舉程式位在集合中的最後一個元素之後。</span><span class="sxs-lookup"><span data-stu-id="ad54c-148">The last call to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> returned `false`, which indicates the end of the collection and that the enumerator is positioned after the last element of the collection.</span></span>

> [!NOTE]
>  <span data-ttu-id="ad54c-149">行為是不同的泛型<xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="ad54c-149">That behaviour is different for the generic <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> property.</span></span> <span data-ttu-id="ad54c-150">泛型<xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A>屬性會傳回型別的預設值`T`如果列舉值位於集合或最後一個項目之後的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="ad54c-150">The generic <xref:System.Collections.Generic.SortedSet%601.Enumerator.Current%2A> property returns the default value of type `T` if the enumerator is positioned before the first element of the collection or after the last element.</span></span>
 
 <span data-ttu-id="ad54c-151"><xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> 不會移動的列舉程式及連續呼叫位置<xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A>傳回相同的物件直到<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>或<xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="ad54c-151"><xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> return the same object until either <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="ad54c-152">如果呼叫之間修改集合<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>方法並取得的值<xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A>屬性，<xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A>傳回的項目設定為時，即使列舉值無效。</span><span class="sxs-lookup"><span data-stu-id="ad54c-152">If the collection is modified between calling <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> method and obtaining the value of the <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> property, <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Current%2A> returns the element that it is set to, even though the enumerator is invalidated.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad54c-153">列舉值位於集合的第一個項目之前，或最後一個項目之後。</span><span class="sxs-lookup"><span data-stu-id="ad54c-153">The enumerator is positioned before the first element of the collection or after the last element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Reset">
      <MemberSignature Language="C#" Value="void IEnumerator.Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IEnumerator.Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Collections#IEnumerator#Reset" />
      <MemberSignature Language="VB.NET" Value="Sub Reset () Implements IEnumerator.Reset" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IEnumerator.Reset() = System::Collections::IEnumerator::Reset;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad54c-154">設定列舉值至它的初始位置，這是在集合中第一個元素之前。</span><span class="sxs-lookup"><span data-stu-id="ad54c-154">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad54c-155">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="ad54c-155">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="ad54c-156">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A>或<xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ad54c-156">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.SortedSet%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.SortedSet%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad54c-157">在建立列舉值之後，會修改集合。</span><span class="sxs-lookup"><span data-stu-id="ad54c-157">The collection was modified after the enumerator was created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="ad54c-158">還原序列化之事件的來源。</span><span class="sxs-lookup"><span data-stu-id="ad54c-158">The source of the deserialization event.</span></span></param>
        <summary><span data-ttu-id="ad54c-159">實作 <see cref="T:System.Runtime.Serialization.ISerializable" /> 介面，並於還原序列化 (Deserialization) 完成時，引發還原序列化事件。</span><span class="sxs-lookup"><span data-stu-id="ad54c-159">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="ad54c-160">與目前 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 執行個體關聯的 <see cref="T:System.Collections.Generic.SortedSet`1" /> 物件是無效的。</span><span class="sxs-lookup"><span data-stu-id="ad54c-160">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Generic.SortedSet`1" /> instance is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="ad54c-161"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，包含序列化 <see cref="T:System.Collections.Generic.SortedSet`1" /> 執行個體所需的資訊。</span><span class="sxs-lookup"><span data-stu-id="ad54c-161">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the <see cref="T:System.Collections.Generic.SortedSet`1" /> instance.</span></span></param>
        <param name="context"><span data-ttu-id="ad54c-162"><see cref="T:System.Runtime.Serialization.StreamingContext" /> 物件，包含與 <see cref="T:System.Collections.Generic.SortedSet`1" /> 執行個體關聯之序列資料流的來源和目的端。</span><span class="sxs-lookup"><span data-stu-id="ad54c-162">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.SortedSet`1" /> instance.</span></span></param>
        <summary><span data-ttu-id="ad54c-163">實作 <see cref="T:System.Runtime.Serialization.ISerializable" /> 介面，並傳回序列化 <see cref="T:System.Collections.Generic.SortedSet`1" /> 執行個體所需的資料。</span><span class="sxs-lookup"><span data-stu-id="ad54c-163">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Generic.SortedSet`1" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ad54c-164"><paramref name="info" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad54c-164"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>