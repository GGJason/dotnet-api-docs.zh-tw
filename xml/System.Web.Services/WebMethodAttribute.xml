<Type Name="WebMethodAttribute" FullName="System.Web.Services.WebMethodAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1b4dfe6d1bc749d1515422099588657f4ef56e73" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30549842" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebMethodAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>加入這個屬性 (Attribute) 至使用 ASP.NET 建立的 XML Web Service 內的方法，使該方法可從遠端 Web 用戶端呼叫。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性會設定類別內方法被呼叫 XML Web 服務方法。 方法和類別必須是公用、 ASP.NET Web 應用程式內執行。  
  
   
  
## Examples  
 在下例方法`GetMachineName`可以跨 Web、 從遠端呼叫，因為它有<xref:System.Web.Services.WebMethodAttribute>。 `GetUserName` 因為它沒有無法遠端呼叫<xref:System.Web.Services.WebMethodAttribute>，即使它是`public`。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EnterpriseServices.TransactionOption" />
    <altmember cref="T:System.Web.Services.WebService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.WebMethodAttribute" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Services.WebMethodAttribute" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enableSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">初始化是否啟用 XML Web Service 方法的工作階段狀態。</param>
        <summary>初始化 <see cref="T:System.Web.Services.WebMethodAttribute" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
      </Parameters>
      <Docs>
        <param name="enableSession">初始化是否啟用 XML Web Service 方法的工作階段狀態。</param>
        <param name="transactionOption">初始化 XML Web Service 方法的交易支援。</param>
        <summary>初始化 <see cref="T:System.Web.Services.WebMethodAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服務呼叫只能在交易中，由於 HTTP 通訊協定的無狀態的根目錄。 這表示每次呼叫建立新的交易是相等的下列兩項設定：  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 也表示下列所有設定都都相同。這表示沒有交易的支援：  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption, int32 cacheDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption, int cacheDuration);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enableSession">初始化是否啟用 XML Web Service 方法的工作階段狀態。</param>
        <param name="transactionOption">初始化 XML Web Service 方法的交易支援。</param>
        <param name="cacheDuration">初始化可快取回應的秒數。</param>
        <summary>初始化 <see cref="T:System.Web.Services.WebMethodAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服務呼叫只能在交易中，由於 HTTP 通訊協定的無狀態的根目錄。  這表示每次呼叫建立新的交易是相等的下列兩項設定：  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 也表示下列所有設定都都相同。這表示沒有交易的支援：  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption, int32 cacheDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption, int cacheDuration);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <param name="cacheDuration">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption, int32 cacheDuration, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
        <Parameter Name="bufferResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">初始化是否啟用 XML Web Service 方法的工作階段狀態。</param>
        <param name="transactionOption">初始化 XML Web Service 方法的交易支援。</param>
        <param name="cacheDuration">初始化可快取回應的秒數。</param>
        <param name="bufferResponse">初始化這個要求的回應是否緩衝。</param>
        <summary>初始化 <see cref="T:System.Web.Services.WebMethodAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服務呼叫只能在交易中，由於 HTTP 通訊協定的無狀態的根目錄。  這表示每次呼叫建立新的交易是相等的下列兩項設定：  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 也表示下列所有設定都都相同。這表示沒有交易的支援：  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption, int32 cacheDuration, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
        <Parameter Name="bufferResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <param name="cacheDuration">To be added.</param>
        <param name="bufferResponse">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferResponse">
      <MemberSignature Language="C#" Value="public bool BufferResponse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BufferResponse" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.BufferResponse" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferResponse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BufferResponse { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定這個要求的回應是否緩衝。</summary>
        <value>
          如果緩衝這個要求的回應，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定<xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A>至`true`，將 XML Web 服務方法的回應序列化至記憶體緩衝區，直到完全序列化回應，或在緩衝區已滿。 一旦經過緩衝處理回應，它會透過網路來傳回 XML Web 服務用戶端。 當<xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A>是`false`，會在序列化為 XML Web 服務方法的回應傳送回用戶端。 一般情況下，您只想要設定<xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A>至`false`，如果它已知的 XML Web 服務方法會傳回至用戶端大量的資料。 對於較少量的資料，XML Web 服務效能是較佳<xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A>至`true`。  
  
 當<xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A>是`false`，XML Web service 方法的 SOAP 擴充功能已停用。  
  
   
  
## Examples  
 下列程式碼範例會設定<xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A>屬性`false`和處理文字檔案傳回給用戶端的資料流。 程式碼範例示範如何將串流處理大型資料片段的回到用戶端使用的類別，實作<xref:System.Collections.IEnumerable>介面。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheDuration { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定回應保留在快取中應有的秒數。</summary>
        <value>秒數，為應該保留在快取中的回應。 預設值為 0，這表示沒有快取回應。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當啟用快取要求和回應會保留在記憶體中的伺服器上至少快取持續時間，所以必須使用注意，如果您預期會有大量的要求或回應或範圍相當廣泛的要求。  
  
 有兩個問題會影響 ASP.NET 2.0 Web 服務應用程式中的輸出快取。  
  
 在 ASP.NET 2.0 中，測試頁的 HTTP 方法已從 GET 變更為 POST。 但是，POST 通常不會快取。 如果在 ASP.NET 2.0 Web 服務應用程式中將測試頁變更為使用 GET，快取就可以正確運作。  
  
 另外，表示使用者代理程式 (瀏覽器或呼叫應用程式) 的 HTTP 應該能夠透過將 "Cache-Control" 設定為 "no-cache" 以覆寫伺服器快取。 因此，當 ASP.NET 應用程式發現 "no-cache" 標頭時，便會忽略快取的結果。  
  
   
  
## Examples  
 下列範例會呼叫的結果`ServiceUsage`XML Web service 方法，在快取 60 秒。 任何時候的 XML Web 服務用戶端執行`ServiceUsage`XML Web service 方法，在這段期間，會傳回相同的結果。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>描述訊息，描述 XML Web Service 方法。</summary>
        <value>描述訊息，描述 XML Web Service 方法。 預設值是 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 描述性訊息會顯示預期的 XML Web 服務的取用者，當產生 XML Web 服務描述文件，例如服務描述和服務說明頁。  
  
   
  
## Examples  
 在下列範例中，字串`Obtains the Server Computer Name`用來描述 XML Web service 方法的服務描述和服務說明頁面中的 XML Web 服務。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EnableSession">
      <MemberSignature Language="C#" Value="public bool EnableSession { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.EnableSession" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSession { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示是否啟用 XML Web Service 方法的工作階段狀態。</summary>
        <value>
          如果啟用 XML Web Service 方法的工作階段狀態，則為 <see langword="true" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要將工作階段狀態儲存在 ASP.NET<xref:System.Web.SessionState.HttpSessionState>物件、 XML Web 服務必須繼承自<xref:System.Web.Services.WebService>和<xref:System.Web.Services.WebMethodAttribute>套用至 XML Web service 方法，設定<xref:System.Web.Services.WebMethodAttribute.EnableSession%2A>屬性`true`。 如果 XML Web 服務方法都不需要工作階段狀態，然後再停用可能會改善效能。  
  
 XML Web 服務所傳回的 HTTP cookie 來唯一識別 XML Web 服務用戶端。 為了讓用戶端的維護工作階段狀態的 XML Web service，用戶端必須保存 cookie。 用戶端可接收 HTTP cookie 所建立的新執行個體<xref:System.Net.CookieContainer>並指派以<xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A>proxy 類別，然後再呼叫 XML Web service 方法的屬性。 如果您需要維護超過工作階段狀態，當超出範圍的 proxy 類別執行個體時，用戶端必須保存到 XML Web 服務的呼叫之間的 HTTP cookie。 比方說，Web Form 用戶端可以保存的 HTTP cookie 儲存<xref:System.Net.CookieContainer>在它自己的工作階段狀態。 因為並非所有的 XML Web 服務會使用工作階段狀態，因此用戶端不一定需要使用<xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A>用戶端 proxy 的屬性，XML Web service 的文件應該指明是否會使用工作階段狀態。  
  
   
  
## Examples  
 下例使用工作階段狀態，以判斷多少次特定的工作階段存取 XML Web service 方法`SessionHitCounter`。  
  
  
  
 下列程式碼範例是使用工作階段狀態的 XML Web service 的 Web Form 用戶端。 用戶端持續發生，可唯一識別工作階段，將它儲存在用戶端的工作階段狀態的 HTTP cookie。  
  
 [!code-aspx-csharp[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/CS/serverusageclientcs.aspx#1)]
 [!code-aspx-vb[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/VB/serverusageclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer" />
      </Docs>
    </Member>
    <Member MemberName="MessageName">
      <MemberSignature Language="C#" Value="public string MessageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.MessageName" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 XML Web Service 方法中傳遞並傳回的資料中，XML Web Service 方法所使用的名稱。</summary>
        <value>在對 XML Web Service 方法來回傳遞的資料中，XML Web Service 方法所使用的名稱。 預設值為 XML Web Service 方法的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.WebMethodAttribute.MessageName%2A>屬性可以用來別名方法或屬性的名稱。 最常見的用法<xref:System.Web.Services.WebMethodAttribute.MessageName%2A>屬性可唯一識別多型的方法。 根據預設，<xref:System.Web.Services.WebMethodAttribute.MessageName%2A>會設為 XML Web 服務方法的名稱。 因此，如果 XML Web service 包含具有相同名稱的兩個或多個 XML Web service 方法，您可以透過唯一識別個別的 XML Web service 方法設定<xref:System.Web.Services.WebMethodAttribute.MessageName%2A>XML Web 服務，而不需要變更的名稱中唯一的名稱在程式碼中的實際方法名稱。  
  
 資料傳遞至 XML Web service 時它會傳送要求並傳送回應中傳回時。 在要求和回應，使用 XML Web service 方法的名稱是其<xref:System.Web.Services.WebMethodAttribute.MessageName%2A>屬性。  
  
 XML Web 服務方法相關聯的訊息名稱必須是 XML Web 服務中唯一的。  
  
 如果用戶端呼叫原始方法之後，就會加入新的 XML Web service 方法具有相同名稱但不同的參數，應該為新方法指定不同的訊息名稱，但保留原始的訊息名稱，以確保相容性與現有的用戶端。  
  
   
  
## Examples  
 在下列範例中，<xref:System.Web.Services.WebMethodAttribute.MessageName%2A>用來區分兩個`Add`方法。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOption">
      <MemberSignature Language="C#" Value="public System.EnterpriseServices.TransactionOption TransactionOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.EnterpriseServices.TransactionOption TransactionOption" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.TransactionOption" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionOption As TransactionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::EnterpriseServices::TransactionOption TransactionOption { System::EnterpriseServices::TransactionOption get(); void set(System::EnterpriseServices::TransactionOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示 XML Web Service 方法的交易支援。</summary>
        <value>XML Web Service 方法的交易支援。 預設值為 <see cref="F:System.EnterpriseServices.TransactionOption.Disabled" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML Web 服務方法可以只做為根物件，在交易中，由於 HTTP 通訊協定的無狀態。 XML Web 服務方法可以叫用加入做為 XML Web service 方法，在相同交易中的 COM 物件，如果 COM 物件標記為 [元件服務] 系統管理工具中的交易內執行。 如果 XML Web 服務方法使用<xref:System.Web.Services.WebMethodAttribute.TransactionOption%2A>屬性`Required`或`RequiresNew`與另一個 XML Web 服務方法會叫用<xref:System.Web.Services.WebMethodAttribute.TransactionOption%2A>屬性`Required`或`RequiresNew`，自己在參與的每個 XML Web service 方法交易，因為 XML Web 服務方法可以只做為根物件，在交易中。  
  
|項目|描述|  
|----------|-----------------|  
|已停用|表示 XML Web service 方法不會在交易範圍內執行。 當處理要求時，會執行 XML Web service 方法，而交易。<br /><br /> [WebMethod(TransactionOption= `TransactionOption.Disabled`)]|  
|NotSupported|表示 XML Web service 方法不會在交易範圍內執行。 當處理要求時，會執行 XML Web service 方法，而交易。<br /><br /> [WebMethod(TransactionOption= `TransactionOption.NotSupported`)]|  
|支援|表示 XML Web service 方法不會執行的交易範圍內。 當處理要求時，XML Web service 會建立不使用交易。<br /><br /> [WebMethod(TransactionOption= `TransactionOption.Supported`)]|  
|必要|表示 XML Web service 方法需要交易。 因為 XML Web 服務方法可以只做為根物件，在交易中，XML Web 服務方法會建立新的交易。<br /><br /> [WebMethod(TransactionOption= `TransactionOption.Required`)]|  
|RequiresNew|表示 XML Web service 方法需要新的交易。 當處理要求時，新的交易內建立 XML Web 服務。<br /><br /> [WebMethod(TransactionOption= `TransactionOption.RequiresNew`)]|  
  
 如果從擲回或 XML Web 服務方法不會攔截例外狀況，會自動中止交易。 如果沒有發生例外狀況交易是自動進行認可，除非方法明確地呼叫`SetAbort`。  
  
   
  
## Examples  
 下列範例開始新交易時`Transfer`方法呼叫。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EnterpriseServices.TransactionOption" />
      </Docs>
    </Member>
  </Members>
</Type>