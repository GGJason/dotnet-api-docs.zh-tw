<Type Name="ResourceReader" FullName="System.Resources.ResourceReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="682738b4136d074223cbe025a9380b3cca9bc1d0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ResourceReader : System.Resources.IResourceReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResourceReader extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable, class System.Resources.IResourceReader" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResourceReader&#xA;Implements IResourceReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceReader sealed : System::Resources::IResourceReader" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.Reader</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Resources.IResourceReader</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2c61e-101">讀取循序資源名稱/值組，以列舉二進位資源 (.resources) 檔案中的資源。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c61e-101">Enumerates the resources in a binary resources (.resources) file by reading sequential resource name/value pairs.</span>
      </span>
      <span data-ttu-id="2c61e-102">**安全性提示**：使用不受信任的資料呼叫這個類別中的方法會造成安全性風險。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c61e-102">**Security Note**: Calling methods in this class with untrusted data is a security risk.</span>
      </span>
      <span data-ttu-id="2c61e-103">只能使用信任的資料呼叫類別中的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c61e-103">Call the methods in the class only with trusted data.</span>
      </span>
      <span data-ttu-id="2c61e-104">如需詳細資訊，請參閱 [Untrusted Data Security Risks](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks) (不受信任的資料安全性風險)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c61e-104">For more information, see [Untrusted Data Security Risks](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c61e-105"><xref:System.Resources.ResourceReader>類別提供的標準實作<xref:System.Resources.IResourceReader>介面。</span><span class="sxs-lookup"><span data-stu-id="2c61e-105">The <xref:System.Resources.ResourceReader> class provides a standard implementation of the <xref:System.Resources.IResourceReader> interface.</span></span> <span data-ttu-id="2c61e-106">A<xref:System.Resources.ResourceReader>執行個體代表獨立.resources 檔或組件中內嵌的.resources 檔。</span><span class="sxs-lookup"><span data-stu-id="2c61e-106">A <xref:System.Resources.ResourceReader> instance represents either a standalone .resources file or a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="2c61e-107">它用來列舉.resources 檔案中的資源，並擷取其名稱/值組。</span><span class="sxs-lookup"><span data-stu-id="2c61e-107">It is used to enumerate the resources in a .resources file and retrieve its name/value pairs.</span></span> <span data-ttu-id="2c61e-108">不同於<xref:System.Resources.ResourceManager>類別，用來從.resources 檔內嵌於組件中擷取指定的具名的資源。</span><span class="sxs-lookup"><span data-stu-id="2c61e-108">It differs from the <xref:System.Resources.ResourceManager> class, which is used to retrieve specified named resources from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="2c61e-109"><xref:System.Resources.ResourceManager>類別用來擷取的資源事先已知名稱，而<xref:System.Resources.ResourceReader>類別可用於擷取其數字或精確名稱不在編譯時期已知的資源。</span><span class="sxs-lookup"><span data-stu-id="2c61e-109">The <xref:System.Resources.ResourceManager> class is used to retrieve resources whose names are known in advance, whereas the <xref:System.Resources.ResourceReader> class is useful for retrieving resources whose number or precise names are not known at compile time.</span></span> <span data-ttu-id="2c61e-110">比方說，應用程式可能使用的資源檔案來儲存分成區段與項目所在的區段或區段中的項目數目不事先已知道的區段中的組態資訊。</span><span class="sxs-lookup"><span data-stu-id="2c61e-110">For example, an application may use a resources file to store configuration information that is organized into sections and items in a section, where the number of sections or items in a section is not known in advance.</span></span> <span data-ttu-id="2c61e-111">可以再以一般方式命名資源 (例如`Section1`， `Section1Item1`，`Section1Item2`等等) 以及使用抓取的<xref:System.Resources.ResourceReader>物件。</span><span class="sxs-lookup"><span data-stu-id="2c61e-111">Resources can then be named generically (such as `Section1`, `Section1Item1`, `Section1Item2`, and so on) and retrieved by using a <xref:System.Resources.ResourceReader> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2c61e-112">此類型會實作<xref:System.IDisposable>介面。</span><span class="sxs-lookup"><span data-stu-id="2c61e-112">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="2c61e-113">當您完成使用類型時，您應該會處置它直接或間接。</span><span class="sxs-lookup"><span data-stu-id="2c61e-113">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="2c61e-114">若要直接處置的類型，呼叫其<xref:System.IDisposable.Dispose%2A>方法中的`try` / `catch`區塊。</span><span class="sxs-lookup"><span data-stu-id="2c61e-114">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="2c61e-115">若要為其配置間接，使用語言建構例如`using`（C# 中） 或`Using`（在 Visual Basic)。</span><span class="sxs-lookup"><span data-stu-id="2c61e-115">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="2c61e-116">如需詳細資訊，請參閱中的 「 使用物件的實作 IDisposable 」 一節<xref:System.IDisposable>介面 > 主題。</span><span class="sxs-lookup"><span data-stu-id="2c61e-116">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="2c61e-117">如需有關使用<xref:System.Resources.ResourceReader>類別，請參閱下列各節：</span><span class="sxs-lookup"><span data-stu-id="2c61e-117">For more information about using the <xref:System.Resources.ResourceReader> class, see the following sections:</span></span>  
  
-   [<span data-ttu-id="2c61e-118">具現化 ResourceReader 物件</span><span class="sxs-lookup"><span data-stu-id="2c61e-118">Instantiating a ResourceReader object</span></span>](#instantiate)  
  
-   [<span data-ttu-id="2c61e-119">列舉 ResourceReader 物件的資源</span><span class="sxs-lookup"><span data-stu-id="2c61e-119">Enumerating a ResourceReader object's resources</span></span>](#enumerate)  
  
    -   [<span data-ttu-id="2c61e-120">藉由使用 IDictionaryEnumerator 屬性擷取資源</span><span class="sxs-lookup"><span data-stu-id="2c61e-120">Retrieving resources by using IDictionaryEnumerator properties</span></span>](#idictionaryenumerator)  
  
    -   [<span data-ttu-id="2c61e-121">依名稱和 GetResourceData 擷取資源</span><span class="sxs-lookup"><span data-stu-id="2c61e-121">Retrieving resources by name with GetResourceData</span></span>](#getresourcedata)  
  
<a name="instantiate"></a>   
## <a name="instantiating-a-resourcereader-object"></a><span data-ttu-id="2c61e-122">具現化 ResourceReader 物件</span><span class="sxs-lookup"><span data-stu-id="2c61e-122">Instantiating a ResourceReader Object</span></span>  
 <span data-ttu-id="2c61e-123">.Resources 檔案是文字檔或 XML.resx 檔案從已編譯的二進位檔案[Resgen.exe （資源檔產生器）](~/docs/framework/tools/resgen-exe-resource-file-generator.md)。</span><span class="sxs-lookup"><span data-stu-id="2c61e-123">A .resources file is a binary file that has been compiled from either a text file or an XML .resx file by [Resgen.exe (Resource File Generator)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span></span> <span data-ttu-id="2c61e-124">A<xref:System.Resources.ResourceReader>物件可代表獨立.resources 檔或已經在組件中內嵌的.resources 檔。</span><span class="sxs-lookup"><span data-stu-id="2c61e-124">A <xref:System.Resources.ResourceReader> object can represent either a standalone .resources file or a .resources file that has been embedded in an assembly.</span></span>  
  
 <span data-ttu-id="2c61e-125">具現化<xref:System.Resources.ResourceReader>物件讀取從獨立.resources 檔，使用<xref:System.Resources.ResourceReader>類別建構函式的輸入資料流或包含的.resources 檔案名稱的字串。</span><span class="sxs-lookup"><span data-stu-id="2c61e-125">To instantiate a <xref:System.Resources.ResourceReader> object that reads from a standalone .resources file, use the <xref:System.Resources.ResourceReader> class constructor with either an input stream or a string that contains the .resources file name.</span></span> <span data-ttu-id="2c61e-126">下列範例說明這兩種方法。</span><span class="sxs-lookup"><span data-stu-id="2c61e-126">The following example illustrates both approaches.</span></span> <span data-ttu-id="2c61e-127">第一個具現化<xref:System.Resources.ResourceReader>物件，代表名為的.resources 檔`Resources1.resources`使用其檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="2c61e-127">The first instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources1.resources` by using its file name.</span></span> <span data-ttu-id="2c61e-128">第二個具現化<xref:System.Resources.ResourceReader>物件，代表名為的.resources 檔`Resources2.resources`使用從檔案建立的資料流。</span><span class="sxs-lookup"><span data-stu-id="2c61e-128">The second instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources2.resources` by using a stream created from the file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#2)]  
  
 <span data-ttu-id="2c61e-129">若要建立<xref:System.Resources.ResourceReader>具現化物件，表示內嵌的.resources 檔，<xref:System.Reflection.Assembly>從內嵌的.resources 檔所在的組件的物件。</span><span class="sxs-lookup"><span data-stu-id="2c61e-129">To create a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file, instantiate an <xref:System.Reflection.Assembly> object from the assembly in which the .resources file is embedded.</span></span> <span data-ttu-id="2c61e-130">其<xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType>方法會傳回<xref:System.IO.Stream>可以傳遞至物件<xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="2c61e-130">Its <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method returns a <xref:System.IO.Stream> object that can be passed to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="2c61e-131">下列範例會具現化<xref:System.Resources.ResourceReader>物件，表示內嵌的.resources 檔案。</span><span class="sxs-lookup"><span data-stu-id="2c61e-131">The following example instantiates a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#3)]
 [!code-vb[System.Resources.ResourceReader.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#3)]  
  
<a name="enumerate"></a>   
## <a name="enumerating-a-resourcereader-objects-resources"></a><span data-ttu-id="2c61e-132">列舉 ResourceReader 物件的資源</span><span class="sxs-lookup"><span data-stu-id="2c61e-132">Enumerating a ResourceReader Object's Resources</span></span>  
 <span data-ttu-id="2c61e-133">若要列舉的.resources 檔案中的資源，您呼叫<xref:System.Resources.ResourceReader.GetEnumerator%2A>方法，這個方法會傳回<xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType>物件。</span><span class="sxs-lookup"><span data-stu-id="2c61e-133">To enumerate the resources in a .resources file, you call the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method, which returns an <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="2c61e-134">您呼叫`IDictionaryEnumerator.MoveNext`方法從一個資源移動到下一步。</span><span class="sxs-lookup"><span data-stu-id="2c61e-134">You call the `IDictionaryEnumerator.MoveNext` method to move from one resource to the next.</span></span> <span data-ttu-id="2c61e-135">方法會傳回`false`時已經列舉.resources 檔案中的所有資源。</span><span class="sxs-lookup"><span data-stu-id="2c61e-135">The method returns `false` when all the resources in the .resources file have been enumerated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2c61e-136">雖然<xref:System.Resources.ResourceReader>類別會實作<xref:System.Collections.IEnumerable>介面和<xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType>方法，<xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType>方法不會提供<xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType>實作。</span><span class="sxs-lookup"><span data-stu-id="2c61e-136">Although the <xref:System.Resources.ResourceReader> class implements the <xref:System.Collections.IEnumerable> interface and the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> method, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method does not provide the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="2c61e-137">相反地，<xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType>方法會傳回<xref:System.Collections.IDictionaryEnumerator>介面的物件可存取每個資源名稱/值組。</span><span class="sxs-lookup"><span data-stu-id="2c61e-137">Instead, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method  returns an <xref:System.Collections.IDictionaryEnumerator> interface object that provides access to each resource's name/value pair.</span></span>  
  
 <span data-ttu-id="2c61e-138">您可以擷取在兩種方法的集合中的個別資源：</span><span class="sxs-lookup"><span data-stu-id="2c61e-138">You can retrieve the individual resources in the collection in two ways:</span></span>  
  
-   <span data-ttu-id="2c61e-139">您可以逐一查看每個資源中的<xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType>收集與使用<xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType>擷取的資源名稱和值的屬性。</span><span class="sxs-lookup"><span data-stu-id="2c61e-139">You can iterate each resource in the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and use <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> properties to retrieve the resource name and value.</span></span> <span data-ttu-id="2c61e-140">所有資源都都屬於相同的類型，或您知道每個資源的資料類型時，我們會建議這項技術。</span><span class="sxs-lookup"><span data-stu-id="2c61e-140">We recommend this technique when all the resources are of the same type, or you know the data type of each resource.</span></span>  
  
-   <span data-ttu-id="2c61e-141">您可以擷取每個資源的名稱，當您逐一查看<xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType>集合並呼叫<xref:System.Resources.ResourceReader.GetResourceData%2A>方法來擷取資源的資料。</span><span class="sxs-lookup"><span data-stu-id="2c61e-141">You can retrieve the name of each resource when you iterate the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and call the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve the resource's data.</span></span> <span data-ttu-id="2c61e-142">當您不知道每個資源的資料類型，或先前的方法擲回例外狀況，我們會建議這種方法。</span><span class="sxs-lookup"><span data-stu-id="2c61e-142">We recommend this approach when you do not know the data type of each resource or if the previous approach throws exceptions.</span></span>  
  
<a name="idictionaryenumerator"></a>   
### <a name="retrieving-resources-by-using-idictionaryenumerator-properties"></a><span data-ttu-id="2c61e-143">藉由使用 IDictionaryEnumerator 屬性擷取資源</span><span class="sxs-lookup"><span data-stu-id="2c61e-143">Retrieving Resources by Using IDictionaryEnumerator Properties</span></span>  
 <span data-ttu-id="2c61e-144">列舉資源的.resources 檔案中的第一個方法牽涉到直接擷取每個資源名稱/值組。</span><span class="sxs-lookup"><span data-stu-id="2c61e-144">The first method of enumerating the resources in a .resources file involves directly retrieving each resource's name/value pair.</span></span> <span data-ttu-id="2c61e-145">在您呼叫後`IDictionaryEnumerator.MoveNext`從名為方法來移動每個資源，在集合中，您可以擷取資源<xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType>屬性和資源資料<xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="2c61e-145">After you call the `IDictionaryEnumerator.MoveNext` method to move to each resource in the collection, you can retrieve the resource name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property and the resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="2c61e-146">下列範例示範如何使用的名稱和值的每個資源的.resources 檔案中擷取<xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType>和<xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="2c61e-146">The following example shows how to retrieve the name and value of each resource in a .resources file by using the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="2c61e-147">若要執行範例時，建立名為 ApplicationResources.txt 定義字串資源的下列文字檔案。</span><span class="sxs-lookup"><span data-stu-id="2c61e-147">To run the example, create the following text file named ApplicationResources.txt to define string resources.</span></span>  
  
```  
Title="Contact Information"  
Label1="First Name:"  
Label2="Middle Name:"  
Label3="Last Name:"  
Label4="SSN:"  
Label5="Street Address:"  
Label6="City:"  
Label7="State:"  
Label8="Zip Code:"  
Label9="Home Phone:"  
Label10="Business Phone:"  
Label11="Mobile Phone:"  
Label12="Other Phone:"  
Label13="Fax:"  
Label14="Email Address:"  
Label15="Alternate Email Address:"  
```  
  
 <span data-ttu-id="2c61e-148">然後，您可以將文字資源檔轉換成二進位檔名 ApplicationResources.resources 為使用下列命令：</span><span class="sxs-lookup"><span data-stu-id="2c61e-148">You can then convert the text resource file to a binary file named ApplicationResources.resources by using the following command:</span></span>  
  
 <span data-ttu-id="2c61e-149">**resgen ApplicationResources.txt**</span><span class="sxs-lookup"><span data-stu-id="2c61e-149">**resgen ApplicationResources.txt**</span></span>  
  
 <span data-ttu-id="2c61e-150">下列範例會接著使用<xref:System.Resources.ResourceReader>類別來列舉每個獨立的二進位.resources 檔案中的資源，並以顯示索引鍵名稱和對應值。</span><span class="sxs-lookup"><span data-stu-id="2c61e-150">The following example then uses the <xref:System.Resources.ResourceReader> class to enumerate each resource in the standalone binary .resources file and to display its key name and corresponding value.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/class1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/class1.vb#1)]  
  
 <span data-ttu-id="2c61e-151">嘗試擷取資源資料從<xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>屬性可以擲回下列例外狀況：</span><span class="sxs-lookup"><span data-stu-id="2c61e-151">The attempt to retrieve resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property can throw the following exceptions:</span></span>  
  
-   <span data-ttu-id="2c61e-152">A<xref:System.FormatException>如果資料不是預期的格式。</span><span class="sxs-lookup"><span data-stu-id="2c61e-152">A <xref:System.FormatException> if the data is not in the expected format.</span></span>  
  
-   <span data-ttu-id="2c61e-153">A<xref:System.IO.FileNotFoundException>如果找不到組件，其中包含資料所屬的類型。</span><span class="sxs-lookup"><span data-stu-id="2c61e-153">A <xref:System.IO.FileNotFoundException> if the assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <span data-ttu-id="2c61e-154">A<xref:System.TypeLoadException>找不到如果不能是資料所屬的類型。</span><span class="sxs-lookup"><span data-stu-id="2c61e-154">A <xref:System.TypeLoadException> if the type to which the data belongs cannot be cannot be found.</span></span>  
  
 <span data-ttu-id="2c61e-155">一般而言，如果.resources 檔案已修改以手動方式，如果類型定義的組件不會包含與應用程式，或已被意外刪除，或組件是舊版本之前，會擲回這些例外狀況型別。</span><span class="sxs-lookup"><span data-stu-id="2c61e-155">Typically, these exceptions are thrown if the .resources file has been modified manually, if the assembly in which a type is defined has either not been included with an application or has been inadvertently deleted, or if the assembly is an older version that predates a type.</span></span> <span data-ttu-id="2c61e-156">如果擲回其中一個這些例外狀況，您可以擷取資源列舉每個資源，然後呼叫<xref:System.Resources.ResourceReader.GetResourceData%2A>方法，如下一節所示。</span><span class="sxs-lookup"><span data-stu-id="2c61e-156">If one of these exceptions is thrown, you can retrieve resources by enumerating each resource and calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method, as the following section shows.</span></span> <span data-ttu-id="2c61e-157">此方法會提供您一些有關資料相關的資訊類型<xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>嘗試傳回的屬性。</span><span class="sxs-lookup"><span data-stu-id="2c61e-157">This approach provides you with some information about the data type that the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property attempted to return.</span></span>  
  
<a name="getresourcedata"></a>   
### <a name="retrieving-resources-by-name-with-getresourcedata"></a><span data-ttu-id="2c61e-158">依名稱和 GetResourceData 擷取資源</span><span class="sxs-lookup"><span data-stu-id="2c61e-158">Retrieving Resources by Name with GetResourceData</span></span>  
 <span data-ttu-id="2c61e-159">列舉資源的.resources 檔案中的第二個方法，也需要瀏覽檔案中的資源，藉由呼叫`IDictionaryEnumerator.MoveNext`方法。</span><span class="sxs-lookup"><span data-stu-id="2c61e-159">The second approach to enumerating resources in a .resources file also involves navigating through the resources in the file by calling the `IDictionaryEnumerator.MoveNext` method.</span></span> <span data-ttu-id="2c61e-160">每項資源，您可以擷取來自資源名稱<xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType>屬性，然後傳遞至<xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29>方法來擷取資源的資料。</span><span class="sxs-lookup"><span data-stu-id="2c61e-160">For each resource, you retrieve the resource's name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property, which is then passed to the <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> method to retrieve the resource's data.</span></span> <span data-ttu-id="2c61e-161">這會當做位元組陣列中傳回`resourceData`引數。</span><span class="sxs-lookup"><span data-stu-id="2c61e-161">This is returned as a byte array in the `resourceData` argument.</span></span>  
  
 <span data-ttu-id="2c61e-162">這種方法是更造成不便，比擷取的資源名稱和值從<xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType>和<xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>屬性，因為它會傳回形成資源值的實際位元組數。</span><span class="sxs-lookup"><span data-stu-id="2c61e-162">This approach is more awkward than retrieving the resource name and value from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties, because it returns the actual bytes that form the resource value.</span></span> <span data-ttu-id="2c61e-163">不過，如果嘗試擷取資源就會擲回例外狀況，<xref:System.Resources.ResourceReader.GetResourceData%2A>方法可協助您識別例外狀況的來源，藉由提供資源的資料類型的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="2c61e-163">However, if the attempt to retrieve the resource throws an exception, the <xref:System.Resources.ResourceReader.GetResourceData%2A> method can help identify the source of the exception by supplying information about the resource's data type.</span></span> <span data-ttu-id="2c61e-164">如需此字串會指出資源的資料類型的詳細資訊，請參閱<xref:System.Resources.ResourceReader.GetResourceData%2A>。</span><span class="sxs-lookup"><span data-stu-id="2c61e-164">For more information about the string that indicates the resource's data type, see <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span></span>  
  
 <span data-ttu-id="2c61e-165">下列範例說明如何使用這種方法來擷取資源，並處理就會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2c61e-165">The following example illustrates how to use this approach to retrieve resources and to handle any exceptions that are thrown.</span></span> <span data-ttu-id="2c61e-166">以程式設計方式建立包含四個字串、 一個布林值、 一個整數，一個點陣圖和一個自訂的二進位.resources 檔案`DateTimeTZI`物件。</span><span class="sxs-lookup"><span data-stu-id="2c61e-166">It programmatically creates a binary .resources file that contains four strings, one Boolean, one integer, one bitmap, and one custom `DateTimeTZI` object.</span></span> <span data-ttu-id="2c61e-167">若要執行範例時，執行下列作業：</span><span class="sxs-lookup"><span data-stu-id="2c61e-167">To run the example, do the following:</span></span>  
  
1.  <span data-ttu-id="2c61e-168">建立名為 Library.dll 包含組件`DateTimeTZI`結構。</span><span class="sxs-lookup"><span data-stu-id="2c61e-168">Create an assembly named Library.dll that contains the `DateTimeTZI` structure.</span></span> <span data-ttu-id="2c61e-169">以下是組件的原始程式碼。</span><span class="sxs-lookup"><span data-stu-id="2c61e-169">The following is the source code for the assembly.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/library.cs#4)]
     [!code-vb[System.Resources.ResourceReader.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/library.vb#4)]  
  
     <span data-ttu-id="2c61e-170">編譯 C# 中的原始程式碼使用下列命令：</span><span class="sxs-lookup"><span data-stu-id="2c61e-170">Compile the source code in C# by using the following command:</span></span>  
  
    ```  
    csc /t:library library.cs  
    ```  
  
     <span data-ttu-id="2c61e-171">或者，您也可以編譯 Visual Basic 中使用下列命令：</span><span class="sxs-lookup"><span data-stu-id="2c61e-171">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc library.vb /t:library  
    ```  
  
2.  <span data-ttu-id="2c61e-172">編譯並執行下列的原始碼，建立名為 ContactResources.resources.resources 檔。</span><span class="sxs-lookup"><span data-stu-id="2c61e-172">Compile and execute the following source code, which creates a .resources file named ContactResources.resources.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/createresourceex1.cs#5)]
     [!code-vb[System.Resources.ResourceReader.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/createresourceex1.vb#5)]  
  
     <span data-ttu-id="2c61e-173">原始程式碼檔名為 CreateResources.cs。</span><span class="sxs-lookup"><span data-stu-id="2c61e-173">The source code file is named CreateResources.cs.</span></span> <span data-ttu-id="2c61e-174">您可以編譯它在 C# 中使用下列命令：</span><span class="sxs-lookup"><span data-stu-id="2c61e-174">You can compile it in C# by using the following command:</span></span>  
  
    ```  
    csc CreateResources.cs /r:library.dll  
    ```  
  
     <span data-ttu-id="2c61e-175">或者，您也可以編譯 Visual Basic 中使用下列命令：</span><span class="sxs-lookup"><span data-stu-id="2c61e-175">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc CreateResources.vb /r:library.dll  
    ```  
  
3.  <span data-ttu-id="2c61e-176">編譯並執行下列程式碼來列舉 ContactResources.resources 檔案中的資源。</span><span class="sxs-lookup"><span data-stu-id="2c61e-176">Compile and run the following code to enumerate the resources in the ContactResources.resources file.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/readresourceex1.cs#6)]
     [!code-vb[System.Resources.ResourceReader.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/readresourceex1.vb#6)]  
  
     <span data-ttu-id="2c61e-177">之後修改原始程式碼 (比方說，藉由故意擲回<xref:System.FormatException>結尾`try`區塊) 或重新命名 Library.dll 組件，以便在執行階段無法使用，您可以執行範例，以瞭解如何呼叫<xref:System.Resources.ResourceReader.GetResourceData%2A>可讓您擷取或重新建立某些資源資訊。</span><span class="sxs-lookup"><span data-stu-id="2c61e-177">After modifying the source code (for example, by deliberately throwing a <xref:System.FormatException> at the end of the `try` block) or renaming the Library.dll assembly so that it is unavailable at runtime, you can run the example to see how calls to <xref:System.Resources.ResourceReader.GetResourceData%2A> enable you to retrieve or recreate some resource information.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2c61e-178">初始化 <see cref="T:System.Resources.ResourceReader" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-178">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="2c61e-179">此物件的執行個體中使用不受信任的資料會有安全性風險。</span><span class="sxs-lookup"><span data-stu-id="2c61e-179">Using an instance of this object with untrusted data is a security risk.</span></span> <span data-ttu-id="2c61e-180">此物件只適用於受信任的資料。</span><span class="sxs-lookup"><span data-stu-id="2c61e-180">Use this object only with trusted data.</span></span> <span data-ttu-id="2c61e-181">如需詳細資訊，請參閱[資料驗證](https://www.owasp.org/index.php/Data_Validation)。</span><span class="sxs-lookup"><span data-stu-id="2c61e-181">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="2c61e-182">用於讀取資源的輸入資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-182">The input stream for reading resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c61e-183">為指定的資料流，初始化 <see cref="T:System.Resources.ResourceReader" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-183">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c61e-184"><xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29>建構函式具現化<xref:System.Resources.ResourceReader>物件，擷取的資源，也就是，或是從獨立的.resources 檔或.resources 檔內嵌於組件。</span><span class="sxs-lookup"><span data-stu-id="2c61e-184">The <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources either from a standalone .resources file or from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="2c61e-185">若要從獨立的.resources 檔案讀取，具現化<xref:System.IO.Stream>物件，並將它傳遞給<xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="2c61e-185">To read from a standalone .resources file, instantiate a <xref:System.IO.Stream> object and pass it to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="2c61e-186">若要讀取內嵌的.resources 檔中，呼叫<xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType>區分大小寫名稱的.resources 檔，並傳回的傳遞方法<xref:System.IO.Stream>物件<xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="2c61e-186">To read from an embedded .resources file, call the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method with the case-sensitive name of the .resources file, and pass the returned <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2c61e-187">此物件的執行個體中使用不受信任的資料會有安全性風險。</span><span class="sxs-lookup"><span data-stu-id="2c61e-187">Using an instance of this object with untrusted data is a security risk.</span></span> <span data-ttu-id="2c61e-188">此物件只適用於受信任的資料。</span><span class="sxs-lookup"><span data-stu-id="2c61e-188">Use this object only with trusted data.</span></span> <span data-ttu-id="2c61e-189">如需詳細資訊，請參閱[資料驗證](https://www.owasp.org/index.php/Data_Validation)。</span><span class="sxs-lookup"><span data-stu-id="2c61e-189">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c61e-190">本節中的範例使用下列的.txt 檔名為`PatientForm.txt`來定義應用程式所使用的資源。</span><span class="sxs-lookup"><span data-stu-id="2c61e-190">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="2c61e-191">您可以將.txt 檔編譯至.resources 檔發出下列命令：</span><span class="sxs-lookup"><span data-stu-id="2c61e-191">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="2c61e-192">**resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="2c61e-192">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="2c61e-193">下列範例會假設資源檔嵌入組件，其中包含應用程式的可執行程式碼。</span><span class="sxs-lookup"><span data-stu-id="2c61e-193">The following example assumes that the resource file is embedded in the assembly that contains the application's executable code.</span></span> <span data-ttu-id="2c61e-194">它會擷取名為`PatientForm.resources`從目前正在執行的組件，並顯示的名稱和其資源的每個值。</span><span class="sxs-lookup"><span data-stu-id="2c61e-194">It retrieves a resource file named `PatientForm.resources` from the currently executing assemblies and displays the name and value of each of its resources.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream1.vb#1)]  
  
 <span data-ttu-id="2c61e-195">若為 C# 範例`Example.cs`，您可以使用下列命令來編譯：</span><span class="sxs-lookup"><span data-stu-id="2c61e-195">If the C# example is named `Example.cs`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="2c61e-196">**csc Example.cs /res:PatientForm.resources**</span><span class="sxs-lookup"><span data-stu-id="2c61e-196">**csc Example.cs /res:PatientForm.resources**</span></span>  
  
 <span data-ttu-id="2c61e-197">若為 Visual Basic 範例`Example.vb`，您可以使用下列命令來編譯：</span><span class="sxs-lookup"><span data-stu-id="2c61e-197">If the Visual Basic example is named `Example.vb`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="2c61e-198">**vbc Example.vb /res:PatientForm.resources**</span><span class="sxs-lookup"><span data-stu-id="2c61e-198">**vbc Example.vb /res:PatientForm.resources**</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2c61e-199">
            <paramref name="stream" /> 參數無法讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-199">The <paramref name="stream" /> parameter is not readable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2c61e-200">
            <paramref name="stream" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-200">The <paramref name="stream" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2c61e-201">存取 <paramref name="stream" /> 時發生 I/O 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-201">An I/O error has occurred while accessing <paramref name="stream" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="2c61e-202">提供序列化服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-202">for providing serialization services.</span>
          </span>
          <span data-ttu-id="2c61e-203">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-203">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="2c61e-204">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-204">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="2c61e-205">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-205">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2c61e-206">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-206">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::String ^ fileName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="2c61e-207">要讀取的資源檔路徑和名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-207">The path and name of the resource file to read.</span>
          </span>
          <span data-ttu-id="2c61e-208">
            <c>filename</c> 不區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-208">
              <c>filename</c> is not case-sensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c61e-209">為指定的具名資源檔初始化 <see cref="T:System.Resources.ResourceReader" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-209">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified named resource file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c61e-210"><xref:System.Resources.ResourceReader.%23ctor%28System.String%29>建構函式具現化<xref:System.Resources.ResourceReader>從獨立的.resources 檔擷取資源的物件。</span><span class="sxs-lookup"><span data-stu-id="2c61e-210">The <xref:System.Resources.ResourceReader.%23ctor%28System.String%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources from a standalone .resources file.</span></span> <span data-ttu-id="2c61e-211">若要從內嵌的.resources 檔擷取資源，請使用<xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="2c61e-211">To retrieve resources from an embedded .resources file, use the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2c61e-212">此物件的執行個體中使用不受信任的資料會有安全性風險。</span><span class="sxs-lookup"><span data-stu-id="2c61e-212">Using an instance of this object with untrusted data is a security risk.</span></span> <span data-ttu-id="2c61e-213">此物件只適用於受信任的資料。</span><span class="sxs-lookup"><span data-stu-id="2c61e-213">Use this object only with trusted data.</span></span> <span data-ttu-id="2c61e-214">如需詳細資訊，請參閱[資料驗證](https://www.owasp.org/index.php/Data_Validation)。</span><span class="sxs-lookup"><span data-stu-id="2c61e-214">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c61e-215">本節中的範例使用下列的.txt 檔名為`PatientForm.txt`來定義應用程式所使用的資源。</span><span class="sxs-lookup"><span data-stu-id="2c61e-215">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="2c61e-216">您可以此.txt 檔編譯至.resources 檔發出下列命令：</span><span class="sxs-lookup"><span data-stu-id="2c61e-216">You can compile this .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="2c61e-217">**resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="2c61e-217">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="2c61e-218">下列範例會列舉中的資源`PatientForm.resources`並顯示名稱和每個值。</span><span class="sxs-lookup"><span data-stu-id="2c61e-218">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2c61e-219">
            <paramref name="fileName" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-219">The <paramref name="fileName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2c61e-220">找不到檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-220">The file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="2c61e-221">發生 I/O 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-221">An I/O error has occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="2c61e-222">資源檔的格式無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-222">The resource file has an invalid format.</span>
          </span>
          <span data-ttu-id="2c61e-223">例如，檔案的長度可為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-223">For example, the length of the file may be zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2c61e-224">將與這個 <see cref="T:System.Resources.ResourceReader" /> 物件相關聯的所有作業系統資源釋出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-224">Releases all operating system resources associated with this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c61e-225"><xref:System.Resources.ResourceReader.Close%2A> 可以安全地呼叫多次。</span><span class="sxs-lookup"><span data-stu-id="2c61e-225"><xref:System.Resources.ResourceReader.Close%2A> can be safely called multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c61e-226">下列範例中的移動檔案的資源，並顯示它找到的所有索引鍵/值組。</span><span class="sxs-lookup"><span data-stu-id="2c61e-226">The following example moves through a file's resources and displays all the key/value pairs it finds.</span></span> <span data-ttu-id="2c61e-227">然後程式碼會使用<xref:System.Resources.ResourceReader.Close%2A>方法來關閉<xref:System.Resources.ResourceReader>並釋放它所使用的所有資源。</span><span class="sxs-lookup"><span data-stu-id="2c61e-227">The code then uses the <xref:System.Resources.ResourceReader.Close%2A> method to shut down the <xref:System.Resources.ResourceReader> and to release all resources used by it.</span></span>  
  
 [!code-cpp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2c61e-228">將 <see cref="T:System.Resources.ResourceReader" /> 類別目前的執行個體所使用的資源全部釋出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-228">Releases all resources used by the current instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c61e-229">當您完成使用此執行個體<xref:System.Resources.ResourceReader>，呼叫<xref:System.Resources.ResourceReader.Dispose%2A>釋放此執行個體所使用的所有資源。</span><span class="sxs-lookup"><span data-stu-id="2c61e-229">When you are finished using this instance of <xref:System.Resources.ResourceReader>, call <xref:System.Resources.ResourceReader.Dispose%2A> to release all resources used by this instance.</span></span> <span data-ttu-id="2c61e-230">您應該刪除進一步參考<xref:System.Resources.ResourceReader>執行個體，讓記憶體回收行程可以回收的記憶體，而不是讓它維持在運作進行最終處理的執行個體。</span><span class="sxs-lookup"><span data-stu-id="2c61e-230">You should eliminate further references to this <xref:System.Resources.ResourceReader> instance so that the garbage collector can reclaim the memory of the instance instead of keeping it alive for finalization.</span></span>  
  
 <span data-ttu-id="2c61e-231"><xref:System.Resources.ResourceReader.Dispose%2A> 呼叫的私用的 dispose （boolean） 方法，其中包含表示釋放 managed 和 unmanaged 資源的程式碼。</span><span class="sxs-lookup"><span data-stu-id="2c61e-231"><xref:System.Resources.ResourceReader.Dispose%2A> calls the private Dispose(Boolean) method, which contains the code to release managed and unmanaged resources.</span></span> <span data-ttu-id="2c61e-232">如需詳細資訊，請參閱[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="2c61e-232">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2c61e-233">傳回這個 <see cref="T:System.Resources.ResourceReader" /> 物件的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-233">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c61e-234">這個物件 <see cref="T:System.Resources.ResourceReader" /> 的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-234">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c61e-235">一般而言，您藉由呼叫列舉資源<xref:System.Resources.ResourceReader.GetEnumerator%2A>方法，然後再重複呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>方法在傳回<xref:System.Collections.IDictionaryEnumerator>物件，直到該方法會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="2c61e-235">Typically, you enumerate resources by calling the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method and then repeatedly calling the <xref:System.Collections.IEnumerator.MoveNext%2A> method on the returned <xref:System.Collections.IDictionaryEnumerator> object until the method returns `false`.</span></span> <span data-ttu-id="2c61e-236">資源名稱是可從<xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType>屬性，其值從<xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="2c61e-236">The resource name is available from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property; its value from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2c61e-237">此範例說明如何列舉資源以這種方式。</span><span class="sxs-lookup"><span data-stu-id="2c61e-237">The example illustrates how to enumerate resources in this way.</span></span>  
  
 <span data-ttu-id="2c61e-238">實作<xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>屬性<xref:System.Resources.ResourceReader>類別可能會擲回下列例外狀況：</span><span class="sxs-lookup"><span data-stu-id="2c61e-238">The implementation of the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property by the <xref:System.Resources.ResourceReader> class can throw the following exceptions:</span></span>  
  
-   <xref:System.IO.FileNotFoundException>  
  
     <span data-ttu-id="2c61e-239">找不到組件，其中包含資料所屬的類型。</span><span class="sxs-lookup"><span data-stu-id="2c61e-239">The assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <xref:System.FormatException>  
  
     <span data-ttu-id="2c61e-240">資料不是預期的格式。</span><span class="sxs-lookup"><span data-stu-id="2c61e-240">The data is not in the expected format.</span></span>  
  
-   <xref:System.TypeLoadException>  
  
     <span data-ttu-id="2c61e-241">找不到資料所屬的類型。</span><span class="sxs-lookup"><span data-stu-id="2c61e-241">The type to which the data belongs cannot be found.</span></span>  
  
 <span data-ttu-id="2c61e-242">您可以藉由呼叫處理例外狀況<xref:System.Resources.ResourceReader.GetResourceData%2A>方法來擷取的資料類型與位元組陣列指派給具名資源的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="2c61e-242">You can handle the exception by calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve information about the data type and the byte array assigned to the named resource.</span></span> <span data-ttu-id="2c61e-243">如需詳細資訊，請參閱 「 擷取資源的名稱與 GetResourceData 」 一節<xref:System.Resources.ResourceReader>類別主題。</span><span class="sxs-lookup"><span data-stu-id="2c61e-243">For more information, see the "Retrieving Resources by Name with GetResourceData" section in the <xref:System.Resources.ResourceReader> class topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2c61e-244"><xref:System.Resources.ResourceReader>類別包含兩個方法會傳回列舉值。</span><span class="sxs-lookup"><span data-stu-id="2c61e-244">The <xref:System.Resources.ResourceReader> class includes two methods that return enumerators.</span></span> <span data-ttu-id="2c61e-245"><xref:System.Resources.ResourceReader.GetEnumerator%2A>方法會傳回<xref:System.Collections.IDictionaryEnumerator>介面物件，並呼叫時的建議的方法列舉資源。</span><span class="sxs-lookup"><span data-stu-id="2c61e-245">The <xref:System.Resources.ResourceReader.GetEnumerator%2A> method returns an <xref:System.Collections.IDictionaryEnumerator> interface object and is the recommended method to call when enumerating resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c61e-246">本節中的範例使用下列的.txt 檔名為`PatientForm.txt`來定義應用程式所使用的資源。</span><span class="sxs-lookup"><span data-stu-id="2c61e-246">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="2c61e-247">您可以將.txt 檔編譯至.resources 檔發出下列命令：</span><span class="sxs-lookup"><span data-stu-id="2c61e-247">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="2c61e-248">**resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="2c61e-248">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="2c61e-249">下列範例會列舉中的資源`PatientForm.resources`並顯示名稱和每個值。</span><span class="sxs-lookup"><span data-stu-id="2c61e-249">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2c61e-250">讀取器已關閉或已處置，因此無法存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-250">The reader has been closed or disposed, and cannot be accessed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceData">
      <MemberSignature Language="C#" Value="public void GetResourceData (string resourceName, out string resourceType, out byte[] resourceData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetResourceData(string resourceName, [out] string&amp; resourceType, [out] unsigned int8[]&amp; resourceData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetResourceData (resourceName As String, ByRef resourceType As String, ByRef resourceData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetResourceData(System::String ^ resourceName, [Runtime::InteropServices::Out] System::String ^ % resourceType, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % resourceData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String&amp;" RefType="out" />
        <Parameter Name="resourceData" Type="System.Byte[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resourceName">
          <span data-ttu-id="2c61e-251">資源的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-251">The name of a resource.</span>
          </span>
        </param>
        <param name="resourceType">
          <span data-ttu-id="2c61e-252">這個方法傳回時，包含表示所擷取資源類型名稱的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-252">When this method returns, contains a string that represents the type name of the retrieved resource.</span>
          </span>
          <span data-ttu-id="2c61e-253">這個參數會以未初始化的狀態傳遞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-253">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="resourceData">
          <span data-ttu-id="2c61e-254">當這個方法傳回時，會包含以所擷取類型之二進位表示的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-254">When this method returns, contains a byte array that is the binary representation of the retrieved type.</span>
          </span>
          <span data-ttu-id="2c61e-255">這個參數會以未初始化的狀態傳遞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-255">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c61e-256">從開啟的資源檔或資料流，擷取具名資源的類型名稱和資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-256">Retrieves the type name and data of a named resource from an open resource file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c61e-257"><xref:System.Resources.ResourceReader.GetResourceData%2A>方法會擷取為位元組陣列的具名資源的值。</span><span class="sxs-lookup"><span data-stu-id="2c61e-257">The <xref:System.Resources.ResourceReader.GetResourceData%2A> method retrieves the value of a named resource as a byte array.</span></span> <span data-ttu-id="2c61e-258">這通常會使用的時機<xref:System.Collections.IDictionaryEnumerator.Value%2A>屬性在嘗試擷取資源的值時，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="2c61e-258">It is typically used when the <xref:System.Collections.IDictionaryEnumerator.Value%2A> property throws an exception when it tries to retrieve the value of a resource.</span></span>  
  
 <span data-ttu-id="2c61e-259">`resourceType` 是代表資源的資料類型的字串。</span><span class="sxs-lookup"><span data-stu-id="2c61e-259">`resourceType` is a string that represents the data type of the resource.</span></span> <span data-ttu-id="2c61e-260">它可以是下列值之一：</span><span class="sxs-lookup"><span data-stu-id="2c61e-260">It can be any of the following values:</span></span>  
  
-   <span data-ttu-id="2c61e-261">字串表示`ResourceTypeCode`列舉的成員，表示資源的資料類型。</span><span class="sxs-lookup"><span data-stu-id="2c61e-261">The string representation of a `ResourceTypeCode` enumeration member that indicates the data type of the resource.</span></span> <span data-ttu-id="2c61e-262">`ResourceTypeCode` 是。 若要使用的私用列舉型別表示特殊的二進位格式用來儲存 19 常見的資料類型。</span><span class="sxs-lookup"><span data-stu-id="2c61e-262">`ResourceTypeCode` is a private enumeration that is used by .to indicate that a special binary format is used to store one of 19 common data types.</span></span> <span data-ttu-id="2c61e-263">這些包括.NET Framework 的基本資料型別 (<xref:System.Boolean>， <xref:System.Byte>， <xref:System.Char>， <xref:System.Decimal>， <xref:System.Double>， <xref:System.Int16>， <xref:System.Int32>， <xref:System.Int64>， <xref:System.Single>， <xref:System.SByte>， <xref:System.UInt16>， <xref:System.UInt32>， <xref:System.UInt64>)，以及<xref:System.String>， <xref:System.DateTime>，和<xref:System.TimeSpan>，此外，`ResourceTypeCode`列舉會包含下表中所顯示的值。</span><span class="sxs-lookup"><span data-stu-id="2c61e-263">These include the .NET Framework primitive data types (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), as well as <xref:System.String>, <xref:System.DateTime>, and <xref:System.TimeSpan>, In addition, the `ResourceTypeCode` enumeration includes the values shown in the following table.</span></span>  
  
    |<span data-ttu-id="2c61e-264">ResourceTypeCode value</span><span class="sxs-lookup"><span data-stu-id="2c61e-264">ResourceTypeCode value</span></span>|<span data-ttu-id="2c61e-265">描述</span><span class="sxs-lookup"><span data-stu-id="2c61e-265">Description</span></span>|  
    |----------------------------|-----------------|  
    |`ResourceTypeCode.ByteArray`|<span data-ttu-id="2c61e-266">資料為位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="2c61e-266">The data is a byte array.</span></span> <span data-ttu-id="2c61e-267">這個資料類型通常與呼叫的結果<xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="2c61e-267">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> method.</span></span>|  
    |`ResourceTypeCode.Null`|<span data-ttu-id="2c61e-268">資料為 null 參考。</span><span class="sxs-lookup"><span data-stu-id="2c61e-268">The data is a null reference.</span></span> <span data-ttu-id="2c61e-269">這個資料類型通常與呼叫的結果<xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType>物件，其值為具有方法`null`。</span><span class="sxs-lookup"><span data-stu-id="2c61e-269">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> method with an object whose value is `null`.</span></span>|  
    |`ResourceTypeCode.Stream`|<span data-ttu-id="2c61e-270">資料會儲存在資料流。</span><span class="sxs-lookup"><span data-stu-id="2c61e-270">The data is stored in a stream.</span></span> <span data-ttu-id="2c61e-271">這個資料類型通常與呼叫的結果<xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType>或<xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="2c61e-271">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> or <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> method.</span></span>|  
  
     <span data-ttu-id="2c61e-272">假設`resourceData`已損毀，它通常可轉換從位元組陣列回其原始值藉由呼叫<xref:System.BitConverter>或<xref:System.IO.BinaryReader>方法。</span><span class="sxs-lookup"><span data-stu-id="2c61e-272">Assuming that `resourceData` has not been corrupted, it can usually be converted from a byte array back to its original value by calling a <xref:System.BitConverter> or <xref:System.IO.BinaryReader> method.</span></span>  
  
-   <span data-ttu-id="2c61e-273">字串，包含其序列化的資料指派給類型的完整的名稱`resourceData`引數 (例如， `System.String`)。</span><span class="sxs-lookup"><span data-stu-id="2c61e-273">A string that contains the fully qualified name of the type whose serialized data is assigned to the `resourceData` argument (for example, `System.String`).</span></span> <span data-ttu-id="2c61e-274">此外，對於不屬於.NET Framework 類別庫的類型，字串包括名稱、 版本、 文化特性，以及包含該類型的組件的公開金鑰。</span><span class="sxs-lookup"><span data-stu-id="2c61e-274">In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type.</span></span> <span data-ttu-id="2c61e-275">例如，下列字串表示的序列化的資料表示的執行個體`Person`輸入`Extensions`位於名為具有任何公開金鑰並沒有指定的文化特性的公用程式組件版本 1.0 命名空間。</span><span class="sxs-lookup"><span data-stu-id="2c61e-275">For example, the following string indicates that the serialized data represents an instance of the `Person` type in the `Extensions` namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.</span></span>  
  
     `Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`  
  
     <span data-ttu-id="2c61e-276">假設`resourceData`並未損毀，而且來源類型可，`resourceData`可以回到其原始值從位元組陣列轉換，藉由轉換位元組陣列並<xref:System.IO.Stream>物件並將資料流傳遞至<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="2c61e-276">Assuming that `resourceData` has not been corrupted and that the source type is available, `resourceData` can be converted from a byte array back to its original value by converting the byte array to a <xref:System.IO.Stream> object and passing the stream to the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="2c61e-277">用來描述中的資料類型的字串<xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="2c61e-277">The string used to describe the data type in the <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2c61e-278">
            <paramref name="resourceName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-278">
              <paramref name="resourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2c61e-279">
            <paramref name="resourceName" /> 不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-279">
              <paramref name="resourceName" /> does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="2c61e-280">
            <paramref name="resourceName" /> 具有不正確的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-280">
              <paramref name="resourceName" /> has an invalid type.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="2c61e-281">擷取的資源資料已損毀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-281">The retrieved resource data is corrupt.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2c61e-282">目前的<see cref="T:System.Resources.ResourceReader" />物件尚未初始化，可能因為它已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-282">The current <see cref="T:System.Resources.ResourceReader" /> object is not initialized, probably because it is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2c61e-283">傳回這個 <see cref="T:System.Resources.ResourceReader" /> 物件的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-283">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c61e-284">這個物件 <see cref="T:System.Resources.ResourceReader" /> 的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-284">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c61e-285"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> 是明確介面實作。</span><span class="sxs-lookup"><span data-stu-id="2c61e-285"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> is an explicit interface implementation.</span></span> <span data-ttu-id="2c61e-286">只有在 <xref:System.Resources.ResourceReader> 執行個體轉換成 <xref:System.Collections.IEnumerable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="2c61e-286">It can be used only when the <xref:System.Resources.ResourceReader> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span> <span data-ttu-id="2c61e-287">列舉資源的.resources 檔案中的建議的方法是呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>方法<xref:System.Collections.IDictionaryEnumerator>所傳回物件<xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="2c61e-287">The recommended approach to enumerating the resources in a .resources file is to call the <xref:System.Collections.IEnumerator.MoveNext%2A> method of the <xref:System.Collections.IDictionaryEnumerator> object returned by the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2c61e-288">讀取器已經關閉，因此無法存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c61e-288">The reader has already been closed and cannot be accessed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>