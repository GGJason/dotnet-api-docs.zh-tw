<Type Name="ResXDataNode" FullName="System.Resources.ResXDataNode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="58eb2e9daa3e84302823234fa5192b663c4dfd8e" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52378162" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ResXDataNode : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ResXDataNode extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResXDataNode" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResXDataNode&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResXDataNode sealed : System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type ResXDataNode = class&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 XML 資源檔 (.resx) 中的項目。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResXDataNode>類別支援的資源檔中的豐富的資料類型的表示法。 只要物件支援序列化和類型的編輯器，它可以在資源檔，支援任何物件的儲存的體。  
  
 您可以建立<xref:System.Resources.ResXDataNode>藉由呼叫其中一個多載的類別建構函式的物件。 您可以再加入資源項目或項目資源檔藉由呼叫<xref:System.Resources.ResXResourceWriter.AddResource%2A?displayProperty=nameWithType>方法。  
  
 若要擷取現有<xref:System.Resources.ResXDataNode>物件，您必須列舉<xref:System.Resources.ResXDataNode>所具現化 XML 資源檔中的物件<xref:System.Resources.ResXResourceReader>物件，設定<xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A?displayProperty=nameWithType>屬性設`true`，並呼叫<xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType>方法取得列舉值。 這個範例將提供說明。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType>方法，以取得<xref:System.Collections.IDictionaryEnumerator>物件，可用來列舉<xref:System.Resources.ResXDataNode>.resx 檔案中的物件。 此範例也包含`CreateResourceFile`常式，它會建立必要的 XML 資源檔。  
  
 [!code-csharp[System.Resources.ResXDataNode.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxdatanode.class/cs/resxresourcereader2.cs#1)]
 [!code-vb[System.Resources.ResXDataNode.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxdatanode.class/vb/resxresourcereader2.vb#1)]  
  
 因為<xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>屬性是`true`，值<xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>屬性是<xref:System.Resources.ResXDataNode>物件而不是資源的值。 這可讓資源項目的註解可從<xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=nameWithType>屬性。  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">針對完全信任立即呼叫端。 此類型不能由部分信任的程式碼。</permission>
    <related type="Article" href="https://msdn.microsoft.com/library/f7570c09-7db5-44f2-983a-e8859caeb0d5">.NET Framework 中的序列化</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Resources.ResXDataNode" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXDataNode (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXDataNode(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXDataNode : string * obj -&gt; System.Resources.ResXDataNode" Usage="new System.Resources.ResXDataNode (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">資源名稱。</param>
        <param name="value">要儲存的資源。</param>
        <summary>初始化 <see cref="T:System.Resources.ResXDataNode" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="value" /> 中的具名資源不支援序列化。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> 是一個長度為零的字串。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">針對完全信任立即呼叫端。 這個成員無法供部分信任的程式碼使用。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXDataNode (string name, System.Resources.ResXFileRef fileRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Resources.ResXFileRef fileRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.#ctor(System.String,System.Resources.ResXFileRef)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, fileRef As ResXFileRef)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXDataNode(System::String ^ name, System::Resources::ResXFileRef ^ fileRef);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXDataNode : string * System.Resources.ResXFileRef -&gt; System.Resources.ResXDataNode" Usage="new System.Resources.ResXDataNode (name, fileRef)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileRef" Type="System.Resources.ResXFileRef" />
      </Parameters>
      <Docs>
        <param name="name">資源名稱。</param>
        <param name="fileRef">要做為資源的檔案參考。</param>
        <summary>使用資源檔的參考，初始化 <see cref="T:System.Resources.ResXDataNode" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> 是 <see langword="null" />，或 <paramref name="fileRef" /> 是 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> 是一個長度為零的字串。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">針對完全信任立即呼叫端。 這個成員無法供部分信任的程式碼使用。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXDataNode (string name, object value, Func&lt;Type,string&gt; typeNameConverter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value, class System.Func`2&lt;class System.Type, string&gt; typeNameConverter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.#ctor(System.String,System.Object,System.Func{System.Type,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object, typeNameConverter As Func(Of Type, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXDataNode(System::String ^ name, System::Object ^ value, Func&lt;Type ^, System::String ^&gt; ^ typeNameConverter);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXDataNode : string * obj * Func&lt;Type, string&gt; -&gt; System.Resources.ResXDataNode" Usage="new System.Resources.ResXDataNode (name, value, typeNameConverter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="typeNameConverter" Type="System.Func&lt;System.Type,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="name">資源名稱。</param>
        <param name="value">要儲存的資源。</param>
        <param name="typeNameConverter">方法的參考，這個方法會接受 <see cref="T:System.Type" /> 並傳回包含 <see cref="T:System.Type" /> 名稱的字串。</param>
        <summary>初始化 <see cref="T:System.Resources.ResXDataNode" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="value" /> 中的具名資源不支援序列化。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> 是一個長度為零的字串。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">針對完全信任立即呼叫端。 這個成員無法供部分信任的程式碼使用。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXDataNode (string name, System.Resources.ResXFileRef fileRef, Func&lt;Type,string&gt; typeNameConverter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Resources.ResXFileRef fileRef, class System.Func`2&lt;class System.Type, string&gt; typeNameConverter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.#ctor(System.String,System.Resources.ResXFileRef,System.Func{System.Type,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, fileRef As ResXFileRef, typeNameConverter As Func(Of Type, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXDataNode(System::String ^ name, System::Resources::ResXFileRef ^ fileRef, Func&lt;Type ^, System::String ^&gt; ^ typeNameConverter);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXDataNode : string * System.Resources.ResXFileRef * Func&lt;Type, string&gt; -&gt; System.Resources.ResXDataNode" Usage="new System.Resources.ResXDataNode (name, fileRef, typeNameConverter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileRef" Type="System.Resources.ResXFileRef" />
        <Parameter Name="typeNameConverter" Type="System.Func&lt;System.Type,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="name">資源名稱。</param>
        <param name="fileRef">要做為資源的檔案參考。</param>
        <param name="typeNameConverter">方法的參考，這個方法會接受 <see cref="T:System.Type" /> 並傳回包含 <see cref="T:System.Type" /> 名稱的字串。</param>
        <summary>使用資源檔的參考，初始化 <see cref="T:System.Resources.ResXDataNode" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> 是 <see langword="null" />，或 <paramref name="fileRef" /> 是 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> 是一個長度為零的字串。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">針對完全信任立即呼叫端。 這個成員無法供部分信任的程式碼使用。</permission>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResXDataNode.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Resources.ResXDataNode.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定有關這個資源的任意註解。</summary>
        <value>表示註解的字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果註解不指派給資源項目，值<xref:System.Resources.ResXDataNode.Comment%2A>屬性是<xref:System.String.Empty?displayProperty=nameWithType>。  
  
 您存取<xref:System.Resources.ResXDataNode.Comment%2A>屬性以具現化現有的 XML 資源檔中的資料節點<xref:System.Resources.ResXResourceReader>物件，設定<xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A?displayProperty=nameWithType>屬性設`true`，然後呼叫<xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType>方法來擷取<xref:System.Collections.IDictionaryEnumerator>物件，可用來列舉 XML 資源檔中的項目。 <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>屬性會傳回<xref:System.Resources.ResXDataNode>物件。  
  
   
  
## Examples  
 範例，請參閱<xref:System.Resources.ResXDataNode>類別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileRef">
      <MemberSignature Language="C#" Value="public System.Resources.ResXFileRef FileRef { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Resources.ResXFileRef FileRef" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResXDataNode.FileRef" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileRef As ResXFileRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Resources::ResXFileRef ^ FileRef { System::Resources::ResXFileRef ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileRef : System.Resources.ResXFileRef" Usage="System.Resources.ResXDataNode.FileRef" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResXFileRef</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個資源的檔案參考。</summary>
        <value>檔案參考 (如果這個資源有使用檔案參考)。 如果這個資源儲存其值做為 <see cref="T:System.Object" />，則這個屬性會傳回 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNodePosition">
      <MemberSignature Language="C#" Value="public System.Drawing.Point GetNodePosition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point GetNodePosition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.GetNodePosition" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodePosition () As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point GetNodePosition();" />
      <MemberSignature Language="F#" Value="member this.GetNodePosition : unit -&gt; System.Drawing.Point" Usage="resXDataNode.GetNodePosition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取資源在資源檔中的位置。</summary>
        <returns>結構，以行位置 (<see cref="P:System.Drawing.Point.X" />) 和欄位置 (<see cref="P:System.Drawing.Point.Y" />) 指定這個資源在資源檔中的位置。 如果這個資源不是資源檔的一部分，則這個方法會傳回結構，其 <see cref="P:System.Drawing.Point.X" /> 和 <see cref="P:System.Drawing.Point.Y" /> 都為 0。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>擷取這個節點所儲存的物件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.GetValue(System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (typeResolver As ITypeResolutionService) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.ComponentModel.Design.ITypeResolutionService -&gt; obj" Usage="resXDataNode.GetValue typeResolver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="typeResolver">在尋找型別轉換子時所要使用的型別解析服務。</param>
        <summary>藉由使用型別解析服務，擷取這個節點所儲存的物件。</summary>
        <returns>對應至預存值的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果預存的值目前存在於記憶體中，它會直接傳回。 它會儲存在資源檔，則不需檔案的參考，如果<xref:System.Resources.ResXDataNode.GetValue%2A>會尋找<xref:System.ComponentModel.TypeConverter>藉由使用指定的型別解析服務，可以從字串轉換為適當的物件。 如果資源檔案參考，<xref:System.Resources.ResXDataNode.GetValue%2A>嘗試將它還原序列化。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TypeLoadException">找不到對應的型別，或適當型別轉換子無法使用。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.Reflection.AssemblyName[] names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.Reflection.AssemblyName[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.GetValue(System.Reflection.AssemblyName[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (names As AssemblyName()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Reflection.AssemblyName[] -&gt; obj" Usage="resXDataNode.GetValue names" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Reflection.AssemblyName[]" />
      </Parameters>
      <Docs>
        <param name="names">要搜尋物件類型的組件清單。</param>
        <summary>藉由搜尋指定的組件，擷取這個節點所儲存的物件。</summary>
        <returns>對應至預存值的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果預存的值目前存在於記憶體中，它會直接傳回。 它會儲存在資源檔，則不需檔案的參考，如果<xref:System.Resources.ResXDataNode.GetValue%2A>組件中識別的名稱來找不到物件的對應類型，看起來，然後尋找<xref:System.ComponentModel.TypeConverter>，可以將字串轉換到適當的物件。 如果資源檔案參考，<xref:System.Resources.ResXDataNode.GetValue%2A>會嘗試將它還原序列化。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TypeLoadException">找不到對應的型別，或適當型別轉換子無法使用。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValueTypeName">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>擷取值的型別名稱。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValueTypeName">
      <MemberSignature Language="C#" Value="public string GetValueTypeName (System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetValueTypeName(class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.GetValueTypeName(System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueTypeName (typeResolver As ITypeResolutionService) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetValueTypeName(System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberSignature Language="F#" Value="member this.GetValueTypeName : System.ComponentModel.Design.ITypeResolutionService -&gt; string" Usage="resXDataNode.GetValueTypeName typeResolver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="typeResolver">在尋找這個型別的轉換子時所要使用的型別解析服務。</param>
        <summary>藉由使用指定的型別解析服務，擷取值的型別名稱。</summary>
        <returns>字串，表示類型的完整名稱。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TypeLoadException">找不到對應的型別。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueTypeName">
      <MemberSignature Language="C#" Value="public string GetValueTypeName (System.Reflection.AssemblyName[] names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetValueTypeName(class System.Reflection.AssemblyName[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.GetValueTypeName(System.Reflection.AssemblyName[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueTypeName (names As AssemblyName()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetValueTypeName(cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="member this.GetValueTypeName : System.Reflection.AssemblyName[] -&gt; string" Usage="resXDataNode.GetValueTypeName names" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Reflection.AssemblyName[]" />
      </Parameters>
      <Docs>
        <param name="names">要在其中檢查是否有型別的組件。</param>
        <summary>藉由檢查指定的組件，擷取值的型別名稱。</summary>
        <returns>字串，表示類型的完整名稱。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TypeLoadException">找不到對應的型別。</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResXDataNode.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Resources.ResXDataNode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定這個資源的名稱。</summary>
        <value>對應到資源名稱的字串。 如果未指定名稱，則這個屬性會傳回零長度的字串。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">名稱屬性設為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">名稱屬性設定為零長度字串。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">要填入資料的物件。</param>
        <param name="context">這個序列化的目的端。</param>
        <summary>將序列化目標物件所需要的資料填入 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Resources.ResXDataNode> 執行個體轉換成 <xref:System.Runtime.Serialization.ISerializable> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>