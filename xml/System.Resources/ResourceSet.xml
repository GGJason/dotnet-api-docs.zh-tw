<Type Name="ResourceSet" FullName="System.Resources.ResourceSet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="65e18118abad51d15b640b8d759ad9441c5b21d2" /><Meta Name="ms.sourcegitcommit" Value="662f143e6be46d519ff8ab4451d543d91e651478" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/18/2018" /><Meta Name="ms.locfileid" Value="53564972" /></Metadata><TypeSignature Language="C#" Value="public class ResourceSet : IDisposable, System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ResourceSet extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceSet" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceSet&#xA;Implements IDisposable, IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceSet : IDisposable, System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type ResourceSet = class&#xA;    interface IDisposable&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9d6a7-101">儲存針對某個文化特性並忽略其他所有文化特性進行當地語系化的所有資源，包括任何後援規則。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-101">Stores all the resources localized for one particular culture, ignoring all other cultures, including any fallback rules.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="9d6a7-102"><xref:System.Resources.ResourceSet>類別列舉<xref:System.Resources.IResourceReader>、 載入每個名稱和值，並將它們儲存在<xref:System.Collections.Hashtable>。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-102">The <xref:System.Resources.ResourceSet> class enumerates over an <xref:System.Resources.IResourceReader>, loading every name and value, and storing them in a <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="9d6a7-103">自訂<xref:System.Resources.IResourceReader>可用。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-103">A custom <xref:System.Resources.IResourceReader> can be used.</span></span>  
  
 <span data-ttu-id="9d6a7-104">您可以具現化<xref:System.Resources.ResourceSet>物件，代表特定文化特性的資源，藉由呼叫<xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-104">You can instantiate a <xref:System.Resources.ResourceSet> object that represents the resources of a specific culture by calling the <xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9d6a7-105">此類型會實作<xref:System.IDisposable>介面。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-105">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="9d6a7-106">當您完成使用型別時，您應該處置它直接或間接。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-106">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="9d6a7-107">若要直接處置型別，呼叫其<xref:System.IDisposable.Dispose%2A>方法中的`try` / `catch`區塊。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-107">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="9d6a7-108">若要處置它間接，使用的語言建構這類`using`（在 C# 中) 或`Using`（在 Visual Basic)。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-108">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="9d6a7-109">如需詳細資訊，請參閱 「 使用物件，實作 IDisposable 」 一節<xref:System.IDisposable>介面 > 主題。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-109">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="9d6a7-110">衍生的類別<see cref="T:System.Resources.ResourceSet" />，使用自己的資源讀取器和寫入器應該覆寫<see cref="M:System.Resources.ResourceSet.GetDefaultReader" />，和<see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />，以提供適當的功能，用於解譯的資源集。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-110">Derived classes of <see cref="T:System.Resources.ResourceSet" /> that use their own resource reader and writer should override <see cref="M:System.Resources.ResourceSet.GetDefaultReader" />, and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />, to provide the appropriate functionality for interpreting the resource set.</span></span></para></block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d6a7-111">建立 <see cref="T:System.Resources.ResourceSet" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-111">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceSet ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ResourceSet();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d6a7-112">使用預設屬性，初始化 <see cref="T:System.Resources.ResourceSet" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-112">Initializes a new instance of the <see cref="T:System.Resources.ResourceSet" /> class with default properties.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceSet (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceSet(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceSet : System.IO.Stream -&gt; System.Resources.ResourceSet" Usage="new System.Resources.ResourceSet stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="9d6a7-113">要讀取之資源的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-113">The <see cref="T:System.IO.Stream" /> of resources to be read.</span></span> <span data-ttu-id="9d6a7-114">資料流應參考現有資源檔。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-114">The stream should refer to an existing resources file.</span></span></param>
        <summary><span data-ttu-id="9d6a7-115">使用從指定資料流讀取資源的系統預設 <see cref="T:System.Resources.ResourceSet" />，建立 <see cref="T:System.Resources.ResourceReader" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-115">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class using the system default <see cref="T:System.Resources.ResourceReader" /> that reads resources from the given stream.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9d6a7-116"><paramref name="stream" /> 是無法讀取的。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-116">The <paramref name="stream" /> is not readable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d6a7-117"><paramref name="stream" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-117">The <paramref name="stream" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9d6a7-118">提供序列化服務。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-118">for providing serialization services.</span></span> <span data-ttu-id="9d6a7-119">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> 安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span><span class="sxs-lookup"><span data-stu-id="9d6a7-119">Associated enumeration:   <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="9d6a7-120">需要完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-120">requires full trust for the immediate caller.</span></span> <span data-ttu-id="9d6a7-121">此成員不能由部分信任或不透明的程式碼。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-121">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceSet (System.Resources.IResourceReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Resources.IResourceReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As IResourceReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceSet(System::Resources::IResourceReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceSet : System.Resources.IResourceReader -&gt; System.Resources.ResourceSet" Usage="new System.Resources.ResourceSet reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Resources.IResourceReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="9d6a7-122">將使用的讀取器。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-122">The reader that will be used.</span></span></param>
        <summary><span data-ttu-id="9d6a7-123">使用指定的資源讀取器，建立 <see cref="T:System.Resources.ResourceSet" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-123">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class using the specified resource reader.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d6a7-124">您可以使用這個建構函式，以支援使用使用者所提供的自訂資源格式<xref:System.Resources.IResourceReader>。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-124">You can use this constructor to support custom resource formats using a user-provided <xref:System.Resources.IResourceReader>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d6a7-125"><paramref name="reader" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-125">The <paramref name="reader" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceSet (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceSet(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceSet : string -&gt; System.Resources.ResourceSet" Usage="new System.Resources.ResourceSet fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="9d6a7-126">要讀取的資源檔。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-126">Resource file to read.</span></span></param>
        <summary><span data-ttu-id="9d6a7-127">使用從指定檔案開啟和讀取資源的系統預設 <see cref="T:System.Resources.ResourceSet" />，建立 <see cref="T:System.Resources.ResourceReader" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-127">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class using the system default <see cref="T:System.Resources.ResourceReader" /> that opens and reads resources from the given file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9d6a7-128">下列程式碼範例定義的新執行個體<xref:System.Resources.ResourceSet>類別特定的檔案，會逐一查看該檔案中，所使用的資源，並在主控台中顯示其內容。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-128">The following code example defines a new instance of the <xref:System.Resources.ResourceSet> class for a specific file, iterates through the resources used by that file, and displays their contents to the console.</span></span>  
  
 [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d6a7-129"><paramref name="fileName" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-129">The <paramref name="fileName" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="resourceSet.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d6a7-130">關閉並釋出這個 <see cref="T:System.Resources.ResourceSet" /> 所使用的任何資源。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-130">Closes and releases any resources used by this <see cref="T:System.Resources.ResourceSet" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d6a7-131">方法上的所有呼叫<xref:System.Resources.ResourceSet>之後呼叫這個方法可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-131">All calls to methods on the <xref:System.Resources.ResourceSet> after a call to this method might fail.</span></span>  
  
 <span data-ttu-id="9d6a7-132"><xref:System.Resources.ResourceSet.Close%2A> 可以安全地呼叫多次。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-132"><xref:System.Resources.ResourceSet.Close%2A> can be safely called multiple times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d6a7-133">目前的實作<xref:System.Resources.ResourceSet.Close%2A>呼叫<xref:System.Resources.ResourceSet.Dispose%2A>(`true`)。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-133">The current implementation of <xref:System.Resources.ResourceSet.Close%2A> calls <xref:System.Resources.ResourceSet.Dispose%2A> (`true`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d6a7-134">下列程式碼範例會使用<xref:System.Resources.ResourceSet.Close%2A>方法來釋放呼叫所使用的所有資源<xref:System.Resources.ResourceSet>執行個體。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-134">The following code example uses the <xref:System.Resources.ResourceSet.Close%2A> method to release all resources used by the calling <xref:System.Resources.ResourceSet> instance.</span></span>  
  
 [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d6a7-135">將目前 <see cref="T:System.Resources.ResourceSet" /> 執行個體所使用的資源釋出。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-135">Releases resources used by the current <see cref="T:System.Resources.ResourceSet" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="resourceSet.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d6a7-136">處置 <see cref="T:System.Resources.ResourceSet" /> 之目前執行個體所使用的資源 (除了記憶體之外)。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-136">Disposes of the resources (other than memory) used by the current instance of <see cref="T:System.Resources.ResourceSet" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d6a7-137"><xref:System.Resources.ResourceSet.Dispose%2A> 使用完畢時，請呼叫 <xref:System.Resources.ResourceSet>。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-137">Call <xref:System.Resources.ResourceSet.Dispose%2A> when you are finished using the <xref:System.Resources.ResourceSet>.</span></span> <span data-ttu-id="9d6a7-138"><xref:System.Resources.ResourceSet.Dispose%2A> 方法會將 <xref:System.Resources.ResourceSet> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-138">The <xref:System.Resources.ResourceSet.Dispose%2A> method leaves the <xref:System.Resources.ResourceSet> in an unusable state.</span></span> <span data-ttu-id="9d6a7-139">之後呼叫<xref:System.Resources.ResourceSet.Dispose%2A>，您必須釋放所有參考<xref:System.Resources.ResourceSet>讓它所佔用的記憶體可以回收記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-139">After calling <xref:System.Resources.ResourceSet.Dispose%2A>, you must release all references to the <xref:System.Resources.ResourceSet> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d6a7-140">目前的方法是實作<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-140">The current method is the implementation of <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9d6a7-141">這個實作會呼叫<xref:System.Resources.ResourceSet.Dispose%2A>(`true`)。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-141">This implementation calls <xref:System.Resources.ResourceSet.Dispose%2A> (`true`).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="resourceSet.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="9d6a7-142">表示是否應該明確關閉包含在目前執行個體中的物件。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-142">Indicates whether the objects contained in the current instance should be explicitly closed.</span></span></param>
        <summary><span data-ttu-id="9d6a7-143">將與目前執行個體相關聯的資源 (除了記憶體以外) 釋出，並於要求時關閉內部 Managed 物件。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-143">Releases resources (other than memory) associated with the current instance, closing internal managed objects if requested.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d6a7-144">如果`dispose`參數是`true`，目前的方法會釋放它以及與其相關聯的所有物件相關聯的所有資源。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-144">If the `dispose` parameter is `true`, the current method frees all the resources associated with it as well as with all objects associated with it.</span></span> <span data-ttu-id="9d6a7-145">如果`dispose`是`false`，僅配置給它，資源釋放目前的方法，並忽略任何與其相關聯的物件。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-145">If `dispose` is `false`, the current method frees only the resources allocated to it, and ignores any objects associated with it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultReader">
      <MemberSignature Language="C#" Value="public virtual Type GetDefaultReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDefaultReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetDefaultReader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultReader () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetDefaultReader();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultReader : unit -&gt; Type&#xA;override this.GetDefaultReader : unit -&gt; Type" Usage="resourceSet.GetDefaultReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d6a7-146">傳回這種 <see cref="T:System.Resources.ResourceSet" /> 的慣用資源讀取器類別。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-146">Returns the preferred resource reader class for this kind of <see cref="T:System.Resources.ResourceSet" />.</span></span></summary>
        <returns><span data-ttu-id="9d6a7-147">這種 <see cref="T:System.Resources.ResourceSet" /> 的慣用資源讀取器 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-147">The <see cref="T:System.Type" /> for the preferred resource reader for this kind of <see cref="T:System.Resources.ResourceSet" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9d6a7-148">衍生的類別<see cref="T:System.Resources.ResourceSet" />使用自己的資源讀取器應該覆寫<see cref="M:System.Resources.ResourceSet.GetDefaultReader" />，和<see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-148">Derived classes of <see cref="T:System.Resources.ResourceSet" /> using their own resource reader should override <see cref="M:System.Resources.ResourceSet.GetDefaultReader" />, and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />.</span></span></para></block>
        <altmember cref="T:System.Resources.IResourceReader" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultWriter">
      <MemberSignature Language="C#" Value="public virtual Type GetDefaultWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDefaultWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetDefaultWriter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultWriter () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetDefaultWriter();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultWriter : unit -&gt; Type&#xA;override this.GetDefaultWriter : unit -&gt; Type" Usage="resourceSet.GetDefaultWriter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d6a7-149">傳回這種 <see cref="T:System.Resources.ResourceSet" /> 的慣用資源寫入器類別。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-149">Returns the preferred resource writer class for this kind of <see cref="T:System.Resources.ResourceSet" />.</span></span></summary>
        <returns><span data-ttu-id="9d6a7-150">這種 <see cref="T:System.Resources.ResourceSet" /> 的慣用資源寫入器 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-150">The <see cref="T:System.Type" /> for the preferred resource writer for this kind of <see cref="T:System.Resources.ResourceSet" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9d6a7-151">衍生的類別<see cref="T:System.Resources.ResourceSet" />使用自己的資源讀取器應該覆寫<see cref="M:System.Resources.ResourceSet.GetDefaultReader" />，和<see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-151">Derived classes of <see cref="T:System.Resources.ResourceSet" /> using their own resource reader should override <see cref="M:System.Resources.ResourceSet.GetDefaultReader" />, and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />.</span></span></para></block>
        <altmember cref="T:System.Resources.IResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resourceSet.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d6a7-152">傳回可以逐一查看 <see cref="T:System.Resources.ResourceSet" /> 的 <see cref="T:System.Collections.IDictionaryEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-152">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that can iterate through the <see cref="T:System.Resources.ResourceSet" />.</span></span></summary>
        <returns><span data-ttu-id="9d6a7-153">這個 <see cref="T:System.Resources.ResourceSet" /> 的 <see cref="T:System.Collections.IDictionaryEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-153">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for this <see cref="T:System.Resources.ResourceSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d6a7-154">列舉值只允許讀取集合中的資料。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-154">Enumerators only allow reading the data in the collection.</span></span> <span data-ttu-id="9d6a7-155">列舉值無法用來修改基礎集合中。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-155">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="9d6a7-156">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-156">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="9d6a7-157"><xref:System.Collections.IEnumerator.Reset%2A> 也會將列舉值帶回至這個位置。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-157"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="9d6a7-158">在這個位置上，呼叫<xref:System.Collections.IEnumerator.Current%2A>會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-158">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="9d6a7-159">因此，在讀取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必須呼叫 <xref:System.Collections.IEnumerator.Current%2A> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-159">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="9d6a7-160"><xref:System.Collections.IEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A> 或 <xref:System.Collections.IEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-160"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="9d6a7-161"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.IEnumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-161"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="9d6a7-162">在超過集合的末端後，列舉值會放置在集合最後一個元素之後，並且呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A> 會傳回 `false`。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-162">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="9d6a7-163">如果上次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，則呼叫<xref:System.Collections.IEnumerator.Current%2A>會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-163">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="9d6a7-164">若要再次將 <xref:System.Collections.IEnumerator.Current%2A> 設定為集合的第一個元素，您可以在呼叫 <xref:System.Collections.IEnumerator.Reset%2A> 之後，接著呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-164">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="9d6a7-165">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-165">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="9d6a7-166">如果對集合進行變更，例如加入、 修改或刪除元素，列舉值，將永久失效，且下一個呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>或是<xref:System.Collections.IEnumerator.Reset%2A>就會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-166">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="9d6a7-167">如果在 <xref:System.Collections.IEnumerator.MoveNext%2A> 和 <xref:System.Collections.IEnumerator.Current%2A> 之間修改集合，<xref:System.Collections.IEnumerator.Current%2A> 將傳回所設定的元素，即使列舉值已經無效。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-167">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="9d6a7-168">您可以使用<xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=nameWithType>屬性來存取儲存在目前元素的值。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-168">You can use the <xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=nameWithType> property to access the value stored in the current element.</span></span> <span data-ttu-id="9d6a7-169">使用<xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType>屬性來存取目前的項目索引鍵。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-169">Use the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property to access the key of the current element.</span></span> <span data-ttu-id="9d6a7-170">使用<xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>屬性來存取目前項目的值。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-170">Use the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property to access the value of the current element.</span></span>  
  
 <span data-ttu-id="9d6a7-171">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-171">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="9d6a7-172">即使集合經過同步化，其他執行緒仍然可以修改集合中，這會導致擲回例外狀況的列舉值。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-172">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="9d6a7-173">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-173">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d6a7-174">下列範例示範如何建立<xref:System.Resources.ResourceSet>`rs`檔案`items.resources`。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-174">The following example demonstrates how to create a <xref:System.Resources.ResourceSet>`rs` for the file `items.resources`.</span></span> <span data-ttu-id="9d6a7-175">下一步<xref:System.Resources.ResourceSet.GetEnumerator%2A>方法用來建立<xref:System.Collections.IDictionaryEnumerator>如`rs`。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-175">Next, the <xref:System.Resources.ResourceSet.GetEnumerator%2A> method is used to create an <xref:System.Collections.IDictionaryEnumerator> for `rs`.</span></span> <span data-ttu-id="9d6a7-176"><xref:System.Collections.IDictionaryEnumerator>逐一查看`rs`，並顯示內容到主控台。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-176">The <xref:System.Collections.IDictionaryEnumerator> iterates through `rs` and displays the contents to the console.</span></span>  
  
 [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9d6a7-177">資源集已關閉或已處置。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-177">The resource set has been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d6a7-178">傳回具有指定名稱的資源物件。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-178">Returns a resource object with the specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : string -&gt; obj&#xA;override this.GetObject : string -&gt; obj" Usage="resourceSet.GetObject name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d6a7-179">要搜尋的資源名稱 (區分大小寫)。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-179">Case-sensitive name of the resource to search for.</span></span></param>
        <summary><span data-ttu-id="9d6a7-180">以指定的名稱搜尋資源物件。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-180">Searches for a resource object with the specified name.</span></span></summary>
        <returns><span data-ttu-id="9d6a7-181">要求的資源。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-181">The requested resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d6a7-182">資源物件的名稱會區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-182">The name of the resource object is case sensitive.</span></span> <span data-ttu-id="9d6a7-183">不區分大小寫的搜尋服務中，使用<xref:System.Resources.ResourceSet.GetObject%2A>。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-183">For a case-insensitive search, use <xref:System.Resources.ResourceSet.GetObject%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d6a7-184"><paramref name="name" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-184">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9d6a7-185">物件已關閉或已處置。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-185">The object has been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : string * bool -&gt; obj&#xA;override this.GetObject : string * bool -&gt; obj" Usage="resourceSet.GetObject (name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d6a7-186">要搜尋的資源名稱。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-186">Name of the resource to search for.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="9d6a7-187">表示指定名稱的大小寫是否應該忽略。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-187">Indicates whether the case of the specified name should be ignored.</span></span></param>
        <summary><span data-ttu-id="9d6a7-188">如果要求的話，以不區分大小寫的指定名稱搜尋資源物件。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-188">Searches for a resource object with the specified name in a case-insensitive manner, if requested.</span></span></summary>
        <returns><span data-ttu-id="9d6a7-189">要求的資源。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-189">The requested resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d6a7-190">如果值`ignoreCase`參數是`true`，名為 「 資源 」 資源相當於具有名稱 「 資源 」 的資源。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-190">If the value of the `ignoreCase` parameter is `true`, a resource with the name "Resource" is equivalent to the resource with the name "resource".</span></span> <span data-ttu-id="9d6a7-191">不過請注意，這個方法一律會執行不區分大小寫的字串比較使用<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-191">Note, however, that this method always performs case-insensitive string comparisons using <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9d6a7-192">優點是，這個方法所執行的不區分大小寫的字串比較的結果是不論文化特性的所有電腦上相同。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-192">The advantage is that results of case-insensitive string comparisons performed by this method are the same on all computers regardless of culture.</span></span> <span data-ttu-id="9d6a7-193">缺點是，結果不一致的所有文化特性的大小寫規則。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-193">The disadvantage is that the results are not consistent with the casing rules of all cultures.</span></span>  
  
 <span data-ttu-id="9d6a7-194">比方說，土耳其文的字母會有兩個字元 i： 一個加上一個點版本，一個沒有點。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-194">For example, the Turkish alphabet has two versions of the character I: one with a dot and one without a dot.</span></span> <span data-ttu-id="9d6a7-195">在土耳其文，字元我 (Unicode 0049) 會視為不同字元 ı (Unicode 0131) 的大寫版本。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-195">In Turkish, the character I (Unicode 0049) is considered the uppercase version of a different character ı (Unicode 0131).</span></span> <span data-ttu-id="9d6a7-196">I (Unicode 0069) 的字元會被視為另一個字元 İ (Unicode 0130) 的小寫版本。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-196">The character i (Unicode 0069) is considered the lowercase version of yet another character İ (Unicode 0130).</span></span> <span data-ttu-id="9d6a7-197">根據這些大小寫規則，不區分大小寫的字串比較的字元 (Unicode 0069) i 和 I (Unicode 0049) 應該會失敗"TR-TR"（在土耳其買的土耳其文） 的文化特性。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-197">According to these casing rules, a case-insensitive string comparison of the characters i (Unicode 0069) and I (Unicode 0049) should fail for the culture "tr-TR" (Turkish in Turkey).</span></span> <span data-ttu-id="9d6a7-198">使用`GetObject`方法`ignoreCase`設定為`true`，這項比較會成功。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-198">Using the `GetObject` method with `ignoreCase` set to `true`, this comparison succeeds.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d6a7-199"><paramref name="name" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-199">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9d6a7-200">物件已關閉或已處置。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-200">The object has been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetString">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9d6a7-201">傳回具有指定名稱的 <see cref="T:System.String" /> 資源。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-201">Returns a <see cref="T:System.String" /> resource with a specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetString : string -&gt; string&#xA;override this.GetString : string -&gt; string" Usage="resourceSet.GetString name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d6a7-202">要搜尋的資源名稱。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-202">Name of the resource to search for.</span></span></param>
        <summary><span data-ttu-id="9d6a7-203">以指定的名稱搜尋 <see cref="T:System.String" /> 資源。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-203">Searches for a <see cref="T:System.String" /> resource with the specified name.</span></span></summary>
        <returns><span data-ttu-id="9d6a7-204">如果值為 <see cref="T:System.String" />，則為資源的值。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-204">The value of a resource, if the value is a <see cref="T:System.String" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d6a7-205"><paramref name="name" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-205">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9d6a7-206">由 <paramref name="name" /> 所指定的資源不是 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-206">The resource specified by <paramref name="name" /> is not a <see cref="T:System.String" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9d6a7-207">物件已關閉或已處置。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-207">The object has been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String, ignoreCase As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member GetString : string * bool -&gt; string&#xA;override this.GetString : string * bool -&gt; string" Usage="resourceSet.GetString (name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d6a7-208">要搜尋的資源名稱。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-208">Name of the resource to search for.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="9d6a7-209">表示指定名稱的大小寫是否應該忽略。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-209">Indicates whether the case of the case of the specified name should be ignored.</span></span></param>
        <summary><span data-ttu-id="9d6a7-210">如果要求的話，以不區分大小寫的指定名稱搜尋 <see cref="T:System.String" /> 資源。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-210">Searches for a <see cref="T:System.String" /> resource with the specified name in a case-insensitive manner, if requested.</span></span></summary>
        <returns><span data-ttu-id="9d6a7-211">如果值為 <see cref="T:System.String" />，則為資源的值。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-211">The value of a resource, if the value is a <see cref="T:System.String" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d6a7-212">如果值`ignoreCase`參數是`true`，名為 「 資源 」 資源相當於具有名稱 「 資源 」 的資源。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-212">If the value of the `ignoreCase` parameter is `true`, a resource with the name "Resource" is equivalent to the resource with the name "resource".</span></span> <span data-ttu-id="9d6a7-213">不過請注意，這個方法一律會執行不區分大小寫的字串比較使用<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-213">Note, however, that this method always performs case-insensitive string comparisons using <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9d6a7-214">優點是，這個方法所執行的不區分大小寫的字串比較的結果是不論文化特性的所有電腦上相同。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-214">The advantage is that results of case-insensitive string comparisons performed by this method are the same on all computers regardless of culture.</span></span> <span data-ttu-id="9d6a7-215">缺點是，結果不一致的所有文化特性的大小寫規則。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-215">The disadvantage is that the results are not consistent with the casing rules of all cultures.</span></span>  
  
 <span data-ttu-id="9d6a7-216">比方說，土耳其文的字母會有兩個字元 i： 一個加上一個點版本，一個沒有點。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-216">For example, the Turkish alphabet has two versions of the character I: one with a dot and one without a dot.</span></span> <span data-ttu-id="9d6a7-217">在土耳其文，字元我 (Unicode 0049) 會視為不同字元 ı (Unicode 0131) 的大寫版本。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-217">In Turkish, the character I (Unicode 0049) is considered the uppercase version of a different character ı (Unicode 0131).</span></span> <span data-ttu-id="9d6a7-218">I (Unicode 0069) 的字元會被視為另一個字元 İ (Unicode 0130) 的小寫版本。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-218">The character i (Unicode 0069) is considered the lowercase version of yet another character İ (Unicode 0130).</span></span> <span data-ttu-id="9d6a7-219">根據這些大小寫規則，不區分大小寫的字串比較的字元 (Unicode 0069) i 和 I (Unicode 0049) 應該會失敗"TR-TR"（在土耳其買的土耳其文） 的文化特性。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-219">According to these casing rules, a case-insensitive string comparison of the characters i (Unicode 0069) and I (Unicode 0049) should fail for the culture "tr-TR" (Turkish in Turkey).</span></span> <span data-ttu-id="9d6a7-220">使用`GetString`方法`ignoreCase`設定為`true`，這項比較會成功。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-220">Using the `GetString` method with `ignoreCase` set to `true`, this comparison succeeds.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9d6a7-221"><paramref name="name" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-221">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9d6a7-222">由 <paramref name="name" /> 所指定的資源不是 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-222">The resource specified by <paramref name="name" /> is not a <see cref="T:System.String" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="9d6a7-223">物件已關閉或已處置。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-223">The object has been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reader">
      <MemberSignature Language="C#" Value="protected System.Resources.IResourceReader Reader;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Resources.IResourceReader Reader" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceSet.Reader" />
      <MemberSignature Language="VB.NET" Value="Protected Reader As IResourceReader " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Resources::IResourceReader ^ Reader;" />
      <MemberSignature Language="F#" Value="val mutable Reader : System.Resources.IResourceReader" Usage="System.Resources.ResourceSet.Reader" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d6a7-224">表示用來讀取資源的 <see cref="T:System.Resources.IResourceReader" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-224">Indicates the <see cref="T:System.Resources.IResourceReader" /> used to read the resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Resources.IResourceReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadResources">
      <MemberSignature Language="C#" Value="protected virtual void ReadResources ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReadResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.ReadResources" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReadResources ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReadResources();" />
      <MemberSignature Language="F#" Value="abstract member ReadResources : unit -&gt; unit&#xA;override this.ReadResources : unit -&gt; unit" Usage="resourceSet.ReadResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d6a7-225">讀取所有資源，並將它們儲存在 <see cref="F:System.Resources.ResourceSet.Table" /> 屬性指定的 <see cref="T:System.Collections.Hashtable" /> 中。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-225">Reads all the resources and stores them in a <see cref="T:System.Collections.Hashtable" /> indicated in the <see cref="F:System.Resources.ResourceSet.Table" /> property.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="9d6a7-226">衍生的類別<see cref="T:System.Resources.ResourceSet" />應該明確地呼叫<see cref="M:System.Resources.ResourceSet.ReadResources" />載入所有資源<see cref="T:System.Resources.IResourceReader" />成<see cref="F:System.Resources.ResourceSet.Table" />，通常在建構函式或延遲的第一個呼叫為<see cref="M:System.Resources.ResourceSet.GetString(System.String)" />或<see cref="M:System.Resources.ResourceSet.GetObject(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-226">Derived classes of <see cref="T:System.Resources.ResourceSet" /> should explicitly call <see cref="M:System.Resources.ResourceSet.ReadResources" /> to load all the resources from the <see cref="T:System.Resources.IResourceReader" /> into <see cref="F:System.Resources.ResourceSet.Table" />, generally either in the constructor or lazily on the first call to either <see cref="M:System.Resources.ResourceSet.GetString(System.String)" /> or <see cref="M:System.Resources.ResourceSet.GetObject(System.String)" />.</span></span> <span data-ttu-id="9d6a7-227">不過，如果您的資源集和 IResourceReader 已經有其他的相關資訊，有更有效率的方式載入幾選取資源，可以略過此步驟。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-227">However, if your resource set and IResourceReader already have information about each other and have a more efficient way to load just a few select resources, this step can be skipped.</span></span> <span data-ttu-id="9d6a7-228">若要降低工作集，撰寫您的資源集的方式，它會查詢您 IResourceReader 只您的應用程式所要求的資源值。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-228">To minimize working set, write your resource set in such a way that it queries your IResourceReader for only the resource values requested by your application.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d6a7-229">傳回 <see cref="T:System.Collections.IEnumerator" /> 物件，以避免與 <see langword="Dispose" /> 發生競爭情況。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-229">Returns an <see cref="T:System.Collections.IEnumerator" /> object to avoid a race condition with <see langword="Dispose" />.</span></span> <span data-ttu-id="9d6a7-230">這個成員並不適合直接從程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-230">This member is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="9d6a7-231">目前 <see cref="T:System.Resources.ResourceSet" /> 物件的列舉值。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-231">An enumerator for the current <see cref="T:System.Resources.ResourceSet" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable Table;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable Table" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceSet.Table" />
      <MemberSignature Language="VB.NET" Value="Protected Table As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ Table;" />
      <MemberSignature Language="F#" Value="val mutable Table : System.Collections.Hashtable" Usage="System.Resources.ResourceSet.Table" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9d6a7-232">用來儲存資源的 <see cref="T:System.Collections.Hashtable" />。</span><span class="sxs-lookup"><span data-stu-id="9d6a7-232">The <see cref="T:System.Collections.Hashtable" /> in which the resources are stored.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.Hashtable" />
      </Docs>
    </Member>
  </Members>
</Type>