<Type Name="SessionSecurityTokenHandler" FullName="System.IdentityModel.Tokens.SessionSecurityTokenHandler">
  <TypeSignature Language="C#" Value="public class SessionSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionSecurityTokenHandler extends System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityTokenHandler&#xA;Inherits SecurityTokenHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityTokenHandler : System::IdentityModel::Tokens::SecurityTokenHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityTokenHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a2013-101">處理型別為 <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> 之安全性權杖的 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-101">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> that processes security tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-102"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>類別序列化、 還原序列化，並驗證工作階段權杖。</span><span class="sxs-lookup"><span data-stu-id="a2013-102">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes, deserializes, and validates session tokens.</span></span> <span data-ttu-id="a2013-103">工作階段權杖是權杖的型別<xref:System.IdentityModel.Tokens.SessionSecurityToken>。</span><span class="sxs-lookup"><span data-stu-id="a2013-103">Session tokens are tokens of type <xref:System.IdentityModel.Tokens.SessionSecurityToken>.</span></span> <span data-ttu-id="a2013-104"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>類別會序列化的權杖與 cookie 格式。</span><span class="sxs-lookup"><span data-stu-id="a2013-104">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes the tokens to and from cookie format.</span></span> <span data-ttu-id="a2013-105">根據預設，此類別序列化語彙基元 Ws-secure Conversation Feb2005 或 Ws-secure Conversation 1.3`<wsc:SecurityContextToken>`項目。</span><span class="sxs-lookup"><span data-stu-id="a2013-105">By default, the class serializes tokens into WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elements.</span></span> <span data-ttu-id="a2013-106">工作階段權杖由<xref:System.IdentityModel.Services.WSFederationAuthenticationModule>(WSFAM) 和<xref:System.IdentityModel.Services.SessionAuthenticationModule>(SAM) 來儲存資訊的工作階段中，這主要是<xref:System.Security.Claims.ClaimsPrincipal>與已驗證的使用者和工作階段的開始日和到期時間相關聯。</span><span class="sxs-lookup"><span data-stu-id="a2013-106">Session tokens are used by the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> (WSFAM) and the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) to store information about a session, this is primarily the <xref:System.Security.Claims.ClaimsPrincipal> associated with the authenticated user and the session start and expiration times.</span></span>  
  
 <span data-ttu-id="a2013-107">在被動的情況下，<xref:System.IdentityModel.Services.WSFederationAuthenticationModule>呼叫<xref:System.IdentityModel.Services.SessionAuthenticationModule>(SAM) 從要建立從工作階段權杖驗證管線<xref:System.Security.Claims.ClaimsPrincipal>，代表已驗證的使用者。</span><span class="sxs-lookup"><span data-stu-id="a2013-107">In passive scenarios, the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> calls into the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) from the authentication pipeline to create a session token from the <xref:System.Security.Claims.ClaimsPrincipal> that represents the authenticated user.</span></span> <span data-ttu-id="a2013-108">SAM 會使用其設定<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>才能建立語彙基元並將它序列化成 cookie （和還原序列化的後續要求的 cookie 語彙基元）。</span><span class="sxs-lookup"><span data-stu-id="a2013-108">The SAM uses its configured <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> to create the token and to serialize it into a cookie (and to deserialize the token from a cookie on subsequent requests).</span></span> <span data-ttu-id="a2013-109">SAM 會使用其設定的執行個體<xref:System.IdentityModel.Services.CookieHandler>類別來寫入 HTTP 回應傳回的 cookie。</span><span class="sxs-lookup"><span data-stu-id="a2013-109">The SAM uses an instance of its configured <xref:System.IdentityModel.Services.CookieHandler> class to write the cookie back to the HTTP Response.</span></span> <span data-ttu-id="a2013-110">此 cookie 則傳回給用戶端，並在後續要求 cookie，而不是反覆存取進行重新取得安全性權杖的身分識別提供者，可以呈現用戶端。</span><span class="sxs-lookup"><span data-stu-id="a2013-110">This cookie is then returned to the client and on subsequent requests the client can present the cookie rather than making a round trip back to the identity provider to re-obtain a security token.</span></span> <span data-ttu-id="a2013-111">如需有關如何使用 WIF 工作階段的運作方式的詳細資訊，請參閱[WIF 工作階段管理](~/docs/framework/security/wif-session-management.md)。</span><span class="sxs-lookup"><span data-stu-id="a2013-111">For more information about how sessions operate with WIF, see [WIF Session Management](~/docs/framework/security/wif-session-management.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2013-112">\<SecurityTokenHandlers > 組態項目可以用來指定<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>有責任保護應用程式的工作階段。</span><span class="sxs-lookup"><span data-stu-id="a2013-112">The \<securityTokenHandlers> configuration element can be used to specify a <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that has the responsibility for securing the application’s sessions.</span></span> <span data-ttu-id="a2013-113">開發人員時應謹慎小心變更此組態設定，因為設定不正確的系統可能會導致應用程式的洩露。</span><span class="sxs-lookup"><span data-stu-id="a2013-113">Developers should use caution when changing this configuration setting, as a misconfigured system could result in application compromise.</span></span> <span data-ttu-id="a2013-114">例如，指定 衍生的超連結"http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx"\t"_blank"<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>和傳遞空轉換 (CookieTransform) 集合的基底，會導致將序列化為未受保護的 cookie 的使用者身分識別。</span><span class="sxs-lookup"><span data-stu-id="a2013-114">For example, specifying a derived  HYPERLINK "http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx" \t "_blank" <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and passing an empty Transforms (CookieTransform) collection to the base, would result in the users identity being serialized into a cookie that was not protected.</span></span> <span data-ttu-id="a2013-115">這可能會允許攻擊者修改的身分識別，因此會變更存取權限。</span><span class="sxs-lookup"><span data-stu-id="a2013-115">This could allow an attacker to modify the identity and therefore change access privileges.</span></span>  
  
 <span data-ttu-id="a2013-116">如果工作階段權杖是以參考模式，也就是其<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType>屬性是`true`，權杖處理常式只會序列化內容的工作階段權杖需要重新產生其金鑰中的工作階段<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>。</span><span class="sxs-lookup"><span data-stu-id="a2013-116">If the session token is in reference mode, that is, its <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `true`, the session token handler only serializes properties of the session token that are needed to regenerate its key in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span></span> <span data-ttu-id="a2013-117">在預設情況下，<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>類別用來代表快取索引鍵，且權杖處理常式寫入<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType>和<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType>語彙基元的屬性。</span><span class="sxs-lookup"><span data-stu-id="a2013-117">In the default case, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> class is used to represent cache keys, and the token handler writes the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> and <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> properties of the token.</span></span> <span data-ttu-id="a2013-118">如果工作階段權杖是不能在參考的模式，也就是<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType>屬性是`false`，接著，除了先前所述的屬性，此處理常式會叫用<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A>上序列化所來自的語彙基元和存放區的位元組陣列的方法cookie 也中產生的值。</span><span class="sxs-lookup"><span data-stu-id="a2013-118">If the session token is not in reference mode, that is, the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `false`, then, in addition to the properties mentioned previously, the handler invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method on a byte array serialized from the token and stores the resulting value in the cookie as well.</span></span> <span data-ttu-id="a2013-119">如需有關如何序列化權杖的詳細資訊，請參閱<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="a2013-119">For more details about how the token is serialized, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a2013-120"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A>屬性會取得套用到工作階段的轉換清單中的語彙基元<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a2013-120">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property gets the list of transforms that are applied to the session token in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.</span></span> <span data-ttu-id="a2013-121">所有的轉換是衍生自<xref:System.IdentityModel.CookieTransform>類別。</span><span class="sxs-lookup"><span data-stu-id="a2013-121">All transforms derive from the <xref:System.IdentityModel.CookieTransform> class.</span></span> <span data-ttu-id="a2013-122">在預設案例中<xref:System.IdentityModel.DeflateCookieTransform>和<xref:System.IdentityModel.ProtectedDataCookieTransform>會套用。</span><span class="sxs-lookup"><span data-stu-id="a2013-122">In the default case the <xref:System.IdentityModel.DeflateCookieTransform> and the <xref:System.IdentityModel.ProtectedDataCookieTransform> are applied.</span></span> <span data-ttu-id="a2013-123"><xref:System.IdentityModel.ProtectedDataCookieTransform>使用資料保護 API (DPAPI) 來保護 cookie 資料。</span><span class="sxs-lookup"><span data-stu-id="a2013-123">The <xref:System.IdentityModel.ProtectedDataCookieTransform> uses the Data Protection API (DPAPI) to protect the cookie material.</span></span> <span data-ttu-id="a2013-124">DPAPI 會使用特定電腦上執行其保護演算法的金鑰。</span><span class="sxs-lookup"><span data-stu-id="a2013-124">DPAPI uses a key that is specific to the computer on which it is running in its protection algorithms.</span></span> <span data-ttu-id="a2013-125">基於這個理由，預設工作階段權杖處理常式不可以在 Web 伺服陣列案例因為在這種情況下，一部電腦上寫入的語彙基元可能需要另一部電腦上讀取。</span><span class="sxs-lookup"><span data-stu-id="a2013-125">For this reason, the default session token handler is not usable in Web farm scenarios because, in such scenarios, tokens written on one computer may need to be read on another computer.</span></span> <span data-ttu-id="a2013-126">如果要避免這個問題，您可以使用許多策略。</span><span class="sxs-lookup"><span data-stu-id="a2013-126">You can use many strategies to circumvent this issue.</span></span> <span data-ttu-id="a2013-127">例如，您可以：</span><span class="sxs-lookup"><span data-stu-id="a2013-127">For example, you can:</span></span>  
  
-   <span data-ttu-id="a2013-128">取代預設<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>與<xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>。</span><span class="sxs-lookup"><span data-stu-id="a2013-128">Replace the default <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> with the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>.</span></span> <span data-ttu-id="a2013-129"><xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>可讓您指定簽章和加密金鑰，在 ASP.NET`<machineKey>`組態檔中的項目。</span><span class="sxs-lookup"><span data-stu-id="a2013-129">The <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> enables you to specify signing and encryption keys under the ASP.NET `<machineKey>` element in the configuration file.</span></span>  
  
-   <span data-ttu-id="a2013-130">提供的處理常式<xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType>global.asax.cs 檔案和取代預設工作階段中的事件語彙基元處理常式的執行個體和<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>轉換清單包含具有<xref:System.IdentityModel.RsaSignatureCookieTransform>和<xref:System.IdentityModel.RsaEncryptionCookieTransform>。</span><span class="sxs-lookup"><span data-stu-id="a2013-130">Provide a handler for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> event in the global.asax.cs file and replace the default session token handler with an instance of <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that has a list of transforms that includes the <xref:System.IdentityModel.RsaSignatureCookieTransform> and the <xref:System.IdentityModel.RsaEncryptionCookieTransform>.</span></span> <span data-ttu-id="a2013-131">您可以叫用的建構函式會採用的轉換清單的其中一個來建立新的執行個體。</span><span class="sxs-lookup"><span data-stu-id="a2013-131">You can create the new instance by invoking one of the constructors that takes a list of transforms.</span></span>  
  
-   <span data-ttu-id="a2013-132">衍生的自訂轉換從<xref:System.IdentityModel.CookieTransform>基底類別，並使用上述方法，將它包含在套用轉換清單。</span><span class="sxs-lookup"><span data-stu-id="a2013-132">Derive a custom transform from the <xref:System.IdentityModel.CookieTransform> base class and use the method above to include it in the list of transforms to be applied.</span></span>  
  
-   <span data-ttu-id="a2013-133">衍生的自訂語彙基元處理常式從<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>並實作您自己的機制。</span><span class="sxs-lookup"><span data-stu-id="a2013-133">Derive a custom token handler from <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and implement your own mechanism.</span></span>  
  
 <span data-ttu-id="a2013-134">如需在 Web 伺服陣列案例中使用工作階段的詳細資訊，請參閱[WIF 和 Web 伺服陣列](~/docs/framework/security/wif-and-web-farms.md)。</span><span class="sxs-lookup"><span data-stu-id="a2013-134">For more information about using sessions in Web farm scenarios, see [WIF and Web Farms](~/docs/framework/security/wif-and-web-farms.md).</span></span>  
  
 <span data-ttu-id="a2013-135"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>隨附於預設權杖處理常式集合中; 不過，您可以自訂工作階段權杖處理常式取代藉由先指定[&lt;移除&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md)項目底下[ &lt;securityTokenHandlers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md)項目移除集合，然後將加入您的自訂權杖處理常式使用的預設處理常式[&lt;新增&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md)項目。</span><span class="sxs-lookup"><span data-stu-id="a2013-135">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> is included in the default token handler collection; however, you can replace it with a custom session token handler by first specifying a [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md) element under the [&lt;securityTokenHandlers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) element to remove the default handler from the collection and then adding your custom token handler using the [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) element.</span></span> <span data-ttu-id="a2013-136">根據預設，您可以指定預設權杖存留期包括[ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)項目底下`<add>`項目。</span><span class="sxs-lookup"><span data-stu-id="a2013-136">By default, you can specify the default token lifetime by including the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element under the `<add>` element.</span></span> <span data-ttu-id="a2013-137">您可以設計自訂的語彙基元處理常式才會在自訂組態項目`<add>`藉由覆寫的項目<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A>方法，以提供邏輯以處理它們。</span><span class="sxs-lookup"><span data-stu-id="a2013-137">You can design a custom token handler to take custom configuration elements under the `<add>` element by overriding the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method to provide the logic to process them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2013-138">下列 XML 會說明如何以取代預設工作階段安全性權杖處理常式權杖處理常式集合中的執行個體<xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>組態中的類別。</span><span class="sxs-lookup"><span data-stu-id="a2013-138">The following XML shows how to replace the default session security token handler in a token handler collection with an instance of the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> class in configuration.</span></span>  
  
```xml  
<securityTokenHandlers>  
  <remove type="System.IdentityModel.Tokens.SessionSecurityTokenHandler, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />  
  <add type="System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />  
</securityTokenHandlers>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />
    <altmember cref="T:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.CookieTransform" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2013-139">初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a2013-139">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2013-140">初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> 類別的新執行個體，這個執行個體使用預設 cookie 轉換和權杖存留期。</span><span class="sxs-lookup"><span data-stu-id="a2013-140">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the default cookie transforms and token lifetime.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-141"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A>和<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A>屬性會初始化為<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>和<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>。</span><span class="sxs-lookup"><span data-stu-id="a2013-141">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> properties are initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; transforms);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transforms As ReadOnlyCollection(Of CookieTransform))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" />
      </Parameters>
      <Docs>
        <param name="transforms"><span data-ttu-id="a2013-142">編碼或解碼 cookie 時要套用的轉換。</span><span class="sxs-lookup"><span data-stu-id="a2013-142">The transforms to apply when encoding or decoding the cookie.</span></span> <span data-ttu-id="a2013-143">設定 <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="a2013-143">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property.</span></span></param>
        <summary><span data-ttu-id="a2013-144">初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> 類別的新執行個體，這個執行個體使用指定的 Cookie 轉換。</span><span class="sxs-lookup"><span data-stu-id="a2013-144">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the specified cookie transforms.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-145"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> 屬性會初始化為 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>。</span><span class="sxs-lookup"><span data-stu-id="a2013-145">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2013-146"><paramref name="transforms" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-146"><paramref name="transforms" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; transforms, TimeSpan tokenLifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; transforms, valuetype System.TimeSpan tokenLifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transforms As ReadOnlyCollection(Of CookieTransform), tokenLifetime As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms, TimeSpan tokenLifetime);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" />
        <Parameter Name="tokenLifetime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="transforms"><span data-ttu-id="a2013-147">編碼或解碼 cookie 時要套用的轉換。</span><span class="sxs-lookup"><span data-stu-id="a2013-147">The transforms to apply when encoding or decoding the cookie.</span></span> <span data-ttu-id="a2013-148">設定 <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="a2013-148">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property.</span></span></param>
        <param name="tokenLifetime"><span data-ttu-id="a2013-149">預設權杖存留期。</span><span class="sxs-lookup"><span data-stu-id="a2013-149">The default lifetime for a token.</span></span> <span data-ttu-id="a2013-150">設定 <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="a2013-150">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /> property.</span></span></param>
        <summary><span data-ttu-id="a2013-151">初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> 類別的新執行個體，這個執行個體使用指定的 cookie 轉換和權杖存留期。</span><span class="sxs-lookup"><span data-stu-id="a2013-151">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the specified cookie transforms and token lifetime.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2013-152"><paramref name="transforms" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-152"><paramref name="transforms" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2013-153"><paramref name="tokenLifetime" /> 小於或等於 <see cref="F:System.TimeSpan.Zero" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-153"><paramref name="tokenLifetime" /> is less than or equal to <see cref="F:System.TimeSpan.Zero" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyTransforms">
      <MemberSignature Language="C#" Value="protected virtual byte[] ApplyTransforms (byte[] cookie, bool outbound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ApplyTransforms(unsigned int8[] cookie, bool outbound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ApplyTransforms (cookie As Byte(), outbound As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ApplyTransforms(cli::array &lt;System::Byte&gt; ^ cookie, bool outbound);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Byte[]" />
        <Parameter Name="outbound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cookie"><span data-ttu-id="a2013-154">將轉換的 Cookie。</span><span class="sxs-lookup"><span data-stu-id="a2013-154">The cookie that will be transformed.</span></span></param>
        <param name="outbound">
          <span data-ttu-id="a2013-155">如果 cookie 應該要編碼，則為 <see langword="true" />，如果 cookie 應該要解碼，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-155"><see langword="true" /> if the cookie should be encoded; <see langword="false" /> if the cookie should be decoded.</span></span></param>
        <summary><span data-ttu-id="a2013-156">套用 <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> 屬性所指定的轉換，對指定的 Cookie 進行編碼或解碼。</span><span class="sxs-lookup"><span data-stu-id="a2013-156">Applies the transforms specified by the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property to either encode or decode the specified cookie.</span></span></summary>
        <returns><span data-ttu-id="a2013-157">編碼或解碼的 cookie。</span><span class="sxs-lookup"><span data-stu-id="a2013-157">The encoded or decoded cookie.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-158">當 cookie 的編碼方式轉換中的出現順序套用<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a2013-158">When encoding a cookie transforms are applied in the order in which they appear in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property.</span></span> <span data-ttu-id="a2013-159">當解碼 cookie，它們會套用順序相反。</span><span class="sxs-lookup"><span data-stu-id="a2013-159">When decoding a cookie, they are applied in the reverse order.</span></span>  
  
 <span data-ttu-id="a2013-160">從呼叫<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A>和<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A>方法來編碼和解碼 cookie 資料。</span><span class="sxs-lookup"><span data-stu-id="a2013-160">Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to encode and decode the cookie material.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a2013-161"><see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> 屬性為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-161">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public override bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a2013-162">連入之 <see cref="T:System.Xml.XmlReader" /> 上的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-162">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span></span> <span data-ttu-id="a2013-163">讀取器應位於 <see langword="&lt;wsc:SecurityContextToken&gt;" /> 項目上。</span><span class="sxs-lookup"><span data-stu-id="a2013-163">The reader should be positioned at a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element.</span></span></param>
        <summary><span data-ttu-id="a2013-164">傳回值，指出讀取器是否位在 <see langword="&lt;wsc:SecurityContextToken&gt;" /> 項目。</span><span class="sxs-lookup"><span data-stu-id="a2013-164">Returns a value that indicates whether the reader is positioned at a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element.</span></span></summary>
        <returns>
          <span data-ttu-id="a2013-165">如果讀取器指向 <see langword="true" />，則為 <see langword="&lt;wsc:SecurityContextToken&gt;" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-165"><see langword="true" /> if the reader points to a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2013-166"><paramref name="reader" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-166"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public override bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2013-167">取得值，指出這個處理常式是否支援驗證 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 型別的權杖。</span><span class="sxs-lookup"><span data-stu-id="a2013-167">Gets a value that indicates whether this handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></summary>
        <value>
          <span data-ttu-id="a2013-168">如果這個處理常式支援型別為 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 的權杖的驗證，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-168"><see langword="true" /> if the handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a2013-169">一定是 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-169">Always <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public override bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2013-170">取得值，指出這個處理常式是否可寫入 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 型別的權杖。</span><span class="sxs-lookup"><span data-stu-id="a2013-170">Gets a value that indicates whether this handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></summary>
        <value>
          <span data-ttu-id="a2013-171">如果這個處理常式可以撰寫型別為 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 的權杖，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-171"><see langword="true" /> if the handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a2013-172">一定是 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-172">Always <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieElementName">
      <MemberSignature Language="C#" Value="public virtual string CookieElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieElementName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CookieElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CookieElementName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2013-173">取得 Cookie 項目的名稱。</span><span class="sxs-lookup"><span data-stu-id="a2013-173">Gets the name for the cookie element.</span></span></summary>
        <value><span data-ttu-id="a2013-174">Cookie 項目的名稱。</span><span class="sxs-lookup"><span data-stu-id="a2013-174">The name for the cookie element.</span></span> <span data-ttu-id="a2013-175">預設項目名稱是"Cookie"。</span><span class="sxs-lookup"><span data-stu-id="a2013-175">The default element name is "Cookie".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-176">這個屬性用在<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A>和<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A>方法來判斷的編碼語彙基元資料應該寫入或讀取的項目。</span><span class="sxs-lookup"><span data-stu-id="a2013-176">This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the element under which the encoded token material should be written or read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </Docs>
    </Member>
    <Member MemberName="CookieNamespace">
      <MemberSignature Language="C#" Value="public virtual string CookieNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieNamespace" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CookieNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CookieNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2013-177">取得 Cookie 項目的命名空間。</span><span class="sxs-lookup"><span data-stu-id="a2013-177">Gets the namespace for the cookie element.</span></span></summary>
        <value><span data-ttu-id="a2013-178">Cookie 項目的命名空間。</span><span class="sxs-lookup"><span data-stu-id="a2013-178">The namespace for the cookie element.</span></span> <span data-ttu-id="a2013-179">預設命名空間是"http://schemas.microsoft.com/ws/2006/05/security"。</span><span class="sxs-lookup"><span data-stu-id="a2013-179">The default namespace is "http://schemas.microsoft.com/ws/2006/05/security".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-180">這個屬性用在<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A>和<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A>方法來判斷的編碼語彙基元資料應該寫入或讀取的項目的命名空間。</span><span class="sxs-lookup"><span data-stu-id="a2013-180">This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the namespace of the element under which the encoded token material should be written or read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSessionSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken (System.Security.Claims.ClaimsPrincipal principal, string context, string endpointId, DateTime validFrom, DateTime validTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken(class System.Security.Claims.ClaimsPrincipal principal, string context, string endpointId, valuetype System.DateTime validFrom, valuetype System.DateTime validTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSessionSecurityToken (principal As ClaimsPrincipal, context As String, endpointId As String, validFrom As DateTime, validTo As DateTime) As SessionSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SessionSecurityToken ^ CreateSessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ principal, System::String ^ context, System::String ^ endpointId, DateTime validFrom, DateTime validTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SessionSecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.DateTime" />
        <Parameter Name="validTo" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="a2013-181">宣告主體。</span><span class="sxs-lookup"><span data-stu-id="a2013-181">The claims principal.</span></span></param>
        <param name="context"><span data-ttu-id="a2013-182">呼叫端定義的內容字串。</span><span class="sxs-lookup"><span data-stu-id="a2013-182">A caller-defined context string.</span></span></param>
        <param name="endpointId"><span data-ttu-id="a2013-183">語彙基元的範圍結束點的識別項。</span><span class="sxs-lookup"><span data-stu-id="a2013-183">The identifier of the endpoint to which the token is scoped.</span></span></param>
        <param name="validFrom"><span data-ttu-id="a2013-184">瞬間，到此瞬間權杖即變成有效。</span><span class="sxs-lookup"><span data-stu-id="a2013-184">The time instant at which the token becomes valid.</span></span></param>
        <param name="validTo"><span data-ttu-id="a2013-185">瞬間，超過此瞬間之後權杖不再有效。</span><span class="sxs-lookup"><span data-stu-id="a2013-185">The time instant after which the token is no longer valid.</span></span></param>
        <summary><span data-ttu-id="a2013-186">根據指定的宣告主體與權杖的有效時間範圍，建立 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-186">Creates a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> based on the specified claims principal and time range during which the token is valid.</span></span></summary>
        <returns><span data-ttu-id="a2013-187">已建立的工作階段安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="a2013-187">The session security token that was created.</span></span> <span data-ttu-id="a2013-188">新工作階段權杖上的屬性是根據指定的參數所設定。</span><span class="sxs-lookup"><span data-stu-id="a2013-188">The properties on the new session token are set according to the specified parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2013-189"><paramref name="principal" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-189"><paramref name="principal" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a2013-190"><see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> 屬性為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-190">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken CreateToken(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateToken (tokenDescriptor As SecurityTokenDescriptor) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ CreateToken(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor"><span data-ttu-id="a2013-191">權杖描述元，要從其中建立權杖。</span><span class="sxs-lookup"><span data-stu-id="a2013-191">The token descriptor from which to create the token.</span></span></param>
        <summary><span data-ttu-id="a2013-192">以指定的權杖描述元為基礎建立安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="a2013-192">Creates a security token based on the specified token descriptor.</span></span></summary>
        <returns><span data-ttu-id="a2013-193">已建立的安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="a2013-193">The security token that was created.</span></span> <span data-ttu-id="a2013-194">這將會是 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="a2013-194">This will be an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-195">建立並傳回工作階段安全性權杖，權杖的描述元中使用下列屬性： <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType>，和<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a2013-195">Creates and returns a session security token by using the following properties in the token descriptor: <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType>, and <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a2013-196">如果<xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType>屬性設定`true`上所指定的語彙基元處理常式組態<xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A>屬性，啟動程序的內容從建立<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType>屬性並儲存在工作階段權杖。</span><span class="sxs-lookup"><span data-stu-id="a2013-196">If the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType> property is set `true` on the token handler configuration specified by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property, the bootstrap context is created from the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType> property and is saved in the session token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2013-197"><paramref name="tokenDescriptor" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-197"><paramref name="tokenDescriptor" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a2013-198"><see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> 屬性為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-198">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCookieTransforms">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; DefaultCookieTransforms;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; DefaultCookieTransforms" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultCookieTransforms As ReadOnlyCollection(Of CookieTransform) " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ DefaultCookieTransforms;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2013-199">唯讀集合，包含套用至 Cookie 的預設轉換清單：<see cref="T:System.IdentityModel.DeflateCookieTransform" /> 和 <see cref="T:System.IdentityModel.ProtectedDataCookieTransform" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-199">A read only collection that contains the list of default transforms to be applied to cookies, the <see cref="T:System.IdentityModel.DeflateCookieTransform" /> and the <see cref="T:System.IdentityModel.ProtectedDataCookieTransform" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultLifetime">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan DefaultLifetime;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan DefaultLifetime" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultLifetime As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan DefaultLifetime;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2013-200">為 Cookie 指定預設存留期的常數 (十小時)。</span><span class="sxs-lookup"><span data-stu-id="a2013-200">A constant that specifies the default lifetime for cookies, ten hours.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTokenLifetime">
      <MemberSignature Language="C#" Value="public static TimeSpan DefaultTokenLifetime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan DefaultTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan DefaultTokenLifetime { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2013-201">取得預設權杖存留期。</span><span class="sxs-lookup"><span data-stu-id="a2013-201">Gets the default token lifetime.</span></span></summary>
        <value><span data-ttu-id="a2013-202">預設權杖存留期。</span><span class="sxs-lookup"><span data-stu-id="a2013-202">The default token lifetime.</span></span> <span data-ttu-id="a2013-203">一定是 <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-203">Always <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public override string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2013-204">取得此處理常式可處理的語彙基元型別的語彙基元型別 URI。</span><span class="sxs-lookup"><span data-stu-id="a2013-204">Gets the token type URIs for the token types that can be processed by this handler.</span></span></summary>
        <returns><span data-ttu-id="a2013-205">可由這個處理常式處理的權杖型別的權杖型別識別項 URI。</span><span class="sxs-lookup"><span data-stu-id="a2013-205">The token type identifier URIs for token types that can be processed by this handler.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-206">支援下列類型的 Uri:"http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation"，"http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct」，和 「http://schemas.xmlsoap.org/ws/2005/02/sc/sct"。</span><span class="sxs-lookup"><span data-stu-id="a2013-206">The following type URIs are supported: "http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct", and "http://schemas.xmlsoap.org/ws/2005/02/sc/sct".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList customConfigElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadCustomConfiguration (customConfigElements As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadCustomConfiguration(System::Xml::XmlNodeList ^ customConfigElements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customConfigElements" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="customConfigElements"><span data-ttu-id="a2013-207">自訂組態項目。</span><span class="sxs-lookup"><span data-stu-id="a2013-207">The custom configuration elements.</span></span></param>
        <summary><span data-ttu-id="a2013-208">從 XML 載入自訂組態。</span><span class="sxs-lookup"><span data-stu-id="a2013-208">Loads custom configuration from XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-209">設定基礎結構，來初始化呼叫<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>執行個體。</span><span class="sxs-lookup"><span data-stu-id="a2013-209">Called by the configuration infrastructure to initialize the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> instance.</span></span> <span data-ttu-id="a2013-210">初始化<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A>屬性從`lifetime`屬性[ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)組態檔中的項目。</span><span class="sxs-lookup"><span data-stu-id="a2013-210">Initializes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property from the `lifetime` attribute of the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2013-211"><paramref name="customConfigElements" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-211"><paramref name="customConfigElements" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a2013-212"><paramref name="customConfigElements" /> 指定的組態無效。</span><span class="sxs-lookup"><span data-stu-id="a2013-212">The configuration specified by <paramref name="customConfigElements" /> is not valid.</span></span> <span data-ttu-id="a2013-213">例如，它不包含 <see langword="&lt;sessionTokenRequirement&gt;" /> 項目，它包含一個以上的 <see langword="&lt;sessionTokenRequirement&gt;" /> 項目，不能從 <see langword="lifetime" /> 屬性讀取有效的 <see cref="T:System.TimeSpan" /> 值，或 <see langword="lifetime" /> 屬性指定了小於 <see cref="F:System.TimeSpan.Zero" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="a2013-213">For example, it does not contain a <see langword="&lt;sessionTokenRequirement&gt;" /> element, it contains more than one <see langword="&lt;sessionTokenRequirement&gt;" /> element, a valid <see cref="T:System.TimeSpan" /> value cannot be read from the <see langword="lifetime" /> attribute, or the <see langword="lifetime" /> attribute specifies a value that is less than <see cref="F:System.TimeSpan.Zero" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2013-214">讀取 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-214">Reads a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-215">預設實作會還原序列化的語彙基元從 Ws-secure Conversation Feb2005 或 Ws-secure Conversation 1.3`<wsc:SecurityContextToken>`項目。</span><span class="sxs-lookup"><span data-stu-id="a2013-215">The default implementation deserializes the token from either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a2013-216">連入之 <see cref="T:System.Xml.XmlReader" /> 上的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-216">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span></span></param>
        <summary><span data-ttu-id="a2013-217">使用指定的 XML 讀取器讀取 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-217">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> using the specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="a2013-218">已讀取的工作階段安全性權杖，這是 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="a2013-218">The session security token that was read, an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-219">讀取器必須定位在 Ws-secure Conversation Feb2005 或 Ws-secure Conversation 1.3`<wsc:SecurityContextToken>`項目。</span><span class="sxs-lookup"><span data-stu-id="a2013-219">The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 <span data-ttu-id="a2013-220">預設實作會叫用<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType>方法使用預設的語彙基元解析程式。</span><span class="sxs-lookup"><span data-stu-id="a2013-220">The default implementation invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> method using a default token resolver.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2013-221"><paramref name="reader" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-221"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><span data-ttu-id="a2013-222">讀取器未放置在<see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />，或<see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />無法讀取。</span><span class="sxs-lookup"><span data-stu-id="a2013-222">The reader is not positioned at a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> or the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> cannot be read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (byte[] token, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(unsigned int8[] token, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (token As Byte(), tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(cli::array &lt;System::Byte&gt; ^ token, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Byte[]" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="a2013-223">包含權杖的位元組資料流。</span><span class="sxs-lookup"><span data-stu-id="a2013-223">The stream of bytes that contains the token.</span></span></param>
        <param name="tokenResolver"><span data-ttu-id="a2013-224">要使用的權杖解析程式。</span><span class="sxs-lookup"><span data-stu-id="a2013-224">The token resolver to use.</span></span></param>
        <summary><span data-ttu-id="a2013-225">使用指定的語彙基元解析程式從位元組資料流讀取<see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-225">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> from a stream of bytes by using the specified token resolver.</span></span></summary>
        <returns><span data-ttu-id="a2013-226">已讀取的 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-226">The <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> that was read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-227">預設實作會建立<xref:System.Xml.XmlDictionaryReader>透過語彙基元，並叫用<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="a2013-227">The default implementation creates an <xref:System.Xml.XmlDictionaryReader> over the token and invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a2013-228">連入之 <see cref="T:System.Xml.XmlReader" /> 上的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-228">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span></span></param>
        <param name="tokenResolver"><span data-ttu-id="a2013-229">可用來解析 <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> 的 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-229">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that can used to resolve the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></param>
        <summary><span data-ttu-id="a2013-230">使用指定的 XML 讀取器和權杖解析程式，讀取 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-230">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> using the specified XML reader and token resolver.</span></span></summary>
        <returns><span data-ttu-id="a2013-231">已讀取的工作階段安全性權杖，這是 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="a2013-231">The session security token that was read, an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-232">讀取器必須定位在 Ws-secure Conversation Feb2005 或 Ws-secure Conversation 1.3`<wsc:SecurityContextToken>`項目。</span><span class="sxs-lookup"><span data-stu-id="a2013-232">The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 <span data-ttu-id="a2013-233">如果快取權杖的內容時，它會讀取從權杖快取，也就是執行個體的<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>類別。</span><span class="sxs-lookup"><span data-stu-id="a2013-233">If the token material is cached, it is read from the token cache, which is an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> class.</span></span> <span data-ttu-id="a2013-234">否則，語彙基元資料讀取的子項目`<wsc:SecurityContextToken>`所指定的項目<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A>和<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A>屬性和<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A>解碼 cookie 會叫用方法。</span><span class="sxs-lookup"><span data-stu-id="a2013-234">Otherwise, the token material is read from the child element of the `<wsc:SecurityContextToken>` element that is specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties and the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method is invoked to decode the cookie.</span></span>  
  
 <span data-ttu-id="a2013-235">如需有關如何將工作階段權杖序列化成`<SecurityContextToken`項目，請參閱<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="a2013-235">For more information about how session tokens are serialized into a `<SecurityContextToken` element, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2013-236"><paramref name="reader" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-236"><paramref name="reader" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a2013-237">-或-</span><span class="sxs-lookup"><span data-stu-id="a2013-237">-or-</span></span>  
  
 <span data-ttu-id="a2013-238"><paramref name="tokenResolver" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-238"><paramref name="tokenResolver" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><span data-ttu-id="a2013-239">讀取器未放置在<see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />，或<see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />無法讀取。</span><span class="sxs-lookup"><span data-stu-id="a2013-239">The reader is not positioned at a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> or the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> cannot be read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetTransforms">
      <MemberSignature Language="C#" Value="protected void SetTransforms (System.Collections.Generic.IEnumerable&lt;System.IdentityModel.CookieTransform&gt; transforms);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetTransforms(class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.CookieTransform&gt; transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetTransforms (transforms As IEnumerable(Of CookieTransform))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetTransforms(System::Collections::Generic::IEnumerable&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.CookieTransform&gt;" />
      </Parameters>
      <Docs>
        <param name="transforms"><span data-ttu-id="a2013-240">要使用的轉換。</span><span class="sxs-lookup"><span data-stu-id="a2013-240">The transforms to use.</span></span></param>
        <summary><span data-ttu-id="a2013-241">設定會套用至 Cookie 的轉換。</span><span class="sxs-lookup"><span data-stu-id="a2013-241">Sets the transforms that will be applied to cookies.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-242">設定轉換所傳回的清單<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a2013-242">Sets the list of transforms returned by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property.</span></span> <span data-ttu-id="a2013-243">將以它們出現在清單中，編碼 cookie 時，並以反向順序解碼 cookie 時的順序套用轉換。</span><span class="sxs-lookup"><span data-stu-id="a2013-243">Transforms will be applied in the order in which they appear in the list when encoding a cookie and in the reverse order when decoding a cookie.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="a2013-244">如果`transforms`參數是`null`，將會擲回例外狀況，從<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A>方法呼叫來編碼或解碼 cookie 時。</span><span class="sxs-lookup"><span data-stu-id="a2013-244">If the `transforms` parameter is `null`, an exception will be thrown from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method when it is called to encode or decode the cookie.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenLifetime">
      <MemberSignature Language="C#" Value="public virtual TimeSpan TokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TimeSpan TokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2013-245">取得或設定語彙基元存留期。</span><span class="sxs-lookup"><span data-stu-id="a2013-245">Gets or sets the token lifetime.</span></span></summary>
        <value><span data-ttu-id="a2013-246">權杖存留期。</span><span class="sxs-lookup"><span data-stu-id="a2013-246">The token lifetime.</span></span> <span data-ttu-id="a2013-247">預設值為 <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-247">The default is <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-248">根據預設，如果[ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)組態檔中，指定元素<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A>屬性會初始化為值的`lifetime`屬性<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a2013-248">By default, if the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element is specified in the configuration file, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to the value of the `lifetime` attribute by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a2013-249">發生設定小於或等於零之時間範圍的嘗試。</span><span class="sxs-lookup"><span data-stu-id="a2013-249">An attempt to set a time span that is less than or equal to zero occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public override Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ TokenType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2013-250">取得這個處理常式處理的權杖類型。</span><span class="sxs-lookup"><span data-stu-id="a2013-250">Gets the type of the tokens that this handler processes.</span></span></summary>
        <value><span data-ttu-id="a2013-251"><see cref="T:System.Type" /> 的 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-251">The <see cref="T:System.Type" /> of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transforms">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; Transforms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; Transforms" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transforms As ReadOnlyCollection(Of CookieTransform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ Transforms { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2013-252">取得會套用至 Cookie 的轉換。</span><span class="sxs-lookup"><span data-stu-id="a2013-252">Gets the transforms that will be applied to the cookie.</span></span></summary>
        <value><span data-ttu-id="a2013-253">會套用至 Cookie 的轉換的清單。</span><span class="sxs-lookup"><span data-stu-id="a2013-253">The list of transforms that will be applied to the cookie.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-254">到底端套用<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a2013-254">The transforms are applied in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSession">
      <MemberSignature Language="C#" Value="protected virtual void ValidateSession (System.IdentityModel.Tokens.SessionSecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateSession(class System.IdentityModel.Tokens.SessionSecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateSession (securityToken As SessionSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateSession(System::IdentityModel::Tokens::SessionSecurityToken ^ securityToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken"><span data-ttu-id="a2013-255">要檢查的權杖。</span><span class="sxs-lookup"><span data-stu-id="a2013-255">The token to be checked.</span></span></param>
        <summary><span data-ttu-id="a2013-256">判斷與指定之權杖相關聯的工作階段是否仍然有效。</span><span class="sxs-lookup"><span data-stu-id="a2013-256">Determines whether the session associated with the specified token is still valid.</span></span> <span data-ttu-id="a2013-257">藉由檢查指定的權杖的 <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> 和 <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> 屬性，即可判斷有效性。</span><span class="sxs-lookup"><span data-stu-id="a2013-257">Validity is determined by checking the <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> and <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> properties of the specified token.</span></span> <span data-ttu-id="a2013-258">如果工作階段已不再有效，則擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a2013-258">An exception is thrown if the session is no longer valid.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-259">此權杖不是有效如果其<xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>屬性設定為更晚出現的值比<xref:System.DateTime.UtcNow%2A>，或如果其<xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>屬性設定為，就會發生值早於<xref:System.DateTime.UtcNow%2A>。</span><span class="sxs-lookup"><span data-stu-id="a2013-259">The token is not valid if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> property is set to a value that occurs later than <xref:System.DateTime.UtcNow%2A>, or if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property is set to a value that occurs earlier than <xref:System.DateTime.UtcNow%2A>.</span></span>  
  
 <span data-ttu-id="a2013-260">從呼叫<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A>方法來驗證工作階段。</span><span class="sxs-lookup"><span data-stu-id="a2013-260">Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> methods to validate the session.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2013-261"><paramref name="securityToken" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-261"><paramref name="securityToken" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a2013-262"><see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> 屬性為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-262">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException"><span data-ttu-id="a2013-263">此權杖的<see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />屬性晚於<see cref="P:System.DateTime.UtcNow" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-263">The <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> property of the token is later than <see cref="P:System.DateTime.UtcNow" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenExpiredException"><span data-ttu-id="a2013-264">此權杖的 <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> 屬性早於 <see cref="P:System.DateTime.UtcNow" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-264">The <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> property of the token is earlier than <see cref="P:System.DateTime.UtcNow" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2013-265">驗證權杖，並傳回其宣告。</span><span class="sxs-lookup"><span data-stu-id="a2013-265">Validates a token and returns its claims.</span></span></summary>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="a2013-266">要驗證的語彙基元。</span><span class="sxs-lookup"><span data-stu-id="a2013-266">The token to be validated.</span></span> <span data-ttu-id="a2013-267">必須從 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 指派。</span><span class="sxs-lookup"><span data-stu-id="a2013-267">Must be assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></param>
        <summary><span data-ttu-id="a2013-268">驗證指定的語彙基元，並傳回其宣告。</span><span class="sxs-lookup"><span data-stu-id="a2013-268">Validates the specified token and returns its claims.</span></span></summary>
        <returns><span data-ttu-id="a2013-269">包含在語彙基元中的識別。</span><span class="sxs-lookup"><span data-stu-id="a2013-269">The identities that are contained in the token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-270">叫用<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A>方法以驗證語彙基元。</span><span class="sxs-lookup"><span data-stu-id="a2013-270">Invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A> method to validate the token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2013-271"><paramref name="token" />
          <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2013-271"><paramref name="token" />
<see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2013-272"><paramref name="token" /> 無法從 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="a2013-272"><paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SessionSecurityToken token, string endpointId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SessionSecurityToken token, string endpointId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateToken (token As SessionSecurityToken, endpointId As String) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SessionSecurityToken ^ token, System::String ^ endpointId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="endpointId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="a2013-273">要驗證的語彙基元。</span><span class="sxs-lookup"><span data-stu-id="a2013-273">The token to be validated.</span></span> <span data-ttu-id="a2013-274">必須從 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 指派。</span><span class="sxs-lookup"><span data-stu-id="a2013-274">Must be assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></param>
        <param name="endpointId"><span data-ttu-id="a2013-275">語彙基元的範圍結束點的識別項。</span><span class="sxs-lookup"><span data-stu-id="a2013-275">The identifier of the endpoint to which the token is scoped.</span></span></param>
        <summary><span data-ttu-id="a2013-276">驗證指定的工作階段權杖並傳回其宣告。</span><span class="sxs-lookup"><span data-stu-id="a2013-276">Validates the specified session token and returns its claims.</span></span></summary>
        <returns><span data-ttu-id="a2013-277">包含在語彙基元中的識別。</span><span class="sxs-lookup"><span data-stu-id="a2013-277">The identities that are contained in the token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-278">執行檢查，以確定指定的語彙基元的範圍設定為指定的端點識別碼，而且，如果是的話，會叫用<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType>方法; 否則會擲回<xref:System.IdentityModel.Tokens.SecurityTokenException>。</span><span class="sxs-lookup"><span data-stu-id="a2013-278">Performs a check to make sure that the specified token is scoped for the specified endpoint ID and, if so, invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method; otherwise, throws a <xref:System.IdentityModel.Tokens.SecurityTokenException>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a2013-279">工作階段的 token<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>屬性`null`或全域範圍的範圍會被視為空白。</span><span class="sxs-lookup"><span data-stu-id="a2013-279">Session tokens that have an <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property that is `null` or empty are considered to be globally scoped.</span></span> <span data-ttu-id="a2013-280">這代表潛在安全性風險。</span><span class="sxs-lookup"><span data-stu-id="a2013-280">This presents a potential security risk.</span></span> <span data-ttu-id="a2013-281">因此您應該確定<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>屬性設定工作階段權杖。</span><span class="sxs-lookup"><span data-stu-id="a2013-281">For this reason you should make sure that the <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property is set in your session tokens.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2013-282"><paramref name="token" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-282"><paramref name="token" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a2013-283">-或-</span><span class="sxs-lookup"><span data-stu-id="a2013-283">-or-</span></span>  
  
 <span data-ttu-id="a2013-284"><paramref name="endpointId" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-284"><paramref name="endpointId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2013-285"><paramref name="token" /> 無法從 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="a2013-285"><paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><span data-ttu-id="a2013-286">指定之權杖的 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /> 屬性不是 <see langword="null" /> 或空的，而且其值與 <paramref name="endpointId" /> 參數指定的值不同。</span><span class="sxs-lookup"><span data-stu-id="a2013-286">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /> property of the specified token is not <see langword="null" /> or empty and its value is different than that specified by the <paramref name="endpointId" /> parameter.</span></span></exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2013-287">將語彙基元序列化。</span><span class="sxs-lookup"><span data-stu-id="a2013-287">Serializes a token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-288">預設實作會將權杖序列化至 Ws-secure Conversation Feb2005 或 Ws-secure Conversation 1.3`<wsc:SecurityContextToken>`項目。</span><span class="sxs-lookup"><span data-stu-id="a2013-288">The default implementation serializes the token into either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual byte[] WriteToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] WriteToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteToken (sessionToken As SessionSecurityToken) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ WriteToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="sessionToken"><span data-ttu-id="a2013-289">要寫入的權杖。</span><span class="sxs-lookup"><span data-stu-id="a2013-289">The token to write.</span></span></param>
        <summary><span data-ttu-id="a2013-290">將指定的語彙基元序列化至位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="a2013-290">Serializes the specified token into a byte array.</span></span></summary>
        <returns><span data-ttu-id="a2013-291">編碼的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="a2013-291">An encoded byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-292">建立和 XML 寫入器序列化指定的語彙基元，透過<xref:System.IO.MemoryStream>及叫用<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="a2013-292">Serializes the specified token by creating and XML writer over a <xref:System.IO.MemoryStream> and invoking the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a2013-293">該多載，如需詳細資訊，請參閱。</span><span class="sxs-lookup"><span data-stu-id="a2013-293">See that overload for more details.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2013-294"><paramref name="sessiontoken" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-294"><paramref name="sessiontoken" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a2013-295">XML 寫入器，用來序列化權杖。</span><span class="sxs-lookup"><span data-stu-id="a2013-295">The XML writer with which to serialize the token.</span></span></param>
        <param name="token"><span data-ttu-id="a2013-296">要序列化的權杖。</span><span class="sxs-lookup"><span data-stu-id="a2013-296">The token to serialize.</span></span> <span data-ttu-id="a2013-297"><see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="a2013-297">An instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span></param>
        <summary><span data-ttu-id="a2013-298">使用指定的 XML 寫入器，序列化指定的語彙基元。</span><span class="sxs-lookup"><span data-stu-id="a2013-298">Serializes the specified token by using the specified XML writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2013-299">預設實作會序列化指定的語彙基元為 Ws-secure Conversation Feb2005 或 Ws-secure Conversation 1.3`<wsc:SecurityContextToken>`項目，根據的值<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="a2013-299">The default implementation serializes the specified token as either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element, depending on the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a2013-300"><xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType>屬性序列化為`Id`屬性。</span><span class="sxs-lookup"><span data-stu-id="a2013-300">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType> property is serialized as the `Id` attribute.</span></span> <span data-ttu-id="a2013-301"><xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType>屬性序列化為`<Identifier>`子項目。</span><span class="sxs-lookup"><span data-stu-id="a2013-301">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> property is serialized as the `<Identifier>` child element.</span></span> <span data-ttu-id="a2013-302">如果沒有`null`<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType>屬性序列化為`<Instance>`項目。</span><span class="sxs-lookup"><span data-stu-id="a2013-302">If not `null` the <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> property is serialized as an `<Instance>` element.</span></span> <span data-ttu-id="a2013-303">最後，如果<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType>屬性是`false`，將整個語彙基元序列化成二進位陣列傳遞給<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A>要編碼的方法。</span><span class="sxs-lookup"><span data-stu-id="a2013-303">Finally, if the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `false`, the entire token is serialized into binary array which is passed to the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method to be encoded.</span></span> <span data-ttu-id="a2013-304">已編碼的語彙基元接著會寫入做為 base64 編碼值的項目與所指定的命名空間<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A>和<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a2013-304">The encoded token is then written as a base64 encoded value to the element and namespace specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties.</span></span> <span data-ttu-id="a2013-305">如果<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType>屬性是`true`，則不會序列化語彙基元。</span><span class="sxs-lookup"><span data-stu-id="a2013-305">If the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `true`, the token is not serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2013-306"><paramref name="writer" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-306"><paramref name="writer" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a2013-307">-或-</span><span class="sxs-lookup"><span data-stu-id="a2013-307">-or-</span></span>  
  
 <span data-ttu-id="a2013-308"><paramref name="token" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a2013-308"><paramref name="token" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2013-309"><paramref name="token" /> 無法從 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="a2013-309"><paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span></span>  
  
 <span data-ttu-id="a2013-310">-或-</span><span class="sxs-lookup"><span data-stu-id="a2013-310">-or-</span></span>  
  
 <span data-ttu-id="a2013-311">權杖的 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /> 會指定處理常式不支援的 WS-Secure Conversation 版本。</span><span class="sxs-lookup"><span data-stu-id="a2013-311">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /> of the token specifies a version of WS-Secure Conversation that is not supported by the handler.</span></span></exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </Member>
  </Members>
</Type>