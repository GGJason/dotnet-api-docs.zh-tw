<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SessionSecurityTokenHandler.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c115a52489fd77750e537edfe5b3127ffc36e982.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c115a52489fd77750e537edfe5b3127ffc36e982</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /&gt;</ph> that processes security tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">處理型別為 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /&gt;</ph> 之安全性權杖的 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> class serializes, deserializes, and validates session tokens.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>類別序列化、 還原序列化，並驗證工作階段權杖。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Session tokens are tokens of type <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>.</source>
          <target state="translated">工作階段權杖是權杖的型別<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> class serializes the tokens to and from cookie format.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>類別會序列化的權杖與 cookie 格式。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>By default, the class serializes tokens into WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elements.</source>
          <target state="translated">根據預設，此類別序列化語彙基元 Ws-secure Conversation Feb2005 或 Ws-secure Conversation 1.3<ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph>項目。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Session tokens are used by the <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph> (WSFAM) and the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) to store information about a session, this is primarily the <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> associated with the authenticated user and the session start and expiration times.</source>
          <target state="translated">工作階段權杖由<ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph>(WSFAM) 和<ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph>(SAM) 來儲存資訊的工作階段中，這主要是<ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>與已驗證的使用者和工作階段的開始日和到期時間相關聯。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>In passive scenarios, the <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph> calls into the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) from the authentication pipeline to create a session token from the <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> that represents the authenticated user.</source>
          <target state="translated">在被動的情況下，<ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph>(SAM) 從要建立從工作階段權杖驗證管線<ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>，代表已驗證的使用者。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The SAM uses its configured <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> to create the token and to serialize it into a cookie (and to deserialize the token from a cookie on subsequent requests).</source>
          <target state="translated">SAM 會使用其設定<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>才能建立語彙基元並將它序列化成 cookie （和還原序列化的後續要求的 cookie 語彙基元）。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The SAM uses an instance of its configured <ph id="ph1">&lt;xref:System.IdentityModel.Services.CookieHandler&gt;</ph> class to write the cookie back to the HTTP Response.</source>
          <target state="translated">SAM 會使用其設定的執行個體<ph id="ph1">&lt;xref:System.IdentityModel.Services.CookieHandler&gt;</ph>類別來寫入 HTTP 回應傳回的 cookie。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>This cookie is then returned to the client and on subsequent requests the client can present the cookie rather than making a round trip back to the identity provider to re-obtain a security token.</source>
          <target state="translated">此 cookie 則傳回給用戶端，並在後續要求 cookie，而不是反覆存取進行重新取得安全性權杖的身分識別提供者，可以呈現用戶端。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For more information about how sessions operate with WIF, see <bpt id="p1">[</bpt>WIF Session Management<ept id="p1">](~/docs/framework/security/wif-session-management.md)</ept>.</source>
          <target state="translated">如需有關如何使用 WIF 工作階段的運作方式的詳細資訊，請參閱<bpt id="p1">[</bpt>WIF 工作階段管理<ept id="p1">](~/docs/framework/security/wif-session-management.md)</ept>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">\&lt;</ph>securityTokenHandlers&gt; configuration element can be used to specify a <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> that has the responsibility for securing the application’s sessions.</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>SecurityTokenHandlers &gt; 組態項目可以用來指定<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>有責任保護應用程式的工作階段。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Developers should use caution when changing this configuration setting, as a misconfigured system could result in application compromise.</source>
          <target state="translated">開發人員時應謹慎小心變更此組態設定，因為設定不正確的系統可能會導致應用程式的洩露。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For example, specifying a derived  HYPERLINK "<ph id="ph1">http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx</ph>" \t "_blank" <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> and passing an empty Transforms (CookieTransform) collection to the base, would result in the users identity being serialized into a cookie that was not protected.</source>
          <target state="translated">例如，指定 衍生的超連結"<ph id="ph1">http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx</ph>"\t"_blank"<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>和傳遞空轉換 (CookieTransform) 集合的基底，會導致將序列化為未受保護的 cookie 的使用者身分識別。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>This could allow an attacker to modify the identity and therefore change access privileges.</source>
          <target state="translated">這可能會允許攻擊者修改的身分識別，因此會變更存取權限。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>If the session token is in reference mode, that is, its <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`true`</ph>, the session token handler only serializes properties of the session token that are needed to regenerate its key in the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>.</source>
          <target state="translated">如果工作階段權杖是以參考模式，也就是其<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph>屬性是<ph id="ph2">`true`</ph>，權杖處理常式只會序列化內容的工作階段權杖需要重新產生其金鑰中的工作階段<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>In the default case, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&gt;</ph> class is used to represent cache keys, and the token handler writes the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph> properties of the token.</source>
          <target state="translated">在預設情況下，<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&gt;</ph>類別用來代表快取索引鍵，且權杖處理常式寫入<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph>語彙基元的屬性。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>If the session token is not in reference mode, that is, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`false`</ph>, then, in addition to the properties mentioned previously, the handler invokes the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method on a byte array serialized from the token and stores the resulting value in the cookie as well.</source>
          <target state="translated">如果工作階段權杖是不能在參考的模式，也就是<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph>屬性是<ph id="ph2">`false`</ph>，接著，除了先前所述的屬性，此處理常式會叫用<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph>上序列化所來自的語彙基元和存放區的位元組陣列的方法cookie 也中產生的值。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For more details about how the token is serialized, see the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">如需有關如何序列化權杖的詳細資訊，請參閱<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> property gets the list of transforms that are applied to the session token in the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph>屬性會取得套用到工作階段的轉換清單中的語彙基元<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>All transforms derive from the <ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph> class.</source>
          <target state="translated">所有的轉換是衍生自<ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>In the default case the <ph id="ph1">&lt;xref:System.IdentityModel.DeflateCookieTransform&gt;</ph> and the <ph id="ph2">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph> are applied.</source>
          <target state="translated">在預設案例中<ph id="ph1">&lt;xref:System.IdentityModel.DeflateCookieTransform&gt;</ph>和<ph id="ph2">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph>會套用。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph> uses the Data Protection API (DPAPI) to protect the cookie material.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph>使用資料保護 API (DPAPI) 來保護 cookie 資料。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>DPAPI uses a key that is specific to the computer on which it is running in its protection algorithms.</source>
          <target state="translated">DPAPI 會使用特定電腦上執行其保護演算法的金鑰。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For this reason, the default session token handler is not usable in Web farm scenarios because, in such scenarios, tokens written on one computer may need to be read on another computer.</source>
          <target state="translated">基於這個理由，預設工作階段權杖處理常式不可以在 Web 伺服陣列案例因為在這種情況下，一部電腦上寫入的語彙基元可能需要另一部電腦上讀取。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>You can use many strategies to circumvent this issue.</source>
          <target state="translated">如果要避免這個問題，您可以使用許多策略。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For example, you can:</source>
          <target state="translated">例如，您可以：</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Replace the default <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> with the <ph id="ph2">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph>.</source>
          <target state="translated">取代預設<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>與<ph id="ph2">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> enables you to specify signing and encryption keys under the ASP.NET <ph id="ph2">`&lt;machineKey&gt;`</ph> element in the configuration file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph>可讓您指定簽章和加密金鑰，在 ASP.NET<ph id="ph2">`&lt;machineKey&gt;`</ph>組態檔中的項目。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Provide a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType&gt;</ph> event in the global.asax.cs file and replace the default session token handler with an instance of <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> that has a list of transforms that includes the <ph id="ph3">&lt;xref:System.IdentityModel.RsaSignatureCookieTransform&gt;</ph> and the <ph id="ph4">&lt;xref:System.IdentityModel.RsaEncryptionCookieTransform&gt;</ph>.</source>
          <target state="translated">提供的處理常式<ph id="ph1">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType&gt;</ph>global.asax.cs 檔案和取代預設工作階段中的事件語彙基元處理常式的執行個體和<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>轉換清單包含具有<ph id="ph3">&lt;xref:System.IdentityModel.RsaSignatureCookieTransform&gt;</ph>和<ph id="ph4">&lt;xref:System.IdentityModel.RsaEncryptionCookieTransform&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>You can create the new instance by invoking one of the constructors that takes a list of transforms.</source>
          <target state="translated">您可以叫用的建構函式會採用的轉換清單的其中一個來建立新的執行個體。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Derive a custom transform from the <ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph> base class and use the method above to include it in the list of transforms to be applied.</source>
          <target state="translated">衍生的自訂轉換從<ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph>基底類別，並使用上述方法，將它包含在套用轉換清單。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Derive a custom token handler from <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> and implement your own mechanism.</source>
          <target state="translated">衍生的自訂語彙基元處理常式從<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>並實作您自己的機制。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For more information about using sessions in Web farm scenarios, see <bpt id="p1">[</bpt>WIF and Web Farms<ept id="p1">](~/docs/framework/security/wif-and-web-farms.md)</ept>.</source>
          <target state="translated">如需在 Web 伺服陣列案例中使用工作階段的詳細資訊，請參閱<bpt id="p1">[</bpt>WIF 和 Web 伺服陣列<ept id="p1">](~/docs/framework/security/wif-and-web-farms.md)</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> is included in the default token handler collection; however, you can replace it with a custom session token handler by first specifying a <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>remove<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md)</ept> element under the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>securityTokenHandlers<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md)</ept> element to remove the default handler from the collection and then adding your custom token handler using the <bpt id="p3">[</bpt><ph id="ph6">&amp;lt;</ph>add<ph id="ph7">&amp;gt;</ph><ept id="p3">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md)</ept> element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>隨附於預設權杖處理常式集合中; 不過，您可以自訂工作階段權杖處理常式取代藉由先指定<bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>移除<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md)</ept>項目底下<bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>securityTokenHandlers<ph id="ph5">&amp;gt;</ph> <ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md)</ept>項目移除集合，然後將加入您的自訂權杖處理常式使用的預設處理常式<bpt id="p3">[</bpt><ph id="ph6">&amp;lt;</ph>新增<ph id="ph7">&amp;gt;</ph><ept id="p3">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md)</ept>項目。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>By default, you can specify the default token lifetime by including the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element under the <ph id="ph3">`&lt;add&gt;`</ph> element.</source>
          <target state="translated">根據預設，您可以指定預設權杖存留期包括<bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept>項目底下<ph id="ph3">`&lt;add&gt;`</ph>項目。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>You can design a custom token handler to take custom configuration elements under the <ph id="ph1">`&lt;add&gt;`</ph> element by overriding the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> method to provide the logic to process them.</source>
          <target state="translated">您可以設計自訂的語彙基元處理常式才會在自訂組態項目<ph id="ph1">`&lt;add&gt;`</ph>藉由覆寫的項目<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph>方法，以提供邏輯以處理它們。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The following XML shows how to replace the default session security token handler in a token handler collection with an instance of the <ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> class in configuration.</source>
          <target state="translated">下列 XML 會說明如何以取代預設工作階段安全性權杖處理常式權杖處理常式集合中的執行個體<ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph>組態中的類別。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class that uses the default cookie transforms and token lifetime.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> 類別的新執行個體，這個執行個體使用預設 cookie 轉換和權杖存留期。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> properties are initialized to <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph> and <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph>屬性會初始化為<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph>和<ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>The transforms to apply when encoding or decoding the cookie.</source>
          <target state="translated">編碼或解碼 cookie 時要套用的轉換。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property.</source>
          <target state="translated">設定 <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class that uses the specified cookie transforms.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> 類別的新執行個體，這個執行個體使用指定的 Cookie 轉換。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> property is initialized to <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> 屬性會初始化為 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>The transforms to apply when encoding or decoding the cookie.</source>
          <target state="translated">編碼或解碼 cookie 時要套用的轉換。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property.</source>
          <target state="translated">設定 <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>The default lifetime for a token.</source>
          <target state="translated">預設權杖存留期。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /&gt;</ph> property.</source>
          <target state="translated">設定 <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class that uses the specified cookie transforms and token lifetime.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> 類別的新執行個體，這個執行個體使用指定的 cookie 轉換和權杖存留期。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="tokenLifetime" /&gt;</ph> is less than or equal to <ph id="ph2">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenLifetime" /&gt;</ph> 小於或等於 <ph id="ph2">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>The cookie that will be transformed.</source>
          <target state="translated">將轉換的 Cookie。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the cookie should be encoded; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the cookie should be decoded.</source>
          <target state="translated">如果 cookie 應該要編碼，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，如果 cookie 應該要解碼，則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>Applies the transforms specified by the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property to either encode or decode the specified cookie.</source>
          <target state="translated">套用 <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> 屬性所指定的轉換，對指定的 Cookie 進行編碼或解碼。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>The encoded or decoded cookie.</source>
          <target state="translated">編碼或解碼的 cookie。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>When encoding a cookie transforms are applied in the order in which they appear in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> property.</source>
          <target state="translated">當 cookie 的編碼方式轉換中的出現順序套用<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>When decoding a cookie, they are applied in the reverse order.</source>
          <target state="translated">當解碼 cookie，它們會套用順序相反。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>Called from the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> methods to encode and decode the cookie material.</source>
          <target state="translated">從呼叫<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph>方法來編碼和解碼 cookie 資料。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> 屬性為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> over the incoming <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated">連入之 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 上的 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>The reader should be positioned at a <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">讀取器應位於 <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> 項目上。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>Returns a value that indicates whether the reader is positioned at a <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">傳回值，指出讀取器是否位在 <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> 項目。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader points to a <ph id="ph2">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果讀取器指向 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，則為 <ph id="ph2">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken">
          <source>Gets a value that indicates whether this handler supports validation of tokens of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">取得值，指出這個處理常式是否支援驗證 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> 型別的權杖。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the handler supports validation of tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果這個處理常式支援型別為 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> 的權杖的驗證，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">一定是 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken">
          <source>Gets a value that indicates whether this handler can write tokens of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">取得值，指出這個處理常式是否可寫入 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> 型別的權杖。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the handler can write tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果這個處理常式可以撰寫型別為 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> 的權杖，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">一定是 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>Gets the name for the cookie element.</source>
          <target state="translated">取得 Cookie 項目的名稱。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>The name for the cookie element.</source>
          <target state="translated">Cookie 項目的名稱。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>The default element name is "Cookie".</source>
          <target state="translated">預設項目名稱是"Cookie"。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>This property is used in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> methods to determine the element under which the encoded token material should be written or read.</source>
          <target state="translated">這個屬性用在<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph>方法來判斷的編碼語彙基元資料應該寫入或讀取的項目。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>Gets the namespace for the cookie element.</source>
          <target state="translated">取得 Cookie 項目的命名空間。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>The namespace for the cookie element.</source>
          <target state="translated">Cookie 項目的命名空間。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>The default namespace is "<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/security</ph>".</source>
          <target state="translated">預設命名空間是"<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/security</ph>"。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>This property is used in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> methods to determine the namespace of the element under which the encoded token material should be written or read.</source>
          <target state="translated">這個屬性用在<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph>方法來判斷的編碼語彙基元資料應該寫入或讀取的項目的命名空間。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The claims principal.</source>
          <target state="translated">宣告主體。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>A caller-defined context string.</source>
          <target state="translated">呼叫端定義的內容字串。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The identifier of the endpoint to which the token is scoped.</source>
          <target state="translated">語彙基元的範圍結束點的識別項。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The time instant at which the token becomes valid.</source>
          <target state="translated">瞬間，到此瞬間權杖即變成有效。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The time instant after which the token is no longer valid.</source>
          <target state="translated">瞬間，超過此瞬間之後權杖不再有效。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> based on the specified claims principal and time range during which the token is valid.</source>
          <target state="translated">根據指定的宣告主體與權杖的有效時間範圍，建立 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The session security token that was created.</source>
          <target state="translated">已建立的工作階段安全性權杖。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The properties on the new session token are set according to the specified parameters.</source>
          <target state="translated">新工作階段權杖上的屬性是根據指定的參數所設定。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="principal" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="principal" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> 屬性為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The token descriptor from which to create the token.</source>
          <target state="translated">權杖描述元，要從其中建立權杖。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Creates a security token based on the specified token descriptor.</source>
          <target state="translated">以指定的權杖描述元為基礎建立安全性權杖。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The security token that was created.</source>
          <target state="translated">已建立的安全性權杖。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>This will be an instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">這將會是 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> 的執行個體。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Creates and returns a session security token by using the following properties in the token descriptor: <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">建立並傳回工作階段安全性權杖，權杖的描述元中使用下列屬性： <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType&gt;</ph>，和<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>If the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType&gt;</ph> property is set <ph id="ph2">`true`</ph> on the token handler configuration specified by the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> property, the bootstrap context is created from the <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType&gt;</ph> property and is saved in the session token.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType&gt;</ph>屬性設定<ph id="ph2">`true`</ph>上所指定的語彙基元處理常式組態<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph>屬性，啟動程序的內容從建立<ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType&gt;</ph>屬性並儲存在工作階段權杖。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> 屬性為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms">
          <source>A read only collection that contains the list of default transforms to be applied to cookies, the <ph id="ph1">&lt;see cref="T:System.IdentityModel.DeflateCookieTransform" /&gt;</ph> and the <ph id="ph2">&lt;see cref="T:System.IdentityModel.ProtectedDataCookieTransform" /&gt;</ph>.</source>
          <target state="translated">唯讀集合，包含套用至 Cookie 的預設轉換清單：<ph id="ph1">&lt;see cref="T:System.IdentityModel.DeflateCookieTransform" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.IdentityModel.ProtectedDataCookieTransform" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime">
          <source>A constant that specifies the default lifetime for cookies, ten hours.</source>
          <target state="translated">為 Cookie 指定預設存留期的常數 (十小時)。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime">
          <source>Gets the default token lifetime.</source>
          <target state="translated">取得預設權杖存留期。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime">
          <source>The default token lifetime.</source>
          <target state="translated">預設權杖存留期。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime">
          <source>Always <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>.</source>
          <target state="translated">一定是 <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>Gets the token type URIs for the token types that can be processed by this handler.</source>
          <target state="translated">取得此處理常式可處理的語彙基元型別的語彙基元型別 URI。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>The token type identifier URIs for token types that can be processed by this handler.</source>
          <target state="translated">可由這個處理常式處理的權杖型別的權杖型別識別項 URI。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>The following type URIs are supported: "<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation</ph>", "<ph id="ph2">http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct</ph>", and "<ph id="ph3">http://schemas.xmlsoap.org/ws/2005/02/sc/sct</ph>".</source>
          <target state="translated">支援下列類型的 Uri:"<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation</ph>"，"<ph id="ph2">http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct</ph>」，和 「<ph id="ph3">http://schemas.xmlsoap.org/ws/2005/02/sc/sct</ph>"。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The custom configuration elements.</source>
          <target state="translated">自訂組態項目。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Loads custom configuration from XML.</source>
          <target state="translated">從 XML 載入自訂組態。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Called by the configuration infrastructure to initialize the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> instance.</source>
          <target state="translated">設定基礎結構，來初始化呼叫<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Initializes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> property from the <ph id="ph2">`lifetime`</ph> attribute of the <bpt id="p1">[</bpt><ph id="ph3">&amp;lt;</ph>sessionTokenRequirement<ph id="ph4">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element in the configuration file.</source>
          <target state="translated">初始化<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph>屬性從<ph id="ph2">`lifetime`</ph>屬性<bpt id="p1">[</bpt> <ph id="ph3">&amp;lt;</ph>sessionTokenRequirement<ph id="ph4">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept>組態檔中的項目。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source><ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The configuration specified by <ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> 指定的組態無效。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>For example, it does not contain a <ph id="ph1">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph> element, it contains more than one <ph id="ph2">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph> element, a valid <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph> value cannot be read from the <ph id="ph4">&lt;see langword="lifetime" /&gt;</ph> attribute, or the <ph id="ph5">&lt;see langword="lifetime" /&gt;</ph> attribute specifies a value that is less than <ph id="ph6">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</source>
          <target state="translated">例如，它不包含 <ph id="ph1">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph> 項目，它包含一個以上的 <ph id="ph2">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph> 項目，不能從 <ph id="ph4">&lt;see langword="lifetime" /&gt;</ph> 屬性讀取有效的 <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph> 值，或 <ph id="ph5">&lt;see langword="lifetime" /&gt;</ph> 屬性指定了小於 <ph id="ph6">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Reads a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">讀取 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The default implementation deserializes the token from either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">預設實作會還原序列化的語彙基元從 Ws-secure Conversation Feb2005 或 Ws-secure Conversation 1.3<ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph>項目。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> over the incoming <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated">連入之 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 上的 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>Reads the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> using the specified XML reader.</source>
          <target state="translated">使用指定的 XML 讀取器讀取 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The session security token that was read, an instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">已讀取的工作階段安全性權杖，這是 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> 的執行個體。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">讀取器必須定位在 Ws-secure Conversation Feb2005 或 Ws-secure Conversation 1.3<ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph>項目。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The default implementation invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph> method using a default token resolver.</source>
          <target state="translated">預設實作會叫用<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph>方法使用預設的語彙基元解析程式。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The reader is not positioned at a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> or the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> cannot be read.</source>
          <target state="translated">讀取器未放置在<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>，或<ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>無法讀取。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The stream of bytes that contains the token.</source>
          <target state="translated">包含權杖的位元組資料流。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The token resolver to use.</source>
          <target state="translated">要使用的權杖解析程式。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Reads the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> from a stream of bytes by using the specified token resolver.</source>
          <target state="translated">使用指定的語彙基元解析程式從位元組資料流讀取<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> that was read.</source>
          <target state="translated">已讀取的 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The default implementation creates an <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> over the token and invokes the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">預設實作會建立<ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph>透過語彙基元，並叫用<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> over the incoming <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated">連入之 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 上的 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /&gt;</ph> that can used to resolve the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">可用來解析 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Reads the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> using the specified XML reader and token resolver.</source>
          <target state="translated">使用指定的 XML 讀取器和權杖解析程式，讀取 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The session security token that was read, an instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">已讀取的工作階段安全性權杖，這是 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> 的執行個體。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">讀取器必須定位在 Ws-secure Conversation Feb2005 或 Ws-secure Conversation 1.3<ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph>項目。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>If the token material is cached, it is read from the token cache, which is an instance of the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph> class.</source>
          <target state="translated">如果快取權杖的內容時，它會讀取從權杖快取，也就是執行個體的<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Otherwise, the token material is read from the child element of the <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element that is specified by the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph> properties and the <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method is invoked to decode the cookie.</source>
          <target state="translated">否則，語彙基元資料讀取的子項目<ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph>所指定的項目<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph>屬性和<ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph>解碼 cookie 會叫用方法。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>For more information about how session tokens are serialized into a <ph id="ph1">`&lt;SecurityContextToken`</ph> element, see the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">如需有關如何將工作階段權杖序列化成<ph id="ph1">`&lt;SecurityContextToken`</ph>項目，請參閱<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source><ph id="ph1">&lt;paramref name="tokenResolver" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenResolver" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The reader is not positioned at a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> or the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> cannot be read.</source>
          <target state="translated">讀取器未放置在<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>，或<ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>無法讀取。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>The transforms to use.</source>
          <target state="translated">要使用的轉換。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>Sets the transforms that will be applied to cookies.</source>
          <target state="translated">設定會套用至 Cookie 的轉換。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>Sets the list of transforms returned by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> property.</source>
          <target state="translated">設定轉換所傳回的清單<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>Transforms will be applied in the order in which they appear in the list when encoding a cookie and in the reverse order when decoding a cookie.</source>
          <target state="translated">將以它們出現在清單中，編碼 cookie 時，並以反向順序解碼 cookie 時的順序套用轉換。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>If the <ph id="ph1">`transforms`</ph> parameter is <ph id="ph2">`null`</ph>, an exception will be thrown from the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method when it is called to encode or decode the cookie.</source>
          <target state="translated">如果<ph id="ph1">`transforms`</ph>參數是<ph id="ph2">`null`</ph>，將會擲回例外狀況，從<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph>方法呼叫來編碼或解碼 cookie 時。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>Gets or sets the token lifetime.</source>
          <target state="translated">取得或設定語彙基元存留期。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>The token lifetime.</source>
          <target state="translated">權杖存留期。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>By default, if the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element is specified in the configuration file, the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> property is initialized to the value of the <ph id="ph4">`lifetime`</ph> attribute by the <ph id="ph5">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> method.</source>
          <target state="translated">根據預設，如果<bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept>組態檔中，指定元素<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph>屬性會初始化為值的<ph id="ph4">`lifetime`</ph>屬性<ph id="ph5">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>An attempt to set a time span that is less than or equal to zero occurs.</source>
          <target state="translated">發生設定小於或等於零之時間範圍的嘗試。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType">
          <source>Gets the type of the tokens that this handler processes.</source>
          <target state="translated">取得這個處理常式處理的權杖類型。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms">
          <source>Gets the transforms that will be applied to the cookie.</source>
          <target state="translated">取得會套用至 Cookie 的轉換。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms">
          <source>The list of transforms that will be applied to the cookie.</source>
          <target state="translated">會套用至 Cookie 的轉換的清單。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms">
          <source>The transforms are applied in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method.</source>
          <target state="translated">到底端套用<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token to be checked.</source>
          <target state="translated">要檢查的權杖。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Determines whether the session associated with the specified token is still valid.</source>
          <target state="translated">判斷與指定之權杖相關聯的工作階段是否仍然有效。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Validity is determined by checking the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> properties of the specified token.</source>
          <target state="translated">藉由檢查指定的權杖的 <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> 屬性，即可判斷有效性。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>An exception is thrown if the session is no longer valid.</source>
          <target state="translated">如果工作階段已不再有效，則擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token is not valid if its <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A&gt;</ph> property is set to a value that occurs later than <ph id="ph2">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>, or if its <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A&gt;</ph> property is set to a value that occurs earlier than <ph id="ph4">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>.</source>
          <target state="translated">此權杖不是有效如果其<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A&gt;</ph>屬性設定為更晚出現的值比<ph id="ph2">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>，或如果其<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A&gt;</ph>屬性設定為，就會發生值早於<ph id="ph4">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Called from the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A&gt;</ph> methods to validate the session.</source>
          <target state="translated">從呼叫<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A&gt;</ph>方法來驗證工作階段。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source><ph id="ph1">&lt;paramref name="securityToken" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityToken" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> 屬性為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> property of the token is later than <ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph>.</source>
          <target state="translated">此權杖的<ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph>屬性晚於<ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> property of the token is earlier than <ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph>.</source>
          <target state="translated">此權杖的 <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> 屬性早於 <ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Validates a token and returns its claims.</source>
          <target state="translated">驗證權杖，並傳回其宣告。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The token to be validated.</source>
          <target state="translated">要驗證的語彙基元。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Must be assignable from <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">必須從 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> 指派。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Validates the specified token and returns its claims.</source>
          <target state="translated">驗證指定的語彙基元，並傳回其宣告。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The identities that are contained in the token.</source>
          <target state="translated">包含在語彙基元中的識別。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A&gt;</ph> method to validate the token.</source>
          <target state="translated">叫用<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A&gt;</ph>方法以驗證語彙基元。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> 無法從 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> 指定。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The token to be validated.</source>
          <target state="translated">要驗證的語彙基元。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Must be assignable from <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">必須從 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> 指派。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The identifier of the endpoint to which the token is scoped.</source>
          <target state="translated">語彙基元的範圍結束點的識別項。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Validates the specified session token and returns its claims.</source>
          <target state="translated">驗證指定的工作階段權杖並傳回其宣告。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The identities that are contained in the token.</source>
          <target state="translated">包含在語彙基元中的識別。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Performs a check to make sure that the specified token is scoped for the specified endpoint ID and, if so, invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method; otherwise, throws a <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt;</ph>.</source>
          <target state="translated">執行檢查，以確定指定的語彙基元的範圍設定為指定的端點識別碼，而且，如果是的話，會叫用<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph>方法; 否則會擲回<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Session tokens that have an <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph> property that is <ph id="ph2">`null`</ph> or empty are considered to be globally scoped.</source>
          <target state="translated">工作階段的 token<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph>屬性<ph id="ph2">`null`</ph>或全域範圍的範圍會被視為空白。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>This presents a potential security risk.</source>
          <target state="translated">這代表潛在安全性風險。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>For this reason you should make sure that the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph> property is set in your session tokens.</source>
          <target state="translated">因此您應該確定<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph>屬性設定工作階段權杖。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source><ph id="ph1">&lt;paramref name="endpointId" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="endpointId" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> 無法從 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> 指定。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /&gt;</ph> property of the specified token is not <ph id="ph2">&lt;see langword="null" /&gt;</ph> or empty and its value is different than that specified by the <ph id="ph3">&lt;paramref name="endpointId" /&gt;</ph> parameter.</source>
          <target state="translated">指定之權杖的 <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /&gt;</ph> 屬性不是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 或空的，而且其值與 <ph id="ph3">&lt;paramref name="endpointId" /&gt;</ph> 參數指定的值不同。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Serializes a token.</source>
          <target state="translated">將語彙基元序列化。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The default implementation serializes the token into either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">預設實作會將權杖序列化至 Ws-secure Conversation Feb2005 或 Ws-secure Conversation 1.3<ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph>項目。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token to write.</source>
          <target state="translated">要寫入的權杖。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Serializes the specified token into a byte array.</source>
          <target state="translated">將指定的語彙基元序列化至位元組陣列。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>An encoded byte array.</source>
          <target state="translated">編碼的位元組陣列。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Serializes the specified token by creating and XML writer over a <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> and invoking the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">建立和 XML 寫入器序列化指定的語彙基元，透過<ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph>及叫用<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>See that overload for more details.</source>
          <target state="translated">該多載，如需詳細資訊，請參閱。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source><ph id="ph1">&lt;paramref name="sessiontoken" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sessiontoken" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The XML writer with which to serialize the token.</source>
          <target state="translated">XML 寫入器，用來序列化權杖。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The token to serialize.</source>
          <target state="translated">要序列化的權杖。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> 的執行個體。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>Serializes the specified token by using the specified XML writer.</source>
          <target state="translated">使用指定的 XML 寫入器，序列化指定的語彙基元。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The default implementation serializes the specified token as either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element, depending on the value of the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">預設實作會序列化指定的語彙基元為 Ws-secure Conversation Feb2005 或 Ws-secure Conversation 1.3<ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph>項目，根據的值<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType&gt;</ph> property is serialized as the <ph id="ph2">`Id`</ph> attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType&gt;</ph>屬性序列化為<ph id="ph2">`Id`</ph>屬性。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph> property is serialized as the <ph id="ph2">`&lt;Identifier&gt;`</ph> child element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph>屬性序列化為<ph id="ph2">`&lt;Identifier&gt;`</ph>子項目。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>If not <ph id="ph1">`null`</ph> the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph> property is serialized as an <ph id="ph3">`&lt;Instance&gt;`</ph> element.</source>
          <target state="translated">如果沒有<ph id="ph1">`null`</ph><ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph>屬性序列化為<ph id="ph3">`&lt;Instance&gt;`</ph>項目。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>Finally, if the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`false`</ph>, the entire token is serialized into binary array which is passed to the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method to be encoded.</source>
          <target state="translated">最後，如果<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph>屬性是<ph id="ph2">`false`</ph>，將整個語彙基元序列化成二進位陣列傳遞給<ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph>要編碼的方法。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The encoded token is then written as a base64 encoded value to the element and namespace specified by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph> properties.</source>
          <target state="translated">已編碼的語彙基元接著會寫入做為 base64 編碼值的項目與所指定的命名空間<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>If the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`true`</ph>, the token is not serialized.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph>屬性是<ph id="ph2">`true`</ph>，則不會序列化語彙基元。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> 無法從 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> 指定。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /&gt;</ph> of the token specifies a version of WS-Secure Conversation that is not supported by the handler.</source>
          <target state="translated">權杖的 <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /&gt;</ph> 會指定處理常式不支援的 WS-Secure Conversation 版本。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>