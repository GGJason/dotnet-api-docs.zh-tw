<Type Name="IssuerNameRegistry" FullName="System.IdentityModel.Tokens.IssuerNameRegistry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="99ef3ede8c606349e7d5c5cc670ec0c65f58a76d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class IssuerNameRegistry : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IssuerNameRegistry extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IssuerNameRegistry&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class IssuerNameRegistry abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="48a39-101">簽發者名稱登錄的抽象基底類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="48a39-101">The abstract base class for an issuer name registry.</span>
      </span>
      <span data-ttu-id="48a39-102">簽發者名稱登錄會用來建立助憶名稱與驗證對應簽發者所產生權杖簽章時所需之密碼編譯資料的關聯。</span>
      <span class="sxs-lookup">
        <span data-stu-id="48a39-102">An issuer name registry is used to associate a mnemonic name to the cryptographic material that is needed to verify the signatures of tokens produced by the corresponding issuer.</span>
      </span>
      <span data-ttu-id="48a39-103">簽發者名稱登錄會維護一份簽發者清單，這些都是信賴憑證者 (RP) 應用程式所信任的簽發者。</span>
      <span class="sxs-lookup">
        <span data-stu-id="48a39-103">The issuer name registry maintains a list of issuers that are trusted by a relying party (RP) application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48a39-104">簽發者名稱登錄用來建立關聯的助憶鍵的名稱，來驗證簽章的相對應的簽發者所產生的語彙基元所需的加密編譯內容。</span><span class="sxs-lookup"><span data-stu-id="48a39-104">The issuer name registry is used to associate a mnemonic name to the cryptographic material needed to verify signatures of tokens produced by the corresponding issuer.</span></span> <span data-ttu-id="48a39-105">此名稱然後用來設定<xref:System.Security.Claims.Claim.Issuer%2A>或<xref:System.Security.Claims.Claim.OriginalIssuer%2A>宣告的屬性。</span><span class="sxs-lookup"><span data-stu-id="48a39-105">This name is then used to set the <xref:System.Security.Claims.Claim.Issuer%2A> or the <xref:System.Security.Claims.Claim.OriginalIssuer%2A> property of a claim.</span></span> <span data-ttu-id="48a39-106">所公開的方法<xref:System.IdentityModel.Tokens.IssuerNameRegistry>類別會呼叫從管線會處理語彙基元，安全性權杖處理常式。</span><span class="sxs-lookup"><span data-stu-id="48a39-106">The methods exposed by the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class are called from the pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="48a39-107">權杖簽署的簽發者名稱登錄沒有對應的資料都會被捨棄，不受信任。</span><span class="sxs-lookup"><span data-stu-id="48a39-107">Tokens signed by material that is not mapped by an issuer name registry are discarded as untrusted.</span></span> <span data-ttu-id="48a39-108">簽發者名稱登錄所傳回的名稱應該是 RP 應用程式的內容中唯一的。</span><span class="sxs-lookup"><span data-stu-id="48a39-108">The name returned by the issuer name registry should be unique within the context of an RP application.</span></span>  
  
 <span data-ttu-id="48a39-109">程式碼中，您可以指定要使用的設定簽發者名稱登錄<xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="48a39-109">In code, you can specify the issuer name registry to use by setting the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="48a39-110">在組態檔中，可以指定簽發者名稱登錄藉由指定[ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)項目底下[ &lt;securityTokenHandlerConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md)項目。</span><span class="sxs-lookup"><span data-stu-id="48a39-110">In a configuration file, the issuer name registry can be specified by specifying the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element under the [&lt;securityTokenHandlerConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element.</span></span>  
  
 <span data-ttu-id="48a39-111">Windows Identity Foundation (WIF) 提供的實作<xref:System.IdentityModel.Tokens.IssuerNameRegistry>現成提供的類別：<xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>類別。</span><span class="sxs-lookup"><span data-stu-id="48a39-111">Windows Identity Foundation (WIF) provides an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class out of the box: the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class.</span></span> <span data-ttu-id="48a39-112">當您使用此實作中您可以受 RP 應用程式組態檔中指定的受信任簽發者清單[ &lt;trustedIssuers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md)項目，這是的子項目`<issuerNameRegistry>`項目時<xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>該項目會參考.class`type`屬性。</span><span class="sxs-lookup"><span data-stu-id="48a39-112">When you use this implementation you can specify the list of trusted issuers in the configuration file of the RP application under the [&lt;trustedIssuers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element, which is a child element of the `<issuerNameRegistry>` element when the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>.class is referenced in that element’s `type` attribute.</span></span> <span data-ttu-id="48a39-113">在下`<trustedIssuers>`元素，每個簽發者名稱會對應到應該用來驗證其簽章的 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="48a39-113">Under the `<trustedIssuers>` element, each issuer name is mapped to the X.509 certificate that should be used to verify its signature.</span></span>  
  
 <span data-ttu-id="48a39-114">若要建立自訂的簽發者名稱登錄，您必須覆寫<xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="48a39-114">To create a custom issuer name registry, you must override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="48a39-115">這個方法會傳回指定之安全性權杖的簽發者名稱。</span><span class="sxs-lookup"><span data-stu-id="48a39-115">This method returns the issuer name for the specified security token.</span></span> <span data-ttu-id="48a39-116">您可以選擇覆寫<xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=nameWithType>方法以提供 hinting 機制時擷取簽發者名稱和<xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A>方法，如果您想要提供適用於 Windows 的簽發者名稱語彙基元，是不同於<xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>。</span><span class="sxs-lookup"><span data-stu-id="48a39-116">You can optionally override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=nameWithType> method to provide a hinting mechanism when retrieving issuer names and the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> method if you want to provide an issuer name for Windows tokens that is different from <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</span></span> <span data-ttu-id="48a39-117">覆寫<xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A>方法讓您從組態檔初始化的簽發者名稱登錄。</span><span class="sxs-lookup"><span data-stu-id="48a39-117">Override the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method to enable your issuer name registry to be initialized from a configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48a39-118">下列程式碼顯示實作<xref:System.IdentityModel.Tokens.IssuerNameRegistry>類別只接受使用憑證主旨的簽發者"CN = localhost"。</span><span class="sxs-lookup"><span data-stu-id="48a39-118">The following code shows an implementation of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class that only accepts issuers that use certificates with subject "CN=localhost".</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="48a39-119">下列程式碼是只供說明。</span><span class="sxs-lookup"><span data-stu-id="48a39-119">The following code is for illustrative purposes only.</span></span> <span data-ttu-id="48a39-120">驗證主體名稱為基礎的憑證不是個不錯的做法。</span><span class="sxs-lookup"><span data-stu-id="48a39-120">Validating certificates based on subject name is not a good practice.</span></span> <span data-ttu-id="48a39-121">此程式碼不應在生產環境。</span><span class="sxs-lookup"><span data-stu-id="48a39-121">This code should not be used as is in production.</span></span>  
  
 [!code-csharp[WifIssuerNameRegistry#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#1)]  
  
 <span data-ttu-id="48a39-122">以下範例顯示 XML 設定受信任簽發者名稱登錄應用程式所需。</span><span class="sxs-lookup"><span data-stu-id="48a39-122">The following shows the XML necessary to configure an application with the trusted issuer name registry.</span></span>  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <issuerNameRegistry type="System.IdentityModel.Samples.TrustedIssuerNameRegistry, MyApp" />  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IssuerNameRegistry ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IssuerNameRegistry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="48a39-123">初始化 <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a39-123">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIssuerName">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="48a39-124">在衍生類別中覆寫時，會傳回指定的安全性權杖的簽發者名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a39-124">When overridden in a derived class, returns the issuer name for the specified security token.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48a39-125">安全性權杖處理常式正在處理語彙基元所呼叫的處理管線。</span><span class="sxs-lookup"><span data-stu-id="48a39-125">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="48a39-126">方法應該傳回 RP 應用程式的內容中的簽發者的唯一名稱。</span><span class="sxs-lookup"><span data-stu-id="48a39-126">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public abstract string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken">
          <span data-ttu-id="48a39-127">要為其傳回發行者名稱的安全性權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a39-127">The security token for which to return the issuer name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48a39-128">在衍生類別中覆寫時，會傳回指定的安全性權杖的簽發者名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a39-128">When overridden in a derived class, returns the name of the issuer of the specified security token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48a39-129">簽發者名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a39-129">The issuer name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48a39-130">實作應該傳回非 null 且非空白的字串，以識別可辨識的簽發者或 null 的字串，以識別無法辨識的簽發者。</span><span class="sxs-lookup"><span data-stu-id="48a39-130">Implementations should return a non-null and non-empty string to identify a recognized issuer, or a null string to identify an unrecognized issuer.</span></span>  
  
 <span data-ttu-id="48a39-131">安全性權杖處理常式正在處理語彙基元所呼叫的處理管線。</span><span class="sxs-lookup"><span data-stu-id="48a39-131">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="48a39-132">方法應該傳回 RP 應用程式的內容中的簽發者的唯一名稱。</span><span class="sxs-lookup"><span data-stu-id="48a39-132">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48a39-133">下列程式碼會示範<xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A>簽發者名稱登錄的方法。</span><span class="sxs-lookup"><span data-stu-id="48a39-133">The following code shows the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> method for an issuer name registry.</span></span> <span data-ttu-id="48a39-134">完整範例位於<xref:System.IdentityModel.Tokens.IssuerNameRegistry>類別概觀主題。</span><span class="sxs-lookup"><span data-stu-id="48a39-134">The full sample is in the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class overview topic.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="48a39-135">下列程式碼是只供說明。</span><span class="sxs-lookup"><span data-stu-id="48a39-135">The following code is for illustrative purposes only.</span></span> <span data-ttu-id="48a39-136">驗證主體名稱為基礎的憑證不是個不錯的做法。</span><span class="sxs-lookup"><span data-stu-id="48a39-136">Validating certificates based on subject name is not a good practice.</span></span> <span data-ttu-id="48a39-137">此程式碼不應在生產環境。</span><span class="sxs-lookup"><span data-stu-id="48a39-137">This code should not be used as is in production.</span></span>  
  
 [!code-csharp[WifIssuerNameRegistry#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken, System::String ^ requestedIssuerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="requestedIssuerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="securityToken">
          <span data-ttu-id="48a39-138">要為其傳回發行者名稱的安全性權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a39-138">The security token for which to return the issuer name.</span>
          </span>
        </param>
        <param name="requestedIssuerName">
          <span data-ttu-id="48a39-139">要在要求中考量的簽發者名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a39-139">An issuer name to consider in the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48a39-140">在衍生類別中覆寫時，會傳回指定的安全性權杖的簽發者名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a39-140">When overridden in a derived class, returns the name of the issuer of the specified security token.</span>
          </span>
          <span data-ttu-id="48a39-141">在決定要傳回之簽發者名稱時可能會考慮指定的簽發者名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a39-141">The specified issuer name may be considered in determining the issuer name to return.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48a39-142">簽發者名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a39-142">The issuer name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48a39-143">預設實作會忽略`requestedIssuerName`參數，並直接呼叫<xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="48a39-143">The default implementation ignores the `requestedIssuerName` parameter and simply calls the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="48a39-144">安全性權杖處理常式正在處理語彙基元所呼叫的處理管線。</span><span class="sxs-lookup"><span data-stu-id="48a39-144">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="48a39-145">方法應該傳回 RP 應用程式的內容中的簽發者的唯一名稱。</span><span class="sxs-lookup"><span data-stu-id="48a39-145">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWindowsIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetWindowsIssuerName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetWindowsIssuerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWindowsIssuerName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetWindowsIssuerName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="48a39-146">傳回要用於 Windows 宣告的預設簽發者名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a39-146">Returns the default issuer name to be used for Windows claims.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48a39-147">Windows 宣告預設簽發者名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a39-147">The default issuer name for Windows claims.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48a39-148">預設實作會傳回 <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>。</span><span class="sxs-lookup"><span data-stu-id="48a39-148">The default implementation returns <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</span></span>  
  
 <span data-ttu-id="48a39-149">安全性權杖處理常式正在處理語彙基元所呼叫的處理管線。</span><span class="sxs-lookup"><span data-stu-id="48a39-149">Called from the processing pipeline by the security token handler that is processing the token.</span></span> <span data-ttu-id="48a39-150">方法應該傳回 RP 應用程式的內容中的簽發者的唯一名稱。</span><span class="sxs-lookup"><span data-stu-id="48a39-150">The method should return a unique name for the issuer within the context of the RP application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">
          <span data-ttu-id="48a39-151">組態 XML 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a39-151">The configuration XML elements.</span>
          </span>
          <span data-ttu-id="48a39-152">清單中的每個節點的型別為 <see cref="T:System.Xml.XmlElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a39-152">Each node in the list is of type <see cref="T:System.Xml.XmlElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48a39-153">在衍生類別中覆寫時，從 XML 載入自訂組態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48a39-153">When overridden in a derived class, loads custom configuration from XML.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48a39-154"><xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A>設定基礎結構會呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="48a39-154">The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> method is called by the configuration infrastructure.</span></span> <span data-ttu-id="48a39-155">呼叫這個方法時，`nodelist`會包含最上層子項目的[ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)從組態檔項目。</span><span class="sxs-lookup"><span data-stu-id="48a39-155">When this method is called, the `nodelist` will contain the top-level child elements of the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element from the configuration file.</span></span> <span data-ttu-id="48a39-156">每一種可能，接著，會包含屬性或子項目，視您為您衍生的類別定義組態結構描述。</span><span class="sxs-lookup"><span data-stu-id="48a39-156">Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</span></span>  
  
 <span data-ttu-id="48a39-157">預設實作會擲回<xref:System.NotImplementedException>。</span><span class="sxs-lookup"><span data-stu-id="48a39-157">The default implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="48a39-158">覆寫此方法以啟用您的簽發者名稱登錄從組態檔的初始化衍生類別中。</span><span class="sxs-lookup"><span data-stu-id="48a39-158">Override this method in your derived class to enable initialization of your issuer name registry from a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>