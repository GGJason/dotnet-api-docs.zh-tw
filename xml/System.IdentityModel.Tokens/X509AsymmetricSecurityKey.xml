<Type Name="X509AsymmetricSecurityKey" FullName="System.IdentityModel.Tokens.X509AsymmetricSecurityKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b95330e164f87ecbdbada249242c9c239c157364" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30419242" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class X509AsymmetricSecurityKey : System.IdentityModel.Tokens.AsymmetricSecurityKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509AsymmetricSecurityKey extends System.IdentityModel.Tokens.AsymmetricSecurityKey" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" />
  <TypeSignature Language="VB.NET" Value="Public Class X509AsymmetricSecurityKey&#xA;Inherits AsymmetricSecurityKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509AsymmetricSecurityKey : System::IdentityModel::Tokens::AsymmetricSecurityKey" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.AsymmetricSecurityKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 X.509 憑證的非對稱金鑰。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509AsymmetricSecurityKey (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509AsymmetricSecurityKey(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">表示 X.509 憑證的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />。</param>
        <summary>使用指定的 X.509 憑證，初始化 <see cref="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public override byte[] DecryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecryptKey (algorithm As String, keyData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DecryptKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm">要用於解密金鑰的密碼編譯演算法。</param>
        <param name="keyData">包含加密金鑰的 <see cref="T:System.Byte" /> 陣列。</param>
        <summary>使用指定的密碼編譯演算法，解密指定的已加密金鑰。</summary>
        <returns>包含解密金鑰的 <see cref="T:System.Byte" /> 陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> 或 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> 欄位，即可指定演算法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">指定於建構函式中的 X.509 憑證沒有私密金鑰。  
  
 -或-  
  
 X.509 憑證有私密金鑰，但該金鑰不是用 <see cref="T:System.Security.Cryptography.RSA" /> 演算法產生的。  
  
 -或-  
  
 X.509 憑證有私密金鑰，且該金鑰是用 <see cref="T:System.Security.Cryptography.RSA" /> 演算法產生的，但是 <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm" /> 屬性是 <see langword="null" />。  
  
 -或-  
  
 不支援 <paramref name="algorithm" /> 參數。 支援的演算法為 <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /> 和 <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public override byte[] EncryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EncryptKey (algorithm As String, keyData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ EncryptKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm">要用於加密金鑰的密碼編譯演算法。</param>
        <param name="keyData">
          <see cref="T:System.Byte" /> 陣列，其中包含要加密的金鑰。</param>
        <summary>使用指定的密碼編譯演算法，加密指定的已加密金鑰。</summary>
        <returns>包含加密金鑰的 <see cref="T:System.Byte" /> 陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> 或 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> 欄位，即可指定演算法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">指定於建構函式中的 X.509 憑證有公開金鑰，但該金鑰不是使用 <see cref="T:System.Security.Cryptography.RSA" /> 演算法產生的。  
  
 -或-  
  
 不支援 <paramref name="algorithm" /> 參數。 支援的演算法為 <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /> 和 <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm (string algorithm, bool privateKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm(string algorithm, bool privateKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAsymmetricAlgorithm (algorithm As String, privateKey As Boolean) As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::AsymmetricAlgorithm ^ GetAsymmetricAlgorithm(System::String ^ algorithm, bool privateKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="privateKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="algorithm">要建立的非對稱演算法。</param>
        <param name="privateKey">
          如果需要使用私密金鑰來建立演算法，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>取得指定的非對稱密碼編譯演算法。</summary>
        <returns>
          <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />，表示指定的非對稱密碼編譯演算法。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>、<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> 或 <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> 欄位，即可指定 `algorithm` 參數。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="privateKey" /> 是 <see langword="true" />，而且建構函式所指定的 X.509 憑證沒有私密金鑰。  
  
 -或-  
  
 <paramref name="algorithm" /> 是 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />，而且建構函式中所指定 X.509 憑證之公開金鑰或私密金鑰的類型不是 <see cref="T:System.Security.Cryptography.DSA" />。  
  
 -或-  
  
 <paramref name="algorithm" /> 是 <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />、<see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />、<see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> 或 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />，而且建構函式中所指定 X.509 憑證之公開金鑰或私密金鑰的類型不是 <see cref="T:System.Security.Cryptography.RSA" />。  
  
 -或-  
  
 不支援 <paramref name="algorithm" />。 支援的演算法為 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />、<see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />、<see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />、<see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> 和 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashAlgorithmForSignature">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashAlgorithmForSignature (algorithm As String) As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::HashAlgorithm ^ GetHashAlgorithmForSignature(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">雜湊演算法。</param>
        <summary>取得用來產生數位簽章之雜湊的密碼編譯演算法。</summary>
        <returns>
          <see cref="T:System.Security.Cryptography.HashAlgorithm" />，它會產生數位簽章的雜湊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>、<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> 或 <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> 欄位，即可指定 `algorithm` 參數。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          不支援 <paramref name="algorithm" />。 支援的演算法為 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />、<see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> 和 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureDeformatter">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSignatureDeformatter (algorithm As String) As AsymmetricSignatureDeformatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::AsymmetricSignatureDeformatter ^ GetSignatureDeformatter(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricSignatureDeformatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">要取得其執行個體之數位簽章的變形項演算法。</param>
        <summary>取得數位簽章的變形項演算法。</summary>
        <returns>
          <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />，表示數位簽章的變形項演算法。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>、<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> 或 <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> 欄位，即可指定 `algorithm` 參數。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="algorithm" /> 是 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />，而且建構函式中所指定 X.509 憑證之公開金鑰的類型不是 <see cref="T:System.Security.Cryptography.DSA" />。  
  
 -或-  
  
 <paramref name="algorithm" /> 是 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> 或 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />，而且建構函式中所指定 X.509 憑證之公開金鑰的類型不是 <see cref="T:System.Security.Cryptography.RSA" />。  
  
 -或-  
  
 不支援 <paramref name="algorithm" />。 支援的演算法為 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />、  
  
 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />和<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureFormatter">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSignatureFormatter (algorithm As String) As AsymmetricSignatureFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::AsymmetricSignatureFormatter ^ GetSignatureFormatter(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricSignatureFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">要取得其執行個體之數位簽章的格式器演算法。</param>
        <summary>取得數位簽章的格式器演算法。</summary>
        <returns>
          <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" />，表示數位簽章的格式器演算法。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>、<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> 或 <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> 欄位，即可指定 `algorithm` 參數。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">指定於建構函式中的 X.509 憑證沒有私密金鑰。  
  
 -或-  
  
 <paramref name="algorithm" /> 是 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />，而且建構函式中所指定 X.509 憑證之私密金鑰的類型不是 <see cref="T:System.Security.Cryptography.DSA" />。  
  
 -或-  
  
 <paramref name="algorithm" /> 是 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> 或 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />，而且建構函式中所指定 X.509 憑證之私密金鑰的類型不是 <see cref="T:System.Security.Cryptography.RSA" />。  
  
 -或-  
  
 不支援 <paramref name="algorithm" />。 支援的演算法為 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />、  
  
 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />和<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /></exception>
      </Docs>
    </Member>
    <Member MemberName="HasPrivateKey">
      <MemberSignature Language="C#" Value="public override bool HasPrivateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasPrivateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function HasPrivateKey () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool HasPrivateKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得值，這個值會指出是否可使用私密金鑰。</summary>
        <returns>
          如果可以使用私密金鑰，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsAsymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAsymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsAsymmetricAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsAsymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">密碼編譯演算法。</param>
        <summary>取得值，這個值會指出指定的演算法是否會使用非對稱金鑰。</summary>
        <returns>
          如果指定的演算法是 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" /> 或 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsSupportedAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSupportedAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSupportedAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSupportedAlgorithm(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">密碼編譯演算法。</param>
        <summary>取得值，這個值會指出這個類別是否支援指定的演算法。</summary>
        <returns>
          如果指定的演算法是 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />、<see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />、<see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />、<see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> 或 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />，而且公開金鑰的類型正確，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當下列任一情形發生時，<xref:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm%2A> 方法會傳回 `true`：  
  
-   `algorithm` 參數是 <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>，而且建構函式中所指定 X.509 憑證之公開金鑰的類型不是 <xref:System.Security.Cryptography.DSA>。  
  
-   `algorithm` 參數是 <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>、<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>、<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> 或 <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature>，而且建構函式中所指定 X.509 憑證之公開金鑰的類型不是 <xref:System.Security.Cryptography.RSA>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsSymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSymmetricAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">密碼編譯演算法。</param>
        <summary>取得值，這個值會指出指定的演算法是否會使用對稱金鑰。</summary>
        <returns>
          如果指定的演算法是 <see langword="true" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" /> 或 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />，則為 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與 X.509 憑證關聯的公開金鑰大小 (以位元為單位)。</summary>
        <value>與 X.509 憑證關聯的公開金鑰大小 (以位元為單位)。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>