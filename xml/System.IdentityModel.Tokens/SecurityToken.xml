<Type Name="SecurityToken" FullName="System.IdentityModel.Tokens.SecurityToken">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4f9819e6f25288716c0513dfee0ef4b2493e46fe" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48613914" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityToken extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityToken abstract" />
  <TypeSignature Language="F#" Value="type SecurityToken = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示用來實作所有安全性權杖的基底類別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用安全性權杖，提供驗證認證或保護訊息。  
  
 安全性權杖可以是用來提供驗證認證，密碼編譯金鑰的內容，或者，在安全性權杖的情況下發出安全性權杖服務 (STS)，關於主體的宣告集合。 所有的安全性權杖衍生自<xref:System.IdentityModel.Tokens.SecurityToken>類別。  
  
 從.NET 4.5 開始，Windows Identity Foundation (WIF) 完全整合至.NET Framework 和 WIF 所公開的類別會處理您的程式碼中的安全性權杖的慣用的方法。 在 WIF 中會序列化和還原序列化安全性權杖，並從其 XML 表示法是驗證及使用衍生自類別<xref:System.IdentityModel.Tokens.SecurityTokenHandler>基底類別。 不只確保權杖有效，但也會傳回驗證權杖包含<xref:System.Security.Claims.ClaimsIdentity>從可用於進行驗證和授權決策的語彙基元的執行個體。 <xref:System.Security.Claims.ClaimsIdentity>語彙基元處理常式的實作來建構<xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A>方法，從 在權杖中，從內建權杖的宣告型別所包含的宣告。  
  
 支援下列類型的安全性權杖的 WIF 船：  
  
-   <xref:System.IdentityModel.Tokens.Saml2SecurityToken>： 表示以 SAML 2.0 判斷提示為基礎的安全性權杖。 這個語彙基元的型別通常會發出安全性權杖的服務，以回應在 Ws-trust 或 WS-同盟安全性權杖要求 (RST)。  
  
-   <xref:System.IdentityModel.Tokens.SamlSecurityToken>： 表示以 SAML 1.1 判斷提示為基礎的安全性權杖。 這個語彙基元的型別通常會發出安全性權杖的服務，以回應在 Ws-trust 或 WS-同盟安全性權杖要求 (RST)。  
  
-   <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> 和<xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>： 表示已接收或傳送 SOAP 訊息中的 Kerberos 票證為基礎的安全性權杖  
  
-   <xref:System.IdentityModel.Tokens.RsaSecurityToken>： 表示會使用 RSA 演算法建立的金鑰為基礎的安全性權杖。  
  
-   <xref:System.IdentityModel.Tokens.SessionSecurityToken>： 表示包含工作階段的相關資訊的安全性權杖。  
  
-   <xref:System.IdentityModel.Tokens.UserNameSecurityToken>： 表示以使用者名稱和密碼為基礎的安全性權杖。  
  
-   <xref:System.IdentityModel.Tokens.WindowsSecurityToken>： 表示 Windows 網域或使用者帳戶的身分識別為基礎的安全性權杖。  
  
-   <xref:System.IdentityModel.Tokens.X509SecurityToken>： 表示以 X.509 憑證為基礎的安全性權杖。  
  
-   <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>： 表示對應至 Windows 網域使用者或本機電腦使用者帳戶的 X.509 憑證為基礎的安全性權杖。  
  
 兩個其他的安全性權杖的類別、<xref:System.IdentityModel.Tokens.GenericXmlSecurityToken>和<xref:System.IdentityModel.Tokens.EncryptedSecurityToken>，可用來協助處理一般案例。  
  
 更廣泛地說的安全性語彙基元可分成三大類：  
  
-   權杖包含或參考密碼編譯金鑰材料。 比方說<xref:System.IdentityModel.Tokens.RsaSecurityToken>和<xref:System.IdentityModel.Tokens.X509SecurityToken>類型通常用於此目的。  
  
-   代表已驗證的使用者認證的權杖。 例如， <xref:System.IdentityModel.Tokens.UserNameSecurityToken>， <xref:System.IdentityModel.Tokens.WindowsSecurityToken>，並在使用憑證，驗證使用者的情況下<xref:System.IdentityModel.Tokens.X509SecurityToken>型別。  
  
-   在使用 Ws-trust 或 WS-同盟通訊協定的安全性權杖的要求回應中安全性權杖服務 (STS) 所發出的權杖。 這些通常會傳回在`wst:RequestSecurityTokenResponse`XML 片段。 <xref:System.IdentityModel.Tokens.Saml2SecurityToken>和<xref:System.IdentityModel.Tokens.SamlSecurityToken>類型最常用於代表這些語彙基元。  
  
 一種特殊的權杖類型， <xref:System.IdentityModel.Tokens.SessionSecurityToken>，包含在主動或被動案例中使用工作階段時重新建立主體所需的資訊。  
  
 若要將功能加入現有的語彙基元型別，您可以衍生自特定的類型和其相關聯的權杖處理常式，以支援您新增至權杖的任何新項目。 若要加入新的權杖類型的支援，您可以直接衍生自<xref:System.IdentityModel.Tokens.SecurityToken>類別。 當您這樣做時，您也必須建立權杖處理常式類別衍生自<xref:System.IdentityModel.Tokens.SecurityTokenHandler>類別。 根據您的權杖的方式使用，您可能也需要建立自訂的權杖解析程式，藉由衍生自<xref:System.IdentityModel.Tokens.IssuerTokenResolver>藉由衍生自類別也為一個或多個自訂的金鑰識別碼子句型別<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>類別。  
  
   
  
## Examples  
 中所使用的程式碼範例<xref:System.IdentityModel.Tokens.SecurityToken>取自主題`Custom Token`範例。 此範例提供自訂的類別，可讓處理的簡單 Web 權杖 (SWT)。 它包含的實作`SimpleWebToken`類別和`SimpleWebTokenHandler`類別，以及其他支援 SWT 權杖的類別。 如需此範例，並提供其他範例的 WIF 以及其下載位置，請參閱[WIF 程式碼範例索引](~/docs/framework/security/wif-code-sample-index.md)。 下列程式碼顯示實作`SimpleWebToken`類別。 此類別會擴充<xref:System.IdentityModel.Tokens.SecurityToken>。  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>您必須覆寫<see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />， <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />， <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />，和<see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />屬性。 <see cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />， <see cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />， <see cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />，以及<see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />方法都支援型別的金鑰識別碼<see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />。 您必須覆寫這些方法來支援其他金鑰識別項型別衍生類別中。</para>
    </block>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
    <altmember cref="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
    <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityToken ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityToken();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>由衍生類別的建構函式呼叫，以初始化 <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> 類別。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanCreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanCreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual bool CanCreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CanCreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />，其中指定要建立的金鑰識別碼。</typeparam>
        <summary>取得值，這個值會指出這個安全性權杖是否能夠建立指定的金鑰識別碼。</summary>
        <returns>當 <see langword="true" /> 的型別為 <paramref name="T" /> 時，則為 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> 方法，決定安全性權杖是否可以建立特定的金鑰識別碼。 呼叫 <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> 方法，以建立金鑰識別碼。  
  
 預設實作會支援型別的金鑰識別碼子句<xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="CreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T CreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T CreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual T CreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />，其中指定要建立的金鑰識別碼。</typeparam>
        <summary>建立指定的金鑰識別碼子句。</summary>
        <returns>
          <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />，它是此安全性權杖的金鑰識別碼子句。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> 方法，決定安全性權杖是否可以建立特定的金鑰識別碼。 呼叫 <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> 方法，以建立金鑰識別碼。  
  
 預設實作會支援型別的金鑰識別碼子句<xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>。 如果型別的金鑰識別碼子句<xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>無法建立<xref:System.NotSupportedException>就會擲回。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得安全性權杖的唯一識別碼。</summary>
        <value>安全性權杖的唯一識別碼。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般來說，當安全性權杖已序列化為 XML 時，安全性權杖的 `Id` 屬性 (Attribute) 就會設定為 <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> 屬性 (Property) 的值。  
  
   
  
## Examples  
 中所使用的程式碼範例<xref:System.IdentityModel.Tokens.SecurityToken>取自主題`Custom Token`範例。 此範例提供自訂的類別，可讓處理的簡單 Web 權杖 (SWT)。 它包含的實作`SimpleWebToken`類別和`SimpleWebTokenHandler`類別，以及其他支援 SWT 權杖的類別。 如需此範例，並提供其他範例的 WIF 以及其下載位置，請參閱[WIF 程式碼範例索引](~/docs/framework/security/wif-code-sample-index.md)。 下列程式碼顯示的覆寫<xref:System.IdentityModel.Tokens.SecurityToken.Id%2A>屬性。  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>您必須覆寫<see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />屬性。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="MatchesKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause skiClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">要與這個執行個體做比較的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</param>
        <param name="skiClause">要與這個執行個體做比較的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</param>
        <summary>傳回值，這個值會指出這個執行個體的金鑰識別碼是否能夠解析為指定的金鑰識別碼。</summary>
        <returns>如果 <see langword="true" /> 是 <paramref name="keyIdentifierClause" />，並且擁有與 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> 屬性相同的唯一識別碼，則為 <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設實作會支援型別的金鑰識別碼子句 <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="ResolveKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause skiClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">要取得之金鑰的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</param>
        <param name="skiClause">要取得之金鑰的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</param>
        <summary>取得指定之金鑰識別碼子句的金鑰。</summary>
        <returns>表示金鑰的 <see cref="T:System.IdentityModel.Tokens.SecurityKey" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> 方法會呼叫 <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A>，先判定指定的金鑰識別碼子句是否與這個執行個體相同。  
  
 預設實作會傳回第一個項目<xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A>集合如果不是空的集合，而且如果<xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A>會傳回`true`; 否則它會傳回`null`。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當您繼承自 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />，並實作 <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> 方法且無法解析 <paramref name="keyIdentifierClause" /> 時，會傳回 <see langword="null" />。 例外狀況應不會從 <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> 方法擲回。</para>
        </block>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與安全性權杖相關聯的密碼編譯金鑰。</summary>
        <value>型別為 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see cref="T:System.IdentityModel.Tokens.SecurityKey" />，其中包含與安全性權杖相關聯之金鑰的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A>屬性來設定這個安全性權杖，來保護權杖或 SOAP 訊息的密碼編譯金鑰。 索引鍵可用，以及其他項目，來以數位方式簽署或加密權杖或 SOAP 訊息。  
  
   
  
## Examples  
 中所使用的程式碼範例<xref:System.IdentityModel.Tokens.SecurityToken>取自主題`Custom Token`範例。 此範例提供自訂的類別，可讓處理的簡單 Web 權杖 (SWT)。 它包含的實作`SimpleWebToken`類別和`SimpleWebTokenHandler`類別，以及其他支援 SWT 權杖的類別。 如需此範例，並提供其他範例的 WIF 以及其下載位置，請參閱[WIF 程式碼範例索引](~/docs/framework/security/wif-code-sample-index.md)。 下列程式碼顯示的覆寫<xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A>屬性。  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>您必須覆寫<see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />屬性。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個安全性權杖有效的第一個瞬間。</summary>
        <value>
          <see cref="T:System.DateTime" />，表示這個安全性權杖有效的第一個瞬間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> 和 <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> 屬性，即可判定 <xref:System.IdentityModel.Tokens.SecurityToken> 權杖有效的期間。 <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> 和 <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> 屬性分別代表安全性權杖有效時的第一個和最後一個瞬間。  
  
   
  
## Examples  
 中所使用的程式碼範例<xref:System.IdentityModel.Tokens.SecurityToken>取自主題`Custom Token`範例。 此範例提供自訂的類別，可讓處理的簡單 Web 權杖 (SWT)。 它包含的實作`SimpleWebToken`類別和`SimpleWebTokenHandler`類別，以及其他支援 SWT 權杖的類別。 如需此範例，並提供其他範例的 WIF 以及其下載位置，請參閱[WIF 程式碼範例索引](~/docs/framework/security/wif-code-sample-index.md)。 下列程式碼顯示的覆寫<xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>屬性。  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#6)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>您必須覆寫<see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />屬性。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個安全性權杖有效的最後一個瞬間。</summary>
        <value>
          <see cref="T:System.DateTime" />，表示這個安全性權杖有效的最後一個瞬間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> 和 <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> 屬性，即可判定 <xref:System.IdentityModel.Tokens.SecurityToken> 權杖有效的期間。 <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> 和 <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> 屬性分別代表安全性權杖有效時的第一個和最後一個瞬間。  
  
   
  
## Examples  
 中所使用的程式碼範例<xref:System.IdentityModel.Tokens.SecurityToken>取自主題`Custom Token`範例。 此範例提供自訂的類別，可讓處理的簡單 Web 權杖 (SWT)。 它包含的實作`SimpleWebToken`類別和`SimpleWebTokenHandler`類別，以及其他支援 SWT 權杖的類別。 如需此範例，並提供其他範例的 WIF 以及其下載位置，請參閱[WIF 程式碼範例索引](~/docs/framework/security/wif-code-sample-index.md)。 下列程式碼顯示的覆寫<xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>屬性。  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#7)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>您必須覆寫<see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />屬性。</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>