<Type Name="SamlAttribute" FullName="System.IdentityModel.Tokens.SamlAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1fb817e86397d258ab584c0e933a5aabed9b7c9a" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55366216" /></Metadata><TypeSignature Language="C#" Value="public class SamlAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SamlAttribute extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SamlAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SamlAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SamlAttribute" />
  <TypeSignature Language="F#" Value="type SamlAttribute = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示與 <see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /> 之主體關聯的屬性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlAttribute> 類別會對應到已在 OASIS SAML 1.1 規格中定義之 `<saml:Attribute>` XML 項目。  
  
 <xref:System.IdentityModel.Tokens.SamlAttribute> 執行個體會包含 <xref:System.IdentityModel.Claims.Rights.PossessProperty%2A> 之主體的 <xref:System.IdentityModel.Tokens.SamlAttributeStatement>宣告。 例如，<xref:System.IdentityModel.Tokens.SamlAttribute> 可能會包含 `Over21` 宣告，這個宣告的型別會指定於 <xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A> 屬性中，而宣告的資源會指定成為在 <xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A> 屬性中之集合的一個成員。 當呼叫 <xref:System.IdentityModel.Tokens.SamlStatement.CreatePolicy%2A> 方法時，這個 `Over21` 宣告會加入 <xref:System.IdentityModel.Tokens.SamlAttributeStatement> 傳回的授權原則中。 當 <xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A> 屬性包含多個項目時，則每個項目都會傳回一個宣告。  
  
 在 SAML 物件階層架構中的 <xref:System.IdentityModel.Tokens.SamlAttribute> 位置是：  
  
 <xref:System.IdentityModel.Tokens.SamlSecurityToken>  
  
 <xref:System.IdentityModel.Tokens.SamlAssertion>  
  
 <xref:System.IdentityModel.Tokens.SamlAttributeStatement>  
  
 <xref:System.IdentityModel.Tokens.SamlAttribute>  
  
   
  
## Examples  
 [!code-csharp[SamlAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/samlattribute/cs/source.cs#1)]
 [!code-vb[SamlAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/samlattribute/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SamlAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlAttribute (System.IdentityModel.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.IdentityModel.Claims.Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SamlAttribute(System::IdentityModel::Claims::Claim ^ claim);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SamlAttribute : System.IdentityModel.Claims.Claim -&gt; System.IdentityModel.Tokens.SamlAttribute" Usage="new System.IdentityModel.Tokens.SamlAttribute claim" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claim" Type="System.IdentityModel.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim"><see cref="T:System.IdentityModel.Claims.Claim" />，表示 <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> 安全性權杖主體的屬性。</param>
        <summary>使用指定的宣告，初始化 <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式 (Constructor)，即可將宣告轉換為 SAML 屬性。 為了要轉換為 SAML 屬性 (Attribute)，<xref:System.IdentityModel.Claims.Claim.Right%2A> 屬性 (Property) 必須是 <xref:System.IdentityModel.Claims.Rights.PossessProperty%2A>、<xref:System.IdentityModel.Claims.Claim.Resource%2A> 屬性 (Property) 的型別必須是 <xref:System.String>，而且 <xref:System.IdentityModel.Claims.Claim.ClaimType%2A> 屬性 (Property) 必須使用 `namespace/name` 格式。  
  
 下表指定 `claim` 參數會將 <xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>、<xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A> 以及 <xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A> 等屬性設定成哪些值。  
  
|屬性|用來設定屬性的 `claim` 參數屬性。|  
|--------------|----------------------------------------------------------------|  
|<xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>|<xref:System.IdentityModel.Claims.Claim.Resource%2A> 屬性的值會加入集合中。|  
|<xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>|<xref:System.IdentityModel.Claims.Claim.ClaimType%2A> 屬性中最後一個 '/' 字元之後的字串部分。|  
|<xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A>|<xref:System.IdentityModel.Claims.Claim.ClaimType%2A> 屬性中最後一個 '/' 字元之前的字串部分。|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claim" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.IdentityModel.Claims.Claim.Resource" /> 的 <paramref name="claim" /> 屬性的型別不是 <see cref="T:System.String" />。  
  
-或- 
<see cref="P:System.IdentityModel.Claims.Claim.Right" /> 的 <paramref name="claim" /> 屬性不是 <see cref="P:System.IdentityModel.Claims.Rights.PossessProperty" />。  
  
-或- 
<see cref="P:System.IdentityModel.Claims.Claim.ClaimType" /> 的 <paramref name="claim" /> 屬性沒有 '/' 字元，或是此字元位於第一個或最後一個索引位置。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlAttribute (string attributeNamespace, string attributeName, System.Collections.Generic.IEnumerable&lt;string&gt; attributeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attributeNamespace, string attributeName, class System.Collections.Generic.IEnumerable`1&lt;string&gt; attributeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeNamespace As String, attributeName As String, attributeValues As IEnumerable(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SamlAttribute(System::String ^ attributeNamespace, System::String ^ attributeName, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ attributeValues);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SamlAttribute : string * string * seq&lt;string&gt; -&gt; System.IdentityModel.Tokens.SamlAttribute" Usage="new System.IdentityModel.Tokens.SamlAttribute (attributeNamespace, attributeName, attributeValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeNamespace" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValues" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="attributeNamespace">XML 命名空間，其中定義了 <paramref name="attributeName" /> 參數。</param>
        <param name="attributeName">SAML 屬性的名稱。</param>
        <param name="attributeValues"><see cref="T:System.Collections.Generic.IEnumerable`1" />，其中包含 SAML 屬性的值。</param>
        <summary>使用指定的屬性名稱、XML 命名空間 (Namespace) 以及屬性值，初始化 <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表指定由這個建構函式之參數設定的屬性。  
  
|屬性|參數|  
|--------------|---------------|  
|<xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>|`attributeValues`|  
|<xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>|`attributeName`|  
|<xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A>|`attributeNamespace`|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="attributeNamespace" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="attributeName" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="attributeValues" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.IdentityModel.Claims.Claim.Resource" /> 的 <paramref name="claim" /> 屬性的型別不是 <see cref="T:System.String" />。  
  
-或- 
<see cref="P:System.IdentityModel.Claims.Claim.Right" /> 的 <paramref name="claim" /> 屬性不是 <see cref="P:System.IdentityModel.Claims.Rights.PossessProperty" />。  
  
-或- 
<see cref="P:System.IdentityModel.Claims.Claim.ClaimType" /> 的 <paramref name="claim" /> 屬性沒有 '/' 字元，或是此字元位於第一個或最後一個索引位置。</exception>
      </Docs>
    </Member>
    <Member MemberName="AttributeValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; AttributeValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AttributeValues" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAttribute.AttributeValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeValues As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ AttributeValues { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeValues : System.Collections.Generic.IList&lt;string&gt;" Usage="System.IdentityModel.Tokens.SamlAttribute.AttributeValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 SAML 屬性的屬性值集合。</summary>
        <value><see cref="T:System.Collections.Generic.IList`1" />，其中包含 SAML 屬性的屬性值集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SAML 屬性可能包含一個以上的屬性值。  
  
 <xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A> 屬性會對應到已在 Assertions and Protocol for the OASIS Security Assertion Markup Language (SAML) 規格中定義之 `<saml:AttributeValue>` 項目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeValueXsiType">
      <MemberSignature Language="C#" Value="public string AttributeValueXsiType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeValueXsiType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributeValueXsiType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AttributeValueXsiType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AttributeValueXsiType : string with get, set" Usage="System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 SAML 屬性中所包含值的 xsi:type。</summary>
        <value>包含 xsi:type 的字串。 預設為 <see cref="F:System.Security.Claims.ClaimValueTypes.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType%2A> 屬性 (Property) 會對應到已在 Assertions and Protocol for the OASIS Security Assertion Markup Language (SAML) 規格中定義之 `type` 項目的 `<saml:AttributeValue>` 屬性 (Attribute)。 這是必要屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">發生設定 <see langword="null" /> 或空白之值的嘗試。  
  
-或- 
嘗試設定格式錯誤的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Claims.Claim&gt; ExtractClaims ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Claims.Claim&gt; ExtractClaims() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAttribute.ExtractClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExtractClaims () As ReadOnlyCollection(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Claims::Claim ^&gt; ^ ExtractClaims();" />
      <MemberSignature Language="F#" Value="abstract member ExtractClaims : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Claims.Claim&gt;&#xA;override this.ExtractClaims : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Claims.Claim&gt;" Usage="samlAttribute.ExtractClaims " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得這個 SAML 屬性所表示的宣告集合。</summary>
        <returns>型別為 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see cref="T:System.IdentityModel.Claims.Claim" />，其中包含這個 SAML 屬性所表示的宣告集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlSecurityToken> 安全性權杖會使用 SAML 判斷提示 (Assertion) 來指定其宣告，而這種判斷指示可指定關於安全性權杖所表示主體的屬性。 使用 <xref:System.IdentityModel.Tokens.SamlAttribute.ExtractClaims%2A> 方法，即可將 SAML 屬性轉換成宣告集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.IdentityModel.Tokens.SamlAttribute.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值會指出這個執行個體的屬性是否是唯讀的。</summary>
        <value>如果這個執行個體的屬性是唯讀的，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 為了讓 <xref:System.IdentityModel.Tokens.SamlAttribute> 類別的這個執行個體變成唯讀的，此時會呼叫 <xref:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeReadOnly();" />
      <MemberSignature Language="F#" Value="member this.MakeReadOnly : unit -&gt; unit" Usage="samlAttribute.MakeReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使得這個執行個體成為唯讀的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當呼叫 <xref:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly%2A> 方法時，<xref:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly%2A> 屬性會設定為 `true`，而且將無法再設定這個執行個體的屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.IdentityModel.Tokens.SamlAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 SAML 屬性的名稱。</summary>
        <value>SAML 屬性的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 為了指定與這個 SAML 屬性 (Attribute) 關聯的值，此時會設定 <xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A> 屬性 (Property)。  
  
 <xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A> 屬性 (Property) 會對應到已在 Assertions and Protocol for the OASIS Security Assertion Markup Language (SAML) 規格中定義之 `AttributeName` 項目的 `<Attribute>` 屬性 (Attribute)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">系統會設定 <see cref="P:System.IdentityModel.Tokens.SamlAttribute.Name" /> 屬性，而 <see cref="P:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly" /> 屬性為 <see langword="true" />。</exception>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.IdentityModel.Tokens.SamlAttribute.Name" /> 屬性設定為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.IdentityModel.Tokens.SamlAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定其中定義了 SAML 屬性名稱的 XML 命名空間。</summary>
        <value>其中定義了 SAML 屬性名稱的 XML 命名空間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 為了設定 SAML 屬性 (Attribute) 的名稱，此時會設定 <xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A> 屬性 (Property)。  
  
 <xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A> 屬性 (Property) 會對應到已在 Assertions and Protocol for the OASIS Security Assertion Markup Language (SAML) 規格中定義之 `AttributeNamespace` 項目的 `<AttributeDesignator>` 屬性 (Attribute)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalIssuer">
      <MemberSignature Language="C#" Value="public string OriginalIssuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalIssuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer" />
      <MemberSignature Language="VB.NET" Value="Public Property OriginalIssuer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalIssuer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OriginalIssuer : string with get, set" Usage="System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定表示 SAML 屬性之 OriginalIssuer 的字串。</summary>
        <value>SAML 屬性的原始簽發者。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">發生設定空字串值的嘗試。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public virtual void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlDictionaryReader reader, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, class System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadXml(System::Xml::XmlDictionaryReader ^ reader, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoSerializer, System::IdentityModel::Selectors::SecurityTokenResolver ^ outOfBandTokenResolver);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlDictionaryReader reader, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoTokenSerializer, class System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAttribute.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadXml(System::Xml::XmlDictionaryReader ^ reader, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoTokenSerializer, System::IdentityModel::Selectors::SecurityTokenResolver ^ outOfBandTokenResolver);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ReadXml : System.Xml.XmlDictionaryReader * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; unit&#xA;override this.ReadXml : System.Xml.XmlDictionaryReader * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; unit" Usage="samlAttribute.ReadXml (reader, samlSerializer, keyInfoTokenSerializer, outOfBandTokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" Index="0" />
        <Parameter Name="samlSerializer" Type="System.IdentityModel.Tokens.SamlSerializer" Index="1" />
        <Parameter Name="keyInfoSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="keyInfoTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="outOfBandTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" Index="3" />
      </Parameters>
      <Docs>
        <param name="reader">要讀取 SAML 屬性的 <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
        <param name="samlSerializer"><see cref="T:System.IdentityModel.Tokens.SamlSerializer" />，它能夠讀取 SAML 規格中的 XML 項目。</param>
        <param name="keyInfoSerializer"><see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />，它會讀取數位簽章的 <see langword="KeyInfo" /> 子句。</param>
        <param name="keyInfoTokenSerializer"><see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />，它會讀取數位簽章的 <see langword="KeyInfo" /> 子句。</param>
        <param name="outOfBandTokenResolver"><see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />，它會判定建立數位簽章的安全性權杖。</param>
        <summary>從指定的 XML 讀取器讀取 SAML 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlAttribute.ReadXml%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Tokens.SamlSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 方法會設定 <xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>、<xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A> 以及 <xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A> 屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="samlSerializer" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><paramref name="reader" /> 會參考沒有 <see langword="AttributeName" /> 和 <see langword="AttributeNamespace" /> 屬性的 XML 項目。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public virtual void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlDictionaryWriter writer, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteXml(System::Xml::XmlDictionaryWriter ^ writer, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoSerializer);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoTokenSerializer);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlDictionaryWriter writer, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoTokenSerializer) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlAttribute.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteXml(System::Xml::XmlDictionaryWriter ^ writer, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoTokenSerializer);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member WriteXml : System.Xml.XmlDictionaryWriter * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer -&gt; unit&#xA;override this.WriteXml : System.Xml.XmlDictionaryWriter * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer -&gt; unit" Usage="samlAttribute.WriteXml (writer, samlSerializer, keyInfoTokenSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" Index="0" />
        <Parameter Name="samlSerializer" Type="System.IdentityModel.Tokens.SamlSerializer" Index="1" />
        <Parameter Name="keyInfoSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="keyInfoTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer">要寫入 SAML 屬性的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
        <param name="samlSerializer"><see cref="T:System.IdentityModel.Tokens.SamlSerializer" />，它能夠將 XML 項目寫入至 SAML 判斷提示。</param>
        <param name="keyInfoSerializer"><see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />，它可以寫入 <see langword="KeyInfo" /> 子句。</param>
        <param name="keyInfoTokenSerializer"><see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />，它可以寫入 <see langword="KeyInfo" /> 子句。</param>
        <summary>將 SAML 屬性寫入至指定的 XML 序列化程式。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="samlSerializer" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>