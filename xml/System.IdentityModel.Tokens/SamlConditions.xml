<Type Name="SamlConditions" FullName="System.IdentityModel.Tokens.SamlConditions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe4bb57f6267ed396050fda4dca23d227880c79a" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48722399" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SamlConditions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SamlConditions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SamlConditions" />
  <TypeSignature Language="VB.NET" Value="Public Class SamlConditions" />
  <TypeSignature Language="C++ CLI" Value="public ref class SamlConditions" />
  <TypeSignature Language="F#" Value="type SamlConditions = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示必須在評量 SAML 判斷提示之有效性時加以考量的一組條件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlSecurityToken> 安全性權杖會使用 SAML 判斷提示以及必須在評量 SAML 判斷提示之有效性時加以考量的一組條件，指定其宣告。 <xref:System.IdentityModel.Tokens.SamlConditions> 類別表示條件的集合。 其中一個條件範例為是否不得快取 SAML 判斷提示，此條件是用 <xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition> 類別來表示。  
  
 SAML 規格會定義兩個條件，並且允許擴充條件集合。 由 SAML 規格定義的兩個條件是 <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> 以及 <xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition>。 若要定義新的條件，請從 <xref:System.IdentityModel.Tokens.SamlCondition> 類別衍生一個類別。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />
    <altmember cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />
    <altmember cref="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlConditions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlConditions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SamlConditions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式會將 <xref:System.IdentityModel.Tokens.SamlConditions.IsReadOnly%2A> 屬性初始化為 `false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlConditions (DateTime notBefore, DateTime notOnOrAfter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime notBefore, valuetype System.DateTime notOnOrAfter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (notBefore As DateTime, notOnOrAfter As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SamlConditions(DateTime notBefore, DateTime notOnOrAfter);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SamlConditions : DateTime * DateTime -&gt; System.IdentityModel.Tokens.SamlConditions" Usage="new System.IdentityModel.Tokens.SamlConditions (notBefore, notOnOrAfter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="notBefore" Type="System.DateTime" />
        <Parameter Name="notOnOrAfter" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="notBefore">
          <see cref="T:System.DateTime" />，指定 SAML 判斷提示有效的最早瞬間。 設定 <see cref="P:System.IdentityModel.Tokens.SamlConditions.NotBefore" /> 屬性。</param>
        <param name="notOnOrAfter">
          <see cref="T:System.DateTime" />，指定 SAML 判斷提示過期的瞬間。 設定 <see cref="P:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter" /> 屬性。</param>
        <summary>使用 SAML 判斷提示有效的指定時間範圍，初始化 <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlConditions.NotBefore%2A> 和 <xref:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter%2A> 屬性會以 Coordinated Universal Time (UTC) 格式儲存。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlConditions (DateTime notBefore, DateTime notOnOrAfter, System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.SamlCondition&gt; conditions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime notBefore, valuetype System.DateTime notOnOrAfter, class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.Tokens.SamlCondition&gt; conditions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlCondition})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (notBefore As DateTime, notOnOrAfter As DateTime, conditions As IEnumerable(Of SamlCondition))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SamlConditions(DateTime notBefore, DateTime notOnOrAfter, System::Collections::Generic::IEnumerable&lt;System::IdentityModel::Tokens::SamlCondition ^&gt; ^ conditions);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SamlConditions : DateTime * DateTime * seq&lt;System.IdentityModel.Tokens.SamlCondition&gt; -&gt; System.IdentityModel.Tokens.SamlConditions" Usage="new System.IdentityModel.Tokens.SamlConditions (notBefore, notOnOrAfter, conditions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="notBefore" Type="System.DateTime" />
        <Parameter Name="notOnOrAfter" Type="System.DateTime" />
        <Parameter Name="conditions" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.Tokens.SamlCondition&gt;" />
      </Parameters>
      <Docs>
        <param name="notBefore">
          <see cref="T:System.DateTime" />，指定 SAML 判斷提示有效的最早瞬間。 設定 <see cref="P:System.IdentityModel.Tokens.SamlConditions.NotBefore" /> 屬性。</param>
        <param name="notOnOrAfter">
          <see cref="T:System.DateTime" />，指定 SAML 判斷提示過期的瞬間。 設定 <see cref="P:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter" /> 屬性。</param>
        <param name="conditions">型別為 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.IdentityModel.Tokens.SamlCondition" />，其中指定 SAML 判斷提示收件者必須在評量該判斷提示之有效性時加以考量的一組條件。 設定 <see cref="P:System.IdentityModel.Tokens.SamlConditions.Conditions" /> 屬性。</param>
        <summary>使用 SAML 判斷提示有效的指定時間範圍和條件，初始化 <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlConditions.NotBefore%2A> 和 <xref:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter%2A> 屬性會以 Coordinated Universal Time (UTC) 格式儲存。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="conditions" /> 包含的成員為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Conditions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.IdentityModel.Tokens.SamlCondition&gt; Conditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.IdentityModel.Tokens.SamlCondition&gt; Conditions" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlConditions.Conditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Conditions As IList(Of SamlCondition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::IdentityModel::Tokens::SamlCondition ^&gt; ^ Conditions { System::Collections::Generic::IList&lt;System::IdentityModel::Tokens::SamlCondition ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Conditions : System.Collections.Generic.IList&lt;System.IdentityModel.Tokens.SamlCondition&gt;" Usage="System.IdentityModel.Tokens.SamlConditions.Conditions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.IdentityModel.Tokens.SamlCondition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得必須在評量 SAML 判斷提示之有效性時加以考量的一組條件。</summary>
        <value>型別為 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.IdentityModel.Tokens.SamlCondition" />，其中指定 SAML 判斷提示收件者必須在評量該判斷提示之有效性時加以考量的一組條件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlConditions.Conditions%2A> 屬性會對應到已在 Assertions and Protocol for the OASIS Security Assertion Markup Language (SAML) 規格中定義之 `<saml:Conditions>` 項目。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SamlCondition" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlConditions.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.IdentityModel.Tokens.SamlConditions.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值會指出這個執行個體的屬性是否是唯讀的。</summary>
        <value>如果這個執行個體的屬性是唯讀的，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 為了讓 <xref:System.IdentityModel.Tokens.SamlConditions> 類別的這個執行個體變成唯讀的，此時會呼叫 <xref:System.IdentityModel.Tokens.SamlConditions.MakeReadOnly%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlConditions.MakeReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeReadOnly();" />
      <MemberSignature Language="F#" Value="member this.MakeReadOnly : unit -&gt; unit" Usage="samlConditions.MakeReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使得這個執行個體成為唯讀的。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當呼叫 <xref:System.IdentityModel.Tokens.SamlConditions.MakeReadOnly%2A> 方法時，<xref:System.IdentityModel.Tokens.SamlConditions.IsReadOnly%2A> 屬性會設定為 `true`，而且將無法再設定這個執行個體的屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotBefore">
      <MemberSignature Language="C#" Value="public DateTime NotBefore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotBefore" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlConditions.NotBefore" />
      <MemberSignature Language="VB.NET" Value="Public Property NotBefore As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotBefore { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.NotBefore : DateTime with get, set" Usage="System.IdentityModel.Tokens.SamlConditions.NotBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 SAML 判斷提示有效的最早瞬間。</summary>
        <value>
          <see cref="T:System.DateTime" />，指定 SAML 判斷提示有效的最早瞬間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlConditions.NotBefore%2A> 屬性 (Property) 會對應到已在 Assertions and Protocol for the OASIS Security Assertion Markup Language (SAML) 規格中定義之 `NotBefore` 項目的 `<saml:Conditions>` 屬性 (Attribute)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotOnOrAfter">
      <MemberSignature Language="C#" Value="public DateTime NotOnOrAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotOnOrAfter" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property NotOnOrAfter As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotOnOrAfter { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.NotOnOrAfter : DateTime with get, set" Usage="System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 SAML 判斷提示過期的最早瞬間。</summary>
        <value>
          <see cref="T:System.DateTime" />，指定 SAML 判斷提示過期的瞬間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlConditions.NotBefore%2A> 屬性 (Property) 會對應到已在 Assertions and Protocol for the OASIS Security Assertion Markup Language (SAML) 規格中定義之 `NotOnOrAfter` 項目的 `<saml:Conditions>` 屬性 (Attribute)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public virtual void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlDictionaryReader reader, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, class System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadXml(System::Xml::XmlDictionaryReader ^ reader, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoSerializer, System::IdentityModel::Selectors::SecurityTokenResolver ^ outOfBandTokenResolver);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlDictionaryReader reader, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoTokenSerializer, class System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlConditions.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadXml(System::Xml::XmlDictionaryReader ^ reader, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoTokenSerializer, System::IdentityModel::Selectors::SecurityTokenResolver ^ outOfBandTokenResolver);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ReadXml : System.Xml.XmlDictionaryReader * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; unit&#xA;override this.ReadXml : System.Xml.XmlDictionaryReader * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; unit" Usage="samlConditions.ReadXml (reader, samlSerializer, keyInfoTokenSerializer, outOfBandTokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" Index="0" />
        <Parameter Name="samlSerializer" Type="System.IdentityModel.Tokens.SamlSerializer" Index="1" />
        <Parameter Name="keyInfoSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="keyInfoTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="outOfBandTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" Index="3" />
      </Parameters>
      <Docs>
        <param name="reader">要讀取 <see cref="T:System.Xml.XmlDictionaryReader" /> 項目的 <see langword="&lt;saml:Conditions&gt;" />。</param>
        <param name="samlSerializer">
          <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />，它能夠從 SAML 授權陳述式讀取 SAML 規格中所定義的 XML 項目。</param>
        <param name="keyInfoSerializer">
          <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />，它會讀取數位簽章的 <see langword="KeyInfo" /> 子句。</param>
        <param name="keyInfoTokenSerializer">
          <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />，它會讀取數位簽章的 <see langword="KeyInfo" /> 子句。</param>
        <param name="outOfBandTokenResolver">
          <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />，它會判定建立數位簽章的安全性權杖。</param>
        <summary>從指定的 XML 讀取器讀取 <see langword="&lt;saml:Conditions&gt;" /> 項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlConditions.ReadXml%28System.Xml.XmlDictionaryReader%2CSystem.IdentityModel.Tokens.SamlSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> 方法會設定下列屬性：  
  
-   <xref:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter%2A>  
  
-   <xref:System.IdentityModel.Tokens.SamlConditions.NotBefore%2A>  
  
-   <xref:System.IdentityModel.Tokens.SamlConditions.Conditions%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> 是 <see langword="null" />  
  
-或- 
 <paramref name="samlSerializer" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public virtual void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlDictionaryWriter writer, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteXml(System::Xml::XmlDictionaryWriter ^ writer, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoSerializer);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoTokenSerializer);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlDictionaryWriter writer, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoTokenSerializer) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlConditions.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteXml(System::Xml::XmlDictionaryWriter ^ writer, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoTokenSerializer);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member WriteXml : System.Xml.XmlDictionaryWriter * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer -&gt; unit&#xA;override this.WriteXml : System.Xml.XmlDictionaryWriter * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer -&gt; unit" Usage="samlConditions.WriteXml (writer, samlSerializer, keyInfoTokenSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" Index="0" />
        <Parameter Name="samlSerializer" Type="System.IdentityModel.Tokens.SamlSerializer" Index="1" />
        <Parameter Name="keyInfoSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="keyInfoTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer">要寫入 <see cref="T:System.Xml.XmlDictionaryWriter" /> 項目的 <see langword="&lt;saml:Conditions&gt;" />。</param>
        <param name="samlSerializer">
          <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />，它能夠將 XML 項目寫入至 SAML 判斷提示。</param>
        <param name="keyInfoSerializer">
          <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />，它可以寫入 <see langword="KeyInfo" /> 子句。</param>
        <param name="keyInfoTokenSerializer">
          <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />，它可以寫入 <see langword="KeyInfo" /> 子句。</param>
        <summary>將 <see langword="&lt;saml:Conditions&gt;" /> 項目寫入至指定的 XML 序列化程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.IdentityModel.Tokens.SamlConditions.WriteXml%28System.Xml.XmlDictionaryWriter%2CSystem.IdentityModel.Tokens.SamlSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%29> 方法，即可將 <xref:System.IdentityModel.Tokens.SamlConditions> 的目前執行個體寫入至 `<saml:Conditions>` 項目中。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" /> 是 <see langword="null" />  
  
-或- 
 <paramref name="samlSerializer" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>