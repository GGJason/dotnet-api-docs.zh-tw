<Type Name="SecurityKeyIdentifierClause" FullName="System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f3a5c32eef1b5b8f33c9ffdc67a8d423b6a36dfa" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32691935" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityKeyIdentifierClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityKeyIdentifierClause extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityKeyIdentifierClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityKeyIdentifierClause abstract" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d9459-101">表示金鑰識別碼子句的抽象基底類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d9459-101">Represents an abstract base class for a key identifier clause.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9459-102">除了在建立自訂安全性權杖服務時，通常並不需要使用 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>。</span><span class="sxs-lookup"><span data-stu-id="d9459-102">Typically, the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="d9459-103">當安全性權杖服務傳回安全性權杖時，所發出的安全性權杖會包含已附加及未附加之安全性權杖的參考。</span><span class="sxs-lookup"><span data-stu-id="d9459-103">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="d9459-104">附加的參考會參考包含在 SOAP 訊息之安全性標頭中的安全性權杖，而未附加的參考則會參考未包含在 SOAP 訊息之安全性標頭中的安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="d9459-104">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message.</span></span> <span data-ttu-id="d9459-105">這些參考通常會證明這些發出之安全性權杖的真實性。</span><span class="sxs-lookup"><span data-stu-id="d9459-105">These references typically affirm the authenticity of the issued security token.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d9459-106">初始化 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-106">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityKeyIdentifierClause (string clauseType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clauseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (clauseType As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityKeyIdentifierClause(System::String ^ clauseType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clauseType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clauseType">
          <span data-ttu-id="d9459-107">金鑰識別碼子句型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-107">The key identifier clause type.</span>
          </span>
          <span data-ttu-id="d9459-108">設定 <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> 屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-108">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9459-109">使用指定的金鑰識別碼子句型別，初始化 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-109">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> class using the specified key identifier clause type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9459-110">當這個安全性金鑰識別碼序列化成 XML 時，`clauseType` 參數就會序列化成 `ValueType` 項目的 `<SecurityTokenReference>` 屬性。</span><span class="sxs-lookup"><span data-stu-id="d9459-110">When this security key identifier is serialized into XML, the `clauseType` parameter is serialized as the `ValueType` attribute of the `<SecurityTokenReference>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityKeyIdentifierClause (string clauseType, byte[] nonce, int length);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clauseType, unsigned int8[] nonce, int32 length) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (clauseType As String, nonce As Byte(), length As Integer)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityKeyIdentifierClause(System::String ^ clauseType, cli::array &lt;System::Byte&gt; ^ nonce, int length);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="protected SecurityKeyIdentifierClause (string clauseType, byte[] derivationNonce, int derivationLength);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string clauseType, unsigned int8[] derivationNonce, int32 derivationLength) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (clauseType As String, derivationNonce As Byte(), derivationLength As Integer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityKeyIdentifierClause(System::String ^ clauseType, cli::array &lt;System::Byte&gt; ^ derivationNonce, int derivationLength);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clauseType" Type="System.String" Index="0" />
        <Parameter Name="nonce" Type="System.Byte[]" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="derivationNonce" Type="System.Byte[]" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="length" Type="System.Int32" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="derivationLength" Type="System.Int32" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="clauseType">
          <span data-ttu-id="d9459-111">金鑰識別碼子句型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-111">The key identifier clause type.</span>
          </span>
          <span data-ttu-id="d9459-112">設定 <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> 屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-112">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> property.</span>
          </span>
        </param>
        <param name="nonce">To be added.</param>
        <param name="derivationNonce">To be added.</param>
        <param name="length">To be added.</param>
        <param name="derivationLength">To be added.</param>
        <summary>
          <span data-ttu-id="d9459-113">使用指定的金鑰識別碼子句型別、Nonce 以及衍生金鑰長度，初始化 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-113">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> class using the specified key identifier clause type, nonce, and the derived key length.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9459-114">Windows Communication Foundation (WCF) 不支援建立隱含的衍生金鑰識別碼。</span><span class="sxs-lookup"><span data-stu-id="d9459-114">Windows Communication Foundation (WCF) does not support the creation of implied derived key identifiers.</span></span> <span data-ttu-id="d9459-115">不過，WCF 會處理包含隱含金鑰識別碼的傳入 SOAP 訊息。</span><span class="sxs-lookup"><span data-stu-id="d9459-115">However, WCF processes incoming SOAP messages that contain implied key identifier.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKey">
      <MemberSignature Language="C#" Value="public virtual bool CanCreateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCreateKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanCreateKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanCreateKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9459-116">取得指出是否能夠建立金鑰的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-116">Gets a value that indicates whether a key can be created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9459-117">如果可以建立金鑰，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-117">
              <see langword="true" /> if a key can be created; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d9459-118">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-118">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9459-119">當金鑰可以透過使用傳入至建構函式的參數建立時，此時要覆寫 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A> 方法，以便傳回 `true` 和實作 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d9459-119">When a key can be created using the parameters passed into a constructor, override the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A> method to return `true` and implement the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClauseType">
      <MemberSignature Language="C#" Value="public string ClauseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClauseType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClauseType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClauseType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9459-120">取得金鑰識別碼子句型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-120">Gets the key identifier clause type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9459-121">金鑰識別碼子句型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-121">The key identifier clause type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKey">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey CreateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey CreateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKey () As SecurityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ CreateKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9459-122">根據傳入建構函式的參數來建立金鑰。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-122">Creates a key based on the parameters passed into the constructor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9459-123">包含所建立金鑰的 <see cref="T:System.IdentityModel.Tokens.SecurityKey" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-123">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the created key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9459-124">當金鑰可以透過使用傳入至建構函式的參數建立時，此時要覆寫 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A> 方法，以便傳回 `true` 和實作 <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d9459-124">When a key can be created using the parameters passed into a constructor, override the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A> method to return `true` and implement the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivationLength">
      <MemberSignature Language="C#" Value="public int DerivationLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DerivationLength" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DerivationLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DerivationLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9459-125">取得衍生金鑰大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-125">Gets the size of the derived key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9459-126">衍生金鑰的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-126">The size of the derived key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9459-127">Windows Communication Foundation (WCF) 不支援建立隱含的衍生金鑰識別碼。</span><span class="sxs-lookup"><span data-stu-id="d9459-127">Windows Communication Foundation (WCF) does not support the creation of implied derived key identifiers.</span></span> <span data-ttu-id="d9459-128">不過，WCF 會處理包含隱含金鑰識別碼的傳入 SOAP 訊息。</span><span class="sxs-lookup"><span data-stu-id="d9459-128">However, WCF processes incoming SOAP messages that contain implied key identifier.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDerivationNonce">
      <MemberSignature Language="C#" Value="public byte[] GetDerivationNonce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetDerivationNonce() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDerivationNonce () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetDerivationNonce();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9459-129">取得用來產生衍生金鑰的 Nonce。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-129">Gets the nonce that was used to generate the derived key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9459-130">
            <see cref="T:System.Byte" /> 陣列，其中包含用來產生衍生金鑰的 Nonce。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-130">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to generate the derived key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9459-131">Windows Communication Foundation (WCF) 不支援建立隱含的衍生金鑰識別碼。</span><span class="sxs-lookup"><span data-stu-id="d9459-131">Windows Communication Foundation (WCF) does not support the creation of implied derived key identifiers.</span></span> <span data-ttu-id="d9459-132">不過，WCF 會處理包含隱含金鑰識別碼的傳入 SOAP 訊息。</span><span class="sxs-lookup"><span data-stu-id="d9459-132">However, WCF processes incoming SOAP messages that contain implied key identifier.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9459-133">取得或設定金鑰識別碼子句 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-133">Gets or sets the key identifier clause ID.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9459-134">金鑰識別碼子句 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-134">The key identifier clause ID.</span>
          </span>
          <span data-ttu-id="d9459-135">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-135">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9459-136">當這個安全性金鑰識別碼序列化成 XML，<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id%2A>屬性序列化為`Id`屬性`<SecurityTokenReference>`項目。</span><span class="sxs-lookup"><span data-stu-id="d9459-136">When this security key identifier is serialized into XML, the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id%2A> property is serialized as the `Id` attribute of the `<SecurityTokenReference>` element.</span></span> <span data-ttu-id="d9459-137">如果屬性是`null`、`Id`屬性不包含在`<SecurityTokenReference>`項目。</span><span class="sxs-lookup"><span data-stu-id="d9459-137">If the property is `null`, an `Id` attribute is not included in the `<SecurityTokenReference>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public virtual bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Matches (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public virtual bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Matches (clause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="clause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">To be added.</param>
        <param name="clause">To be added.</param>
        <summary>
          <span data-ttu-id="d9459-138">傳回值，這個值會指出這個執行個體的金鑰識別碼是否相等於指定的金鑰識別碼子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-138">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9459-139">如果 <paramref name="keyIdentifierClause" /> 是與目前執行個體相同的執行個體，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-139">
              <see langword="true" /> if <paramref name="keyIdentifierClause" /> is the same instance as the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9459-140">
            <paramref name="keyIdentifierClause" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9459-140">
              <paramref name="keyIdentifierClause" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>