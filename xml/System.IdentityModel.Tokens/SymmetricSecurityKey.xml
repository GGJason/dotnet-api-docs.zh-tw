<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SymmetricSecurityKey.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55cf8406bae2fec33eb98ef443bd7dd65bedab491.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5cf8406bae2fec33eb98ef443bd7dd65bedab491</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SymmetricSecurityKey">
          <source>Represents the abstract base class for all keys that are generated using symmetric algorithms.</source>
          <target state="translated">表示所有使用對稱演算法產生之金鑰的抽象基底類別。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SymmetricSecurityKey">
          <source>Typically, this class is used by the infrastructure to transform XML using a symmetric key.</source>
          <target state="translated">通常這個類別會被基礎結構用來轉換使用對稱金鑰的 XML。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>A URI that represents the cryptographic algorithm to use to generate the derived key.</source>
          <target state="translated">表示用來產生衍生金鑰之密碼編譯演算法的 URI。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the label parameter for the cryptographic algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 陣列，其中包含密碼編譯演算法的標籤參數。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the nonce that is used to create a derived key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 陣列，其中包含用來建立衍生金鑰的 Nonce。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>The size of the derived key.</source>
          <target state="translated">衍生金鑰的大小。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>The position at which the derived key is located in the byte array that is returned from this method.</source>
          <target state="translated">衍生金鑰在這個方法所傳回之位元組陣列中的所在位置。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, generates a derived key using the specified cryptographic algorithm and parameters for the current key.</source>
          <target state="translated">在衍生類別中覆寫時，就會使用目前金鑰指定的密碼編譯演算法和參數來產生衍生金鑰。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the derived key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 陣列，其中包含衍生金鑰。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <source>To specify P-SHA1 as the cryptographic algorithm, use the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt;</ph> field.</source>
          <target state="translated">為了將 P-SHA1 指定成密碼編譯演算法，此時會使用 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt;</ph> 欄位。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>A cryptographic algorithm that decrypts cipher text, such as encrypted XML.</source>
          <target state="translated">解密加密文字 (例如加密的 XML) 的密碼編譯演算法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the initialization vector (<ph id="ph2">&lt;see langword="IV" /&gt;</ph>) for the specified algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 陣列，其中包含指定之演算法的初始化向量 (<ph id="ph2">&lt;see langword="IV" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>When overridden in a derived class, gets a transform that decrypts cipher text using the specified cryptographic algorithm.</source>
          <target state="translated">在衍生類別中覆寫時，取得會使用指定密碼編譯演算法來解密加密文字的轉換。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ICryptoTransform" /&gt;</ph> that represents the decryption transform.</source>
          <target state="translated">表示解密轉換的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ICryptoTransform" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <source>Use the fields that represent decryption algorithms in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the algorithm.</source>
          <target state="translated">使用表示在 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> 類別中之解密演算法的欄位來指定此演算法。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>A cryptographic algorithm that encrypts XML.</source>
          <target state="translated">加密 XML 的密碼編譯演算法。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the initialization vector (<ph id="ph2">&lt;see langword="IV" /&gt;</ph>) for the specified algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 陣列，其中包含指定之演算法的初始化向量 (<ph id="ph2">&lt;see langword="IV" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>When overridden in a derived class, gets a transform that encrypts XML using the specified cryptographic algorithm.</source>
          <target state="translated">在衍生類別中覆寫時，取得會使用指定密碼編譯演算法來加密 XML 的轉換。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ICryptoTransform" /&gt;</ph> that represents the encryption transform.</source>
          <target state="translated">表示加密轉換的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ICryptoTransform" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <source>Use the fields that represent decryption algorithms in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the algorithm.</source>
          <target state="translated">使用表示在 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> 類別中之解密演算法的欄位來指定此演算法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)">
          <source>The cryptographic algorithm to get the size of the initialization vector (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>).</source>
          <target state="translated">要取得其初始化向量 (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>) 大小的密碼編譯演算法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)">
          <source>When overridden in a derived class, gets the size, in bits, of the initialization vector (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>) that is required for the specified cryptographic algorithm.</source>
          <target state="translated">在衍生類別中覆寫時，取得指定之密碼編譯演算法所需的初始化向量 (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>) 大小，以位元為單位。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)">
          <source>The size, in bits, of the initialization vector (<ph id="ph1">&lt;see langword="IV" /&gt;</ph>) that is required for the cryptographic algorithm specified in the <ph id="ph2">&lt;paramref name="algorithm" /&gt;</ph> parameter.</source>
          <target state="translated">指定於 <ph id="ph1">&lt;see langword="IV" /&gt;</ph> 參數中之密碼編譯演算法所需要的初始化向量 (<ph id="ph2">&lt;paramref name="algorithm" /&gt;</ph>) 大小，以位元為單位。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <source>The keyed hash algorithm to get an instance of.</source>
          <target state="translated">要取得其執行個體的索引雜湊演算法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <source>When overridden in a derived class, gets an instance of the specified keyed hash algorithm.</source>
          <target state="translated">在衍生類別中覆寫時，取得指定之索引雜湊演算法的執行個體。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /&gt;</ph> that represents the keyed hash algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /&gt;</ph>，表示索引雜湊演算法。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <source>Use the fields that represent keyed hash algorithms in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the algorithm.</source>
          <target state="translated">使用表示在 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> 類別中之索引雜湊演算法的欄位，即可指定此演算法。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <source>The symmetric algorithm to get an instance of.</source>
          <target state="translated">要取得其執行個體的對稱演算法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <source>When overridden in a derived class, gets an instance of the specified symmetric algorithm.</source>
          <target state="translated">在衍生類別中覆寫時，取得指定之對稱演算法的執行個體。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /&gt;</ph> that represents the symmetric algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /&gt;</ph>，表示對稱演算法。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <source>Use the fields that represent symmetric algorithms in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class to specify the algorithm.</source>
          <target state="translated">使用表示在 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> 類別中之對稱演算法的欄位，即可指定此演算法。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey">
          <source>When overridden in a derived class, gets the bytes that represent the symmetric key.</source>
          <target state="translated">在衍生類別中覆寫時，取得表示對稱金鑰的位元組。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the symmetric key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 陣列，其中包含對稱金鑰。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>