<Type Name="SymmetricSecurityKey" FullName="System.IdentityModel.Tokens.SymmetricSecurityKey">
  <TypeSignature Language="C#" Value="public abstract class SymmetricSecurityKey : System.IdentityModel.Tokens.SecurityKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SymmetricSecurityKey extends System.IdentityModel.Tokens.SecurityKey" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SymmetricSecurityKey&#xA;Inherits SecurityKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymmetricSecurityKey abstract : System::IdentityModel::Tokens::SecurityKey" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="368c1-101">表示所有使用對稱演算法產生之金鑰的抽象基底類別。</span><span class="sxs-lookup"><span data-stu-id="368c1-101">Represents the abstract base class for all keys that are generated using symmetric algorithms.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368c1-102">通常這個類別會被基礎結構用來轉換使用對稱金鑰的 XML。</span><span class="sxs-lookup"><span data-stu-id="368c1-102">Typically, this class is used by the infrastructure to transform XML using a symmetric key.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SymmetricSecurityKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SymmetricSecurityKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="368c1-103">初始化 <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="368c1-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDerivedKey">
      <MemberSignature Language="C#" Value="public abstract byte[] GenerateDerivedKey (string algorithm, byte[] label, byte[] nonce, int derivedKeyLength, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GenerateDerivedKey(string algorithm, unsigned int8[] label, unsigned int8[] nonce, int32 derivedKeyLength, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GenerateDerivedKey (algorithm As String, label As Byte(), nonce As Byte(), derivedKeyLength As Integer, offset As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ GenerateDerivedKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ label, cli::array &lt;System::Byte&gt; ^ nonce, int derivedKeyLength, int offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="label" Type="System.Byte[]" />
        <Parameter Name="nonce" Type="System.Byte[]" />
        <Parameter Name="derivedKeyLength" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="368c1-104">表示用來產生衍生金鑰之密碼編譯演算法的 URI。</span><span class="sxs-lookup"><span data-stu-id="368c1-104">A URI that represents the cryptographic algorithm to use to generate the derived key.</span></span></param>
        <param name="label"><span data-ttu-id="368c1-105"><see cref="T:System.Byte" /> 陣列，其中包含密碼編譯演算法的標籤參數。</span><span class="sxs-lookup"><span data-stu-id="368c1-105">An array of <see cref="T:System.Byte" /> that contains the label parameter for the cryptographic algorithm.</span></span></param>
        <param name="nonce"><span data-ttu-id="368c1-106"><see cref="T:System.Byte" /> 陣列，其中包含用來建立衍生金鑰的 Nonce。</span><span class="sxs-lookup"><span data-stu-id="368c1-106">An array of <see cref="T:System.Byte" /> that contains the nonce that is used to create a derived key.</span></span></param>
        <param name="derivedKeyLength"><span data-ttu-id="368c1-107">衍生金鑰的大小。</span><span class="sxs-lookup"><span data-stu-id="368c1-107">The size of the derived key.</span></span></param>
        <param name="offset"><span data-ttu-id="368c1-108">衍生金鑰在這個方法所傳回之位元組陣列中的所在位置。</span><span class="sxs-lookup"><span data-stu-id="368c1-108">The position at which the derived key is located in the byte array that is returned from this method.</span></span></param>
        <summary><span data-ttu-id="368c1-109">在衍生類別中覆寫時，就會使用目前金鑰指定的密碼編譯演算法和參數來產生衍生金鑰。</span><span class="sxs-lookup"><span data-stu-id="368c1-109">When overridden in a derived class, generates a derived key using the specified cryptographic algorithm and parameters for the current key.</span></span></summary>
        <returns><span data-ttu-id="368c1-110"><see cref="T:System.Byte" /> 陣列，其中包含衍生金鑰。</span><span class="sxs-lookup"><span data-stu-id="368c1-110">An array of <see cref="T:System.Byte" /> that contains the derived key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368c1-111">為了將 P-SHA1 指定成密碼編譯演算法，此時會使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation> 欄位。</span><span class="sxs-lookup"><span data-stu-id="368c1-111">To specify P-SHA1 as the cryptographic algorithm, use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation> field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionTransform">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.ICryptoTransform GetDecryptionTransform (string algorithm, byte[] iv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform GetDecryptionTransform(string algorithm, unsigned int8[] iv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDecryptionTransform (algorithm As String, iv As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::ICryptoTransform ^ GetDecryptionTransform(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ iv);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="iv" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="368c1-112">解密加密文字 (例如加密的 XML) 的密碼編譯演算法。</span><span class="sxs-lookup"><span data-stu-id="368c1-112">A cryptographic algorithm that decrypts cipher text, such as encrypted XML.</span></span></param>
        <param name="iv"><span data-ttu-id="368c1-113"><see cref="T:System.Byte" /> 陣列，其中包含指定之演算法的初始化向量 (<see langword="IV" />)。</span><span class="sxs-lookup"><span data-stu-id="368c1-113">An array of <see cref="T:System.Byte" /> that contains the initialization vector (<see langword="IV" />) for the specified algorithm.</span></span></param>
        <summary><span data-ttu-id="368c1-114">在衍生類別中覆寫時，取得會使用指定密碼編譯演算法來解密加密文字的轉換。</span><span class="sxs-lookup"><span data-stu-id="368c1-114">When overridden in a derived class, gets a transform that decrypts cipher text using the specified cryptographic algorithm.</span></span></summary>
        <returns><span data-ttu-id="368c1-115">表示解密轉換的 <see cref="T:System.Security.Cryptography.ICryptoTransform" />。</span><span class="sxs-lookup"><span data-stu-id="368c1-115">An <see cref="T:System.Security.Cryptography.ICryptoTransform" /> that represents the decryption transform.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368c1-116">使用表示在 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 類別中之解密演算法的欄位來指定此演算法。</span><span class="sxs-lookup"><span data-stu-id="368c1-116">Use the fields that represent decryption algorithms in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionTransform">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.ICryptoTransform GetEncryptionTransform (string algorithm, byte[] iv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform GetEncryptionTransform(string algorithm, unsigned int8[] iv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncryptionTransform (algorithm As String, iv As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::ICryptoTransform ^ GetEncryptionTransform(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ iv);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="iv" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="368c1-117">加密 XML 的密碼編譯演算法。</span><span class="sxs-lookup"><span data-stu-id="368c1-117">A cryptographic algorithm that encrypts XML.</span></span></param>
        <param name="iv"><span data-ttu-id="368c1-118"><see cref="T:System.Byte" /> 陣列，其中包含指定之演算法的初始化向量 (<see langword="IV" />)。</span><span class="sxs-lookup"><span data-stu-id="368c1-118">An array of <see cref="T:System.Byte" /> that contains the initialization vector (<see langword="IV" />) for the specified algorithm.</span></span></param>
        <summary><span data-ttu-id="368c1-119">在衍生類別中覆寫時，取得會使用指定密碼編譯演算法來加密 XML 的轉換。</span><span class="sxs-lookup"><span data-stu-id="368c1-119">When overridden in a derived class, gets a transform that encrypts XML using the specified cryptographic algorithm.</span></span></summary>
        <returns><span data-ttu-id="368c1-120">表示加密轉換的 <see cref="T:System.Security.Cryptography.ICryptoTransform" />。</span><span class="sxs-lookup"><span data-stu-id="368c1-120">An <see cref="T:System.Security.Cryptography.ICryptoTransform" /> that represents the encryption transform.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368c1-121">使用表示在 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 類別中之解密演算法的欄位來指定此演算法。</span><span class="sxs-lookup"><span data-stu-id="368c1-121">Use the fields that represent decryption algorithms in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIVSize">
      <MemberSignature Language="C#" Value="public abstract int GetIVSize (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetIVSize(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIVSize (algorithm As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetIVSize(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="368c1-122">要取得其初始化向量 (<see langword="IV" />) 大小的密碼編譯演算法。</span><span class="sxs-lookup"><span data-stu-id="368c1-122">The cryptographic algorithm to get the size of the initialization vector (<see langword="IV" />).</span></span></param>
        <summary><span data-ttu-id="368c1-123">在衍生類別中覆寫時，取得指定之密碼編譯演算法所需的初始化向量 (<see langword="IV" />) 大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="368c1-123">When overridden in a derived class, gets the size, in bits, of the initialization vector (<see langword="IV" />) that is required for the specified cryptographic algorithm.</span></span></summary>
        <returns><span data-ttu-id="368c1-124">指定於 <see langword="IV" /> 參數中之密碼編譯演算法所需要的初始化向量 (<paramref name="algorithm" />) 大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="368c1-124">The size, in bits, of the initialization vector (<see langword="IV" />) that is required for the cryptographic algorithm specified in the <paramref name="algorithm" /> parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyedHashAlgorithm">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.KeyedHashAlgorithm GetKeyedHashAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.KeyedHashAlgorithm GetKeyedHashAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetKeyedHashAlgorithm (algorithm As String) As KeyedHashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::KeyedHashAlgorithm ^ GetKeyedHashAlgorithm(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeyedHashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="368c1-125">要取得其執行個體的索引雜湊演算法。</span><span class="sxs-lookup"><span data-stu-id="368c1-125">The keyed hash algorithm to get an instance of.</span></span></param>
        <summary><span data-ttu-id="368c1-126">在衍生類別中覆寫時，取得指定之索引雜湊演算法的執行個體。</span><span class="sxs-lookup"><span data-stu-id="368c1-126">When overridden in a derived class, gets an instance of the specified keyed hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="368c1-127"><see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" />，表示索引雜湊演算法。</span><span class="sxs-lookup"><span data-stu-id="368c1-127">A <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> that represents the keyed hash algorithm.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368c1-128">使用表示在 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 類別中之索引雜湊演算法的欄位，即可指定此演算法。</span><span class="sxs-lookup"><span data-stu-id="368c1-128">Use the fields that represent keyed hash algorithms in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.SymmetricAlgorithm GetSymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetSymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSymmetricAlgorithm (algorithm As String) As SymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::SymmetricAlgorithm ^ GetSymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="368c1-129">要取得其執行個體的對稱演算法。</span><span class="sxs-lookup"><span data-stu-id="368c1-129">The symmetric algorithm to get an instance of.</span></span></param>
        <summary><span data-ttu-id="368c1-130">在衍生類別中覆寫時，取得指定之對稱演算法的執行個體。</span><span class="sxs-lookup"><span data-stu-id="368c1-130">When overridden in a derived class, gets an instance of the specified symmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="368c1-131"><see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />，表示對稱演算法。</span><span class="sxs-lookup"><span data-stu-id="368c1-131">A <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> that represents the symmetric algorithm.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="368c1-132">使用表示在 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 類別中之對稱演算法的欄位，即可指定此演算法。</span><span class="sxs-lookup"><span data-stu-id="368c1-132">Use the fields that represent symmetric algorithms in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSymmetricKey">
      <MemberSignature Language="C#" Value="public abstract byte[] GetSymmetricKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetSymmetricKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSymmetricKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ GetSymmetricKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="368c1-133">在衍生類別中覆寫時，取得表示對稱金鑰的位元組。</span><span class="sxs-lookup"><span data-stu-id="368c1-133">When overridden in a derived class, gets the bytes that represent the symmetric key.</span></span></summary>
        <returns><span data-ttu-id="368c1-134"><see cref="T:System.Byte" /> 陣列，其中包含對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="368c1-134">An array of <see cref="T:System.Byte" /> that contains the symmetric key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>