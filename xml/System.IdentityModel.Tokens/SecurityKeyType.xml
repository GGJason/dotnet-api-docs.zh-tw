<Type Name="SecurityKeyType" FullName="System.IdentityModel.Tokens.SecurityKeyType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="69ddff964a763e6aa9e6e7a6ea3a5826a64452e7" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37650026" /></Metadata><TypeSignature Language="C#" Value="public enum SecurityKeyType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SecurityKeyType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityKeyType" />
  <TypeSignature Language="VB.NET" Value="Public Enum SecurityKeyType" />
  <TypeSignature Language="C++ CLI" Value="public enum class SecurityKeyType" />
  <TypeSignature Language="F#" Value="type SecurityKeyType = " />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>指定與安全性權杖關聯的金鑰類型。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用 <xref:System.IdentityModel.Tokens.SecurityKeyType> 列舉型別 (Enumeration)，設定 <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A> 屬性。  
  
 BearerKey 欄位搭配<xref:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType%2A>屬性。  
  
### <a name="bearerkey-requires-wsuid-or-transport-security-with-message-credentials"></a>BearerKey 需要 Wsu:Id 或使用訊息認證的傳輸安全性  
 在聯合案例中，發行的權杖通常是設定為用戶端和依賴方之間訊息安全性的簽署支援權杖。 不過，當安全性權杖服務 (STS) 發出權杖沒有索引鍵 (BearerKey) 時，WCF 會設定為<xref:System.ServiceModel.Security.SecurityTokenAttachmentMode>（WCF 無法為其背書沒有索引鍵） 的支援權杖。 如此一來，發行的權杖必須在簽章中加以參考。 WCF 目前會使用下列：http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id做為參考機制 (wsu: id)。  
  
 如果發行的權杖沒有此類屬性，用戶端上就會擲回 <xref:System.ServiceModel.Security.MessageSecurityException> 以及「要簽署的項目必須具有識別碼」文字。 當使用 SAML 1.1 權杖做為發行的權杖時，就會發生這種情形 (SAML 1.1 規格中並未定義 Wsu:Id)。  
  
 若要解決這種情況下，使用傳輸安全性使用訊息認證 (例如<xref:System.ServiceModel.Configuration.AuthenticationMode>) 或 STS 必須加入http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id(wsu: id) 來發行的權杖。  
  
 請注意，如果 Wsu:Id 加入至 SAML 1.1 權杖，產生的 XML 就不符合 SAML 1.1 規格。 替代方式是將 Wsu:Id 加入至加密發行權杖後所產生的 `EncryptedData`。 這個程序符合 SAML 1.1 規格，因為 `EncryptedData` 項目支援 Wsu:Id 屬性。  
  
 因此，為了符合規格，持有人權杖必須使用 STS 來加密。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsymmetricKey">
      <MemberSignature Language="C#" Value="AsymmetricKey" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Tokens.SecurityKeyType AsymmetricKey = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey" />
      <MemberSignature Language="VB.NET" Value="AsymmetricKey" />
      <MemberSignature Language="C++ CLI" Value="AsymmetricKey" />
      <MemberSignature Language="F#" Value="AsymmetricKey = 1" Usage="System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>指定金鑰為非對稱金鑰。</summary>
      </Docs>
    </Member>
    <Member MemberName="BearerKey">
      <MemberSignature Language="C#" Value="BearerKey" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Tokens.SecurityKeyType BearerKey = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SecurityKeyType.BearerKey" />
      <MemberSignature Language="VB.NET" Value="BearerKey" />
      <MemberSignature Language="C++ CLI" Value="BearerKey" />
      <MemberSignature Language="F#" Value="BearerKey = 2" Usage="System.IdentityModel.Tokens.SecurityKeyType.BearerKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>指定安全性權杖未包含所有權證明金鑰。</summary>
      </Docs>
    </Member>
    <Member MemberName="SymmetricKey">
      <MemberSignature Language="C#" Value="SymmetricKey" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Tokens.SecurityKeyType SymmetricKey = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />
      <MemberSignature Language="VB.NET" Value="SymmetricKey" />
      <MemberSignature Language="C++ CLI" Value="SymmetricKey" />
      <MemberSignature Language="F#" Value="SymmetricKey = 0" Usage="System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>指定金鑰為對稱金鑰。</summary>
      </Docs>
    </Member>
  </Members>
</Type>