<Type Name="SecurityKey" FullName="System.IdentityModel.Tokens.SecurityKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d60398633972425ee87f71d8f2a209f06d9259b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36480605" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityKey" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityKey abstract" />
  <TypeSignature Language="F#" Value="type SecurityKey = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1a6ae-101">安全性金鑰的基底類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1a6ae-101">Base class for security keys.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a6ae-102">安全性金鑰會用在密碼編譯作業上，例如，產生數位簽章以及加密 XML 資料。</span><span class="sxs-lookup"><span data-stu-id="1a6ae-102">Security keys are used for cryptographic operations, such as generating digital signatures and encrypting XML data.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1a6ae-103">初始化 <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public abstract byte[] DecryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DecryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DecryptKey (algorithm As String, keyData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ DecryptKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ keyData);" />
      <MemberSignature Language="F#" Value="abstract member DecryptKey : string * byte[] -&gt; byte[]" Usage="securityKey.DecryptKey (algorithm, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="1a6ae-104">已用於加密金鑰的密碼編譯演算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-104">The cryptographic algorithm that was used to encrypt the key.</span>
          </span>
        </param>
        <param name="keyData">
          <span data-ttu-id="1a6ae-105">包含加密金鑰的 <see cref="T:System.Byte" /> 陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-105">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a6ae-106">在衍生類別中覆寫時，解密所指定的已加密金鑰。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-106">When overridden in a derived class, decrypts the specified encrypted key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a6ae-107">包含解密金鑰的 <see cref="T:System.Byte" /> 陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-107">An array of <see cref="T:System.Byte" /> that contains the decrypted key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a6ae-108">使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 類別的靜態欄位，即可指定演算法。</span><span class="sxs-lookup"><span data-stu-id="1a6ae-108">Use the static fields of the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public abstract byte[] EncryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] EncryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EncryptKey (algorithm As String, keyData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ EncryptKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ keyData);" />
      <MemberSignature Language="F#" Value="abstract member EncryptKey : string * byte[] -&gt; byte[]" Usage="securityKey.EncryptKey (algorithm, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="1a6ae-109">用於加密金鑰的密碼編譯演算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-109">The cryptographic algorithm to encrypt the key with.</span>
          </span>
        </param>
        <param name="keyData">
          <span data-ttu-id="1a6ae-110">包含金鑰的 <see cref="T:System.Byte" /> 陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-110">An array of <see cref="T:System.Byte" /> that contains the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a6ae-111">在衍生類別中覆寫時，加密所指定的金鑰。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-111">When overridden in a derived class, encrypts the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a6ae-112">包含加密金鑰的 <see cref="T:System.Byte" /> 陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-112">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a6ae-113">使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 類別的靜態欄位，即可指定演算法。</span><span class="sxs-lookup"><span data-stu-id="1a6ae-113">Use the static fields of the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public abstract bool IsAsymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsAsymmetricAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsAsymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsAsymmetricAlgorithm : string -&gt; bool" Usage="securityKey.IsAsymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="1a6ae-114">密碼編譯演算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-114">The cryptographic algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a6ae-115">在衍生類別中覆寫時，取得指出指定的演算法是否會使用非對稱金鑰的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-115">When overridden in a derived class, gets a value that indicates whether the specified algorithm uses asymmetric keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a6ae-116">如果指定的演算法會使用非對稱金鑰，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-116">
              <see langword="true" /> when the specified algorithm uses asymmetric keys; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a6ae-117">使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 類別的靜態欄位，即可指定演算法。</span><span class="sxs-lookup"><span data-stu-id="1a6ae-117">Use the static fields of the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedAlgorithm">
      <MemberSignature Language="C#" Value="public abstract bool IsSupportedAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupportedAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSupportedAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSupportedAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsSupportedAlgorithm : string -&gt; bool" Usage="securityKey.IsSupportedAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="1a6ae-118">密碼編譯演算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-118">The cryptographic algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a6ae-119">在衍生類別中覆寫時，取得指出這個類別是否支援指定之演算法的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-119">When overridden in a derived class, gets a value that indicates whether the specified algorithm is supported by this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a6ae-120">如果這個類別支援指定的演算法，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-120">
              <see langword="true" /> when the specified algorithm is supported by this class; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public abstract bool IsSymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSymmetricAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsSymmetricAlgorithm : string -&gt; bool" Usage="securityKey.IsSymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">
          <span data-ttu-id="1a6ae-121">密碼編譯演算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-121">The cryptographic algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a6ae-122">在衍生類別中覆寫時，取得指出指定的演算法是否會使用對稱金鑰的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-122">When overridden in a derived class, gets a value that indicates whether the specified algorithm uses symmetric keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a6ae-123">如果指定的演算法會使用對稱金鑰，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-123">
              <see langword="true" /> when the specified algorithm uses symmetric keys; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a6ae-124">使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 類別的靜態欄位，即可指定演算法。</span><span class="sxs-lookup"><span data-stu-id="1a6ae-124">Use the static fields of the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public abstract int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityKey.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int KeySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int" Usage="System.IdentityModel.Tokens.SecurityKey.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a6ae-125">在衍生類別中覆寫時，取得金鑰的大小 (以位元為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-125">When overridden in a derived class, gets the size, in bits, of the key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a6ae-126">金鑰的大小 (以位元為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a6ae-126">The size, in bits, of the key.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>