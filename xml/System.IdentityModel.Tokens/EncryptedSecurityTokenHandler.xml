<Type Name="EncryptedSecurityTokenHandler" FullName="System.IdentityModel.Tokens.EncryptedSecurityTokenHandler">
  <TypeSignature Language="C#" Value="public class EncryptedSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedSecurityTokenHandler extends System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedSecurityTokenHandler&#xA;Inherits SecurityTokenHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedSecurityTokenHandler : System::IdentityModel::Tokens::SecurityTokenHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityTokenHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="686c2-101">加密安全性權杖的權杖處理常式。</span><span class="sxs-lookup"><span data-stu-id="686c2-101">A token handler for encrypted security tokens.</span></span> <span data-ttu-id="686c2-102">處理 <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" /> 型別的權杖。</span><span class="sxs-lookup"><span data-stu-id="686c2-102">Handles tokens of type <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="686c2-103">序列化和還原序列化的權杖處理常式<xref:System.IdentityModel.Tokens.EncryptedSecurityToken>物件從`<xenc:EncryptedData>`項目和<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause>物件從`<xenc:EncryptedKey>`XML 加密語法和處理規格中所定義的項目 (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210)。</span><span class="sxs-lookup"><span data-stu-id="686c2-103">A token handler that serializes and deserializes <xref:System.IdentityModel.Tokens.EncryptedSecurityToken> objects from `<xenc:EncryptedData>` elements and <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> objects from `<xenc:EncryptedKey>` elements as defined in the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedSecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedSecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="686c2-104">初始化 <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="686c2-104">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="686c2-105">位於開始項目的 XML 讀取器。</span><span class="sxs-lookup"><span data-stu-id="686c2-105">An XML reader positioned at the start element.</span></span> <span data-ttu-id="686c2-106">不應該將讀取器向前移。</span><span class="sxs-lookup"><span data-stu-id="686c2-106">The reader should not be advanced.</span></span></param>
        <summary><span data-ttu-id="686c2-107">傳回值，這個值指出目前的 XML 項目是否指向 <see langword="&lt;xenc:EncryptedKey&gt;" /> 項目，此項目可以由這個執行個體還原序列化成<see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-107">Returns a value that indicates whether the current XML element is pointing to an <see langword="&lt;xenc:EncryptedKey&gt;" /> element that can be deserialized to a <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> by this instance.</span></span></summary>
        <returns>
          <span data-ttu-id="686c2-108">如果 XML 讀取器位於 XML 加密語法和處理規格的章節 3.5.1 (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210)) 所定義的 <see langword="&lt;xenc:EncryptedKey&gt;" /> 元素，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-108"><see langword="true" /> if the XML reader is positioned at an <see langword="&lt;xenc:EncryptedKey&gt;" /> element as defined in section 3.5.1 of the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/2002/REC-xmlenc-core-20021210); otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="686c2-109"><paramref name="reader" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-109"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public override bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="686c2-110">讀取器位於安全性權杖 (<see langword="&lt;xenc:EncryptedData&gt;" />項目)。</span><span class="sxs-lookup"><span data-stu-id="686c2-110">The reader positioned at a security token (<see langword="&lt;xenc:EncryptedData&gt;" /> element.)</span></span></param>
        <summary><span data-ttu-id="686c2-111">傳回值，指出讀取器是否指向 <see langword="&lt;xenc:EncryptedData&gt;" /> 項目。</span><span class="sxs-lookup"><span data-stu-id="686c2-111">Returns a value that indicates whether the reader is pointing to an <see langword="&lt;xenc:EncryptedData&gt;" /> element.</span></span></summary>
        <returns>
          <span data-ttu-id="686c2-112">如果讀取器位於 <see langword="true" />，則為 <see langword="&lt;xenc:EncryptedData&gt;" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-112"><see langword="true" /> if the reader is positioned at an <see langword="&lt;xenc:EncryptedData&gt;" /> element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="686c2-113">當它傳回時，不會移動讀取器`false`。</span><span class="sxs-lookup"><span data-stu-id="686c2-113">Does not move the reader when it returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public override bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="686c2-114">取得值，指出處理常式是否提供語彙基元的序列化功能。</span><span class="sxs-lookup"><span data-stu-id="686c2-114">Gets a value that indicates whether the handler provides serialization functionality for tokens.</span></span></summary>
        <value>
          <span data-ttu-id="686c2-115">如果處理常式可以序列化權杖，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-115"><see langword="true" /> if the handler can serialize tokens; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="686c2-116">一定是 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-116">Always <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public override string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="686c2-117">取得目前執行個體所處理的語彙基元的型別識別項 URI。</span><span class="sxs-lookup"><span data-stu-id="686c2-117">Gets the type identifier URIs for tokens handled by the current instance.</span></span></summary>
        <returns><span data-ttu-id="686c2-118">根據預設，會傳回含有單一 <see langword="null" /> 字串的陣列，因為沒有與 <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" /> 型別相關聯的特定語彙基元型別識別項。</span><span class="sxs-lookup"><span data-stu-id="686c2-118">By default, returns an array with a single <see langword="null" /> string because there is not a specific token type identifier that is associated with the <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" /> type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyInfoSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfoSerializer As SecurityTokenSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Selectors::SecurityTokenSerializer ^ KeyInfoSerializer { System::IdentityModel::Selectors::SecurityTokenSerializer ^ get(); void set(System::IdentityModel::Selectors::SecurityTokenSerializer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="686c2-119">取得或設定 <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />，它會用來序列化和還原序列化 <see langword="&lt;xenc:EncryptedData&gt;" /> 項目中的金鑰識別項。</span><span class="sxs-lookup"><span data-stu-id="686c2-119">Gets or sets the <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that will be used to serialize and deserialize key identifiers from the <see langword="&lt;xenc:EncryptedData&gt;" /> element.</span></span></summary>
        <value><span data-ttu-id="686c2-120">將用來讀取和寫入金鑰識別項的權杖序列化程式。</span><span class="sxs-lookup"><span data-stu-id="686c2-120">The token serializer that will be used to read and write key the key identifiers.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="686c2-121">嘗試將屬性設為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-121">An attempt to set the property to <see langword="null" /> occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="686c2-122">XML 讀取器，位於 'http://www.w3.org/TR/2002/REC-xmlenc-core-20021210' 中所定義的 <see langword="&lt;xenc:EncryptedKey&gt;" /> 元素；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-122">An XML reader positioned at an <see langword="&lt;xenc:EncryptedKey&gt;" /> element as defined in 'http://www.w3.org/TR/2002/REC-xmlenc-core-20021210'; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="686c2-123">從 XML 資料流讀取 <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-123">Reads an <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> from an XML stream.</span></span></summary>
        <returns><span data-ttu-id="686c2-124"><see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> 型別的索引鍵識別項子句。</span><span class="sxs-lookup"><span data-stu-id="686c2-124">A key identifier clause of type <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="686c2-125"><paramref name="reader" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-125"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="686c2-126"><paramref name="reader" /> 並不是放置在 <see langword="&lt;xenc:EncryptedKey&gt;" /> 項目上。</span><span class="sxs-lookup"><span data-stu-id="686c2-126"><paramref name="reader" /> is not positioned at an <see langword="&lt;xenc:EncryptedKey&gt;" /> element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="686c2-127">要從其中讀取語彙基元的讀取器。</span><span class="sxs-lookup"><span data-stu-id="686c2-127">The reader from which to read the token.</span></span></param>
        <summary><span data-ttu-id="686c2-128">讀取加密的安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="686c2-128">Reads an encrypted security token.</span></span></summary>
        <returns><span data-ttu-id="686c2-129"><see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" /> 型別的安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="686c2-129">A security token of type <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="686c2-130"><paramref name="reader" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-130"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="686c2-131">沒有設定的服務權杖解析程式。</span><span class="sxs-lookup"><span data-stu-id="686c2-131">There is no configured service token resolver.</span></span> <span data-ttu-id="686c2-132">(所參考之語彙基元處理常式組態的 <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> 屬性或 <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver" /> 屬性是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-132">(Either the <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property or the <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver" /> property of the referenced token handler configuration is <see langword="null" />.</span></span> <span data-ttu-id="686c2-133">必須有服務語彙基元解析程式才能取得解密金鑰。</span><span class="sxs-lookup"><span data-stu-id="686c2-133">A service token resolver is required to obtain keys for decryption.</span></span>  
  
 <span data-ttu-id="686c2-134">-或-</span><span class="sxs-lookup"><span data-stu-id="686c2-134">-or-</span></span>  
  
 <span data-ttu-id="686c2-135">經由 <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" /> 屬性所參考的 <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" /> 找不到 <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> (其可以讀取解密的 XML 並傳回 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />)。</span><span class="sxs-lookup"><span data-stu-id="686c2-135">The <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" /> referenced through the <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" /> property is unable to find a <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> that can read the decrypted XML and return a <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><span data-ttu-id="686c2-136">在讀取器所指向之 XML 內部找不到 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-136">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> is not found inside the XML pointed to by the reader.</span></span>  
  
 <span data-ttu-id="686c2-137">-或-</span><span class="sxs-lookup"><span data-stu-id="686c2-137">-or-</span></span>  
  
 <span data-ttu-id="686c2-138"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> 不是 <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-138">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> is not a <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException"><span data-ttu-id="686c2-139">在 XML 中找到的<see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />無法由所設定的服務權杖解析器解析成<see cref="T:System.IdentityModel.Tokens.SecurityKey" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-139">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> found inside the XML cannot be resolved by the configured service token resolver to a <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public override Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ TokenType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="686c2-140">取得目前執行個體所處理的權杖類型。</span><span class="sxs-lookup"><span data-stu-id="686c2-140">Gets the type of the token handled by the current instance.</span></span></summary>
        <value><span data-ttu-id="686c2-141">目前執行個體所處理的權杖類型。</span><span class="sxs-lookup"><span data-stu-id="686c2-141">The token type handled by the current instance.</span></span> <span data-ttu-id="686c2-142">預設值是<see langword="typeof" /> <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-142">The default is <see langword="typeof" /><see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="686c2-143">XML 寫入器，要將加密的權杖寫入至其中。</span><span class="sxs-lookup"><span data-stu-id="686c2-143">The XML writer to which to write the encrypted token.</span></span></param>
        <param name="token"><span data-ttu-id="686c2-144">加密的安全性權杖，必須是<see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />的執行個體。</span><span class="sxs-lookup"><span data-stu-id="686c2-144">The encrypted security token, must be an instance of <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />.</span></span></param>
        <summary><span data-ttu-id="686c2-145">使用 XML 寫入器，寫入加密的安全性權杖。</span><span class="sxs-lookup"><span data-stu-id="686c2-145">Writes an encrypted security token using the XML writer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="686c2-146"><paramref name="writer" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-146"><paramref name="writer" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="686c2-147">-或-</span><span class="sxs-lookup"><span data-stu-id="686c2-147">-or-</span></span>  
  
 <span data-ttu-id="686c2-148"><paramref name="token" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-148"><paramref name="token" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="686c2-149">無法將 <paramref name="token" /> 指派為 <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-149"><paramref name="token" /> is not assignable as <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="686c2-150"><see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> 屬性為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-150">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span></span> <span data-ttu-id="686c2-151">必須要有這個屬性才能取得用於加密的金鑰。</span><span class="sxs-lookup"><span data-stu-id="686c2-151">This property is required for obtaining keys for encryption.</span></span>  
  
 <span data-ttu-id="686c2-152">-或-</span><span class="sxs-lookup"><span data-stu-id="686c2-152">-or-</span></span>  
  
 <span data-ttu-id="686c2-153"><see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" /> 屬性所傳回的權杖處理常式集合無法找到 <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />，其可以寫入 <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> 屬性所傳回的 <see cref="P:System.IdentityModel.Tokens.EncryptedSecurityToken.Token" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-153">The token handler collection returned by the <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" /> property was unable to find a <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> that can write the <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> returned by the <see cref="P:System.IdentityModel.Tokens.EncryptedSecurityToken.Token" /> property.</span></span></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><span data-ttu-id="686c2-154"><see cref="P:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey" /> 屬性不可指定為 <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />。</span><span class="sxs-lookup"><span data-stu-id="686c2-154">The <see cref="P:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey" /> property is not assignable as <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>