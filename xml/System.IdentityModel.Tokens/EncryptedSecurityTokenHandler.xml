<Type Name="EncryptedSecurityTokenHandler" FullName="System.IdentityModel.Tokens.EncryptedSecurityTokenHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a9aa80db899cbdb2270485d63b92f32034eab914" /><Meta Name="ms.sourcegitcommit" Value="112ca25eddde8ac8b788d67c406b7745ba914261" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/15/2019" /><Meta Name="ms.locfileid" Value="54310844" /></Metadata><TypeSignature Language="C#" Value="public class EncryptedSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedSecurityTokenHandler extends System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedSecurityTokenHandler&#xA;Inherits SecurityTokenHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedSecurityTokenHandler : System::IdentityModel::Tokens::SecurityTokenHandler" />
  <TypeSignature Language="F#" Value="type EncryptedSecurityTokenHandler = class&#xA;    inherit SecurityTokenHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityTokenHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>加密安全性權杖的權杖處理常式。 處理 <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" /> 型別的權杖。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 序列化和還原序列化的權杖處理常式<xref:System.IdentityModel.Tokens.EncryptedSecurityToken>物件從`<xenc:EncryptedData>`項目並<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause>物件從`<xenc:EncryptedKey>`中所定義的項目[XML 加密語法和處理規格](https://www.w3.org/TR/xmlenc-core1/).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedSecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedSecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool" Usage="encryptedSecurityTokenHandler.CanReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">位於開始項目的 XML 讀取器。 不應該將讀取器向前移。</param>
        <summary>傳回值，這個值指出目前的 XML 項目是否指向 <see langword="&lt;xenc:EncryptedKey&gt;" /> 項目，此項目可以由這個執行個體還原序列化成<see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</summary>
        <returns>如果 XML 讀取器位於 "<see href="https://www.w3.org/TR/xmlenc-core1/">XML Encryption Syntax and Processing</see>" 3.5.1 一節中定義的 <see langword="&lt;xenc:EncryptedKey&gt;" /> 元素，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public override bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.CanReadToken : System.Xml.XmlReader -&gt; bool" Usage="encryptedSecurityTokenHandler.CanReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">讀取器位於安全性權杖 (<see langword="&lt;xenc:EncryptedData&gt;" />項目)。</param>
        <summary>傳回值，指出讀取器是否指向 <see langword="&lt;xenc:EncryptedData&gt;" /> 項目。</summary>
        <returns>如果讀取器位於 <see langword="true" />，則為 <see langword="&lt;xenc:EncryptedData&gt;" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不會移動讀取器，當它傳回`false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public override bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWriteToken : bool" Usage="System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出處理常式是否提供語彙基元的序列化功能。</summary>
        <value>如果處理常式可以序列化權杖，則為 <see langword="true" />，否則為 <see langword="false" />。 一定是 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public override string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberSignature Language="F#" Value="override this.GetTokenTypeIdentifiers : unit -&gt; string[]" Usage="encryptedSecurityTokenHandler.GetTokenTypeIdentifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得目前執行個體所處理的語彙基元的型別識別項 URI。</summary>
        <returns>根據預設，會傳回含有單一 <see langword="null" /> 字串的陣列，因為沒有與 <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" /> 型別相關聯的特定語彙基元型別識別項。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyInfoSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfoSerializer As SecurityTokenSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Selectors::SecurityTokenSerializer ^ KeyInfoSerializer { System::IdentityModel::Selectors::SecurityTokenSerializer ^ get(); void set(System::IdentityModel::Selectors::SecurityTokenSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyInfoSerializer : System.IdentityModel.Selectors.SecurityTokenSerializer with get, set" Usage="System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />，它會用來序列化和還原序列化 <see langword="&lt;xenc:EncryptedData&gt;" /> 項目中的金鑰識別項。</summary>
        <value>將用來讀取和寫入金鑰識別項的權杖序列化程式。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">嘗試將屬性設為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="encryptedSecurityTokenHandler.ReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">位於 "<see href="https://www.w3.org/TR/xmlenc-core1/">XML Encryption Syntax and Processing</see>" 中所定義 <see langword="&lt;xenc:EncryptedKey&gt;" /> 元素的 XML 讀取器，否則為 <see langword="false" />。</param>
        <summary>從 XML 資料流讀取 <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />。</summary>
        <returns><see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> 型別的索引鍵識別項子句。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="reader" /> 並不是放置在 <see langword="&lt;xenc:EncryptedKey&gt;" /> 項目上。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.ReadToken : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="encryptedSecurityTokenHandler.ReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">要從其中讀取語彙基元的讀取器。</param>
        <summary>讀取加密的安全性權杖。</summary>
        <returns><see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" /> 型別的安全性權杖。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">沒有設定的服務權杖解析程式。 (所參考之語彙基元處理常式組態的 <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> 屬性或 <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver" /> 屬性是 <see langword="null" />。 必須有服務語彙基元解析程式才能取得解密金鑰。  
  
-或- 
經由 <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" /> 屬性所參考的 <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" /> 找不到 <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> (其可以讀取解密的 XML 並傳回 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />)。</exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">在讀取器所指向之 XML 內部找不到 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。  
  
-或- 
<see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> 不是 <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />。</exception>
        <exception cref="T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException">在 XML 中找到的<see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />無法由所設定的服務權杖解析器解析成<see cref="T:System.IdentityModel.Tokens.SecurityKey" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public override Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ TokenType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenType : Type" Usage="System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前執行個體所處理的權杖類型。</summary>
        <value>目前執行個體所處理的權杖類型。 預設值是<see langword="typeof" /> <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="encryptedSecurityTokenHandler.WriteToken (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer">XML 寫入器，要將加密的權杖寫入至其中。</param>
        <param name="token">加密的安全性權杖，必須是<see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />的執行個體。</param>
        <summary>使用 XML 寫入器，寫入加密的安全性權杖。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="token" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">無法將 <paramref name="token" /> 指派為 <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> 屬性為 <see langword="null" />。 必須要有這個屬性才能取得用於加密的金鑰。  
  
-或- 
<see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" /> 屬性所傳回的權杖處理常式集合無法找到 <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />，其可以寫入 <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> 屬性所傳回的 <see cref="P:System.IdentityModel.Tokens.EncryptedSecurityToken.Token" />。</exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><see cref="P:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey" /> 屬性不可指定為 <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>