<Type Name="SessionSecurityToken" FullName="System.IdentityModel.Tokens.SessionSecurityToken">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e9c5b77cd63bb0df70f95e816d4cc6f85767a2ad" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52377567" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SessionSecurityToken : System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SessionSecurityToken extends System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SessionSecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityToken&#xA;Inherits SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityToken : System::IdentityModel::Tokens::SecurityToken" />
  <TypeSignature Language="F#" Value="type SessionSecurityToken = class&#xA;    inherit SecurityToken" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityToken</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定義包含與工作階段相關聯之資料的安全性權杖。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 工作階段權杖儲存<xref:System.Security.Claims.ClaimsPrincipal>與工作階段，以及定義工作階段; 其他參數相關聯的使用者，例如工作階段開始和結束時間。  
  
 在被動的情況下，<xref:System.IdentityModel.Services.WSFederationAuthenticationModule>會呼叫<xref:System.IdentityModel.Services.SessionAuthenticationModule>(SAM) 從驗證管線，以建立從工作階段權杖<xref:System.Security.Claims.ClaimsPrincipal>，代表已驗證的使用者。 SAM 會使用其設定<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>才能建立語彙基元，並將它序列化為 cookie （和還原序列化的權杖上的後續要求的 cookie）。 SAM 會使用其設定的執行個體<xref:System.IdentityModel.Services.CookieHandler>寫回至 HTTP 回應 cookie 的類別。 此 cookie 則傳回至用戶端，並在後續要求的 cookie，而不是反覆存取進行重新取得安全性權杖的身分識別提供者，可以呈現用戶端。 如需有關如何使用 WIF 工作階段的運作方式的詳細資訊，請參閱 < [WIF 工作階段管理](~/docs/framework/security/wif-session-management.md)。 如需在 Web 伺服陣列案例中使用工作階段資訊，請參閱[WIF 和 Web 伺服陣列](~/docs/framework/security/wif-and-web-farms.md)。  
  
 工作階段權杖可以在其中一個參考模式中操作，或不。 如果工作階段權杖不在參考模式中運作，將整個語彙基元會序列化為儲存在用戶端工作階段 cookie 中。 序列化的工作階段權杖可能會相當大，因此儲存在用戶端的 cookie 也可以是相當相當。 在參考模式中，而不是序列化整個工作階段 cookie 語彙基元時，權杖會儲存在工作階段的安全性權杖快取，並僅用來產生所需從快取擷取權杖的金鑰資訊會儲存在 cookie 中。 這可大幅減少之 cookie 的大小。 工作階段權杖快取藉由衍生自類別<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>和快取索引鍵由實作<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>類別。 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>並<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>屬性會用於<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>類別來產生快取索引鍵。  
  
 <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>屬性會決定是否處於參考模式的工作階段權杖。  
  
> [!IMPORTANT]
>  在參考模式中操作 Microsoft 建議您提供的處理常式<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType>事件中的 global.asax.cs 檔案及設定<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>傳入的權杖上<xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType>屬性。 這可確保工作階段權杖會以每個要求的參考模式運作，且優先只要設定<xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType>工作階段驗證模組上的屬性。  
  
 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> WIF 所提供的類別會序列化為 Ws-secure Conversation 工作階段權杖`<wsc:SecurityContextToken>`項目。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
    <altmember cref="T:System.IdentityModel.Services.SessionAuthenticationModule" />
    <related type="Article" href="https://msdn.microsoft.com/library/98bce126-18a9-401b-b20d-67ee462a5f8a">WIF 工作階段管理</related>
    <related type="Article" href="https://msdn.microsoft.com/library/fc3cd7fa-2b45-4614-a44f-8fa9b9d15284">WIF 和 Web 伺服陣列</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken claimsPrincipal" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">宣告主體，會從其中初始化語彙基元。</param>
        <summary>從指定的主體，初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表所顯示的是 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 類別之執行個體的初始屬性值。  
  
|屬性|初始值|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|設定為產生的唯一識別碼。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|設定為產生的唯一識別碼。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A> 加上<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType>屬性。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|包含產生的 128 位元對稱金鑰。 **注意：** 的預設實作不會使用這個屬性。 簽署和加密金鑰會取決於所套用的 cookie 轉換<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>處理語彙基元。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A> 加上<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType>屬性。|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="claimsPrincipal" /> 為 <see langword="null" />。  
  
-或- 
<paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 屬性為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SessionSecurityToken (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SessionSecurityToken(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">序列化物件資料。</param>
        <param name="context">關於來源的內容資訊</param>
        <summary>使用序列化資料，初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::String ^ context);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">從啟動程序語彙基元所產生的宣告主體。</param>
        <param name="context">應用程式特定的選擇性內容字串。</param>
        <summary>從指定的主體和啟動程序權杖初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表所顯示的是 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 類別之執行個體的初始屬性值。  
  
|屬性|初始值|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|設定為產生的唯一識別碼。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|設定為產生的唯一識別碼。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A> 加上<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType>屬性。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|包含產生的 128 位元對稱金鑰。 **注意：** 的預設實作不會使用這個屬性。 簽署和加密金鑰會取決於所套用的 cookie 轉換<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>處理語彙基元。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A> 加上<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType>屬性。|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="claimsPrincipal" /> 為 <see langword="null" />。  
  
-或- 
<paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 屬性為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, TimeSpan lifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, valuetype System.TimeSpan lifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, TimeSpan lifetime);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * TimeSpan -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, lifetime)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="lifetime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">宣告主體，會從其中初始化語彙基元。</param>
        <param name="lifetime">從目前時間開始的期間，在此期間權杖是有效的。 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" />屬性將設定成<see cref="P:System.DateTime.UtcNow" />，並且<see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" />屬性將設定成<see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" />再加上此參數所指定的期間。</param>
        <summary>從指定的主體，初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 類別的新執行個體。 新權杖的有效期是從<see cref="P:System.DateTime.UtcNow" />到指定的存留時間。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表所顯示的是 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 類別之執行個體的初始屬性值。  
  
|屬性|初始值|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|設定為產生的唯一識別碼。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|設定為產生的唯一識別碼。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A> 再加上`lifetime`。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|包含產生的 128 位元對稱金鑰。 **注意：** 的預設實作不會使用這個屬性。 簽署和加密金鑰會取決於所套用的 cookie 轉換<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>處理語彙基元。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A> 再加上`lifetime`。|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="claimsPrincipal" /> 為 <see langword="null" />。  
  
-或- 
<paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 屬性為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="lifetime" /> 小於或等於 <see cref="F:System.TimeSpan.Zero" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validFrom, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::String ^ context, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, context, validFrom, validTo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="validFrom" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="validTo" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">從啟動程序語彙基元所產生的宣告主體。</param>
        <param name="context">應用程式特定的選擇性內容字串。</param>
        <param name="validFrom">瞬間，到此瞬間權杖即變成有效。 <see langword="null" /> 表示指定 <see cref="P:System.DateTime.UtcNow" /></param>
        <param name="validTo">瞬間，超過此瞬間之後權杖不再有效。 <see langword="null" /> 會指定該值應藉由將 <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> 屬性的值與 <paramref name="validFrom" /> 參數指定的時間相加來決定。</param>
        <summary>從指定的主體和啟動程序語彙基元，以及使用指定的開始時間與到期時間，初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表所顯示的是 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 類別之執行個體的初始屬性值。  
  
|屬性|初始值|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|設定為產生的唯一識別碼。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|設定為產生的唯一識別碼。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|設定的值為<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>屬性所決定的`ValidFrom`參數。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|值<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>屬性所決定的`ValidTo`參數。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|包含產生的 128 位元對稱金鑰。 **注意：** 的預設實作不會使用這個屬性。 簽署和加密金鑰會取決於所套用的 cookie 轉換<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>處理語彙基元。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|值`validFrom`參數，或者，如果`validFrom`是`null`， <xref:System.DateTime.UtcNow%2A>。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|`validFrom` 參數的值。 如果`validFrom`已`null`，值<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>屬性 (由`validFrom`參數) 加上<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType>屬性。|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="claimsPrincipal" /> 為 <see langword="null" />。  
  
-或- 
<paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 屬性為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">無法驗證 <paramref name="validFrom" /> 和 <paramref name="validTo" /> 參數，例如 <paramref name="validTo" /> 指定了比 <paramref name="validFrom" /> 還要早發生的時間。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, string endpointId, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, string endpointId, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validFrom, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::String ^ context, System::String ^ endpointId, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, context, endpointId, validFrom, validTo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="validTo" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">從啟動程序語彙基元所產生的宣告主體。</param>
        <param name="context">應用程式特定的選擇性內容字串。</param>
        <param name="endpointId">這個權杖要繫結至的端點。 空字串會建立不限範圍的權杖。</param>
        <param name="validFrom">瞬間，到此瞬間權杖即變成有效。 <see langword="null" /> 表示指定 <see cref="P:System.DateTime.UtcNow" />。</param>
        <param name="validTo">瞬間，超過此瞬間之後權杖不再有效。 <see langword="null" /> 會指定該值應藉由將 <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> 屬性的值與 <paramref name="validFrom" /> 參數指定的時間相加來決定。</param>
        <summary>從指定的主體和啟動程序語彙基元，以及使用指定的開始時間與到期時間，初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 類別的新執行個體。 新權杖的範圍是到指定的端點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表所顯示的是 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 類別之執行個體的初始屬性值。  
  
|屬性|初始值|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|設定為產生的唯一識別碼。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|設定為產生的唯一識別碼。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|設定的值為<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>屬性所決定的`ValidFrom`參數。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|值<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>屬性所決定的`ValidTo`參數。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|包含產生的 128 位元對稱金鑰。 **注意：** 的預設實作不會使用這個屬性。 簽署和加密金鑰會取決於所套用的 cookie 轉換<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>處理語彙基元。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|值`validFrom`參數，或者，如果`validFrom`是`null`， <xref:System.DateTime.UtcNow%2A>。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|`validFrom` 參數的值。 如果`validFrom`已`null`，值<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>屬性 (由`validFrom`參數) 加上<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType>屬性。|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="claimsPrincipal" /> 為 <see langword="null" />。  
  
-或- 
<paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 屬性為 <see langword="null" />。  
  
-或- 
 <paramref name="endpointId" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">無法驗證 <paramref name="validFrom" /> 和 <paramref name="validTo" /> 參數，例如 <paramref name="validTo" /> 指定了比 <paramref name="validFrom" /> 還要早發生的時間。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, TimeSpan lifetime, System.IdentityModel.Tokens.SymmetricSecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, class System.Xml.UniqueId contextId, string context, string endpointId, valuetype System.TimeSpan lifetime, class System.IdentityModel.Tokens.SymmetricSecurityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::Xml::UniqueId ^ contextId, System::String ^ context, System::String ^ endpointId, TimeSpan lifetime, System::IdentityModel::Tokens::SymmetricSecurityKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * System.Xml.UniqueId * string * string * TimeSpan * System.IdentityModel.Tokens.SymmetricSecurityKey -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, contextId, context, endpointId, lifetime, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="lifetime" Type="System.TimeSpan" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SymmetricSecurityKey" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">與此工作階段相關聯的宣告主體。</param>
        <param name="contextId">與這個權杖關聯的內容識別項。</param>
        <param name="context">應用程式特定的選擇性內容字串。</param>
        <param name="endpointId">這個權杖要繫結至的端點。 空字串會建立不限範圍的權杖。</param>
        <param name="lifetime">工作階段權杖的存留期。 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" />屬性將設定成<see cref="P:System.DateTime.UtcNow" />，並且<see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" />屬性將設定成<see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" />再加上此參數所指定的期間。</param>
        <param name="key">選擇性對稱工作階段金鑰。</param>
        <summary>使用指定的主體、內容 ID、內容、端點、存留期和金鑰，初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表所顯示的是 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 類別之執行個體的初始屬性值。  
  
|屬性|初始值|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|設定為產生的唯一識別碼。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A> plus `lifetime`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|包含單一項目是`key`或者，如果`key`是`null`，產生的 128 位元對稱金鑰。 **注意：** 的預設實作不會使用這個屬性。 簽署和加密金鑰會取決於所套用的 cookie 轉換<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>處理語彙基元。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A> plus `lifetime`|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="claimsPrincipal" /> 為 <see langword="null" />。  
  
-或- 
<paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 屬性為 <see langword="null" />。  
  
-或- 
 <paramref name="contextId" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="endpointId" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="lifetime" /> 小於或等於 <see cref="F:System.TimeSpan.Zero" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, DateTime validFrom, TimeSpan lifetime, System.IdentityModel.Tokens.SymmetricSecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, class System.Xml.UniqueId contextId, string context, string endpointId, valuetype System.DateTime validFrom, valuetype System.TimeSpan lifetime, class System.IdentityModel.Tokens.SymmetricSecurityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::Xml::UniqueId ^ contextId, System::String ^ context, System::String ^ endpointId, DateTime validFrom, TimeSpan lifetime, System::IdentityModel::Tokens::SymmetricSecurityKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * System.Xml.UniqueId * string * string * DateTime * TimeSpan * System.IdentityModel.Tokens.SymmetricSecurityKey -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, contextId, context, endpointId, validFrom, lifetime, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.DateTime" />
        <Parameter Name="lifetime" Type="System.TimeSpan" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SymmetricSecurityKey" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">與此工作階段相關聯的宣告主體。</param>
        <param name="contextId">與這個權杖關聯的內容識別項。</param>
        <param name="context">應用程式特定的選擇性內容字串。</param>
        <param name="endpointId">這個權杖要繫結至的端點。 空字串會建立不限範圍的權杖。</param>
        <param name="validFrom">權杖變成有效的時間。</param>
        <param name="lifetime">工作階段權杖的存留期。 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> 屬性將設定成 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> 再加上此參數所指定的期間。</param>
        <param name="key">選擇性對稱工作階段金鑰。</param>
        <summary>使用指定的主體、內容 ID、內容、端點、有效時間戳記、存留期和金鑰，初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表所顯示的是 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 類別之執行個體的初始屬性值。  
  
|屬性|初始值|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId` 或者，如果`contextId`是`null`，產生的唯一識別碼。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|設定為產生的唯一識別碼。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|`validFrom`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|`validFrom` 再加上`lifetime`。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|包含單一項目是`key`或者，如果`key`是`null`，產生的 128 位元對稱金鑰。 **注意：** 的預設實作不會使用這個屬性。 簽署和加密金鑰會取決於所套用的 cookie 轉換<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>處理語彙基元。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|`validFrom`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|`validFrom` 再加上`lifetime`。|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="claimsPrincipal" /> 為 <see langword="null" />。  
  
-或- 
<paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 屬性為 <see langword="null" />。  
  
-或- 
 <paramref name="contextId" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="endpointId" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="lifetime" /> 小於或等於 <see cref="F:System.TimeSpan.Zero" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo, System.IdentityModel.Tokens.SymmetricSecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, class System.Xml.UniqueId contextId, string context, string endpointId, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validFrom, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validTo, class System.IdentityModel.Tokens.SymmetricSecurityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::Xml::UniqueId ^ contextId, System::String ^ context, System::String ^ endpointId, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo, System::IdentityModel::Tokens::SymmetricSecurityKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * System.Xml.UniqueId * string * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * System.IdentityModel.Tokens.SymmetricSecurityKey -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, contextId, context, endpointId, validFrom, validTo, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="validTo" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SymmetricSecurityKey" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">與此工作階段相關聯的宣告主體。</param>
        <param name="contextId">與這個權杖關聯的內容識別項。</param>
        <param name="context">應用程式特定的選擇性內容字串。</param>
        <param name="endpointId">這個權杖要繫結至的端點。 空字串會建立不限範圍的權杖。</param>
        <param name="validFrom">瞬間，到此瞬間權杖即變成有效。 <see langword="null" /> 表示指定 <see cref="P:System.DateTime.UtcNow" /></param>
        <param name="validTo">瞬間，超過此瞬間之後權杖不再有效。 <see langword="null" /> 會指定該值應藉由將 <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> 屬性的值與 <paramref name="validFrom" /> 參數指定的時間相加來決定。</param>
        <param name="key">選擇性對稱工作階段金鑰。</param>
        <summary>使用指定的主體、內容 ID、內容、端點、開始時間、到期時間和金鑰，初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表所顯示的是 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 類別之執行個體的初始屬性值。  
  
|屬性|初始值|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|設定為產生的唯一識別碼。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|設定的值為<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>屬性所決定的`ValidFrom`參數。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|值<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>屬性所決定的`ValidTo`參數。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|包含單一項目是`key`或者，如果`key`是`null`，產生的 128 位元對稱金鑰。 **注意：** 的預設實作不會使用這個屬性。 簽署和加密金鑰會取決於所套用的 cookie 轉換<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>處理語彙基元。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|值`validFrom`參數，或者，如果`validFrom`是`null`， <xref:System.DateTime.UtcNow%2A>。|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|`validFrom` 參數的值。 如果`validFrom`已`null`，值<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>屬性 (由`validFrom`參數) 加上<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType>屬性。|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="claimsPrincipal" /> 為 <see langword="null" />。  
  
-或- 
<paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 屬性為 <see langword="null" />。  
  
-或- 
 <paramref name="contextId" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="validFrom" /> 大於或等於 <paramref name="validTo" />。  
  
-或- 
 <paramref name="validTo" /> 小於目前時間。</exception>
      </Docs>
    </Member>
    <Member MemberName="ClaimsPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal ClaimsPrincipal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal ClaimsPrincipal" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClaimsPrincipal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ ClaimsPrincipal { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClaimsPrincipal : System.Security.Claims.ClaimsPrincipal" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與工作階段相關聯的宣告主體。</summary>
        <value>宣告主體。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public string Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Context" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Context { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : string" Usage="System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得使用者指定的內容值。</summary>
        <value>使用者指定的內容值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來儲存應用程式專屬的內容。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextId">
      <MemberSignature Language="C#" Value="public System.Xml.UniqueId ContextId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.UniqueId ContextId" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ContextId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextId As UniqueId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::UniqueId ^ ContextId { System::Xml::UniqueId ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextId : System.Xml.UniqueId" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ContextId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.UniqueId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得工作階段內容識別項。</summary>
        <value>工作階段內容識別項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 跨所有工作階段權杖的內容識別項是唯一的。  
  
 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>類別來產生金鑰，以在權杖使用的內容識別碼和金鑰產生<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>。  
  
 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>類別會序列化此屬性維持`<Identifier>`子項目`<wsc:SecurityContextToken>`項目。 如需詳細資訊，請參閱文件<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </Docs>
    </Member>
    <Member MemberName="EndpointId">
      <MemberSignature Language="C#" Value="public string EndpointId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EndpointId" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndpointId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EndpointId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndpointId : string" Usage="System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得此語彙基元的範圍結束點的 ID。</summary>
        <value>端點的 ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  如果<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>屬性是`null`、 為全域範圍的工作階段權杖都會被視為<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>類別。 這可能會有潛在的安全性風險。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="sessionSecurityToken.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">序列化物件資料。</param>
        <param name="context">關於來源或目的端的內容資訊。</param>
        <summary>以序列化工作階段安全性權杖所需的資訊設定 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.SessionSecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得此權杖的唯一識別碼。</summary>
        <value>權杖識別碼。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>類別會序列化此屬性維持`Id`屬性`<wsc:SecurityContextToken>`項目。 如需詳細資訊，請參閱文件<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPersistent">
      <MemberSignature Language="C#" Value="public bool IsPersistent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPersistent" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPersistent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPersistent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPersistent : bool with get, set" Usage="System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示這個權杖所表示的 cookie 是否為持續性的。</summary>
        <value>如果 cookie 是永續性的，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>屬性是`true`，cookie 會撰寫為永續性 cookie。 在過期前，關閉瀏覽器後，持續性 cookie 維持有效。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReferenceMode">
      <MemberSignature Language="C#" Value="public bool IsReferenceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceMode" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReferenceMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReferenceMode : bool with get, set" Usage="System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出工作階段安全性權杖是否正在參考模式下操作。</summary>
        <value>如果權杖正在工作階段模式下操作，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在參考模式中，在序列化期間產生簡單的成品，並將權杖的內容儲存在權杖的權杖處理常式相關聯的快取中。 權杖快取是衍生自類別的執行個體<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>。 Web 伺服陣列的情況下，權杖的快取必須在伺服陣列中的所有節點之間運作。  
  
> [!IMPORTANT]
>  在參考模式中操作 Microsoft 建議您提供的處理常式<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType>事件中的 global.asax.cs 檔案及設定<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>傳入的權杖上<xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType>屬性。 這可確保工作階段權杖會以每個要求的參考模式運作，且優先只要設定<xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType>工作階段驗證模組上的屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
        <altmember cref="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode" />
      </Docs>
    </Member>
    <Member MemberName="KeyEffectiveTime">
      <MemberSignature Language="C#" Value="public DateTime KeyEffectiveTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime KeyEffectiveTime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyEffectiveTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime KeyEffectiveTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyEffectiveTime : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得權杖中的金鑰開始有效的瞬間。</summary>
        <value>此金鑰為有效的起始瞬間。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExpirationTime">
      <MemberSignature Language="C#" Value="public DateTime KeyExpirationTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime KeyExpirationTime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyExpirationTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime KeyExpirationTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExpirationTime : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得瞬間，超過之後這個權杖中的金鑰不再有效。</summary>
        <value>此金鑰過期的瞬間。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyGeneration">
      <MemberSignature Language="C#" Value="public System.Xml.UniqueId KeyGeneration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.UniqueId KeyGeneration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyGeneration As UniqueId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::UniqueId ^ KeyGeneration { System::Xml::UniqueId ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyGeneration : System.Xml.UniqueId" Usage="System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.UniqueId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個權杖中金鑰產生的識別項</summary>
        <value>這個權杖中金鑰產生的唯一識別項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>屬性內是唯一的工作階段權杖。 當發出工作階段權杖時有只有一個內容識別碼，可透過存取<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>屬性。 當更新的工作階段權杖時，會新增金鑰的產生。  
  
 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>類別來產生金鑰，以在權杖使用的內容識別碼和金鑰產生<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>。  
  
 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>類別會序列化此屬性維持`<Instance>`子項目`<wsc:SecurityContextToken>`項目。 如需詳細資訊，請參閱文件<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </Docs>
    </Member>
    <Member MemberName="SecureConversationVersion">
      <MemberSignature Language="C#" Value="public Uri SecureConversationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SecureConversationVersion" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecureConversationVersion As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SecureConversationVersion { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecureConversationVersion : Uri" Usage="System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得可識別 WS-Secure Conversation 版本的 URI，該 WS-Secure Conversation 用於序列化這個工作階段安全性權杖。</summary>
        <value>可識別 WS-Secure Conversation 版本的 URI，該 WS-Secure Conversation 用於序列化這個權杖。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>基底類別支援的 Ws-secure Conversation Feb2005 和 Ws-secure Conversation 1.3。 這些版本的 Ws-secure Conversation 的 Uri 是"http://schemas.xmlsoap.org/ws/2005/02/sc"和"http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512"分別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與這個工作階段相關聯的索引鍵。 這通常是單一金鑰。</summary>
        <value>與工作階段相關聯的金鑰。 通常會有單一金鑰。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  預設實作不使用這個屬性。 簽署和加密金鑰會取決於所套用的 cookie 轉換<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>處理語彙基元。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public override DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得瞬間，超過之後權杖無效。</summary>
        <value>權杖成為有效的起始時間。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public override DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得瞬間，超過之後權杖不再有效。</summary>
        <value>在此時間之後權杖不再有效。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>