<Type Name="InMemorySymmetricSecurityKey" FullName="System.IdentityModel.Tokens.InMemorySymmetricSecurityKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc34841a6e9db67974298c8a94e77b04f08dfe17" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48653656" /></Metadata><TypeSignature Language="C#" Value="public class InMemorySymmetricSecurityKey : System.IdentityModel.Tokens.SymmetricSecurityKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InMemorySymmetricSecurityKey extends System.IdentityModel.Tokens.SymmetricSecurityKey" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />
  <TypeSignature Language="VB.NET" Value="Public Class InMemorySymmetricSecurityKey&#xA;Inherits SymmetricSecurityKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class InMemorySymmetricSecurityKey : System::IdentityModel::Tokens::SymmetricSecurityKey" />
  <TypeSignature Language="F#" Value="type InMemorySymmetricSecurityKey = class&#xA;    inherit SymmetricSecurityKey" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SymmetricSecurityKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7a80d-101">表示金鑰，這個金鑰是使用對稱演算法所產生，並且只儲存在本機電腦的隨機存取記憶體。</span><span class="sxs-lookup"><span data-stu-id="7a80d-101">Represents keys that are generated using symmetric algorithms and are only stored in the local computer's random access memory.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a80d-102">通常這個類別只會被基礎結構用來轉換使用對稱金鑰的 XML。</span><span class="sxs-lookup"><span data-stu-id="7a80d-102">Typically, this class is only used by the infrastructure to transform XML using a symmetric key.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7a80d-103">初始化 <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="7a80d-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InMemorySymmetricSecurityKey (byte[] symmetricKey);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] symmetricKey) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (symmetricKey As Byte())" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemorySymmetricSecurityKey(cli::array &lt;System::Byte&gt; ^ symmetricKey);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public InMemorySymmetricSecurityKey (byte[] key);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[])" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte())" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemorySymmetricSecurityKey(cli::array &lt;System::Byte&gt; ^ key);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.InMemorySymmetricSecurityKey : byte[] -&gt; System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" Usage="new System.IdentityModel.Tokens.InMemorySymmetricSecurityKey key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="symmetricKey" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="key" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="symmetricKey"><span data-ttu-id="7a80d-104"><see cref="T:System.Byte" /> 陣列，其中包含對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="7a80d-104">An array of <see cref="T:System.Byte" /> that contains the symmetric key.</span></span></param>
        <param name="key"><span data-ttu-id="7a80d-105"><see cref="T:System.Byte" /> 陣列，其中包含對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="7a80d-105">An array of <see cref="T:System.Byte" /> that contains the symmetric key.</span></span></param>
        <summary><span data-ttu-id="7a80d-106">使用指定的對稱金鑰，初始化 <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="7a80d-106">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /> class using the specified symmetric key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7a80d-107"><paramref name="symmetricKey" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-107"><paramref name="symmetricKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7a80d-108"><paramref name="symmetricKey" /> 長度為零。</span><span class="sxs-lookup"><span data-stu-id="7a80d-108"><paramref name="symmetricKey" /> is zero length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InMemorySymmetricSecurityKey (byte[] symmetricKey, bool cloneBuffer);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] symmetricKey, bool cloneBuffer) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (symmetricKey As Byte(), cloneBuffer As Boolean)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemorySymmetricSecurityKey(cli::array &lt;System::Byte&gt; ^ symmetricKey, bool cloneBuffer);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public InMemorySymmetricSecurityKey (byte[] key, bool clone);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key, bool clone) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[],System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte(), clone As Boolean)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InMemorySymmetricSecurityKey(cli::array &lt;System::Byte&gt; ^ key, bool clone);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.InMemorySymmetricSecurityKey : byte[] * bool -&gt; System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" Usage="new System.IdentityModel.Tokens.InMemorySymmetricSecurityKey (key, clone)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="symmetricKey" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="key" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="cloneBuffer" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="clone" Type="System.Boolean" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="symmetricKey"><span data-ttu-id="7a80d-109"><see cref="T:System.Byte" /> 陣列，其中包含對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="7a80d-109">An array of <see cref="T:System.Byte" /> that contains the symmetric key.</span></span></param>
        <param name="key"><span data-ttu-id="7a80d-110"><see cref="T:System.Byte" /> 陣列，其中包含對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="7a80d-110">An array of <see cref="T:System.Byte" /> that contains the symmetric key.</span></span></param>
        <param name="cloneBuffer"><span data-ttu-id="7a80d-111">若要複製傳入 <paramref name="symmetricKey" /> 參數的陣列，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-111"><see langword="true" /> to clone the array passed into the <paramref name="symmetricKey" /> parameter; otherwise, <see langword="false" />.</span></span></param>
        <param name="clone"><span data-ttu-id="7a80d-112">若要複製傳入 <paramref name="key" /> 參數的陣列，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-112"><see langword="true" /> to clone the array passed into the <paramref name="key" /> parameter; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7a80d-113">使用指定的對稱金鑰以及表示是否必須複製二進位資料的值，初始化 <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="7a80d-113">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /> class using the specified symmetric key and a value that indicates whether the binary data must be cloned.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7a80d-114"><paramref name="symmetricKey" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-114"><paramref name="symmetricKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7a80d-115"><paramref name="symmetricKey" /> 長度為零。</span><span class="sxs-lookup"><span data-stu-id="7a80d-115"><paramref name="symmetricKey" /> is zero length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public override byte[] DecryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecryptKey (algorithm As String, keyData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DecryptKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ keyData);" />
      <MemberSignature Language="F#" Value="override this.DecryptKey : string * byte[] -&gt; byte[]" Usage="inMemorySymmetricSecurityKey.DecryptKey (algorithm, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="7a80d-116">已用於加密金鑰的密碼編譯演算法。</span><span class="sxs-lookup"><span data-stu-id="7a80d-116">The cryptographic algorithm that was used to encrypt the key.</span></span></param>
        <param name="keyData"><span data-ttu-id="7a80d-117">包含加密金鑰的 <see cref="T:System.Byte" /> 陣列。</span><span class="sxs-lookup"><span data-stu-id="7a80d-117">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</span></span></param>
        <summary><span data-ttu-id="7a80d-118">解密指定的加密金鑰。</span><span class="sxs-lookup"><span data-stu-id="7a80d-118">Decrypts the specified encrypted key.</span></span></summary>
        <returns><span data-ttu-id="7a80d-119">包含解密金鑰的 <see cref="T:System.Byte" /> 陣列。</span><span class="sxs-lookup"><span data-stu-id="7a80d-119">An array of <see cref="T:System.Byte" /> that contains the decrypted key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a80d-120">使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 類別的靜態欄位，即可指定演算法。</span><span class="sxs-lookup"><span data-stu-id="7a80d-120">Use the static fields of the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7a80d-121">不支援 <paramref name="algorithm" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-121"><paramref name="algorithm" /> is not supported.</span></span> <span data-ttu-id="7a80d-122">支援的演算法為 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /> 和 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-122">The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public override byte[] EncryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EncryptKey (algorithm As String, keyData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ EncryptKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ keyData);" />
      <MemberSignature Language="F#" Value="override this.EncryptKey : string * byte[] -&gt; byte[]" Usage="inMemorySymmetricSecurityKey.EncryptKey (algorithm, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="7a80d-123">用於加密金鑰的密碼編譯演算法。</span><span class="sxs-lookup"><span data-stu-id="7a80d-123">The cryptographic algorithm to encrypt the key with.</span></span></param>
        <param name="keyData"><span data-ttu-id="7a80d-124">包含金鑰的 <see cref="T:System.Byte" /> 陣列。</span><span class="sxs-lookup"><span data-stu-id="7a80d-124">An array of <see cref="T:System.Byte" /> that contains the key.</span></span></param>
        <summary><span data-ttu-id="7a80d-125">加密指定的金鑰。</span><span class="sxs-lookup"><span data-stu-id="7a80d-125">Encrypts the specified key.</span></span></summary>
        <returns><span data-ttu-id="7a80d-126">包含加密金鑰的 <see cref="T:System.Byte" /> 陣列。</span><span class="sxs-lookup"><span data-stu-id="7a80d-126">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a80d-127">使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 類別的靜態欄位，即可指定演算法。</span><span class="sxs-lookup"><span data-stu-id="7a80d-127">Use the static fields of the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7a80d-128">不支援 <paramref name="algorithm" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-128"><paramref name="algorithm" /> is not supported.</span></span> <span data-ttu-id="7a80d-129">支援的演算法為 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /> 或 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-129">The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />, or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateDerivedKey">
      <MemberSignature Language="C#" Value="public override byte[] GenerateDerivedKey (string algorithm, byte[] label, byte[] nonce, int derivedKeyLength, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GenerateDerivedKey(string algorithm, unsigned int8[] label, unsigned int8[] nonce, int32 derivedKeyLength, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GenerateDerivedKey (algorithm As String, label As Byte(), nonce As Byte(), derivedKeyLength As Integer, offset As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GenerateDerivedKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ label, cli::array &lt;System::Byte&gt; ^ nonce, int derivedKeyLength, int offset);" />
      <MemberSignature Language="F#" Value="override this.GenerateDerivedKey : string * byte[] * byte[] * int * int -&gt; byte[]" Usage="inMemorySymmetricSecurityKey.GenerateDerivedKey (algorithm, label, nonce, derivedKeyLength, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="label" Type="System.Byte[]" />
        <Parameter Name="nonce" Type="System.Byte[]" />
        <Parameter Name="derivedKeyLength" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="7a80d-130">表示用來產生衍生金鑰之密碼編譯演算法的 URI。</span><span class="sxs-lookup"><span data-stu-id="7a80d-130">A URI that represents the cryptographic algorithm to use to generate the derived key.</span></span></param>
        <param name="label"><span data-ttu-id="7a80d-131"><see cref="T:System.Byte" /> 陣列，其中包含密碼編譯演算法的標籤參數。</span><span class="sxs-lookup"><span data-stu-id="7a80d-131">An array of <see cref="T:System.Byte" /> that contains the label parameter for the cryptographic algorithm.</span></span></param>
        <param name="nonce"><span data-ttu-id="7a80d-132"><see cref="T:System.Byte" /> 陣列，其中包含用來建立衍生金鑰的 Nonce。</span><span class="sxs-lookup"><span data-stu-id="7a80d-132">An array of <see cref="T:System.Byte" /> that contains the nonce that is used to create a derived key.</span></span></param>
        <param name="derivedKeyLength"><span data-ttu-id="7a80d-133">衍生金鑰的大小。</span><span class="sxs-lookup"><span data-stu-id="7a80d-133">The size of the derived key.</span></span></param>
        <param name="offset"><span data-ttu-id="7a80d-134">衍生金鑰在這個方法所傳回之位元組陣列中的所在位置。</span><span class="sxs-lookup"><span data-stu-id="7a80d-134">The position at which the derived key is located in the byte array that is returned from this method.</span></span></param>
        <summary><span data-ttu-id="7a80d-135">使用目前金鑰指定的密碼編譯演算法和參數來產生衍生金鑰。</span><span class="sxs-lookup"><span data-stu-id="7a80d-135">Generates a derived key using the specified cryptographic algorithm and parameters for the current key.</span></span></summary>
        <returns><span data-ttu-id="7a80d-136"><see cref="T:System.Byte" /> 陣列，其中包含衍生金鑰。</span><span class="sxs-lookup"><span data-stu-id="7a80d-136">An array of <see cref="T:System.Byte" /> that contains the derived key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a80d-137">為了將 P-SHA1 指定成密碼編譯演算法，此時會使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation> 欄位。</span><span class="sxs-lookup"><span data-stu-id="7a80d-137">To specify P-SHA1 as the cryptographic algorithm, use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation> field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7a80d-138">不支援 <paramref name="algorithm" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-138"><paramref name="algorithm" /> is not supported.</span></span> <span data-ttu-id="7a80d-139">支援的演算法為 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-139">The supported algorithms is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionTransform">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform GetDecryptionTransform (string algorithm, byte[] iv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform GetDecryptionTransform(string algorithm, unsigned int8[] iv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecryptionTransform (algorithm As String, iv As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ GetDecryptionTransform(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ iv);" />
      <MemberSignature Language="F#" Value="override this.GetDecryptionTransform : string * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="inMemorySymmetricSecurityKey.GetDecryptionTransform (algorithm, iv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="iv" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="7a80d-140">解密加密文字 (例如加密的 XML) 的密碼編譯演算法。</span><span class="sxs-lookup"><span data-stu-id="7a80d-140">A cryptographic algorithm that decrypts cipher text, such as encrypted XML.</span></span></param>
        <param name="iv"><span data-ttu-id="7a80d-141"><see cref="T:System.Byte" /> 陣列，其中包含指定之演算法的初始化向量 (<see langword="IV" />)。</span><span class="sxs-lookup"><span data-stu-id="7a80d-141">An array of <see cref="T:System.Byte" /> that contains the initialization vector (<see langword="IV" />) for the specified algorithm.</span></span></param>
        <summary><span data-ttu-id="7a80d-142">取得轉換，這個轉換會使用指定的密碼編譯演算法來解密加密文字。</span><span class="sxs-lookup"><span data-stu-id="7a80d-142">Gets a transform that decrypts cipher text using the specified cryptographic algorithm.</span></span></summary>
        <returns><span data-ttu-id="7a80d-143">表示解密轉換的 <see cref="T:System.Security.Cryptography.ICryptoTransform" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-143">An <see cref="T:System.Security.Cryptography.ICryptoTransform" /> that represents the decryption transform.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a80d-144">使用表示在 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 類別中之解密演算法的欄位來指定此演算法。</span><span class="sxs-lookup"><span data-stu-id="7a80d-144">Use the fields that represent decryption algorithms in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7a80d-145">不支援 <paramref name="algorithm" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-145"><paramref name="algorithm" /> is not supported.</span></span> <span data-ttu-id="7a80d-146">支援的演算法為 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /> 和 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-146">The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionTransform">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform GetEncryptionTransform (string algorithm, byte[] iv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform GetEncryptionTransform(string algorithm, unsigned int8[] iv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncryptionTransform (algorithm As String, iv As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ GetEncryptionTransform(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ iv);" />
      <MemberSignature Language="F#" Value="override this.GetEncryptionTransform : string * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="inMemorySymmetricSecurityKey.GetEncryptionTransform (algorithm, iv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="iv" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="7a80d-147">加密 XML 的密碼編譯演算法。</span><span class="sxs-lookup"><span data-stu-id="7a80d-147">A cryptographic algorithm that encrypts XML.</span></span></param>
        <param name="iv"><span data-ttu-id="7a80d-148"><see cref="T:System.Byte" /> 陣列，其中包含指定之演算法的初始化向量 (<see langword="IV" />)。</span><span class="sxs-lookup"><span data-stu-id="7a80d-148">An array of <see cref="T:System.Byte" /> that contains the initialization vector (<see langword="IV" />) for the specified algorithm.</span></span></param>
        <summary><span data-ttu-id="7a80d-149">取得轉換，這個轉換會使用指定的密碼編譯演算法來加密 XML。</span><span class="sxs-lookup"><span data-stu-id="7a80d-149">Gets a transform that encrypts XML using the specified cryptographic algorithm.</span></span></summary>
        <returns><span data-ttu-id="7a80d-150">表示加密轉換的 <see cref="T:System.Security.Cryptography.ICryptoTransform" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-150">An <see cref="T:System.Security.Cryptography.ICryptoTransform" /> that represents the encryption transform.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a80d-151">使用表示在 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 類別中之加密演算法的欄位來指定此演算法。</span><span class="sxs-lookup"><span data-stu-id="7a80d-151">Use the fields that represent encryption algorithms in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7a80d-152">不支援 <paramref name="algorithm" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-152"><paramref name="algorithm" /> is not supported.</span></span> <span data-ttu-id="7a80d-153">支援的演算法為 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /> 和 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-153">The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIVSize">
      <MemberSignature Language="C#" Value="public override int GetIVSize (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetIVSize(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetIVSize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetIVSize (algorithm As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetIVSize(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.GetIVSize : string -&gt; int" Usage="inMemorySymmetricSecurityKey.GetIVSize algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="7a80d-154">要取得其初始化向量 (<see langword="IV" />) 大小的密碼編譯演算法。</span><span class="sxs-lookup"><span data-stu-id="7a80d-154">The cryptographic algorithm to get the size of the initialization vector (<see langword="IV" />).</span></span></param>
        <summary><span data-ttu-id="7a80d-155">取得指定之密碼編譯演算法所需要的初始化向量 (<see langword="IV" />) 大小 (以位元為單位)。</span><span class="sxs-lookup"><span data-stu-id="7a80d-155">Gets the size, in bits, of the initialization vector (<see langword="IV" />) that is required for the specified cryptographic algorithm.</span></span></summary>
        <returns><span data-ttu-id="7a80d-156">指定於 <see langword="IV" /> 參數中之密碼編譯演算法所需要的初始化向量 (<paramref name="algorithm" />) 大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="7a80d-156">The size, in bits, of the initialization vector (<see langword="IV" />) that is required for the cryptographic algorithm specified in the <paramref name="algorithm" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a80d-157">使用表示在 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 類別中之加密演算法的欄位來指定此演算法。</span><span class="sxs-lookup"><span data-stu-id="7a80d-157">Use the fields that represent encryption algorithms in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7a80d-158">不支援 <paramref name="algorithm" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-158"><paramref name="algorithm" /> is not supported.</span></span> <span data-ttu-id="7a80d-159">支援的演算法為 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /> 和 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-159">The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyedHashAlgorithm">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeyedHashAlgorithm GetKeyedHashAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.KeyedHashAlgorithm GetKeyedHashAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetKeyedHashAlgorithm (algorithm As String) As KeyedHashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::KeyedHashAlgorithm ^ GetKeyedHashAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.GetKeyedHashAlgorithm : string -&gt; System.Security.Cryptography.KeyedHashAlgorithm" Usage="inMemorySymmetricSecurityKey.GetKeyedHashAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeyedHashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="7a80d-160">要取得其執行個體的索引雜湊演算法。</span><span class="sxs-lookup"><span data-stu-id="7a80d-160">The keyed hash algorithm to get an instance of.</span></span></param>
        <summary><span data-ttu-id="7a80d-161">取得所指定索引雜湊演算法的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7a80d-161">Gets an instance of the specified keyed hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="7a80d-162"><see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" />，表示索引雜湊演算法。</span><span class="sxs-lookup"><span data-stu-id="7a80d-162">A <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> that represents the keyed hash algorithm.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7a80d-163">不支援 <paramref name="algorithm" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-163"><paramref name="algorithm" /> is not supported.</span></span> <span data-ttu-id="7a80d-164">支援的演算法為 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-164">The supported algorithms is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.SymmetricAlgorithm GetSymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetSymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSymmetricAlgorithm (algorithm As String) As SymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::SymmetricAlgorithm ^ GetSymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.GetSymmetricAlgorithm : string -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="inMemorySymmetricSecurityKey.GetSymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="7a80d-165">要取得其執行個體的對稱演算法。</span><span class="sxs-lookup"><span data-stu-id="7a80d-165">The symmetric algorithm to get an instance of.</span></span></param>
        <summary><span data-ttu-id="7a80d-166">取得所指定對稱演算法的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7a80d-166">Gets an instance of the specified symmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="7a80d-167"><see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />，表示對稱演算法。</span><span class="sxs-lookup"><span data-stu-id="7a80d-167">A <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> that represents the symmetric algorithm.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7a80d-168">不支援 <paramref name="algorithm" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-168"><paramref name="algorithm" /> is not supported.</span></span> <span data-ttu-id="7a80d-169">支援的演算法為 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />、<see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /> 以及 <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-169">The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />,  <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSymmetricKey">
      <MemberSignature Language="C#" Value="public override byte[] GetSymmetricKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetSymmetricKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSymmetricKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetSymmetricKey();" />
      <MemberSignature Language="F#" Value="override this.GetSymmetricKey : unit -&gt; byte[]" Usage="inMemorySymmetricSecurityKey.GetSymmetricKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7a80d-170">取得表示對稱金鑰的位元組。</span><span class="sxs-lookup"><span data-stu-id="7a80d-170">Gets the bytes that represent the symmetric key.</span></span></summary>
        <returns><span data-ttu-id="7a80d-171"><see cref="T:System.Byte" /> 陣列，其中包含對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="7a80d-171">An array of <see cref="T:System.Byte" /> that contains the symmetric key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsAsymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAsymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsAsymmetricAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsAsymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsAsymmetricAlgorithm : string -&gt; bool" Usage="inMemorySymmetricSecurityKey.IsAsymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="7a80d-172">密碼編譯演算法。</span><span class="sxs-lookup"><span data-stu-id="7a80d-172">The cryptographic algorithm.</span></span></param>
        <summary><span data-ttu-id="7a80d-173">取得值，這個值會指出指定的演算法是否會使用非對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="7a80d-173">Gets a value that indicates whether the specified algorithm uses asymmetric keys.</span></span></summary>
        <returns><span data-ttu-id="7a80d-174">如果指定的演算法會使用非對稱金鑰，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-174"><see langword="true" /> when the specified algorithm uses asymmetric keys; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsSupportedAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSupportedAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSupportedAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSupportedAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSupportedAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsSupportedAlgorithm : string -&gt; bool" Usage="inMemorySymmetricSecurityKey.IsSupportedAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="7a80d-175">密碼編譯演算法。</span><span class="sxs-lookup"><span data-stu-id="7a80d-175">The cryptographic algorithm.</span></span></param>
        <summary><span data-ttu-id="7a80d-176">取得值，這個值會指出這個類別是否支援指定的演算法。</span><span class="sxs-lookup"><span data-stu-id="7a80d-176">Gets a value that indicates whether the specified algorithm is supported by this class.</span></span></summary>
        <returns><span data-ttu-id="7a80d-177">如果這個類別支援指定的演算法，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-177"><see langword="true" /> when the specified algorithm is supported by this class; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a80d-178">這個類別所支援的對稱演算法就是下列欄位所表示的演算法：</span><span class="sxs-lookup"><span data-stu-id="7a80d-178">The symmetric algorithms that are supported by this class are the algorithms represented by the following fields:</span></span>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption>  
  
-   <xref:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsSymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSymmetricAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsSymmetricAlgorithm : string -&gt; bool" Usage="inMemorySymmetricSecurityKey.IsSymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="7a80d-179">密碼編譯演算法。</span><span class="sxs-lookup"><span data-stu-id="7a80d-179">The cryptographic algorithm.</span></span></param>
        <summary><span data-ttu-id="7a80d-180">取得值，這個值會指出指定的演算法是否會使用對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="7a80d-180">Gets a value that indicates whether the specified algorithm uses symmetric keys.</span></span></summary>
        <returns><span data-ttu-id="7a80d-181">如果指定的演算法會使用對稱金鑰，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7a80d-181"><see langword="true" /> when the specified algorithm uses symmetric keys; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int" Usage="System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a80d-182">取得金鑰的大小 (以位元為單位)。</span><span class="sxs-lookup"><span data-stu-id="7a80d-182">Gets the size, in bits, of the key.</span></span></summary>
        <value><span data-ttu-id="7a80d-183">金鑰的大小 (以位元為單位)。</span><span class="sxs-lookup"><span data-stu-id="7a80d-183">The size, in bits, of the key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>