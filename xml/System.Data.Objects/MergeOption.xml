<Type Name="MergeOption" FullName="System.Data.Objects.MergeOption">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68d85eba3e5aa0bc4c461a08ab717bc2e24b1d55" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37678283" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum MergeOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MergeOption extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.MergeOption" />
  <TypeSignature Language="VB.NET" Value="Public Enum MergeOption" />
  <TypeSignature Language="C++ CLI" Value="public enum class MergeOption" />
  <TypeSignature Language="F#" Value="type MergeOption = " />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>指定載入物件內容中的物件如何與已經位於物件內容中的物件合併。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] 只會維護快取中具有特定實體索引鍵之物件的單一執行個體。 <xref:System.Data.EntityKey> 物件是不可變的物件，代表物件的識別。 實體索引鍵是用來執行物件內容中的識別解析。 如需詳細資訊，請參閱 <<c0> [ 使用實體索引鍵](http://msdn.microsoft.com/library/fe3f4206-d277-43a1-a72f-4e86fdf12b9f)。 如果具有相同的身分識別的實體已在追蹤中，來自資料來源與狀態管理員中的現有資料的資料會根據合併<xref:System.Data.Objects.MergeOption>的查詢。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AppendOnly">
      <MemberSignature Language="C#" Value="AppendOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption AppendOnly = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.AppendOnly" />
      <MemberSignature Language="VB.NET" Value="AppendOnly" />
      <MemberSignature Language="C++ CLI" Value="AppendOnly" />
      <MemberSignature Language="F#" Value="AppendOnly = 0" Usage="System.Data.Objects.MergeOption.AppendOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>不存在物件內容中的物件會附加至內容。 如果某個物件已經存在內容中，就不會使用資料來源值來覆寫項目中物件屬性的目前和原始值。 物件項目的狀態和項目中物件屬性的狀態都不會變更。 <see cref="F:System.Data.Objects.MergeOption.AppendOnly" /> 是預設的合併選項。</summary>
      </Docs>
    </Member>
    <Member MemberName="NoTracking">
      <MemberSignature Language="C#" Value="NoTracking" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption NoTracking = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.NoTracking" />
      <MemberSignature Language="VB.NET" Value="NoTracking" />
      <MemberSignature Language="C++ CLI" Value="NoTracking" />
      <MemberSignature Language="F#" Value="NoTracking = 3" Usage="System.Data.Objects.MergeOption.NoTracking" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>物件會保持處於 <see cref="F:System.Data.EntityState.Detached" /> 狀態中，而且不會在 <see cref="T:System.Data.Objects.ObjectStateManager" /> 中追蹤。 不過，[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] 產生的實體和具有 Proxy 的 POCO 實體會維護物件內容的參考，以利載入相關的物件。</summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteChanges">
      <MemberSignature Language="C#" Value="OverwriteChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption OverwriteChanges = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.OverwriteChanges" />
      <MemberSignature Language="VB.NET" Value="OverwriteChanges" />
      <MemberSignature Language="C++ CLI" Value="OverwriteChanges" />
      <MemberSignature Language="F#" Value="OverwriteChanges = 1" Usage="System.Data.Objects.MergeOption.OverwriteChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>不存在物件內容中的物件會附加至內容。 如果某個物件已經存在內容中，就會使用資料來源值來覆寫項目中物件屬性的目前和原始值。 物件項目的狀態會設定為 <see cref="F:System.Data.EntityState.Unchanged" />，而且沒有屬性會標示為已修改。</summary>
      </Docs>
    </Member>
    <Member MemberName="PreserveChanges">
      <MemberSignature Language="C#" Value="PreserveChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption PreserveChanges = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.PreserveChanges" />
      <MemberSignature Language="VB.NET" Value="PreserveChanges" />
      <MemberSignature Language="C++ CLI" Value="PreserveChanges" />
      <MemberSignature Language="F#" Value="PreserveChanges = 2" Usage="System.Data.Objects.MergeOption.PreserveChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>不存在物件內容中的物件會附加至內容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果實體的狀態為 <xref:System.Data.EntityState.Unchanged>，就會使用資料來源值來覆寫項目中的目前和原始值。 實體的狀態會維持 <xref:System.Data.EntityState.Unchanged>，而且沒有屬性會標示為已修改。  
  
 如果實體的狀態為 <xref:System.Data.EntityState.Modified>，就不會使用資料來源值來覆寫已修改屬性的目前值。 不過，系統會使用資料來源的值來覆寫未修改屬性的原始值。  
  
 在 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]第 4 版，[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]比較未修改屬性的目前值與資料來源所傳回的值。 如果這些值不同，屬性就會標示為已修改。  
  
 在 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 3.5 SP1 版中，[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] 不會將屬性標示為已修改，即使資料來源中的值不同也一樣。  
  
 當您呼叫 <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 時，只有已修改的屬性會保存到資料來源。  
  
 若要保留 3.5 SP1 的行為，請將 <xref:System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior%2A> 設定為 `true`。 PreserveChanges 選項可用來解決開放式並行存取例外狀況，同時保存本機內容中的變更。 如需詳細資訊，請參閱 <<c0> [ 儲存變更及管理並行存取](http://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>