<Type Name="ObjectQuery" FullName="System.Data.Objects.ObjectQuery">
  <Metadata><Meta Name="ms.openlocfilehash" Value="560b96d7ed0ff59fac03ff3a3ff2839fd3831cc6" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55363668" /></Metadata><TypeSignature Language="C#" Value="public abstract class ObjectQuery : System.Collections.IEnumerable, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectQuery extends System.Object implements class System.Collections.IEnumerable, class System.ComponentModel.IListSource, class System.Linq.IOrderedQueryable, class System.Linq.IQueryable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectQuery" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectQuery&#xA;Implements IEnumerable, IListSource, IOrderedQueryable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectQuery abstract : System::Collections::IEnumerable, System::ComponentModel::IListSource, System::Linq::IOrderedQueryable" />
  <TypeSignature Language="F#" Value="type ObjectQuery = class&#xA;    interface IEnumerable&#xA;    interface IQueryable&#xA;    interface IOrderedQueryable&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="7a29a-101">使用 LINQ to Entities 和 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 針對概念模型實作查詢的通用功能。</span><span class="sxs-lookup"><span data-stu-id="7a29a-101">Implements common functionality for queries against a conceptual model using both LINQ to Entities and <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a29a-102"><xref:System.Data.Objects.ObjectQuery> 是針對概念模型進行查詢的基底類別。</span><span class="sxs-lookup"><span data-stu-id="7a29a-102"><xref:System.Data.Objects.ObjectQuery> is the base class for queries against a conceptual model.</span></span> <span data-ttu-id="7a29a-103"><xref:System.Data.Objects.ObjectQuery> 提供可確保 LINQ to Entities 查詢具有相同的功能，為查詢執行使用<xref:System.Data.Objects.ObjectQuery%601>。</span><span class="sxs-lookup"><span data-stu-id="7a29a-103"><xref:System.Data.Objects.ObjectQuery> is provided to ensure that LINQ to Entities queries have the same functionality as queries executed using <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="7a29a-104">您必須使用<xref:System.Data.Objects.ObjectQuery%601>與指定的型別查詢概念模型。</span><span class="sxs-lookup"><span data-stu-id="7a29a-104">You must use <xref:System.Data.Objects.ObjectQuery%601> with a specified type to query a conceptual model.</span></span> <span data-ttu-id="7a29a-105">如需詳細資訊，請參閱 <<c0> [ 物件查詢](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)。</span><span class="sxs-lookup"><span data-stu-id="7a29a-105">For more information, see [Object Queries](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/641f9b68-9046-47a1-abb0-1c8eaeda0e2d"><span data-ttu-id="7a29a-106">LINQ to Entities</span><span class="sxs-lookup"><span data-stu-id="7a29a-106">LINQ to Entities</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string" Usage="System.Data.Objects.ObjectQuery.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a29a-107">傳回查詢的命令文字。</span><span class="sxs-lookup"><span data-stu-id="7a29a-107">Returns the command text for the query.</span></span></summary>
        <value><span data-ttu-id="7a29a-108"><see langword="string" /> 值。</span><span class="sxs-lookup"><span data-stu-id="7a29a-108">A <see langword="string" /> value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ObjectContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectContext ^ Context { System::Data::Objects::ObjectContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Data.Objects.ObjectContext" Usage="System.Data.Objects.ObjectQuery.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a29a-109">取得與這個物件查詢相關聯的內容物件。</span><span class="sxs-lookup"><span data-stu-id="7a29a-109">Gets the object context associated with this object query.</span></span></summary>
        <value><span data-ttu-id="7a29a-110">與這個 <see cref="T:System.Data.Objects.ObjectContext" /> 執行個體 (Instance) 相關聯的 <see cref="T:System.Data.Objects.ObjectQuery`1" />。</span><span class="sxs-lookup"><span data-stu-id="7a29a-110">The <see cref="T:System.Data.Objects.ObjectContext" /> associated with this <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a29a-111">查詢的內容包含連接、快取和中繼資料 (Metadata)。</span><span class="sxs-lookup"><span data-stu-id="7a29a-111">The context for the query includes the connection, cache, and metadata.</span></span> <span data-ttu-id="7a29a-112">如需詳細資訊，請參閱[物件服務概觀 (Entity Framework)](https://msdn.microsoft.com/library/43014cf9-c9cb-4538-bfbb-197820b60038)。</span><span class="sxs-lookup"><span data-stu-id="7a29a-112">For more information, see [Object Services Overview (Entity Framework)](https://msdn.microsoft.com/library/43014cf9-c9cb-4538-bfbb-197820b60038).</span></span>  
  
 <span data-ttu-id="7a29a-113">連接屬性是可變動的，而且您必須先設定連接屬性，然後才能執行查詢。</span><span class="sxs-lookup"><span data-stu-id="7a29a-113">The connection property is mutable and must be set before a query can be executed.</span></span> <span data-ttu-id="7a29a-114">如需詳細資訊，請參閱 <<c0> [ 管理物件服務 (Entity Framework) 中的連接](https://msdn.microsoft.com/library/a1df87ef-6441-417d-b264-bb58360e5d67(v=vs.90))。</span><span class="sxs-lookup"><span data-stu-id="7a29a-114">For more information, see [Managing Connections in Object Services (Entity Framework)](https://msdn.microsoft.com/library/a1df87ef-6441-417d-b264-bb58360e5d67(v=vs.90)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a29a-115">本主題中的範例根據[AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="7a29a-115">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="7a29a-116">此範例會取得與這個 <xref:System.Data.Objects.ObjectContext> 物件相關聯的 <xref:System.Data.Objects.ObjectQuery%601> 物件。</span><span class="sxs-lookup"><span data-stu-id="7a29a-116">The example gets the <xref:System.Data.Objects.ObjectContext> object associated with this <xref:System.Data.Objects.ObjectQuery%601> object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Context](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_context)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Context](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_context)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="7a29a-117">查詢資料當做物件及塑造結果 (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="7a29a-117">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnablePlanCaching">
      <MemberSignature Language="C#" Value="public bool EnablePlanCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePlanCaching" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.EnablePlanCaching" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePlanCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePlanCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePlanCaching : bool with get, set" Usage="System.Data.Objects.ObjectQuery.EnablePlanCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a29a-118">取得或設定值，這個值會指出是否應該快取查詢計畫。</span><span class="sxs-lookup"><span data-stu-id="7a29a-118">Gets or sets a value that indicates whether the query plan should be cached.</span></span></summary>
        <value><span data-ttu-id="7a29a-119">值，這個值會指出是否應該快取查詢計畫。</span><span class="sxs-lookup"><span data-stu-id="7a29a-119">A value that indicates whether the query plan should be cached.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a29a-120">如需詳細資訊，請參閱 <<c0> [ 查詢計劃快取](~/docs/framework/data/adonet/ef/language-reference/query-plan-caching-entity-sql.md)。</span><span class="sxs-lookup"><span data-stu-id="7a29a-120">For more information, see [Query Plan Caching](~/docs/framework/data/adonet/ef/language-reference/query-plan-caching-entity-sql.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="7a29a-121">以物件形式查詢資料 (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="7a29a-121">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult Execute (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult Execute(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectResult ^ Execute(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectResult" Usage="objectQuery.Execute mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption"><span data-ttu-id="7a29a-122">要在執行查詢時使用的 <see cref="T:System.Data.Objects.MergeOption" />。</span><span class="sxs-lookup"><span data-stu-id="7a29a-122">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query.</span></span> <span data-ttu-id="7a29a-123">預設為 <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />。</span><span class="sxs-lookup"><span data-stu-id="7a29a-123">The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span></span></param>
        <summary><span data-ttu-id="7a29a-124">使用指定的合併選項執行不具型別的物件查詢。</span><span class="sxs-lookup"><span data-stu-id="7a29a-124">Executes the untyped object query with the specified merge option.</span></span></summary>
        <returns><span data-ttu-id="7a29a-125"><see cref="T:System.Data.Objects.ObjectResult`1" />，其中包含查詢所傳回之實體 (Entity) 物件的集合。</span><span class="sxs-lookup"><span data-stu-id="7a29a-125">An <see cref="T:System.Data.Objects.ObjectResult`1" /> that contains a collection of entity objects returned by the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a29a-126">物件查詢的預設合併選項是 <xref:System.Data.Objects.MergeOption.AppendOnly>。</span><span class="sxs-lookup"><span data-stu-id="7a29a-126">The default merge option for object queries is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="7a29a-127">如需詳細資訊，請參閱 <<c0> [ 識別解析、 狀態管理和變更追蹤](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)。</span><span class="sxs-lookup"><span data-stu-id="7a29a-127">For more information, see [Identity Resolution, State Management, and Change Tracking](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
 <span data-ttu-id="7a29a-128">在 <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> 上針對具型別的物件查詢呼叫 <xref:System.Data.Objects.ObjectQuery%601> 方法。</span><span class="sxs-lookup"><span data-stu-id="7a29a-128">Call the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method on <xref:System.Data.Objects.ObjectQuery%601> for typed object queries.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="7a29a-129">以物件形式查詢資料 (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="7a29a-129">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetResultType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.TypeUsage GetResultType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.TypeUsage GetResultType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.GetResultType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResultType () As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::TypeUsage ^ GetResultType();" />
      <MemberSignature Language="F#" Value="member this.GetResultType : unit -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="objectQuery.GetResultType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7a29a-130">傳回查詢之結果型別的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7a29a-130">Returns information about the result type of the query.</span></span></summary>
        <returns><span data-ttu-id="7a29a-131"><see cref="T:System.Data.Metadata.Edm.TypeUsage" /> 值，其中包含查詢之結果型別的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="7a29a-131">A <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> value that contains information about the result type of the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a29a-132">這個範例根據[AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="7a29a-132">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="7a29a-133">此範例會建立型別為 <xref:System.Data.Objects.ObjectQuery%601> 的 <xref:System.Data.Common.DbDataRecord> 並且使用 <xref:System.Data.Objects.ObjectQuery.GetResultType%2A> 來判斷傳回的型別是否代表資料列。</span><span class="sxs-lookup"><span data-stu-id="7a29a-133">The example creates an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord> and uses <xref:System.Data.Objects.ObjectQuery.GetResultType%2A> to determine whether the type returned represents a row.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#GetResultType](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#getresulttype)]
 [!code-vb[DP ObjectServices Concepts#GetResultType](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#getresulttype)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a1df87ef-6441-417d-b264-bb58360e5d67(v=vs.90)"><span data-ttu-id="7a29a-134">管理物件服務中的連接 (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="7a29a-134">Managing Connections in Object Services (Entity Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/196097a5-a791-4ac4-9e6a-805685d481d5"><span data-ttu-id="7a29a-135">ADO.NET 中繼資料</span><span class="sxs-lookup"><span data-stu-id="7a29a-135">ADO.NET Metadata</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MergeOption">
      <MemberSignature Language="C#" Value="public System.Data.Objects.MergeOption MergeOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Objects.MergeOption MergeOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.MergeOption" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOption As MergeOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::MergeOption MergeOption { System::Data::Objects::MergeOption get(); void set(System::Data::Objects::MergeOption value); };" />
      <MemberSignature Language="F#" Value="member this.MergeOption : System.Data.Objects.MergeOption with get, set" Usage="System.Data.Objects.ObjectQuery.MergeOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a29a-136">取得或設定從查詢傳回的物件如何加入至內容物件。</span><span class="sxs-lookup"><span data-stu-id="7a29a-136">Gets or sets how objects returned from a query are added to the object context.</span></span></summary>
        <value><span data-ttu-id="7a29a-137">查詢 <see cref="T:System.Data.Objects.MergeOption" />。</span><span class="sxs-lookup"><span data-stu-id="7a29a-137">The query <see cref="T:System.Data.Objects.MergeOption" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a29a-138">如果沒有指定 <xref:System.Data.Objects.MergeOption>，預設值就是 <xref:System.Data.Objects.MergeOption.AppendOnly>。</span><span class="sxs-lookup"><span data-stu-id="7a29a-138">If no <xref:System.Data.Objects.MergeOption> is specified, the default value is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="7a29a-139">如需詳細資訊，請參閱 <<c0> [ 識別解析、 狀態管理和變更追蹤](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)。</span><span class="sxs-lookup"><span data-stu-id="7a29a-139">For more information, see [Identity Resolution, State Management, and Change Tracking](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="7a29a-140">查詢資料當做物件及塑造結果 (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="7a29a-140">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As ObjectParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectParameterCollection ^ Parameters { System::Data::Objects::ObjectParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.Objects.ObjectParameterCollection" Usage="System.Data.Objects.ObjectQuery.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a29a-141">取得這個物件查詢的參數集合。</span><span class="sxs-lookup"><span data-stu-id="7a29a-141">Gets the parameter collection for this object query.</span></span></summary>
        <value><span data-ttu-id="7a29a-142">這個 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 的參數集合。</span><span class="sxs-lookup"><span data-stu-id="7a29a-142">The parameter collection for this <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a29a-143">您可以使用傳回的 <xref:System.Data.Objects.ObjectParameterCollection> 來指定傳遞給查詢的參數。</span><span class="sxs-lookup"><span data-stu-id="7a29a-143">Use the returned <xref:System.Data.Objects.ObjectParameterCollection> to specify parameters that are passed to the query.</span></span> <span data-ttu-id="7a29a-144">如需詳細資訊，請參閱 <<c0> [ 查詢產生器方法](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)。</span><span class="sxs-lookup"><span data-stu-id="7a29a-144">For more information, see [Query Builder Methods](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a29a-145">這個範例根據[AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="7a29a-145">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="7a29a-146">此範例會將新的參數加入至集合，並且取得這個 <xref:System.Data.Objects.ObjectQuery%601> 的參數集合。</span><span class="sxs-lookup"><span data-stu-id="7a29a-146">The example adds new parameters to the collection and then gets the parameter collection for this <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="7a29a-147">然後，它會逐一查看 <xref:System.Data.Objects.ObjectParameterCollection> 並顯示集合中每個參數的名稱、型別和值。</span><span class="sxs-lookup"><span data-stu-id="7a29a-147">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="7a29a-148">以物件形式查詢資料 (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="7a29a-148">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7a29a-149">傳回逐一查看集合的列舉值。</span><span class="sxs-lookup"><span data-stu-id="7a29a-149">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="7a29a-150"><see cref="T:System.Collections.IEnumerator" />，可用於逐一查看集合。</span><span class="sxs-lookup"><span data-stu-id="7a29a-150">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a29a-151">呼叫 <xref:System.Data.Objects.ObjectQuery.System%23Collections%23IEnumerable%23GetEnumerator%2A> 就會使用 <xref:System.Data.Objects.ObjectQuery.MergeOption%2A> 屬性所指定的合併選項來執行查詢。</span><span class="sxs-lookup"><span data-stu-id="7a29a-151">Calling <xref:System.Data.Objects.ObjectQuery.System%23Collections%23IEnumerable%23GetEnumerator%2A> executes the query with the merge option that is specified by the <xref:System.Data.Objects.ObjectQuery.MergeOption%2A> property.</span></span>  
  
 <span data-ttu-id="7a29a-152">C# 語言的 `foreach` 陳述式 (在 Visual Basic 中為 `For Each`) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="7a29a-152">The `foreach` statement of the C# language (`For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="7a29a-153">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="7a29a-153">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="7a29a-154">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="7a29a-154">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="7a29a-155">以物件形式查詢資料 (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="7a29a-155">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IListSource.ContainsListCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a29a-156">取得值，這個值指出查詢所傳回的集合是否包含集合物件。</span><span class="sxs-lookup"><span data-stu-id="7a29a-156">Gets a value that indicates whether the collection returned by the query contains collection objects.</span></span></summary>
        <value><span data-ttu-id="7a29a-157">布林值 (Boolean)。</span><span class="sxs-lookup"><span data-stu-id="7a29a-157">A Boolean value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a29a-158">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="7a29a-158">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7a29a-159">只有在 <xref:System.Data.Objects.ObjectQuery%601> 執行個體轉換成 <xref:System.ComponentModel.IListSource> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="7a29a-159">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 <span data-ttu-id="7a29a-160">這個屬性一律傳回`false`因為物件並不是集合，包含查詢所傳回的集合。</span><span class="sxs-lookup"><span data-stu-id="7a29a-160">This property always returns `false` because the collection returned by the query contains objects and not collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IListSource.GetList</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7a29a-161">傳回集合當做用於資料繫結 (Data Binding) 的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="7a29a-161">Returns the collection as an <see cref="T:System.Collections.IList" /> used for data binding.</span></span></summary>
        <returns><span data-ttu-id="7a29a-162">實體 (Entity) 物件的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="7a29a-162">An <see cref="T:System.Collections.IList" /> of entity objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a29a-163">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="7a29a-163">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7a29a-164">只有在 <xref:System.Data.Objects.ObjectQuery%601> 執行個體轉換成 <xref:System.ComponentModel.IListSource> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="7a29a-164">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 <span data-ttu-id="7a29a-165">這個方法會啟用查詢結果的資料繫結。</span><span class="sxs-lookup"><span data-stu-id="7a29a-165">This method enables data binding to the result of the query.</span></span> <span data-ttu-id="7a29a-166">繫結至集合的控制項會呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="7a29a-166">It is called by the control bound to the collection.</span></span> <span data-ttu-id="7a29a-167">如需詳細資訊，請參閱 <<c0> [ 將物件繫結至控制項](https://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b)。</span><span class="sxs-lookup"><span data-stu-id="7a29a-167">For more information, see [Binding Objects to Controls](https://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.ElementType">
      <MemberSignature Language="C#" Value="Type System.Linq.IQueryable.ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Linq.IQueryable.ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ElementType As Type Implements IQueryable.ElementType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Linq::IQueryable::ElementType { Type ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Linq.IQueryable.ElementType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Linq.IQueryable.ElementType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a29a-168">取得這個查詢執行個體的結果項目型別。</span><span class="sxs-lookup"><span data-stu-id="7a29a-168">Gets the result element type for this query instance.</span></span></summary>
        <value><span data-ttu-id="7a29a-169"><see cref="T:System.Type" />，它是這個查詢執行個體的結果項目型別。</span><span class="sxs-lookup"><span data-stu-id="7a29a-169">A <see cref="T:System.Type" /> that is the result element type for this query instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a29a-170">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="7a29a-170">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7a29a-171">只有在 <xref:System.Data.Objects.ObjectQuery%601> 執行個體轉換成 <xref:System.ComponentModel.IListSource> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="7a29a-171">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Expression">
      <MemberSignature Language="C#" Value="System.Linq.Expressions.Expression System.Linq.IQueryable.Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression System.Linq.IQueryable.Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Expression As Expression Implements IQueryable.Expression" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::Expressions::Expression ^ System::Linq::IQueryable::Expression { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Linq.IQueryable.Expression" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Linq.IQueryable.Expression</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a29a-172">取得描述這個查詢的運算式。</span><span class="sxs-lookup"><span data-stu-id="7a29a-172">Gets the expression describing this query.</span></span></summary>
        <value><span data-ttu-id="7a29a-173">描述這個查詢的 LINQ <see cref="T:System.Linq.Expressions.Expression" />。</span><span class="sxs-lookup"><span data-stu-id="7a29a-173">The LINQ <see cref="T:System.Linq.Expressions.Expression" /> that describes this query.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a29a-174">若為使用 LINQ 產生器模式所建置 (Build) 的查詢，這就會傳回完整的 LINQ 運算式樹狀架構。否則，它會傳回包裝這個查詢的常數運算式。</span><span class="sxs-lookup"><span data-stu-id="7a29a-174">For queries built by using LINQ builder patterns, this returns a full LINQ expression tree; otherwise, it returns a constant expression that wraps this query.</span></span> <span data-ttu-id="7a29a-175">請注意，系統不會快取預設運算式。</span><span class="sxs-lookup"><span data-stu-id="7a29a-175">Note that the default expression is not cached.</span></span> <span data-ttu-id="7a29a-176">這讓此架構能夠區別 LINQ 與 Entity SQL 查詢。</span><span class="sxs-lookup"><span data-stu-id="7a29a-176">This allows the framework to differentiate between LINQ and Entity SQL queries.</span></span>  
  
 <span data-ttu-id="7a29a-177">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="7a29a-177">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7a29a-178">只有在 <xref:System.Data.Objects.ObjectQuery%601> 執行個體轉換成 <xref:System.ComponentModel.IListSource> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="7a29a-178">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Provider">
      <MemberSignature Language="C#" Value="System.Linq.IQueryProvider System.Linq.IQueryable.Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider System.Linq.IQueryable.Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Provider As IQueryProvider Implements IQueryable.Provider" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::IQueryProvider ^ System::Linq::IQueryable::Provider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Linq.IQueryable.Provider" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Linq.IQueryable.Provider</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7a29a-179">取得與這個查詢執行個體相關聯的 LINQ <see cref="T:System.Linq.IQueryProvider" />。</span><span class="sxs-lookup"><span data-stu-id="7a29a-179">Gets the LINQ <see cref="T:System.Linq.IQueryProvider" /> associated with this query instance.</span></span></summary>
        <value><span data-ttu-id="7a29a-180">與這個查詢執行個體相關聯的 <see cref="T:System.Linq.IQueryProvider" />。</span><span class="sxs-lookup"><span data-stu-id="7a29a-180">The <see cref="T:System.Linq.IQueryProvider" /> associated with this query instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a29a-181">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="7a29a-181">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7a29a-182">只有在 <xref:System.Data.Objects.ObjectQuery%601> 執行個體轉換成 <xref:System.ComponentModel.IListSource> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="7a29a-182">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTraceString">
      <MemberSignature Language="C#" Value="public string ToTraceString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToTraceString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.ToTraceString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToTraceString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToTraceString();" />
      <MemberSignature Language="F#" Value="member this.ToTraceString : unit -&gt; string" Usage="objectQuery.ToTraceString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7a29a-183">傳回要針對資料來源執行的命令。</span><span class="sxs-lookup"><span data-stu-id="7a29a-183">Returns the commands to execute against the data source.</span></span></summary>
        <returns><span data-ttu-id="7a29a-184"><see langword="string" />，代表查詢針對資料來源執行的命令。</span><span class="sxs-lookup"><span data-stu-id="7a29a-184">A <see langword="string" /> that represents the commands that the query executes against the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a29a-185">本主題中的範例根據[AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="7a29a-185">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_totracestring)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_totracestring)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="7a29a-186">查詢資料當做物件及塑造結果 (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="7a29a-186">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>