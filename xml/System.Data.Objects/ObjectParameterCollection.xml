<Type Name="ObjectParameterCollection" FullName="System.Data.Objects.ObjectParameterCollection">
  <TypeSignature Language="C#" Value="public sealed class ObjectParameterCollection : System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;, System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectParameterCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Data.Objects.ObjectParameter&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.ObjectParameter&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectParameterCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectParameterCollection&#xA;Implements ICollection(Of ObjectParameter), IEnumerable(Of ObjectParameter)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectParameterCollection sealed : System::Collections::Generic::ICollection&lt;System::Data::Objects::ObjectParameter ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectParameter ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b3d94-101">將查詢參數表示成在 <see cref="T:System.Data.Objects.ObjectParameter" /> 中定義的 <see cref="T:System.Data.Objects.ObjectQuery`1" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="b3d94-101">Represents the query parameters as <see cref="T:System.Data.Objects.ObjectParameter" /> objects that are defined in an <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3d94-102">將查詢參數表示成在 <xref:System.Data.Objects.ObjectParameter> 中定義的 <xref:System.Data.Objects.ObjectQuery%601> 物件。</span><span class="sxs-lookup"><span data-stu-id="b3d94-102">Represents the query parameters as <xref:System.Data.Objects.ObjectParameter> objects defined in an <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="b3d94-103">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="b3d94-103">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="b3d94-104">傳遞給查詢產生器方法的參數是由序列 (Sequence) 中後續的 <xref:System.Data.Objects.ObjectQuery%601> 執行個體 (Instance) 所彙總 (Aggregate)。</span><span class="sxs-lookup"><span data-stu-id="b3d94-104">The parameters that are passed to query builder methods are aggregated by successive instances of an <xref:System.Data.Objects.ObjectQuery%601> in the sequence.</span></span> <span data-ttu-id="b3d94-105">您可以使用傳回 <xref:System.Data.Objects.ObjectQuery.Parameters%2A> 的 <xref:System.Data.Objects.ObjectParameterCollection> 屬性來存取這些參數。</span><span class="sxs-lookup"><span data-stu-id="b3d94-105">They can be accessed by using the <xref:System.Data.Objects.ObjectQuery.Parameters%2A> property, which returns the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="b3d94-106">加入參數之後，只要尚未編譯或執行查詢，就可以從集合中移除參數，而且可以清除此集合。</span><span class="sxs-lookup"><span data-stu-id="b3d94-106">After parameters have been added, they can be removed from the collection and the collection can be cleared, as long as the query has not been compiled or executed.</span></span> <span data-ttu-id="b3d94-107">參數名稱無法變更，但是參數值則可以隨時變更。</span><span class="sxs-lookup"><span data-stu-id="b3d94-107">Parameter names cannot be changed, but values can be changed at any time.</span></span>  
  
 <span data-ttu-id="b3d94-108">參數在 <xref:System.Data.Objects.ObjectParameterCollection> 中必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="b3d94-108">Parameters must be unique in the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="b3d94-109">集合中不能有兩個參數同名。</span><span class="sxs-lookup"><span data-stu-id="b3d94-109">There cannot be two parameters in the collection with the same name.</span></span>  
  
 <span data-ttu-id="b3d94-110">當您使用構成方法 (如 <xref:System.Data.Objects.ObjectQuery%601.Union%2A>、<xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>、<xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> 和 <xref:System.Data.Objects.ObjectQuery%601.Except%2A>) 時，將會合併這些參數。</span><span class="sxs-lookup"><span data-stu-id="b3d94-110">When using composition methods, such as <xref:System.Data.Objects.ObjectQuery%601.Union%2A>, <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>, <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> and <xref:System.Data.Objects.ObjectQuery%601.Except%2A>, the parameters are merged.</span></span> <span data-ttu-id="b3d94-111">當參數集合不相容或不完整時，系統就會擲回例外狀況 (Exception)。</span><span class="sxs-lookup"><span data-stu-id="b3d94-111">An exception is thrown when the sets of parameters are incompatible or incomplete.</span></span> <span data-ttu-id="b3d94-112">如需詳細資訊，請參閱[查詢產生器方法](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)。</span><span class="sxs-lookup"><span data-stu-id="b3d94-112">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3d94-113">本主題中的範例根據[AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="b3d94-113">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="b3d94-114">此範例會將新的參數加入至集合，並且取得集合中的參數計數。</span><span class="sxs-lookup"><span data-stu-id="b3d94-114">The example adds new parameters to the collection and gets the count of the parameters in the collection.</span></span> <span data-ttu-id="b3d94-115">然後，它會逐一查看 <xref:System.Data.Objects.ObjectParameterCollection> 並顯示集合中每個參數的名稱、型別和值。</span><span class="sxs-lookup"><span data-stu-id="b3d94-115">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Add(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (parameter As ObjectParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="b3d94-116">要加入至集合的參數。</span><span class="sxs-lookup"><span data-stu-id="b3d94-116">The parameter to add to the collection.</span></span></param>
        <summary><span data-ttu-id="b3d94-117">將指定的 <see cref="T:System.Data.Objects.ObjectParameter" /> 加入至集合。</span><span class="sxs-lookup"><span data-stu-id="b3d94-117">Adds the specified <see cref="T:System.Data.Objects.ObjectParameter" /> to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3d94-118">加入參數之後，只要尚未編譯或執行查詢，就可以從集合中移除參數，而且可以清除此集合。</span><span class="sxs-lookup"><span data-stu-id="b3d94-118">After parameters have been added, they can be removed from the collection and the collection can be cleared, as long as the query has not been compiled or executed.</span></span> <span data-ttu-id="b3d94-119">參數名稱無法變更，但是參數值則可以隨時變更。</span><span class="sxs-lookup"><span data-stu-id="b3d94-119">Parameter names cannot be changed, but values can be changed at any time.</span></span>  
  
 <span data-ttu-id="b3d94-120">參數在 <xref:System.Data.Objects.ObjectParameterCollection> 中必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="b3d94-120">Parameters must be unique in the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="b3d94-121">集合中不能有兩個參數同名。</span><span class="sxs-lookup"><span data-stu-id="b3d94-121">There cannot be two parameters in the collection with the same name.</span></span> <span data-ttu-id="b3d94-122">如需詳細資訊，請參閱[查詢產生器方法](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)。</span><span class="sxs-lookup"><span data-stu-id="b3d94-122">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3d94-123">本主題中的範例根據[AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="b3d94-123">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="b3d94-124">此範例會將新的參數加入至集合。</span><span class="sxs-lookup"><span data-stu-id="b3d94-124">The example adds new parameters to the collection.</span></span> <span data-ttu-id="b3d94-125">它會逐一查看 <xref:System.Data.Objects.ObjectParameterCollection> 並顯示集合中每個參數的名稱、型別和值。</span><span class="sxs-lookup"><span data-stu-id="b3d94-125">It iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3d94-126"><paramref name="parameter" /> 引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b3d94-126">The <paramref name="parameter" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b3d94-127"><paramref name="parameter" /> 引數已存在此集合中。</span><span class="sxs-lookup"><span data-stu-id="b3d94-127">The <paramref name="parameter" /> argument already exists in the collection.</span></span> <span data-ttu-id="b3d94-128">這個行為與大部分允許重複項目之集合的行為不同。</span><span class="sxs-lookup"><span data-stu-id="b3d94-128">This behavior differs from that of most collections that allow duplicate entries.</span></span>  
  
 <span data-ttu-id="b3d94-129">-或-</span><span class="sxs-lookup"><span data-stu-id="b3d94-129">-or-</span></span>  
  
 <span data-ttu-id="b3d94-130">集合中已經有另一個與 <paramref name="parameter" /> 引數具有相同名稱的參數。</span><span class="sxs-lookup"><span data-stu-id="b3d94-130">Another parameter with the same name as the <paramref name="parameter" /> argument already exists in the collection.</span></span> <span data-ttu-id="b3d94-131">請注意，查閱不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="b3d94-131">Note that the lookup is case-insensitive.</span></span> <span data-ttu-id="b3d94-132">這個行為與大部分集合的行為不同，而且比較類似 <see cref="T:System.Collections.Generic.Dictionary" /> 的行為。</span><span class="sxs-lookup"><span data-stu-id="b3d94-132">This behavior differs from that of most collections, and is more like that of a <see cref="T:System.Collections.Generic.Dictionary" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b3d94-133"><paramref name="parameter" /> 的型別無效。</span><span class="sxs-lookup"><span data-stu-id="b3d94-133">The type of the <paramref name="parameter" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3d94-134">從集合中刪除所有 <see cref="T:System.Data.Objects.ObjectParameter" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="b3d94-134">Deletes all <see cref="T:System.Data.Objects.ObjectParameter" /> instances from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3d94-135">以傳址方式檢查指定的 <see cref="T:System.Data.Objects.ObjectParameter" /> 是否存在集合中。</span><span class="sxs-lookup"><span data-stu-id="b3d94-135">Checks for the existence of a specified <see cref="T:System.Data.Objects.ObjectParameter" /> in the collection by reference.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Contains(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (parameter As ObjectParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="b3d94-136">要在集合中尋找的 <see cref="T:System.Data.Objects.ObjectParameter" />。</span><span class="sxs-lookup"><span data-stu-id="b3d94-136">The <see cref="T:System.Data.Objects.ObjectParameter" /> to find in the collection.</span></span></param>
        <summary><span data-ttu-id="b3d94-137">以傳址方式檢查指定的 <see cref="T:System.Data.Objects.ObjectParameter" /> 是否存在集合中。</span><span class="sxs-lookup"><span data-stu-id="b3d94-137">Checks for the existence of a specified <see cref="T:System.Data.Objects.ObjectParameter" /> in the collection by reference.</span></span></summary>
        <returns><span data-ttu-id="b3d94-138">如果在集合中找到參數物件，則傳回 <see langword="true" />，否則傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3d94-138">Returns <see langword="true" /> if the parameter object was found in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3d94-139">這是以參考為基礎的檢查。</span><span class="sxs-lookup"><span data-stu-id="b3d94-139">This is a reference-based check.</span></span> <span data-ttu-id="b3d94-140">也就是說，如果<xref:System.Data.Objects.ObjectParameter>指定包含同名的參數集合中的物件，這個方法只會傳回`true`如果它是相同的物件。</span><span class="sxs-lookup"><span data-stu-id="b3d94-140">That is, if an <xref:System.Data.Objects.ObjectParameter> is specified that contains the same name as a parameter object in the collection, this method will only return `true` if it is the same object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3d94-141"><paramref name="parameter" /> 引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b3d94-141">The <paramref name="parameter" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b3d94-142">要在集合中尋找的參數名稱。</span><span class="sxs-lookup"><span data-stu-id="b3d94-142">The name of the parameter to look for in the collection.</span></span> <span data-ttu-id="b3d94-143">這個名稱不應該包含在 [!INCLUDE[esql](~/includes/esql-md.md)] 陳述式中使用的 "@" 參數標記，而應該只包含實際名稱。</span><span class="sxs-lookup"><span data-stu-id="b3d94-143">This name should not include the "@" parameter marker that is used in the [!INCLUDE[esql](~/includes/esql-md.md)] statements, only the actual name.</span></span></param>
        <summary><span data-ttu-id="b3d94-144">判斷具有指定名稱的 <see cref="T:System.Data.Objects.ObjectParameter" /> 物件是否位於此集合中。</span><span class="sxs-lookup"><span data-stu-id="b3d94-144">Determines whether an <see cref="T:System.Data.Objects.ObjectParameter" /> with the specified name is in the collection.</span></span></summary>
        <returns><span data-ttu-id="b3d94-145">如果在集合中找到具有指定名稱的參數，則傳回 <see langword="true" />，否則傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3d94-145">Returns <see langword="true" /> if a parameter with the specified name was found in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3d94-146">本主題中的範例根據[AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="b3d94-146">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="b3d94-147">此範例會使用 <xref:System.Data.Objects.ObjectParameterCollection.Contains%2A> 方法來判斷指定的參數是否位於集合中。</span><span class="sxs-lookup"><span data-stu-id="b3d94-147">The example uses the <xref:System.Data.Objects.ObjectParameterCollection.Contains%2A> method to determine whether the specified parameter is in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_StringArg](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_stringarg)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_StringArg](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_stringarg)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3d94-148"><paramref name="name" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b3d94-148">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.Objects.ObjectParameter[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Data.Objects.ObjectParameter[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.CopyTo(System.Data.Objects.ObjectParameter[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ObjectParameter(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.Objects.ObjectParameter[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="b3d94-149">要將參數複製到其中的陣列。</span><span class="sxs-lookup"><span data-stu-id="b3d94-149">The array into which to copy the parameters.</span></span></param>
        <param name="index"><span data-ttu-id="b3d94-150">陣列中要開始複製參數的索引。</span><span class="sxs-lookup"><span data-stu-id="b3d94-150">The index in the array at which to start copying the parameters.</span></span></param>
        <summary><span data-ttu-id="b3d94-151">允許將集合中的參數複製到提供的陣列中，從位於指定索引處的物件開始。</span><span class="sxs-lookup"><span data-stu-id="b3d94-151">Allows the parameters in the collection to be copied into a supplied array, starting with the object at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3d94-152">本主題中的範例根據[AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="b3d94-152">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="b3d94-153">此範例會將參數複製到指定的陣列中。</span><span class="sxs-lookup"><span data-stu-id="b3d94-153">The example copies the parameters into the specified array.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_CopyTo](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_copyto)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_CopyTo](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_copyto)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3d94-154">取得目前位於集合中的參數數目。</span><span class="sxs-lookup"><span data-stu-id="b3d94-154">Gets the number of parameters currently in the collection.</span></span></summary>
        <value><span data-ttu-id="b3d94-155">目前位於集合中的 <see cref="T:System.Data.Objects.ObjectParameter" /> 物件數目。</span><span class="sxs-lookup"><span data-stu-id="b3d94-155">The number of <see cref="T:System.Data.Objects.ObjectParameter" /> objects that are currently in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3d94-156">本主題中的範例根據[AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="b3d94-156">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="b3d94-157">此範例會將新的參數加入至集合，並且取得集合中的參數計數。</span><span class="sxs-lookup"><span data-stu-id="b3d94-157">The example adds new parameters to the collection and gets the count of the parameters in the collection.</span></span> <span data-ttu-id="b3d94-158">然後，它會逐一查看 <xref:System.Data.Objects.ObjectParameterCollection> 並顯示集合中每個參數的名稱、型別和值。</span><span class="sxs-lookup"><span data-stu-id="b3d94-158">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectParameter this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectParameter Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As ObjectParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectParameter ^ default[System::String ^] { System::Data::Objects::ObjectParameter ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b3d94-159">要尋找的參數名稱。</span><span class="sxs-lookup"><span data-stu-id="b3d94-159">The name of the parameter to find.</span></span> <span data-ttu-id="b3d94-160">這個名稱不應該包含在 [!INCLUDE[esql](~/includes/esql-md.md)] 陳述式中使用的 "@" 參數標記，而應該只包含實際名稱。</span><span class="sxs-lookup"><span data-stu-id="b3d94-160">This name should not include the "@" parameter marker that is used in the [!INCLUDE[esql](~/includes/esql-md.md)] statements, only the actual name.</span></span></param>
        <summary><span data-ttu-id="b3d94-161">提供索引子 (Indexer)，讓呼叫端能夠依據名稱擷取參數。</span><span class="sxs-lookup"><span data-stu-id="b3d94-161">Provides an indexer that allows callers to retrieve parameters by name.</span></span></summary>
        <value><span data-ttu-id="b3d94-162"><see cref="T:System.Data.Objects.ObjectParameter" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="b3d94-162">The <see cref="T:System.Data.Objects.ObjectParameter" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b3d94-163">在集合中找不到具有指定名稱的參數。</span><span class="sxs-lookup"><span data-stu-id="b3d94-163">No parameter with the specified name is found in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Remove(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (parameter As ObjectParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="b3d94-164">要從集合中移除的物件。</span><span class="sxs-lookup"><span data-stu-id="b3d94-164">An object to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="b3d94-165">以傳址方式從集合中移除 <see cref="T:System.Data.Objects.ObjectParameter" /> 的執行個體 (如果它存在集合中的話)。</span><span class="sxs-lookup"><span data-stu-id="b3d94-165">Removes an instance of an <see cref="T:System.Data.Objects.ObjectParameter" /> from the collection by reference if it exists in the collection.</span></span></summary>
        <returns><span data-ttu-id="b3d94-166">如果找到參數物件並且已從集合中移除，則傳回 <see langword="true" />，否則傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3d94-166">Returns <see langword="true" /> if the parameter object was found and removed from the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3d94-167">這是以參考為基礎的比較。</span><span class="sxs-lookup"><span data-stu-id="b3d94-167">This is a reference-based comparison.</span></span> <span data-ttu-id="b3d94-168">也就是說，如果指定的查詢參數物件與集合中的參數物件包含相同名稱，就只會移除位於集合中的參數 (如果它是相同物件的話)。</span><span class="sxs-lookup"><span data-stu-id="b3d94-168">That is, if a query parameter object is specified that contains the same name as a parameter object in the collection, the parameter in the collection will only be removed if it is the same object.</span></span> <span data-ttu-id="b3d94-169">若要依據名稱移除物件，請先使用索引子來擷取參數執行個體，然後使用這個方法來移除它。</span><span class="sxs-lookup"><span data-stu-id="b3d94-169">To remove an object by name, first use the indexer to retrieve the parameter instance, then remove it by using this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3d94-170">本主題中的範例根據[AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。</span><span class="sxs-lookup"><span data-stu-id="b3d94-170">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="b3d94-171">此範例會將兩個參數加入至集合，然後移除這些參數。</span><span class="sxs-lookup"><span data-stu-id="b3d94-171">The example adds two parameters to the collection and then removes the parameters.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Remove](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_remove)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Remove](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_remove)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3d94-172"><paramref name="parameter" /> 引數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b3d94-172">The <paramref name="parameter" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#ICollection&lt;System#Data#Objects#ObjectParameter&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of ObjectParameter).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3d94-173">取得值，這個值表示集合是唯讀的還是可修改。</span><span class="sxs-lookup"><span data-stu-id="b3d94-173">Gets a value that indicates whether the collection is read-only or can be modified.</span></span></summary>
        <value><span data-ttu-id="b3d94-174">布林值，如果集合是唯讀的，則為 <see langword="true" />，而如果集合可修改，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3d94-174">A Boolean value that is <see langword="true" /> if the collection is read-only and <see langword="false" /> of the collection can be modified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3d94-175">這個集合一定是可讀取/寫入，而且您可以加入、移除和修改參數。</span><span class="sxs-lookup"><span data-stu-id="b3d94-175">This collection is always read/write; parameters can be added, removed, and modified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Data.Objects.ObjectParameter&gt; IEnumerable&lt;ObjectParameter&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Data.Objects.ObjectParameter&gt; System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#IEnumerable&lt;System#Data#Objects#ObjectParameter&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of ObjectParameter) Implements IEnumerable(Of ObjectParameter).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Data::Objects::ObjectParameter ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectParameter ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Data.Objects.ObjectParameter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3d94-176">傳回集合中具型別的列舉值。</span><span class="sxs-lookup"><span data-stu-id="b3d94-176">Returns a typed enumerator over the collection.</span></span></summary>
        <returns><span data-ttu-id="b3d94-177">類型為 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 的 <see cref="T:System.Data.Objects.ObjectParameter" />。</span><span class="sxs-lookup"><span data-stu-id="b3d94-177">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> of type <see cref="T:System.Data.Objects.ObjectParameter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3d94-178">傳回 <xref:System.Collections.Generic.IEnumerator%601> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="b3d94-178">Returns an <xref:System.Collections.Generic.IEnumerator%601> instance.</span></span> <span data-ttu-id="b3d94-179">這可讓您逐一查看和周遊集合。</span><span class="sxs-lookup"><span data-stu-id="b3d94-179">This allows the collection to be iterated through and traversed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3d94-180">傳回集合中不具型別的列舉值。</span><span class="sxs-lookup"><span data-stu-id="b3d94-180">Returns an untyped enumerator over the collection.</span></span></summary>
        <returns><span data-ttu-id="b3d94-181"><see cref="T:System.Collections.IEnumerator" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="b3d94-181">An <see cref="T:System.Collections.IEnumerator" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3d94-182">傳回集合中不具型別的列舉值。</span><span class="sxs-lookup"><span data-stu-id="b3d94-182">Returns an untyped enumerator over the collection.</span></span> <span data-ttu-id="b3d94-183">這可讓您逐一查看和周遊集合。</span><span class="sxs-lookup"><span data-stu-id="b3d94-183">This allows the collection to be iterated through and traversed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>