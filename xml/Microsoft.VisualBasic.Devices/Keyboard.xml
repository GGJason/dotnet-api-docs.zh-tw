<Type Name="Keyboard" FullName="Microsoft.VisualBasic.Devices.Keyboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da643c195a203fda826c392d5efd255b74de476b" /><Meta Name="ms.sourcegitcommit" Value="9802d4c6745a8ae514b26f144fb3969265b224ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/22/2018" /><Meta Name="ms.locfileid" Value="53750552" /></Metadata><TypeSignature Language="C#" Value="public class Keyboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Keyboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Keyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Keyboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Keyboard" />
  <TypeSignature Language="F#" Value="type Keyboard = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供屬性以存取鍵盤目前的狀態，例如目前已按下哪些按鍵，並提供方法將按鍵輸入傳送至使用中視窗。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Keyboard`物件提供電腦的鍵盤介面。 屬性`My.Computer.Keyboard`提供數個特殊按鍵的狀態資訊。 `My.Computer.Keyboard.SendKeys`方法可讓您將金鑰傳送至作用中視窗中，它們已在鍵盤上輸入一樣。  
  
## <a name="tasks"></a>工作  
 下表列出的工作，包含範例`My.Computer.Keyboard`物件。  
  
|以|請參閱|  
|-|-|  
|將按鍵傳送至應用程式|[如何：啟動應用程式並且將按鍵輸入傳送至該應用程式 (Visual Basic)](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-start-an-application-and-send-it-keystrokes.md)|  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|-|-|  
|Windows 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Computer.Keyboard.CtrlKeyDown`屬性來判斷是否按下電腦的 CTRL 鍵。  
  
 [!code-vb[VbVbalrMyComputer#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#36)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">存取鍵盤</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Keyboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Keyboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">存取鍵盤</related>
      </Docs>
    </Member>
    <Member MemberName="AltKeyDown">
      <MemberSignature Language="C#" Value="public bool AltKeyDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AltKeyDown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AltKeyDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AltKeyDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AltKeyDown : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得指出 ALT 按鍵是否被按下的值。</summary>
        <value><see langword="True" /> 如果 ALT 鍵已關閉。否則， <see langword="False" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Keyboard.AltKeyDown`屬性會提供類似的功能<xref:System.Windows.Forms.Control.ModifierKeys%2A>屬性。  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|-|-|  
|Windows 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Computer.Keyboard.AltKeyDown`屬性來判斷電腦的 ALT 鍵是否按下。  
  
 [!code-vb[VbVbalrMyComputer#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">存取鍵盤</related>
      </Docs>
    </Member>
    <Member MemberName="CapsLock">
      <MemberSignature Language="C#" Value="public bool CapsLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CapsLock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.CapsLock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CapsLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CapsLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CapsLock : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.CapsLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得指出 CAPS LOCK 是否已開啟的值。</summary>
        <value>A<see langword="Boolean" />值： <see langword="True" /> CAPS LOCK 已開啟，否則如果<see langword="False" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 會傳回只 CAPS LOCK 的狀態。  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|-|-|  
|Windows 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Computer.Keyboard.CapsLock`屬性來判斷是否已開啟電腦的 CAPS LOCK。  
  
 [!code-vb[VbVbalrMyComputer#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">存取鍵盤</related>
      </Docs>
    </Member>
    <Member MemberName="CtrlKeyDown">
      <MemberSignature Language="C#" Value="public bool CtrlKeyDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CtrlKeyDown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CtrlKeyDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CtrlKeyDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CtrlKeyDown : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得指出 CTRL 鍵是否已按下的值。</summary>
        <value><see langword="True" /> 如果 CTRL 按鍵為已關閉。否則， <see langword="False" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Keyboard.CtrlKeyDown`屬性會提供類似的功能<xref:System.Windows.Forms.Control.ModifierKeys%2A>屬性。  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|-|-|  
|Windows 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Computer.Keyboard.CtrlKeyDown`屬性來判斷電腦的 CTRL 鍵是否按下。  
  
 [!code-vb[VbVbalrMyComputer#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">存取鍵盤</related>
      </Docs>
    </Member>
    <Member MemberName="NumLock">
      <MemberSignature Language="C#" Value="public bool NumLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NumLock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.NumLock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NumLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NumLock : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.NumLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得指出 NUM LOCK 鍵是否已開啟的值。</summary>
        <value><see langword="True" /> 如果 NUM LOCK否則， <see langword="False" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 會傳回只 NUM LOCK 鍵的狀態。  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|-|-|  
|Windows 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Computer.Keyboard.NumLock`屬性來判斷電腦的 NUM LOCK 鍵是否在上。  
  
 [!code-vb[VbVbalrMyComputer#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">存取鍵盤</related>
      </Docs>
    </Member>
    <Member MemberName="ScrollLock">
      <MemberSignature Language="C#" Value="public bool ScrollLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrollLock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.ScrollLock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScrollLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrollLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ScrollLock : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.ScrollLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see langword="Boolean" />，指出 SCROLL LOCK 鍵是否開啟。</summary>
        <value><see langword="True" /> 如果 SCROLL lock 鍵否則， <see langword="False" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 會傳回只 SCROLL LOCK 鍵的狀態。  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|-|-|  
|Windows 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Computer.Keyboard.ScrollLock`屬性來判斷電腦的 SCROLL LOCK 鍵是否在上。  
  
 [!code-vb[VbVbalrMyComputer#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">存取鍵盤</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendKeys">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將一或多個按鍵輸入傳送至使用中的視窗，就像在鍵盤上輸入一樣。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SendKeys(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendKeys(System::String ^ keys);" />
      <MemberSignature Language="F#" Value="member this.SendKeys : string -&gt; unit" Usage="keyboard.SendKeys keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><see langword="String" />，定義要傳送的鍵。</param>
        <summary>將一或多個按鍵輸入傳送至使用中的視窗，就像在鍵盤上輸入一樣。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Keyboard.SendKeys`方法會提供類似的功能<xref:System.Windows.Forms.SendKeys.Send%2A>和<xref:System.Windows.Forms.SendKeys.SendWait%2A>方法。  
  
 `wait`引數是很有用，如果其他應用程式必須完成才能繼續執行您的應用程式。  
  
> [!NOTE]
>  因為沒有任何受管理的方法，以啟用另一個應用程式，您可以使用這個類別目前的應用程式中，以手動方式選取要傳送，機碼的視窗或使用 Windows API 方法，例如`FindWindow`和`SetForegroundWindow`、 強制將焦點放在其他應用程式。 如需詳細資訊，請參閱[逐步解說：呼叫 Windows Api](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md)。  
  
 `keys`引數可以指定任何單一索引鍵或任何索引鍵，搭配 ALT、 CTRL 或 shift 鍵 （或這些機碼的任何組合）。 每個索引鍵由一或多個字元，例如`a`字元"a"，或`{ENTER}`的 ENTER 鍵。  
  
 若要結合 SHIFT 鍵，在之前使用的按鍵碼`+`（加號）。 若要結合 CTRL 鍵，在之前使用的按鍵碼`^`（插入號）。 若要結合 ALT 鍵，在之前使用的按鍵碼`%`（百分比符號）。 若要指定重複的索引鍵，使用表單`{`*金鑰數目*`}`。 您必須讓之間保留一個空格*金鑰*並*數目*。 比方說，`{LEFT 42}`表示 「 按向的左鍵 42 次 」;`{h 10}`表示 「 按 'h' 10 倍。 」  
  
 下表列出的程式碼，可用來指定不會顯示當您按下 （例如 ENTER 或 TAB） 對應的索引鍵的字元。  
  
|Key|程式碼|  
|-|-|  
|退格鍵|{退格鍵} 或 {BS}|  
|中斷|{BREAK}|  
|CAPS LOCK|{CAPSLOCK}|  
|清除|{清除}|  
|DELETE|{刪除} 或 {DEL}|  
|向下鍵|{DOWN}|  
|END|{END}|  
|輸入 （數字鍵台）|{輸入}|  
|ENTER|~|  
|ESC|{逸出} 或 {ESC}|  
|說明|{協助}|  
|首頁|{HOME}|  
|INS|{插入}|  
|向左鍵|{LEFT}|  
|NUM LOCK|{NUMLOCK}|  
|PAGE DOWN|{PGDN}|  
|PAGE UP|{PGUP}|  
|傳回|{RETURN}|  
|向右鍵|{RIGHT}|  
|SCROLL LOCK|{SCROLLLOCK}|  
|TAB|{TAB}|  
|向上鍵|{UP}|  
|透過 F15 F1|{F1} 到 {F15}|  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|-|-|  
|Windows 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Computer.Keyboard.SendKeys`方法將按鍵傳送至外部應用程式，[小算盤] 應用程式開始著手`Shell`函式。  
  
 [!code-vb[VbVbalrMyComputer#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#25)]  
  
 如果找不到具有所要求處理序識別碼的應用程式，則會引發 <xref:System.ArgumentException> 例外狀況。  
  
 呼叫 `Shell` 函式需要完全信任 (<xref:System.Security.SecurityException> 類別)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">發生使用者缺少必要權限的部分信任狀況。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制存取檔案和資料夾的能力。 關聯的列舉型別：<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">控制相關的使用者介面和剪貼簿的權限。 關聯的列舉型別：<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.SendKeys.Send(System.String)" />
        <altmember cref="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">存取鍵盤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9280ca96-7a93-47a3-8d01-6d01be0657cb">逐步解說：呼叫 Windows API</related>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (string keys, bool wait);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SendKeys(string keys, bool wait) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (keys As String, wait As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendKeys(System::String ^ keys, bool wait);" />
      <MemberSignature Language="F#" Value="member this.SendKeys : string * bool -&gt; unit" Usage="keyboard.SendKeys (keys, wait)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keys"><see langword="String" />，定義要傳送的鍵。</param>
        <param name="wait">選擇性。 <see langword="Boolean" />，指定在應用程式繼續之前，是否等待按鍵得到處理。 預設為 <see langword="True" />。</param>
        <summary>將一或多個按鍵輸入傳送至使用中的視窗，就像在鍵盤上輸入一樣。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Keyboard.SendKeys`方法會提供類似的功能<xref:System.Windows.Forms.SendKeys.Send%2A>和<xref:System.Windows.Forms.SendKeys.SendWait%2A>方法。  
  
 `wait`引數是很有用，如果其他應用程式必須完成才能繼續執行您的應用程式。  
  
> [!NOTE]
>  因為沒有任何受管理的方法，以啟用另一個應用程式，您可以使用這個類別目前的應用程式中，以手動方式選取要傳送，機碼的視窗或使用 Windows API 方法，例如`FindWindow`和`SetForegroundWindow`、 強制將焦點放在其他應用程式。 如需詳細資訊，請參閱[逐步解說：呼叫 Windows Api](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md)。  
  
 `keys`引數可以指定任何單一索引鍵或任何索引鍵，搭配 ALT、 CTRL 或 shift 鍵 （或這些機碼的任何組合）。 每個索引鍵由一或多個字元，例如`a`字元"a"，或`{ENTER}`的 ENTER 鍵。  
  
 若要結合 SHIFT 鍵，在之前使用的按鍵碼`+`（加號）。 若要結合 CTRL 鍵，在之前使用的按鍵碼`^`（插入號）。 若要結合 ALT 鍵，在之前使用的按鍵碼`%`（百分比符號）。 若要指定重複的索引鍵，使用表單`{`*金鑰數目*`}`。 您必須讓之間保留一個空格*金鑰*並*數目*。 比方說，`{LEFT 42}`表示 「 按向的左鍵 42 次 」;`{h 10}`表示 「 按 'h' 10 倍。 」  
  
 下表列出的程式碼，可用來指定不會顯示當您按下 （例如 ENTER 或 TAB） 對應的索引鍵的字元。  
  
|Key|程式碼|  
|-|-|  
|退格鍵|{退格鍵} 或 {BS}|  
|中斷|{BREAK}|  
|CAPS LOCK|{CAPSLOCK}|  
|清除|{清除}|  
|DELETE|{刪除} 或 {DEL}|  
|向下鍵|{DOWN}|  
|END|{END}|  
|輸入 （數字鍵台）|{輸入}|  
|ENTER|~|  
|ESC|{逸出} 或 {ESC}|  
|說明|{協助}|  
|首頁|{HOME}|  
|INS|{插入}|  
|向左鍵|{LEFT}|  
|NUM LOCK|{NUMLOCK}|  
|PAGE DOWN|{PGDN}|  
|PAGE UP|{PGUP}|  
|傳回|{RETURN}|  
|向右鍵|{RIGHT}|  
|SCROLL LOCK|{SCROLLLOCK}|  
|TAB|{TAB}|  
|向上鍵|{UP}|  
|透過 F15 F1|{F1} 到 {F15}|  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|-|-|  
|Windows 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Computer.Keyboard.SendKeys`方法將按鍵傳送至外部應用程式，[小算盤] 應用程式開始著手`Shell`函式。  
  
 [!code-vb[VbVbalrMyComputer#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#25)]  
  
 如果找不到具有所要求處理序識別碼的應用程式，則會引發 <xref:System.ArgumentException> 例外狀況。  
  
 呼叫 `Shell` 函式需要完全信任 (<xref:System.Security.SecurityException> 類別)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">發生使用者缺少必要權限的部分信任狀況。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制存取檔案和資料夾的能力。 關聯的列舉型別：<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">控制相關的使用者介面和剪貼簿的權限。 關聯的列舉型別：<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.SendKeys.Send(System.String)" />
        <altmember cref="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">存取鍵盤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9280ca96-7a93-47a3-8d01-6d01be0657cb">逐步解說：呼叫 Windows API</related>
      </Docs>
    </Member>
    <Member MemberName="ShiftKeyDown">
      <MemberSignature Language="C#" Value="public bool ShiftKeyDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShiftKeyDown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShiftKeyDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShiftKeyDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShiftKeyDown : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得指出 SHIFT 鍵是否已按下的值。</summary>
        <value><see langword="True" /> 如果 SHIFT 按鍵為已關閉。否則， <see langword="False" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Keyboard.ShiftKeyDown`屬性會提供類似的功能<xref:System.Windows.Forms.Control.ModifierKeys%2A>屬性。  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|-|-|  
|Windows 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Computer.Keyboard.ShiftKeyDown`屬性，以判斷其中一個電腦的 SHIFT 鍵是否按下。  
  
 [!code-vb[VbVbalrMyComputer#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#47)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">存取鍵盤</related>
      </Docs>
    </Member>
  </Members>
</Type>