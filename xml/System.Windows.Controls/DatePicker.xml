<Type Name="DatePicker" FullName="System.Windows.Controls.DatePicker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1163563e55cfb06a79b41079b29b722e96c43fc7" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48642891" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DatePicker : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DatePicker extends System.Windows.Controls.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.DatePicker" />
  <TypeSignature Language="VB.NET" Value="Public Class DatePicker&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class DatePicker : System::Windows::Controls::Control" />
  <TypeSignature Language="F#" Value="type DatePicker = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.TemplatePart(Name="PART_Root", Type=typeof(System.Windows.Controls.Grid))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.TemplatePart(Name="PART_TextBox", Type=typeof(System.Windows.Controls.Primitives.DatePickerTextBox))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.TemplatePart(Name="PART_Button", Type=typeof(System.Windows.Controls.Button))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.TemplatePart(Name="PART_Popup", Type=typeof(System.Windows.Controls.Primitives.Popup))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示可讓使用者選取日期的控制項。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.DatePicker>控制項可讓使用者輸入到文字欄位，或使用下拉式清單選取日期<xref:System.Windows.Controls.Calendar>控制項。  
  
 許多<xref:System.Windows.Controls.DatePicker>控制項的屬性是用於管理內建<xref:System.Windows.Controls.Calendar>，和用於對等的屬性，在相同函式<xref:System.Windows.Controls.Calendar>。 特別的是， <xref:System.Windows.Controls.DatePicker.IsTodayHighlighted%2A?displayProperty=nameWithType>， <xref:System.Windows.Controls.DatePicker.FirstDayOfWeek%2A?displayProperty=nameWithType>， <xref:System.Windows.Controls.DatePicker.BlackoutDates%2A?displayProperty=nameWithType>， <xref:System.Windows.Controls.DatePicker.DisplayDateStart%2A?displayProperty=nameWithType>， <xref:System.Windows.Controls.DatePicker.DisplayDateEnd%2A?displayProperty=nameWithType>， <xref:System.Windows.Controls.DatePicker.DisplayDate%2A?displayProperty=nameWithType>，以及<xref:System.Windows.Controls.DatePicker.SelectedDate%2A?displayProperty=nameWithType>屬性的功能和其<xref:System.Windows.Controls.Calendar>對應項目。  如需詳細資訊，請參閱<xref:System.Windows.Controls.Calendar>。  
  
 使用者可以直接在文字欄位中，它會設定輸入日期<xref:System.Windows.Controls.DatePicker.Text%2A>屬性。 如果<xref:System.Windows.Controls.DatePicker>無法將輸入的字串轉換成有效的日期，<xref:System.Windows.Controls.DatePicker.DateValidationError>就會引發事件。 根據預設，這會導致例外狀況，但事件處理常式<xref:System.Windows.Controls.DatePicker.DateValidationError>可以設定<xref:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException%2A>屬性設`false`並避免引發例外狀況。  
  
> [!NOTE]
>  <xref:System.Windows.Controls.DatePicker>支援只能將西曆。  
  
## <a name="customizing-the-datepicker-control"></a>自訂日期選擇器控制項  
 若要將相同的屬性設定套用至多個<xref:System.Windows.Controls.DatePicker>控制項，可使用<xref:System.Windows.FrameworkElement.Style%2A>屬性。 您可以修改預設<xref:System.Windows.Controls.ControlTemplate>，讓控制項的獨特的外觀。 如需有關建立<xref:System.Windows.Controls.ControlTemplate>，請參閱 <<c2> [ 透過建立 ControlTemplate 自訂現有控制項的外觀](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。 若要查看的組件和狀態所特有<xref:System.Windows.Controls.DatePicker>，請參閱 < [DatePicker 樣式和範本](~/docs/framework/wpf/controls/datepicker-styles-and-templates.md)。  
  
 此控制項的相依性屬性可能會設定控制項的預設樣式。 如果屬性設定為預設樣式，屬性可能會變更其預設值，當控制項出現在應用程式。 預設樣式會決定由哪一個桌面佈景主題時，會使用應用程式正在執行。  如需詳細資訊，請參閱 <<c0> [ 預設 WPF 佈景主題](http://go.microsoft.com/fwlink/?LinkID=158252)。  
  
> [!NOTE]
>  設定視覺化屬性將才有作用如果該屬性會同時出現在按鈕控制項的預設範本，而且使用設定的。 您可以找到的視覺化屬性清單中的 「 變更視覺結構的控制項 」 一節[透過建立 ControlTemplate 自訂現有控制項的外觀](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。  
  
<a name="xamlObjectElementUsage_DatePicker"></a>   
## <a name="xaml-object-element-usage"></a>XAML 物件項目用法  
  
```  
<DatePicker .../>  
```  
  
   
  
## Examples  
 下圖顯示<xref:System.Windows.Controls.DatePicker>。  
  
 ![DatePicker 控制項](~/add/media/ndp-datepicker.png "DatePicker 控制項")  
DatePicker 控制項  
  
 下列範例會建立<xref:System.Windows.Controls.DatePicker>如上圖所示。 <xref:System.Windows.Controls.DatePicker>會進行下列作業：  
  
-   顯示使用非縮寫的星期和月份名稱的日期。  
  
-   限制在 2009 年只顯示日期下拉式月曆。  
  
-   顯示當週的第一天為星期一。  
  
 [!code-csharp[DatePickerSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[DatePickerSnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xaml[DatePickerSnippets#1](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DatePicker ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DatePicker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Controls.DatePicker" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlackoutDates">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CalendarBlackoutDatesCollection BlackoutDates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.CalendarBlackoutDatesCollection BlackoutDates" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.BlackoutDates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlackoutDates As CalendarBlackoutDatesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CalendarBlackoutDatesCollection ^ BlackoutDates { System::Windows::Controls::CalendarBlackoutDatesCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BlackoutDates : System.Windows.Controls.CalendarBlackoutDatesCollection" Usage="System.Windows.Controls.DatePicker.BlackoutDates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarBlackoutDatesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定標記為無法選取的日期集合。</summary>
        <value>無法選取的日期集合。 預設值為空集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此集合中的日期會顯示為停用下拉式月曆。  如果使用者輸入日期，不能選取，<xref:System.Windows.Controls.DatePicker.DateValidationError>就會發生事件。  
  
 若要讓所有過去的日期不能選取，您可以使用<xref:System.Windows.Controls.CalendarBlackoutDatesCollection.AddDatesInPast%2A>這個屬性所傳回的集合所提供的方法。  
  
 已選取時，將日期新增至這個集合，或新增所指定的範圍外的日期<xref:System.Windows.Controls.Calendar.DisplayDateStart%2A>並<xref:System.Windows.Controls.DatePicker.DisplayDateEnd%2A>會導致<xref:System.ArgumentOutOfRangeException>。  
  
<a name="xamlPropertyElementUsage_BlackoutDates"></a>   
## <a name="xaml-property-element-usage"></a>XAML 屬性項目用法  
  
```  
<object>  
  <object.BlackoutDates>  
    oneOrMoreCalendarDateRanges  
  </object.BlackoutDates>  
</object>  
```  
  
<a name="xamlValues_BlackoutDates"></a>   
## <a name="xaml-values"></a>XAML 值  
 *oneOrMoreCalendarDateRanges*  
 一或多個物件項目型別的<xref:System.Windows.Controls.CalendarDateRange>。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Controls.DatePicker>，會顯示在 2009 年 8 月的日期，並指定每個星期六和星期日不是可選取。  
  
 [!code-csharp[DatePickerSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[DatePickerSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[DatePickerSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#2)]  
  
 <xref:System.Windows.Controls.DatePicker>控制代碼<xref:System.Windows.Controls.DatePicker.DateValidationError>事件，如下列程式碼所示。 如果使用者輸入不能選取的日期，則這個範例會顯示一則訊息。 如果使用者輸入不是有效的日期的文字，則會擲回例外狀況。  
  
 [!code-csharp[DatePickerSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[DatePickerSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#3)]  
  
 上述範例會產生類似下圖的輸出。  
  
 ![不能選取的日期的 DatePicker](~/add/media/ndp-datepickblackout.png "DatePicker 不能選取的日期")  
其日期無法選取的 DatePicker  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarClosed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler CalendarClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler CalendarClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DatePicker.CalendarClosed" />
      <MemberSignature Language="VB.NET" Value="Public Event CalendarClosed As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ CalendarClosed;" />
      <MemberSignature Language="F#" Value="member this.CalendarClosed : System.Windows.RoutedEventHandler " Usage="member this.CalendarClosed : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在關閉下拉式 <see cref="T:System.Windows.Controls.Calendar" /> 時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarClosed"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<DatePicker CalendarClosed="eventhandler"/>  
```  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Controls.DatePicker>，並提供指示給使用者。  當使用者開啟或關閉<xref:System.Windows.Controls.Calendar>，指示會更新。  
  
 [!code-xaml[DatePickerSnippets#7](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#7)]  
  
 [!code-csharp[DatePickerSnippets#8](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#8)]
 [!code-vb[DatePickerSnippets#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarOpened">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler CalendarOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler CalendarOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DatePicker.CalendarOpened" />
      <MemberSignature Language="VB.NET" Value="Public Event CalendarOpened As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ CalendarOpened;" />
      <MemberSignature Language="F#" Value="member this.CalendarOpened : System.Windows.RoutedEventHandler " Usage="member this.CalendarOpened : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在開啟下拉式 <see cref="T:System.Windows.Controls.Calendar" /> 時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarOpened"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<DatePicker CalendarOpened="eventhandler"/>  
```  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Controls.DatePicker>，並提供指示給使用者。  當使用者開啟或關閉<xref:System.Windows.Controls.Calendar>，指示會更新。  
  
 [!code-xaml[DatePickerSnippets#7](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#7)]  
  
 [!code-csharp[DatePickerSnippets#8](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#8)]
 [!code-vb[DatePickerSnippets#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CalendarStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CalendarStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.CalendarStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ CalendarStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarStyle : System.Windows.Style with get, set" Usage="System.Windows.Controls.DatePicker.CalendarStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當呈現日曆時所使用的樣式。</summary>
        <value>當呈現日曆時所使用的樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Controls.DatePicker.CalendarStyle%2A>屬性可指定下拉式月曆的外觀。  
  
<a name="dependencyPropertyInfo_CalendarStyle"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.DatePicker.CalendarStyleProperty>|  
|中繼資料屬性設定為 **，則為 true**|無|  
  
<a name="xamlAttributeUsage_CalendarStyle"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<DatePicker CalendarStyle="{resourceExtension styleResourceKey}"/>  
```  
  
<a name="xamlValues_CalendarStyle"></a>   
## <a name="xaml-values"></a>XAML 值  
 *resourceExtension*  
 下列其中之一：`StaticResource`或`DynamicResource`。 如需詳細資訊，請參閱 [XAML 資源](~/docs/framework/wpf/advanced/xaml-resources.md)。  
  
 *styleResourceKey*  
 索引鍵，識別所要求的範本。 索引鍵參考中的現有資源<xref:System.Windows.ResourceDictionary>。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Style>for <xref:System.Windows.Controls.Calendar> ，並將指派的樣式<xref:System.Windows.Controls.DatePicker.CalendarStyle%2A>屬性。  
  
 [!code-xaml[DatePickerSnippets#6](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CalendarStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CalendarStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.CalendarStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CalendarStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CalendarStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CalendarStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.CalendarStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.DatePicker.CalendarStyle" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateValidationError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DatePickerDateValidationErrorEventArgs&gt; DateValidationError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DatePickerDateValidationErrorEventArgs&gt; DateValidationError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DatePicker.DateValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Event DateValidationError As EventHandler(Of DatePickerDateValidationErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Controls::DatePickerDateValidationErrorEventArgs ^&gt; ^ DateValidationError;" />
      <MemberSignature Language="F#" Value="member this.DateValidationError : EventHandler&lt;System.Windows.Controls.DatePickerDateValidationErrorEventArgs&gt; " Usage="member this.DateValidationError : System.EventHandler&lt;System.Windows.Controls.DatePickerDateValidationErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DatePickerDateValidationErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="P:System.Windows.Controls.DatePicker.Text" /> 設為無法解譯為日期的值或是無法選取日期時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 之後<xref:System.Windows.Controls.DatePicker.DateValidationError>事件發生時，如果您設定<xref:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException%2A?displayProperty=nameWithType>屬性設`true`，其中一個下列的例外狀況，就會引發：  
  
|例外狀況類型|條件|  
|--------------------|---------------|  
|<xref:System.FormatException>|無法剖析輸入的文字，以有效的日期，並不會隱藏例外狀況。|  
|<xref:System.ArgumentOutOfRangeException>|輸入的文字會剖析為不是可選取的日期。|  
  
<a name="xamlAttributeUsage_DateValidationError"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<DatePicker DateValidationError="eventhandler"/>  
```  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Controls.DatePicker>，會顯示在 2009 年 8 月的日期，並指定每個星期六和星期日不是可選取。  
  
 [!code-csharp[DatePickerSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[DatePickerSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[DatePickerSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#2)]  
  
 <xref:System.Windows.Controls.DatePicker>控制代碼<xref:System.Windows.Controls.DatePicker.DateValidationError>事件，如下列程式碼所示。 如果使用者輸入不能選取的日期，則這個範例會顯示一則訊息。 如果使用者輸入不是有效的日期的文字，則會擲回例外狀況。  
  
 [!code-csharp[DatePickerSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[DatePickerSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDate">
      <MemberSignature Language="C#" Value="public DateTime DisplayDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DisplayDate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.DisplayDate" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DisplayDate { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayDate : DateTime with get, set" Usage="System.Windows.Controls.DatePicker.DisplayDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要顯示的日期。</summary>
        <value>要顯示的日期。 預設值為 <see cref="P:System.DateTime.Today" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會影響<xref:System.Windows.Controls.Calendar>的<xref:System.Windows.Controls.DatePicker>。  如需詳細資訊，請參閱 <xref:System.Windows.Controls.Calendar.DisplayDate%2A?displayProperty=nameWithType> 屬性 (Property)。  
  
<a name="dependencyPropertyInfo_DisplayDate"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.DatePicker.DisplayDateProperty>|  
|中繼資料屬性設定為 **，則為 true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
 這個屬性可讓開發人員指定時所要顯示的日期<xref:System.Windows.Controls.DatePicker.SelectedDate%2A>是`null`。  
  
<a name="xamlAttributeUsage_DisplayDate"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<DatePicker DisplayDate="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDate"></a>   
## <a name="xaml-values"></a>XAML 值  
 *dateTimeString*  
 中所列是其中一種格式的日期[DateTime XAML 語法](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md)主題。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Controls.DatePicker>也就是以開啟其行事曆初始化及顯示 2009 年 7 月 7 日。  
  
 [!code-xaml[DatePickerSnippets#4](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的日期不在 <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> 所定義的範圍內。 和 <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />。</exception>
        <altmember cref="P:System.Windows.Controls.Calendar.DisplayDate" />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateEnd">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; DisplayDateEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DisplayDateEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDateEnd As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; DisplayDateEnd { Nullable&lt;DateTime&gt; get(); void set(Nullable&lt;DateTime&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayDateEnd : Nullable&lt;DateTime&gt; with get, set" Usage="System.Windows.Controls.DatePicker.DisplayDateEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要顯示的最後一個日期。</summary>
        <value>要顯示的最後一個日期。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會影響<xref:System.Windows.Controls.Calendar>的<xref:System.Windows.Controls.DatePicker>。  如需詳細資訊，請參閱 <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A?displayProperty=nameWithType> 屬性 (Property)。  
  
<a name="dependencyPropertyInfo_DisplayDateEnd"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.DatePicker.DisplayDateEndProperty>|  
|中繼資料屬性設定為 **，則為 true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDateEnd"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<DatePicker DisplayDateEnd="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDateEnd"></a>   
## <a name="xaml-values"></a>XAML 值  
 *dateTimeString*  
 中所列是其中一種格式的日期[DateTime XAML 語法](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md)主題。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Controls.DatePicker>，限制在 2009 年只顯示日期下拉式月曆。  
  
 [!code-csharp[DatePickerSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[DatePickerSnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xaml[DatePickerSnippets#1](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateEndProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateEndProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateEndProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.DisplayDateEndProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayDateEndProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayDateEndProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayDateEndProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.DisplayDateEndProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.DisplayDateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayDateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayDateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayDateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.DisplayDateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.DatePicker.DisplayDate" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateStart">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; DisplayDateStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DisplayDateStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.DisplayDateStart" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDateStart As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; DisplayDateStart { Nullable&lt;DateTime&gt; get(); void set(Nullable&lt;DateTime&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayDateStart : Nullable&lt;DateTime&gt; with get, set" Usage="System.Windows.Controls.DatePicker.DisplayDateStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要顯示的第一個日期。</summary>
        <value>要顯示的第一個日期。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會影響<xref:System.Windows.Controls.Calendar>的<xref:System.Windows.Controls.DatePicker>。  如需詳細資訊，請參閱 <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A?displayProperty=nameWithType> 屬性 (Property)。  
  
<a name="dependencyPropertyInfo_DisplayDateStart"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.DatePicker.DisplayDateStartProperty>|  
|中繼資料屬性設定為 **，則為 true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDateStart"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<DatePicker DisplayDateStart="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDateStart"></a>   
## <a name="xaml-values"></a>XAML 值  
 *dateTimeString*  
 中所列是其中一種格式的日期[DateTime XAML 語法](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md)主題。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Controls.DatePicker>，限制在 2009 年只顯示日期下拉式月曆。  
  
 [!code-csharp[DatePickerSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[DatePickerSnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xaml[DatePickerSnippets#1](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Calendar.DisplayDateStart" />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateStartProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateStartProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateStartProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.DisplayDateStartProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayDateStartProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayDateStartProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayDateStartProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.DisplayDateStartProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.FirstDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek FirstDayOfWeek { DayOfWeek get(); void set(DayOfWeek value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDayOfWeek : DayOfWeek with get, set" Usage="System.Windows.Controls.DatePicker.FirstDayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定視為一週開頭的那一天。</summary>
        <value>
          <see cref="T:System.DayOfWeek" />，表示一週的開頭。 預設為目前文化特性所決定的 <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會影響<xref:System.Windows.Controls.Calendar>的<xref:System.Windows.Controls.DatePicker>。  如需詳細資訊，請參閱 <xref:System.Windows.Controls.Calendar.FirstDayOfWeek%2A?displayProperty=nameWithType> 屬性 (Property)。  
  
<a name="dependencyPropertyInfo_FirstDayOfWeek"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.DatePicker.FirstDayOfWeekProperty>|  
|中繼資料屬性設定為 **，則為 true**|無|  
  
<a name="xamlAttributeUsage_FirstDayOfWeek"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
 \<DatePicker **FirstDayOfWeek**="<xref:System.DayOfWeek>"/>  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Controls.DatePicker>顯示星期一做為一週的第一天。  
  
 [!code-csharp[DatePickerSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[DatePickerSnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xaml[DatePickerSnippets#1](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeekProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FirstDayOfWeekProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FirstDayOfWeekProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.FirstDayOfWeekProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FirstDayOfWeekProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FirstDayOfWeekProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FirstDayOfWeekProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.FirstDayOfWeekProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.DatePicker.FirstDayOfWeek" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal override bool HasEffectiveKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.HasEffectiveKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HasEffectiveKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasEffectiveKeyboardFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEffectiveKeyboardFocus : bool" Usage="System.Windows.Controls.DatePicker.HasEffectiveKeyboardFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出 <see cref="T:System.Windows.Controls.DatePicker" /> 是否具有焦點。</summary>
        <value>如果 <see cref="T:System.Windows.Controls.DatePicker" /> 具有焦點，則為 <see langword="true" />；否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpen">
      <MemberSignature Language="C#" Value="public bool IsDropDownOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDropDownOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.IsDropDownOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDropDownOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDropDownOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDropDownOpen : bool with get, set" Usage="System.Windows.Controls.DatePicker.IsDropDownOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值會指出是要開啟還是關閉下拉式 <see cref="T:System.Windows.Controls.Calendar" />。</summary>
        <value>如果開啟 <see cref="T:System.Windows.Controls.Calendar" /> 則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsDropDownOpen"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.DatePicker.IsDropDownOpenProperty>|  
|中繼資料屬性設定為 **，則為 true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
 設定這個屬性會導致<xref:System.Windows.Controls.Calendar>下拉式清單，以開啟或關閉。  
  
<a name="xamlAttributeUsage_IsDropDownOpen"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<DatePicker IsDropDownOpen="bool"/>  
```  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Controls.DatePicker>，初始化以開啟其行事曆，並顯示 2009 年 7 月 7 日。  
  
 [!code-xaml[DatePickerSnippets#4](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDropDownOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDropDownOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.IsDropDownOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDropDownOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDropDownOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDropDownOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.IsDropDownOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.DatePicker.IsDropDownOpen" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTodayHighlighted">
      <MemberSignature Language="C#" Value="public bool IsTodayHighlighted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTodayHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.IsTodayHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTodayHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTodayHighlighted { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTodayHighlighted : bool with get, set" Usage="System.Windows.Controls.DatePicker.IsTodayHighlighted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值指出目前的日期是否會反白顯示。</summary>
        <value>如果目前的日期會反白顯示則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會影響<xref:System.Windows.Controls.Calendar>的<xref:System.Windows.Controls.DatePicker>。  如需詳細資訊，請參閱 <xref:System.Windows.Controls.Calendar.IsTodayHighlighted%2A?displayProperty=nameWithType> 屬性 (Property)。  
  
<a name="dependencyPropertyInfo_IsTodayHighlighted"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.DatePicker.IsTodayHighlightedProperty>|  
|中繼資料屬性設定為 **，則為 true**|無|  
  
<a name="xamlAttributeUsage_IsTodayHighlighted"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<DatePicker IsTodayHighlighted="bool"/>  
```  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Controls.DatePicker>不醒目提示目前的日期。  
  
 [!code-xaml[DatePickerSnippets#4](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" />
      </Docs>
    </Member>
    <Member MemberName="IsTodayHighlightedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTodayHighlightedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTodayHighlightedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.IsTodayHighlightedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTodayHighlightedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTodayHighlightedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTodayHighlightedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.IsTodayHighlightedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.DatePicker.IsTodayHighlighted" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="datePicker.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在套用新的範本時，為 <see cref="T:System.Windows.Controls.DatePicker" /> 控制項建置視覺化樹狀結構。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會叫用，每當應用程式程式碼或內部程序，例如重建配置傳遞呼叫<xref:System.Windows.FrameworkElement.ApplyTemplate%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalendarClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnCalendarClosed (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCalendarClosed(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.OnCalendarClosed(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCalendarClosed (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCalendarClosed(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCalendarClosed : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnCalendarClosed : System.Windows.RoutedEventArgs -&gt; unit" Usage="datePicker.OnCalendarClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件的資料。</param>
        <summary>引發 <see cref="E:System.Windows.Controls.DatePicker.CalendarClosed" /> 路由事件。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Controls.DatePicker.OnCalendarClosed(System.Windows.RoutedEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Controls.DatePicker.OnCalendarClosed(System.Windows.RoutedEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCalendarOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnCalendarOpened (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCalendarOpened(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.OnCalendarOpened(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCalendarOpened (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCalendarOpened(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCalendarOpened : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnCalendarOpened : System.Windows.RoutedEventArgs -&gt; unit" Usage="datePicker.OnCalendarOpened e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件的資料。</param>
        <summary>引發 <see cref="E:System.Windows.Controls.DatePicker.CalendarOpened" /> 路由事件。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Controls.DatePicker.OnCalendarOpened(System.Windows.RoutedEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Controls.DatePicker.OnCalendarOpened(System.Windows.RoutedEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="datePicker.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> 供自動化基礎結構使用。</summary>
        <returns>
          <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> 物件的 <see cref="T:System.Windows.Controls.DatePicker" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會建立新<xref:System.Windows.Automation.Peers.DatePickerAutomationPeer>執行個體，如果尚未建立的控制項執行個體; 否則它會傳回<xref:System.Windows.Automation.Peers.DatePickerAutomationPeer>之前建立。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDateValidationError">
      <MemberSignature Language="C#" Value="protected virtual void OnDateValidationError (System.Windows.Controls.DatePickerDateValidationErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDateValidationError(class System.Windows.Controls.DatePickerDateValidationErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.OnDateValidationError(System.Windows.Controls.DatePickerDateValidationErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDateValidationError (e As DatePickerDateValidationErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDateValidationError(System::Windows::Controls::DatePickerDateValidationErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDateValidationError : System.Windows.Controls.DatePickerDateValidationErrorEventArgs -&gt; unit&#xA;override this.OnDateValidationError : System.Windows.Controls.DatePickerDateValidationErrorEventArgs -&gt; unit" Usage="datePicker.OnDateValidationError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.DatePickerDateValidationErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" />，其中包含事件資料。</param>
        <summary>引發 <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Controls.DatePicker.OnDateValidationError(System.Windows.Controls.DatePickerDateValidationErrorEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Controls.DatePicker.OnDateValidationError(System.Windows.Controls.DatePickerDateValidationErrorEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedDateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedDateChanged (System.Windows.Controls.SelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedDateChanged(class System.Windows.Controls.SelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.OnSelectedDateChanged(System.Windows.Controls.SelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedDateChanged (e As SelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedDateChanged(System::Windows::Controls::SelectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedDateChanged : System.Windows.Controls.SelectionChangedEventArgs -&gt; unit&#xA;override this.OnSelectedDateChanged : System.Windows.Controls.SelectionChangedEventArgs -&gt; unit" Usage="datePicker.OnSelectedDateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件的資料。</param>
        <summary>引發 <see cref="E:System.Windows.Controls.DatePicker.SelectedDateChanged" /> 路由事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控制項會引發<xref:System.Windows.Controls.DatePicker.SelectedDateChanged>藉由呼叫的事件<xref:System.Windows.UIElement.RaiseEvent%2A>。 如需詳細資訊，請參閱 <<c0> [ 路由事件概觀](~/docs/framework/wpf/advanced/routed-events-overview.md)。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Windows.Controls.DatePicker.OnSelectedDateChanged(System.Windows.Controls.SelectionChangedEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Controls.DatePicker.OnSelectedDateChanged(System.Windows.Controls.SelectionChangedEventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SelectedDate">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; SelectedDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; SelectedDate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.SelectedDate" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedDate As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; SelectedDate { Nullable&lt;DateTime&gt; get(); void set(Nullable&lt;DateTime&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedDate : Nullable&lt;DateTime&gt; with get, set" Usage="System.Windows.Controls.DatePicker.SelectedDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定目前選取的日期。</summary>
        <value>目前選取的日期。 預設值為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會影響<xref:System.Windows.Controls.Calendar>的<xref:System.Windows.Controls.DatePicker>。  如需詳細資訊，請參閱 <xref:System.Windows.Controls.Calendar.SelectedDate%2A?displayProperty=nameWithType> 屬性 (Property)。  
  
<a name="dependencyPropertyInfo_SelectedDate"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.DatePicker.SelectedDateProperty>|  
|中繼資料屬性設定為 **，則為 true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_SelectedDate"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<DatePicker SelectedDate="dateTimeString"/>  
```  
  
<a name="xamlValues_SelectedDate"></a>   
## <a name="xaml-values"></a>XAML 值  
 *dateTimeString*  
 中所列是其中一種格式的日期[DateTime XAML 語法](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md)主題。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Controls.DatePicker>具有 2009 年 8 月 10 日選取的日期。  此範例也會繫結<xref:System.Windows.Controls.DatePicker.Text%2A?displayProperty=nameWithType>屬性設<xref:System.Windows.Controls.TextBlock>。  
  
 [!code-xaml[DatePickerSnippets#5](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的日期不在 <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> 和 <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" /> 所定義的範圍內，或是指定的日期在 <see cref="P:System.Windows.Controls.DatePicker.BlackoutDates" /> 集合中。</exception>
        <altmember cref="P:System.Windows.Controls.Calendar.SelectedDate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedDateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt; SelectedDateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.SelectionChangedEventArgs&gt; SelectedDateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DatePicker.SelectedDateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedDateChanged As EventHandler(Of SelectionChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Controls::SelectionChangedEventArgs ^&gt; ^ SelectedDateChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedDateChanged : EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt; " Usage="member this.SelectedDateChanged : System.EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> 屬性變更時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SelectedDatesChanged"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<DatePicker SelectedDateChanged="eventhandler"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDateChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SelectedDateChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SelectedDateChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.SelectedDateChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedDateChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SelectedDateChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedDateChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.DatePicker.SelectedDateChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="E:System.Windows.Controls.DatePicker.SelectedDateChanged" /> 路由事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDateFormat">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DatePickerFormat SelectedDateFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.DatePickerFormat SelectedDateFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.SelectedDateFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedDateFormat As DatePickerFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DatePickerFormat SelectedDateFormat { System::Windows::Controls::DatePickerFormat get(); void set(System::Windows::Controls::DatePickerFormat value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedDateFormat : System.Windows.Controls.DatePickerFormat with get, set" Usage="System.Windows.Controls.DatePicker.SelectedDateFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DatePickerFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來顯示選定日期的格式。</summary>
        <value>用來顯示選定日期的格式。 預設值為 <see cref="F:System.Windows.Controls.DatePickerFormat.Long" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_SelectedDateFormat"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.DatePicker.SelectedDateFormatProperty>|  
|中繼資料屬性設定為 **，則為 true**|無|  
  
<a name="xamlAttributeUsage_SelectedDateFormat"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
 \<DatePicker **SelectedDateFormat**="<xref:System.Windows.Controls.DatePickerFormat>"/>  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Controls.DatePicker>，顯示使用非縮寫的星期和月份名稱的日期。  
  
 [!code-csharp[DatePickerSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[DatePickerSnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xaml[DatePickerSnippets#1](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的格式無效。</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedDateFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedDateFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedDateFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.SelectedDateFormatProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedDateFormatProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectedDateFormatProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedDateFormatProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.SelectedDateFormatProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.DatePicker.SelectedDateFormat" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedDateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedDateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.SelectedDateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedDateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectedDateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedDateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.SelectedDateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Controls.DatePicker.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Controls.DatePicker" /> 所顯示的文字，或設定選取的日期。</summary>
        <value>由 <see cref="T:System.Windows.Controls.DatePicker" /> 顯示的文字。 預設為空字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者可以設定<xref:System.Windows.Controls.DatePicker.SelectedDate%2A>的<xref:System.Windows.Controls.DatePicker>透過其文字方塊中輸入日期。 <xref:System.Windows.Controls.DatePicker>嘗試剖析為日期，此屬性中輸入任何字串。 雖然<xref:System.Windows.Controls.DatePicker.Text%2A>屬性可以設定為任何字串，就能剖析<xref:System.DateTime.Parse%2A>方法的日期，則會傳回字串的格式取決於值<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>屬性。 這表示<xref:System.Windows.Controls.DatePicker>可能會顯示為不同使用者所輸入的字串。  
  
 如果<xref:System.Windows.Controls.DatePicker.Text%2A>設定為可選取及有效的日期<xref:System.Windows.Controls.DatePicker.DateValidationError>就會發生事件。 如果您處理<xref:System.Windows.Controls.DatePicker.DateValidationError>事件和組<xref:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException%2A>屬性設`true`，則<xref:System.FormatException>或<xref:System.ArgumentOutOfRangeException>，就會引發。  
  
<a name="dependencyPropertyInfo_Text"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.DatePicker.TextProperty>|  
|中繼資料屬性設定為 **，則為 true**|無|  
  
<a name="xamlAttributeUsage_Text"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<DatePicker Text="dateTimeString"/>  
```  
  
<a name="xamlValues_Text"></a>   
## <a name="xaml-values"></a>XAML 值  
 *dateTimeString*  
 中所列是其中一種格式的日期[DateTime XAML 語法](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md)主題。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Controls.DatePicker>具有 2009 年 8 月 10 日選取的日期。  此範例也會繫結<xref:System.Windows.Controls.DatePicker.Text%2A?displayProperty=nameWithType>屬性設<xref:System.Windows.Controls.TextBlock>。 因為<xref:System.Windows.Controls.DatePicker.SelectedDateFormat%2A>屬性設定為<xref:System.Windows.Controls.DatePickerFormat.Long>，則<xref:System.Windows.Controls.DatePicker>和<xref:System.Windows.Controls.TextBlock>顯示日期使用縮寫的星期和月份名稱，即使在使用者輸入日期的簡短形式。  
  
 [!code-xaml[DatePickerSnippets#5](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.DatePicker.DateValidationError" />
        <altmember cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.TextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.TextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.DatePicker.Text" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="datePicker.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>提供選定日期的文字表示。</summary>
        <returns>選定日期的文字表示，如果 <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> 是 <see langword="null" /> 則為空字串。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>