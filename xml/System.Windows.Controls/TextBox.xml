<Type Name="TextBox" FullName="System.Windows.Controls.TextBox">
  <TypeSignature Language="C#" Value="public class TextBox : System.Windows.Controls.Primitives.TextBoxBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TextBox extends System.Windows.Controls.Primitives.TextBoxBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.TextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class TextBox&#xA;Inherits TextBoxBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBox : System::Windows::Controls::Primitives::TextBoxBase, System::Windows::Markup::IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Text")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="edae8-101">代表可以用來顯示或編輯未格式化文字的控制項。</span><span class="sxs-lookup"><span data-stu-id="edae8-101">Represents a control that can be used to display or edit unformatted text.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-102">A<xref:System.Windows.Controls.TextBox>控制項可以只包含未格式化的文字在其<xref:System.Windows.Controls.TextBox.Text%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="edae8-102">A <xref:System.Windows.Controls.TextBox> control can contain only unformatted text in its <xref:System.Windows.Controls.TextBox.Text%2A> property.</span></span> <span data-ttu-id="edae8-103">下圖顯示的範例<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="edae8-103">The following graphic shows an example of a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="edae8-104">![TextBox 螢幕擷取畫面](~/add/media/ss-ctl-textbox.gif "TextBox 螢幕擷取畫面")</span><span class="sxs-lookup"><span data-stu-id="edae8-104">![TextBox screen shot](~/add/media/ss-ctl-textbox.gif "TextBox screen shot")</span></span>  
<span data-ttu-id="edae8-105">文字方塊範例</span><span class="sxs-lookup"><span data-stu-id="edae8-105">Example of a TextBox</span></span>  
  
 <span data-ttu-id="edae8-106"><xref:System.Windows.Controls.TextBox> 是幾個封裝的元件所組成的複合控制項。</span><span class="sxs-lookup"><span data-stu-id="edae8-106"><xref:System.Windows.Controls.TextBox> is a composite control that is composed of several encapsulated components.</span></span> <span data-ttu-id="edae8-107">因此，某些事件不反昇至包含控制項因為它們由封裝的子項目所處理。</span><span class="sxs-lookup"><span data-stu-id="edae8-107">Consequently, some events do not bubble up to the containing control because they are handled by encapsulated child elements.</span></span> <span data-ttu-id="edae8-108">因為這個緣故，應用程式開發人員應接聽的通道版本 （表示 「 預覽 」 的前置詞） 的事件。</span><span class="sxs-lookup"><span data-stu-id="edae8-108">Because of this, application developers should listen for the tunneling version of an event (denoted by the prefix "Preview").</span></span>  
  
 <span data-ttu-id="edae8-109"><xref:System.Windows.Controls.TextBox> 支援未格式化的文字。</span><span class="sxs-lookup"><span data-stu-id="edae8-109"><xref:System.Windows.Controls.TextBox> supports unformatted text only.</span></span> <span data-ttu-id="edae8-110">對於需要支援更豐富的內容的應用程式，請參閱<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="edae8-110">For applications that require support for richer content, see <xref:System.Windows.Controls.RichTextBox>.</span></span> <span data-ttu-id="edae8-111">對於需要接受密碼或其他機密的輸入應用程式，請參閱<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="edae8-111">For applications that need to accept passwords or other sensitive input, see <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
 <span data-ttu-id="edae8-112">水平及垂直對齊文字內<xref:System.Windows.Controls.TextBox>透過<xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A>和<xref:System.Windows.Controls.Control.VerticalContentAlignment%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="edae8-112">Horizontally and vertically aligning text within a <xref:System.Windows.Controls.TextBox> is done with the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> and <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> properties.</span></span> <span data-ttu-id="edae8-113">對齊<xref:System.Windows.Controls.TextBox>頁面配置中透過<xref:System.Windows.FrameworkElement.HorizontalAlignment%2A>和<xref:System.Windows.FrameworkElement.VerticalAlignment%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="edae8-113">Aligning the <xref:System.Windows.Controls.TextBox> within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties.</span></span>  
  
 <span data-ttu-id="edae8-114">若要隱藏周圍的框線，最好<xref:System.Windows.Controls.TextBox>設定<xref:System.Windows.Controls.Control.BorderThickness%2A>屬性<xref:System.Windows.Controls.TextBox>至`0`。</span><span class="sxs-lookup"><span data-stu-id="edae8-114">The best way to hide the border around a <xref:System.Windows.Controls.TextBox> is to set the <xref:System.Windows.Controls.Control.BorderThickness%2A> property of the <xref:System.Windows.Controls.TextBox> to `0`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="edae8-115"><xref:System.Windows.Controls.TextBox> 有內建的反昇處理<xref:System.Windows.UIElement.MouseUp>和<xref:System.Windows.UIElement.MouseDown>事件。</span><span class="sxs-lookup"><span data-stu-id="edae8-115"><xref:System.Windows.Controls.TextBox> has built-in handling for the bubbling  <xref:System.Windows.UIElement.MouseUp> and <xref:System.Windows.UIElement.MouseDown> events.</span></span> <span data-ttu-id="edae8-116">因此，自訂事件處理常式，接聽<xref:System.Windows.UIElement.MouseUp>或<xref:System.Windows.UIElement.MouseDown>事件從<xref:System.Windows.Controls.TextBox>將不會呼叫。</span><span class="sxs-lookup"><span data-stu-id="edae8-116">Consequently, custom event handlers that listen for <xref:System.Windows.UIElement.MouseUp> or <xref:System.Windows.UIElement.MouseDown> events from a <xref:System.Windows.Controls.TextBox> will not be called.</span></span> <span data-ttu-id="edae8-117">如果您需要回應這些事件，接聽通道<xref:System.Windows.UIElement.PreviewMouseUp>和<xref:System.Windows.UIElement.PreviewMouseDown>事件相反地，或註冊處理常式取代<xref:System.Windows.EventSetter.HandledEventsToo%2A>（這個第二種選項是僅可透過程式碼） 的引數。</span><span class="sxs-lookup"><span data-stu-id="edae8-117">If you need to respond to these events, listen for the tunneling <xref:System.Windows.UIElement.PreviewMouseUp> and <xref:System.Windows.UIElement.PreviewMouseDown> events instead, or register the handlers with the <xref:System.Windows.EventSetter.HandledEventsToo%2A> argument (this latter option is only available through code).</span></span> <span data-ttu-id="edae8-118">不會將事件處理，除非您要刻意停用標記<xref:System.Windows.Controls.TextBox>原生處理這些事件，並注意這會明顯影響控制項的[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="edae8-118">Do not mark the event handled unless you deliberately want to disable <xref:System.Windows.Controls.TextBox> native handling of these events, and be aware that this has notable effects on the control's [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 <span data-ttu-id="edae8-119">捲軸不會顯示<xref:System.Windows.Controls.TextBox>預設。</span><span class="sxs-lookup"><span data-stu-id="edae8-119">Scrollbars are not visible on a <xref:System.Windows.Controls.TextBox> by default.</span></span> <span data-ttu-id="edae8-120">若要顯示捲軸，將<xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A>和<xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A>屬性<xref:System.Windows.Controls.ScrollBarVisibility.Visible>或<xref:System.Windows.Controls.ScrollBarVisibility.Auto>。</span><span class="sxs-lookup"><span data-stu-id="edae8-120">To make scrollbars visible, set the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> properties to <xref:System.Windows.Controls.ScrollBarVisibility.Visible> or <xref:System.Windows.Controls.ScrollBarVisibility.Auto>.</span></span>  
  
 <span data-ttu-id="edae8-121">通常<xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged>事件應該用來偵測每次中的文字<xref:System.Windows.Controls.TextBox>或<xref:System.Windows.Controls.RichTextBox>而不是變更<xref:System.Windows.UIElement.KeyDown>如您所預期。</span><span class="sxs-lookup"><span data-stu-id="edae8-121">Usually the <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event should be used to detect whenever the text in a <xref:System.Windows.Controls.TextBox> or <xref:System.Windows.Controls.RichTextBox> changes rather then <xref:System.Windows.UIElement.KeyDown> as you might expect.</span></span> <span data-ttu-id="edae8-122">請參閱[如何： 偵測文字時在文字方塊中已變更](~/docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md)的範例。</span><span class="sxs-lookup"><span data-stu-id="edae8-122">See [How to: Detect When Text in a TextBox Has Changed](~/docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md) for an example.</span></span>  
  
## <a name="customizing-the-textbox-control"></a><span data-ttu-id="edae8-123">自訂文字方塊控制項</span><span class="sxs-lookup"><span data-stu-id="edae8-123">Customizing the TextBox Control</span></span>  
 <span data-ttu-id="edae8-124">若要套用至多個相同的屬性設定<xref:System.Windows.Controls.TextBox>控制項，可使用<xref:System.Windows.FrameworkElement.Style%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="edae8-124">To apply the same property settings to multiple <xref:System.Windows.Controls.TextBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="edae8-125">您可以修改預設<xref:System.Windows.Controls.ControlTemplate>來提供獨特的外觀的控制項。</span><span class="sxs-lookup"><span data-stu-id="edae8-125">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="edae8-126">如需有關建立<xref:System.Windows.Controls.ControlTemplate>，請參閱[自訂現有控制項的外觀，藉由建立 ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="edae8-126">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="edae8-127">若要查看的組件和所特有狀態<xref:System.Windows.Controls.TextBox>，請參閱[文字方塊樣式和範本](~/docs/framework/wpf/controls/textbox-styles-and-templates.md)。</span><span class="sxs-lookup"><span data-stu-id="edae8-127">To see the parts and states that are specific to the <xref:System.Windows.Controls.TextBox>, see [TextBox Styles and Templates](~/docs/framework/wpf/controls/textbox-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="edae8-128">對這個控制項的相依性屬性可能會設定控制項的預設樣式。</span><span class="sxs-lookup"><span data-stu-id="edae8-128">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="edae8-129">如果屬性設定為預設樣式，屬性可能會變更其預設值時該控制項會出現在應用程式中。</span><span class="sxs-lookup"><span data-stu-id="edae8-129">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="edae8-130">預設樣式是由決定由哪個桌面主題時，會使用應用程式正在執行。</span><span class="sxs-lookup"><span data-stu-id="edae8-130">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="edae8-131">如需詳細資訊，請參閱[預設 WPF 佈景主題](http://go.microsoft.com/fwlink/?LinkID=158252)。</span><span class="sxs-lookup"><span data-stu-id="edae8-131">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="edae8-132">設定視覺化屬性只會影響該屬性是否存在於這兩<xref:System.Windows.Controls.TextBox>控制項的預設範本，並且使用設定的。</span><span class="sxs-lookup"><span data-stu-id="edae8-132">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.TextBox> control's default template and is set by using a .</span></span> <span data-ttu-id="edae8-133">您可以找到的視覺屬性清單中的 「 變更 Visual 結構的控制項 」 一節中[自訂現有控制項的外觀，藉由建立 ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="edae8-133">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edae8-134">這個範例會示範如何使用文字屬性，以設定 TextBox 控制項的初始文字內容。</span><span class="sxs-lookup"><span data-stu-id="edae8-134">This example shows how to use the Text property to set the initial text contents of a TextBox control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="edae8-135">雖然可以使用此範例 Extensible Application Markup Language (XAML) 版本\<TextBox.Text > 每個按鈕的文字方塊內容的文字周圍的標記，則不需要因為 TextBox 套用 ContentPropertyAttribute此屬性的文字屬性。</span><span class="sxs-lookup"><span data-stu-id="edae8-135">Although the Extensible Application Markup Language (XAML) version of the example could use the \<TextBox.Text> tags around the text of each button's TextBox content, it is not necessary because the TextBox applies the ContentPropertyAttribute attribute to the Text property.</span></span>  
  
```xaml  
<TextBox Name="tbSettingText">  
  Initial text contents of the TextBox.  
</TextBox>  
```  
  
```csharp  
tbSettingText.Text = "Initial text contents of the TextBox.";  
```  
  
```vb  
tbSettingText.Text = "Initial text contents of the TextBox."  
```  
  
 <span data-ttu-id="edae8-136">如需其他範例，請參閱本文件的 4.0 版： [TextBox 類別](https://msdn.microsoft.com/library/ms617604\(v=vs.100\).aspx)。</span><span class="sxs-lookup"><span data-stu-id="edae8-136">For additional examples, see the 4.0 version of this document: [TextBox Class](https://msdn.microsoft.com/library/ms617604\(v=vs.100\).aspx).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.PasswordBox" />
    <altmember cref="T:System.Windows.Controls.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="edae8-137">初始化 <see cref="T:System.Windows.Controls.TextBox" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="edae8-137">Initializes a new instance of the <see cref="T:System.Windows.Controls.TextBox" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretIndex">
      <MemberSignature Language="C#" Value="public int CaretIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CaretIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.CaretIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CaretIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-138">取得或設定插入號的插入位置索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-138">Gets or sets the insertion position index of the caret.</span></span></summary>
        <value><span data-ttu-id="edae8-139">插入號之以零起始的插入位置索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-139">The zero-based insertion position index of the caret.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-140">取得這個屬性會傳回目前的插入位置索引插入號 (請參閱<xref:System.Windows.Documents.TextPointer>的術語，例如 「 插入位置 」 的詳細資訊)。</span><span class="sxs-lookup"><span data-stu-id="edae8-140">Getting this property returns the current insertion position index of the caret (see <xref:System.Windows.Documents.TextPointer> for information on terminology like "insertion position").</span></span> <span data-ttu-id="edae8-141">設定這個屬性將插入號移至指定的插入位置。</span><span class="sxs-lookup"><span data-stu-id="edae8-141">Setting this property moves the caret to the specified insertion position.</span></span>  
  
 <span data-ttu-id="edae8-142">插入位置是字元或元素標記之間。</span><span class="sxs-lookup"><span data-stu-id="edae8-142">An insertion position is between either characters or element tags.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Documents.TextPointer" />
      </Docs>
    </Member>
    <Member MemberName="CharacterCasing">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CharacterCasing CharacterCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CharacterCasing CharacterCasing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.CharacterCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property CharacterCasing As CharacterCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CharacterCasing CharacterCasing { System::Windows::Controls::CharacterCasing get(); void set(System::Windows::Controls::CharacterCasing value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CharacterCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-143">取得或設定將字元手動輸入文字方塊時的大小寫。</span><span class="sxs-lookup"><span data-stu-id="edae8-143">Gets or sets how characters are cased when they are manually entered into the text box.</span></span></summary>
        <value><span data-ttu-id="edae8-144">其中一個 <see cref="T:System.Windows.Controls.CharacterCasing" /> 值，這個值指定手動輸入之字元的大小寫。</span><span class="sxs-lookup"><span data-stu-id="edae8-144">One of the <see cref="T:System.Windows.Controls.CharacterCasing" /> values that specifies how manually entered characters are cased.</span></span> <span data-ttu-id="edae8-145">預設值為 <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />。</span><span class="sxs-lookup"><span data-stu-id="edae8-145">The default is <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-146">這個屬性不會影響以程式設計方式加入的字元。</span><span class="sxs-lookup"><span data-stu-id="edae8-146">This property does not affect characters that are added programmatically.</span></span>  
  
<a name="dependencyPropertyInfo_CharacterCasing"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="edae8-147">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="edae8-147">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="edae8-148">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="edae8-148">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.CharacterCasingProperty>|  
|<span data-ttu-id="edae8-149">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="edae8-149">Metadata properties set to `true`</span></span>|<span data-ttu-id="edae8-150">無</span><span class="sxs-lookup"><span data-stu-id="edae8-150">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="edae8-151">下列範例示範如何使用<xref:System.Windows.Controls.TextBox.CharacterCasing%2A>將所有手動輸入的字元轉換成大寫的文字方塊中的屬性。</span><span class="sxs-lookup"><span data-stu-id="edae8-151">The following example shows how to use the <xref:System.Windows.Controls.TextBox.CharacterCasing%2A> property to convert all manually entered characters to uppercase in a text box.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#CharacterCasingExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/charactercasingexample.xaml#charactercasingexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/CharacterCasingExample.cs#charactercasingcodeexamplewholepage)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/charactercasingexample.vb#charactercasingcodeexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterCasingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CharacterCasingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CharacterCasingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.CharacterCasingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CharacterCasingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CharacterCasingProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-152">識別 <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="edae8-152">Identifies the <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="edae8-153">將所有內容從文字方塊中清除。</span><span class="sxs-lookup"><span data-stu-id="edae8-153">Clears all the content from the text box.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.Text" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndexFromLineIndex">
      <MemberSignature Language="C#" Value="public int GetCharacterIndexFromLineIndex (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharacterIndexFromLineIndex(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterIndexFromLineIndex (lineIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharacterIndexFromLineIndex(int lineIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="edae8-154">行中以零起始的索引，要為其擷取初始字元索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-154">The zero-based index of the line to retrieve the initial character index for.</span></span></param>
        <summary><span data-ttu-id="edae8-155">針對指定行中的第一個字元，傳回以零起始的字元索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-155">Returns the zero-based character index for the first character in the specified line.</span></span></summary>
        <returns><span data-ttu-id="edae8-156">指定行中第一個字元的以零起始的索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-156">The zero-based index for the first character in the specified line.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndexFromPoint">
      <MemberSignature Language="C#" Value="public int GetCharacterIndexFromPoint (System.Windows.Point point, bool snapToText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharacterIndexFromPoint(valuetype System.Windows.Point point, bool snapToText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharacterIndexFromPoint(System::Windows::Point point, bool snapToText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="snapToText" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="edae8-157"><see cref="T:System.Windows.Controls.TextBox" /> 座標空間中的一個點，要針對這個點傳回索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-157">A point in <see cref="T:System.Windows.Controls.TextBox" /> coordinate-space for which to return an index.</span></span></param>
        <param name="snapToText">
          <span data-ttu-id="edae8-158">如果指定的點上沒有字元，<see langword="true" /> 表示傳回最接近的索引。如果指定點上沒有字元，<see langword="false" /> 表示傳回 –1。</span><span class="sxs-lookup"><span data-stu-id="edae8-158"><see langword="true" /> to return the nearest index if there is no character at the specified point; <see langword="false" /> to return –1 if there is no character at the specified point.</span></span></param>
        <summary><span data-ttu-id="edae8-159">傳回最靠近指定點之字元的索引 (以零起始)。</span><span class="sxs-lookup"><span data-stu-id="edae8-159">Returns the zero-based index of the character that is closest to the specified point.</span></span></summary>
        <returns><span data-ttu-id="edae8-160">最靠近指定點之字元的索引，如果找不到有效的索引，則為 –1。</span><span class="sxs-lookup"><span data-stu-id="edae8-160">The index of the character that is closest to the specified point, or –1 if no valid index can be found.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstVisibleLineIndex">
      <MemberSignature Language="C#" Value="public int GetFirstVisibleLineIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstVisibleLineIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstVisibleLineIndex () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstVisibleLineIndex();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="edae8-161">針對文字方塊中目前可看見的第一行，傳回行索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-161">Returns the line index for the first line that is currently visible in the text box.</span></span></summary>
        <returns><span data-ttu-id="edae8-162">文字方塊中，可看見之第一行的以零起始的索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-162">The zero-based index for the first visible line in the text box.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLastVisibleLineIndex">
      <MemberSignature Language="C#" Value="public int GetLastVisibleLineIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLastVisibleLineIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastVisibleLineIndex () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLastVisibleLineIndex();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="edae8-163">針對文字方塊中目前可看見的最後一行，傳回行索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-163">Returns the line index for the last line that is currently visible in the text box.</span></span></summary>
        <returns><span data-ttu-id="edae8-164">文字方塊中，可看見之最後一行的以零起始的索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-164">The zero-based index for the last visible line in the text box.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineIndexFromCharacterIndex">
      <MemberSignature Language="C#" Value="public int GetLineIndexFromCharacterIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineIndexFromCharacterIndex(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineIndexFromCharacterIndex (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineIndexFromCharacterIndex(int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="edae8-165">以零起始的字元索引，要為其擷取關聯的行索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-165">The zero-based character index for which to retrieve the associated line index.</span></span></param>
        <summary><span data-ttu-id="edae8-166">針對包含所指定之字元索引的行，傳回以零起始的行索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-166">Returns the zero-based line index for the line that contains the specified character index.</span></span></summary>
        <returns><span data-ttu-id="edae8-167">包含指定字元索引之行的以零起始的索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-167">The zero-based index for the line that contains the specified character index.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineLength">
      <MemberSignature Language="C#" Value="public int GetLineLength (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineLength(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineLength (lineIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineLength(int lineIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="edae8-168">以零起始的行索引，要為其傳回字元計數。</span><span class="sxs-lookup"><span data-stu-id="edae8-168">The zero-based line index for which to return a character count.</span></span></param>
        <summary><span data-ttu-id="edae8-169">傳回指定行中的字元數目。</span><span class="sxs-lookup"><span data-stu-id="edae8-169">Returns the number of characters in the specified line.</span></span></summary>
        <returns><span data-ttu-id="edae8-170">指定行中的字元數。</span><span class="sxs-lookup"><span data-stu-id="edae8-170">The number of characters in the specified line.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineText">
      <MemberSignature Language="C#" Value="public string GetLineText (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetLineText(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineText (lineIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetLineText(int lineIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="edae8-171">以零起始的行索引，要為其擷取目前顯示的文字。</span><span class="sxs-lookup"><span data-stu-id="edae8-171">The zero-based line index for which to retrieve the currently displayed text.</span></span></param>
        <summary><span data-ttu-id="edae8-172">傳回目前顯示在指定行上的文字。</span><span class="sxs-lookup"><span data-stu-id="edae8-172">Returns the text that is currently displayed on the specified line.</span></span></summary>
        <returns><span data-ttu-id="edae8-173">字串，包含目前可在指定行上看見的文字複本。</span><span class="sxs-lookup"><span data-stu-id="edae8-173">A string containing a copy of the text currently visible on the specified line.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetNextSpellingErrorCharacterIndex">
      <MemberSignature Language="C#" Value="public int GetNextSpellingErrorCharacterIndex (int charIndex, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNextSpellingErrorCharacterIndex(int32 charIndex, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextSpellingErrorCharacterIndex (charIndex As Integer, direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNextSpellingErrorCharacterIndex(int charIndex, System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="edae8-174">以零起始的字元索引，這個索引表示要搜尋下一個拼字錯誤的起始位置。</span><span class="sxs-lookup"><span data-stu-id="edae8-174">The zero-based character index indicating a position from which to search for the next spelling error.</span></span></param>
        <param name="direction"><span data-ttu-id="edae8-175">其中一個 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，這個值指定要以哪一個方向，從所指定的 <c>charIndex</c> 開始搜尋下一個拼字錯誤。</span><span class="sxs-lookup"><span data-stu-id="edae8-175">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the direction in which to search for the next spelling error, starting at the specified <c>charIndex</c>.</span></span></param>
        <summary><span data-ttu-id="edae8-176">針對文字方塊內容中的下一個拼字錯誤，傳回開頭字元索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-176">Returns the beginning character index for the next spelling error in the contents of the text box.</span></span></summary>
        <returns><span data-ttu-id="edae8-177">在文字方塊的內容中，下一個拼字錯誤開頭的字元索引。如果沒有下一個拼字錯誤存在，則為 –1。</span><span class="sxs-lookup"><span data-stu-id="edae8-177">The character index for the beginning of the next spelling error in the contents of the text box, or –1 if no next spelling error exists.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRectFromCharacterIndex">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="edae8-178">傳回位於所指定索引之字元邊緣的周框。</span><span class="sxs-lookup"><span data-stu-id="edae8-178">Returns the rectangle for an edge of the character at the specified index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRectFromCharacterIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRectFromCharacterIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRectFromCharacterIndex(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectFromCharacterIndex (charIndex As Integer) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRectFromCharacterIndex(int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="edae8-179">字元的以零起始的字元索引，要為此字元擷取周框。</span><span class="sxs-lookup"><span data-stu-id="edae8-179">The zero-based character index of the character for which to retrieve the rectangle.</span></span></param>
        <summary><span data-ttu-id="edae8-180">傳回位於所指定索引之字元前端邊緣的周框。</span><span class="sxs-lookup"><span data-stu-id="edae8-180">Returns the rectangle for the leading edge of the character at the specified index.</span></span></summary>
        <returns><span data-ttu-id="edae8-181">位於所指定字元索引之字元前端邊緣的周框。如果無法判斷周框，則為 <see cref="P:System.Windows.Rect.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="edae8-181">A rectangle for the leading edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-182">因為這個方法會傳回代表該字元的邊緣的矩形的矩形的寬度為 0。</span><span class="sxs-lookup"><span data-stu-id="edae8-182">Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRectFromCharacterIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRectFromCharacterIndex (int charIndex, bool trailingEdge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRectFromCharacterIndex(int32 charIndex, bool trailingEdge) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectFromCharacterIndex (charIndex As Integer, trailingEdge As Boolean) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRectFromCharacterIndex(int charIndex, bool trailingEdge);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="trailingEdge" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="edae8-183">字元的以零起始的字元索引，要為此字元擷取周框。</span><span class="sxs-lookup"><span data-stu-id="edae8-183">The zero-based character index of the character for which to retrieve the rectangle.</span></span></param>
        <param name="trailingEdge">
          <span data-ttu-id="edae8-184"><see langword="true" /> 表示取得字元的尾端邊緣，<see langword="false" /> 表示取得字元的前端邊緣。</span><span class="sxs-lookup"><span data-stu-id="edae8-184"><see langword="true" /> to get the trailing edge of the character; <see langword="false" /> to get the leading edge of the character.</span></span></param>
        <summary><span data-ttu-id="edae8-185">傳回位於所指定索引之字元前端或尾端邊緣的周框。</span><span class="sxs-lookup"><span data-stu-id="edae8-185">Returns the rectangle for the leading or trailing edge of the character at the specified index.</span></span></summary>
        <returns><span data-ttu-id="edae8-186">位於所指定字元索引之字元邊緣的周框，如果無法判斷周框，則為 <see cref="P:System.Windows.Rect.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="edae8-186">A rectangle for an edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-187">因為這個方法會傳回代表該字元的邊緣的矩形的矩形的寬度為 0。</span><span class="sxs-lookup"><span data-stu-id="edae8-187">Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="edae8-188"><paramref name="charIndex" /> 為負值或大於內容的長度。</span><span class="sxs-lookup"><span data-stu-id="edae8-188"><paramref name="charIndex" /> is negative or is greater than the length of the content.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellingError GetSpellingError (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Controls.SpellingError GetSpellingError(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingError (charIndex As Integer) As SpellingError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Controls::SpellingError ^ GetSpellingError(int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellingError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="edae8-189">內容中某個位置之以零為起始的字元索引，用以檢查拼字錯誤。</span><span class="sxs-lookup"><span data-stu-id="edae8-189">The zero-based character index of a position in content to examine for a spelling error.</span></span></param>
        <summary><span data-ttu-id="edae8-190">傳回 <see cref="T:System.Windows.Controls.SpellingError" /> 物件，這個物件關聯於指定之字元索引上的任何拼字錯誤。</span><span class="sxs-lookup"><span data-stu-id="edae8-190">Returns a <see cref="T:System.Windows.Controls.SpellingError" /> object associated with any spelling error at the specified character index.</span></span></summary>
        <returns><span data-ttu-id="edae8-191"><see cref="T:System.Windows.Controls.SpellingError" /> 物件，其中包含在 <paramref name="charIndex" /> 表示之字元上找到的拼字錯誤詳細資訊，如果指定的字元上沒有拼字錯誤存在，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="edae8-191">A <see cref="T:System.Windows.Controls.SpellingError" /> object containing the details of the spelling error found at the character indicated by <paramref name="charIndex" />, or <see langword="null" /> if no spelling error exists at the specified character.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorLength">
      <MemberSignature Language="C#" Value="public int GetSpellingErrorLength (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetSpellingErrorLength(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorLength (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetSpellingErrorLength(int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="edae8-192">內容中某個位置之以零為起始的字元索引，用以檢查拼字錯誤。</span><span class="sxs-lookup"><span data-stu-id="edae8-192">The zero-based character index of a position in content to examine for a spelling error.</span></span></param>
        <summary><span data-ttu-id="edae8-193">傳回包含所指定字元之任何拼字錯誤的長度。</span><span class="sxs-lookup"><span data-stu-id="edae8-193">Returns the length of any spelling error that includes the specified character.</span></span></summary>
        <returns><span data-ttu-id="edae8-194">包含 charIndex 指定字元之任何拼字錯誤的長度，如果指定的字元不屬於拼字錯誤，則為 0。</span><span class="sxs-lookup"><span data-stu-id="edae8-194">The length of any spelling error that includes the character specified by charIndex, or 0 if the specified character is not part of a spelling error.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorStart">
      <MemberSignature Language="C#" Value="public int GetSpellingErrorStart (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetSpellingErrorStart(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorStart (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetSpellingErrorStart(int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="edae8-195">內容中某個位置之以零為起始的字元索引，用以檢查拼字錯誤。</span><span class="sxs-lookup"><span data-stu-id="edae8-195">The zero-based character index of a position in content to examine for a spelling error.</span></span></param>
        <summary><span data-ttu-id="edae8-196">針對包含指定字元的任何拼字錯誤，傳回開頭字元索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-196">Returns the beginning character index for any spelling error that includes the specified character.</span></span></summary>
        <returns><span data-ttu-id="edae8-197">包含 <paramref name="charIndex" /> 指定字元之任何拼字錯誤的開頭字元索引，如果指定的字元不屬於拼字錯誤，則為 –1。</span><span class="sxs-lookup"><span data-stu-id="edae8-197">The beginning character index for any spelling error that includes the character specified by <paramref name="charIndex" />, or –1 if the specified character is not part of a spelling error.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineCount">
      <MemberSignature Language="C#" Value="public int LineCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.LineCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-198">取得在文字方塊中的總行數。</span><span class="sxs-lookup"><span data-stu-id="edae8-198">Gets the total number of lines in the text box.</span></span></summary>
        <value><span data-ttu-id="edae8-199">在文字方塊中的總行數，或如果沒有配置資訊，則為 -1。</span><span class="sxs-lookup"><span data-stu-id="edae8-199">The total number of lines in the text box, or –1 if layout information is not available.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-200">如果已啟用文字換行，變更文字方塊的寬度可能會變更此值。</span><span class="sxs-lookup"><span data-stu-id="edae8-200">If text wrapping is enabled, changing the width of the text box may change this value.</span></span>  
  
 <span data-ttu-id="edae8-201">傳回的值是在文字方塊中，不論有多少目前可見行的總數。</span><span class="sxs-lookup"><span data-stu-id="edae8-201">The value returned is the total number of lines in the text box, regardless of how many are currently visible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MinLines" />
        <altmember cref="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-202">取得 <see cref="T:System.Windows.Controls.TextBox" /> 之邏輯子項目的列舉程式。</span><span class="sxs-lookup"><span data-stu-id="edae8-202">Gets an enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</span></span></summary>
        <value><span data-ttu-id="edae8-203"><see cref="T:System.Windows.Controls.TextBox" /> 之邏輯子項目的列舉程式。</span><span class="sxs-lookup"><span data-stu-id="edae8-203">An enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-204"><xref:System.Windows.Controls.TextBox.LogicalChildren%2A>屬性會傳回包含集合的列舉值<xref:System.String>等於<xref:System.Windows.Controls.TextBox.Text%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="edae8-204">The <xref:System.Windows.Controls.TextBox.LogicalChildren%2A> property returns an enumerator for a collection that contains a <xref:System.String> that is equal to the <xref:System.Windows.Controls.TextBox.Text%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-205">取得或設定可手動輸入至文字方塊中的最大字元數。</span><span class="sxs-lookup"><span data-stu-id="edae8-205">Gets or sets the maximum number of characters that can be manually entered into the text box.</span></span></summary>
        <value><span data-ttu-id="edae8-206">可手動輸入至文字方塊中的最大字元數。</span><span class="sxs-lookup"><span data-stu-id="edae8-206">The maximum number of characters that can be manually entered into the text box.</span></span> <span data-ttu-id="edae8-207">預設值為 0，表示沒有限制。</span><span class="sxs-lookup"><span data-stu-id="edae8-207">The default is 0, which indicates no limit.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-208">您可以使用這個屬性的值，例如郵遞區號和電話號碼輸入控制項中文字的長度限制。</span><span class="sxs-lookup"><span data-stu-id="edae8-208">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers.</span></span> <span data-ttu-id="edae8-209">您也可以使用這個屬性的資料是儲存在資料庫中，輸入控制項的文字未超出資料庫中的對應欄位的最大長度時所輸入的文字長度限制。</span><span class="sxs-lookup"><span data-stu-id="edae8-209">You can also use this property to restrict the length of text entered when the data is to be stored in a database so that the text entered into the control does not exceed the maximum length of the corresponding field in the database.</span></span>  
  
 <span data-ttu-id="edae8-210">這個屬性不會影響以程式設計方式加入的字元。</span><span class="sxs-lookup"><span data-stu-id="edae8-210">This property does not affect characters that are added programmatically.</span></span>  
  
 <span data-ttu-id="edae8-211">當這個屬性設定為 0 時，您可以輸入控制項中文字的最大長度是只受到可用記憶體。</span><span class="sxs-lookup"><span data-stu-id="edae8-211">When this property is set to 0, the maximum length of the text that can be entered in the control is limited only by available memory.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLength"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="edae8-212">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="edae8-212">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="edae8-213">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="edae8-213">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MaxLengthProperty>|  
|<span data-ttu-id="edae8-214">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="edae8-214">Metadata properties set to `true`</span></span>|<span data-ttu-id="edae8-215">無</span><span class="sxs-lookup"><span data-stu-id="edae8-215">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="edae8-216">下列範例示範如何建立<xref:System.Windows.Controls.TextBox>與<xref:System.Windows.Controls.TextBox.MaxLength%2A>500 個字元。</span><span class="sxs-lookup"><span data-stu-id="edae8-216">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MaxLength%2A> of 500 characters.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
      </Docs>
    </Member>
    <Member MemberName="MaxLengthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLengthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLengthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MaxLengthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLengthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLengthProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-217">識別 <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="edae8-217">Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLines">
      <MemberSignature Language="C#" Value="public int MaxLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MaxLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLines { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(2147483647)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-218">取得或設定可看見的最大行數。</span><span class="sxs-lookup"><span data-stu-id="edae8-218">Gets or sets the maximum number of visible lines.</span></span></summary>
        <value><span data-ttu-id="edae8-219">可看見的最大行數。</span><span class="sxs-lookup"><span data-stu-id="edae8-219">The maximum number of visible lines.</span></span> <span data-ttu-id="edae8-220">預設值為 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="edae8-220">The default is <see cref="F:System.Int32.MaxValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-221">取得這個屬性傳回的目前值<xref:System.Windows.Controls.TextBox.MaxLines%2A>。</span><span class="sxs-lookup"><span data-stu-id="edae8-221">Getting this property returns the current value of <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span></span> <span data-ttu-id="edae8-222">設定這個屬性會導致文字方塊中，若要調整大小，如果顯示的行數超過所指定的限制<xref:System.Windows.Controls.TextBox.MaxLines%2A>。</span><span class="sxs-lookup"><span data-stu-id="edae8-222">Setting this property causes the text box to resize if the number of visible lines exceeds the limit specified by <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span></span>  
  
 <span data-ttu-id="edae8-223">此屬性只適用於顯示的行，而且不會限制的實際行數。</span><span class="sxs-lookup"><span data-stu-id="edae8-223">This property applies only to visible lines, and does not constrain the actual number of lines.</span></span> <span data-ttu-id="edae8-224">依據其組態中，文字方塊可能包含其他不可見的行捲動可存取的。</span><span class="sxs-lookup"><span data-stu-id="edae8-224">Depending on its configuration, a text box may contain additional non-visible lines that are accessible by scrolling.</span></span>  
  
 <span data-ttu-id="edae8-225">如果<xref:System.Windows.FrameworkElement.Height%2A>上明確地設定屬性<xref:System.Windows.Controls.TextBox>、<xref:System.Windows.Controls.TextBox.MaxLines%2A>和<xref:System.Windows.Controls.TextBox.MinLines%2A>屬性值會被忽略。</span><span class="sxs-lookup"><span data-stu-id="edae8-225">If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLines"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="edae8-226">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="edae8-226">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="edae8-227">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="edae8-227">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MaxLinesProperty>|  
|<span data-ttu-id="edae8-228">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="edae8-228">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="edae8-229">下列範例示範如何建立<xref:System.Windows.Controls.TextBox>與<xref:System.Windows.Controls.TextBox.MaxLines%2A>5 的值。</span><span class="sxs-lookup"><span data-stu-id="edae8-229">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MaxLines%2A> value of 5.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="edae8-230"><see cref="P:System.Windows.Controls.TextBox.MaxLines" /> 小於 <see cref="P:System.Windows.Controls.TextBox.MinLines" />。</span><span class="sxs-lookup"><span data-stu-id="edae8-230"><see cref="P:System.Windows.Controls.TextBox.MaxLines" /> is less than <see cref="P:System.Windows.Controls.TextBox.MinLines" />.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.TextBox.MinLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="MaxLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MaxLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLinesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-231">識別 <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="edae8-231">Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="edae8-232">用以指定文字方塊大小之條件約束的 <see cref="T:System.Windows.Size" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="edae8-232">A <see cref="T:System.Windows.Size" /> structure that specifies the constraints on the size of the text box.</span></span></param>
        <summary><span data-ttu-id="edae8-233">將文字方塊縮放為其內容大小。</span><span class="sxs-lookup"><span data-stu-id="edae8-233">Sizes the text box to its content.</span></span></summary>
        <returns><span data-ttu-id="edae8-234">表示文字方塊之新大小的 <see cref="T:System.Windows.Size" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="edae8-234">A <see cref="T:System.Windows.Size" /> structure indicating the new size of the text box.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-235">覆寫這個方法以實作自訂調整大小行為。</span><span class="sxs-lookup"><span data-stu-id="edae8-235">Override this method to implement custom sizing behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLines">
      <MemberSignature Language="C#" Value="public int MinLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MinLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLines { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-236">取得或設定可看見的最小行數。</span><span class="sxs-lookup"><span data-stu-id="edae8-236">Gets or sets the minimum number of visible lines.</span></span></summary>
        <value><span data-ttu-id="edae8-237">可看見的最小行數。</span><span class="sxs-lookup"><span data-stu-id="edae8-237">The minimum number of visible lines.</span></span> <span data-ttu-id="edae8-238">預設為 1。</span><span class="sxs-lookup"><span data-stu-id="edae8-238">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-239">取得這個屬性傳回的目前值<xref:System.Windows.Controls.TextBox.MinLines%2A>。</span><span class="sxs-lookup"><span data-stu-id="edae8-239">Getting this property returns the current value of <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span></span> <span data-ttu-id="edae8-240">設定這個屬性會導致調整大小可見行的數目是否小於指定值的文字方塊<xref:System.Windows.Controls.TextBox.MinLines%2A>。</span><span class="sxs-lookup"><span data-stu-id="edae8-240">Setting this property causes the text box to resize if the number of visible lines is less than value specified by <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span></span>  
  
 <span data-ttu-id="edae8-241">如果<xref:System.Windows.FrameworkElement.Height%2A>上明確地設定屬性<xref:System.Windows.Controls.TextBox>、<xref:System.Windows.Controls.TextBox.MaxLines%2A>和<xref:System.Windows.Controls.TextBox.MinLines%2A>屬性值會被忽略。</span><span class="sxs-lookup"><span data-stu-id="edae8-241">If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.</span></span>  
  
<a name="dependencyPropertyInfo_MinLines"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="edae8-242">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="edae8-242">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="edae8-243">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="edae8-243">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MinLinesProperty>|  
|<span data-ttu-id="edae8-244">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="edae8-244">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="edae8-245">下列範例示範如何建立<xref:System.Windows.Controls.TextBox>與<xref:System.Windows.Controls.TextBox.MinLines%2A>值為 1。</span><span class="sxs-lookup"><span data-stu-id="edae8-245">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MinLines%2A> value of 1.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="edae8-246"><see cref="P:System.Windows.Controls.TextBox.MinLines" /> 大於 <see cref="P:System.Windows.Controls.TextBox.MaxLines" />。</span><span class="sxs-lookup"><span data-stu-id="edae8-246"><see cref="P:System.Windows.Controls.TextBox.MinLines" /> is greater than <see cref="P:System.Windows.Controls.TextBox.MaxLines" />.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="MinLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MinLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MinLinesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-247">識別 <see cref="P:System.Windows.Controls.TextBox.MinLines" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="edae8-247">Identifies the <see cref="P:System.Windows.Controls.TextBox.MinLines" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="edae8-248">建立並傳回文字方塊的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="edae8-248">Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</span></span></summary>
        <returns><span data-ttu-id="edae8-249">文字方塊的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="edae8-249">An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-250">這個方法覆寫 <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="edae8-250">This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="edae8-251">相關聯事件的引數。</span><span class="sxs-lookup"><span data-stu-id="edae8-251">Arguments for the associated event.</span></span></param>
        <summary><span data-ttu-id="edae8-252">當項目有一或多個相依性屬性變更了有效值時呼叫。</span><span class="sxs-lookup"><span data-stu-id="edae8-252">Called when one or more of the dependency properties that exist on the element have had their effective values changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-253">這個方法覆寫 <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="edae8-253">This method overrides <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToLine">
      <MemberSignature Language="C#" Value="public void ScrollToLine (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToLine(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToLine (lineIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToLine(int lineIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="edae8-254">要捲動至檢視中之行的以零起始的行索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-254">The zero-based line index of the line to scroll into view.</span></span></param>
        <summary><span data-ttu-id="edae8-255">將指定行索引上的行捲動至檢視中。</span><span class="sxs-lookup"><span data-stu-id="edae8-255">Scrolls the line at the specified line index into view.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-256">這個方法會導致文字方塊中，捲動至指定的行帶入完整檢視所需要的最小數量的。</span><span class="sxs-lookup"><span data-stu-id="edae8-256">This method causes the text box to scroll by the minimum amount necessary to bring the specified line into full view.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="edae8-257">在選取範圍中，第一個字元的以零起始的字元索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-257">The zero-based character index of the first character in the selection.</span></span></param>
        <param name="length"><span data-ttu-id="edae8-258">選取範圍的長度，以字元為單位。</span><span class="sxs-lookup"><span data-stu-id="edae8-258">The length of the selection, in characters.</span></span></param>
        <summary><span data-ttu-id="edae8-259">在文字方塊中選取文字範圍。</span><span class="sxs-lookup"><span data-stu-id="edae8-259">Selects a range of text in the text box.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="edae8-260"><paramref name="start" /> 或 <paramref name="length" /> 為負。</span><span class="sxs-lookup"><span data-stu-id="edae8-260"><paramref name="start" /> or <paramref name="length" /> is negative.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-261">取得或設定文字方塊中目前選取項目的內容。</span><span class="sxs-lookup"><span data-stu-id="edae8-261">Gets or sets the content of the current selection in the text box.</span></span></summary>
        <value><span data-ttu-id="edae8-262">文字方塊中目前選取的文字。</span><span class="sxs-lookup"><span data-stu-id="edae8-262">The currently selected text in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-263">取得這個屬性會傳回目前所選取文字的字串複本。</span><span class="sxs-lookup"><span data-stu-id="edae8-263">Getting this property returns a string copy of the currently selected text.</span></span> <span data-ttu-id="edae8-264">設定這個屬性目前的選取項目取代指定的字串。</span><span class="sxs-lookup"><span data-stu-id="edae8-264">Setting this property replaces the current selection with the specified string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-265">取得或設定值，這個值表示文字方塊中目前選取範圍的字元數。</span><span class="sxs-lookup"><span data-stu-id="edae8-265">Gets or sets a value indicating the number of characters in the current selection in the text box.</span></span></summary>
        <value><span data-ttu-id="edae8-266">文字方塊中目前選取範圍的字元數。</span><span class="sxs-lookup"><span data-stu-id="edae8-266">The number of characters in the current selection in the text box.</span></span> <span data-ttu-id="edae8-267">預設值為 0。</span><span class="sxs-lookup"><span data-stu-id="edae8-267">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-268">取得這個屬性傳回目前的選取範圍中的字元數。</span><span class="sxs-lookup"><span data-stu-id="edae8-268">Getting this property returns the number of characters in the current selection.</span></span> <span data-ttu-id="edae8-269">設定這個屬性調整為指定的值，保持固定的選取範圍開頭目前的選取範圍的長度。</span><span class="sxs-lookup"><span data-stu-id="edae8-269">Setting this property adjusts the length of the current selection to the specified value, keeping the beginning of the selection fixed.</span></span>  
  
 <span data-ttu-id="edae8-270">一般情況下，當指定的選取範圍的長度會導致選取範圍結束無效的位置 （例如之間歸位字元與新行字元，或在標記） 中的選取項目長度自動調整，使產生的選取範圍開始並在有效的位置結束。</span><span class="sxs-lookup"><span data-stu-id="edae8-270">In general, when the specified selection length causes the selection to end in an invalid position (for example, between a carriage return and a new-line character, or inside a tag), the selection length automatically adjusts so that the resulting selection starts and ends in valid positions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="edae8-271"><see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> 設為負數值。</span><span class="sxs-lookup"><span data-stu-id="edae8-271"><see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> is set to a negative value.</span></span></exception>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-272">針對目前選取範圍的開頭，取得或設定字元索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-272">Gets or sets a character index for the beginning of the current selection.</span></span></summary>
        <value><span data-ttu-id="edae8-273">目前選取範圍開頭的字元索引。</span><span class="sxs-lookup"><span data-stu-id="edae8-273">The character index for the beginning of the current selection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-274">在其中指定的選取範圍的長度會導致選取範圍結束之間的歸位字元與新行字元的情況下，選取項目長度會自動增加 1，讓產生的選取範圍跨越整個行結尾標記。</span><span class="sxs-lookup"><span data-stu-id="edae8-274">In cases where the specified selection length would cause the selection to end between a carriage return and a new-line character, the selection length is automatically increased by 1 so that the resulting selection spans the entire end-of-line marker.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="edae8-275"><see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> 設為負數值。</span><span class="sxs-lookup"><span data-stu-id="edae8-275"><see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> is set to a negative value.</span></span></exception>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeText">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeText (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeText(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeText (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeText(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="edae8-276">這個物件的序列化服務管理員物件。</span><span class="sxs-lookup"><span data-stu-id="edae8-276">A serialization service manager object for this object.</span></span></param>
        <summary><span data-ttu-id="edae8-277">傳回值，這個值表示 <see cref="P:System.Windows.Controls.TextBox.Text" /> 屬性的有效值是否應該在 <see cref="T:System.Windows.Controls.TextBox" /> 物件的序列化期間予以序列化。</span><span class="sxs-lookup"><span data-stu-id="edae8-277">Returns a value that indicates whether the effective value of the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized during serialization of the <see cref="T:System.Windows.Controls.TextBox" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="edae8-278">如果 <see cref="P:System.Windows.Controls.TextBox.Text" /> 屬性應進行序列化則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="edae8-278"><see langword="true" /> if the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="edae8-279"><paramref name="manager" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="edae8-279"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="edae8-280">要加入做為子系的物件。</span><span class="sxs-lookup"><span data-stu-id="edae8-280">An object to add as a child.</span></span></param>
        <summary><span data-ttu-id="edae8-281">在所有情況下都擲回例外狀況 (Exception)。</span><span class="sxs-lookup"><span data-stu-id="edae8-281">Throws an exception in all cases.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-282"><xref:System.Windows.Controls.TextBox> 接受文字形式的<xref:System.Windows.Markup.IAddChild>介面。</span><span class="sxs-lookup"><span data-stu-id="edae8-282"><xref:System.Windows.Controls.TextBox> accepts only text through the <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="edae8-283"><paramref name="value" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="edae8-283"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="edae8-284">在其他所有情況下。</span><span class="sxs-lookup"><span data-stu-id="edae8-284">In all other cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="edae8-285">要加入至物件的字串。</span><span class="sxs-lookup"><span data-stu-id="edae8-285">A string to add to the object.</span></span></param>
        <summary><span data-ttu-id="edae8-286">將節點的文字內容加入物件中。</span><span class="sxs-lookup"><span data-stu-id="edae8-286">Adds the text content of a node to the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-287">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="edae8-287">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="edae8-288">只有在 <xref:System.Windows.Controls.TextBox> 執行個體轉換成 <xref:System.Windows.Markup.IAddChild> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="edae8-288">It can be used only when the <xref:System.Windows.Controls.TextBox> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-289">取得或設定文字方塊的文字內容。</span><span class="sxs-lookup"><span data-stu-id="edae8-289">Gets or sets the text contents of the text box.</span></span></summary>
        <value><span data-ttu-id="edae8-290">包含文字方塊之文字內容的字串。</span><span class="sxs-lookup"><span data-stu-id="edae8-290">A string containing the text contents of the text box.</span></span> <span data-ttu-id="edae8-291">預設為空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="edae8-291">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-292">取得這個屬性傳回字串複本的文字方塊中的內容。</span><span class="sxs-lookup"><span data-stu-id="edae8-292">Getting this property returns a string copy of the contents of the text box.</span></span> <span data-ttu-id="edae8-293">將這個屬性設定文字方塊的內容取代指定的字串。</span><span class="sxs-lookup"><span data-stu-id="edae8-293">Setting this property replaces the contents of the text box with the specified string.</span></span>  
  
 <span data-ttu-id="edae8-294">這個屬性不支援動畫。</span><span class="sxs-lookup"><span data-stu-id="edae8-294">This property does not support animation.</span></span>  
  
 <span data-ttu-id="edae8-295">資料繫結案例中使用時，這個屬性會使用預設更新行為的<xref:System.Windows.Data.UpdateSourceTrigger.LostFocus?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="edae8-295">When used in data-binding scenarios, this property uses the default update behavior of <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlPropertyElementUsage_Text"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="edae8-296">XAML 屬性項目用法</span><span class="sxs-lookup"><span data-stu-id="edae8-296">XAML Property Element Usage</span></span>  
  
```  
<object>  
  String  
</object>  
```  
  
<a name="dependencyPropertyInfo_Text"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="edae8-297">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="edae8-297">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="edae8-298">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="edae8-298">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextProperty>|  
|<span data-ttu-id="edae8-299">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="edae8-299">Metadata properties set to `true`</span></span>|<span data-ttu-id="edae8-300"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span><span class="sxs-lookup"><span data-stu-id="edae8-300"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.CharacterCasing" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextAlignment" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-301">取得或設定文字方塊內容的水平對齊。</span><span class="sxs-lookup"><span data-stu-id="edae8-301">Gets or sets the horizontal alignment of the contents of the text box.</span></span></summary>
        <value><span data-ttu-id="edae8-302">其中一個 <see cref="T:System.Windows.TextAlignment" /> 值，這個值指定文字方塊內容的水平對齊。</span><span class="sxs-lookup"><span data-stu-id="edae8-302">One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the horizontal alignment of the contents of the text box.</span></span> <span data-ttu-id="edae8-303">預設值為 <see cref="F:System.Windows.TextAlignment.Left" />。</span><span class="sxs-lookup"><span data-stu-id="edae8-303">The default is <see cref="F:System.Windows.TextAlignment.Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-304">取得這個屬性會傳回目前的對齊方式。</span><span class="sxs-lookup"><span data-stu-id="edae8-304">Getting this property returns the current alignment.</span></span> <span data-ttu-id="edae8-305">設定這個屬性會調整，以反映指定的對齊文字方塊的內容。</span><span class="sxs-lookup"><span data-stu-id="edae8-305">Setting this property adjusts the contents of the text box to reflect the specified alignment.</span></span>  
  
 <span data-ttu-id="edae8-306">這個屬性的優先順序高於<xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="edae8-306">This property has a higher precedence than the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="edae8-307">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="edae8-307">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="edae8-308">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="edae8-308">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextAlignmentProperty>|  
|<span data-ttu-id="edae8-309">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="edae8-309">Metadata properties set to `true`</span></span>|<span data-ttu-id="edae8-310"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="edae8-310"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="edae8-311">下列範例示範如何建立<xref:System.Windows.Controls.TextBox>與<xref:System.Windows.Controls.TextBox.TextAlignment%2A>的<xref:System.Windows.TextAlignment.Center?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="edae8-311">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.TextAlignment%2A> of <xref:System.Windows.TextAlignment.Center?displayProperty=nameWithType>.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.Text" />
        <altmember cref="P:System.Windows.Controls.TextBox.CharacterCasing" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-312">識別 <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="edae8-312">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorations">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationCollection TextDecorations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TextDecorationCollection TextDecorations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextDecorations" />
      <MemberSignature Language="VB.NET" Value="Public Property TextDecorations As TextDecorationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecorationCollection ^ TextDecorations { System::Windows::TextDecorationCollection ^ get(); void set(System::Windows::TextDecorationCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-313">取得要套用至文字方塊的文字裝飾。</span><span class="sxs-lookup"><span data-stu-id="edae8-313">Gets the text decorations to apply to the text box.</span></span></summary>
        <value><span data-ttu-id="edae8-314">包含要套用至文字方塊之文字裝飾的 <see cref="T:System.Windows.TextDecorationCollection" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="edae8-314">A <see cref="T:System.Windows.TextDecorationCollection" /> collection that contains text decorations to apply to the text box.</span></span> <span data-ttu-id="edae8-315">預設值為 <see langword="null" /> (不套用文字裝飾)。</span><span class="sxs-lookup"><span data-stu-id="edae8-315">The default is <see langword="null" /> (no text decorations applied).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-316">A<xref:System.Windows.TextDecoration>物件是視覺裝飾，您可以加入文字。</span><span class="sxs-lookup"><span data-stu-id="edae8-316">A <xref:System.Windows.TextDecoration> object is a visual ornamentation you can add to text.</span></span> <span data-ttu-id="edae8-317">文字裝飾的四種類型： 底線、 基準、 刪除線和頂線。</span><span class="sxs-lookup"><span data-stu-id="edae8-317">There are four types of text decorations: underline, baseline, strikethrough, and overline.</span></span> <span data-ttu-id="edae8-318">如需文字裝飾的詳細資訊，請參閱[How to： 建立文字裝飾](~/docs/framework/wpf/advanced/how-to-create-a-text-decoration.md)。</span><span class="sxs-lookup"><span data-stu-id="edae8-318">For more information about text decorations, see [How to: Create a Text Decoration](~/docs/framework/wpf/advanced/how-to-create-a-text-decoration.md).</span></span>  
  
<a name="dependencyPropertyInfo_TextDecorations"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="edae8-319">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="edae8-319">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="edae8-320">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="edae8-320">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextDecorationsProperty>|  
|<span data-ttu-id="edae8-321">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="edae8-321">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="edae8-322">下列範例示範如何設定<xref:System.Windows.Documents.Inline.TextDecorations%2A>屬性，使用<xref:System.Windows.Documents.Run>當做範例項目。</span><span class="sxs-lookup"><span data-stu-id="edae8-322">The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> attribute, using <xref:System.Windows.Documents.Run> as the example element.</span></span>  
  
 [!code-xaml[InlineSnippets#_Inline_TextDecXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml#_inline_textdecxaml)]  
  
 <span data-ttu-id="edae8-323">下圖顯示此範例的轉譯方式。</span><span class="sxs-lookup"><span data-stu-id="edae8-323">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="edae8-324">![螢幕擷取畫面： 套用預設刪除線效果的文字](~/add/media/inline-textdec-strike.png "螢幕擷取畫面： 套用預設刪除線效果的文字")</span><span class="sxs-lookup"><span data-stu-id="edae8-324">![Screenshot: Text with default strikethrough effect](~/add/media/inline-textdec-strike.png "Screenshot: Text with default strikethrough effect")</span></span>  
  
 <span data-ttu-id="edae8-325">下圖顯示如何<xref:System.Windows.TextDecorations.OverLine%2A>， <xref:System.Windows.TextDecorations.Baseline%2A>，和<xref:System.Windows.TextDecorations.Underline%2A>分別裝飾呈現。</span><span class="sxs-lookup"><span data-stu-id="edae8-325">The following figures show how the <xref:System.Windows.TextDecorations.OverLine%2A>, <xref:System.Windows.TextDecorations.Baseline%2A>, and <xref:System.Windows.TextDecorations.Underline%2A> decorations render, respectively.</span></span>  
  
 <span data-ttu-id="edae8-326">![螢幕擷取畫面： 頂線 TextDecorator](~/add/media/inline-textdec-over.png "螢幕擷取畫面： 頂線 TextDecorator")</span><span class="sxs-lookup"><span data-stu-id="edae8-326">![Screenshot: Overline TextDecorator](~/add/media/inline-textdec-over.png "Screenshot: Overline TextDecorator")</span></span>  
  
 <span data-ttu-id="edae8-327">![螢幕擷取畫面： 預設文字基準影響](~/add/media/inline-textdec-base.png "螢幕擷取畫面： 預設基準上文字的效果")</span><span class="sxs-lookup"><span data-stu-id="edae8-327">![Screenshot: Default baseline effect on text](~/add/media/inline-textdec-base.png "Screenshot: Default baseline effect on text")</span></span>  
  
 <span data-ttu-id="edae8-328">![螢幕擷取畫面： 套用預設底線效果的文字](~/add/media/inline-textdec-under.png "螢幕擷取畫面： 套用預設底線效果的文字")</span><span class="sxs-lookup"><span data-stu-id="edae8-328">![Screenshot: Text with default underline effect](~/add/media/inline-textdec-under.png "Screenshot: Text with default underline effect")</span></span>  
  
 <span data-ttu-id="edae8-329">下列範例示範如何設定<xref:System.Windows.Documents.Inline.TextDecorations%2A>屬性以程式設計的方式。</span><span class="sxs-lookup"><span data-stu-id="edae8-329">The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> property programmatically.</span></span>  
  
 [!code-csharp[InlineSnippets#_Inline_TextDec](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml.cs#_inline_textdec)]
 [!code-vb[InlineSnippets#_Inline_TextDec](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InlineSnippets/visualbasic/window1.xaml.vb#_inline_textdec)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorationsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextDecorationsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextDecorationsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextDecorationsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextDecorationsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextDecorationsProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-330">識別 <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="edae8-330">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-331"><xref:System.Windows.Controls.TextBox.TextDecorations%2A> 相依性屬性的識別項。</span><span class="sxs-lookup"><span data-stu-id="edae8-331">The identifier for the <xref:System.Windows.Controls.TextBox.TextDecorations%2A> dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-332">識別 <see cref="P:System.Windows.Controls.TextBox.Text" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="edae8-332">Identifies the <see cref="P:System.Windows.Controls.TextBox.Text" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrapping">
      <MemberSignature Language="C#" Value="public System.Windows.TextWrapping TextWrapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextWrapping TextWrapping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextWrapping" />
      <MemberSignature Language="VB.NET" Value="Public Property TextWrapping As TextWrapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextWrapping TextWrapping { System::Windows::TextWrapping get(); void set(System::Windows::TextWrapping value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextWrapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-333">取得或設定文字方塊如何包圍文字。</span><span class="sxs-lookup"><span data-stu-id="edae8-333">Gets or sets how the text box should wrap text.</span></span></summary>
        <value><span data-ttu-id="edae8-334">其中一個 <see cref="T:System.Windows.TextWrapping" /> 值，這個值表示文字方塊用來將文字換行的方式。</span><span class="sxs-lookup"><span data-stu-id="edae8-334">One of the <see cref="T:System.Windows.TextWrapping" /> values that indicates how the text box should wrap text.</span></span> <span data-ttu-id="edae8-335">預設值為 <see cref="F:System.Windows.TextWrapping.NoWrap" />。</span><span class="sxs-lookup"><span data-stu-id="edae8-335">The default is <see cref="F:System.Windows.TextWrapping.NoWrap" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-336">設定<xref:System.Windows.Controls.TextBox.TextWrapping%2A>屬性<xref:System.Windows.TextWrapping.Wrap>原因輸入文字換行至新行時的邊緣<xref:System.Windows.Controls.TextBox>達到控制項時，自動展開的高度<xref:System.Windows.Controls.TextBox>出空間給新的一行，視需要加入的控制項。</span><span class="sxs-lookup"><span data-stu-id="edae8-336">Setting the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> attribute to <xref:System.Windows.TextWrapping.Wrap> causes entered text to wrap to a new line when the edge of the <xref:System.Windows.Controls.TextBox> control is reached, automatically expanding the height of the <xref:System.Windows.Controls.TextBox> control to include room for a new line, if necessary.</span></span>  
  
<a name="dependencyPropertyInfo_TextWrapping"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="edae8-337">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="edae8-337">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="edae8-338">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="edae8-338">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextWrappingProperty>|  
|<span data-ttu-id="edae8-339">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="edae8-339">Metadata properties set to `true`</span></span>|<span data-ttu-id="edae8-340"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span><span class="sxs-lookup"><span data-stu-id="edae8-340"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="edae8-341">下列範例會示範如何設定這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="edae8-341">The following example demonstrates how to set the value of this property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase12)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrappingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextWrappingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextWrappingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextWrappingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextWrappingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextWrappingProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-342">識別 <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="edae8-342">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-343"><xref:System.Windows.Controls.TextBox.TextWrapping%2A> 相依性屬性的識別項。</span><span class="sxs-lookup"><span data-stu-id="edae8-343">The identifier for the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Typography">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Typography Typography { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Typography Typography" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.Typography" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Typography As Typography" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Typography ^ Typography { System::Windows::Documents::Typography ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Typography</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edae8-344">針對文字方塊的文字內容，取得目前有效的印刷樣式變化。</span><span class="sxs-lookup"><span data-stu-id="edae8-344">Gets the currently effective typography variations for the text contents of the text box.</span></span></summary>
        <value><span data-ttu-id="edae8-345">指定目前有效印刷樣式變化的 <see cref="T:System.Windows.Documents.Typography" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="edae8-345">A <see cref="T:System.Windows.Documents.Typography" /> object that specifies the currently effective typography variations.</span></span> <span data-ttu-id="edae8-346">如需預設的印刷樣式值，請參閱 <see cref="T:System.Windows.Documents.Typography" />。</span><span class="sxs-lookup"><span data-stu-id="edae8-346">For a list of default typography values, see <see cref="T:System.Windows.Documents.Typography" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edae8-347"><xref:System.Windows.Documents.FlowDocument.Typography%2A>屬性只會套用於[!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)]字型。</span><span class="sxs-lookup"><span data-stu-id="edae8-347">The <xref:System.Windows.Documents.FlowDocument.Typography%2A> property is applicable only to [!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)] fonts.</span></span> <span data-ttu-id="edae8-348">印刷樣式變化的效果沒有上不支援 variant 的字型。</span><span class="sxs-lookup"><span data-stu-id="edae8-348">A typography variant has no effect on fonts that do not support the variant.</span></span> <span data-ttu-id="edae8-349">如需本主題的詳細資訊，請參閱[WPF 中的印刷樣式](~/docs/framework/wpf/advanced/typography-in-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="edae8-349">For more information about this topic, see [Typography in WPF](~/docs/framework/wpf/advanced/typography-in-wpf.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edae8-350">下列範例示範如何設定<xref:System.Windows.Documents.TextElement.Typography%2A>屬性，使用<xref:System.Windows.Documents.Paragraph>當做範例項目。</span><span class="sxs-lookup"><span data-stu-id="edae8-350">The following example shows how to set the <xref:System.Windows.Documents.TextElement.Typography%2A> attribute, using <xref:System.Windows.Documents.Paragraph> as the example element.</span></span>  
  
 [!code-xaml[TextElementSnippets#_TextElement_TypogXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/TextElementSnippets/CSharp/Window1.xaml#_textelement_typogxaml)]  
  
 <span data-ttu-id="edae8-351">下圖顯示此範例的轉譯方式。</span><span class="sxs-lookup"><span data-stu-id="edae8-351">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="edae8-352">![螢幕擷取畫面： 已變更印刷的文字](~/add/media/textelement-typog.png "螢幕擷取畫面： 已變更印刷的文字")</span><span class="sxs-lookup"><span data-stu-id="edae8-352">![Screenshot: Text with altered typography](~/add/media/textelement-typog.png "Screenshot: Text with altered typography")</span></span>  
  
 <span data-ttu-id="edae8-353">相反地，下圖顯示如何轉譯套用預設印刷樣式屬性的類似範例。</span><span class="sxs-lookup"><span data-stu-id="edae8-353">In contrast, the following figure shows how a similar example with default typographic properties renders.</span></span>  
  
 <span data-ttu-id="edae8-354">![螢幕擷取畫面： 已變更印刷的文字](~/add/media/textelement-typog-default.png "螢幕擷取畫面： 已變更印刷的文字")</span><span class="sxs-lookup"><span data-stu-id="edae8-354">![Screenshot: Text with altered typography](~/add/media/textelement-typog-default.png "Screenshot: Text with altered typography")</span></span>  
  
 <span data-ttu-id="edae8-355">下列範例示範如何設定<xref:System.Windows.Controls.TextBox.Typography%2A>屬性以程式設計的方式。</span><span class="sxs-lookup"><span data-stu-id="edae8-355">The following example shows how to set the <xref:System.Windows.Controls.TextBox.Typography%2A> property programmatically.</span></span>  
  
 [!code-csharp[TextElementSnippets#_TextElement_Typog](~/samples/snippets/csharp/VS_Snippets_Wpf/TextElementSnippets/CSharp/Window1.xaml.cs#_textelement_typog)]
 [!code-vb[TextElementSnippets#_TextElement_Typog](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextElementSnippets/visualbasic/window1.xaml.vb#_textelement_typog)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>