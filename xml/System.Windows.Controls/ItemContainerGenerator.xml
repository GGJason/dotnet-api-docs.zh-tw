<Type Name="ItemContainerGenerator" FullName="System.Windows.Controls.ItemContainerGenerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="60dd768124013571dddb33a853634e86ed7c8d33" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52210045" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ItemContainerGenerator : System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator, System.Windows.IWeakEventListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ItemContainerGenerator extends System.Object implements class System.Windows.Controls.Primitives.IItemContainerGenerator, class System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator, class System.Windows.IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ItemContainerGenerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ItemContainerGenerator&#xA;Implements IRecyclingItemContainerGenerator, IWeakEventListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class ItemContainerGenerator sealed : System::Windows::Controls::Primitives::IRecyclingItemContainerGenerator, System::Windows::IWeakEventListener" />
  <TypeSignature Language="F#" Value="type ItemContainerGenerator = class&#xA;    interface IRecyclingItemContainerGenerator&#xA;    interface IItemContainerGenerator&#xA;    interface IWeakEventListener" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Controls.Primitives.IItemContainerGenerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.IWeakEventListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>代替主機產生使用者介面 (UI)，例如 <see cref="T:System.Windows.Controls.ItemsControl" />。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ItemContainerGenerator> 實作<xref:System.Windows.Controls.Primitives.IItemContainerGenerator>，這是定義類型的介面，其中：  
  
-   這類維護多個項目控制項的資料檢視之間的關聯<xref:System.Windows.Controls.ItemsControl.ContainerFromElement%2A>和對應<xref:System.Windows.UIElement>項目。  
  
-   會產生<xref:System.Windows.UIElement>代表多個項目控制項的項目。  
  
 每個<xref:System.Windows.Controls.ItemsControl>類型具有對應的容器類型。 容器項目是包含資料中的項目工作項目集合的物件。 比方說，針對<xref:System.Windows.Controls.ListBox>，產生的容器<xref:System.Windows.Controls.ListBoxItem>控制項，如<xref:System.Windows.Controls.ComboBox>，它們是<xref:System.Windows.Controls.ComboBoxItem>控制項。  
  
 <xref:System.Windows.Controls.ItemsControl>會產生它的項目，透過<xref:System.Windows.Controls.Primitives.IItemContainerGenerator>介面。 <xref:System.Windows.Controls.ItemsControl.ItemContainerGenerator%2A>的屬性<xref:System.Windows.Controls.ItemsControl>別的<xref:System.Windows.Controls.ItemContainerGenerator>，它會實作<xref:System.Windows.Controls.Primitives.IItemContainerGenerator>介面。 因此，您可以存取<xref:System.Windows.Controls.ItemContainerGenerator>相關聯的物件您<xref:System.Windows.Controls.ItemsControl>使用<xref:System.Windows.Controls.ItemsControl.ItemContainerGenerator%2A>屬性。 比方說，如果您有資料繫結<xref:System.Windows.Controls.TreeView>，而且您想要取得<xref:System.Windows.Controls.TreeViewItem>根據索引或其相關聯的資料項目，您可以使用<xref:System.Windows.Controls.ItemContainerGenerator.ContainerFromIndex%2A?displayProperty=nameWithType>或<xref:System.Windows.Controls.ItemContainerGenerator.ContainerFromItem%2A?displayProperty=nameWithType>方法。 或者，您可以使用<xref:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer%2A?displayProperty=nameWithType>或<xref:System.Windows.Controls.ItemContainerGenerator.ItemFromContainer%2A?displayProperty=nameWithType>方法來取得與指定產生之容器項目相關聯的索引或資料的項目。  
  
 除了這些使用方式，<xref:System.Windows.Controls.Primitives.IItemContainerGenerator>介面則用於進階案例中。 一般來說，有其自己實作的虛擬化的面板的進階應用程式會呼叫介面的成員。  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms750552(v=vs.90)">取得下拉式方塊項目</related>
  </Docs>
  <Members>
    <Member MemberName="ContainerFromIndex">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject ContainerFromIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject ContainerFromIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemContainerGenerator.ContainerFromIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainerFromIndex (index As Integer) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ ContainerFromIndex(int index);" />
      <MemberSignature Language="F#" Value="member this.ContainerFromIndex : int -&gt; System.Windows.DependencyObject" Usage="itemContainerGenerator.ContainerFromIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">所需項目的索引。</param>
        <summary>傳回對應至 <see cref="T:System.Windows.Controls.ItemCollection" /> 內指定索引處之項目 (Item) 的項目 (Element)。</summary>
        <returns>傳回對應至 <see cref="T:System.Windows.Controls.ItemCollection" /> 內指定索引處之項目 (Item) 的項目 (Element)；如果項目 (Item) 未具現化，則傳回 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms750552(v=vs.90)">取得下拉式方塊項目</related>
      </Docs>
    </Member>
    <Member MemberName="ContainerFromItem">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject ContainerFromItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject ContainerFromItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemContainerGenerator.ContainerFromItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainerFromItem (item As Object) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ ContainerFromItem(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.ContainerFromItem : obj -&gt; System.Windows.DependencyObject" Usage="itemContainerGenerator.ContainerFromItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">用來尋找 <see cref="T:System.Object" /> 的 <see cref="T:System.Windows.UIElement" /> 項目。</param>
        <summary>傳回對應到指定項目的 <see cref="T:System.Windows.UIElement" />。</summary>
        <returns>對應到指定項目的 <see cref="T:System.Windows.UIElement" />。 如果該項目不屬於項目集合，或如果未為該項目產生 <see cref="T:System.Windows.UIElement" />，則傳回 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateBatches">
      <MemberSignature Language="C#" Value="public IDisposable GenerateBatches ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable GenerateBatches() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemContainerGenerator.GenerateBatches" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateBatches () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ GenerateBatches();" />
      <MemberSignature Language="F#" Value="member this.GenerateBatches : unit -&gt; IDisposable" Usage="itemContainerGenerator.GenerateBatches " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回可管理 <see cref="P:System.Windows.Controls.ItemContainerGenerator.Status" /> 屬性的物件。</summary>
        <returns>管理 <see cref="P:System.Windows.Controls.ItemContainerGenerator.Status" /> 屬性的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 類別繼承自<xref:System.Windows.Controls.VirtualizingPanel>可以使用這個方法，以取得物件，將會正確設定產生的屬性。  當<xref:System.Windows.Controls.ItemContainerGenerator.GenerateBatches%2A>方法傳回時，<xref:System.Windows.Controls.ItemContainerGenerator.Status%2A>屬性設定為<xref:System.Windows.Controls.Primitives.GeneratorStatus.GeneratingContainers>。  處置物件時，<xref:System.Windows.Controls.ItemContainerGenerator.Status%2A>設為<xref:System.Windows.Controls.Primitives.GeneratorStatus.ContainersGenerated>。  您可以將物件傳遞至`using`封裝程式邏輯，會產生項目容器的陳述式。  當從傳回的物件<xref:System.Windows.Controls.ItemContainerGenerator.GenerateBatches%2A>超出範圍，<xref:System.Windows.Controls.ItemContainerGenerator.Status%2A>屬性將會正確設定。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/afc355e6-f0b9-4240-94dd-0d93f17d9fc3">using 陳述式 (C# 參考)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using 陳述式 (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexFromContainer">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回索引至項目，該項目對應到已產生的指定 <see cref="T:System.Windows.UIElement" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexFromContainer">
      <MemberSignature Language="C#" Value="public int IndexFromContainer (System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexFromContainer(class System.Windows.DependencyObject container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexFromContainer (container As DependencyObject) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexFromContainer(System::Windows::DependencyObject ^ container);" />
      <MemberSignature Language="F#" Value="member this.IndexFromContainer : System.Windows.DependencyObject -&gt; int" Usage="itemContainerGenerator.IndexFromContainer container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="T:System.Windows.DependencyObject" />，對應到要傳回索引至該處的項目。</param>
        <summary>傳回索引至項目，該項目對應到已產生的指定 <see cref="T:System.Windows.UIElement" />。</summary>
        <returns>項目 (此項目對應至指定之已產生的 <see cref="T:System.Int32" />) 的 <see cref="T:System.Windows.UIElement" /> 索引，如果找不到 <paramref name="container" /> 則為 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫此方法等於呼叫<xref:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer%28System.Windows.DependencyObject%2CSystem.Boolean%29?displayProperty=nameWithType>方法並傳遞`false`到`returnLocalIndex`參數。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="container" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexFromContainer">
      <MemberSignature Language="C#" Value="public int IndexFromContainer (System.Windows.DependencyObject container, bool returnLocalIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexFromContainer(class System.Windows.DependencyObject container, bool returnLocalIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexFromContainer (container As DependencyObject, returnLocalIndex As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexFromContainer(System::Windows::DependencyObject ^ container, bool returnLocalIndex);" />
      <MemberSignature Language="F#" Value="member this.IndexFromContainer : System.Windows.DependencyObject * bool -&gt; int" Usage="itemContainerGenerator.IndexFromContainer (container, returnLocalIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
        <Parameter Name="returnLocalIndex" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="T:System.Windows.DependencyObject" />，對應到要傳回索引至該處的項目。</param>
        <param name="returnLocalIndex">
          <see langword="true" /> 表示要搜尋階層式項目的目前層級，<see langword="false" /> 表示要以遞迴方式搜尋階層式項目。</param>
        <summary>傳回對應指定產生之 <see cref="T:System.Windows.UIElement" /> 的項目的索引，也可以選擇性地遞迴搜尋階層項目。</summary>
        <returns>項目 (此項目對應至指定之已產生的 <see cref="T:System.Int32" />) 的 <see cref="T:System.Windows.UIElement" /> 索引，如果找不到 <paramref name="container" /> 則為 -1。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemFromContainer">
      <MemberSignature Language="C#" Value="public object ItemFromContainer (System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ItemFromContainer(class System.Windows.DependencyObject container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemContainerGenerator.ItemFromContainer(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function ItemFromContainer (container As DependencyObject) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ItemFromContainer(System::Windows::DependencyObject ^ container);" />
      <MemberSignature Language="F#" Value="member this.ItemFromContainer : System.Windows.DependencyObject -&gt; obj" Usage="itemContainerGenerator.ItemFromContainer container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="container">對應到要傳回之項目的 <see cref="T:System.Windows.DependencyObject" />。</param>
        <summary>傳回對應到已產生之指定 <see cref="T:System.Windows.UIElement" /> 的項目。</summary>
        <returns>
          <see cref="T:System.Windows.DependencyObject" />，這是對應到已產生之指定 <see cref="T:System.Windows.UIElement" /> 的項目。 如果尚未產生 <see cref="T:System.Windows.UIElement" />，就會傳回 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="container" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;object&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;object&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemContainerGenerator.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ReadOnlyCollection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Object ^&gt; ^ Items { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.ObjectModel.ReadOnlyCollection&lt;obj&gt;" Usage="System.Windows.Controls.ItemContainerGenerator.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得屬於這個 <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 的項目集合。</summary>
        <value>屬於這個 <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 的項目集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性經常更新，因此不會儲存其值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.Primitives.ItemsChangedEventHandler ItemsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.Primitives.ItemsChangedEventHandler ItemsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ItemsChanged As ItemsChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::Primitives::ItemsChangedEventHandler ^ ItemsChanged;" />
      <MemberSignature Language="F#" Value="member this.ItemsChanged : System.Windows.Controls.Primitives.ItemsChangedEventHandler " Usage="member this.ItemsChanged : System.Windows.Controls.Primitives.ItemsChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.ItemsChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> 事件由 <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 引發，通知配置已變更項目集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 項目集合變更時項目可以加入、 移除移動，或<xref:System.Windows.Controls.ItemContainerGenerator>會重新整理。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.GeneratorStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.GeneratorStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemContainerGenerator.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As GeneratorStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::GeneratorStatus Status { System::Windows::Controls::Primitives::GeneratorStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.Status : System.Windows.Controls.Primitives.GeneratorStatus" Usage="System.Windows.Controls.ItemContainerGenerator.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.GeneratorStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 的產生狀態。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Primitives.GeneratorStatus" /> 值，這個值表示 <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 的產生狀態。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StatusChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StatusChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ItemContainerGenerator.StatusChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event StatusChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StatusChanged;" />
      <MemberSignature Language="F#" Value="member this.StatusChanged : EventHandler " Usage="member this.StatusChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Windows.Controls.ItemContainerGenerator.StatusChanged" /> 事件由 <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> 引發，通知控制項已變更其狀態。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.ItemContainerGenerator.Status" />
        <altmember cref="T:System.Windows.Controls.Primitives.GeneratorStatus" />
      </Docs>
    </Member>
    <MemberGroup MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回用於顯示下一個項目 (Item) 的容器項目 (Element)。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext">
      <MemberSignature Language="C#" Value="System.Windows.DependencyObject IItemContainerGenerator.GenerateNext ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Windows.DependencyObject System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GenerateNext" />
      <MemberSignature Language="VB.NET" Value="Function GenerateNext () As DependencyObject Implements IItemContainerGenerator.GenerateNext" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::DependencyObject ^ System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext() = System::Windows::Controls::Primitives::IItemContainerGenerator::GenerateNext;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回用於顯示下一個項目 (Item) 的容器項目 (Element)。</summary>
        <returns>DependencyObject，這是用來顯示下一個項目 (Item) 的容器項目 (Element)。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext">
      <MemberSignature Language="C#" Value="System.Windows.DependencyObject IItemContainerGenerator.GenerateNext (out bool isNewlyRealized);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Windows.DependencyObject System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext([out] bool&amp; isNewlyRealized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GenerateNext(System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Function GenerateNext (ByRef isNewlyRealized As Boolean) As DependencyObject Implements IItemContainerGenerator.GenerateNext" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::DependencyObject ^ System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext([Runtime::InteropServices::Out] bool % isNewlyRealized) = System::Windows::Controls::Primitives::IItemContainerGenerator::GenerateNext;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isNewlyRealized" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="isNewlyRealized">如果傳回的 DependencyObject 是新產生 (實現) 的，則為 true，否則為 false。</param>
        <summary>傳回用來顯示下一個項目 (Item) 的容器項目 (Element)，而且是新產生 (實現) 的容器項目。</summary>
        <returns>DependencyObject，這是用來顯示下一個項目 (Item) 的容器項目 (Element)。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.GeneratorPositionFromIndex">
      <MemberSignature Language="C#" Value="System.Windows.Controls.Primitives.GeneratorPosition IItemContainerGenerator.GeneratorPositionFromIndex (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Windows.Controls.Primitives.GeneratorPosition System.Windows.Controls.Primitives.IItemContainerGenerator.GeneratorPositionFromIndex(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GeneratorPositionFromIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GeneratorPositionFromIndex (itemIndex As Integer) As GeneratorPosition Implements IItemContainerGenerator.GeneratorPositionFromIndex" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::Controls::Primitives::GeneratorPosition System.Windows.Controls.Primitives.IItemContainerGenerator.GeneratorPositionFromIndex(int itemIndex) = System::Windows::Controls::Primitives::IItemContainerGenerator::GeneratorPositionFromIndex;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IItemContainerGenerator.GeneratorPositionFromIndex(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.GeneratorPosition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">所需項目的索引。</param>
        <summary>傳回對應至指定索引之項目的 GeneratorPosition 物件。</summary>
        <returns>對應至指定索引之項目的 GeneratorPosition 物件。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.GetItemContainerGeneratorForPanel">
      <MemberSignature Language="C#" Value="System.Windows.Controls.ItemContainerGenerator IItemContainerGenerator.GetItemContainerGeneratorForPanel (System.Windows.Controls.Panel panel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Windows.Controls.ItemContainerGenerator System.Windows.Controls.Primitives.IItemContainerGenerator.GetItemContainerGeneratorForPanel(class System.Windows.Controls.Panel panel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::Controls::ItemContainerGenerator ^ System.Windows.Controls.Primitives.IItemContainerGenerator.GetItemContainerGeneratorForPanel(System::Windows::Controls::Panel ^ panel) = System::Windows::Controls::Primitives::IItemContainerGenerator::GetItemContainerGeneratorForPanel;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IItemContainerGenerator.GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemContainerGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Windows.Controls.Panel" />
      </Parameters>
      <Docs>
        <param name="panel">要傳回面板適用的 ItemContainerGenerator。</param>
        <summary>傳回指定面板適用的 ItemContainerGenerator。</summary>
        <returns>適用於指定面板的 ItemContainerGenerator。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.IndexFromGeneratorPosition">
      <MemberSignature Language="C#" Value="int IItemContainerGenerator.IndexFromGeneratorPosition (System.Windows.Controls.Primitives.GeneratorPosition position);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Windows.Controls.Primitives.IItemContainerGenerator.IndexFromGeneratorPosition(valuetype System.Windows.Controls.Primitives.GeneratorPosition position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)" />
      <MemberSignature Language="VB.NET" Value="Function IndexFromGeneratorPosition (position As GeneratorPosition) As Integer Implements IItemContainerGenerator.IndexFromGeneratorPosition" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Windows.Controls.Primitives.IItemContainerGenerator.IndexFromGeneratorPosition(System::Windows::Controls::Primitives::GeneratorPosition position) = System::Windows::Controls::Primitives::IItemContainerGenerator::IndexFromGeneratorPosition;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IItemContainerGenerator.IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Controls.Primitives.GeneratorPosition" />
      </Parameters>
      <Docs>
        <param name="position">所需項目的索引。</param>
        <summary>傳回對應至指定 GeneratorPosition 的索引。</summary>
        <returns>Int32，這是對應至指定 GeneratorPosition 的索引。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.PrepareItemContainer">
      <MemberSignature Language="C#" Value="void IItemContainerGenerator.PrepareItemContainer (System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IItemContainerGenerator.PrepareItemContainer(class System.Windows.DependencyObject container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#PrepareItemContainer(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Sub PrepareItemContainer (container As DependencyObject) Implements IItemContainerGenerator.PrepareItemContainer" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Controls.Primitives.IItemContainerGenerator.PrepareItemContainer(System::Windows::DependencyObject ^ container) = System::Windows::Controls::Primitives::IItemContainerGenerator::PrepareItemContainer;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IItemContainerGenerator.PrepareItemContainer(System.Windows.DependencyObject)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="container">要準備的容器。 通常，容器是對前一個 GenerateNext 之呼叫的結果。</param>
        <summary>準備指定的項目 (element)，做為對應項目 (item) 的容器。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.Remove">
      <MemberSignature Language="C#" Value="void IItemContainerGenerator.Remove (System.Windows.Controls.Primitives.GeneratorPosition position, int count);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IItemContainerGenerator.Remove(valuetype System.Windows.Controls.Primitives.GeneratorPosition position, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (position As GeneratorPosition, count As Integer) Implements IItemContainerGenerator.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Controls.Primitives.IItemContainerGenerator.Remove(System::Windows::Controls::Primitives::GeneratorPosition position, int count) = System::Windows::Controls::Primitives::IItemContainerGenerator::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IItemContainerGenerator.Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Controls.Primitives.GeneratorPosition" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">移除一個或多個產生 (實現) 的項目。</param>
        <param name="count">要移除之項目的 Int32 編號，從 <paramref name="position" /> 開始。</param>
        <summary>這個成員支援 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基礎結構，但是您不可以從程式碼直接使用它。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.RemoveAll">
      <MemberSignature Language="C#" Value="void IItemContainerGenerator.RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IItemContainerGenerator.RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAll () Implements IItemContainerGenerator.RemoveAll" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Controls.Primitives.IItemContainerGenerator.RemoveAll() = System::Windows::Controls::Primitives::IItemContainerGenerator::RemoveAll;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IItemContainerGenerator.RemoveAll</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>移除所有產生 (實現) 的項目。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>準備產生器以產生項目，始於指定的 GeneratorPosition，以及在指定的 GeneratorDirection 中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt">
      <MemberSignature Language="C#" Value="IDisposable IItemContainerGenerator.StartAt (System.Windows.Controls.Primitives.GeneratorPosition position, System.Windows.Controls.Primitives.GeneratorDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.IDisposable System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(valuetype System.Windows.Controls.Primitives.GeneratorPosition position, valuetype System.Windows.Controls.Primitives.GeneratorDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection)" />
      <MemberSignature Language="VB.NET" Value="Function StartAt (position As GeneratorPosition, direction As GeneratorDirection) As IDisposable Implements IItemContainerGenerator.StartAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual IDisposable ^ System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System::Windows::Controls::Primitives::GeneratorPosition position, System::Windows::Controls::Primitives::GeneratorDirection direction) = System::Windows::Controls::Primitives::IItemContainerGenerator::StartAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Controls.Primitives.GeneratorPosition" />
        <Parameter Name="direction" Type="System.Windows.Controls.Primitives.GeneratorDirection" />
      </Parameters>
      <Docs>
        <param name="position">GeneratorPosition，指定開始產生項目的項目位置。</param>
        <param name="direction">GeneratorDirection，指定產生項目的方向。</param>
        <summary>準備產生器以產生項目，始於指定的 GeneratorPosition，以及在指定的 GeneratorDirection 中。</summary>
        <returns>IDisposable 物件，追蹤產生程序的存留期 (Lifetime)。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt">
      <MemberSignature Language="C#" Value="IDisposable IItemContainerGenerator.StartAt (System.Windows.Controls.Primitives.GeneratorPosition position, System.Windows.Controls.Primitives.GeneratorDirection direction, bool allowStartAtRealizedItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.IDisposable System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(valuetype System.Windows.Controls.Primitives.GeneratorPosition position, valuetype System.Windows.Controls.Primitives.GeneratorDirection direction, bool allowStartAtRealizedItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function StartAt (position As GeneratorPosition, direction As GeneratorDirection, allowStartAtRealizedItem As Boolean) As IDisposable Implements IItemContainerGenerator.StartAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual IDisposable ^ System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System::Windows::Controls::Primitives::GeneratorPosition position, System::Windows::Controls::Primitives::GeneratorDirection direction, bool allowStartAtRealizedItem) = System::Windows::Controls::Primitives::IItemContainerGenerator::StartAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Controls.Primitives.GeneratorPosition" />
        <Parameter Name="direction" Type="System.Windows.Controls.Primitives.GeneratorDirection" />
        <Parameter Name="allowStartAtRealizedItem" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="position">GeneratorPosition，指定開始產生項目的項目位置。</param>
        <param name="direction">GeneratorDirection，指定產生項目的方向。</param>
        <param name="allowStartAtRealizedItem">布林 (Boolean)，指定是否要從已產生 (實現) 的項目開始。</param>
        <summary>準備產生器以產生項目，始於指定的 GeneratorPosition 並按照指定的 GeneratorDirection，且控制是否要從已產生 (實現) 的項目開始。</summary>
        <returns>IDisposable 物件，追蹤產生程序的存留期 (Lifetime)。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator.Recycle">
      <MemberSignature Language="C#" Value="void IRecyclingItemContainerGenerator.Recycle (System.Windows.Controls.Primitives.GeneratorPosition position, int count);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator.Recycle(valuetype System.Windows.Controls.Primitives.GeneratorPosition position, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IRecyclingItemContainerGenerator#Recycle(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub Recycle (position As GeneratorPosition, count As Integer) Implements IRecyclingItemContainerGenerator.Recycle" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator.Recycle(System::Windows::Controls::Primitives::GeneratorPosition position, int count) = System::Windows::Controls::Primitives::IRecyclingItemContainerGenerator::Recycle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator.Recycle(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Controls.Primitives.GeneratorPosition" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">第一個要重複使用之項目的索引。 <paramref name="position" /> 必須參考先前產生 (實現) 的項目。</param>
        <param name="count">要重複使用的項目數量，從 <paramref name="position" /> 開始。</param>
        <summary>這個成員支援 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基礎結構，但是您不可以從程式碼直接使用它。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.IWeakEventListener.ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.IWeakEventListener.ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Function ReceiveWeakEvent (managerType As Type, sender As Object, e As EventArgs) As Boolean Implements IWeakEventListener.ReceiveWeakEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.IWeakEventListener.ReceiveWeakEvent(Type ^ managerType, System::Object ^ sender, EventArgs ^ e) = System::Windows::IWeakEventListener::ReceiveWeakEvent;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType">呼叫這個方法的 <see cref="T:System.Windows.WeakEventManager" /> 型別。</param>
        <param name="sender">發出事件的物件。</param>
        <param name="e">事件資料。</param>
        <summary>這個成員支援 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基礎結構，但是您不可以從程式碼直接使用它。</summary>
        <returns>如果接聽程式已處理事件則為 <see langword="true" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>