<Type Name="Label" FullName="System.Windows.Controls.Label">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8e2c2703d49f4ce15e4bbc5a90c2dc8ca5b87073" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30618692" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Label : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Label extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Label" />
  <TypeSignature Language="VB.NET" Value="Public Class Label&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Label : System::Windows::Controls::ContentControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Label)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="efc3e-101">代表控制項的文字標籤，並支援便捷鍵。</span>
      <span class="sxs-lookup">
        <span data-stu-id="efc3e-101">Represents the text label for a control and provides support for access keys.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efc3e-102">這個類別會提供存取金鑰 （也稱為助憶鍵） 的功能和視覺支援。</span><span class="sxs-lookup"><span data-stu-id="efc3e-102">This class provides both functional and visual support for access keys (also known as mnemonics).</span></span> <span data-ttu-id="efc3e-103">它經常會用來啟用快速鍵盤存取控制項，例如<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="efc3e-103">It is frequently used to enable quick keyboard access to controls such as a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="efc3e-104">若要指派<xref:System.Windows.Controls.Label>至<xref:System.Windows.Controls.Control>，將<xref:System.Windows.Controls.Label.Target%2A>控制項取得焦點時使用者按下便捷鍵的屬性。</span><span class="sxs-lookup"><span data-stu-id="efc3e-104">To assign a <xref:System.Windows.Controls.Label> to a <xref:System.Windows.Controls.Control>, set the <xref:System.Windows.Controls.Label.Target%2A> property to the control that should get focus when the user presses the access key.</span></span> <span data-ttu-id="efc3e-105">設定目標也原因[!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)]做為目標的控制項名稱中使用的標籤文字。</span><span class="sxs-lookup"><span data-stu-id="efc3e-105">Setting the target also causes [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] to use the text of the label as the name of the targeted control.</span></span> <span data-ttu-id="efc3e-106">如需詳細資訊，請參閱[協助工具](~/docs/framework/ui-automation/index.md)。</span><span class="sxs-lookup"><span data-stu-id="efc3e-106">For more information, see [Accessibility](~/docs/framework/ui-automation/index.md).</span></span>  
  
 <span data-ttu-id="efc3e-107">若要設定的存取金鑰之前, 加上底線的字元，應該是存取金鑰。</span><span class="sxs-lookup"><span data-stu-id="efc3e-107">To set the access key, add an underscore before the character that should be the access key.</span></span> <span data-ttu-id="efc3e-108">如果您的內容有多個底線字元，只有第一個會轉換成便捷鍵。其他底線會顯示為一般文字。</span><span class="sxs-lookup"><span data-stu-id="efc3e-108">If your content has multiple underscore characters, only the first one is converted into an access key; the other underscores appear as normal text.</span></span> <span data-ttu-id="efc3e-109">如果您想要轉換為存取金鑰的底線字元不是第一個底線，使用兩個連續底線的任何之前，您想要轉換的底線。</span><span class="sxs-lookup"><span data-stu-id="efc3e-109">If the underscore that you want converted to the access key is not the first underscore, use two consecutive underscores for any underscores that precede the one that you want to convert.</span></span> <span data-ttu-id="efc3e-110">例如，下列程式碼包含的存取金鑰並將顯示為 _Hello**W**ogw:</span><span class="sxs-lookup"><span data-stu-id="efc3e-110">For example, the following code contains an access key and displays as _Hello**W**orld:</span></span>  
  
```  
<Label>__Hello_World</Label>   
```  
  
 <span data-ttu-id="efc3e-111">因為雙底線前面 H 即 W 鍵會註冊為存取金鑰。</span><span class="sxs-lookup"><span data-stu-id="efc3e-111">Because the underscore that precedes H is a double, the W key registers as the access key.</span></span>  
  
 <span data-ttu-id="efc3e-112">標籤不是可設定焦點，而且不定位停駐點。</span><span class="sxs-lookup"><span data-stu-id="efc3e-112">A label is not focusable, and it is not a tab stop.</span></span> <span data-ttu-id="efc3e-113">如需詳細資訊，請參閱[焦點概觀](~/docs/framework/wpf/advanced/focus-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="efc3e-113">For details, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="efc3e-114">A<xref:System.Windows.Controls.Label>是<xref:System.Windows.Controls.ContentControl>，這表示它可以包含單一物件的任何類型 （例如字串、 影像或工作面板）。</span><span class="sxs-lookup"><span data-stu-id="efc3e-114">A <xref:System.Windows.Controls.Label> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="efc3e-115">如需詳細資訊，請參閱 <xref:System.Windows.Controls.ContentControl> 類別。</span><span class="sxs-lookup"><span data-stu-id="efc3e-115">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
## <a name="customizing-the-label-control"></a><span data-ttu-id="efc3e-116">自訂標籤控制項</span><span class="sxs-lookup"><span data-stu-id="efc3e-116">Customizing the Label Control</span></span>  
 <span data-ttu-id="efc3e-117">若要套用至多個相同的屬性設定<xref:System.Windows.Controls.Label>控制項，可使用<xref:System.Windows.FrameworkElement.Style%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="efc3e-117">To apply the same property settings to multiple <xref:System.Windows.Controls.Label> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="efc3e-118">您可以修改預設<xref:System.Windows.Controls.ControlTemplate>來提供獨特的外觀的控制項。</span><span class="sxs-lookup"><span data-stu-id="efc3e-118">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="efc3e-119">如需有關建立<xref:System.Windows.Controls.ControlTemplate>，請參閱[自訂現有控制項的外觀，藉由建立 ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="efc3e-119">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="efc3e-120">若要查看的組件和所特有狀態<xref:System.Windows.Controls.Label>，請參閱[標籤樣式和範本](~/docs/framework/wpf/controls/label-styles-and-templates.md)。</span><span class="sxs-lookup"><span data-stu-id="efc3e-120">To see the parts and states that are specific to the <xref:System.Windows.Controls.Label>, see [Label Styles and Templates](~/docs/framework/wpf/controls/label-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="efc3e-121">對這個控制項的相依性屬性可能會設定控制項的預設樣式。</span><span class="sxs-lookup"><span data-stu-id="efc3e-121">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="efc3e-122">如果屬性設定為預設樣式，屬性可能會變更其預設值時該控制項會出現在應用程式中。</span><span class="sxs-lookup"><span data-stu-id="efc3e-122">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="efc3e-123">預設樣式是由決定由哪個桌面主題時，會使用應用程式正在執行。</span><span class="sxs-lookup"><span data-stu-id="efc3e-123">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="efc3e-124">如需詳細資訊，請參閱[預設 WPF 佈景主題](http://go.microsoft.com/fwlink/?LinkID=158252)。</span><span class="sxs-lookup"><span data-stu-id="efc3e-124">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efc3e-125">設定視覺化屬性只會影響該屬性是否存在於這兩<xref:System.Windows.Controls.Label>控制項的預設範本，並且使用設定的。</span><span class="sxs-lookup"><span data-stu-id="efc3e-125">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.Label> control's default template and is set by using a .</span></span> <span data-ttu-id="efc3e-126">您可以找到的視覺屬性清單中的 「 變更 Visual 結構的控制項 」 一節中[自訂現有控制項的外觀，藉由建立 ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="efc3e-126">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efc3e-127">下列範例示範如何建立<xref:System.Windows.Controls.Label>設定目標使用的繫結。</span><span class="sxs-lookup"><span data-stu-id="efc3e-127">The following example shows how to create a <xref:System.Windows.Controls.Label> that uses a binding to set the target.</span></span>  
  
 [!code-xaml[LabelSnippet#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#1)]   
  
 <span data-ttu-id="efc3e-128">下列範例示範如何建立<xref:System.Windows.Controls.Label>，具有存取金鑰，並支援文字換行。</span><span class="sxs-lookup"><span data-stu-id="efc3e-128">The following example shows how to create a <xref:System.Windows.Controls.Label> that has an access key and supports text wrapping.</span></span>  
  
 [!code-xaml[LabelSnippet#4](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#4)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Label ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Label.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Label();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="efc3e-129">初始化 <see cref="T:System.Windows.Controls.Label" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc3e-129">Initializes a new instance of the <see cref="T:System.Windows.Controls.Label" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Label.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="efc3e-130">提供這個控制項的適當 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> 實作，做為 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 基礎結構的一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc3e-130">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efc3e-131">因型別而異的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc3e-131">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Label.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ Target { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.NameReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efc3e-132">取得或設定可在使用者按下標籤便捷鍵時接收焦點的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc3e-132">Gets or sets the element that receives focus when the user presses the label's access key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efc3e-133">當使用者按下便捷鍵時，會接收焦點的 <see cref="T:System.Windows.UIElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc3e-133">The <see cref="T:System.Windows.UIElement" /> that receives focus when the user presses the access key.</span>
          </span>
          <span data-ttu-id="efc3e-134">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc3e-134">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efc3e-135">您可以提供鍵盤快速鍵以不支援所提供的便捷鍵的項目<xref:System.Windows.Controls.Label>存取金鑰和設定這個屬性。</span><span class="sxs-lookup"><span data-stu-id="efc3e-135">You can provide keyboard shortcuts to elements that don't support access keys by giving a <xref:System.Windows.Controls.Label> an access key and setting this property.</span></span> <span data-ttu-id="efc3e-136">指派到某個標籤便捷鍵放置底線字元做為存取金鑰正前方。</span><span class="sxs-lookup"><span data-stu-id="efc3e-136">Assign an access key to a label by placing an underscore immediately before the character that acts as the access key.</span></span> <span data-ttu-id="efc3e-137">便捷鍵可以指定在<xref:System.Windows.Controls.ContentControl.Content%2A>屬性或藉由設定<xref:System.Windows.Controls.ContentControl.Content%2A>至<xref:System.Windows.Controls.AccessText>物件。</span><span class="sxs-lookup"><span data-stu-id="efc3e-137">An access key can be specified in the <xref:System.Windows.Controls.ContentControl.Content%2A> property or by setting <xref:System.Windows.Controls.ContentControl.Content%2A> to an <xref:System.Windows.Controls.AccessText> object.</span></span>  
  
 <span data-ttu-id="efc3e-138">您無法使用這個屬性來定義<xref:System.Windows.UIElement>。</span><span class="sxs-lookup"><span data-stu-id="efc3e-138">You cannot use this property to define a <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="efc3e-139">例如，下列編譯，但沒有作用： `<object.Target><UIElement../></object.Target>`。</span><span class="sxs-lookup"><span data-stu-id="efc3e-139">For example, the following compiles but is not functional: `<object.Target><UIElement../></object.Target>`.</span></span> <span data-ttu-id="efc3e-140">這個屬性會提供您的應用程式中已定義的項目參考。</span><span class="sxs-lookup"><span data-stu-id="efc3e-140">This property provides a reference to an element that is already defined in your application.</span></span>  
  
<a name="dependencyPropertyInfo_Target"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="efc3e-141">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="efc3e-141">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="efc3e-142">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="efc3e-142">Identifier field</span></span>|<xref:System.Windows.Controls.Label.TargetProperty>|  
|<span data-ttu-id="efc3e-143">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="efc3e-143">Metadata properties set to `true`</span></span>|<span data-ttu-id="efc3e-144">無</span><span class="sxs-lookup"><span data-stu-id="efc3e-144">None</span></span>|  
  
<a name="xamlAttributeUsage_Target"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="efc3e-145">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="efc3e-145">XAML Attribute Usage</span></span>  
  
```  
<Label Target=" nameOfExistingElement"/>  
  
```  
  
<a name="xamlPropertyElementUsage_Target"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="efc3e-146">XAML 屬性項目用法</span><span class="sxs-lookup"><span data-stu-id="efc3e-146">XAML Property Element Usage</span></span>  
  
<a name="xamlValues_Target"></a>   
## <a name="xaml-values"></a><span data-ttu-id="efc3e-147">XAML 值</span><span class="sxs-lookup"><span data-stu-id="efc3e-147">XAML Values</span></span>  
 `nameOfExistingElement`  
 <span data-ttu-id="efc3e-148">名稱<xref:System.Windows.UIElement>按下便捷鍵時接收焦點。</span><span class="sxs-lookup"><span data-stu-id="efc3e-148">The name of <xref:System.Windows.UIElement> that receives focus when the access key is pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efc3e-149">下列範例將示範如何設定 <xref:System.Windows.Controls.Label.Target%2A> 的<xref:System.Windows.Controls.Label> 屬性。</span><span class="sxs-lookup"><span data-stu-id="efc3e-149">The following example shows how to set the <xref:System.Windows.Controls.Label.Target%2A> property of a <xref:System.Windows.Controls.Label>.</span></span>  
  
 [!code-xaml[LabelSnippet#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#1)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Label.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efc3e-150">識別 <see cref="P:System.Windows.Controls.Label.Target" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="efc3e-150">Identifies the <see cref="P:System.Windows.Controls.Label.Target" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>