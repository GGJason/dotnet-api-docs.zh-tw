<Type Name="Label" FullName="System.Windows.Controls.Label">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f00d9efa3cabea8bfb57977502d2c55a5b5d730" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56370974" /></Metadata><TypeSignature Language="C#" Value="public class Label : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Label extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Label" />
  <TypeSignature Language="VB.NET" Value="Public Class Label&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Label : System::Windows::Controls::ContentControl" />
  <TypeSignature Language="F#" Value="type Label = class&#xA;    inherit ContentControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Label)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="788bf-101">代表控制項的文字標籤，並支援便捷鍵。</span><span class="sxs-lookup"><span data-stu-id="788bf-101">Represents the text label for a control and provides support for access keys.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="788bf-102">這個類別提供存取金鑰 （也就是助憶鍵） 的功能和視覺的支援。</span><span class="sxs-lookup"><span data-stu-id="788bf-102">This class provides both functional and visual support for access keys (also known as mnemonics).</span></span> <span data-ttu-id="788bf-103">它經常會用來啟用控制項的鍵盤快速存取，例如<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="788bf-103">It is frequently used to enable quick keyboard access to controls such as a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="788bf-104">若要將指派<xref:System.Windows.Controls.Label>要<xref:System.Windows.Controls.Control>，將<xref:System.Windows.Controls.Label.Target%2A>應該在使用者按下便捷鍵時取得焦點之控制項的屬性。</span><span class="sxs-lookup"><span data-stu-id="788bf-104">To assign a <xref:System.Windows.Controls.Label> to a <xref:System.Windows.Controls.Control>, set the <xref:System.Windows.Controls.Label.Target%2A> property to the control that should get focus when the user presses the access key.</span></span> <span data-ttu-id="788bf-105">設定也會導致目標[!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)]將標籤的文字作為目標控制項的名稱。</span><span class="sxs-lookup"><span data-stu-id="788bf-105">Setting the target also causes [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] to use the text of the label as the name of the targeted control.</span></span> <span data-ttu-id="788bf-106">如需詳細資訊，請參閱 <<c0> [ 協助工具](~/docs/framework/ui-automation/index.md)。</span><span class="sxs-lookup"><span data-stu-id="788bf-106">For more information, see [Accessibility](~/docs/framework/ui-automation/index.md).</span></span>  
  
 <span data-ttu-id="788bf-107">若要設定的存取金鑰之前, 加上底線的字元，應該是存取金鑰。</span><span class="sxs-lookup"><span data-stu-id="788bf-107">To set the access key, add an underscore before the character that should be the access key.</span></span> <span data-ttu-id="788bf-108">如果您的內容有多個底線字元，只有第一個會轉換成便捷鍵;其他底線會顯示為一般文字。</span><span class="sxs-lookup"><span data-stu-id="788bf-108">If your content has multiple underscore characters, only the first one is converted into an access key; the other underscores appear as normal text.</span></span> <span data-ttu-id="788bf-109">如果您想要轉換成的存取金鑰的底線字元不是第一個底線，用於任何底線前面的您想要轉換的兩個連續底線。</span><span class="sxs-lookup"><span data-stu-id="788bf-109">If the underscore that you want converted to the access key is not the first underscore, use two consecutive underscores for any underscores that precede the one that you want to convert.</span></span> <span data-ttu-id="788bf-110">例如，下列程式碼包含的存取金鑰並將顯示為 _Hello**W**ogw:</span><span class="sxs-lookup"><span data-stu-id="788bf-110">For example, the following code contains an access key and displays as _Hello**W**orld:</span></span>  
  
```  
<Label>__Hello_World</Label>   
```  
  
 <span data-ttu-id="788bf-111">由於前面 H 底線是雙精度浮點數，W 鍵會註冊為便捷鍵。</span><span class="sxs-lookup"><span data-stu-id="788bf-111">Because the underscore that precedes H is a double, the W key registers as the access key.</span></span>  
  
 <span data-ttu-id="788bf-112">標籤不是可設定焦點，並不是定位停駐點。</span><span class="sxs-lookup"><span data-stu-id="788bf-112">A label is not focusable, and it is not a tab stop.</span></span> <span data-ttu-id="788bf-113">如需詳細資訊，請參閱 <<c0> [ 焦點概觀](~/docs/framework/wpf/advanced/focus-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="788bf-113">For details, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="788bf-114">A<xref:System.Windows.Controls.Label>是<xref:System.Windows.Controls.ContentControl>，這表示它可以包含任何類型 （例如字串、 影像或工作面板） 的單一物件。</span><span class="sxs-lookup"><span data-stu-id="788bf-114">A <xref:System.Windows.Controls.Label> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="788bf-115">如需詳細資訊，請參閱 <xref:System.Windows.Controls.ContentControl> 類別。</span><span class="sxs-lookup"><span data-stu-id="788bf-115">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
## <a name="customizing-the-label-control"></a><span data-ttu-id="788bf-116">自訂標籤控制項</span><span class="sxs-lookup"><span data-stu-id="788bf-116">Customizing the Label Control</span></span>  
 <span data-ttu-id="788bf-117">若要將相同的屬性設定套用至多個<xref:System.Windows.Controls.Label>控制項，可使用<xref:System.Windows.FrameworkElement.Style%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="788bf-117">To apply the same property settings to multiple <xref:System.Windows.Controls.Label> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="788bf-118">您可以修改預設<xref:System.Windows.Controls.ControlTemplate>，讓控制項的獨特的外觀。</span><span class="sxs-lookup"><span data-stu-id="788bf-118">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="788bf-119">如需有關建立<xref:System.Windows.Controls.ControlTemplate>，請參閱 <<c2> [ 透過建立 ControlTemplate 自訂現有控制項的外觀](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="788bf-119">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="788bf-120">若要查看的組件和狀態所特有<xref:System.Windows.Controls.Label>，請參閱 < [Label 樣式和範本](~/docs/framework/wpf/controls/label-styles-and-templates.md)。</span><span class="sxs-lookup"><span data-stu-id="788bf-120">To see the parts and states that are specific to the <xref:System.Windows.Controls.Label>, see [Label Styles and Templates](~/docs/framework/wpf/controls/label-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="788bf-121">此控制項的相依性屬性可能會設定控制項的預設樣式。</span><span class="sxs-lookup"><span data-stu-id="788bf-121">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="788bf-122">如果屬性設定為預設樣式，屬性可能會變更其預設值，當控制項出現在應用程式。</span><span class="sxs-lookup"><span data-stu-id="788bf-122">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="788bf-123">預設樣式會決定由哪一個桌面佈景主題時，會使用應用程式正在執行。</span><span class="sxs-lookup"><span data-stu-id="788bf-123">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="788bf-124">如需詳細資訊，請參閱 <<c0> [ 預設 WPF 佈景主題](https://go.microsoft.com/fwlink/?LinkID=158252)。</span><span class="sxs-lookup"><span data-stu-id="788bf-124">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 <span data-ttu-id="788bf-125">下列範例示範如何建立<xref:System.Windows.Controls.Label>使用繫結來設定目標。</span><span class="sxs-lookup"><span data-stu-id="788bf-125">The following example shows how to create a <xref:System.Windows.Controls.Label> that uses a binding to set the target.</span></span>  
  
 [!code-xaml[LabelSnippet#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#1)]   
  
 <span data-ttu-id="788bf-126">下列範例示範如何建立<xref:System.Windows.Controls.Label>，具有便捷鍵，並支援文字換行。</span><span class="sxs-lookup"><span data-stu-id="788bf-126">The following example shows how to create a <xref:System.Windows.Controls.Label> that has an access key and supports text wrapping.</span></span>  
  
 [!code-xaml[LabelSnippet#4](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#4)]   
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms752101(v=vs.90)"><span data-ttu-id="788bf-127">HOW TO：設定標籤的目標屬性</span><span class="sxs-lookup"><span data-stu-id="788bf-127">How to: Set a Label's Target Property</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Label ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Label.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Label();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="788bf-128">初始化 <see cref="T:System.Windows.Controls.Label" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="788bf-128">Initializes a new instance of the <see cref="T:System.Windows.Controls.Label" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Label.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="label.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="788bf-129">提供這個控制項的適當 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> 實作，做為 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 基礎結構的一部分。</span><span class="sxs-lookup"><span data-stu-id="788bf-129">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span></span></summary>
        <returns><span data-ttu-id="788bf-130">因型別而異的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="788bf-130">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Label.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ Target { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : System.Windows.UIElement with get, set" Usage="System.Windows.Controls.Label.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.NameReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="788bf-131">取得或設定可在使用者按下標籤便捷鍵時接收焦點的項目。</span><span class="sxs-lookup"><span data-stu-id="788bf-131">Gets or sets the element that receives focus when the user presses the label's access key.</span></span></summary>
        <value><span data-ttu-id="788bf-132"><see cref="T:System.Windows.UIElement" /> 會在使用者按下便捷鍵時接收焦點。</span><span class="sxs-lookup"><span data-stu-id="788bf-132">The <see cref="T:System.Windows.UIElement" /> that receives focus when the user presses the access key.</span></span> <span data-ttu-id="788bf-133">預設為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="788bf-133">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="788bf-134">您可以提供項目不支援所提供的存取金鑰的鍵盤快速鍵<xref:System.Windows.Controls.Label>便捷鍵和設定這個屬性。</span><span class="sxs-lookup"><span data-stu-id="788bf-134">You can provide keyboard shortcuts to elements that don't support access keys by giving a <xref:System.Windows.Controls.Label> an access key and setting this property.</span></span> <span data-ttu-id="788bf-135">指派到某個標籤便捷鍵加上底線做為便捷鍵字元正前方。</span><span class="sxs-lookup"><span data-stu-id="788bf-135">Assign an access key to a label by placing an underscore immediately before the character that acts as the access key.</span></span> <span data-ttu-id="788bf-136">可以在中指定的存取金鑰<xref:System.Windows.Controls.ContentControl.Content%2A>屬性或藉由設定<xref:System.Windows.Controls.ContentControl.Content%2A>到<xref:System.Windows.Controls.AccessText>物件。</span><span class="sxs-lookup"><span data-stu-id="788bf-136">An access key can be specified in the <xref:System.Windows.Controls.ContentControl.Content%2A> property or by setting <xref:System.Windows.Controls.ContentControl.Content%2A> to an <xref:System.Windows.Controls.AccessText> object.</span></span>  
  
 <span data-ttu-id="788bf-137">您無法使用這個屬性來定義<xref:System.Windows.UIElement>。</span><span class="sxs-lookup"><span data-stu-id="788bf-137">You cannot use this property to define a <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="788bf-138">例如，下列是編譯，但正常運作： `<object.Target><UIElement../></object.Target>`。</span><span class="sxs-lookup"><span data-stu-id="788bf-138">For example, the following compiles but is not functional: `<object.Target><UIElement../></object.Target>`.</span></span> <span data-ttu-id="788bf-139">這個屬性會提供您的應用程式中已定義的項目參考。</span><span class="sxs-lookup"><span data-stu-id="788bf-139">This property provides a reference to an element that is already defined in your application.</span></span>  
  
<a name="dependencyPropertyInfo_Target"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="788bf-140">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="788bf-140">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="788bf-141">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="788bf-141">Identifier field</span></span>|<xref:System.Windows.Controls.Label.TargetProperty>|  
|<span data-ttu-id="788bf-142">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="788bf-142">Metadata properties set to `true`</span></span>|<span data-ttu-id="788bf-143">無</span><span class="sxs-lookup"><span data-stu-id="788bf-143">None</span></span>|  
  
<a name="xamlAttributeUsage_Target"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="788bf-144">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="788bf-144">XAML Attribute Usage</span></span>  
  
```  
<Label Target=" nameOfExistingElement"/>  
  
```  
  
<a name="xamlPropertyElementUsage_Target"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="788bf-145">XAML 屬性項目用法</span><span class="sxs-lookup"><span data-stu-id="788bf-145">XAML Property Element Usage</span></span>  
  
<a name="xamlValues_Target"></a>   
## <a name="xaml-values"></a><span data-ttu-id="788bf-146">XAML 值</span><span class="sxs-lookup"><span data-stu-id="788bf-146">XAML Values</span></span>  
 `nameOfExistingElement`  
 <span data-ttu-id="788bf-147">名稱<xref:System.Windows.UIElement>在按下便捷鍵時接收焦點。</span><span class="sxs-lookup"><span data-stu-id="788bf-147">The name of <xref:System.Windows.UIElement> that receives focus when the access key is pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="788bf-148">下列範例將示範如何設定 <xref:System.Windows.Controls.Label.Target%2A> 的<xref:System.Windows.Controls.Label> 屬性。</span><span class="sxs-lookup"><span data-stu-id="788bf-148">The following example shows how to set the <xref:System.Windows.Controls.Label.Target%2A> property of a <xref:System.Windows.Controls.Label>.</span></span>  
  
 [!code-xaml[LabelSnippet#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#1)]   
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms752101(v=vs.90)"><span data-ttu-id="788bf-149">HOW TO：設定標籤的目標屬性</span><span class="sxs-lookup"><span data-stu-id="788bf-149">How to: Set a Label's Target Property</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Label.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Label.TargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="788bf-150">識別 <see cref="P:System.Windows.Controls.Label.Target" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="788bf-150">Identifies the <see cref="P:System.Windows.Controls.Label.Target" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>