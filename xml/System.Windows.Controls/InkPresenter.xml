<Type Name="InkPresenter" FullName="System.Windows.Controls.InkPresenter">
  <TypeSignature Language="C#" Value="public class InkPresenter : System.Windows.Controls.Decorator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InkPresenter extends System.Windows.Controls.Decorator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.InkPresenter" />
  <TypeSignature Language="VB.NET" Value="Public Class InkPresenter&#xA;Inherits Decorator" />
  <TypeSignature Language="C++ CLI" Value="public ref class InkPresenter : System::Windows::Controls::Decorator" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Decorator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="71f28-101">呈現表面的筆墨。</span><span class="sxs-lookup"><span data-stu-id="71f28-101">Renders ink on a surface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71f28-102">筆跡轉譯，就會發生兩種方式： 動態和靜態。</span><span class="sxs-lookup"><span data-stu-id="71f28-102">Ink rendering occurs in two ways: dynamic and static.</span></span> <span data-ttu-id="71f28-103">筆跡寫入至筆跡的介面時，就會發生動態呈現： 筆劃會呈現為所收集。</span><span class="sxs-lookup"><span data-stu-id="71f28-103">Dynamic rendering occurs as ink is written to an inking surface: the stroke is rendered as it is being collected.</span></span> <span data-ttu-id="71f28-104">收集並附加至新的筆觸筆觸資料後，就會發生靜態轉譯。</span><span class="sxs-lookup"><span data-stu-id="71f28-104">Static rendering occurs after stroke data is collected and attached to a new stroke.</span></span>  
  
 <span data-ttu-id="71f28-105">若要呈現使用動態的筆墨<xref:System.Windows.Controls.InkPresenter>，附加<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer.RootVisual%2A>屬性<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>至<xref:System.Windows.Controls.InkPresenter>使用<xref:System.Windows.Controls.InkPresenter.AttachVisuals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="71f28-105">To render ink dynamically using the <xref:System.Windows.Controls.InkPresenter>, attach the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer.RootVisual%2A> property of a <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to the <xref:System.Windows.Controls.InkPresenter> by using the <xref:System.Windows.Controls.InkPresenter.AttachVisuals%2A> method.</span></span> <span data-ttu-id="71f28-106">若要以靜態方式轉譯筆墨，筆劃將物件加入至<xref:System.Windows.Controls.InkPresenter.Strokes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="71f28-106">To statically render ink, add stroke objects to the <xref:System.Windows.Controls.InkPresenter.Strokes%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71f28-107">下列範例以程式設計方式建立筆觸，並將它加入<xref:System.Windows.Controls.InkPresenter>。</span><span class="sxs-lookup"><span data-stu-id="71f28-107">The following example programmatically creates a stroke and adds it to the <xref:System.Windows.Controls.InkPresenter>.</span></span> <span data-ttu-id="71f28-108">只有靜態轉譯是在此範例，假設<xref:System.Windows.FrameworkElement.Loaded>事件所連接的事件處理常式， `WindowLoaded`。</span><span class="sxs-lookup"><span data-stu-id="71f28-108">Only static rendering is done in this example, which assumes that the <xref:System.Windows.FrameworkElement.Loaded> event is connected to the event handler, `WindowLoaded`.</span></span>  
  
 [!code-csharp[InkPresenterSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkPresenterSample/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkPresenterSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkPresenterSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InkPresenter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkPresenter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InkPresenter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71f28-109">初始化 <see cref="T:System.Windows.Controls.InkPresenter" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="71f28-109">Initializes a new instance of the <see cref="T:System.Windows.Controls.InkPresenter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkPresenter.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeSize"><span data-ttu-id="71f28-110">這個項目用來排列其子內容的 <see cref="T:System.Windows.Size" />。</span><span class="sxs-lookup"><span data-stu-id="71f28-110">The <see cref="T:System.Windows.Size" /> this element uses to arrange its child content.</span></span></param>
        <summary><span data-ttu-id="71f28-111">排列 <see cref="T:System.Windows.Controls.Decorator" /> 項目的內容。</span><span class="sxs-lookup"><span data-stu-id="71f28-111">Arranges the content of a <see cref="T:System.Windows.Controls.Decorator" /> element.</span></span></summary>
        <returns><span data-ttu-id="71f28-112"><see cref="T:System.Windows.Size" />，表示這個 <see cref="T:System.Windows.Controls.Decorator" /> 項目和其子項目的排列大小。</span><span class="sxs-lookup"><span data-stu-id="71f28-112">The <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.Decorator" /> element and its child.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Decorator.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="AttachVisuals">
      <MemberSignature Language="C#" Value="public void AttachVisuals (System.Windows.Media.Visual visual, System.Windows.Ink.DrawingAttributes drawingAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachVisuals(class System.Windows.Media.Visual visual, class System.Windows.Ink.DrawingAttributes drawingAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkPresenter.AttachVisuals(System.Windows.Media.Visual,System.Windows.Ink.DrawingAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachVisuals(System::Windows::Media::Visual ^ visual, System::Windows::Ink::DrawingAttributes ^ drawingAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="drawingAttributes" Type="System.Windows.Ink.DrawingAttributes" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="71f28-113"><see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> 的圖形。</span><span class="sxs-lookup"><span data-stu-id="71f28-113">The visual of a <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" />.</span></span></param>
        <param name="drawingAttributes"><span data-ttu-id="71f28-114">指定動態呈現之筆墨/筆跡外觀的 <see cref="T:System.Windows.Ink.DrawingAttributes" />。</span><span class="sxs-lookup"><span data-stu-id="71f28-114">The <see cref="T:System.Windows.Ink.DrawingAttributes" /> that specifies the appearance of the dynamically rendered ink.</span></span></param>
        <summary><span data-ttu-id="71f28-115">附加 <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> 的圖形到 <see cref="T:System.Windows.Controls.InkPresenter" />。</span><span class="sxs-lookup"><span data-stu-id="71f28-115">Attaches the visual of a <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> to an <see cref="T:System.Windows.Controls.InkPresenter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71f28-116">附加的視覺效果<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>至<xref:System.Windows.Controls.InkPresenter>以動態方式呈現您的控制項上的筆墨。</span><span class="sxs-lookup"><span data-stu-id="71f28-116">Attach the visual of a <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to the <xref:System.Windows.Controls.InkPresenter> to dynamically render ink on your control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71f28-117">下列範例示範如何附加視覺效果和<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer.DrawingAttributes%2A>的<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>至<xref:System.Windows.Controls.InkPresenter>。</span><span class="sxs-lookup"><span data-stu-id="71f28-117">The following example demonstrates how to attach the visual and <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer.DrawingAttributes%2A> of a <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to an <xref:System.Windows.Controls.InkPresenter>.</span></span>  
  
 [!code-csharp[StylusPluginSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusPluginSamples/CSharp/StylusControl.cs#3)]
 [!code-vb[StylusPluginSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusPluginSamples/VisualBasic/StylusControl.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71f28-118"><paramref name="visual" /> 已附加至圖形化樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="71f28-118"><paramref name="visual" /> is already attached to a visual tree.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DetachVisuals">
      <MemberSignature Language="C#" Value="public void DetachVisuals (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DetachVisuals(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkPresenter.DetachVisuals(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DetachVisuals(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="71f28-119">要中斷連結之 <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> 的圖形。</span><span class="sxs-lookup"><span data-stu-id="71f28-119">The visual of the <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> to detach.</span></span></param>
        <summary><span data-ttu-id="71f28-120">從 <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> 將 <see cref="T:System.Windows.Controls.InkPresenter" /> 的圖形中斷連結。</span><span class="sxs-lookup"><span data-stu-id="71f28-120">Detaches the visual of the <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> from the <see cref="T:System.Windows.Controls.InkPresenter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71f28-121">當<xref:System.Windows.Ink.DrawingAttributes>自訂控制項變更，視覺效果的<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>必須重新附加至<xref:System.Windows.Controls.InkPresenter>。</span><span class="sxs-lookup"><span data-stu-id="71f28-121">When the <xref:System.Windows.Ink.DrawingAttributes> on a custom control changes, the visual of the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> must be re-attached to the <xref:System.Windows.Controls.InkPresenter>.</span></span>  <span data-ttu-id="71f28-122">呼叫<xref:System.Windows.Controls.InkPresenter.DetachVisuals%2A>和<xref:System.Windows.Controls.InkPresenter.AttachVisuals%2A>方法來重新附加至視覺效果<xref:System.Windows.Controls.InkPresenter>。</span><span class="sxs-lookup"><span data-stu-id="71f28-122">Call the <xref:System.Windows.Controls.InkPresenter.DetachVisuals%2A> and <xref:System.Windows.Controls.InkPresenter.AttachVisuals%2A> methods to re-attach the visual to the <xref:System.Windows.Controls.InkPresenter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71f28-123">下列範例會重新附加的視覺效果<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>至<xref:System.Windows.Controls.InkPresenter>每當<xref:System.Windows.Ink.DrawingAttributes>上所做的變更。</span><span class="sxs-lookup"><span data-stu-id="71f28-123">The following example re-attaches the visual of a <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to the <xref:System.Windows.Controls.InkPresenter> whenever the <xref:System.Windows.Ink.DrawingAttributes> on the changes.</span></span>  <span data-ttu-id="71f28-124">這個範例假設<xref:System.Windows.Ink.DrawingAttributes.AttributeChanged>事件附加至事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="71f28-124">This example assumes that the <xref:System.Windows.Ink.DrawingAttributes.AttributeChanged> event is attached to the event handler.</span></span>  
  
 [!code-csharp[StrokeCollectionMethods#39](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/InkSelector.cs#39)]
 [!code-vb[StrokeCollectionMethods#39](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/InkSelector.vb#39)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71f28-125"><paramref name="visual" /> 並未附加至 <see cref="T:System.Windows.Controls.InkPresenter" />。</span><span class="sxs-lookup"><span data-stu-id="71f28-125"><paramref name="visual" /> is not attached to the <see cref="T:System.Windows.Controls.InkPresenter" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetLayoutClip">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Geometry GetLayoutClip (System.Windows.Size layoutSlotSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.Geometry GetLayoutClip(valuetype System.Windows.Size layoutSlotSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkPresenter.GetLayoutClip(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetLayoutClip (layoutSlotSize As Size) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::Geometry ^ GetLayoutClip(System::Windows::Size layoutSlotSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutSlotSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="layoutSlotSize"><span data-ttu-id="71f28-126">項目的可用大小。</span><span class="sxs-lookup"><span data-stu-id="71f28-126">The available size of the element.</span></span></param>
        <summary><span data-ttu-id="71f28-127">傳回裁剪幾何，這個裁剪幾何表示 <see cref="P:System.Windows.UIElement.ClipToBounds" /> 屬性設為 <see langword="true" /> 時會裁剪的區域。</span><span class="sxs-lookup"><span data-stu-id="71f28-127">Returns a clipping geometry that indicates the area that will be clipped if the <see cref="P:System.Windows.UIElement.ClipToBounds" /> property is set to <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="71f28-128">表示當 <see cref="T:System.Windows.Media.Geometry" /> 為 <see langword="true" /> 時會裁剪之區域的 <see cref="P:System.Windows.UIElement.ClipToBounds" />。</span><span class="sxs-lookup"><span data-stu-id="71f28-128">A <see cref="T:System.Windows.Media.Geometry" /> that represents the area that is clipped when <see cref="P:System.Windows.UIElement.ClipToBounds" /> is <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualChild">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Visual GetVisualChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.Visual GetVisualChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkPresenter.GetVisualChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetVisualChild (index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::Visual ^ GetVisualChild(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="71f28-129">子項目的索引位置。</span><span class="sxs-lookup"><span data-stu-id="71f28-129">Index position of the child element.</span></span></param>
        <summary><span data-ttu-id="71f28-130">在指定的 <paramref name="index" /> 位置取得子 <see cref="T:System.Windows.Media.Visual" /> 項目。</span><span class="sxs-lookup"><span data-stu-id="71f28-130">Gets the child <see cref="T:System.Windows.Media.Visual" /> element at the specified <paramref name="index" /> position.</span></span></summary>
        <returns><span data-ttu-id="71f28-131">位於指定 <paramref name="index" /> 位置的子項目。</span><span class="sxs-lookup"><span data-stu-id="71f28-131">The child element at the specified <paramref name="index" /> position.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Decorator.GetVisualChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkPresenter.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="71f28-132">不應該超過的上限 <see cref="T:System.Windows.Size" />。</span><span class="sxs-lookup"><span data-stu-id="71f28-132">An upper limit <see cref="T:System.Windows.Size" /> that should not be exceeded.</span></span></param>
        <summary><span data-ttu-id="71f28-133">測量 <see cref="T:System.Windows.Controls.Decorator" /> 的子項目，以準備在 <see cref="M:System.Windows.Controls.Decorator.ArrangeOverride(System.Windows.Size)" /> 階段期間加以排列。</span><span class="sxs-lookup"><span data-stu-id="71f28-133">Measures the child element of a <see cref="T:System.Windows.Controls.Decorator" /> to prepare for arranging it during the <see cref="M:System.Windows.Controls.Decorator.ArrangeOverride(System.Windows.Size)" /> pass.</span></span></summary>
        <returns><span data-ttu-id="71f28-134">項目的目標 <see cref="T:System.Windows.Size" />。</span><span class="sxs-lookup"><span data-stu-id="71f28-134">The target <see cref="T:System.Windows.Size" /> of the element.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Decorator.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkPresenter.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71f28-135">提供這個控制項的適當 <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" /> 實作，做為 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 基礎結構的一部分。</span><span class="sxs-lookup"><span data-stu-id="71f28-135">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Strokes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection Strokes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.StrokeCollection Strokes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkPresenter.Strokes" />
      <MemberSignature Language="VB.NET" Value="Public Property Strokes As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::StrokeCollection ^ Strokes { System::Windows::Ink::StrokeCollection ^ get(); void set(System::Windows::Ink::StrokeCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71f28-136">取得並設定 <see cref="T:System.Windows.Controls.InkPresenter" /> 所顯示的筆劃。</span><span class="sxs-lookup"><span data-stu-id="71f28-136">Gets and sets the strokes that the <see cref="T:System.Windows.Controls.InkPresenter" /> displays.</span></span></summary>
        <value><span data-ttu-id="71f28-137"><see cref="T:System.Windows.Controls.InkPresenter" /> 所顯示的筆劃。</span><span class="sxs-lookup"><span data-stu-id="71f28-137">The strokes that the <see cref="T:System.Windows.Controls.InkPresenter" /> displays.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Strokes"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="71f28-138">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="71f28-138">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="71f28-139">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="71f28-139">Identifier field</span></span>|<xref:System.Windows.Controls.InkPresenter.StrokesProperty>|  
|<span data-ttu-id="71f28-140">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="71f28-140">Metadata properties set to `true`</span></span>|<span data-ttu-id="71f28-141">無</span><span class="sxs-lookup"><span data-stu-id="71f28-141">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="71f28-142">下列範例以程式設計方式建立筆觸，並將它加入<xref:System.Windows.Controls.InkPresenter>。</span><span class="sxs-lookup"><span data-stu-id="71f28-142">The following example programmatically creates a stroke and adds it to the <xref:System.Windows.Controls.InkPresenter>.</span></span> <span data-ttu-id="71f28-143">此範例假設<xref:System.Windows.FrameworkElement.Loaded>事件所連接的事件處理常式， `WindowLoaded`。</span><span class="sxs-lookup"><span data-stu-id="71f28-143">The example assumes that the <xref:System.Windows.FrameworkElement.Loaded> event is connected to the event handler, `WindowLoaded`.</span></span>  
  
 [!code-csharp[InkPresenterSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkPresenterSample/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkPresenterSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkPresenterSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StrokesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StrokesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkPresenter.StrokesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StrokesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StrokesProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71f28-144">識別 <see cref="P:System.Windows.Controls.InkPresenter.Strokes" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="71f28-144">Identifies the <see cref="P:System.Windows.Controls.InkPresenter.Strokes" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualChildrenCount">
      <MemberSignature Language="C#" Value="protected override int VisualChildrenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisualChildrenCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkPresenter.VisualChildrenCount" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property VisualChildrenCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int VisualChildrenCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71f28-145">取得等同於此 <see cref="T:System.Windows.Controls.Decorator" /> 執行個體之視覺子項目數的值。</span><span class="sxs-lookup"><span data-stu-id="71f28-145">Gets a value that is equal to the number of visual child elements of this instance of <see cref="T:System.Windows.Controls.Decorator" />.</span></span></summary>
        <value><span data-ttu-id="71f28-146">視覺子項目數。</span><span class="sxs-lookup"><span data-stu-id="71f28-146">The number of visual child elements.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.Decorator.VisualChildrenCount" />
      </Docs>
    </Member>
  </Members>
</Type>