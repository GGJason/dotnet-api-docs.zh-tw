<Type Name="WebBrowser" FullName="System.Windows.Controls.WebBrowser">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ab8f3e4b437b002e115fc924d1385621e19af2ca" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebBrowser : System.Windows.Interop.ActiveXHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WebBrowser extends System.Windows.Interop.ActiveXHost" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.WebBrowser" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebBrowser&#xA;Inherits ActiveXHost" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebBrowser sealed : System::Windows::Interop::ActiveXHost" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Interop.ActiveXHost</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4744a-101">在 HTML 文件之間主控和巡覽。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4744a-101">Hosts and navigates between HTML documents.</span>
      </span>
      <span data-ttu-id="4744a-102">啟用 WPF Managed 程式碼和 HTML 指令碼之間的互通性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4744a-102">Enables interoperability between WPF managed code and HTML script.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4744a-103"><xref:System.Windows.Controls.WebBrowser>控制項提供下列功能：</span><span class="sxs-lookup"><span data-stu-id="4744a-103">The <xref:System.Windows.Controls.WebBrowser> control provides the following capabilities:</span></span>  
  
 <span data-ttu-id="4744a-104">**巡覽**： <xref:System.Windows.Controls.WebBrowser.Source%2A>、 <xref:System.Windows.Controls.WebBrowser.Navigate%2A>、 <xref:System.Windows.Controls.WebBrowser.NavigateToStream%2A>、 <xref:System.Windows.Controls.WebBrowser.NavigateToString%2A>和 <xref:System.Windows.Controls.WebBrowser.Refresh%2A>。</span><span class="sxs-lookup"><span data-stu-id="4744a-104">**Navigation**: <xref:System.Windows.Controls.WebBrowser.Source%2A>, <xref:System.Windows.Controls.WebBrowser.Navigate%2A>, <xref:System.Windows.Controls.WebBrowser.NavigateToStream%2A>, <xref:System.Windows.Controls.WebBrowser.NavigateToString%2A>, and <xref:System.Windows.Controls.WebBrowser.Refresh%2A>.</span></span>  
  
 <span data-ttu-id="4744a-105">**瀏覽存留期**: <xref:System.Windows.Controls.WebBrowser.Navigating>， <xref:System.Windows.Controls.WebBrowser.Navigated>，和<xref:System.Windows.Controls.WebBrowser.LoadCompleted>。</span><span class="sxs-lookup"><span data-stu-id="4744a-105">**Navigation Lifetime**: <xref:System.Windows.Controls.WebBrowser.Navigating>, <xref:System.Windows.Controls.WebBrowser.Navigated>, and <xref:System.Windows.Controls.WebBrowser.LoadCompleted>.</span></span>  
  
 <span data-ttu-id="4744a-106">**瀏覽日誌**: <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>， <xref:System.Windows.Controls.WebBrowser.GoBack%2A>， <xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>，和<xref:System.Windows.Controls.WebBrowser.GoForward%2A>。</span><span class="sxs-lookup"><span data-stu-id="4744a-106">**Navigation Journaling**: <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>, <xref:System.Windows.Controls.WebBrowser.GoBack%2A>, <xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>, and <xref:System.Windows.Controls.WebBrowser.GoForward%2A>.</span></span>  
  
 <span data-ttu-id="4744a-107">**WPF/HTML 互通性**:<xref:System.Windows.Controls.WebBrowser.InvokeScript%2A>和<xref:System.Windows.Controls.WebBrowser.ObjectForScripting%2A>，和<xref:System.Windows.Controls.WebBrowser.Document%2A>。</span><span class="sxs-lookup"><span data-stu-id="4744a-107">**WPF/HTML Interoperability**: <xref:System.Windows.Controls.WebBrowser.InvokeScript%2A> and <xref:System.Windows.Controls.WebBrowser.ObjectForScripting%2A>, and <xref:System.Windows.Controls.WebBrowser.Document%2A>.</span></span>  
  
 <span data-ttu-id="4744a-108"><xref:System.Windows.Controls.WebBrowser> 繫結的安全性限制[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]裝載的應用程式<xref:System.Windows.Controls.WebBrowser>:</span><span class="sxs-lookup"><span data-stu-id="4744a-108"><xref:System.Windows.Controls.WebBrowser> is bound by the security constraints of the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application that is hosting the <xref:System.Windows.Controls.WebBrowser>:</span></span>  
  
-   <span data-ttu-id="4744a-109">當<xref:System.Windows.Controls.WebBrowser>由完全信任[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]應用程式 （獨立的應用程式，例如），<xref:System.Windows.Controls.WebBrowser>可以裝載[!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)]文件中的任何位置。</span><span class="sxs-lookup"><span data-stu-id="4744a-109">When <xref:System.Windows.Controls.WebBrowser> is hosted by a full-trust [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application (a stand-alone application, for example), <xref:System.Windows.Controls.WebBrowser> can host [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] documents from any location.</span></span>  
  
-   <span data-ttu-id="4744a-110">當<xref:System.Windows.Controls.WebBrowser>由部分信任[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]應用程式 ( [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]，例如)，<xref:System.Windows.Controls.WebBrowser>只能裝載的文件**站台的原點**應用程式資料檔案。</span><span class="sxs-lookup"><span data-stu-id="4744a-110">When <xref:System.Windows.Controls.WebBrowser> is hosted by a partial-trust [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application (an [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)], for example), <xref:System.Windows.Controls.WebBrowser> can only host documents that are **Site Of Origin** application data files.</span></span> <span data-ttu-id="4744a-111">如需詳細資訊，請參閱 [WPF 應用程式資源、內容和資料檔案](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)。</span><span class="sxs-lookup"><span data-stu-id="4744a-111">For more information, see [WPF Application Resource, Content, and Data Files](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4744a-112"><xref:System.Windows.Controls.WebBrowser>控制項在內部具現化的原生 WebBrowser ActiveX 控制項。</span><span class="sxs-lookup"><span data-stu-id="4744a-112">The <xref:System.Windows.Controls.WebBrowser> control internally instantiates the native WebBrowser ActiveX control.</span></span> <span data-ttu-id="4744a-113">WPF 可讓安全性功能，藉由套用到 WebBrowser ActiveX 控制項功能的控制項。</span><span class="sxs-lookup"><span data-stu-id="4744a-113">WPF enables security features by applying feature controls to the WebBrowser ActiveX control.</span></span> <span data-ttu-id="4744a-114">套用的功能控制項不同 Xbap 和獨立的應用程式。</span><span class="sxs-lookup"><span data-stu-id="4744a-114">The feature controls that are applied differ for XBAPs and stand-alone applications.</span></span> <span data-ttu-id="4744a-115">某些應用程式應該套用額外的功能以防止執行惡意內容的控制項。</span><span class="sxs-lookup"><span data-stu-id="4744a-115">Some applications should apply additional feature controls to prevent malicious content from running.</span></span> <span data-ttu-id="4744a-116">如需詳細資訊，請參閱 「 WebBrowser 控制項和功能控制項 」 一節[安全性 (WPF)](~/docs/framework/wpf/security-wpf.md)和[WebBrowser 控制項概觀與教學課程](http://go.microsoft.com/fwlink/?LinkId=179388)。</span><span class="sxs-lookup"><span data-stu-id="4744a-116">For more information, see the "WebBrowser Control and Feature Controls" section in [Security (WPF)](~/docs/framework/wpf/security-wpf.md) and [WebBrowser Control Overviews and Tutorials](http://go.microsoft.com/fwlink/?LinkId=179388).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4744a-117">下列範例示範如何設定<xref:System.Windows.Controls.WebBrowser>瀏覽至[!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)]使用只有標記的文件。</span><span class="sxs-lookup"><span data-stu-id="4744a-117">The following example shows how to configure <xref:System.Windows.Controls.WebBrowser> to navigate to an [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] document by using markup only.</span></span>  
  
```xaml  
<!-- Web Browser Control that hosts a web page. -->  
<WebBrowser x:Name="webBrowser" Source="http://msdn.com"   
  Width="600" Height="600"  />  
```  
  
 <span data-ttu-id="4744a-118">下列範例示範如何設定<xref:System.Windows.Controls.WebBrowser>瀏覽至文件使用的標記和程式碼後置。</span><span class="sxs-lookup"><span data-stu-id="4744a-118">The following example shows how to configure <xref:System.Windows.Controls.WebBrowser> to navigate to a document by using markup and code-behind.</span></span>  
  
```xaml  
<StackPanel>  
    <StackPanel Orientation="Horizontal">  
        <TextBox x:Name="addressTextBox" Width="200" />  
        <Button Click="goNavigateButton_Click">Go</Button>  
    </StackPanel>  
    <WebBrowser x:Name="myWebBrowser" />  
</StackPanel>  
```  
  
```csharp  
private void goNavigateButton_Click(object sender, RoutedEventArgs e)  
{  
    // Get URI to navigate to  
    Uri uri = new Uri(this.addressTextBox.Text, UriKind.RelativeOrAbsolute);  
  
    // Only absolute URIs can be navigated to  
    if (!uri.IsAbsoluteUri)  
    {  
        MessageBox.Show("The Address URI must be absolute eg 'http://www.microsoft.com'");  
        return;  
    }  
  
    // Navigate to the desired URL by calling the .Navigate method  
    this.myWebBrowser.Navigate(uri);  
}  
```  
  
 <span data-ttu-id="4744a-119">下列範例示範如何處理`NewWindow2`事件以及使用的類似事件<xref:System.Windows.Controls.WebBrowser>控制項。</span><span class="sxs-lookup"><span data-stu-id="4744a-119">The following example shows how to handle the `NewWindow2` event and similar events using a <xref:System.Windows.Controls.WebBrowser> control.</span></span> <span data-ttu-id="4744a-120">這個範例需要參考**SHDocVw.dll**、`using System.Runtime.InteropServices;`陳述式，和<xref:System.Windows.Controls.WebBrowser>控制項，名為`webBrowser1`。</span><span class="sxs-lookup"><span data-stu-id="4744a-120">This example requires a reference to **SHDocVw.dll**, a `using System.Runtime.InteropServices;` statement, and a <xref:System.Windows.Controls.WebBrowser> control named `webBrowser1`.</span></span>  
  
```csharp  
public MainWindow()  
{  
    InitializeComponent();  
  
    var serviceProvider = (IServiceProvider)webBrowser1.Document;  
    if (serviceProvider != null)  
    {  
        Guid serviceGuid = new Guid("0002DF05-0000-0000-C000-000000000046");  
        Guid iid = typeof(SHDocVw.WebBrowser).GUID;  
        var webBrowserPtr = (SHDocVw.WebBrowser)serviceProvider  
            .QueryService(ref serviceGuid, ref iid);  
        if (webBrowserPtr != null)  
        {  
            webBrowserPtr.NewWindow2 += webBrowser1_NewWindow2;  
        }  
    }  
}  
  
private void webBrowser1_NewWindow2(ref object ppDisp, ref bool Cancel)  
{  
    // Handle the event.  
}  
  
[ComImport, InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]  
[Guid("6d5140c1-7436-11ce-8034-00aa006009fa")]  
internal interface IServiceProvider  
{  
    [return: MarshalAs(UnmanagedType.IUnknown)]  
    object QueryService(ref Guid guidService, ref Guid riid);  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebBrowser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebBrowser();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4744a-121">初始化 <see cref="T:System.Windows.Controls.WebBrowser" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-121">Initializes a new instance of the <see cref="T:System.Windows.Controls.WebBrowser" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.WebBrowserPermission">
          <span data-ttu-id="4744a-122">呼叫這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-122">to call this method.</span>
          </span>
          <span data-ttu-id="4744a-123">相關聯的列舉型別： <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-123">Associated enumeration: <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.WebBrowser.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4744a-124">取得值，這個值表示是否有可巡覽的上一個文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-124">Gets a value that indicates whether there is a document to navigate back to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4744a-125">
            <see cref="T:System.Boolean" /> 值，表示是否有可巡覽的上一個文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-125">A <see cref="T:System.Boolean" /> value that indicates whether there is a document to navigate back to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4744a-126">下列範例示範如何巡覽回上一個文件，藉由呼叫<xref:System.Windows.Controls.WebBrowser.GoBack%2A>。</span><span class="sxs-lookup"><span data-stu-id="4744a-126">The following example shows how to navigate back to the previous document by calling <xref:System.Windows.Controls.WebBrowser.GoBack%2A>.</span></span> <span data-ttu-id="4744a-127">此範例會先檢查向後巡覽至所檢查的文件<xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>。</span><span class="sxs-lookup"><span data-stu-id="4744a-127">The example first checks that there are documents to navigate back to by checking <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>.</span></span>  
  
```csharp  
private void backButton_Click(object sender, RoutedEventArgs e)  
{  
  // Navigate to the previous HTML document, if there is one  
  if (this.webBrowser.CanGoBack)  
  {  
    this.webBrowser.GoBack();  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.WebBrowser.GoBack" />
        <altmember cref="P:System.Windows.Controls.WebBrowser.CanGoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.WebBrowser.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4744a-128">取得值，這個值表示是否有可巡覽的下一個文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-128">Gets a value that indicates whether there is a document to navigate forward to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4744a-129">
            <see cref="T:System.Boolean" /> 值，表示是否有可巡覽的下一個文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-129">A <see cref="T:System.Boolean" /> value that indicates whether there is a document to navigate forward to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4744a-130">下列範例示範如何巡覽至下一個[!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)]文件，藉由呼叫<xref:System.Windows.Controls.WebBrowser.GoForward%2A>。</span><span class="sxs-lookup"><span data-stu-id="4744a-130">The following example shows how to navigate forward to the next [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] document by calling <xref:System.Windows.Controls.WebBrowser.GoForward%2A>.</span></span> <span data-ttu-id="4744a-131">此範例會先檢查是藉由檢查向前巡覽至文件<xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>。</span><span class="sxs-lookup"><span data-stu-id="4744a-131">The example first checks that there are documents to navigate forward to by checking <xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>.</span></span>  
  
```csharp  
private void forwardButton_Click(object sender, RoutedEventArgs e)  
{  
  // Navigate to the next HTML document, if there is one  
  if (this.webBrowser.CanGoForward)  
  {  
    this.webBrowser.GoForward();  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.WebBrowser.GoForward" />
        <altmember cref="P:System.Windows.Controls.WebBrowser.CanGoBack" />
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public object Document { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Document" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.WebBrowser.Document" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Document As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Document { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4744a-132">取得 Document 物件，這個物件表示裝載的 [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] 頁面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-132">Gets the Document object that represents the hosted [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4744a-133">Document 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-133">A Document object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4744a-134">文件物件必須轉換成您想要的 COM 介面。</span><span class="sxs-lookup"><span data-stu-id="4744a-134">The Document object needs to be cast to the COM interface you are expecting.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4744a-135">
            <see cref="T:System.Windows.Controls.WebBrowser" /> 執行個體不再有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-135">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4744a-136">無法擷取基礎原生 <c>WebBrowser</c> 的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-136">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="4744a-137">若要呼叫這個屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-137">to call this property.</span>
          </span>
          <span data-ttu-id="4744a-138">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-138">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoBack();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4744a-139">巡覽回上一個文件 (如果有)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-139">Navigate back to the previous document, if there is one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4744a-140">如果您呼叫<xref:System.Windows.Controls.WebBrowser.GoBack%2A>且沒有任何文件，以瀏覽至，<xref:System.Windows.Controls.WebBrowser>不會執行瀏覽並擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4744a-140">If you call <xref:System.Windows.Controls.WebBrowser.GoBack%2A> and there are not any documents to navigate back to, <xref:System.Windows.Controls.WebBrowser> does not perform a navigation and an exception is thrown.</span></span> <span data-ttu-id="4744a-141">如果需要您可以檢查的值<xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>屬性來判斷是否有向後巡覽至文件。</span><span class="sxs-lookup"><span data-stu-id="4744a-141">If you need to, you can inspect the value of the <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A> property to determine whether there are documents to navigate back to.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4744a-142">下列範例示範如何巡覽回上一個[!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)]文件，藉由呼叫<xref:System.Windows.Controls.WebBrowser.GoBack%2A>。</span><span class="sxs-lookup"><span data-stu-id="4744a-142">The following example shows how to navigate back to the previous [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] document by calling <xref:System.Windows.Controls.WebBrowser.GoBack%2A>.</span></span> <span data-ttu-id="4744a-143">此範例會先檢查沒有[!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)]文件，以瀏覽回藉由檢查<xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>。</span><span class="sxs-lookup"><span data-stu-id="4744a-143">The example first checks that there are [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] documents to navigate back to by checking <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>.</span></span>  
  
```csharp  
private void backButton_Click(object sender, RoutedEventArgs e)  
{  
  // Navigate to the previous HTML document, if there is one  
  if (this.webBrowser.CanGoBack)  
  {  
    this.webBrowser.GoBack();  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4744a-144">
            <see cref="T:System.Windows.Controls.WebBrowser" /> 執行個體不再有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-144">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4744a-145">無法擷取基礎原生 <c>WebBrowser</c> 的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-145">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="4744a-146">沒有可巡覽的上一個文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-146">There is no document to navigate back to.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.WebBrowser.CanGoBack" />
        <altmember cref="M:System.Windows.Controls.WebBrowser.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoForward ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoForward();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4744a-147">向前巡覽至下一個 [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] 文件 (如果有)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-147">Navigate forward to the next [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] document, if there is one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4744a-148">如果您呼叫<xref:System.Windows.Controls.WebBrowser.GoForward%2A>且沒有任何文件，以向前巡覽，<xref:System.Windows.Controls.WebBrowser>不會執行瀏覽並擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4744a-148">If you call <xref:System.Windows.Controls.WebBrowser.GoForward%2A> and there are not any documents to navigate forward to, <xref:System.Windows.Controls.WebBrowser> does not perform a navigation and an exception is thrown.</span></span> <span data-ttu-id="4744a-149">如果需要您可以檢查的值<xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>屬性來判斷是否有可巡覽的文件。</span><span class="sxs-lookup"><span data-stu-id="4744a-149">If you need to, you can inspect the value of the <xref:System.Windows.Controls.WebBrowser.CanGoForward%2A> property to determine whether there are documents to navigate forward to.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4744a-150">下列範例示範如何藉由呼叫向前巡覽至下一個文件<xref:System.Windows.Controls.WebBrowser.GoForward%2A>。</span><span class="sxs-lookup"><span data-stu-id="4744a-150">The following example shows how to navigate forward to the next document by calling <xref:System.Windows.Controls.WebBrowser.GoForward%2A>.</span></span> <span data-ttu-id="4744a-151">此範例會先檢查是藉由檢查向前巡覽至文件<xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>。</span><span class="sxs-lookup"><span data-stu-id="4744a-151">The example first checks that there are documents to navigate forward to by checking <xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>.</span></span>  
  
```csharp  
private void forwardButton_Click(object sender, RoutedEventArgs e)  
{  
  // Navigate to the next HTML document, if there is one  
  if (this.webBrowser.CanGoForward)  
  {  
    this.webBrowser.GoForward();  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4744a-152">
            <see cref="T:System.Windows.Controls.WebBrowser" /> 執行個體不再有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-152">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4744a-153">無法擷取基礎原生 <c>WebBrowser</c> 的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-153">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="4744a-154">沒有可巡覽的下一個文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-154">There is no document to navigate forward to.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.WebBrowser.CanGoForward" />
        <altmember cref="M:System.Windows.Controls.WebBrowser.GoBack" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeScript">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4744a-155">執行目前所載入文件中定義的指令碼函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-155">Executes a scripting function defined in the currently loaded document.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeScript">
      <MemberSignature Language="C#" Value="public object InvokeScript (string scriptName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object InvokeScript(string scriptName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.InvokeScript(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeScript (scriptName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeScript(System::String ^ scriptName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scriptName">
          <span data-ttu-id="4744a-156">要執行的指令碼函式名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-156">The name of the script function to execute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4744a-157">執行目前所載入文件實作的指令碼函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-157">Executes a script function that is implemented by the currently loaded document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4744a-158">Active Scripting 呼叫所傳回的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-158">The object returned by the Active Scripting call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4744a-159"><xref:System.Windows.Controls.WebBrowser.InvokeScript%28System.String%29> 不應該呼叫之前其實作的文件已完成載入。</span><span class="sxs-lookup"><span data-stu-id="4744a-159"><xref:System.Windows.Controls.WebBrowser.InvokeScript%28System.String%29> should not be called before the document that implements it has finished loading.</span></span> <span data-ttu-id="4744a-160">文件載入處理完成時，您可以偵測<xref:System.Windows.Controls.WebBrowser.LoadCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="4744a-160">You can detect when a document has finished loading by handling the <xref:System.Windows.Controls.WebBrowser.LoadCompleted> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4744a-161">下列範例示範如何呼叫從文件中的指令碼函式[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]應用程式使用<xref:System.Windows.Controls.WebBrowser.InvokeScript%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="4744a-161">The following example shows how to call a script function in a document from a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application by using <xref:System.Windows.Controls.WebBrowser.InvokeScript%28System.String%29>.</span></span> <span data-ttu-id="4744a-162">在此範例中，指令碼函式沒有任何參數。</span><span class="sxs-lookup"><span data-stu-id="4744a-162">In this example, the script function has no parameters.</span></span>  
  
 <span data-ttu-id="4744a-163">以下是[!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)]實作將會從呼叫的指令碼函式的文件[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="4744a-163">The following is the [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] document that implements the script function that will be called from [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)].</span></span>  
  
```html  
<html>  
    <head>  
        <script type="text/javascript">  
            // Function Without Parameters  
            function JavaScriptFunctionWithoutParameters()    
            {  
              outputID.innerHTML = "JavaScript function called!";  
            }  
        </script>  
    </head>  
    <body>  
    <div id="outputID" style="color:Red; font-size:16">  
        Hello from HTML document with script!  
    </div>  
    </body>  
</html>  
```  
  
 <span data-ttu-id="4744a-164">下列示範[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]呼叫中的指令碼函式實作[!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)]文件。</span><span class="sxs-lookup"><span data-stu-id="4744a-164">The following shows the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] implementation to call the script function in the [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] document.</span></span>  
  
```csharp  
private void callScriptFunctionNoParamButton_Click(object sender, RoutedEventArgs e)  
{  
  // Make sure the HTML document has loaded before attempting to  
  // invoke script of the document page. You could set loadCompleted  
  // to true when the LoadCompleted event on the WebBrowser fires.  
  if (this.loadCompleted)  
  {  
    try  
    {  
      this.webBrowser.InvokeScript("JavaScriptFunctionWithoutParameters");  
    }  
    catch (Exception ex)  
    {  
      string msg = "Could not call script: " +  
                   ex.Message +  
                  "\n\nPlease click the 'Load HTML Document with Script' button to load.";  
      MessageBox.Show(msg);  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4744a-165">
            <see cref="T:System.Windows.Controls.WebBrowser" /> 執行個體不再有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-165">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4744a-166">無法擷取基礎原生 <c>WebBrowser</c> 的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-166">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="4744a-167">指令碼函式不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-167">The script function does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeScript">
      <MemberSignature Language="C#" Value="public object InvokeScript (string scriptName, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object InvokeScript(string scriptName, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.InvokeScript(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeScript (scriptName As String, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeScript(System::String ^ scriptName, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="scriptName">
          <span data-ttu-id="4744a-168">要執行的指令碼函式名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-168">The name of the script function to execute.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="4744a-169">要傳遞至指令碼函式的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-169">The parameters to pass to the script function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4744a-170">執行目前所載入文件中定義的指令碼函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-170">Executes a script function that is defined in the currently loaded document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4744a-171">Active Scripting 呼叫所傳回的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-171">The object returned by the Active Scripting call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4744a-172"><xref:System.Windows.Controls.WebBrowser.InvokeScript%28System.String%2CSystem.Object%5B%5D%29> 不應該呼叫之前其實作的文件已完成載入。</span><span class="sxs-lookup"><span data-stu-id="4744a-172"><xref:System.Windows.Controls.WebBrowser.InvokeScript%28System.String%2CSystem.Object%5B%5D%29> should not be called before the document that implements it has finished loading.</span></span> <span data-ttu-id="4744a-173">文件載入處理完成時，您可以偵測<xref:System.Windows.Controls.WebBrowser.LoadCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="4744a-173">You can detect when a document has finished loading by handling the <xref:System.Windows.Controls.WebBrowser.LoadCompleted> event.</span></span>  
  
 <span data-ttu-id="4744a-174">如果您沒有足夠的參數值傳遞所叫用的指令碼，您不傳遞值的參數會有未定義的值。</span><span class="sxs-lookup"><span data-stu-id="4744a-174">If you do not pass enough parameter values to the script that you are invoking, the parameters that you do not pass values to will have the undefined value.</span></span> <span data-ttu-id="4744a-175">如果您傳遞太多參數值，會忽略的過多的值。</span><span class="sxs-lookup"><span data-stu-id="4744a-175">If you pass too many parameter values, the excess values are ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4744a-176">下列範例示範如何使用文件中呼叫指令碼函式從應用程式<xref:System.Windows.Controls.WebBrowser.InvokeScript%28System.String%2CSystem.Object%5B%5D%29>。</span><span class="sxs-lookup"><span data-stu-id="4744a-176">The following example shows how to call script functions in a document from an application by using <xref:System.Windows.Controls.WebBrowser.InvokeScript%28System.String%2CSystem.Object%5B%5D%29>.</span></span> <span data-ttu-id="4744a-177">在此範例中，指令碼函式需要的參數。</span><span class="sxs-lookup"><span data-stu-id="4744a-177">In this example, the script functions require parameters.</span></span>  
  
 <span data-ttu-id="4744a-178">以下是實作將會從呼叫的指令碼函式的文件[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="4744a-178">The following is the document that implements the script functions that will be called from [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)].</span></span>  
  
```html  
<html>  
    <head>  
        <script type="text/javascript">  
            // Function Without Parameters  
            function JavaScriptFunctionWithoutParameters()    
            {  
              outputID.innerHTML = "JavaScript function 'called: " + message + ".";  
            }  
        </script>  
    </head>  
    <body>  
    <div id="outputID" style="color:Red; font-size:16">  
        Hello from HTML document with script!  
    </div>  
    </body>  
</html>  
```  
  
 <span data-ttu-id="4744a-179">下列示範[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]中的函式呼叫的指令碼實作[!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)]文件。</span><span class="sxs-lookup"><span data-stu-id="4744a-179">The following shows the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] implementation to call the script functions in the [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] document.</span></span>  
  
```csharp  
private void callScriptFunctionNoParamButton_Click(object sender, RoutedEventArgs e)  
{  
  // Make sure the HTML document has loaded before attempting to  
  // invoke script of the document page. You could set loadCompleted  
  // to true when the LoadCompleted event on the WebBrowser fires.  
  if (this.loadCompleted)  
  {  
    try  
    {  
      this.webBrowser.InvokeScript("JavaScriptFunctionWithoutParameters", this.messageTextBox.Text);  
    }  
    catch (Exception ex)  
    {  
      string msg = "Could not call script: " +  
                   ex.Message +  
                  "\n\nPlease click the 'Load HTML Document with Script' button to load.";  
      MessageBox.Show(msg);  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4744a-180">
            <see cref="T:System.Windows.Controls.WebBrowser" /> 執行個體不再有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-180">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4744a-181">無法擷取基礎原生 <c>WebBrowser</c> 的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-181">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="4744a-182">指令碼函式不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-182">The script function does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.WebBrowser.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event LoadCompleted As LoadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::LoadCompletedEventHandler ^ LoadCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4744a-183">發生於正在巡覽的文件已下載完成時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-183">Occurs when the document being navigated to has finished downloading.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4744a-184">巡覽的事件處理常式傳遞的執行個體<xref:System.Windows.Navigation.NavigationEventArgs>類別，可提供功能，包括 Web 回應的詳細資料的相關內容資訊。</span><span class="sxs-lookup"><span data-stu-id="4744a-184">Navigated event handlers are passed an instance of the <xref:System.Windows.Navigation.NavigationEventArgs> class, which provides contextual information about the navigation, including Web response details.</span></span>  
  
 <span data-ttu-id="4744a-185">針對最上層巡覽，只會引發此事件。</span><span class="sxs-lookup"><span data-stu-id="4744a-185">This event will only be fired for top-level navigations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.WebBrowser.Navigating" />
        <altmember cref="E:System.Windows.Controls.WebBrowser.Navigated" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4744a-186">以非同步方式，巡覽至位於指定之 <see cref="T:System.Uri" /> 的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-186">Navigate asynchronously to the document at the specified <see cref="T:System.Uri" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.Navigate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (source As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="4744a-187">要巡覽的目標 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-187">The URL to navigate to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4744a-188">以非同步方式，巡覽至位於指定之 URL 的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-188">Navigates asynchronously to the document at the specified URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4744a-189">使用<xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%29>方法，以巡覽至可能包含逸出字元的 URL。</span><span class="sxs-lookup"><span data-stu-id="4744a-189">Use the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%29> method to navigate to a URL that may include escape characters.</span></span> <span data-ttu-id="4744a-190">使用<xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29>方法，以瀏覽至<xref:System.Uri>不包含逸出字元。</span><span class="sxs-lookup"><span data-stu-id="4744a-190">Use the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29> method to navigate to a <xref:System.Uri> that does not include escape characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (source As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="4744a-191">要巡覽的目標 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-191">The <see cref="T:System.Uri" /> to navigate to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4744a-192">以非同步方式，巡覽至位於指定之 <see cref="T:System.Uri" /> 的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-192">Navigate asynchronously to the document at the specified <see cref="T:System.Uri" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4744a-193">呼叫<xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29>已設定相同的效果<xref:System.Windows.Controls.WebBrowser.Source%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="4744a-193">Calling <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29> has the same effect as setting the <xref:System.Windows.Controls.WebBrowser.Source%2A> property.</span></span> <span data-ttu-id="4744a-194"><xref:System.Windows.Controls.WebBrowser.Source%2A> 從標記使用的開發人員想要以宣告方式指定 初始文件<xref:System.Windows.Controls.WebBrowser>巡覽時<xref:System.Windows.Controls.WebBrowser>已初始化。</span><span class="sxs-lookup"><span data-stu-id="4744a-194"><xref:System.Windows.Controls.WebBrowser.Source%2A> is used from markup by developers who want to declaratively specify the initial document that <xref:System.Windows.Controls.WebBrowser> navigates to when <xref:System.Windows.Controls.WebBrowser> is initialized.</span></span>  
  
 <span data-ttu-id="4744a-195">使用<xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%29>方法，以巡覽至可能包含逸出字元的 URL。</span><span class="sxs-lookup"><span data-stu-id="4744a-195">Use the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%29> method to navigate to a URL that may include escape characters.</span></span> <span data-ttu-id="4744a-196">使用<xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29>方法，以瀏覽至<xref:System.Uri>不包含逸出字元。</span><span class="sxs-lookup"><span data-stu-id="4744a-196">Use the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29> method to navigate to a <xref:System.Uri> that does not include escape characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4744a-197">下列範例示範如何使用<xref:System.Windows.Controls.WebBrowser>瀏覽至文件使用<xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29>方法。</span><span class="sxs-lookup"><span data-stu-id="4744a-197">The following example shows how to use <xref:System.Windows.Controls.WebBrowser> to navigate to a document by using the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29> method.</span></span>  
  
```xaml  
<StackPanel>  
    <StackPanel Orientation="Horizontal">  
        <TextBox x:Name="addressTextBox" Width="200" />  
        <Button Click="goNavigateButton_Click">Go</Button>  
    </StackPanel>  
    <WebBrowser x:Name="myWebBrowser" />  
</StackPanel>  
```  
  
```csharp  
private void goNavigateButton_Click(object sender, RoutedEventArgs e)  
{  
    // Get URI to navigate to  
    Uri uri = new Uri(this.addressTextBox.Text, UriKind.RelativeOrAbsolute);  
  
    // Only absolute URIs can be navigated to  
    if (!uri.IsAbsoluteUri)  
    {  
        MessageBox.Show("The Address URI must be absolute eg 'http://www.microsoft.com'");  
        return;  
    }  
  
    // Navigate to the desired URL by calling the .Navigate method  
    this.myWebBrowser.Navigate(uri);  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4744a-198">
            <see cref="T:System.Windows.Controls.WebBrowser" /> 執行個體不再有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-198">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4744a-199">無法擷取基礎原生 <c>WebBrowser</c> 的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-199">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4744a-200">從部分信任中執行的應用程式巡覽至不在來源網站上的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-200">Navigation from an application that is running in partial trust to a <see cref="T:System.Uri" /> that is not located at the site of origin.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string source, string targetFrameName, byte[] postData, string additionalHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string source, string targetFrameName, unsigned int8[] postData, string additionalHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (source As String, targetFrameName As String, postData As Byte(), additionalHeaders As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ source, System::String ^ targetFrameName, cli::array &lt;System::Byte&gt; ^ postData, System::String ^ additionalHeaders);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="targetFrameName" Type="System.String" />
        <Parameter Name="postData" Type="System.Byte[]" />
        <Parameter Name="additionalHeaders" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="4744a-201">要巡覽的目標 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-201">The URL to navigate to.</span>
          </span>
        </param>
        <param name="targetFrameName">
          <span data-ttu-id="4744a-202">要在其中顯示文件內容的框架名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-202">The name of the frame to display the document's content in.</span>
          </span>
        </param>
        <param name="postData">
          <span data-ttu-id="4744a-203">要求來源時傳送至伺服器的 HTTP POST 資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-203">HTTP POST data to send to the server when the source is requested.</span>
          </span>
        </param>
        <param name="additionalHeaders">
          <span data-ttu-id="4744a-204">要求來源時傳送至伺服器的 HTTP 標頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-204">HTTP headers to send to the server when the source is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4744a-205">以非同步方式巡覽至位於指定之 URL 的文件，並且指定要載入文件內容的目標框架。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-205">Navigates asynchronously to the document at the specified URL and specify the target frame to load the document's content into.</span>
          </span>
          <span data-ttu-id="4744a-206">其他 HTTP POST 資料和 HTTP 標頭都可以隨巡覽要求傳送至伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-206">Additional HTTP POST data and HTTP headers can be sent to the server as part of the navigation request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4744a-207">使用<xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%2CSystem.String%2CSystem.Byte%5B%5D%2CSystem.String%29>方法，以巡覽至可能包含逸出字元的 URL。</span><span class="sxs-lookup"><span data-stu-id="4744a-207">Use the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%2CSystem.String%2CSystem.Byte%5B%5D%2CSystem.String%29> method to navigate to a URL that may include escape characters.</span></span> <span data-ttu-id="4744a-208">使用<xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%2CSystem.String%2CSystem.Byte%5B%5D%2CSystem.String%29>方法，以瀏覽至<xref:System.Uri>不包含逸出字元。</span><span class="sxs-lookup"><span data-stu-id="4744a-208">Use the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%2CSystem.String%2CSystem.Byte%5B%5D%2CSystem.String%29> method to navigate to a <xref:System.Uri> that does not include escape characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri source, string targetFrameName, byte[] postData, string additionalHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri source, string targetFrameName, unsigned int8[] postData, string additionalHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (source As Uri, targetFrameName As String, postData As Byte(), additionalHeaders As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ source, System::String ^ targetFrameName, cli::array &lt;System::Byte&gt; ^ postData, System::String ^ additionalHeaders);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="targetFrameName" Type="System.String" />
        <Parameter Name="postData" Type="System.Byte[]" />
        <Parameter Name="additionalHeaders" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="4744a-209">要巡覽的目標 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-209">The <see cref="T:System.Uri" /> to navigate to.</span>
          </span>
        </param>
        <param name="targetFrameName">
          <span data-ttu-id="4744a-210">要在其中顯示文件內容的框架名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-210">The name of the frame to display the document's content in.</span>
          </span>
        </param>
        <param name="postData">
          <span data-ttu-id="4744a-211">要求來源時傳送至伺服器的 HTTP POST 資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-211">HTTP POST data to send to the server when the source is requested.</span>
          </span>
        </param>
        <param name="additionalHeaders">
          <span data-ttu-id="4744a-212">要求來源時傳送至伺服器的 HTTP 標頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-212">HTTP headers to send to the server when the source is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4744a-213">以非同步方式巡覽至位於指定之 <see cref="T:System.Uri" /> 的文件，並且指定要載入文件內容的目標框架。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-213">Navigate asynchronously to the document at the specified <see cref="T:System.Uri" /> and specify the target frame to load the document's content into.</span>
          </span>
          <span data-ttu-id="4744a-214">其他 HTTP POST 資料和 HTTP 標頭都可以隨巡覽要求傳送至伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-214">Additional HTTP POST data and HTTP headers can be sent to the server as part of the navigation request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4744a-215">使用<xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%2CSystem.String%2CSystem.Byte%5B%5D%2CSystem.String%29>方法，以巡覽至可能包含逸出字元的 URL。</span><span class="sxs-lookup"><span data-stu-id="4744a-215">Use the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%2CSystem.String%2CSystem.Byte%5B%5D%2CSystem.String%29> method to navigate to a URL that may include escape characters.</span></span> <span data-ttu-id="4744a-216">使用<xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%2CSystem.String%2CSystem.Byte%5B%5D%2CSystem.String%29>方法，以瀏覽至<xref:System.Uri>不包含逸出字元。</span><span class="sxs-lookup"><span data-stu-id="4744a-216">Use the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%2CSystem.String%2CSystem.Byte%5B%5D%2CSystem.String%29> method to navigate to a <xref:System.Uri> that does not include escape characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4744a-217">下列範例示範如何瀏覽至文件，並在新的瀏覽器視窗中開啟藉由指定 「 關於： 空白"目標。</span><span class="sxs-lookup"><span data-stu-id="4744a-217">The following example shows how to navigate to a document and open it in a new browser window by specifying the "about:blank" target.</span></span>  
  
```xaml  
<StackPanel>  
    <StackPanel Orientation="Horizontal">  
        <TextBox x:Name="addressTextBox" Width="200" />  
        <Button Click="goNavigateButton_Click">Go</Button>  
    </StackPanel>  
    <WebBrowser x:Name="myWebBrowser" />  
</StackPanel>  
```  
  
```csharp  
private void goNavigateButton_Click(object sender, RoutedEventArgs e)  
{  
    // Get URI to navigate to  
    Uri uri = new Uri(this.addressTextBox.Text, UriKind.RelativeOrAbsolute);  
  
    // Only absolute URIs can be navigated to  
    if (!uri.IsAbsoluteUri)  
    {  
        MessageBox.Show("The Address URI must be absolute eg 'http://www.microsoft.com'");  
        return;  
    }  
  
    // Navigate to the desired URL by calling the .Navigate method  
    this.myWebBrowser.Navigate(uri, "_blank", null, null);  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4744a-218">
            <see cref="T:System.Windows.Controls.WebBrowser" /> 執行個體不再有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-218">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4744a-219">無法擷取基礎原生 <c>WebBrowser</c> 的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-219">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4744a-220">從部分信任中執行的應用程式巡覽至下列項目：</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-220">Navigation from an application that is running in partial trust:</span>
          </span>  
  
-   <span data-ttu-id="4744a-221">不在來源網站上的 <see cref="T:System.Uri" />，或是</span><span class="sxs-lookup"><span data-stu-id="4744a-221">To a <see cref="T:System.Uri" /> that is not located at the site of origin, or</span></span>  
  
-   <span data-ttu-id="4744a-222"><paramref name="targetFrameName" /> 名稱不是 <see langword="null" /> 或空的。</span><span class="sxs-lookup"><span data-stu-id="4744a-222"><paramref name="targetFrameName" /> name is not <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.WebBrowser.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Event Navigated As NavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatedEventHandler ^ Navigated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4744a-223">發生於找到正在巡覽的文件且已開始下載該文件時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-223">Occurs when the document being navigated to is located and has started downloading.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4744a-224">巡覽的事件處理常式傳遞的執行個體<xref:System.Windows.Navigation.NavigationEventArgs>類別，可提供功能，包括 Web 回應的詳細資料的相關內容資訊。</span><span class="sxs-lookup"><span data-stu-id="4744a-224">Navigated event handlers are passed an instance of the <xref:System.Windows.Navigation.NavigationEventArgs> class, which provides contextual information about the navigation, including Web response details.</span></span>  
  
 <span data-ttu-id="4744a-225">針對最上層巡覽，只會引發此事件。</span><span class="sxs-lookup"><span data-stu-id="4744a-225">This event will only be fired for top-level navigations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.WebBrowser.Navigating" />
        <altmember cref="E:System.Windows.Controls.WebBrowser.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="NavigateToStream">
      <MemberSignature Language="C#" Value="public void NavigateToStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NavigateToStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.NavigateToStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NavigateToStream(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="4744a-226">包含文件內容的 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-226">The <see cref="T:System.IO.Stream" /> that contains the content for a document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4744a-227">以非同步方式，巡覽至包含文件內容的 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-227">Navigate asynchronously to a <see cref="T:System.IO.Stream" /> that contains the content for a document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4744a-228">如果`stream`參數是`null`，<xref:System.Windows.Controls.WebBrowser>巡覽至空白文件 (「 關於： 空白 」)。</span><span class="sxs-lookup"><span data-stu-id="4744a-228">If the `stream` parameter is `null`, <xref:System.Windows.Controls.WebBrowser> navigates to a blank document ("about:blank").</span></span>  
  
 <span data-ttu-id="4744a-229">如果資料流參數不在有效[!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)]格式，就會顯示為純文字。</span><span class="sxs-lookup"><span data-stu-id="4744a-229">If the stream parameter is not in a valid [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] format, it will be displayed as plain text.</span></span>  
  
 <span data-ttu-id="4744a-230">在瀏覽之後,<xref:System.Windows.Controls.WebBrowser.Source%2A>將`null`。</span><span class="sxs-lookup"><span data-stu-id="4744a-230">After navigation, <xref:System.Windows.Controls.WebBrowser.Source%2A> will be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4744a-231">下列範例會示範如何瀏覽至包含文件的資料流。</span><span class="sxs-lookup"><span data-stu-id="4744a-231">The following example shows how to navigate to a stream that contains a document.</span></span>  
  
```csharp  
private void goNavigateToStreamButton_Click(object sender, RoutedEventArgs e)  
{  
  // Load HTML document as a stream  
  Uri uri = new Uri(@"pack://application:,,,/HTMLDocumentWithScript.html", UriKind.Absolute);  
  Stream source = Application.GetResourceStream(uri).Stream;  
  
  // Navigate to HTML document stream  
  this.webBrowser.NavigateToStream(source);  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4744a-232">
            <see cref="T:System.Windows.Controls.WebBrowser" /> 執行個體不再有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-232">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4744a-233">無法擷取基礎原生 <c>WebBrowser</c> 的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-233">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Controls.WebBrowser.NavigateToString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="NavigateToString">
      <MemberSignature Language="C#" Value="public void NavigateToString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NavigateToString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.NavigateToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NavigateToString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NavigateToString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="4744a-234">包含文件內容的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-234">The <see cref="T:System.String" /> that contains the content for a document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4744a-235">以非同步方式，巡覽至包含文件內容的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-235">Navigate asynchronously to a <see cref="T:System.String" /> that contains the content for a document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4744a-236">如果`text`參數是`null`，<xref:System.Windows.Controls.WebBrowser>巡覽至空白文件 (「 關於： 空白 」)。</span><span class="sxs-lookup"><span data-stu-id="4744a-236">If the `text` parameter is `null`, <xref:System.Windows.Controls.WebBrowser> navigates to a blank document ("about:blank").</span></span>  
  
 <span data-ttu-id="4744a-237">如果文字參數不在有效[!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)]格式，就會顯示為純文字。</span><span class="sxs-lookup"><span data-stu-id="4744a-237">If the text parameter is not in valid [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] format, it will be displayed as plain text.</span></span>  
  
 <span data-ttu-id="4744a-238">在瀏覽之後,<xref:System.Windows.Controls.WebBrowser.Source%2A>將`null`。</span><span class="sxs-lookup"><span data-stu-id="4744a-238">After navigation, <xref:System.Windows.Controls.WebBrowser.Source%2A> will be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4744a-239">下列範例會示範如何瀏覽至包含文件的字串。</span><span class="sxs-lookup"><span data-stu-id="4744a-239">The following example shows how to navigate to a string that contains a document.</span></span>  
  
```csharp  
private void goNavigateToStringButton_Click(object sender, RoutedEventArgs e)  
{  
  // Load HTML document as a string  
  Uri uri = new Uri(@"pack://application:,,,/HTMLDocumentWithoutScript.html", UriKind.Absolute);  
  Stream stream = Application.GetResourceStream(uri).Stream;  
  using (StreamReader reader = new StreamReader(stream))  
  {  
    // Navigate to HTML document string  
    this.webBrowser.NavigateToString(reader.ReadToEnd());  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4744a-240">
            <see cref="T:System.Windows.Controls.WebBrowser" /> 執行個體不再有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-240">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4744a-241">無法擷取基礎原生 <c>WebBrowser</c> 的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-241">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Controls.WebBrowser.NavigateToStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.WebBrowser.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Event Navigating As NavigatingCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatingCancelEventHandler ^ Navigating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4744a-242">發生於正要巡覽至文件之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-242">Occurs just before navigation to a document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4744a-243">瀏覽的事件處理常式傳遞的執行個體<xref:System.Windows.Navigation.NavigatingCancelEventArgs>類別。</span><span class="sxs-lookup"><span data-stu-id="4744a-243">Navigating event handlers are passed an instance of the <xref:System.Windows.Navigation.NavigatingCancelEventArgs> class.</span></span> <span data-ttu-id="4744a-244">您可以藉由設定取消瀏覽<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Windows.Navigation.NavigatingCancelEventArgs>物件`true`。</span><span class="sxs-lookup"><span data-stu-id="4744a-244">You can cancel the navigation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Navigation.NavigatingCancelEventArgs> object to `true`.</span></span>  
  
 <span data-ttu-id="4744a-245">針對最上層巡覽，只會引發此事件。</span><span class="sxs-lookup"><span data-stu-id="4744a-245">This event will only be fired for top-level navigations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.WebBrowser.Navigated" />
        <altmember cref="E:System.Windows.Controls.WebBrowser.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="ObjectForScripting">
      <MemberSignature Language="C#" Value="public object ObjectForScripting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectForScripting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.WebBrowser.ObjectForScripting" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectForScripting As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectForScripting { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4744a-246">取得或設定主應用程式實作之 public 類別的執行個體，該執行個體可以透過指令碼從裝載的文件存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-246">Gets or sets an instance of a public class, implemented by the host application, that can be accessed by script from a hosted document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4744a-247">
            <see cref="T:System.Object" />，為主應用程式實作之 <see langword="public" /> 類別的執行個體，該執行個體可以透過指令碼從裝載的文件存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-247">The <see cref="T:System.Object" /> that is an instance of a <see langword="public" /> class, implemented by the host application, that can be accessed by script from a hosted document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4744a-248">這個屬性可以設定您要其公用屬性和方法的指令碼使用任何 COM 可見的物件。</span><span class="sxs-lookup"><span data-stu-id="4744a-248">This property can be set to any COM-visible object for which you want its public properties and methods available to scripting code.</span></span> <span data-ttu-id="4744a-249">您可以讓 COM 可見的類別標示為與<xref:System.Runtime.InteropServices.ComVisibleAttribute>。</span><span class="sxs-lookup"><span data-stu-id="4744a-249">You can make a class COM-visible by marking it with the <xref:System.Runtime.InteropServices.ComVisibleAttribute>.</span></span>  
  
 <span data-ttu-id="4744a-250">已設定的指令碼目前的文件所公開的物件[!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)]DOM 使用`window.external`屬性。</span><span class="sxs-lookup"><span data-stu-id="4744a-250">The object that is set for scripting is exposed to the current document by the [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] DOM using the `window.external` property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4744a-251">
            <see cref="P:System.Windows.Controls.WebBrowser.ObjectForScripting" /> 是以非 <see langword="COMVisible" /> 型別的執行個體設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-251">
              <see cref="P:System.Windows.Controls.WebBrowser.ObjectForScripting" /> is set with an instance of type that is not <see langword="COMVisible" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4744a-252">重新載入目前頁面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-252">Reloads the current page.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4744a-253">重新載入目前頁面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-253">Reloads the current page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4744a-254">
            <see cref="T:System.Windows.Controls.WebBrowser" /> 執行個體不再有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-254">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4744a-255">無法擷取基礎原生 <c>WebBrowser</c> 的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-255">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (bool noCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(bool noCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.Refresh(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (noCache As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(bool noCache);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noCache" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noCache">
          <span data-ttu-id="4744a-256">指定是否重新整理但不進行快取驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-256">Specifies whether to refresh without cache validation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4744a-257">搭配選擇性快取驗證，重新載入目前頁面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-257">Reloads the current page with optional cache validation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4744a-258">如果`noCache`是`true`、<xref:System.Windows.Controls.WebBrowser>控制重新整理，而且不進行快取驗證傳送"Pragma:no-快取 」 標頭至伺服器。</span><span class="sxs-lookup"><span data-stu-id="4744a-258">If `noCache` is `true`, the <xref:System.Windows.Controls.WebBrowser> control refreshes without cache validation by sending a "Pragma:no-cache" header to the server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4744a-259">
            <see cref="T:System.Windows.Controls.WebBrowser" /> 執行個體不再有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-259">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4744a-260">無法擷取基礎原生 <c>WebBrowser</c> 的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-260">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.WebBrowser.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4744a-261">取得或設定 <see cref="T:System.Uri" /> 中目前裝載之文件的 <see cref="T:System.Windows.Controls.WebBrowser" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-261">Gets or sets the <see cref="T:System.Uri" /> of the current document hosted in the <see cref="T:System.Windows.Controls.WebBrowser" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4744a-262">
            <see cref="T:System.Uri" />目前[!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)]文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-262">The <see cref="T:System.Uri" /> for the current [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4744a-263">設定的來源屬性原因<xref:System.Windows.Controls.WebBrowser>瀏覽至所指定的文件<xref:System.Uri>。</span><span class="sxs-lookup"><span data-stu-id="4744a-263">Setting the source property causes <xref:System.Windows.Controls.WebBrowser> to navigate to the document specified by the <xref:System.Uri>.</span></span> <span data-ttu-id="4744a-264">如果<xref:System.Uri>是`null`，會顯示空白文件 (「 關於： 空白 」)。</span><span class="sxs-lookup"><span data-stu-id="4744a-264">If the <xref:System.Uri> is `null`, a blank document is displayed ("about:blank").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4744a-265">下列範例示範如何設定<xref:System.Windows.Controls.WebBrowser>瀏覽至[!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)]使用只有標記的文件。</span><span class="sxs-lookup"><span data-stu-id="4744a-265">The following example shows how to configure <xref:System.Windows.Controls.WebBrowser> to navigate to an [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] document by using markup only.</span></span>  
  
```xaml  
<!-- Web Browser Control that hosts a web page. -->  
<WebBrowser x:Name="webBrowser" Source="http://msdn.com"   
  Width="600" Height="600"  />  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4744a-266">
            <see cref="T:System.Windows.Controls.WebBrowser" /> 執行個體不再有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-266">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4744a-267">無法擷取基礎原生 <c>WebBrowser</c> 的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-267">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="4744a-268">從部分信任中執行的應用程式巡覽至不在來源網站上的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4744a-268">Navigation from an application that is running in partial trust to a <see cref="T:System.Uri" /> that is not located at the site of origin.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TabIntoCore">
      <MemberSignature Language="C#" Value="protected override bool TabIntoCore (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TabIntoCore(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.TabIntoCore(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TabIntoCore (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TabIntoCore(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateAcceleratorCore">
      <MemberSignature Language="C#" Value="protected override bool TranslateAcceleratorCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TranslateAcceleratorCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TranslateAcceleratorCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TranslateAcceleratorCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">To be added.</param>
        <param name="modifiers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>