<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataTemplateSelector.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57cf6ef824251b65f85296296a1a43a3ae2db5d26.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cf6ef824251b65f85296296a1a43a3ae2db5d26</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>Provides a way to choose a <ph id="ph1">&lt;see cref="T:System.Windows.DataTemplate" /&gt;</ph> based on the data object and the data-bound element.</source>
          <target state="translated">根據資料物件和資料繫結項目，提供方法來選擇 <ph id="ph1">&lt;see cref="T:System.Windows.DataTemplate" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>Typically, you create a <ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph> when you have more than one <ph id="ph2">&lt;xref:System.Windows.DataTemplate&gt;</ph> for the same type of objects and you want to supply your own logic to choose a <ph id="ph3">&lt;xref:System.Windows.DataTemplate&gt;</ph> to apply based on the properties of each data object.</source>
          <target state="translated">通常您會建立<ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph>有一個以上<ph id="ph2">&lt;xref:System.Windows.DataTemplate&gt;</ph>相同類型的物件，而且您想要提供您自己選擇的邏輯<ph id="ph3">&lt;xref:System.Windows.DataTemplate&gt;</ph>套用根據每個資料物件的屬性。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>Note that if you have objects of different types you can set the <ph id="ph1">&lt;xref:System.Windows.DataTemplate.DataType%2A&gt;</ph> property on the <ph id="ph2">&lt;xref:System.Windows.DataTemplate&gt;</ph>.</source>
          <target state="translated">請注意，如果您有不同的物件類型與您可以設定<ph id="ph1">&lt;xref:System.Windows.DataTemplate.DataType%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Windows.DataTemplate&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>If you do that then there is no need to create a <ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph>.</source>
          <target state="translated">如果您這麼做，則不需要建立<ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>Furthermore, if you have objects of the same type but with different properties, you can also consider using a <ph id="ph1">&lt;xref:System.Windows.DataTrigger&gt;</ph> or a data converter.</source>
          <target state="translated">此外，如果您有物件類型相同，但具有不同的屬性時，您也可以考慮使用<ph id="ph1">&lt;xref:System.Windows.DataTrigger&gt;</ph>或資料轉換。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>For more information, see <bpt id="p1">[</bpt>Data Templating Overview<ept id="p1">](~/docs/framework/wpf/data/data-templating-overview.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱 <bpt id="p1">[</bpt>資料範本化概觀<ept id="p1">](~/docs/framework/wpf/data/data-templating-overview.md)</ept>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>To create a template selector, create a class that inherits from <ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph> and override the <ph id="ph2">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> method.</source>
          <target state="translated">若要建立範本選擇器，請建立繼承自類別<ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph>並覆寫<ph id="ph2">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>Once your class is defined you can assign an instance of the class to the template selector property of your element.</source>
          <target state="translated">您的類別定義之後您可以指派給您的項目範本選取器屬性的類別的執行個體。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>In this example, the binding source is a list of <ph id="ph1">`Task`</ph> objects.</source>
          <target state="translated">在此範例中，繫結來源是一份<ph id="ph1">`Task`</ph>物件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>One of the properties of a <ph id="ph1">`Task`</ph> object is <ph id="ph2">`Priority`</ph>.</source>
          <target state="translated">其中一個屬性<ph id="ph1">`Task`</ph>物件是<ph id="ph2">`Priority`</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>There are two data templates defined, <ph id="ph1">`myTaskTemplate`</ph> and <ph id="ph2">`importantTaskTemplate`</ph>.</source>
          <target state="translated">有兩個資料範本定義，<ph id="ph1">`myTaskTemplate`</ph>和<ph id="ph2">`importantTaskTemplate`</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>To supply logic to choose which <ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph> to use based on the <ph id="ph2">`Priority`</ph> value of the data object, create a subclass of <ph id="ph3">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph> and override the <ph id="ph4">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> method.</source>
          <target state="translated">要提供邏輯來選擇<ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph>使用基於<ph id="ph2">`Priority`</ph>值的資料物件，建立的子類別<ph id="ph3">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph>並覆寫<ph id="ph4">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>In the following example, the <ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> method provides logic to return the appropriate template based on the value of the <ph id="ph2">`Priority`</ph> property.</source>
          <target state="translated">在下列範例中，<ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph>方法提供邏輯，以傳回適當的值為基礎的範本<ph id="ph2">`Priority`</ph>屬性。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>The template to return is found in the resources of the enveloping <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> element.</source>
          <target state="translated">傳回範本的資源封套中找到<ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>項目。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>We can then declare the <ph id="ph1">`TaskListDataTemplateSelector`</ph> as a resource:</source>
          <target state="translated">然後，就可以宣告<ph id="ph1">`TaskListDataTemplateSelector`</ph> 為資源：</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>To use the template selector resource, assign it to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.</source>
          <target state="translated">若要使用的範本選擇器資源，將它指派給<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> calls the <ph id="ph2">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> method of the <ph id="ph3">`TaskListDataTemplateSelector`</ph> for each of the items in the underlying collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph>方法<ph id="ph3">`TaskListDataTemplateSelector`</ph>每個基礎的集合中的項目。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>The call passes the data object as the item parameter.</source>
          <target state="translated">該呼叫會將資料物件當做項目參數傳遞。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>The <ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph> that is returned by the method is then applied to that data object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph>所傳回的方法適用於該資料物件。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.DataTemplateSelector">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Introduction to Data Templating Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160009)</ept>.</source>
          <target state="translated">如需完整範例，請參閱<bpt id="p1">[</bpt>資料範本化範例簡介<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160009)</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataTemplateSelector.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.DataTemplateSelector" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.DataTemplateSelector" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>The data object for which to select the template.</source>
          <target state="translated">要選取範本的資料物件。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>The data-bound object.</source>
          <target state="translated">資料繫結物件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>When overridden in a derived class, returns a <ph id="ph1">&lt;see cref="T:System.Windows.DataTemplate" /&gt;</ph> based on custom logic.</source>
          <target state="translated">在衍生類別中覆寫時，根據自訂邏輯傳回 <ph id="ph1">&lt;see cref="T:System.Windows.DataTemplate" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.DataTemplate" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Windows.DataTemplate" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">預設值是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>Typically, you use a template selector when you have more than one data template defined for the same type of objects.</source>
          <target state="translated">一般而言，當您有多個相同類型的物件定義的資料範本時使用範本選擇器。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>For example, if your binding source is list a list of student objects and you want to apply a particular template to the part-time students.</source>
          <target state="translated">比方說，如果您的繫結來源是清單學生物件清單和您想要特定範本可用於兼職學生。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>You can do this by creating a class that inherits from <ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph> and overriding the <ph id="ph2">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> method.</source>
          <target state="translated">您可以藉由建立繼承自一個類別<ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph>和覆寫<ph id="ph2">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>Once your class is defined you can assign an instance of the class to the template selector property of your element.</source>
          <target state="translated">您的類別定義之後您可以指派給您的項目範本選取器屬性的類別的執行個體。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>In this example, the binding source is a list of <ph id="ph1">`Task`</ph> objects.</source>
          <target state="translated">在此範例中，繫結來源是一份<ph id="ph1">`Task`</ph>物件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>One of the properties of a <ph id="ph1">`Task`</ph> object is <ph id="ph2">`Priority`</ph>.</source>
          <target state="translated">其中一個屬性<ph id="ph1">`Task`</ph>物件是<ph id="ph2">`Priority`</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>There are two data templates defined, <ph id="ph1">`myTaskTemplate`</ph> and <ph id="ph2">`importantTaskTemplate`</ph>.</source>
          <target state="translated">有兩個資料範本定義，<ph id="ph1">`myTaskTemplate`</ph>和<ph id="ph2">`importantTaskTemplate`</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>To supply logic to choose which <ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph> to use based on the <ph id="ph2">`Priority`</ph> value of the data object, create a subclass of <ph id="ph3">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph> and override the <ph id="ph4">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> method.</source>
          <target state="translated">要提供邏輯來選擇<ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph>使用基於<ph id="ph2">`Priority`</ph>值的資料物件，建立的子類別<ph id="ph3">&lt;xref:System.Windows.Controls.DataTemplateSelector&gt;</ph>並覆寫<ph id="ph4">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>In the following example, the <ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> method provides logic to return the appropriate template based on the value of the <ph id="ph2">`Priority`</ph> property.</source>
          <target state="translated">在下列範例中，<ph id="ph1">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph>方法提供邏輯，以傳回適當的值為基礎的範本<ph id="ph2">`Priority`</ph>屬性。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>The template to return is found in the resources of the enveloping <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> element.</source>
          <target state="translated">傳回範本的資源封套中找到<ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>項目。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>We can then declare the <ph id="ph1">`TaskListDataTemplateSelector`</ph> as a resource:</source>
          <target state="translated">然後，就可以宣告<ph id="ph1">`TaskListDataTemplateSelector`</ph> 為資源：</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>To use the template selector resource, assign it to the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.</source>
          <target state="translated">若要使用的範本選擇器資源，將它指派給<ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> calls the <ph id="ph2">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph> method of the <ph id="ph3">`TaskListDataTemplateSelector`</ph> for each of the items in the underlying collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A&gt;</ph>方法<ph id="ph3">`TaskListDataTemplateSelector`</ph>每個基礎的集合中的項目。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>The call passes the data object as the item parameter.</source>
          <target state="translated">該呼叫會將資料物件當做項目參數傳遞。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph> that is returned by the method is then applied to that data object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.DataTemplate&gt;</ph>所傳回的方法適用於該資料物件。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Introduction to Data Templating Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160009)</ept>.</source>
          <target state="translated">如需完整範例，請參閱<bpt id="p1">[</bpt>資料範本化範例簡介<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160009)</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>