<Type Name="DataTemplateSelector" FullName="System.Windows.Controls.DataTemplateSelector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="271e7c38cc10fbd95311f2bf4e47dc463478752a" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51882451" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataTemplateSelector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTemplateSelector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.DataTemplateSelector" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTemplateSelector" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTemplateSelector" />
  <TypeSignature Language="F#" Value="type DataTemplateSelector = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4a7a7-101">根據資料物件和資料繫結項目，提供方法來選擇 <see cref="T:System.Windows.DataTemplate" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a7a7-101">Provides a way to choose a <see cref="T:System.Windows.DataTemplate" /> based on the data object and the data-bound element.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7a7-102">一般而言，您會建立<xref:System.Windows.Controls.DataTemplateSelector>有一個以上<xref:System.Windows.DataTemplate>相同類型的物件，而且您想要提供您自己的邏輯，來選擇<xref:System.Windows.DataTemplate>將根據每個資料物件的屬性。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-102">Typically, you create a <xref:System.Windows.Controls.DataTemplateSelector> when you have more than one <xref:System.Windows.DataTemplate> for the same type of objects and you want to supply your own logic to choose a <xref:System.Windows.DataTemplate> to apply based on the properties of each data object.</span></span> <span data-ttu-id="4a7a7-103">請注意，如果您有不同的物件型別可以設定<xref:System.Windows.DataTemplate.DataType%2A>屬性上的<xref:System.Windows.DataTemplate>。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-103">Note that if you have objects of different types you can set the <xref:System.Windows.DataTemplate.DataType%2A> property on the <xref:System.Windows.DataTemplate>.</span></span> <span data-ttu-id="4a7a7-104">如果您這麼做，則不需要建立<xref:System.Windows.Controls.DataTemplateSelector>。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-104">If you do that then there is no need to create a <xref:System.Windows.Controls.DataTemplateSelector>.</span></span> <span data-ttu-id="4a7a7-105">此外，如果您有物件型別相同，但有不同的屬性，您也可以考慮使用<xref:System.Windows.DataTrigger>或資料轉換子。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-105">Furthermore, if you have objects of the same type but with different properties, you can also consider using a <xref:System.Windows.DataTrigger> or a data converter.</span></span> <span data-ttu-id="4a7a7-106">如需詳細資訊，請參閱 [資料範本化概觀](~/docs/framework/wpf/data/data-templating-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-106">For more information, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
 <span data-ttu-id="4a7a7-107">若要建立的範本選取器，請建立繼承自類別<xref:System.Windows.Controls.DataTemplateSelector>，並覆寫<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-107">To create a template selector, create a class that inherits from <xref:System.Windows.Controls.DataTemplateSelector> and override the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="4a7a7-108">一旦您的類別定義您可以指派至您的項目範本選取器屬性的類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-108">Once your class is defined you can assign an instance of the class to the template selector property of your element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a7a7-109">在此範例中，繫結來源是一份`Task`物件。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-109">In this example, the binding source is a list of `Task` objects.</span></span> <span data-ttu-id="4a7a7-110">屬性之一`Task`物件是`Priority`。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-110">One of the properties of a `Task` object is `Priority`.</span></span> <span data-ttu-id="4a7a7-111">有兩個定義的資料範本`myTaskTemplate`和`importantTaskTemplate`。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-111">There are two data templates defined, `myTaskTemplate` and `importantTaskTemplate`.</span></span>  
  
 <span data-ttu-id="4a7a7-112">若要提供邏輯以選擇哪些<xref:System.Windows.DataTemplate>使用根據`Priority`值的資料物件，建立的子類別<xref:System.Windows.Controls.DataTemplateSelector>，並覆寫<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-112">To supply logic to choose which <xref:System.Windows.DataTemplate> to use based on the `Priority` value of the data object, create a subclass of <xref:System.Windows.Controls.DataTemplateSelector> and override the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="4a7a7-113">在下列範例中，<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>方法會提供邏輯，以傳回適當的值為基礎的範本`Priority`屬性。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-113">In the following example, the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method provides logic to return the appropriate template based on the value of the `Priority` property.</span></span> <span data-ttu-id="4a7a7-114">要傳回範本的資源封套中找到<xref:System.Windows.Window>項目。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-114">The template to return is found in the resources of the enveloping <xref:System.Windows.Window> element.</span></span>  
  
 [!code-csharp[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/TaskListDataTemplateSelector.cs#dtsclass)]
 [!code-vb[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataTemplatingIntro_snip/visualbasic/tasklistdatatemplateselector.vb#dtsclass)]  
  
 <span data-ttu-id="4a7a7-115">然後，就可以宣告`TaskListDataTemplateSelector` 為資源：</span><span class="sxs-lookup"><span data-stu-id="4a7a7-115">We can then declare the `TaskListDataTemplateSelector` as a resource:</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xaml[DataTemplatingIntro_snip#DTS](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#dts)]  
[!code-xaml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 <span data-ttu-id="4a7a7-116">若要使用的範本選取器資源，將它指派給<xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A>屬性<xref:System.Windows.Controls.ListBox>。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-116">To use the template selector resource, assign it to the <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property of the <xref:System.Windows.Controls.ListBox>.</span></span> <span data-ttu-id="4a7a7-117"><xref:System.Windows.Controls.ListBox>呼叫<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>方法`TaskListDataTemplateSelector`針對每個基礎集合中的項目。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-117">The <xref:System.Windows.Controls.ListBox> calls the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method of the `TaskListDataTemplateSelector` for each of the items in the underlying collection.</span></span> <span data-ttu-id="4a7a7-118">該呼叫會將資料物件當做項目參數傳遞。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-118">The call passes the data object as the item parameter.</span></span> <span data-ttu-id="4a7a7-119"><xref:System.Windows.DataTemplate>時所傳回的方法適用於該資料物件。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-119">The <xref:System.Windows.DataTemplate> that is returned by the method is then applied to that data object.</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#ItemTemplateSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#itemtemplateselector)]  
  
 <span data-ttu-id="4a7a7-120">如需完整範例，請參閱[資料範本化範例簡介](https://go.microsoft.com/fwlink/?LinkID=160009)。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-120">For the complete sample, see [Introduction to Data Templating Sample](https://go.microsoft.com/fwlink/?LinkID=160009).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTemplateSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataTemplateSelector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTemplateSelector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a7a7-121">初始化 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7a7-121">Initializes a new instance of the <see cref="T:System.Windows.Controls.DataTemplateSelector" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DataTemplate SelectTemplate (object item, System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DataTemplate SelectTemplate(object item, class System.Windows.DependencyObject container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectTemplate (item As Object, container As DependencyObject) As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DataTemplate ^ SelectTemplate(System::Object ^ item, System::Windows::DependencyObject ^ container);" />
      <MemberSignature Language="F#" Value="abstract member SelectTemplate : obj * System.Windows.DependencyObject -&gt; System.Windows.DataTemplate&#xA;override this.SelectTemplate : obj * System.Windows.DependencyObject -&gt; System.Windows.DataTemplate" Usage="dataTemplateSelector.SelectTemplate (item, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="4a7a7-122">要選取範本的資料物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7a7-122">The data object for which to select the template.</span>
          </span>
        </param>
        <param name="container">
          <span data-ttu-id="4a7a7-123">資料繫結物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7a7-123">The data-bound object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a7a7-124">在衍生類別中覆寫時，根據自訂邏輯傳回 <see cref="T:System.Windows.DataTemplate" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7a7-124">When overridden in a derived class, returns a <see cref="T:System.Windows.DataTemplate" /> based on custom logic.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a7a7-125">傳回 <see cref="T:System.Windows.DataTemplate" /> 或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7a7-125">Returns a <see cref="T:System.Windows.DataTemplate" /> or <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4a7a7-126">預設值是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7a7-126">The default value is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7a7-127">一般而言，您使用的範本選取器，當您有多個相同類型的物件定義的資料範本。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-127">Typically, you use a template selector when you have more than one data template defined for the same type of objects.</span></span> <span data-ttu-id="4a7a7-128">比方說，如果繫結來源清單學生物件清單和您想要將特定的範本套用到兼職的學生。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-128">For example, if your binding source is list a list of student objects and you want to apply a particular template to the part-time students.</span></span> <span data-ttu-id="4a7a7-129">您可以藉由建立繼承自類別<xref:System.Windows.Controls.DataTemplateSelector>，並覆寫<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-129">You can do this by creating a class that inherits from <xref:System.Windows.Controls.DataTemplateSelector> and overriding the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="4a7a7-130">一旦您的類別定義您可以指派至您的項目範本選取器屬性的類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-130">Once your class is defined you can assign an instance of the class to the template selector property of your element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a7a7-131">在此範例中，繫結來源是一份`Task`物件。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-131">In this example, the binding source is a list of `Task` objects.</span></span> <span data-ttu-id="4a7a7-132">屬性之一`Task`物件是`Priority`。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-132">One of the properties of a `Task` object is `Priority`.</span></span> <span data-ttu-id="4a7a7-133">有兩個定義的資料範本`myTaskTemplate`和`importantTaskTemplate`。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-133">There are two data templates defined, `myTaskTemplate` and `importantTaskTemplate`.</span></span>  
  
 <span data-ttu-id="4a7a7-134">若要提供邏輯以選擇哪些<xref:System.Windows.DataTemplate>使用根據`Priority`值的資料物件，建立的子類別<xref:System.Windows.Controls.DataTemplateSelector>，並覆寫<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-134">To supply logic to choose which <xref:System.Windows.DataTemplate> to use based on the `Priority` value of the data object, create a subclass of <xref:System.Windows.Controls.DataTemplateSelector> and override the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="4a7a7-135">在下列範例中，<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>方法會提供邏輯，以傳回適當的值為基礎的範本`Priority`屬性。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-135">In the following example, the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method provides logic to return the appropriate template based on the value of the `Priority` property.</span></span> <span data-ttu-id="4a7a7-136">要傳回範本的資源封套中找到<xref:System.Windows.Window>項目。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-136">The template to return is found in the resources of the enveloping <xref:System.Windows.Window> element.</span></span>  
  
 [!code-csharp[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/TaskListDataTemplateSelector.cs#dtsclass)]
 [!code-vb[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataTemplatingIntro_snip/visualbasic/tasklistdatatemplateselector.vb#dtsclass)]  
  
 <span data-ttu-id="4a7a7-137">然後，就可以宣告`TaskListDataTemplateSelector` 為資源：</span><span class="sxs-lookup"><span data-stu-id="4a7a7-137">We can then declare the `TaskListDataTemplateSelector` as a resource:</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xaml[DataTemplatingIntro_snip#DTS](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#dts)]  
[!code-xaml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 <span data-ttu-id="4a7a7-138">若要使用的範本選取器資源，將它指派給<xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A>屬性<xref:System.Windows.Controls.ListBox>。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-138">To use the template selector resource, assign it to the <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property of the <xref:System.Windows.Controls.ListBox>.</span></span> <span data-ttu-id="4a7a7-139"><xref:System.Windows.Controls.ListBox>呼叫<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>方法`TaskListDataTemplateSelector`針對每個基礎集合中的項目。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-139">The <xref:System.Windows.Controls.ListBox> calls the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method of the `TaskListDataTemplateSelector` for each of the items in the underlying collection.</span></span> <span data-ttu-id="4a7a7-140">該呼叫會將資料物件當做項目參數傳遞。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-140">The call passes the data object as the item parameter.</span></span> <span data-ttu-id="4a7a7-141"><xref:System.Windows.DataTemplate>時所傳回的方法適用於該資料物件。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-141">The <xref:System.Windows.DataTemplate> that is returned by the method is then applied to that data object.</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#ItemTemplateSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#itemtemplateselector)]  
  
 <span data-ttu-id="4a7a7-142">如需完整範例，請參閱[資料範本化範例簡介](https://go.microsoft.com/fwlink/?LinkID=160009)。</span><span class="sxs-lookup"><span data-stu-id="4a7a7-142">For the complete sample, see [Introduction to Data Templating Sample](https://go.microsoft.com/fwlink/?LinkID=160009).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>