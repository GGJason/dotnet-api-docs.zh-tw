<Type Name="ListView" FullName="System.Windows.Controls.ListView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f03ff406f9f74df6221e04e61262fb18a1ba32ee" /><Meta Name="ms.sourcegitcommit" Value="22744e2f9d07a51900a968efffd9e390117d64a1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/03/2019" /><Meta Name="ms.locfileid" Value="55671105" /></Metadata><TypeSignature Language="C#" Value="public class ListView : System.Windows.Controls.ListBox" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ListView extends System.Windows.Controls.ListBox" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ListView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView&#xA;Inherits ListBox" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListView : System::Windows::Controls::ListBox" />
  <TypeSignature Language="F#" Value="type ListView = class&#xA;    inherit ListBox" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ListBox</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.ListViewItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>代表顯示資料項目清單的控制項。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ListView> 是<xref:System.Windows.Controls.ItemsControl>，這表示它可以包含任何類型 （例如字串、 影像或面板） 之物件的集合。 如需詳細資訊，請參閱 <xref:System.Windows.Controls.ItemsControl> 類別。  
  
 資料中的項目 presentation<xref:System.Windows.Controls.ListView>由它所指定的檢視模式所定義<xref:System.Windows.Controls.ListView.View%2A>屬性。 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 提供<xref:System.Windows.Controls.GridView>資料分割的檢視模式<xref:System.Windows.Controls.ListView>資料項目插入資料行的內容。 屬性和方法上的<xref:System.Windows.Controls.GridView>及其相關的類別樣式，以及指定資料行的內容。  
  
 如下圖所示<xref:System.Windows.Controls.ListView>與<xref:System.Windows.Controls.GridView>檢視。  
  
 ![ListView 與 GridView 輸出](~/add/media/listviewgridview.JPG "ListView 與 GridView 輸出")  
  
 您也可以藉由建立衍生自的類別定義的自訂檢視<xref:System.Windows.Controls.ViewBase>。 如需詳細資訊，請參閱[＜How to：建立 ListView 的自訂檢視模式](~/docs/framework/wpf/controls/how-to-create-a-custom-view-mode-for-a-listview.md)。  
  
 如果您定義自訂<xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A>for<xref:System.Windows.Controls.ListView>控制，而且也定義<xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>，您必須包含<xref:System.Windows.Controls.ContentPresenter>在<xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A>。 <xref:System.Windows.Controls.ContentPresenter>需要<xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>才能正常運作。  
  
 若要避免在對齊問題<xref:System.Windows.Controls.GridView>檢視模式，請勿將內容新增或設定屬性，以影響中項目的寬度<xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A>的<xref:System.Windows.Controls.ListView>。 若要防止發生對齊問題，使用屬性和定義的範本<xref:System.Windows.Controls.GridView>檢視模式。 這包括屬性和定義的類別中所使用的範本<xref:System.Windows.Controls.GridView>檢視模式中，例如<xref:System.Windows.Controls.GridViewColumn>和<xref:System.Windows.Controls.GridViewColumnHeader>。  
  
 兩個<xref:System.Windows.Controls.ListView>控制項不能共用相同的檢視。 若要指定可以使用一次以上的檢視，使用範本或樣式。 如需<xref:System.Windows.Controls.GridView>和其他自訂的檢視定義為可重複使用的資源，請參閱[ListView 與多個檢視範例](https://go.microsoft.com/fwlink/?LinkID=160013)。  
  
 請勿使用<xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A>並<xref:System.Windows.Controls.Control.VerticalContentAlignment%2A>屬性<xref:System.Windows.Controls.ListView>會顯示所使用的內容<xref:System.Windows.Controls.GridView>。 若要指定的資料行中的內容的對齊<xref:System.Windows.Controls.GridView>，定義<xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>。  
  
 顯示項目數量龐大，可能會造成效能問題。  請參閱[最佳化效能：控制項](~/docs/framework/wpf/advanced/optimizing-performance-controls.md)如需詳細資訊。  
  
## <a name="customizing-the-listview-control"></a>自訂 ListView 控制項  
 若要將相同的屬性設定套用至多個<xref:System.Windows.Controls.ListView>控制項，可使用<xref:System.Windows.FrameworkElement.Style%2A>屬性。 您可以修改預設<xref:System.Windows.Controls.ControlTemplate>，讓控制項的獨特的外觀。 如需有關建立<xref:System.Windows.Controls.ControlTemplate>，請參閱 <<c2> [ 透過建立 ControlTemplate 自訂現有控制項的外觀](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。  若要查看的組件和狀態所特有<xref:System.Windows.Controls.ListView>，請參閱 < [ListView 樣式和範本](~/docs/framework/wpf/controls/listview-styles-and-templates.md)。  
  
 此控制項的相依性屬性可能會設定控制項的預設樣式。  如果屬性設定為預設樣式，屬性可能會變更其預設值，當控制項出現在應用程式。 預設樣式會決定由哪一個桌面佈景主題時，會使用應用程式正在執行。  如需詳細資訊，請參閱 <<c0> [ 預設 WPF 佈景主題](https://go.microsoft.com/fwlink/?LinkID=158252)。  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 下列範例示範如何建立<xref:System.Windows.Controls.ListView>控制項，可實作<xref:System.Windows.Controls.GridView>做為其<xref:System.Windows.Controls.ListView.View%2A>。 在 < 備註 > 一節的圖例是來自此範例中。  
  
 [!code-xaml[ListViewCode#ListViewEmployee](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml#listviewemployee)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ListViewItem" />
    <altmember cref="T:System.Windows.Controls.GridView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Controls.ListView" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void ClearContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.ClearContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="listView.ClearContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">要清除的 <see cref="T:System.Windows.Controls.ListViewItem" /> 容器。</param>
        <param name="item">包含 <see cref="T:System.Windows.Controls.ListViewItem" /> 的物件。</param>
        <summary>針對顯示為 <see cref="T:System.Windows.Controls.ListViewItem" /> 的物件，移除其所有範本、樣式和繫結。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="listView.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立和傳回新的 <see cref="T:System.Windows.Controls.ListViewItem" /> 容器。</summary>
        <returns>新的 <see cref="T:System.Windows.Controls.ListViewItem" /> 控制項。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="listView.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">要評估的物件。</param>
        <summary>判斷物件是否為 <see cref="T:System.Windows.Controls.ListViewItem" />。</summary>
        <returns>如果 <paramref name="item" /> 為 <see cref="T:System.Windows.Controls.ListViewItem" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="listView.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>定義 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 控制項的 <see cref="T:System.Windows.Controls.ListView" />。</summary>
        <returns>傳回 <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" /> 控制項的 <see cref="T:System.Windows.Controls.ListView" /> 物件。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnItemsChanged (e As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnItemsChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnItemsChanged : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit" Usage="listView.OnItemsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件引數。</param>
        <summary>回應 <see cref="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的項目集合變更時，會呼叫這個方法<xref:System.Windows.Controls.ListView>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="listView.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">為 <see cref="T:System.Windows.Controls.ListViewItem" /> 或可以轉換為其中一項的物件。</param>
        <param name="item">用來建立 <see cref="T:System.Windows.Controls.ListViewItem" /> 的物件。</param>
        <summary>設定 <see cref="T:System.Windows.Controls.ListViewItem" /> 的樣式、範本和繫結。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會準備<xref:System.Windows.Controls.ListViewItem>顯示根據指定的控制項<xref:System.Windows.Controls.ListView.View%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ViewBase View { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ViewBase View" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ListView.View" />
      <MemberSignature Language="VB.NET" Value="Public Property View As ViewBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ViewBase ^ View { System::Windows::Controls::ViewBase ^ get(); void set(System::Windows::Controls::ViewBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.View : System.Windows.Controls.ViewBase with get, set" Usage="System.Windows.Controls.ListView.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ViewBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定物件，這個物件定義 <see cref="T:System.Windows.Controls.ListView" /> 控制項中的資料該如何設定樣式和組織。</summary>
        <value><see cref="T:System.Windows.Controls.ViewBase" /> 物件，指定在 <see cref="T:System.Windows.Controls.ListView" /> 中顯示資訊的方式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 環境中所包含的可設定的檢視模式，名為<xref:System.Windows.Controls.GridView>。 您也可以建立自訂檢視繼承自<xref:System.Windows.Controls.ViewBase>。 如需詳細資訊，請參閱[＜How to：建立 ListView 的自訂檢視模式](~/docs/framework/wpf/controls/how-to-create-a-custom-view-mode-for-a-listview.md)。  
  
<a name="dependencyPropertyInfo_View"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.ListView.ViewProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
> [!NOTE]
>  這個屬性的屬性中繼資料的型別是<xref:System.Windows.PropertyMetadata>，而非<xref:System.Windows.FrameworkPropertyMetadata>。  
  
   
  
## Examples  
 下列範例示範如何指定<xref:System.Windows.Controls.GridView>物件做<xref:System.Windows.Controls.ListView.View%2A>如<xref:System.Windows.Controls.ListView>控制項。  
  
 [!code-csharp[ListViewCode#ListViewView](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml.cs#listviewview)]
 [!code-vb[ListViewCode#ListViewView](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewCode/visualbasic/window1.xaml.vb#listviewview)]
 [!code-xaml[ListViewCode#ListViewView](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml#listviewview)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ViewBase" />
        <altmember cref="T:System.Windows.Controls.GridView" />
      </Docs>
    </Member>
    <Member MemberName="ViewProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ViewProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ViewProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ListView.ViewProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ViewProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ViewProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ViewProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ListView.ViewProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.ListView.View" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>