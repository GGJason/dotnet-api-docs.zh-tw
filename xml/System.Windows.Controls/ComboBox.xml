<Type Name="ComboBox" FullName="System.Windows.Controls.ComboBox">
  <TypeSignature Language="C#" Value="public class ComboBox : System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ComboBox extends System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ComboBox" />
  <TypeSignature Language="VB.NET" Value="Public Class ComboBox&#xA;Inherits Selector" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComboBox : System::Windows::Controls::Primitives::Selector" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.Selector</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.ComboBox)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.ComboBoxItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_EditableTextBox", Type=typeof(System.Windows.Controls.TextBox))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_Popup", Type=typeof(System.Windows.Controls.Primitives.Popup))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="aa67c-101">代表具有下拉式清單的選取控制項，且可按一下控制項上的箭頭來顯示或隱藏。</span><span class="sxs-lookup"><span data-stu-id="aa67c-101">Represents a selection control with a drop-down list that can be shown or hidden by clicking the arrow on the control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa67c-102"><xref:System.Windows.Controls.ComboBox>可讓使用者從下拉式清單中選取項目或選擇性地在控制項的文字方塊中輸入新的文字。</span><span class="sxs-lookup"><span data-stu-id="aa67c-102">The <xref:System.Windows.Controls.ComboBox> allows the user to select an item from a drop-down list or optionally to enter new text in the text box of the control.</span></span> <span data-ttu-id="aa67c-103"><xref:System.Windows.Controls.ComboBox> 是<xref:System.Windows.Controls.ItemsControl>，這表示它可以包含任何類型 （例如字串、 影像或面板） 之物件的集合。</span><span class="sxs-lookup"><span data-stu-id="aa67c-103"><xref:System.Windows.Controls.ComboBox> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="aa67c-104">如需詳細資訊，請參閱 <xref:System.Windows.Controls.ItemsControl> 類別。</span><span class="sxs-lookup"><span data-stu-id="aa67c-104">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span>  
  
 <span data-ttu-id="aa67c-105"><xref:System.Windows.Controls.ComboBox.IsEditable%2A>和<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>屬性會指定如何<xref:System.Windows.Controls.ComboBox>使用者執行下列其中之一時的行為：</span><span class="sxs-lookup"><span data-stu-id="aa67c-105">The <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> properties specify how the <xref:System.Windows.Controls.ComboBox> behaves when the user does one of the following:</span></span>  
  
-   <span data-ttu-id="aa67c-106">輸入要選取的項目中的字串<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-106">Enters a string to select an item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
-   <span data-ttu-id="aa67c-107">輸入未對應的字串中的項目<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-107">Enters a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
-   <span data-ttu-id="aa67c-108">選取 [文字] 方塊中的字串的一部分。</span><span class="sxs-lookup"><span data-stu-id="aa67c-108">Selects part of the string that is in the text box.</span></span>  
  
-   <span data-ttu-id="aa67c-109">複製或將值貼到文字方塊。</span><span class="sxs-lookup"><span data-stu-id="aa67c-109">Copies or pastes a value into the text box.</span></span>  
  
 <span data-ttu-id="aa67c-110">下表描述的動作，使用者可以和不能採用依據的值<xref:System.Windows.Controls.ComboBox.IsEditable%2A>和<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-110">The following table describes the actions the user can and cannot take, depending on the values of <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>.</span></span>  
  
||<span data-ttu-id="aa67c-111"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 是 `true`</span><span class="sxs-lookup"><span data-stu-id="aa67c-111"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `true`</span></span>|<span data-ttu-id="aa67c-112"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 是 `false`</span><span class="sxs-lookup"><span data-stu-id="aa67c-112"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `false`</span></span>|  
|-|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="aa67c-113"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> 是 `true`</span><span class="sxs-lookup"><span data-stu-id="aa67c-113"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `true`</span></span>|<span data-ttu-id="aa67c-114">-無法選取中的項目<xref:System.Windows.Controls.ComboBox>輸入字串。</span><span class="sxs-lookup"><span data-stu-id="aa67c-114">-   Cannot select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="aa67c-115">-無法輸入未對應的字串中的項目<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-115">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="aa67c-116">-可以選取在字串的一部分<xref:System.Windows.Controls.ComboBox>文字方塊。</span><span class="sxs-lookup"><span data-stu-id="aa67c-116">-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span><br /><span data-ttu-id="aa67c-117">-可以複製中的字串<xref:System.Windows.Controls.ComboBox>文字，但無法貼上到字串<xref:System.Windows.Controls.ComboBox>文字方塊。</span><span class="sxs-lookup"><span data-stu-id="aa67c-117">-   Can copy the string in the <xref:System.Windows.Controls.ComboBox> text box, but cannot paste a string into the <xref:System.Windows.Controls.ComboBox> text box.</span></span>|<span data-ttu-id="aa67c-118">-可以選取中的項目<xref:System.Windows.Controls.ComboBox>輸入字串。</span><span class="sxs-lookup"><span data-stu-id="aa67c-118">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="aa67c-119">-可以輸入未對應的字串中的項目<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-119">-   Can enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="aa67c-120">-可以選取在字串的一部分<xref:System.Windows.Controls.ComboBox>文字方塊。</span><span class="sxs-lookup"><span data-stu-id="aa67c-120">-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span><br /><span data-ttu-id="aa67c-121">-可以複製或貼上在字串<xref:System.Windows.Controls.ComboBox>文字方塊。</span><span class="sxs-lookup"><span data-stu-id="aa67c-121">-   Can copy or paste the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span>|  
|<span data-ttu-id="aa67c-122"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> 是 `false`</span><span class="sxs-lookup"><span data-stu-id="aa67c-122"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `false`</span></span>|<span data-ttu-id="aa67c-123">-可以選取中的項目<xref:System.Windows.Controls.ComboBox>輸入字串。</span><span class="sxs-lookup"><span data-stu-id="aa67c-123">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="aa67c-124">-無法輸入未對應的字串中的項目<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-124">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="aa67c-125">-無法選取在字串的一部分<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-125">-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="aa67c-126">-無法複製或貼上在字串<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-126">-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.</span></span>|<span data-ttu-id="aa67c-127">-可以選取中的項目<xref:System.Windows.Controls.ComboBox>輸入字串。</span><span class="sxs-lookup"><span data-stu-id="aa67c-127">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="aa67c-128">-無法輸入未對應的字串中的項目<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-128">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="aa67c-129">-無法選取在字串的一部分<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-129">-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="aa67c-130">-無法複製或貼上在字串<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-130">-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.</span></span>|  
  
 <span data-ttu-id="aa67c-131"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>屬性有影響才<xref:System.Windows.Controls.ComboBox.IsEditable%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="aa67c-131">The <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> property has an effect only if <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `true`.</span></span>  
  
 <span data-ttu-id="aa67c-132"><xref:System.Windows.Controls.ComboBox>是<xref:System.Windows.Controls.ItemsControl>，因此它可以顯示簡單字串以外的內容。</span><span class="sxs-lookup"><span data-stu-id="aa67c-132">The <xref:System.Windows.Controls.ComboBox> is an <xref:System.Windows.Controls.ItemsControl>, so it can display content other than simple strings.</span></span>  <span data-ttu-id="aa67c-133">例如，您可以建立<xref:System.Windows.Controls.ComboBox>，其中包含一份映像。</span><span class="sxs-lookup"><span data-stu-id="aa67c-133">For example, you can create a <xref:System.Windows.Controls.ComboBox> that contains a list of images.</span></span> <span data-ttu-id="aa67c-134">當您有中字串以外的內容<xref:System.Windows.Controls.ComboBox>，字串，也可能會出現在<xref:System.Windows.Controls.ComboBox>時隱藏下拉式清單。</span><span class="sxs-lookup"><span data-stu-id="aa67c-134">When you have content other than strings in the <xref:System.Windows.Controls.ComboBox>, a nonsensical string might appear in the <xref:System.Windows.Controls.ComboBox> when the drop-down list is hidden.</span></span> <span data-ttu-id="aa67c-135">若要顯示的字串<xref:System.Windows.Controls.ComboBox>當它包含非字串的項目，使用<xref:System.Windows.Controls.TextSearch.Text%2A?displayProperty=nameWithType>或<xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=nameWithType>附加屬性。</span><span class="sxs-lookup"><span data-stu-id="aa67c-135">To display a string in the <xref:System.Windows.Controls.ComboBox> when it contains non-string items, use the <xref:System.Windows.Controls.TextSearch.Text%2A?displayProperty=nameWithType> or <xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=nameWithType> attached property.</span></span>  
  
## <a name="customizing-the-combobox-control"></a><span data-ttu-id="aa67c-136">自訂 ComboBox 控制項</span><span class="sxs-lookup"><span data-stu-id="aa67c-136">Customizing the ComboBox Control</span></span>  
 <span data-ttu-id="aa67c-137">若要套用至多個相同的屬性設定<xref:System.Windows.Controls.ComboBox>控制項，可使用<xref:System.Windows.FrameworkElement.Style%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="aa67c-137">To apply the same property settings to multiple <xref:System.Windows.Controls.ComboBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="aa67c-138">您可以修改預設<xref:System.Windows.Controls.ControlTemplate>來提供獨特的外觀的控制項。</span><span class="sxs-lookup"><span data-stu-id="aa67c-138">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="aa67c-139">如需有關建立<xref:System.Windows.Controls.ControlTemplate>，請參閱[自訂現有控制項的外觀，藉由建立 ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="aa67c-139">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="aa67c-140">若要查看的組件和所特有狀態<xref:System.Windows.Controls.ComboBox>，請參閱[下拉式方塊樣式和範本](~/docs/framework/wpf/controls/combobox-styles-and-templates.md)。</span><span class="sxs-lookup"><span data-stu-id="aa67c-140">To see the parts and states that are specific to the <xref:System.Windows.Controls.ComboBox>, see [ComboBox Styles and Templates](~/docs/framework/wpf/controls/combobox-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="aa67c-141">對這個控制項的相依性屬性可能會設定控制項的預設樣式。</span><span class="sxs-lookup"><span data-stu-id="aa67c-141">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="aa67c-142">如果屬性設定為預設樣式，屬性可能會變更其預設值時該控制項會出現在應用程式中。</span><span class="sxs-lookup"><span data-stu-id="aa67c-142">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="aa67c-143">預設樣式是由決定由哪個桌面主題時，會使用應用程式正在執行。</span><span class="sxs-lookup"><span data-stu-id="aa67c-143">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="aa67c-144">如需詳細資訊，請參閱[預設 WPF 佈景主題](http://go.microsoft.com/fwlink/?LinkID=158252)。</span><span class="sxs-lookup"><span data-stu-id="aa67c-144">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa67c-145">設定視覺化屬性只會影響該屬性是否存在於這兩<xref:System.Windows.Controls.ComboBox>控制項的預設範本，並且使用設定的。</span><span class="sxs-lookup"><span data-stu-id="aa67c-145">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.ComboBox> control's default template and is set by using a .</span></span> <span data-ttu-id="aa67c-146">您可以找到的視覺屬性清單中的 「 變更 Visual 結構的控制項 」 一節中[自訂現有控制項的外觀，藉由建立 ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="aa67c-146">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa67c-147">下列範例會建立<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-147">The following example creates a <xref:System.Windows.Controls.ComboBox>.</span></span> <span data-ttu-id="aa67c-148">此範例會填入<xref:System.Windows.Controls.ComboBox>繫結<xref:System.Windows.Controls.ItemsControl.ItemsSource%2A>類型的集合物件的屬性`VacationSpots`。</span><span class="sxs-lookup"><span data-stu-id="aa67c-148">The example populates the <xref:System.Windows.Controls.ComboBox> by binding the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property to a collection object of type `VacationSpots`.</span></span> <span data-ttu-id="aa67c-149">此範例也會建立<xref:System.Windows.Controls.TextBlock>會顯示選取的項目<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-149">The example also creates a <xref:System.Windows.Controls.TextBlock> that displays the selected item of the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
 [!code-xaml[ComboBoxItems#ComboBoxClass](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#comboboxclass)]  
  
 <span data-ttu-id="aa67c-150">下列範例會定義的集合物件的<xref:System.Windows.Controls.ComboBox>在上述範例中會繫結至。</span><span class="sxs-lookup"><span data-stu-id="aa67c-150">The following example defines the collection object that the <xref:System.Windows.Controls.ComboBox> in the preceding example binds to.</span></span>  
  
 [!code-csharp[ComboBoxItems#Data](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml.cs#data)]
 [!code-vb[ComboBoxItems#Data](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ComboBoxItems/VIsualBasic/Window1.xaml.vb#data)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ComboBoxItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComboBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComboBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa67c-151">初始化 <see cref="T:System.Windows.Controls.ComboBox" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="aa67c-151">Initializes a new instance of the <see cref="T:System.Windows.Controls.ComboBox" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownClosed">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ComboBox.DropDownClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDownClosed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDownClosed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-152">發生於下拉式方塊的下拉式清單關閉時。</span><span class="sxs-lookup"><span data-stu-id="aa67c-152">Occurs when the drop-down list of the combo box closes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aa67c-153">下列範例示範如何指派事件處理常式以及如何處理<xref:System.Windows.Controls.ComboBox.DropDownOpened>和<xref:System.Windows.Controls.ComboBox.DropDownClosed>事件。</span><span class="sxs-lookup"><span data-stu-id="aa67c-153">The following example shows how to assign event handlers and how to handle the <xref:System.Windows.Controls.ComboBox.DropDownOpened> and <xref:System.Windows.Controls.ComboBox.DropDownClosed> events.</span></span>  
  
 [!code-xaml[ComboBoxSimple#ComboBoxEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml#comboboxevents1)]  
  
 [!code-csharp[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml.cs#comboboxevents2)]
 [!code-vb[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ComboBoxSimple/VisualBasic/Pane1.xaml.vb#comboboxevents2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownOpened">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ComboBox.DropDownOpened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDownOpened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDownOpened;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-154">發生於下拉式方塊的下拉式清單開啟時。</span><span class="sxs-lookup"><span data-stu-id="aa67c-154">Occurs when the drop-down list of the combo box opens.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="aa67c-155">下列範例示範如何指派事件處理常式，以及處理<xref:System.Windows.Controls.ComboBox.DropDownOpened>和<xref:System.Windows.Controls.ComboBox.DropDownClosed>事件。</span><span class="sxs-lookup"><span data-stu-id="aa67c-155">The following example shows how to assign event handlers and handle the <xref:System.Windows.Controls.ComboBox.DropDownOpened> and <xref:System.Windows.Controls.ComboBox.DropDownClosed> events.</span></span>  
  
 [!code-xaml[ComboBoxSimple#ComboBoxEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml#comboboxevents1)]  
  
 [!code-csharp[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml.cs#comboboxevents2)]
 [!code-vb[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ComboBoxSimple/VisualBasic/Pane1.xaml.vb#comboboxevents2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa67c-156">建立或識別用於顯示指定項目 (item) 的項目 (element)。</span><span class="sxs-lookup"><span data-stu-id="aa67c-156">Creates or identifies the element used to display the specified item.</span></span></summary>
        <returns><span data-ttu-id="aa67c-157">用於顯示指定項目 (Item) 的項目 (Element)。</span><span class="sxs-lookup"><span data-stu-id="aa67c-157">The element used to display the specified item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-158">取得值，這個值表示下拉式方塊是否支援捲動。</span><span class="sxs-lookup"><span data-stu-id="aa67c-158">Gets a value that indicates whether a combo box supports scrolling.</span></span></summary>
        <value>
          <span data-ttu-id="aa67c-159">如果 <see cref="T:System.Windows.Controls.ComboBox" /> 支援捲動則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aa67c-159"><see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> supports scrolling; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="aa67c-160">預設值為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="aa67c-160">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa67c-161">如果控制項具有<xref:System.Windows.Controls.ScrollViewer>及其樣式中且具有捲動行為，自訂鍵盤<xref:System.Windows.Controls.ListBox.HandlesScrolling%2A>應該傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="aa67c-161">If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal override bool HasEffectiveKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.HasEffectiveKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HasEffectiveKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasEffectiveKeyboardFocus { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-162">取得值，指出 <see cref="T:System.Windows.Controls.ComboBox" /> 是否具有焦點。</span><span class="sxs-lookup"><span data-stu-id="aa67c-162">Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ComboBox" /> has focus.</span></span></summary>
        <value>
          <span data-ttu-id="aa67c-163">如果 <see cref="T:System.Windows.Controls.ComboBox" /> 具有焦點，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aa67c-163"><see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> has focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpen">
      <MemberSignature Language="C#" Value="public bool IsDropDownOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDropDownOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsDropDownOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDropDownOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDropDownOpen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-164">取得或設定下拉式方塊的下拉清單目前是否開啟的值。</span><span class="sxs-lookup"><span data-stu-id="aa67c-164">Gets or sets a value that indicates whether the drop-down for a combo box is currently open.</span></span></summary>
        <value>
          <span data-ttu-id="aa67c-165">如果下拉式清單已開啟，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aa67c-165"><see langword="true" /> if the drop-down is open; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="aa67c-166">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aa67c-166">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsDropDownOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa67c-167">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="aa67c-167">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa67c-168">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="aa67c-168">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.IsDropDownOpenProperty>|  
|<span data-ttu-id="aa67c-169">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="aa67c-169">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="aa67c-170">下列範例示範如何使用<xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A>起始下拉式方塊時，開啟建立下拉式方塊的下拉式清單控制項的屬性。</span><span class="sxs-lookup"><span data-stu-id="aa67c-170">The following example shows how to use the <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> property to create a combo box with the drop down control opened when the combo box is initiated.</span></span>  
  
 [!code-xaml[ComboBoxStyles#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxStyles/CS/app.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDropDownOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDropDownOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.IsDropDownOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDropDownOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDropDownOpenProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-171">識別 <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="aa67c-171">Identifies the <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditable">
      <MemberSignature Language="C#" Value="public bool IsEditable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsEditable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEditable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-172">取得或設定值，這個值啟用或停用 <see cref="T:System.Windows.Controls.ComboBox" /> 之文字方塊中的文字編輯功能。</span><span class="sxs-lookup"><span data-stu-id="aa67c-172">Gets or sets a value that enables or disables editing of the text in text box of the <see cref="T:System.Windows.Controls.ComboBox" />.</span></span></summary>
        <value>
          <span data-ttu-id="aa67c-173">如果 <see cref="T:System.Windows.Controls.ComboBox" /> 可以編輯則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aa67c-173"><see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> can be edited; otherwise <see langword="false" />.</span></span> <span data-ttu-id="aa67c-174">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aa67c-174">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa67c-175"><xref:System.Windows.Controls.ComboBox.IsEditable%2A>和<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>屬性會指定如何<xref:System.Windows.Controls.ComboBox>使用者執行下列其中之一時的行為：</span><span class="sxs-lookup"><span data-stu-id="aa67c-175">The <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> properties specify how the <xref:System.Windows.Controls.ComboBox> behaves when the user does one of the following:</span></span>  
  
-   <span data-ttu-id="aa67c-176">輸入要選取的項目中的字串<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-176">Enters a string to select an item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
-   <span data-ttu-id="aa67c-177">輸入未對應的字串中的項目<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-177">Enters a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
-   <span data-ttu-id="aa67c-178">選取 [文字] 方塊中的字串的一部分。</span><span class="sxs-lookup"><span data-stu-id="aa67c-178">Selects part of the string that is in the text box.</span></span>  
  
-   <span data-ttu-id="aa67c-179">複製或將值貼到文字方塊。</span><span class="sxs-lookup"><span data-stu-id="aa67c-179">Copies or pastes a value into the text box.</span></span>  
  
 <span data-ttu-id="aa67c-180">下表描述的動作，使用者可以和不能採用依據的值<xref:System.Windows.Controls.ComboBox.IsEditable%2A>和<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-180">The following table describes the actions the user can and cannot take, depending on the values of <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>.</span></span>  
  
||<span data-ttu-id="aa67c-181"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 是 `true`</span><span class="sxs-lookup"><span data-stu-id="aa67c-181"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `true`</span></span>|<span data-ttu-id="aa67c-182"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 是 `false`</span><span class="sxs-lookup"><span data-stu-id="aa67c-182"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `false`</span></span>|  
|-|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="aa67c-183"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> 是 `true`</span><span class="sxs-lookup"><span data-stu-id="aa67c-183"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `true`</span></span>|<span data-ttu-id="aa67c-184">-無法選取中的項目<xref:System.Windows.Controls.ComboBox>輸入字串。</span><span class="sxs-lookup"><span data-stu-id="aa67c-184">-   Cannot select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="aa67c-185">-無法輸入未對應的字串中的項目<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-185">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="aa67c-186">-可以選取在字串的一部分<xref:System.Windows.Controls.ComboBox>文字方塊。</span><span class="sxs-lookup"><span data-stu-id="aa67c-186">-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span><br /><span data-ttu-id="aa67c-187">-可以複製中的字串<xref:System.Windows.Controls.ComboBox>文字，但無法貼上到字串<xref:System.Windows.Controls.ComboBox>文字方塊。</span><span class="sxs-lookup"><span data-stu-id="aa67c-187">-   Can copy the string in the <xref:System.Windows.Controls.ComboBox> text box, but cannot paste a string into the <xref:System.Windows.Controls.ComboBox> text box.</span></span>|<span data-ttu-id="aa67c-188">-可以選取中的項目<xref:System.Windows.Controls.ComboBox>輸入字串。</span><span class="sxs-lookup"><span data-stu-id="aa67c-188">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="aa67c-189">-可以輸入未對應的字串中的項目<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-189">-   Can enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="aa67c-190">-可以選取在字串的一部分<xref:System.Windows.Controls.ComboBox>文字方塊。</span><span class="sxs-lookup"><span data-stu-id="aa67c-190">-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span><br /><span data-ttu-id="aa67c-191">-可以複製或貼上在字串<xref:System.Windows.Controls.ComboBox>文字方塊。</span><span class="sxs-lookup"><span data-stu-id="aa67c-191">-   Can copy or paste the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span>|  
|<span data-ttu-id="aa67c-192"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> 是 `false`</span><span class="sxs-lookup"><span data-stu-id="aa67c-192"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `false`</span></span>|<span data-ttu-id="aa67c-193">-可以選取中的項目<xref:System.Windows.Controls.ComboBox>輸入字串。</span><span class="sxs-lookup"><span data-stu-id="aa67c-193">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="aa67c-194">-無法輸入未對應的字串中的項目<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-194">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="aa67c-195">-無法選取在字串的一部分<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-195">-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="aa67c-196">-無法複製或貼上在字串<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-196">-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.</span></span>|<span data-ttu-id="aa67c-197">-可以選取中的項目<xref:System.Windows.Controls.ComboBox>輸入字串。</span><span class="sxs-lookup"><span data-stu-id="aa67c-197">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="aa67c-198">-無法輸入未對應的字串中的項目<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-198">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="aa67c-199">-無法選取在字串的一部分<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-199">-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="aa67c-200">-無法複製或貼上在字串<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-200">-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.</span></span>|  
  
 <span data-ttu-id="aa67c-201">當<xref:System.Windows.Controls.ComboBox.IsEditable%2A>等於`false`、<xref:System.Windows.Controls.ComboBox>使用<xref:System.Windows.Controls.ContentPresenter>顯示目前選取項目，則當<xref:System.Windows.Controls.ComboBox.IsEditable%2A>等於`true`、<xref:System.Windows.Controls.TextBox>改為使用針對此目的。</span><span class="sxs-lookup"><span data-stu-id="aa67c-201">When <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is equal to `false`, the <xref:System.Windows.Controls.ComboBox> uses a <xref:System.Windows.Controls.ContentPresenter> to display the currently selected item; when <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is equal to `true`, a <xref:System.Windows.Controls.TextBox> is used for this purpose instead.</span></span> <span data-ttu-id="aa67c-202">請注意，<xref:System.Windows.Controls.TextBox>只會顯示純文字格式，而且<xref:System.Windows.Controls.ComboBoxItem>可能包含非純文字內容，例如影像。</span><span class="sxs-lookup"><span data-stu-id="aa67c-202">Note that a <xref:System.Windows.Controls.TextBox> only displays plain text, and that a <xref:System.Windows.Controls.ComboBoxItem> may include non-plain text content, such as images.</span></span>  
  
<a name="dependencyPropertyInfo_IsEditable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa67c-203">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="aa67c-203">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa67c-204">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="aa67c-204">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.IsEditableProperty>|  
|<span data-ttu-id="aa67c-205">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="aa67c-205">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa67c-206">無</span><span class="sxs-lookup"><span data-stu-id="aa67c-206">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="aa67c-207">下列範例會建立<xref:System.Windows.Controls.ComboBox>包含影像，做為項目，而不是文字的控制項。</span><span class="sxs-lookup"><span data-stu-id="aa67c-207">The following examples create <xref:System.Windows.Controls.ComboBox> controls that contain images as items instead of text.</span></span> <span data-ttu-id="aa67c-208">如果<xref:System.Windows.Controls.ComboBox.IsEditable%2A>屬性設定為`true`、<xref:System.Windows.Controls.TextBox>顯示的映像所傳回的值<xref:System.Object.ToString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aa67c-208">If the <xref:System.Windows.Controls.ComboBox.IsEditable%2A> property is set to `true`, the <xref:System.Windows.Controls.TextBox> displays the value returned by the image's <xref:System.Object.ToString%2A> method.</span></span> <span data-ttu-id="aa67c-209">若要避免<xref:System.Windows.Controls.TextBox>使用未預期的文字，使用<xref:System.Windows.Controls.TextSearch.Text%2A?displayProperty=nameWithType>和<xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=nameWithType>屬性，以指定要顯示的文字。</span><span class="sxs-lookup"><span data-stu-id="aa67c-209">To avoid a <xref:System.Windows.Controls.TextBox> with unexpected text, use the <xref:System.Windows.Controls.TextSearch.Text%2A?displayProperty=nameWithType> and <xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=nameWithType> properties to assign text to be displayed.</span></span>  
  
 [!code-xaml[ComboBoxProps_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#1)]  
  
 [!code-xaml[ComboBoxProps_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#2)]  
  
 <span data-ttu-id="aa67c-210">另一個解決方案是使用<xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="aa67c-210">Another solution is to use the <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A> property.</span></span> <span data-ttu-id="aa67c-211">下拉式清單控制項的<xref:System.Windows.Controls.ComboBox>將不會顯示映像，但會顯示您所指定的文字。</span><span class="sxs-lookup"><span data-stu-id="aa67c-211">The drop-down control of the <xref:System.Windows.Controls.ComboBox> will not display the images but will display the text you assigned.</span></span>  
  
 <span data-ttu-id="aa67c-212">下列範例示範如何使用 <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-212">The following example shows how to use <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A>.</span></span>  
  
 [!code-xaml[ComboBoxProps_snip#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEditableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEditableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.IsEditableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEditableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEditableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-213">識別 <see cref="P:System.Windows.Controls.ComboBox.IsEditable" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="aa67c-213">Identifies the <see cref="P:System.Windows.Controls.ComboBox.IsEditable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="aa67c-214">指定項目 (Item)。</span><span class="sxs-lookup"><span data-stu-id="aa67c-214">Specified item.</span></span></param>
        <summary><span data-ttu-id="aa67c-215">判斷指定的項目是否為 (或可以成為) 其本身的 <c>ItemContainer</c>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-215">Determines if the specified item is (or is eligible to be) its own <c>ItemContainer</c>.</span></span></summary>
        <returns>
          <span data-ttu-id="aa67c-216">若項目是其本身的 <c>ItemContainer</c> 則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aa67c-216"><see langword="true" /> if the item is its own <c>ItemContainer</c>; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-217">取得或設定值，這個值會啟用僅顯示選取項目模式，使用者在此模式中只能選取下拉式方塊的內容，但無法編輯。</span><span class="sxs-lookup"><span data-stu-id="aa67c-217">Gets or sets a value that enables selection-only mode, in which the contents of the combo box are selectable but not editable.</span></span></summary>
        <value>
          <span data-ttu-id="aa67c-218">如果 <see langword="true" /> 是唯讀，則為 <see cref="T:System.Windows.Controls.ComboBox" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aa67c-218"><see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="aa67c-219">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aa67c-219">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa67c-220"><xref:System.Windows.Controls.ComboBox.IsEditable%2A>和<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>屬性會指定如何<xref:System.Windows.Controls.ComboBox>使用者執行下列其中之一時的行為：</span><span class="sxs-lookup"><span data-stu-id="aa67c-220">The <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> properties specify how the <xref:System.Windows.Controls.ComboBox> behaves when the user does one of the following:</span></span>  
  
-   <span data-ttu-id="aa67c-221">輸入要選取的項目中的字串<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-221">Enters a string to select an item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
-   <span data-ttu-id="aa67c-222">輸入未對應的字串中的項目<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-222">Enters a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
-   <span data-ttu-id="aa67c-223">選取 [文字] 方塊中的字串的一部分。</span><span class="sxs-lookup"><span data-stu-id="aa67c-223">Selects part of the string that is in the text box.</span></span>  
  
-   <span data-ttu-id="aa67c-224">複製或將值貼到文字方塊。</span><span class="sxs-lookup"><span data-stu-id="aa67c-224">Copies or pastes a value into the text box.</span></span>  
  
 <span data-ttu-id="aa67c-225">下表描述的動作，使用者可以和不能採用依據的值<xref:System.Windows.Controls.ComboBox.IsEditable%2A>和<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-225">The following table describes the actions the user can and cannot take, depending on the values of <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>.</span></span>  
  
||<span data-ttu-id="aa67c-226"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 是 `true`</span><span class="sxs-lookup"><span data-stu-id="aa67c-226"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `true`</span></span>|<span data-ttu-id="aa67c-227"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> 是 `false`</span><span class="sxs-lookup"><span data-stu-id="aa67c-227"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `false`</span></span>|  
|-|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="aa67c-228"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> 是 `true`</span><span class="sxs-lookup"><span data-stu-id="aa67c-228"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `true`</span></span>|<span data-ttu-id="aa67c-229">-無法選取中的項目<xref:System.Windows.Controls.ComboBox>輸入字串。</span><span class="sxs-lookup"><span data-stu-id="aa67c-229">-   Cannot select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="aa67c-230">-無法輸入未對應的字串中的項目<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-230">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="aa67c-231">-可以選取在字串的一部分<xref:System.Windows.Controls.ComboBox>文字方塊。</span><span class="sxs-lookup"><span data-stu-id="aa67c-231">-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span><br /><span data-ttu-id="aa67c-232">-可以複製中的字串<xref:System.Windows.Controls.ComboBox>文字，但無法貼上到字串<xref:System.Windows.Controls.ComboBox>文字方塊。</span><span class="sxs-lookup"><span data-stu-id="aa67c-232">-   Can copy the string in the <xref:System.Windows.Controls.ComboBox> text box, but cannot paste a string into the <xref:System.Windows.Controls.ComboBox> text box.</span></span>|<span data-ttu-id="aa67c-233">-可以選取中的項目<xref:System.Windows.Controls.ComboBox>輸入字串。</span><span class="sxs-lookup"><span data-stu-id="aa67c-233">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="aa67c-234">-可以輸入未對應的字串中的項目<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-234">-   Can enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="aa67c-235">-可以選取在字串的一部分<xref:System.Windows.Controls.ComboBox>文字方塊。</span><span class="sxs-lookup"><span data-stu-id="aa67c-235">-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span><br /><span data-ttu-id="aa67c-236">-可以複製或貼上在字串<xref:System.Windows.Controls.ComboBox>文字方塊。</span><span class="sxs-lookup"><span data-stu-id="aa67c-236">-   Can copy or paste the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span>|  
|<span data-ttu-id="aa67c-237"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> 是 `false`</span><span class="sxs-lookup"><span data-stu-id="aa67c-237"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `false`</span></span>|<span data-ttu-id="aa67c-238">-可以選取中的項目<xref:System.Windows.Controls.ComboBox>輸入字串。</span><span class="sxs-lookup"><span data-stu-id="aa67c-238">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="aa67c-239">-無法輸入未對應的字串中的項目<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-239">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="aa67c-240">-無法選取在字串的一部分<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-240">-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="aa67c-241">-無法複製或貼上在字串<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-241">-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.</span></span>|<span data-ttu-id="aa67c-242">-可以選取中的項目<xref:System.Windows.Controls.ComboBox>輸入字串。</span><span class="sxs-lookup"><span data-stu-id="aa67c-242">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="aa67c-243">-無法輸入未對應的字串中的項目<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-243">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="aa67c-244">-無法選取在字串的一部分<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-244">-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="aa67c-245">-無法複製或貼上在字串<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-245">-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.</span></span>|  
  
 <span data-ttu-id="aa67c-246">當<xref:System.Windows.Controls.ComboBox.IsEditable%2A>等於`false`、<xref:System.Windows.Controls.ComboBox>使用<xref:System.Windows.Controls.ContentPresenter>顯示目前選取項目，則當<xref:System.Windows.Controls.ComboBox.IsEditable%2A>等於`true`、<xref:System.Windows.Controls.TextBox>改為使用針對此目的。</span><span class="sxs-lookup"><span data-stu-id="aa67c-246">When <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is equal to `false`, the <xref:System.Windows.Controls.ComboBox> uses a <xref:System.Windows.Controls.ContentPresenter> to display the currently selected item; when <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is equal to `true`, a <xref:System.Windows.Controls.TextBox> is used for this purpose instead.</span></span> <span data-ttu-id="aa67c-247">請注意，<xref:System.Windows.Controls.TextBox>只會顯示純文字格式，而且<xref:System.Windows.Controls.ComboBoxItem>可能包含非純文字內容，例如影像。</span><span class="sxs-lookup"><span data-stu-id="aa67c-247">Note that a <xref:System.Windows.Controls.TextBox> only displays plain text, and that a <xref:System.Windows.Controls.ComboBoxItem> may include non-plain text content, such as images.</span></span>  
  
<a name="dependencyPropertyInfo_IsReadOnly"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa67c-248">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="aa67c-248">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa67c-249">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="aa67c-249">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.IsReadOnlyProperty>|  
|<span data-ttu-id="aa67c-250">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="aa67c-250">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="aa67c-251">下列範例所示<xref:System.Windows.Controls.ComboBox>與可編輯<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-251">The following example shows a <xref:System.Windows.Controls.ComboBox> with an editable <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="aa67c-252"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>屬性設定為`true`，因此使用者無法輸入的文字放到<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-252">The <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> property is set to `true`, so the user cannot enter text into the <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 [!code-xaml[ComboBoxItems#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-253">識別 <see cref="P:System.Windows.Controls.ComboBox.IsReadOnly" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="aa67c-253">Identifies the <see cref="P:System.Windows.Controls.ComboBox.IsReadOnly" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionBoxHighlighted">
      <MemberSignature Language="C#" Value="public bool IsSelectionBoxHighlighted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionBoxHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionBoxHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionBoxHighlighted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-254">取得 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> 是否反白顯示的值。</span><span class="sxs-lookup"><span data-stu-id="aa67c-254">Gets whether the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> is highlighted.</span></span></summary>
        <value>
          <span data-ttu-id="aa67c-255">如果 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> 已反白顯示則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aa67c-255"><see langword="true" /> if the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> is highlighted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa67c-256">這個屬性是相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="aa67c-256">This property is a dependency property.</span></span> <span data-ttu-id="aa67c-257">不過，相依性屬性的識別項欄位<xref:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted%2A>並非公用。</span><span class="sxs-lookup"><span data-stu-id="aa67c-257">However, the dependency property identifier field for <xref:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted%2A> is not public.</span></span> <span data-ttu-id="aa67c-258">因此，您無法使用備份相依性屬性的屬性系統作業需要相依性屬性的識別項，例如呼叫<xref:System.Windows.DependencyObject.GetValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-258">Therefore, you cannot use the backing dependency property for property system operations that require the dependency property identifier, such as calls to <xref:System.Windows.DependencyObject.GetValue%2A>.</span></span> <span data-ttu-id="aa67c-259">不過，您仍然可以使用<xref:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted%2A>屬性觸發程序。</span><span class="sxs-lookup"><span data-stu-id="aa67c-259">However, you can still use <xref:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted%2A> as a property trigger.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDropDownHeight">
      <MemberSignature Language="C#" Value="public double MaxDropDownHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxDropDownHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDropDownHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxDropDownHeight { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-260">取得或設定下拉式方塊之下拉式清單的最大高度。</span><span class="sxs-lookup"><span data-stu-id="aa67c-260">Gets or sets the maximum height for a combo box drop-down.</span></span></summary>
        <value><span data-ttu-id="aa67c-261">雙精度浮點數 (Double)，表示擷取的高度或要設定的高度。</span><span class="sxs-lookup"><span data-stu-id="aa67c-261">A double that represents the height that is retrieved or the height to set.</span></span> <span data-ttu-id="aa67c-262">定義至屬性系統的預設值是依據系統最大畫面高度參數三分之一的計算值，但此預設值可能會被各種控制項樣板覆寫。</span><span class="sxs-lookup"><span data-stu-id="aa67c-262">The default value as defined to the property system is a calculated value based on taking a one-third fraction of the system max screen height parameters, but this default is potentially overridden by various control templates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa67c-263">自動調整大小不是預設值，並會在下拉式清單中可能會超過可用的大小，在父元素中的大小。</span><span class="sxs-lookup"><span data-stu-id="aa67c-263">Auto sizing is not the default, and will result in the drop down size potentially exceeding the available size in the parent element.</span></span> <span data-ttu-id="aa67c-264">這不是通常需要這樣做。</span><span class="sxs-lookup"><span data-stu-id="aa67c-264">This is not typically desirable.</span></span>  
  
<a name="dependencyPropertyInfo_MaxDropDownHeight"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa67c-265">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="aa67c-265">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa67c-266">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="aa67c-266">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty>|  
|<span data-ttu-id="aa67c-267">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="aa67c-267">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa67c-268">無</span><span class="sxs-lookup"><span data-stu-id="aa67c-268">None</span></span>|  
  
<a name="xamlAttributeUsage_MaxDropDownHeight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="aa67c-269">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="aa67c-269">XAML Attribute Usage</span></span>  
  
```  
<object MaxDropDownHeight="double"/>  
- or –  
<object MaxDropDownHeight ="qualifiedDouble"/>  
- or -  
<object MaxDropDownHeight ="Auto"/>  
```  
  
<a name="xamlValues_MaxDropDownHeight"></a>   
## <a name="xaml-values"></a><span data-ttu-id="aa67c-270">XAML 值</span><span class="sxs-lookup"><span data-stu-id="aa67c-270">XAML Values</span></span>  
 <span data-ttu-id="aa67c-271">*double*</span><span class="sxs-lookup"><span data-stu-id="aa67c-271">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="aa67c-272">字串表示法<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="aa67c-272">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="aa67c-273">這會解譯為[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]度量。</span><span class="sxs-lookup"><span data-stu-id="aa67c-273">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="aa67c-274">字串不需要明確地包含小數位數。</span><span class="sxs-lookup"><span data-stu-id="aa67c-274">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="aa67c-275">執行個體的值`1`是可接受。</span><span class="sxs-lookup"><span data-stu-id="aa67c-275">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="aa67c-276">相同<xref:System.Double>套用屬性值 > 一節中所述的範圍限制。</span><span class="sxs-lookup"><span data-stu-id="aa67c-276">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="aa67c-277">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="aa67c-277">*qualifiedDouble*</span></span>  
 <span data-ttu-id="aa67c-278">A *double*值 （如上所述），後面接著下列單元宣告字串的其中之一： `px`， `in`， `cm`， `pt`。</span><span class="sxs-lookup"><span data-stu-id="aa67c-278">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="aa67c-279">`px` （預設值） [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="aa67c-279">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="aa67c-280">`in` is inches; 1in==96px</span><span class="sxs-lookup"><span data-stu-id="aa67c-280">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="aa67c-281">`cm` is centimeters; 1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="aa67c-281">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="aa67c-282">`pt` is points; 1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="aa67c-282">`pt` is points; 1pt==(96/72) px</span></span>  
  
 `Auto`  
 <span data-ttu-id="aa67c-283">啟用自動調整大小行為。</span><span class="sxs-lookup"><span data-stu-id="aa67c-283">Enables autosizing behavior.</span></span> <span data-ttu-id="aa67c-284">請參閱＜備註＞。</span><span class="sxs-lookup"><span data-stu-id="aa67c-284">See Remarks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa67c-285">下列範例示範如何使用<xref:System.Windows.Controls.ComboBox.MaxDropDownHeight%2A>屬性，以指定的高度<xref:System.Windows.Controls.ComboBox>控制項的下拉式清單。</span><span class="sxs-lookup"><span data-stu-id="aa67c-285">The following example shows how to use the <xref:System.Windows.Controls.ComboBox.MaxDropDownHeight%2A> property to specify the height of the <xref:System.Windows.Controls.ComboBox> control's drop-down.</span></span>  
  
 [!code-xaml[ComboBoxStyles#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxStyles/CS/app.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDropDownHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxDropDownHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxDropDownHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxDropDownHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxDropDownHeightProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-286">識別 <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="aa67c-286">Identifies the <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa67c-287">當呼叫 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> 時呼叫。</span><span class="sxs-lookup"><span data-stu-id="aa67c-287">Called when <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> is called.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aa67c-288">提供這個控制項的適當 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> 實作，做為 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 基礎結構的一部分。</span><span class="sxs-lookup"><span data-stu-id="aa67c-288">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span></span></summary>
        <returns><span data-ttu-id="aa67c-289">因型別而異的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="aa67c-289">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDropDownClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnDropDownClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDownClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDownClosed(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aa67c-290"><see cref="E:System.Windows.Controls.ComboBox.DropDownClosed" /> 事件的事件資料。</span><span class="sxs-lookup"><span data-stu-id="aa67c-290">The event data for the <see cref="E:System.Windows.Controls.ComboBox.DropDownClosed" /> event.</span></span></param>
        <summary><span data-ttu-id="aa67c-291">當下拉式方塊的快顯關閉時報告。</span><span class="sxs-lookup"><span data-stu-id="aa67c-291">Reports when a combo box's popup closes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDropDownOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownOpened (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownOpened(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnDropDownOpened(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDownOpened (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDownOpened(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aa67c-292"><see cref="E:System.Windows.Controls.ComboBox.DropDownOpened" /> 事件的事件資料。</span><span class="sxs-lookup"><span data-stu-id="aa67c-292">The event data for the <see cref="E:System.Windows.Controls.ComboBox.DropDownOpened" /> event.</span></span></param>
        <summary><span data-ttu-id="aa67c-293">當下拉式方塊的快顯開啟時報告。</span><span class="sxs-lookup"><span data-stu-id="aa67c-293">Reports when a combo box's popup opens.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aa67c-294"><see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> 事件的事件資料。</span><span class="sxs-lookup"><span data-stu-id="aa67c-294">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="aa67c-295">報告 <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> 屬性已變更。</span><span class="sxs-lookup"><span data-stu-id="aa67c-295">Reports that the <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> property changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aa67c-296"><see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> 事件的事件資料。</span><span class="sxs-lookup"><span data-stu-id="aa67c-296">The event data for the <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="aa67c-297">在 <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> 屬性變更時呼叫。</span><span class="sxs-lookup"><span data-stu-id="aa67c-297">Called when the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aa67c-298">事件資料。</span><span class="sxs-lookup"><span data-stu-id="aa67c-298">Event data.</span></span></param>
        <summary><span data-ttu-id="aa67c-299">當 <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 附加路由事件發生時叫用。</span><span class="sxs-lookup"><span data-stu-id="aa67c-299">Invoked when a <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached routed event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aa67c-300"><see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 事件的事件資料。</span><span class="sxs-lookup"><span data-stu-id="aa67c-300">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</span></span></param>
        <summary><span data-ttu-id="aa67c-301">呼叫以報告滑鼠左鍵已被釋放。</span><span class="sxs-lookup"><span data-stu-id="aa67c-301">Called to report that the left mouse button was released.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aa67c-302">事件資料。</span><span class="sxs-lookup"><span data-stu-id="aa67c-302">Event data.</span></span></param>
        <summary><span data-ttu-id="aa67c-303">當 <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> 附加路由事件發生時叫用。</span><span class="sxs-lookup"><span data-stu-id="aa67c-303">Invoked when a <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached routed event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectionChanged (System.Windows.Controls.SelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectionChanged(class System.Windows.Controls.SelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectionChanged (e As SelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectionChanged(System::Windows::Controls::SelectionChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="aa67c-304">提供 <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> 的資料。</span><span class="sxs-lookup"><span data-stu-id="aa67c-304">Provides data for <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="aa67c-305">藉由引發 <see cref="T:System.Windows.Controls.ComboBox" /> 事件，回應 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 選取範圍變更。</span><span class="sxs-lookup"><span data-stu-id="aa67c-305">Responds to a <see cref="T:System.Windows.Controls.ComboBox" /> selection change by raising a <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="aa67c-306">用來顯示指定項目 (Item) 的項目 (Element)。</span><span class="sxs-lookup"><span data-stu-id="aa67c-306">Element used to display the specified item.</span></span></param>
        <param name="item"><span data-ttu-id="aa67c-307">指定項目 (Item)。</span><span class="sxs-lookup"><span data-stu-id="aa67c-307">Specified item.</span></span></param>
        <summary><span data-ttu-id="aa67c-308">準備指定項目 (Element) 以顯示指定項目 (Item)。</span><span class="sxs-lookup"><span data-stu-id="aa67c-308">Prepares the specified element to display the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa67c-309">準備項目，可能需要套用樣式、 設定繫結，並以此類推。</span><span class="sxs-lookup"><span data-stu-id="aa67c-309">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItem">
      <MemberSignature Language="C#" Value="public object SelectionBoxItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectionBoxItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.SelectionBoxItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectionBoxItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-310">取得顯示在選取方塊中的項目。</span><span class="sxs-lookup"><span data-stu-id="aa67c-310">Gets the item that is displayed in the selection box.</span></span></summary>
        <value><span data-ttu-id="aa67c-311">選取的項目。</span><span class="sxs-lookup"><span data-stu-id="aa67c-311">The selected item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa67c-312"><xref:System.Windows.Controls.ControlTemplate>的<xref:System.Windows.Controls.ComboBox>顯示選取的項目中使用這個屬性<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-312">The <xref:System.Windows.Controls.ControlTemplate> of the <xref:System.Windows.Controls.ComboBox> uses this property to show the selected item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  <span data-ttu-id="aa67c-313">若要取得選取的項目<xref:System.Windows.Controls.ComboBox>之外<xref:System.Windows.Controls.ControlTemplate>，使用<xref:System.Windows.Controls.Primitives.Selector.SelectedItem%2A?displayProperty=nameWithType>而不是這個屬性的屬性。</span><span class="sxs-lookup"><span data-stu-id="aa67c-313">To get the selected item of the <xref:System.Windows.Controls.ComboBox> outside of the <xref:System.Windows.Controls.ControlTemplate>, use the <xref:System.Windows.Controls.Primitives.Selector.SelectedItem%2A?displayProperty=nameWithType> property instead of this property.</span></span>  
  
<a name="xamlAttributeUsage_SelectionBoxItem"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="aa67c-314">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="aa67c-314">XAML Attribute Usage</span></span>  
  
```  
<object property="{TemplateBinding SelectionBoxItem}"/>  
```  
  
<a name="dependencyPropertyInfo_SelectionBoxItem"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa67c-315">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="aa67c-315">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa67c-316">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="aa67c-316">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.SelectionBoxItemProperty>|  
|<span data-ttu-id="aa67c-317">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="aa67c-317">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa67c-318">無</span><span class="sxs-lookup"><span data-stu-id="aa67c-318">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="aa67c-319">下列範例會繫結<xref:System.Windows.Controls.ContentPresenter.Content%2A>屬性<xref:System.Windows.Controls.ContentPresenter>至<xref:System.Windows.Controls.ComboBox.SelectionBoxItem%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="aa67c-319">The following example binds the <xref:System.Windows.Controls.ContentPresenter.Content%2A> property of a <xref:System.Windows.Controls.ContentPresenter> to the <xref:System.Windows.Controls.ComboBox.SelectionBoxItem%2A> property.</span></span> <span data-ttu-id="aa67c-320"><xref:System.Windows.Controls.ContentPresenter>屬於<xref:System.Windows.Controls.ControlTemplate>如<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-320">The <xref:System.Windows.Controls.ContentPresenter> is part of the <xref:System.Windows.Controls.ControlTemplate> for the <xref:System.Windows.Controls.ComboBox>.</span></span> <span data-ttu-id="aa67c-321">如需完整的範例，請參閱[使用 ControlTemplate 設定樣式範例](http://go.microsoft.com/fwlink/?LinkID=160041)。</span><span class="sxs-lookup"><span data-stu-id="aa67c-321">For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041).</span></span>  
  
 [!code-xaml[ControlTemplateExamples#ComboBoxSelectionBox](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/combobox.xaml#comboboxselectionbox)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.SelectionBoxItemProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-322">識別 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="aa67c-322">Identifies the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemStringFormat">
      <MemberSignature Language="C#" Value="public string SelectionBoxItemStringFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectionBoxItemStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItemStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectionBoxItemStringFormat { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-323">取得複合字串，這個字串會指定如何在選取方塊中選取的項目顯示為字串時，將其格式化。</span><span class="sxs-lookup"><span data-stu-id="aa67c-323">Gets a composite string that specifies how to format the selected item in the selection box if it is displayed as a string.</span></span></summary>
        <value><span data-ttu-id="aa67c-324">複合字串，這個字串會指定如何在選取方塊中選取的項目顯示為字串時，將其格式化。</span><span class="sxs-lookup"><span data-stu-id="aa67c-324">A composite string that specifies how to format the selected item in the selection box if it is displayed as a string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemStringFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormatProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemStringFormatProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemStringFormatProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-325">識別 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="aa67c-325">Identifies the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate SelectionBoxItemTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate SelectionBoxItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItemTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ SelectionBoxItemTemplate { System::Windows::DataTemplate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-326">取得選取方塊內容的項目範本。</span><span class="sxs-lookup"><span data-stu-id="aa67c-326">Gets the item template of the selection box content.</span></span></summary>
        <value><span data-ttu-id="aa67c-327">項目範本。</span><span class="sxs-lookup"><span data-stu-id="aa67c-327">An item template.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SelectionBoxItemTemplate"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="aa67c-328">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="aa67c-328">XAML Attribute Usage</span></span>  
  
```  
<object property="{TemplateBinding SelectionBoxItemTemplate}"/>  
```  
  
<a name="dependencyPropertyInfo_SelectionBoxItemTemplate"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa67c-329">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="aa67c-329">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa67c-330">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="aa67c-330">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty>|  
|<span data-ttu-id="aa67c-331">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="aa67c-331">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa67c-332">無</span><span class="sxs-lookup"><span data-stu-id="aa67c-332">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="aa67c-333">下列範例會繫結<xref:System.Windows.Controls.ContentPresenter.Content%2A>屬性<xref:System.Windows.Controls.ContentPresenter>至<xref:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="aa67c-333">The following example binds the <xref:System.Windows.Controls.ContentPresenter.Content%2A> property of a <xref:System.Windows.Controls.ContentPresenter> to the <xref:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate%2A> property.</span></span> <span data-ttu-id="aa67c-334"><xref:System.Windows.Controls.ContentPresenter>屬於<xref:System.Windows.Controls.ControlTemplate>如<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="aa67c-334">The <xref:System.Windows.Controls.ContentPresenter> is part of the <xref:System.Windows.Controls.ControlTemplate> for the <xref:System.Windows.Controls.ComboBox>.</span></span> <span data-ttu-id="aa67c-335">如需完整的範例，請參閱[使用 ControlTemplate 設定樣式範例](http://go.microsoft.com/fwlink/?LinkID=160041)。</span><span class="sxs-lookup"><span data-stu-id="aa67c-335">For the complete sample, see [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041).</span></span>  
  
 [!code-xaml[ControlTemplateExamples#ComboBoxSelectionBox](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/combobox.xaml#comboboxselectionbox)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemTemplateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-336">識別 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="aa67c-336">Identifies the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPreserveUserEnteredPrefix">
      <MemberSignature Language="C#" Value="public bool ShouldPreserveUserEnteredPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldPreserveUserEnteredPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldPreserveUserEnteredPrefix As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldPreserveUserEnteredPrefix { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-337">取得或設定值，指出 <see cref="T:System.Windows.Controls.ComboBox" /> 是否會保留使用者的輸入，或者用符合的項目取代輸入。</span><span class="sxs-lookup"><span data-stu-id="aa67c-337">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ComboBox" /> keeps the user's input or replaces the input with a matching item.</span></span></summary>
        <value>
          <span data-ttu-id="aa67c-338">如果 <see cref="T:System.Windows.Controls.ComboBox" /> 會保留使用者的輸入，則為 <see langword="true" />，如果 <see cref="T:System.Windows.Controls.ComboBox" /> 用符合的項目取代輸入，則為 <see langword="false" />。登錄預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aa67c-338"><see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> keeps the user's input; <see langword="false" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> replaces the input with a matching item The registered default is <see langword="false" />.</span></span> <span data-ttu-id="aa67c-339">如需有關什麼可能會影響該值的詳細資訊，請參閱[相依性屬性的值優先順序](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</span><span class="sxs-lookup"><span data-stu-id="aa67c-339">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa67c-340">根據預設，當使用者輸入的字串到<xref:System.Windows.Controls.ComboBox>符合其中一個項目、 在選取的項目和使用者輸入的文字會被取代。</span><span class="sxs-lookup"><span data-stu-id="aa67c-340">By default, when the user types a string into the <xref:System.Windows.Controls.ComboBox> that matches one of its items, the item is selected and the text that the user typed is replaced.</span></span>  <span data-ttu-id="aa67c-341">這可能會造成使用者輸入以變更大小寫的文字。</span><span class="sxs-lookup"><span data-stu-id="aa67c-341">This can cause the text that the user entered to change case.</span></span> <span data-ttu-id="aa67c-342">如果<xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A>屬性設定為`true`、<xref:System.Windows.Controls.ComboBox>選取相符的項目，但會保留使用者輸入的文字。</span><span class="sxs-lookup"><span data-stu-id="aa67c-342">If the <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> property is set to `true`, the <xref:System.Windows.Controls.ComboBox> selects the matching item, but preserves the text that the user entered.</span></span>   <span data-ttu-id="aa67c-343">例如，假設<xref:System.Windows.Controls.ComboBox>包含字串"Hello"（以大寫 H），且使用者 （使用 h) 輸入 "hello"。</span><span class="sxs-lookup"><span data-stu-id="aa67c-343">For example, suppose that a <xref:System.Windows.Controls.ComboBox> contains the string, "Hello" (with a capital H) and the user enters "hello" (with a lowercase h).</span></span>  <span data-ttu-id="aa67c-344">如果<xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A>是`false`、<xref:System.Windows.Controls.ComboBox>選取其集合中相符的項目，"Hello，"，並於其中填入它以該字串的文字框。</span><span class="sxs-lookup"><span data-stu-id="aa67c-344">If <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> is `false`, the <xref:System.Windows.Controls.ComboBox> selects the matching item, "Hello," in its collection and populates its text box with that string.</span></span>    <span data-ttu-id="aa67c-345">如果<xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A>是`true`，從集合中，選取"Hello"，但在文字方塊中顯示"hello"。</span><span class="sxs-lookup"><span data-stu-id="aa67c-345">If <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> is `true`, "Hello" is selected from the collection, but the text box says "hello."</span></span>  
  
<a name="dependencyPropertyInfo_ShouldPreserveUserEnteredPrefix"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa67c-346">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="aa67c-346">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa67c-347">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="aa67c-347">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty>|  
|<span data-ttu-id="aa67c-348">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="aa67c-348">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa67c-349">無</span><span class="sxs-lookup"><span data-stu-id="aa67c-349">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPreserveUserEnteredPrefixProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShouldPreserveUserEnteredPrefixProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShouldPreserveUserEnteredPrefixProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShouldPreserveUserEnteredPrefixProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShouldPreserveUserEnteredPrefixProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-350">識別 <see cref="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="aa67c-350">Identifies the <see cref="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnEdit">
      <MemberSignature Language="C#" Value="public bool StaysOpenOnEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpenOnEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpenOnEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpenOnEdit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-351">取得或設定值，這個值表示當使用者按一下 <see cref="T:System.Windows.Controls.ComboBox" /> 時，已開啟並顯示下拉式清單控制項的 <see cref="T:System.Windows.Controls.TextBox" /> 是否會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="aa67c-351">Gets or sets whether a <see cref="T:System.Windows.Controls.ComboBox" /> that is open and displays a drop-down control will remain open when a user clicks the <see cref="T:System.Windows.Controls.TextBox" />.</span></span></summary>
        <value>
          <span data-ttu-id="aa67c-352"><see langword="true" /> 表示當使用者按下文字區域開始編輯時，保持下拉式清單控制項開啟，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aa67c-352"><see langword="true" /> to keep the drop-down control open when the user clicks on the text area to start editing; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="aa67c-353">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aa67c-353">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpenOnEdit"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa67c-354">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="aa67c-354">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa67c-355">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="aa67c-355">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.StaysOpenOnEditProperty>|  
|<span data-ttu-id="aa67c-356">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="aa67c-356">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa67c-357">無</span><span class="sxs-lookup"><span data-stu-id="aa67c-357">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="aa67c-358">這個範例示範如何使用<xref:System.Windows.Controls.ComboBox.StaysOpenOnEdit%2A>建立下拉式方塊的下拉式清單控制項的屬性會保持開啟狀態時，使用者在文字方塊中輸入資訊。</span><span class="sxs-lookup"><span data-stu-id="aa67c-358">This example shows how to use the <xref:System.Windows.Controls.ComboBox.StaysOpenOnEdit%2A> property to create a combo box whose drop-down control stays open while the user enters information into the text box.</span></span>  
  
 [!code-xaml[ComboBoxItems#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnEditProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenOnEditProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenOnEditProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.StaysOpenOnEditProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenOnEditProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenOnEditProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-359">識別 <see cref="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="aa67c-359">Identifies the <see cref="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-360">取得或設定目前選取之項目的文字。</span><span class="sxs-lookup"><span data-stu-id="aa67c-360">Gets or sets the text of the currently selected item.</span></span></summary>
        <value><span data-ttu-id="aa67c-361">目前選取之項目的字串。</span><span class="sxs-lookup"><span data-stu-id="aa67c-361">The string of the currently selected item.</span></span> <span data-ttu-id="aa67c-362">預設為空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="aa67c-362">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa67c-363">當<xref:System.Windows.Controls.ComboBox.IsEditable%2A>屬性是`true`，將此屬性放在文字方塊中輸入的初始文字。</span><span class="sxs-lookup"><span data-stu-id="aa67c-363">When the <xref:System.Windows.Controls.ComboBox.IsEditable%2A> property is `true`, setting this property places initial text entered in the text box.</span></span> <span data-ttu-id="aa67c-364">當<xref:System.Windows.Controls.ComboBox.IsEditable%2A>是`false`，設定此值沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="aa67c-364">When <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `false`, setting this value has no effect.</span></span>  
  
<a name="dependencyPropertyInfo_Text"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa67c-365">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="aa67c-365">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa67c-366">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="aa67c-366">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.TextProperty>|  
|<span data-ttu-id="aa67c-367">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="aa67c-367">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa67c-368"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span><span class="sxs-lookup"><span data-stu-id="aa67c-368"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="aa67c-369">這個範例會示範如何<xref:System.Windows.Controls.ComboBox.Text%2A>屬性可以用來設定的文字放到<xref:System.Windows.Controls.TextBox>之前的使用者進行選取。</span><span class="sxs-lookup"><span data-stu-id="aa67c-369">This example shows how the <xref:System.Windows.Controls.ComboBox.Text%2A> property can be used to set text into the <xref:System.Windows.Controls.TextBox> before the user makes a selection.</span></span>  
  
 [!code-xaml[ComboBoxItems#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.TextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aa67c-370">識別 <see cref="P:System.Windows.Controls.ComboBox.Text" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="aa67c-370">Identifies the <see cref="P:System.Windows.Controls.ComboBox.Text" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>