<Type Name="UserControl" FullName="System.Windows.Controls.UserControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2eb7e4673c6c95b9bc3b65f6e28e701c8b59ada3" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46617614" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UserControl : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UserControl extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.UserControl" />
  <TypeSignature Language="VB.NET" Value="Public Class UserControl&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class UserControl : System::Windows::Controls::ContentControl" />
  <TypeSignature Language="F#" Value="type UserControl = class&#xA;    inherit ContentControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供簡單的方式建立控制項。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的控制項[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]支援豐富的內容、 樣式、 觸發程序，以及範本。 在許多情況下，這些功能可讓您建立自訂且一致的體驗，而不需要建立新的控制項。 如需詳細資訊，請參閱 [設定樣式和範本](~/docs/framework/wpf/controls/styling-and-templating.md)。  
  
 如果您需要建立新的控制項，最簡單的方式是建立衍生自類別<xref:System.Windows.Controls.UserControl>。 這麼做之前，請考慮您的控制項不支援範本，也因此將不支援複雜的自訂。 不過，衍生自<xref:System.Windows.Controls.UserControl>是合適的模型，如果您想要藉由新增現有項目，類似於您如何建置應用程式，建置您的控制項，而且您不需要支援複雜的自訂。 (如果您想要使用範本與您的控制項，衍生自<xref:System.Windows.Controls.Control>改用。)如需撰寫控制項的不同模型的詳細資訊，請參閱[控制項撰寫概觀](~/docs/framework/wpf/controls/control-authoring-overview.md)。  
  
 A<xref:System.Windows.Controls.UserControl>是<xref:System.Windows.Controls.ContentControl>，這表示它可以包含任何類型 （例如字串、 影像或工作面板） 的單一物件。 如需詳細資訊，請參閱 <xref:System.Windows.Controls.ContentControl> 類別。  
  
 此控制項的相依性屬性可能會設定控制項的預設樣式。  如果屬性設定為預設樣式，屬性可能會變更其預設值，當控制項出現在應用程式。 預設樣式會決定由哪一個桌面佈景主題時，會使用應用程式正在執行。  如需詳細資訊，請參閱 <<c0> [ 預設 WPF 佈景主題](http://go.microsoft.com/fwlink/?LinkID=158252)。  
  
   
  
## Examples  
 下列範例示範如何建立簡單`NumericUpDown` <xref:System.Windows.Controls.UserControl>。  
  
 [!code-xaml[UserControlNumericUpDown#Markup](~/samples/snippets/csharp/VS_Snippets_Wpf/UserControlNumericUpDown/CSharp/NumericUpDown.xaml#markup)]  
  
 下圖顯示這個邏輯<xref:System.Windows.Controls.UserControl>:  
  
 [!code-csharp[UserControlNumericUpDown#CodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/UserControlNumericUpDown/CSharp/NumericUpDown.xaml.cs#codebehind)]
 [!code-vb[UserControlNumericUpDown#CodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UserControlNumericUpDown/visualbasic/numericupdown.xaml.vb#codebehind)]  
  
 如需詳細資訊，請參閱[控制項撰寫概觀](~/docs/framework/wpf/controls/control-authoring-overview.md)。  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=160025">具有佈景主題和 UI 自動化支援範例的 NumericUpDown 自訂控制項</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UserControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UserControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UserControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Controls.UserControl" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UserControl.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="userControl.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立並傳回這個 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 的 <see cref="T:System.Windows.Controls.UserControl" />。</summary>
        <returns>這個 <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> 的新 <see cref="T:System.Windows.Controls.UserControl" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>