<Type Name="Menu" FullName="System.Windows.Controls.Menu">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c4aa4d39241c73e92f24879fe451abe1b072b8f8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36366101" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Menu : System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Menu extends System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Menu" />
  <TypeSignature Language="VB.NET" Value="Public Class Menu&#xA;Inherits MenuBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu : System::Windows::Controls::Primitives::MenuBase" />
  <TypeSignature Language="F#" Value="type Menu = class&#xA;    inherit MenuBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.MenuBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f6b4d-101">Represents a Windows menu control that enables you to hierarchically organize elements associated with commands and event handlers.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f6b4d-101">Represents a Windows menu control that enables you to hierarchically organize elements associated with commands and event handlers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b4d-102"><xref:System.Windows.Controls.Menu>控制項呈現的項目，指定命令或應用程式的選項清單。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-102">The <xref:System.Windows.Controls.Menu> control presents a list of items that specify commands or options for an application.</span></span> <span data-ttu-id="f6b4d-103">通常按一下功能表上的項目會開啟子功能表，或是造成應用程式來執行命令。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-103">Typically, clicking an item on a menu opens a submenu or causes an application to carry out a command.</span></span>  
  
 <span data-ttu-id="f6b4d-104"><xref:System.Windows.Controls.Menu> 是<xref:System.Windows.Controls.ItemsControl>，這表示它可以包含任何類型 （例如字串、 影像或面板） 之物件的集合。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-104"><xref:System.Windows.Controls.Menu> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="f6b4d-105">如需詳細資訊，請參閱 <xref:System.Windows.Controls.ItemsControl> 類別。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-105">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span> <span data-ttu-id="f6b4d-106"><xref:System.Windows.Controls.MenuItem>是最常見的類型中之項目的<xref:System.Windows.Controls.Menu>。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-106">The <xref:System.Windows.Controls.MenuItem> is the most common type of item in a <xref:System.Windows.Controls.Menu>.</span></span> <span data-ttu-id="f6b4d-107">A<xref:System.Windows.Controls.MenuItem>可以包含子項目。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-107">A <xref:System.Windows.Controls.MenuItem> can contain child items.</span></span> <span data-ttu-id="f6b4d-108">子項目會出現在子功能表上，當使用者選擇父<xref:System.Windows.Controls.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-108">The child items will appear in a submenu when the user chooses a parent <xref:System.Windows.Controls.MenuItem>.</span></span>  
  
## <a name="customizing-the-menu-control"></a><span data-ttu-id="f6b4d-109">自訂功能表控制項</span><span class="sxs-lookup"><span data-stu-id="f6b4d-109">Customizing the Menu Control</span></span>  
 <span data-ttu-id="f6b4d-110">若要套用至多個相同的屬性設定<xref:System.Windows.Controls.Menu>控制項，可使用<xref:System.Windows.FrameworkElement.Style%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-110">To apply the same property settings to multiple <xref:System.Windows.Controls.Menu> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="f6b4d-111">您可以修改預設<xref:System.Windows.Controls.ControlTemplate>來提供獨特的外觀的控制項。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-111">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="f6b4d-112">如需有關建立<xref:System.Windows.Controls.ControlTemplate>，請參閱[自訂現有控制項的外觀，藉由建立 ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-112">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="f6b4d-113">若要查看的組件和所特有狀態<xref:System.Windows.Controls.Menu>，請參閱[功能表樣式和範本](~/docs/framework/wpf/controls/menu-styles-and-templates.md)。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-113">To see the parts and states that are specific to the <xref:System.Windows.Controls.Menu>, see [Menu Styles and Templates](~/docs/framework/wpf/controls/menu-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="f6b4d-114">對這個控制項的相依性屬性可能會設定控制項的預設樣式。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-114">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="f6b4d-115">如果屬性設定為預設樣式，屬性可能會變更其預設值時該控制項會出現在應用程式中。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-115">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="f6b4d-116">預設樣式是由決定由哪個桌面主題時，會使用應用程式正在執行。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-116">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="f6b4d-117">如需詳細資訊，請參閱[預設 WPF 佈景主題](http://go.microsoft.com/fwlink/?LinkID=158252)。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-117">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f6b4d-118">設定視覺化屬性只會影響該屬性是否存在於這兩<xref:System.Windows.Controls.Menu>控制項的預設範本，並且使用設定的。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-118">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.Menu> control's default template and is set by using a .</span></span> <span data-ttu-id="f6b4d-119">您可以找到的視覺屬性清單中的 「 變更 Visual 結構的控制項 」 一節中[自訂現有控制項的外觀，藉由建立 ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-119">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.MenuItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Menu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Menu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f6b4d-120">Initializes a new instance of the <see cref="T:System.Windows.Controls.Menu" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-120">Initializes a new instance of the <see cref="T:System.Windows.Controls.Menu" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleMouseButton">
      <MemberSignature Language="C#" Value="protected override void HandleMouseButton (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HandleMouseButton(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HandleMouseButton (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HandleMouseButton(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.HandleMouseButton : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="menu.HandleMouseButton e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f6b4d-121">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-121">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6b4d-122">Called when any mouse button is pressed or released.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-122">Called when any mouse button is pressed or released.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMainMenu">
      <MemberSignature Language="C#" Value="public bool IsMainMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMainMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Menu.IsMainMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMainMenu As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMainMenu { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMainMenu : bool with get, set" Usage="System.Windows.Controls.Menu.IsMainMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f6b4d-123">Gets or sets a value that indicates whether this <see cref="T:System.Windows.Controls.Menu" /> receives a main menu activation notification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-123">Gets or sets a value that indicates whether this <see cref="T:System.Windows.Controls.Menu" /> receives a main menu activation notification.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f6b4d-124">
            <see langword="true" /> 如果功能表會收到主功能表啟用通知。否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-124">
              <see langword="true" /> if the menu receives a main menu activation notification; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f6b4d-125">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-125">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b4d-126">如果有多個<xref:System.Windows.Controls.Menu>控制項在頁面上，<xref:System.Windows.Controls.Menu>應該不會收到 ALT 或 F10 鍵通知的控制項應該將此屬性設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-126">If there are multiple <xref:System.Windows.Controls.Menu> controls on a page, <xref:System.Windows.Controls.Menu> controls that should not receive ALT or F10 key notifications should set this property to `false`.</span></span>  
  
<a name="dependencyPropertyInfo_IsMainMenu"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="f6b4d-127">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="f6b4d-127">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="f6b4d-128">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="f6b4d-128">Identifier field</span></span>|<xref:System.Windows.Controls.Menu.IsMainMenuProperty>|  
|<span data-ttu-id="f6b4d-129">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="f6b4d-129">Metadata properties set to `true`</span></span>|<span data-ttu-id="f6b4d-130">無</span><span class="sxs-lookup"><span data-stu-id="f6b4d-130">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="f6b4d-131">下列範例示範如何使用<xref:System.Windows.Controls.Menu.IsMainMenu%2A>屬性以建立<xref:System.Windows.Controls.Menu>不會收到啟用通知。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-131">The following example shows how to use the <xref:System.Windows.Controls.Menu.IsMainMenu%2A> property to create a <xref:System.Windows.Controls.Menu> that does not receive activation notification.</span></span>  
  
 [!code-xaml[MenuStylesSnippet#MenuIsMainMenu](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/pane1.xaml#menuismainmenu)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMainMenuProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMainMenuProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMainMenuProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Menu.IsMainMenuProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMainMenuProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMainMenuProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMainMenuProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Menu.IsMainMenuProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f6b4d-132">Identifies the <see cref="P:System.Windows.Controls.Menu.IsMainMenu" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-132">Identifies the <see cref="P:System.Windows.Controls.Menu.IsMainMenu" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="menu.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f6b4d-133">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automation infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-133">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automation infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f6b4d-134">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-134">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInitialized : EventArgs -&gt; unit" Usage="menu.OnInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f6b4d-135">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-135">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6b4d-136">Called when the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> property is set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-136">Called when the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> property is set to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="menu.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f6b4d-137">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-137">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6b4d-138">Responds to the <see cref="E:System.Windows.ContentElement.KeyDown" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-138">Responds to the <see cref="E:System.Windows.ContentElement.KeyDown" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="menu.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f6b4d-139">The event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-139">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6b4d-140">Handles the <see cref="E:System.Windows.UIElement.TextInput" /> routed event that occurs when the menu receives text input from any device.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-140">Handles the <see cref="E:System.Windows.UIElement.TextInput" /> routed event that occurs when the menu receives text input from any device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b4d-141">此實作不會變更處理的狀態 (<xref:System.Windows.RoutedEventArgs.Handled%2A>屬性) 的<xref:System.Windows.UIElement.TextInput>事件資料。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-141">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.TextInput> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f6b4d-142">
            <para>如果您覆寫<see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />，務必呼叫基底實作您<see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />實作。無法呼叫基底實作可防止基底類別處理事件的類別處理常式，可能會變更的最終類別的執行階段行為。您可以呼叫之前或之後，在特殊處理的基底實作，根據您的需求。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-142">
              <para>If you override <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" /> implementation. Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class. You can call the base implementation either before or after your special handling, depending on your requirements.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="menu.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f6b4d-143">The element used to display the specified item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-143">The element used to display the specified item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="f6b4d-144">The item to display.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-144">The item to display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f6b4d-145">Prepares the specified element to display the specified item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f6b4d-145">Prepares the specified element to display the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6b4d-146">準備項目可能會涉及套用樣式、 設定繫結，並以此類推。</span><span class="sxs-lookup"><span data-stu-id="f6b4d-146">Preparing the element might involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>