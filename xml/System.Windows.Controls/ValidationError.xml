<Type Name="ValidationError" FullName="System.Windows.Controls.ValidationError">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0b49a8d350a9103902db35f96a98bebb5c043f21" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36365015" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ValidationError" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValidationError extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationError" />
  <TypeSignature Language="VB.NET" Value="Public Class ValidationError" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationError" />
  <TypeSignature Language="F#" Value="type ValidationError = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示當 <see cref="T:System.Windows.Controls.ValidationRule" /> 報告驗證錯誤時繫結引擎所建立的驗證錯誤，或透過 <see cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" /> 方法明確建立的驗證錯誤。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]資料繫結模型可讓您將驗證規則與您<xref:System.Windows.Data.Binding>物件。 轉換器會在呼叫之前，驗證就會發生傳輸目標到來源值期間。 以下描述在驗證程序。  
  
1.  正在當值時的目標屬性從來源屬性，資料繫結引擎先移除任何<xref:System.Windows.Controls.ValidationError>可能已加入至<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>附加屬性的繫結項目。 接著它會檢查是否已為所定義的任何自訂驗證規則<xref:System.Windows.Data.Binding>，它會在此情況下呼叫<xref:System.Windows.Controls.ValidationRule.Validate%2A>上每個方法<xref:System.Windows.Controls.ValidationRule>直到其中一個將會失敗，或直到它們全部通過。  
  
2.  未通過的自訂規則之後，會建立繫結引擎<xref:System.Windows.Controls.ValidationError>物件，並將它加入至<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>繫結項目的集合。 當<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>不是空白，<xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType>附加的屬性的項目設定為`true`。 此外，如果<xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>屬性<xref:System.Windows.Data.Binding>設`true`，然後繫結引擎引發<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>附加項目上的事件。  
  
3.  如果所有規則都通過，則繫結引擎會呼叫轉換子，如果有的話。  
  
4.  如果轉換成功，繫結引擎會呼叫來源屬性的 setter。  
  
5.  如果繫結具有<xref:System.Windows.Controls.ExceptionValidationRule>與其相關聯，並在步驟 3 或 4 期間擲回例外狀況，以查看是否有檢查繫結引擎<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>。 您可以使用<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>回呼，以提供自訂的處理常式處理例外狀況。 如果<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>上未指定<xref:System.Windows.Data.Binding>，建立繫結引擎<xref:System.Windows.Controls.ValidationError>與例外狀況並將它加入<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>繫結項目的集合。  
  
 有效的值中的傳輸任一方向 （從目標到來源或目標的來源） 將會清除<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>附加屬性。  
  
   
  
## Examples  
 下列範例示範建立樣式觸發程序<xref:System.Windows.Controls.ToolTip>，報告驗證錯誤訊息。 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>附加的屬性傳回的集合<xref:System.Windows.Controls.ValidationError>繫結項目上的物件。  
  
 [!code-xaml[DataBindingLab#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#14)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
    <altmember cref="T:System.Windows.Controls.ValidationRule" />
    <altmember cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Controls.ValidationError" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Controls.ValidationRule ruleInError, object bindingInError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ruleInError As ValidationRule, bindingInError As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationError(System::Windows::Controls::ValidationRule ^ ruleInError, System::Object ^ bindingInError);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.ValidationError : System.Windows.Controls.ValidationRule * obj -&gt; System.Windows.Controls.ValidationError" Usage="new System.Windows.Controls.ValidationError (ruleInError, bindingInError)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleInError" Type="System.Windows.Controls.ValidationRule" />
        <Parameter Name="bindingInError" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ruleInError">偵測到驗證錯誤的規則。</param>
        <param name="bindingInError">具有驗證錯誤的 <see cref="T:System.Windows.Data.BindingExpression" /> 或 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 物件。</param>
        <summary>使用指定的參數，初始化 <see cref="T:System.Windows.Controls.ValidationError" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationError(System::Windows::Controls::ValidationRule ^ ruleInError, System::Object ^ bindingInError, System::Object ^ errorContent, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.ValidationError : System.Windows.Controls.ValidationRule * obj * obj * Exception -&gt; System.Windows.Controls.ValidationError" Usage="new System.Windows.Controls.ValidationError (ruleInError, bindingInError, errorContent, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleInError" Type="System.Windows.Controls.ValidationRule" />
        <Parameter Name="bindingInError" Type="System.Object" />
        <Parameter Name="errorContent" Type="System.Object" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="ruleInError">偵測到驗證錯誤的規則。</param>
        <param name="bindingInError">具有驗證錯誤的 <see cref="T:System.Windows.Data.BindingExpression" /> 或 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 物件。</param>
        <param name="errorContent">錯誤相關資訊。</param>
        <param name="exception">造成驗證失敗的例外狀況。 這個參數是選擇項，可設定為 <see langword="null" />。</param>
        <summary>使用指定的參數，初始化 <see cref="T:System.Windows.Controls.ValidationError" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingInError">
      <MemberSignature Language="C#" Value="public object BindingInError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BindingInError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.BindingInError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingInError As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BindingInError { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingInError : obj" Usage="System.Windows.Controls.ValidationError.BindingInError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個 <see cref="T:System.Windows.Data.BindingExpression" /> 的 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 或 <see cref="T:System.Windows.Controls.ValidationError" /> 物件。 此物件可能明確標記為無效，或有失敗的驗證規則。</summary>
        <value>這個 <see cref="T:System.Windows.Data.BindingExpression" /> 的 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 或 <see cref="T:System.Windows.Controls.ValidationError" /> 物件。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorContent">
      <MemberSignature Language="C#" Value="public object ErrorContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ErrorContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.ErrorContent" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorContent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ErrorContent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorContent : obj with get, set" Usage="System.Windows.Controls.ValidationError.ErrorContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定物件，這個物件提供這個 <see cref="T:System.Windows.Controls.ValidationError" /> 的其他內容 (例如，描述錯誤的字串)。</summary>
        <value>提供這個 <see cref="T:System.Windows.Controls.ValidationError" /> 之其他內容的物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_ErrorContent"></a>   
## <a name="xaml-text-usage"></a>XAML 文字用法  
 請參閱 < 範例 > 一節的範例。  
  
   
  
## Examples  
 下列範例示範建立樣式觸發程序<xref:System.Windows.Controls.ToolTip>，報告驗證錯誤訊息。 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>附加的屬性傳回的集合<xref:System.Windows.Controls.ValidationError>繫結項目上的物件。  
  
 [!code-xaml[DataBindingLab#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception with get, set" Usage="System.Windows.Controls.ValidationError.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Exception" /> 物件，該物件是這個 <see cref="T:System.Windows.Controls.ValidationError" /> 的原因，如果錯誤是因為例外狀況所造成。</summary>
        <value>
          <see cref="T:System.Exception" /> 物件，如果錯誤是因為例外狀況所造成。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleInError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationRule RuleInError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ValidationRule RuleInError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.RuleInError" />
      <MemberSignature Language="VB.NET" Value="Public Property RuleInError As ValidationRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ValidationRule ^ RuleInError { System::Windows::Controls::ValidationRule ^ get(); void set(System::Windows::Controls::ValidationRule ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RuleInError : System.Windows.Controls.ValidationRule with get, set" Usage="System.Windows.Controls.ValidationError.RuleInError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Controls.ValidationRule" /> 物件，該物件是這個 <see cref="T:System.Windows.Controls.ValidationError" /> 的原因，如果錯誤是因為驗證規則失敗所造成。</summary>
        <value>
          <see cref="T:System.Windows.Controls.ValidationRule" /> 物件，如果錯誤是因為驗證規則失敗所造成。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>