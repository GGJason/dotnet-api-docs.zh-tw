<Type Name="ContentPresenter" FullName="System.Windows.Controls.ContentPresenter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f929be07448545dc18a586006200a4d51318bfda" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52737528" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContentPresenter : System.Windows.FrameworkElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContentPresenter extends System.Windows.FrameworkElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ContentPresenter" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentPresenter&#xA;Inherits FrameworkElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentPresenter : System::Windows::FrameworkElement" />
  <TypeSignature Language="F#" Value="type ContentPresenter = class&#xA;    inherit FrameworkElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>顯示 <see cref="T:System.Windows.Controls.ContentControl" /> 的內容。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您通常會使用<xref:System.Windows.Controls.ContentPresenter>中<xref:System.Windows.Controls.ControlTemplate>的<xref:System.Windows.Controls.ContentControl>來指定要加入的內容的位置。 每隔<xref:System.Windows.Controls.ContentControl>型別具有<xref:System.Windows.Controls.ContentPresenter>在其預設<xref:System.Windows.Controls.ControlTemplate>。  
  
 當<xref:System.Windows.Controls.ContentPresenter>物件處於<xref:System.Windows.Controls.ControlTemplate>的<xref:System.Windows.Controls.ContentControl>，則<xref:System.Windows.Controls.ContentPresenter.Content%2A>， <xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A>，和<xref:System.Windows.Controls.ContentPresenter.ContentTemplateSelector%2A>屬性取得其值的相同名稱的屬性從<xref:System.Windows.Controls.ContentControl>。 您可以擁有<xref:System.Windows.Controls.ContentPresenter>屬性從樣板化父代的其他屬性取得這些屬性的值，藉由設定<xref:System.Windows.Controls.ContentPresenter.ContentSource%2A>屬性或繫結至它們。  
  
 <xref:System.Windows.Controls.ContentPresenter>使用下列邏輯來顯示<xref:System.Windows.Controls.ContentPresenter.Content%2A>:  
  
-   如果<xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A>上的屬性<xref:System.Windows.Controls.ContentPresenter>設定，則<xref:System.Windows.Controls.ContentPresenter>，適用於<xref:System.Windows.DataTemplate>來<xref:System.Windows.Controls.ContentPresenter.Content%2A>屬性與產生的<xref:System.Windows.UIElement>和其子項目，如果有的話，會顯示。 如需詳細資訊<xref:System.Windows.DataTemplate>物件，請參閱[資料範本化概觀](~/docs/framework/wpf/data/data-templating-overview.md)。  
  
-   如果<xref:System.Windows.Controls.ContentPresenter.ContentTemplateSelector%2A>上的屬性<xref:System.Windows.Controls.ContentPresenter>設定，則<xref:System.Windows.Controls.ContentPresenter>適用於適當<xref:System.Windows.DataTemplate>來<xref:System.Windows.Controls.ContentPresenter.Content%2A>屬性與產生的<xref:System.Windows.UIElement>和其子項目，如果有的話，會顯示。  
  
-   如果沒有<xref:System.Windows.DataTemplate>的型別相關聯<xref:System.Windows.Controls.ContentPresenter.Content%2A>，則<xref:System.Windows.Controls.ContentPresenter>適用於可<xref:System.Windows.DataTemplate>來<xref:System.Windows.Controls.ContentPresenter.Content%2A>屬性與產生的<xref:System.Windows.UIElement>和其子項目，如果有的話，會顯示。  
  
-   如果<xref:System.Windows.Controls.ContentPresenter.Content%2A>已<xref:System.Windows.UIElement>物件，<xref:System.Windows.UIElement>隨即出現。 如果<xref:System.Windows.UIElement>已經有父代，發生例外狀況。  
  
-   如果沒有<xref:System.ComponentModel.TypeConverter>可將轉換的型別<xref:System.Windows.Controls.ContentPresenter.Content%2A>來<xref:System.Windows.UIElement>，則<xref:System.Windows.Controls.ContentPresenter>會使用該<xref:System.ComponentModel.TypeConverter>與產生的<xref:System.Windows.UIElement>隨即出現。  
  
-   如果沒有<xref:System.ComponentModel.TypeConverter>可將轉換的型別<xref:System.Windows.Controls.ContentPresenter.Content%2A>為字串，<xref:System.Windows.Controls.ContentPresenter>會使用該<xref:System.ComponentModel.TypeConverter>，並建立<xref:System.Windows.Controls.TextBlock>包含該字串。 <xref:System.Windows.Controls.TextBlock>隨即顯示。  
  
-   如果內容<xref:System.Xml.XmlElement>，值<xref:System.Xml.XmlElement.InnerText%2A>屬性會顯示在<xref:System.Windows.Controls.TextBlock>。  
  
-   <xref:System.Windows.Controls.ContentPresenter>呼叫<xref:System.Object.ToString%2A>方法<xref:System.Windows.Controls.ContentPresenter.Content%2A>，並建立<xref:System.Windows.Controls.TextBlock>包含所傳回的字串<xref:System.Object.ToString%2A>。 <xref:System.Windows.Controls.TextBlock>隨即顯示。  
  
   
  
## Examples  
 下列所示<xref:System.Windows.Controls.Button><xref:System.Windows.Style>如此<xref:System.Windows.Controls.ControlTemplate>的<xref:System.Windows.Controls.Button>。 <xref:System.Windows.Controls.ControlTemplate>定義<xref:System.Windows.Controls.Button>會顯示為<xref:System.Windows.Shapes.Ellipse>內<xref:System.Windows.Controls.Grid>項目。 <xref:System.Windows.Controls.ContentPresenter> ，將標記<xref:System.Windows.Controls.ContentControl.Content%2A>的<xref:System.Windows.Controls.Button>應該顯示，並置中以垂直和水平內<xref:System.Windows.Controls.Grid>。  
  
 [!code-xaml[StylingIntroSample_snippet#ButtonCT](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSample_snippet/CSharp/Window1.xaml#buttonct)]   
  
 下圖顯示的外觀<xref:System.Windows.Controls.Button>時這會套用：  
  
 ![Button ControlTemplate 範例](~/add/media/stylingintro-buttoncontroltemplate.png "Button ControlTemplate 範例")  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.TemplateBindingExtension" />
    <altmember cref="T:System.Windows.Controls.ItemsPresenter" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">樣式設定和範本化範例簡介</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentPresenter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentPresenter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Controls.ContentPresenter" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeSize);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="contentPresenter.ArrangeOverride arrangeSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeSize">這個 <see cref="T:System.Windows.Controls.ContentPresenter" /> 物件應該用來排列其子項目的大小。</param>
        <summary>將放置在單一子項目，並且決定 <see cref="T:System.Windows.Controls.ContentPresenter" /> 物件的內容。</summary>
        <returns>此項目所需的實際大小。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="ChooseTemplate">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.DataTemplate ChooseTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.DataTemplate ChooseTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.ChooseTemplate" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ChooseTemplate () As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::DataTemplate ^ ChooseTemplate();" />
      <MemberSignature Language="F#" Value="abstract member ChooseTemplate : unit -&gt; System.Windows.DataTemplate&#xA;override this.ChooseTemplate : unit -&gt; System.Windows.DataTemplate" Usage="contentPresenter.ChooseTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回所要使用的樣板。 這需視內容或其他屬性而定。</summary>
        <returns>要使用的 <see cref="T:System.Windows.DataTemplate" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 基底類別會實作以下規則：  
  
1.  如果<xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A>設定，請使用它。  
  
2.  如果<xref:System.Windows.Controls.ContentPresenter.ContentTemplateSelector%2A>設定時，呼叫其<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>方法。 如果結果不是`null`，使用它。  
  
3.  尋求<xref:System.Windows.DataTemplate>其<xref:System.Windows.DataTemplate.DataType%2A>符合已知的資源之間的內容<xref:System.Windows.Controls.ContentPresenter>（包括應用程式、 主題和系統資源）。 如果有找到，使用它。  
  
4.  如果類型<xref:System.Windows.Controls.ContentPresenter.Content%2A>很 「 通用 」，使用標準的範本。 常見的類型是`String`， <xref:System.Xml.XmlNode>，和<xref:System.Windows.UIElement>。  
  
5.  否則，請使用 基本上會將轉換的預設範本<xref:System.Windows.Controls.ContentPresenter.Content%2A>字串，並顯示在<xref:System.Windows.Controls.TextBlock>。  
  
 在衍生的類別可以覆寫這些規則，並實作其本身。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentPresenter.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Content : obj with get, set" Usage="System.Windows.Controls.ContentPresenter.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來產生 <see cref="T:System.Windows.Controls.ContentPresenter" /> 之子項目的資料。</summary>
        <value>用來產生子項目的資料。 預設值為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您將<xref:System.Windows.Controls.ContentPresenter>中<xref:System.Windows.Controls.ControlTemplate>的<xref:System.Windows.Controls.ContentControl>，即會自動顯示<xref:System.Windows.Controls.ContentControl.Content%2A>的樣板化控制項。 這表示，如果您設定<xref:System.Windows.Controls.ControlTemplate.TargetType%2A>的您<xref:System.Windows.Controls.ControlTemplate>要<xref:System.Windows.Controls.Button>，則<xref:System.Windows.Controls.ContentPresenter.Content%2A>屬性<xref:System.Windows.Controls.ContentPresenter>隱含繫結至<xref:System.Windows.Controls.ContentControl.Content%2A>的<xref:System.Windows.Controls.Button>的使用中且<xref:System.Windows.Controls.ControlTemplate>。  
  
 若要設定的繫結<xref:System.Windows.Controls.ContentPresenter>屬性，您可能要考慮使用<xref:System.Windows.Controls.ContentPresenter.ContentSource%2A>屬性。 <xref:System.Windows.Controls.ContentPresenter.ContentSource%2A>屬性會指向上樣板化父代以及別名的屬性相關聯的範本和範本選取器屬性自動。  
  
<a name="xamlTextUsage_Content"></a>   
## <a name="xaml-text-usage"></a>XAML 文字使用方式  
 一般而言，您可以使用`TemplateBinding`若要將這個屬性值繫結到樣板化控制項的值。 針對[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]的詳細資訊，請參閱 < [TemplateBinding 標記延伸](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md)。  
  
<a name="dependencyPropertyInfo_Content"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.ContentPresenter.ContentProperty>|  
|若要設定的中繼資料屬性 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentPresenter.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContentPresenter.ContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentSource">
      <MemberSignature Language="C#" Value="public string ContentSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentPresenter.ContentSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentSource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentSource : string with get, set" Usage="System.Windows.Controls.ContentPresenter.ContentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定自動取別名時所使用的主檔名。</summary>
        <value>自動取別名時所使用的主檔名。 預設值為 "Content"。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性應該只是使用<xref:System.Windows.Controls.ContentPresenter>是在範本中。 當範本包含<xref:System.Windows.Controls.ContentPresenter>具有<xref:System.Windows.Controls.ContentPresenter.ContentSource%2A>設為"`Abc`"，則<xref:System.Windows.Controls.ContentPresenter.Content%2A>， <xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A>，和<xref:System.Windows.Controls.ContentPresenter.ContentTemplateSelector%2A>屬性<xref:System.Windows.Controls.ContentPresenter>的別名是自動`Abc`， `AbcTemplate`，和`AbcTemplateSelector`分別。  開頭[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)]，將<xref:System.Windows.Controls.ContentPresenter.ContentSource%2A>到 「`Abc`」 也會導致<xref:System.Windows.Controls.ContentPresenter.ContentStringFormat%2A>屬性的別名`AbcStringFormat`。  
  
 最有用的兩個值，這個屬性是 「 內容 」 和 「 標頭 」。  
  
<a name="dependencyPropertyInfo_ContentSource"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.ContentPresenter.ContentSourceProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
   
  
## Examples  
 下列範例顯示的樣式<xref:System.Windows.Controls.HeaderedContentControl>，示範如何使用<xref:System.Windows.Controls.ContentPresenter.ContentSource%2A>屬性：  
  
 [!code-xaml[HeaderedContentControl#HeaderedContentControlStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedContentControl/CSharp/Page1.xaml#headeredcontentcontrolstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentSourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentSourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentSourceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentPresenter.ContentSourceProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentSourceProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentSourceProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentSourceProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContentPresenter.ContentSourceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.ContentPresenter.ContentSource" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentStringFormat">
      <MemberSignature Language="C#" Value="public string ContentStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentStringFormat : string with get, set" Usage="System.Windows.Controls.ContentPresenter.ContentStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定複合字串，這個字串會指定在 <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> 屬性顯示為字串的情況下，如何格式化這個屬性。</summary>
        <value>複合字串，指定在 <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> 屬性顯示為字串的情況下，如何格式化這個屬性。 預設值為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ContentPresenter.ContentStringFormat%2A> 可以是預先定義、 複合或自訂的字串格式。 如需有關字串格式的詳細資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)。 如果您設定<xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A>或是<xref:System.Windows.Controls.ContentPresenter.ContentTemplateSelector%2A>屬性<xref:System.Windows.Controls.ContentPresenter>，則<xref:System.Windows.Controls.ContentPresenter.ContentStringFormat%2A>屬性會被忽略。  
  
<a name="dependencyPropertyInfo_ContentStringFormat"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.ContentPresenter.ContentStringFormatProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentStringFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentPresenter.ContentStringFormatProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentStringFormatProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentStringFormatProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentStringFormatProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContentPresenter.ContentStringFormatProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate ContentTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate ContentTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentPresenter.ContentTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ ContentTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.Controls.ContentPresenter.ContentTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來顯示控制項內容的樣板。</summary>
        <value>定義內容之視覺化效果的 <see cref="T:System.Windows.DataTemplate" />。 預設值為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_ContentTemplate"></a>   
## <a name="xaml-text-usage"></a>XAML 文字使用方式  
 針對[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]的詳細資訊，請參閱 < [TemplateBinding 標記延伸](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md)。  
  
<a name="dependencyPropertyInfo_ContentTemplate"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.ContentPresenter.ContentTemplateProperty>|  
|若要設定的中繼資料屬性 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 下列範例示範樣式<xref:System.Windows.Controls.ComboBox>控制項：  
  
 [!code-xaml[ControlTemplateExamples#ComboBoxStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/combobox.xaml#comboboxstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentPresenter.ContentTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContentPresenter.ContentTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector ContentTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector ContentTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ ContentTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplateSelector : System.Windows.Controls.DataTemplateSelector with get, set" Usage="System.Windows.Controls.ContentPresenter.ContentTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Controls.DataTemplateSelector" />，它可以讓應用程式撰寫者提供自訂的邏輯，選擇要用來顯示控制項內容的樣板。</summary>
        <value>
          <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 物件，其提供傳回 <see cref="T:System.Windows.DataTemplate" /> 以套用的邏輯。 預設值為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果會忽略這個屬性<xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A>屬性設定。 如需詳細資訊，請參閱<xref:System.Windows.Controls.ContentPresenter.ChooseTemplate%2A>。  
  
<a name="xamlTextUsage_ContentTemplateSelector"></a>   
## <a name="xaml-text-usage"></a>XAML 文字使用方式  
 針對[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]的詳細資訊，請參閱 < [TemplateBinding 標記延伸](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md)。  
  
<a name="dependencyPropertyInfo_ContentTemplateSelector"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.ContentPresenter.ContentTemplateSelectorProperty>|  
|若要設定的中繼資料屬性 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentPresenter.ContentTemplateSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentTemplateSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentTemplateSelectorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentTemplateSelectorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContentPresenter.ContentTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="contentPresenter.MeasureOverride constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">傳回值不應超出的上限值。</param>
        <summary>根據子內容的調整大小屬性、邊界和要求大小，決定 <see cref="T:System.Windows.Controls.ContentPresenter" /> 物件大小。</summary>
        <returns>用來排列子內容所需的大小。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="OnContentStringFormatChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContentStringFormatChanged (string oldContentStringFormat, string newContentStringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentStringFormatChanged(string oldContentStringFormat, string newContentStringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.OnContentStringFormatChanged(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentStringFormatChanged (oldContentStringFormat As String, newContentStringFormat As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentStringFormatChanged(System::String ^ oldContentStringFormat, System::String ^ newContentStringFormat);" />
      <MemberSignature Language="F#" Value="abstract member OnContentStringFormatChanged : string * string -&gt; unit&#xA;override this.OnContentStringFormatChanged : string * string -&gt; unit" Usage="contentPresenter.OnContentStringFormatChanged (oldContentStringFormat, newContentStringFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContentStringFormat" Type="System.String" />
        <Parameter Name="newContentStringFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldContentStringFormat">
          <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 屬性的舊值。</param>
        <param name="newContentStringFormat">
          <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 屬性的新值。</param>
        <summary>當 <see cref="P:System.Windows.Controls.ContentPresenter.ContentStringFormat" /> 屬性變更時叫用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentTemplateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContentTemplateChanged (System.Windows.DataTemplate oldContentTemplate, System.Windows.DataTemplate newContentTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentTemplateChanged(class System.Windows.DataTemplate oldContentTemplate, class System.Windows.DataTemplate newContentTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentTemplateChanged (oldContentTemplate As DataTemplate, newContentTemplate As DataTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentTemplateChanged(System::Windows::DataTemplate ^ oldContentTemplate, System::Windows::DataTemplate ^ newContentTemplate);" />
      <MemberSignature Language="F#" Value="abstract member OnContentTemplateChanged : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; unit&#xA;override this.OnContentTemplateChanged : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; unit" Usage="contentPresenter.OnContentTemplateChanged (oldContentTemplate, newContentTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContentTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="newContentTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="oldContentTemplate">
          <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 屬性的舊值。</param>
        <param name="newContentTemplate">
          <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 屬性的新值。</param>
        <summary>當 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 變更時叫用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentTemplateSelectorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContentTemplateSelectorChanged (System.Windows.Controls.DataTemplateSelector oldContentTemplateSelector, System.Windows.Controls.DataTemplateSelector newContentTemplateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentTemplateSelectorChanged(class System.Windows.Controls.DataTemplateSelector oldContentTemplateSelector, class System.Windows.Controls.DataTemplateSelector newContentTemplateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentTemplateSelectorChanged (oldContentTemplateSelector As DataTemplateSelector, newContentTemplateSelector As DataTemplateSelector)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentTemplateSelectorChanged(System::Windows::Controls::DataTemplateSelector ^ oldContentTemplateSelector, System::Windows::Controls::DataTemplateSelector ^ newContentTemplateSelector);" />
      <MemberSignature Language="F#" Value="abstract member OnContentTemplateSelectorChanged : System.Windows.Controls.DataTemplateSelector * System.Windows.Controls.DataTemplateSelector -&gt; unit&#xA;override this.OnContentTemplateSelectorChanged : System.Windows.Controls.DataTemplateSelector * System.Windows.Controls.DataTemplateSelector -&gt; unit" Usage="contentPresenter.OnContentTemplateSelectorChanged (oldContentTemplateSelector, newContentTemplateSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContentTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
        <Parameter Name="newContentTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
      </Parameters>
      <Docs>
        <param name="oldContentTemplateSelector">
          <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 屬性的舊值。</param>
        <param name="newContentTemplateSelector">
          <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 屬性的新值。</param>
        <summary>當 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 屬性變更時叫用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTemplateChanged (System.Windows.DataTemplate oldTemplate, System.Windows.DataTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTemplateChanged(class System.Windows.DataTemplate oldTemplate, class System.Windows.DataTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.OnTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTemplateChanged (oldTemplate As DataTemplate, newTemplate As DataTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTemplateChanged(System::Windows::DataTemplate ^ oldTemplate, System::Windows::DataTemplate ^ newTemplate);" />
      <MemberSignature Language="F#" Value="abstract member OnTemplateChanged : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; unit&#xA;override this.OnTemplateChanged : System.Windows.DataTemplate * System.Windows.DataTemplate -&gt; unit" Usage="contentPresenter.OnTemplateChanged (oldTemplate, newTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate">舊的 <see cref="T:System.Windows.DataTemplate" /> 物件值。</param>
        <param name="newTemplate">新的 <see cref="T:System.Windows.DataTemplate" /> 物件值。</param>
        <summary>當 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 變更時叫用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecognizesAccessKey">
      <MemberSignature Language="C#" Value="public bool RecognizesAccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecognizesAccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Property RecognizesAccessKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecognizesAccessKey { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RecognizesAccessKey : bool with get, set" Usage="System.Windows.Controls.ContentPresenter.RecognizesAccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示 <see cref="T:System.Windows.Controls.ContentPresenter" /> 是否應該在其樣式中使用 <see cref="T:System.Windows.Controls.AccessText" />。</summary>
        <value>如果 <see cref="T:System.Windows.Controls.ContentPresenter" /> 應該在其樣式中使用 <see cref="T:System.Windows.Controls.AccessText" /> 則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_RecognizesAccessKey"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.ContentPresenter.RecognizesAccessKeyProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
   
  
## Examples  
 下列範例示範樣式<xref:System.Windows.Controls.CheckBox>控制項：  
  
  
  
 如需有關此範例的詳細資訊，請參閱 < [CheckBox 樣式和範本](~/docs/framework/wpf/controls/checkbox-styles-and-templates.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.AccessText" />
      </Docs>
    </Member>
    <Member MemberName="RecognizesAccessKeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RecognizesAccessKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RecognizesAccessKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentPresenter.RecognizesAccessKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RecognizesAccessKeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RecognizesAccessKeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RecognizesAccessKeyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContentPresenter.RecognizesAccessKeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeContentTemplateSelector">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeContentTemplateSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeContentTemplateSelector() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentPresenter.ShouldSerializeContentTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeContentTemplateSelector () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeContentTemplateSelector();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeContentTemplateSelector : unit -&gt; bool" Usage="contentPresenter.ShouldSerializeContentTemplateSelector " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回值，表示在這個類別的執行個體上，序列化處理序是否應該將 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 屬性的有效值序列化。</summary>
        <returns>如果應序列化 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector" /> 屬性值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>