<Type Name="CheckBox" FullName="System.Windows.Controls.CheckBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="921550fe7c52e0b6df374119a5ccbfb2e5bb335e" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55338136" /></Metadata><TypeSignature Language="C#" Value="public class CheckBox : System.Windows.Controls.Primitives.ToggleButton" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi CheckBox extends System.Windows.Controls.Primitives.ToggleButton" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.CheckBox" />
  <TypeSignature Language="VB.NET" Value="Public Class CheckBox&#xA;Inherits ToggleButton" />
  <TypeSignature Language="C++ CLI" Value="public ref class CheckBox : System::Windows::Controls::Primitives::ToggleButton" />
  <TypeSignature Language="F#" Value="type CheckBox = class&#xA;    inherit ToggleButton" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.ToggleButton</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CheckStateChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.CheckBox)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d584e-101">表示使用者可選取及清除的控制項。</span><span class="sxs-lookup"><span data-stu-id="d584e-101">Represents a control that a user can select and clear.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d584e-102"><xref:System.Windows.Controls.CheckBox> 控制項都繼承自<xref:System.Windows.Controls.Primitives.ToggleButton>，而且可以有三種狀態： 已核取 （選取），取消核取 （清除），並不確定。</span><span class="sxs-lookup"><span data-stu-id="d584e-102"><xref:System.Windows.Controls.CheckBox> controls inherit from <xref:System.Windows.Controls.Primitives.ToggleButton> and can have three states: checked (selected), unchecked (cleared), and indeterminate.</span></span>  
  
 <span data-ttu-id="d584e-103">A<xref:System.Windows.Controls.CheckBox>是<xref:System.Windows.Controls.ContentControl>，這表示它可以包含任何類型 （例如字串、 影像或工作面板） 的單一物件。</span><span class="sxs-lookup"><span data-stu-id="d584e-103">A <xref:System.Windows.Controls.CheckBox> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="d584e-104">如需詳細資訊，請參閱 <xref:System.Windows.Controls.ContentControl> 類別。</span><span class="sxs-lookup"><span data-stu-id="d584e-104">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
## <a name="customizing-the-checkbox-control"></a><span data-ttu-id="d584e-105">自訂 [checkbox] 控制項</span><span class="sxs-lookup"><span data-stu-id="d584e-105">Customizing the CheckBox Control</span></span>  
 <span data-ttu-id="d584e-106">若要將相同的屬性設定套用至多個<xref:System.Windows.Controls.CheckBox>控制項，可使用<xref:System.Windows.FrameworkElement.Style%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d584e-106">To apply the same property settings to multiple <xref:System.Windows.Controls.CheckBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="d584e-107">您可以修改預設<xref:System.Windows.Controls.ControlTemplate>，讓控制項的獨特的外觀。</span><span class="sxs-lookup"><span data-stu-id="d584e-107">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="d584e-108">如需有關建立<xref:System.Windows.Controls.ControlTemplate>，請參閱 <<c2> [ 透過建立 ControlTemplate 自訂現有控制項的外觀](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="d584e-108">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="d584e-109">若要查看的組件和狀態所特有<xref:System.Windows.Controls.CheckBox>，請參閱 < [CheckBox 樣式和範本](~/docs/framework/wpf/controls/checkbox-styles-and-templates.md)。</span><span class="sxs-lookup"><span data-stu-id="d584e-109">To see the parts and states that are specific to the <xref:System.Windows.Controls.CheckBox>, see [CheckBox Styles and Templates](~/docs/framework/wpf/controls/checkbox-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="d584e-110">此控制項的相依性屬性可能會設定控制項的預設樣式。</span><span class="sxs-lookup"><span data-stu-id="d584e-110">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="d584e-111">如果屬性設定為預設樣式，屬性可能會變更其預設值，當控制項出現在應用程式。</span><span class="sxs-lookup"><span data-stu-id="d584e-111">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="d584e-112">預設樣式會決定由哪一個桌面佈景主題時，會使用應用程式正在執行。</span><span class="sxs-lookup"><span data-stu-id="d584e-112">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="d584e-113">如需詳細資訊，請參閱 <<c0> [ 預設 WPF 佈景主題](https://go.microsoft.com/fwlink/?LinkID=158252)。</span><span class="sxs-lookup"><span data-stu-id="d584e-113">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d584e-114">設定視覺化屬性只能影響該屬性是否都存在於<xref:System.Windows.Controls.CheckBox>控制項的預設範本，並設定使用。</span><span class="sxs-lookup"><span data-stu-id="d584e-114">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.CheckBox> control's default template and is set by using a .</span></span> <span data-ttu-id="d584e-115">您可以找到的視覺化屬性清單中的 「 變更視覺結構的控制項 」 一節[透過建立 ControlTemplate 自訂現有控制項的外觀](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="d584e-115">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d584e-116">下列範例會建立<xref:System.Windows.Controls.CheckBox>，並處理<xref:System.Windows.Controls.Primitives.ToggleButton.Checked>， <xref:System.Windows.Controls.Primitives.ToggleButton.Unchecked>，和<xref:System.Windows.Controls.Primitives.ToggleButton.Indeterminate>事件。</span><span class="sxs-lookup"><span data-stu-id="d584e-116">The following example creates a <xref:System.Windows.Controls.CheckBox> and handles the <xref:System.Windows.Controls.Primitives.ToggleButton.Checked>, <xref:System.Windows.Controls.Primitives.ToggleButton.Unchecked>, and <xref:System.Windows.Controls.Primitives.ToggleButton.Indeterminate> events.</span></span>  
  
 [!code-xaml[CheckBox_Snippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/CheckBox_Snippets/CSharp/Window1.xaml#4)]  
  
 [!code-csharp[CheckBox_Snippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/CheckBox_Snippets/CSharp/Window1.xaml.cs#5)]
 [!code-vb[CheckBox_Snippets#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CheckBox_Snippets/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053"><span data-ttu-id="d584e-117">WPF 控制項陳列庫範例</span><span class="sxs-lookup"><span data-stu-id="d584e-117">WPF Controls Gallery Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CheckBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.CheckBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CheckBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d584e-118">初始化 <see cref="T:System.Windows.Controls.CheckBox" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="d584e-118">Initializes a new instance of the <see cref="T:System.Windows.Controls.CheckBox" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected override void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.CheckBox.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit" Usage="checkBox.OnAccessKey e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d584e-119">包含事件資料的 <see cref="T:System.Windows.Input.AccessKeyEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="d584e-119">The <see cref="T:System.Windows.Input.AccessKeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d584e-120">當叫用 <see cref="T:System.Windows.Controls.CheckBox" /> 的便捷鍵時呼叫。</span><span class="sxs-lookup"><span data-stu-id="d584e-120">Called when the access key for a <see cref="T:System.Windows.Controls.CheckBox" /> is invoked.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.CheckBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="checkBox.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d584e-121">建立 <see cref="T:System.Windows.Controls.CheckBox" /> 的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</span><span class="sxs-lookup"><span data-stu-id="d584e-121">Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.CheckBox" />.</span></span></summary>
        <returns><span data-ttu-id="d584e-122"><see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 的 <see cref="T:System.Windows.Controls.CheckBox" />。</span><span class="sxs-lookup"><span data-stu-id="d584e-122">An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.CheckBox" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="checkBox.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d584e-123">包含事件資料的 <see cref="T:System.Windows.Input.KeyEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="d584e-123">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d584e-124">回應 <see cref="T:System.Windows.Controls.CheckBox" /><see cref="E:System.Windows.UIElement.KeyDown" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="d584e-124">Responds to a <see cref="T:System.Windows.Controls.CheckBox" /><see cref="E:System.Windows.UIElement.KeyDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d584e-125">此實作會將標示<xref:System.Windows.UIElement.KeyDown>事件，為已處理，藉由設定<xref:System.Windows.RoutedEventArgs.Handled%2A>屬性的事件資料，以`true`當使用者按下加號或減號鍵。</span><span class="sxs-lookup"><span data-stu-id="d584e-125">This implementation marks the <xref:System.Windows.UIElement.KeyDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when the user presses the plus or the minus key.</span></span>  
  
 <span data-ttu-id="d584e-126">這個方法會設定<xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A>要`true`當使用者按下加號鍵並`false`當使用者按下減號鍵。</span><span class="sxs-lookup"><span data-stu-id="d584e-126">This method sets <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> to `true` when the user presses the plus key and to `false` when the user presses the minus key.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d584e-127">如果您覆寫<see cref="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />，務必呼叫基底實作，您<see cref="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />實作。</span><span class="sxs-lookup"><span data-stu-id="d584e-127">If you override <see cref="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementation.</span></span> <span data-ttu-id="d584e-128">無法呼叫基底實作，可避免基底類別處理可能會變更執行階段行為的最後一個類別的類別處理常式的事件。</span><span class="sxs-lookup"><span data-stu-id="d584e-128">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="d584e-129">您可以呼叫之前或之後，在特殊處理的基底實作，根據您的需求。</span><span class="sxs-lookup"><span data-stu-id="d584e-129">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>