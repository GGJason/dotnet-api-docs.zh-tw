<Type Name="PipeWriter" FullName="System.IO.Pipelines.PipeWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e2f146380d236a95e84925bb8544a9b5b326c911" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64996751" /></Metadata><TypeSignature Language="C#" Value="public abstract class PipeWriter : System.Buffers.IBufferWriter&lt;byte&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PipeWriter extends System.Object implements class System.Buffers.IBufferWriter`1&lt;unsigned int8&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipelines.PipeWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PipeWriter&#xA;Implements IBufferWriter(Of Byte)" />
  <TypeSignature Language="C++ CLI" Value="public ref class PipeWriter abstract : System::Buffers::IBufferWriter&lt;System::Byte&gt;" />
  <TypeSignature Language="F#" Value="type PipeWriter = class&#xA;    interface IBufferWriter&lt;byte&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipelines</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Buffers.IBufferWriter&lt;System.Byte&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="73edb-101">定義提供可讓資料寫入之管線的類別。</span><span class="sxs-lookup"><span data-stu-id="73edb-101">Defines a class that provides a pipeline to which data can be written.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PipeWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PipeWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="73edb-102">初始化類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="73edb-102">Initializes a new instance of the class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Advance">
      <MemberSignature Language="C#" Value="public abstract void Advance (int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Advance(int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeWriter.Advance(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Advance (bytes As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Advance(int bytes);" />
      <MemberSignature Language="F#" Value="abstract member Advance : int -&gt; unit" Usage="pipeWriter.Advance bytes" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Buffers.IBufferWriter`1.Advance(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="73edb-103">寫入的位元組數目<see cref="T:System.Span`1" />或<see cref="T:System.Memory`1" />。</span><span class="sxs-lookup"><span data-stu-id="73edb-103">The number of bytes written to the <see cref="T:System.Span`1" /> or <see cref="T:System.Memory`1" />.</span></span></param>
        <summary><span data-ttu-id="73edb-104">會告知<see cref="T:System.IO.Pipelines.PipeWriter" />所<paramref name="bytes" />位元組已寫入至輸出<see cref="T:System.Span`1" />或<see cref="T:System.Memory`1" />。</span><span class="sxs-lookup"><span data-stu-id="73edb-104">Notifies the <see cref="T:System.IO.Pipelines.PipeWriter" /> that <paramref name="bytes" /> bytes were written to the output <see cref="T:System.Span`1" /> or <see cref="T:System.Memory`1" />.</span></span> <span data-ttu-id="73edb-105">您必須要求新的緩衝區之後呼叫<see cref="M:System.IO.Pipelines.PipeWriter.Advance(System.Int32)" />繼續撰寫更多的資料; 您無法寫入先前取得的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="73edb-105">You must request a new buffer after calling <see cref="M:System.IO.Pipelines.PipeWriter.Advance(System.Int32)" /> to continue writing more data; you cannot write to a previously acquired buffer.</span></span></summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="AsStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream AsStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream AsStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeWriter.AsStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AsStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ AsStream();" />
      <MemberSignature Language="F#" Value="abstract member AsStream : unit -&gt; System.IO.Stream&#xA;override this.AsStream : unit -&gt; System.IO.Stream" Usage="pipeWriter.AsStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="73edb-106">傳回唯<see cref="T:System.IO.Stream" />包裝<see cref="T:System.IO.Pipelines.PipeWriter" />。</span><span class="sxs-lookup"><span data-stu-id="73edb-106">Returns a write-only <see cref="T:System.IO.Stream" /> that wraps the <see cref="T:System.IO.Pipelines.PipeWriter" />.</span></span></summary>
        <returns><span data-ttu-id="73edb-107"><see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="73edb-107">The <see cref="T:System.IO.Stream" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelPendingFlush">
      <MemberSignature Language="C#" Value="public abstract void CancelPendingFlush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelPendingFlush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeWriter.CancelPendingFlush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CancelPendingFlush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CancelPendingFlush();" />
      <MemberSignature Language="F#" Value="abstract member CancelPendingFlush : unit -&gt; unit" Usage="pipeWriter.CancelPendingFlush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="73edb-108">取消待處理的 <see cref="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" /> 作業。</span><span class="sxs-lookup"><span data-stu-id="73edb-108">Cancels the pending <see cref="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" /> operation.</span></span> <span data-ttu-id="73edb-109">如果沒有，則取消接下來的 <see cref="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" /> 作業，而不完成 <see cref="T:System.IO.Pipelines.PipeWriter" />。</span><span class="sxs-lookup"><span data-stu-id="73edb-109">If there is none, cancels next <see cref="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" /> operation, without completing the <see cref="T:System.IO.Pipelines.PipeWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public abstract void Complete (Exception exception = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeWriter.Complete(System.Exception)" />
      <MemberSignature Language="F#" Value="abstract member Complete : Exception -&gt; unit" Usage="pipeWriter.Complete exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="73edb-110">選擇性 <see cref="T:System.Exception" /> 指出造成管線完成的失敗。</span><span class="sxs-lookup"><span data-stu-id="73edb-110">Optional <see cref="T:System.Exception" /> indicating a failure that's causing the pipeline to complete.</span></span></param>
        <summary><span data-ttu-id="73edb-111">將 <see cref="T:System.IO.Pipelines.PipeWriter" /> 標示為完成，表示不會再有任何項目會寫入其中。</span><span class="sxs-lookup"><span data-stu-id="73edb-111">Marks the <see cref="T:System.IO.Pipelines.PipeWriter" /> as being complete, meaning no more items will be written to it.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFromAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task CopyFromAsync (System.IO.Stream source, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task CopyFromAsync(class System.IO.Stream source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeWriter.CopyFromAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CopyFromAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CopyFromAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="pipeWriter.CopyFromAsync (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="73edb-112">將從中複製內容資料流。</span><span class="sxs-lookup"><span data-stu-id="73edb-112">The stream from which the contents will be copied.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="73edb-113">用來監視是否有取消要求的語彙基元。</span><span class="sxs-lookup"><span data-stu-id="73edb-113">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="73edb-114">預設值為 <see cref="P:System.Threading.CancellationToken.None" />。</span><span class="sxs-lookup"><span data-stu-id="73edb-114">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="73edb-115">以非同步方式從指定的資料流讀取所有位元組，並將其寫入<see cref="T:System.IO.Pipelines.PipeWriter" />。</span><span class="sxs-lookup"><span data-stu-id="73edb-115">Asynchronously reads the bytes from the specified stream and writes them to the <see cref="T:System.IO.Pipelines.PipeWriter" />.</span></span></summary>
        <returns><span data-ttu-id="73edb-116">表示非同步複製作業的工作。</span><span class="sxs-lookup"><span data-stu-id="73edb-116">A task that represents the asynchronous copy operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Pipelines.PipeWriter Create (System.IO.Stream stream, System.IO.Pipelines.StreamPipeWriterOptions writerOptions = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Pipelines.PipeWriter Create(class System.IO.Stream stream, class System.IO.Pipelines.StreamPipeWriterOptions writerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeWriter.Create(System.IO.Stream,System.IO.Pipelines.StreamPipeWriterOptions)" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.IO.Pipelines.StreamPipeWriterOptions -&gt; System.IO.Pipelines.PipeWriter" Usage="System.IO.Pipelines.PipeWriter.Create (stream, writerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipelines.PipeWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="writerOptions" Type="System.IO.Pipelines.StreamPipeWriterOptions" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="stream">To be added.</param>
        <param name="writerOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.FlushResult&gt; FlushAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype System.IO.Pipelines.FlushResult&gt; FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.FlushResult&gt;" Usage="pipeWriter.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.FlushResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary><span data-ttu-id="73edb-117">讓寫入的位元組可提供給 <see cref="T:System.IO.Pipelines.PipeReader" />，並執行 <see cref="M:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)" /> 接續。</span><span class="sxs-lookup"><span data-stu-id="73edb-117">Makes bytes written available to <see cref="T:System.IO.Pipelines.PipeReader" /> and runs <see cref="M:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)" /> continuation.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMemory">
      <MemberSignature Language="C#" Value="public abstract Memory&lt;byte&gt; GetMemory (int sizeHint = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Memory`1&lt;unsigned int8&gt; GetMemory(int32 sizeHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeWriter.GetMemory(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMemory (Optional sizeHint As Integer = 0) As Memory(Of Byte)" />
      <MemberSignature Language="F#" Value="abstract member GetMemory : int -&gt; Memory&lt;byte&gt;" Usage="pipeWriter.GetMemory sizeHint" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Buffers.IBufferWriter`1.GetMemory(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Memory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeHint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sizeHint"><span data-ttu-id="73edb-118">所傳回 <see cref="T:System.Memory`1" /> 的長度下限。</span><span class="sxs-lookup"><span data-stu-id="73edb-118">The minimum length of the returned <see cref="T:System.Memory`1" />.</span></span> <span data-ttu-id="73edb-119">如果為 0，則會傳回任意大小的非空白的記憶體緩衝區。</span><span class="sxs-lookup"><span data-stu-id="73edb-119">If 0, a non-empty memory buffer of arbitrary size is returned.</span></span></param>
        <summary><span data-ttu-id="73edb-120">傳回<see cref="T:System.Memory`1" />寫入至少是所要求的大小，為所指定<paramref name="sizeHint" />參數。</span><span class="sxs-lookup"><span data-stu-id="73edb-120">Returns a <see cref="T:System.Memory`1" /> to write to that is at least the requested size, as specified by the <paramref name="sizeHint" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="73edb-121">記憶體緩衝區的最少<paramref name="sizeHint" />位元組。</span><span class="sxs-lookup"><span data-stu-id="73edb-121">A memory buffer of at least <paramref name="sizeHint" /> bytes.</span></span> <span data-ttu-id="73edb-122">如果<paramref name="sizeHint" />是 0，則會傳回任意大小的非空白緩衝區。</span><span class="sxs-lookup"><span data-stu-id="73edb-122">If <paramref name="sizeHint" /> is 0, returns a non-empty buffer of arbitrary size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="73edb-123">也不會保證，後續呼叫會傳回相同緩衝區或相同大小的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="73edb-123">There is no guarantee that successive calls will return the same buffer or the same-sized buffer.</span></span>

<span data-ttu-id="73edb-124">這個方法永遠不會傳回<xref:System.Memory`1.Empty?displayProperty=nameWithType>，但它擲回<xref:System.OutOfMemoryException>如果要求的緩衝區大小無法使用。</span><span class="sxs-lookup"><span data-stu-id="73edb-124">This method never returns <xref:System.Memory`1.Empty?displayProperty=nameWithType>, but it throws an <xref:System.OutOfMemoryException> if the requested buffer size is not available.</span></span>

<span data-ttu-id="73edb-125">您必須要求新的緩衝區之後呼叫<xref:System.IO.Pipelines.PipeWriter.Advance%2A>繼續撰寫更多的資料; 您無法寫入先前取得的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="73edb-125">You must request a new buffer after calling <xref:System.IO.Pipelines.PipeWriter.Advance%2A> to continue writing more data; you cannot write to a previously acquired buffer.</span></span>

              ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="73edb-126">要求的緩衝區大小無法使用。</span><span class="sxs-lookup"><span data-stu-id="73edb-126">The requested buffer size is not available.</span></span></exception>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetSpan">
      <MemberSignature Language="C#" Value="public abstract Span&lt;byte&gt; GetSpan (int sizeHint = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Span`1&lt;unsigned int8&gt; GetSpan(int32 sizeHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeWriter.GetSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSpan (Optional sizeHint As Integer = 0) As Span(Of Byte)" />
      <MemberSignature Language="F#" Value="abstract member GetSpan : int -&gt; Span&lt;byte&gt;" Usage="pipeWriter.GetSpan sizeHint" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Buffers.IBufferWriter`1.GetSpan(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Span&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeHint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sizeHint"><span data-ttu-id="73edb-127">所傳回 <see cref="T:System.Span`1" /> 的長度下限。</span><span class="sxs-lookup"><span data-stu-id="73edb-127">The minimum length of the returned <see cref="T:System.Span`1" />.</span></span> <span data-ttu-id="73edb-128">如果為 0，則會傳回任意大小的非空白緩衝區。</span><span class="sxs-lookup"><span data-stu-id="73edb-128">If 0, a non-empty buffer of arbitrary size is returned.</span></span></param>
        <summary><span data-ttu-id="73edb-129">傳回<see cref="T:System.Span`1" />寫入至少是所要求的大小，為所指定<paramref name="sizeHint" />參數。</span><span class="sxs-lookup"><span data-stu-id="73edb-129">Returns a <see cref="T:System.Span`1" /> to write to that is at least the requested size, as specified by the <paramref name="sizeHint" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="73edb-130">緩衝區至少<paramref name="sizeHint" />位元組。</span><span class="sxs-lookup"><span data-stu-id="73edb-130">A buffer of at least <paramref name="sizeHint" /> bytes.</span></span> <span data-ttu-id="73edb-131">如果<paramref name="sizeHint" />是 0，則會傳回任意大小的非空白緩衝區。</span><span class="sxs-lookup"><span data-stu-id="73edb-131">If <paramref name="sizeHint" /> is 0, returns a non-empty buffer of arbitrary size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="73edb-132">也不會保證，後續呼叫會傳回相同緩衝區或相同大小的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="73edb-132">There is no guarantee that successive calls will return the same buffer or the same-sized buffer.</span></span>

<span data-ttu-id="73edb-133">這個方法永遠不會傳回<see cref="P:System.Span`1.Empty" />，但它擲回<see cref="T:System.OutOfMemoryException" />如果要求的緩衝區大小無法使用。</span><span class="sxs-lookup"><span data-stu-id="73edb-133">This method never returns <see cref="P:System.Span`1.Empty" />, but it throws an <see cref="T:System.OutOfMemoryException" /> if the requested buffer size is not available.</span></span>

<span data-ttu-id="73edb-134">您必須要求新的緩衝區之後呼叫<xref:System.IO.Pipelines.PipeWriter.Advance(System.Int32)>繼續撰寫更多的資料; 您無法寫入先前取得的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="73edb-134">You must request a new buffer after calling <xref:System.IO.Pipelines.PipeWriter.Advance(System.Int32)> to continue writing more data; you cannot write to a previously acquired buffer.</span></span>

              ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="73edb-135">要求的緩衝區大小無法使用。</span><span class="sxs-lookup"><span data-stu-id="73edb-135">The requested buffer size is not available.</span></span></exception>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OnReaderCompleted">
      <MemberSignature Language="C#" Value="public abstract void OnReaderCompleted (Action&lt;Exception,object&gt; callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnReaderCompleted(class System.Action`2&lt;class System.Exception, object&gt; callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeWriter.OnReaderCompleted(System.Action{System.Exception,System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub OnReaderCompleted (callback As Action(Of Exception, Object), state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void OnReaderCompleted(Action&lt;Exception ^, System::Object ^&gt; ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnReaderCompleted : Action&lt;Exception, obj&gt; * obj -&gt; unit" Usage="pipeWriter.OnReaderCompleted (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Exception,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary><span data-ttu-id="73edb-136">註冊當管道的 <see cref="T:System.IO.Pipelines.PipeReader" /> 端完成時，會執行的回呼。</span><span class="sxs-lookup"><span data-stu-id="73edb-136">Registers a callback that gets executed when the <see cref="T:System.IO.Pipelines.PipeReader" /> side of the pipe is completed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.FlushResult&gt; WriteAsync (ReadOnlyMemory&lt;byte&gt; source, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype System.IO.Pipelines.FlushResult&gt; WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; source, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeWriter.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.FlushResult&gt;&#xA;override this.WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.FlushResult&gt;" Usage="pipeWriter.WriteAsync (source, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.FlushResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary><span data-ttu-id="73edb-137">將 <paramref name="source" /> 寫入管道並讓資料可供 <see cref="T:System.IO.Pipelines.PipeReader" /> 存取</span><span class="sxs-lookup"><span data-stu-id="73edb-137">Writes <paramref name="source" /> to the pipe and makes data accessible to <see cref="T:System.IO.Pipelines.PipeReader" /></span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>