<Type Name="UseKey" FullName="System.IdentityModel.Protocols.WSTrust.UseKey">
  <TypeSignature Language="C#" Value="public class UseKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UseKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Protocols.WSTrust.UseKey" />
  <TypeSignature Language="VB.NET" Value="Public Class UseKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class UseKey" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="75f03-101">表示 wst:UseKey 項目的內容。</span><span class="sxs-lookup"><span data-stu-id="75f03-101">Represents the contents of the wst:UseKey element.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75f03-102">此選擇性項目可讓用戶端要求發行權杖，其中包含下： usekey 項目，會指定其公開金鑰身分識別提供者。</span><span class="sxs-lookup"><span data-stu-id="75f03-102">This optional element enables the client to request the identity provider to issue a token containing its public key which is specified under the wst:UseKey element.</span></span> <span data-ttu-id="75f03-103">不過，用戶端會對擁有金鑰的證明。</span><span class="sxs-lookup"><span data-stu-id="75f03-103">However, the client has to prove possession of the key.</span></span> <span data-ttu-id="75f03-104">在 WS-安全性為基礎的 SOAP 訊息中，用戶端可以將其憑證當做簽署 （endorsing） 權杖加入證明擁有金鑰的安全性標頭。</span><span class="sxs-lookup"><span data-stu-id="75f03-104">In a WS-Security-based SOAP message, the client can add its certificate as an endorsing token to the Security header to prove possession of the key.</span></span>  
  
 <span data-ttu-id="75f03-105">如需此類別代表的項目詳細資訊，請參閱適用於您案例的 Ws-trust 規格的版本。</span><span class="sxs-lookup"><span data-stu-id="75f03-105">For more information about the element that this class represents, see the version of the WS-Trust specification that applies to your scenario.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="75f03-106">初始化 <see cref="T:System.IdentityModel.Protocols.WSTrust.UseKey" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="75f03-106">Initializes a new instance of the <see cref="T:System.IdentityModel.Protocols.WSTrust.UseKey" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UseKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.UseKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UseKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="75f03-107">初始化 <see cref="T:System.IdentityModel.Protocols.WSTrust.UseKey" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="75f03-107">Initializes a new instance of the <see cref="T:System.IdentityModel.Protocols.WSTrust.UseKey" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75f03-108">擴充性的建構函式。</span><span class="sxs-lookup"><span data-stu-id="75f03-108">The constructor for extensibility.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UseKey (System.IdentityModel.Tokens.SecurityKeyIdentifier ski);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityKeyIdentifier ski) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ski As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UseKey(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ ski);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ski" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="ski"><span data-ttu-id="75f03-109">表示應使用之現有金鑰的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="75f03-109">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the existing key that should be used.</span></span></param>
        <summary><span data-ttu-id="75f03-110">使用指定的安全性金鑰識別項，初始化 <see cref="T:System.IdentityModel.Protocols.WSTrust.UseKey" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="75f03-110">Initializes a new instance of the <see cref="T:System.IdentityModel.Protocols.WSTrust.UseKey" /> class using the specified security key identifier.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75f03-111">如果要求者知道如何將語彙基元轉換成安全性金鑰識別碼，或如果權杖的安全性金鑰識別碼，請使用這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="75f03-111">Use this constructor if the requestor knows how to convert the token to a security key identifier or if the token is already a security key identifier.</span></span>  
  
 <span data-ttu-id="75f03-112"><xref:System.IdentityModel.Protocols.WSTrust.UseKey.Token%2A>屬性設定為`null`在新<xref:System.IdentityModel.Protocols.WSTrust.UseKey>執行個體。</span><span class="sxs-lookup"><span data-stu-id="75f03-112">The <xref:System.IdentityModel.Protocols.WSTrust.UseKey.Token%2A> property is set to `null` in the new <xref:System.IdentityModel.Protocols.WSTrust.UseKey> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UseKey (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UseKey(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="75f03-113">表示應使用之現有金鑰的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="75f03-113">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the existing key that should be used.</span></span></param>
        <summary><span data-ttu-id="75f03-114">使用指定的安全性權杖，初始化 <see cref="T:System.IdentityModel.Protocols.WSTrust.UseKey" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="75f03-114">Initializes a new instance of the <see cref="T:System.IdentityModel.Protocols.WSTrust.UseKey" /> class using the specified security token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75f03-115"><xref:System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier%2A>屬性設定為`null`在新<xref:System.IdentityModel.Protocols.WSTrust.UseKey>執行個體。</span><span class="sxs-lookup"><span data-stu-id="75f03-115">The <xref:System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier%2A> property is set to `null` in the new <xref:System.IdentityModel.Protocols.WSTrust.UseKey> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UseKey (System.IdentityModel.Tokens.SecurityKeyIdentifier ski, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityKeyIdentifier ski, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ski As SecurityKeyIdentifier, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UseKey(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ ski, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ski" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="ski"><span data-ttu-id="75f03-116">表示應使用之現有金鑰的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="75f03-116">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the existing key that should be used.</span></span></param>
        <param name="token"><span data-ttu-id="75f03-117">表示應使用之現有金鑰的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="75f03-117">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the existing key that should be used.</span></span></param>
        <summary><span data-ttu-id="75f03-118">使用指定的安全性金鑰識別項和安全性權杖，初始化 <see cref="T:System.IdentityModel.Protocols.WSTrust.UseKey" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="75f03-118">Initializes a new instance of the <see cref="T:System.IdentityModel.Protocols.WSTrust.UseKey" /> class using the specified security key identifier and security token.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75f03-119">您可以使用這個建構函式，傳遞從序列化程式的安全性權杖服務 (STS) 的詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="75f03-119">Use this constructor to pass more information to the security token service (STS) from the serializer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityKeyIdentifier">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifier SecurityKeyIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKeyIdentifier SecurityKeyIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityKeyIdentifier As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityKeyIdentifier ^ SecurityKeyIdentifier { System::IdentityModel::Tokens::SecurityKeyIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="75f03-120">取得安全性金鑰識別碼</span><span class="sxs-lookup"><span data-stu-id="75f03-120">Gets the security key identifier</span></span></summary>
        <value><span data-ttu-id="75f03-121"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />，表示安全性金鑰識別碼。</span><span class="sxs-lookup"><span data-stu-id="75f03-121">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the security key identifier.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityToken Token" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.UseKey.Token" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Token As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityToken ^ Token { System::IdentityModel::Tokens::SecurityToken ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="75f03-122">取得安全性權杖，如果序列化程式無法將它轉換成安全性金鑰識別項。</span><span class="sxs-lookup"><span data-stu-id="75f03-122">Gets the security token if the serializer cannot convert it to the security key identifier.</span></span></summary>
        <value><span data-ttu-id="75f03-123">表示權杖的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</span><span class="sxs-lookup"><span data-stu-id="75f03-123">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the token.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>