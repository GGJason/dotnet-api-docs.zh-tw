<Type Name="EndpointDispatcher" FullName="System.ServiceModel.Dispatcher.EndpointDispatcher">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf611f460cbfb82c45f59eaf211f0425c42bad0d" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56785059" /></Metadata><TypeSignature Language="C#" Value="public sealed class EndpointDispatcher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EndpointDispatcher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EndpointDispatcher" />
  <TypeSignature Language="C++ CLI" Value="public ref class EndpointDispatcher sealed" />
  <TypeSignature Language="F#" Value="type EndpointDispatcher = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示用於公開一些屬性的執行階段物件，而這些屬性可以在服務應用程式中插入訊息的執行階段擴充或修改。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 和 <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> 類別會公開服務中之端點的執行階段自訂點。 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 可以用來控制它所能處理的訊息以及一些端點相關的資訊。 <xref:System.ServiceModel.Dispatcher.DispatchRuntime> 擁有許多屬性，而這些屬性可用來將自訂擴充插入至整個端點中的執行階段。  
  
 當訊息的目的端位址與 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 屬性相符，且訊息動作符合 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType> 屬性時，<xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> 物件就會負責處理來自 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> 的訊息。 如果有兩個 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 物件可以接受訊息，<xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> 屬性值會決定使用較高優先順序的端點。  
  
 使用 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 物件來設定或擴充從相關的 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 接收訊息、將訊息物件轉換為當做參數使用的物件和叫用端點作業的程序，以及執行相反動作的程序。  
  
 一般而言，端點的 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 是透過實作 <xref:System.ServiceModel.Description.IEndpointBehavior> 介面所取得，但是您也可以從其他行為介面存取 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>。  
  
 您可以使用下列 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 屬性：  
  
-   <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> 屬性可讓您取得或設定 <xref:System.ServiceModel.Dispatcher.MessageFilter> 用來識別端點是否可以處理特定訊息的 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher%2A> 物件。  
  
-   <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher%2A> 屬性會取得相關聯的 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 物件，而這個物件會在它與 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 之間傳送和接收訊息，同時可以用來檢查或修改其他的通道相關值和行為。  
  
-   <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> 會取得 <xref:System.ServiceModel.Dispatcher.MessageFilter> 物件，而這個物件會用來識別訊息是否以這個合約為目的端。  
  
-   <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractName%2A> 和 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractNamespace%2A> 屬性會傳回端點合約的名稱和命名空間 (Namespace)。  
  
-   <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime%2A> 屬性會傳回 <xref:System.ServiceModel.Dispatcher.DispatchRuntime> 物件，您可以使用這個物件來修改執行階段值，或為整個端點插入自訂執行階段擴充。  
  
-   <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.EndpointAddress%2A> 屬性會取得端點的位址。  
  
-   <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> 屬性會傳回複合篩選條件的優先順序，而 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher%2A> 將使用此複合篩選條件來確定要處理訊息的端點。  
  
   
  
## Examples  
 下列程式碼範例將示範使用 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 來找出端點的 <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType>，並使用端點行為來插入自訂訊息偵測器。  
  
 [!code-csharp[IEndpointBehavior#4](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointDispatcher (System.ServiceModel.EndpointAddress address, string contractName, string contractNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, string contractName, string contractNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor(System.ServiceModel.EndpointAddress,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, contractName As String, contractNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointDispatcher(System::ServiceModel::EndpointAddress ^ address, System::String ^ contractName, System::String ^ contractNamespace);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.EndpointDispatcher : System.ServiceModel.EndpointAddress * string * string -&gt; System.ServiceModel.Dispatcher.EndpointDispatcher" Usage="new System.ServiceModel.Dispatcher.EndpointDispatcher (address, contractName, contractNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">端點位址。</param>
        <param name="contractName">端點合約的名稱。</param>
        <param name="contractNamespace">端點合約的命名空間。</param>
        <summary>使用指定的位址、合約名稱和合約命名空間，初始化 <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式 (Constructor) 來建立不在描述中的端點。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointDispatcher (System.ServiceModel.EndpointAddress address, string contractName, string contractNamespace, bool isSystemEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, string contractName, string contractNamespace, bool isSystemEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor(System.ServiceModel.EndpointAddress,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, contractName As String, contractNamespace As String, isSystemEndpoint As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointDispatcher(System::ServiceModel::EndpointAddress ^ address, System::String ^ contractName, System::String ^ contractNamespace, bool isSystemEndpoint);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.EndpointDispatcher : System.ServiceModel.EndpointAddress * string * string * bool -&gt; System.ServiceModel.Dispatcher.EndpointDispatcher" Usage="new System.ServiceModel.Dispatcher.EndpointDispatcher (address, contractName, contractNamespace, isSystemEndpoint)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractNamespace" Type="System.String" />
        <Parameter Name="isSystemEndpoint" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">端點位址。</param>
        <param name="contractName">端點合約的名稱。</param>
        <param name="contractNamespace">端點合約的命名空間。</param>
        <param name="isSystemEndpoint"><see langword="true" /> 表示端點是由伺服器在內部建立，而不是使用者所建立，否則為 <see langword="false" />。</param>
        <summary>使用指定的位址、合約名稱、合約命名空間，以及端點是否為公用的系統端點，初始化 <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressFilter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.MessageFilter AddressFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.MessageFilter AddressFilter" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property AddressFilter As MessageFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::MessageFilter ^ AddressFilter { System::ServiceModel::Dispatcher::MessageFilter ^ get(); void set(System::ServiceModel::Dispatcher::MessageFilter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AddressFilter : System.ServiceModel.Dispatcher.MessageFilter with get, set" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.MessageFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 物件，這個物件會用來識別特定訊息是否以這個端點位址為目的端。</summary>
        <value>位址篩選條件，這個篩選條件會用來將訊息傳送到適當的端點。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType> 對通道所能支援的每個端點都會使用 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>。 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> 屬性是負責比對訊息目的端點位址的 <xref:System.ServiceModel.Dispatcher.MessageFilter?displayProperty=nameWithType> 物件。 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 會結合 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> 值與 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> 值，以判定是否要將訊息傳送到此端點。  
  
 如果相符的兩個 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 物件可以處理訊息，則 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> 屬性就可以用來選取端點。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelDispatcher">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.ChannelDispatcher ChannelDispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.ChannelDispatcher ChannelDispatcher" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelDispatcher As ChannelDispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::ChannelDispatcher ^ ChannelDispatcher { System::ServiceModel::Dispatcher::ChannelDispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelDispatcher : System.ServiceModel.Dispatcher.ChannelDispatcher" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ChannelDispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得相關聯的 <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> 物件，這個物件可以用來檢查或修改其他的通道相關值和行為。</summary>
        <value>通道發送器，可用以檢查或修改其他通道相關的值和行為。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 物件會從通道接收訊息，並使用 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A>、<xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> 和 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> 屬性來判定訊息是由哪個端點處理。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractFilter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.MessageFilter ContractFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.MessageFilter ContractFilter" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property ContractFilter As MessageFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::MessageFilter ^ ContractFilter { System::ServiceModel::Dispatcher::MessageFilter ^ get(); void set(System::ServiceModel::Dispatcher::MessageFilter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContractFilter : System.ServiceModel.Dispatcher.MessageFilter with get, set" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.MessageFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 物件，而這個物件會用來識別訊息是否以這個合約為目的端。</summary>
        <value>篩選條件，這個篩選條件會用來將訊息傳送到適當的合約。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> 屬性是與訊息動作進行比對的 <xref:System.ServiceModel.Dispatcher.MessageFilter> 物件。 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 會結合 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> 值與 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> 值，以判定是否要將訊息傳送到此端點。  
  
 如果相符的兩個 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 物件可以處理訊息，則 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> 屬性就可以用來選取端點。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractName : string" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得端點合約名稱。</summary>
        <value>端點合約的名稱。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractNamespace">
      <MemberSignature Language="C#" Value="public string ContractNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractNamespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractNamespace : string" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.ContractNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得端點合約的命名空間。</summary>
        <value>端點合約的命名空間。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchRuntime">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.DispatchRuntime DispatchRuntime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.DispatchRuntime DispatchRuntime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DispatchRuntime As DispatchRuntime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::DispatchRuntime ^ DispatchRuntime { System::ServiceModel::Dispatcher::DispatchRuntime ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DispatchRuntime : System.ServiceModel.Dispatcher.DispatchRuntime" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.DispatchRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> 物件，這個物件會用來檢查、修改或擴充整個服務端點或用戶端回呼端點中的執行階段行為。</summary>
        <value><see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime" /> 物件，這個物件會用來檢查、修改或擴充整個服務端點或用戶端回呼端點中的執行階段行為。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime%2A> 屬性，取得 <xref:System.ServiceModel.Dispatcher.DispatchRuntime> 物件來修改執行階段值或為整個端點插入自訂執行階段擴充。 您也可以從 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime%2A> 屬性巡覽至端點的 <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> 集合。  
  
   
  
## Examples  
 下列程式碼範例將示範使用 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 來找出端點的 <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType>，並使用端點行為來插入自訂訊息偵測器。  
  
 [!code-csharp[IEndpointBehavior#4](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress EndpointAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress EndpointAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.EndpointAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndpointAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ EndpointAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndpointAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.EndpointAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得端點的位址。</summary>
        <value>端點的位址。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterPriority">
      <MemberSignature Language="C#" Value="public int FilterPriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FilterPriority" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FilterPriority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FilterPriority : int with get, set" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter" /> 和 <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter" /> 組合在 <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher" /> 選取端點時的優先順序。</summary>
        <value>篩選條件的優先順序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 會結合 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> 值與 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> 值，以判定是否要將訊息傳送到此端點。  
  
 如果相符的兩個 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 物件可以處理訊息，則 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> 屬性就可以用來選取端點。  
  
 如果兩個端點都可以處理訊息，且其 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> 屬性的值相符，這時就會擲回 <xref:System.ServiceModel.Dispatcher.MultipleFilterMatchesException?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSystemEndpoint">
      <MemberSignature Language="C#" Value="public bool IsSystemEndpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSystemEndpoint" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.IsSystemEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSystemEndpoint As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSystemEndpoint { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSystemEndpoint : bool" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.IsSystemEndpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出端點是由伺服器在內部建立，而不是使用者所建立。</summary>
        <value>如果端點是由系統產生，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>