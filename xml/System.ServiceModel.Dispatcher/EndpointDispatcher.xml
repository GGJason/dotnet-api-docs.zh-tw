<Type Name="EndpointDispatcher" FullName="System.ServiceModel.Dispatcher.EndpointDispatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="698b59e97b9d3506bdc5e607a1cb568b5f4b9322" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EndpointDispatcher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EndpointDispatcher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EndpointDispatcher" />
  <TypeSignature Language="C++ CLI" Value="public ref class EndpointDispatcher sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f9e64-101">代表公開一些屬性的執行階段物件，而這些屬性可以在服務應用程式中插入訊息的執行階段擴充或修改。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9e64-101">Represents the run-time object that exposes properties that enable the insertion of run-time extensions or modifications for messages in service applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9e64-102"><xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 和 <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> 類別會公開服務中之端點的執行階段自訂點。</span><span class="sxs-lookup"><span data-stu-id="f9e64-102">The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> and the <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> classes expose the runtime customization points for endpoints in a service.</span></span> <span data-ttu-id="f9e64-103"><xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 可以用來控制它所能處理的訊息以及一些端點相關的資訊。</span><span class="sxs-lookup"><span data-stu-id="f9e64-103">The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> can be used to control which messages it can process and some endpoint-related information.</span></span> <span data-ttu-id="f9e64-104"><xref:System.ServiceModel.Dispatcher.DispatchRuntime> 擁有許多屬性，而這些屬性可用來將自訂擴充插入至整個端點中的執行階段。</span><span class="sxs-lookup"><span data-stu-id="f9e64-104">The <xref:System.ServiceModel.Dispatcher.DispatchRuntime> has a large number of properties used to insert custom extensions into the endpoint-wide runtime.</span></span>  
  
 <span data-ttu-id="f9e64-105">當訊息的目的端位址與 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 屬性相符，且訊息動作符合 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType> 屬性時，<xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> 物件就會負責處理來自 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> 的訊息。</span><span class="sxs-lookup"><span data-stu-id="f9e64-105">The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> object is responsible for processing messages from a <xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType> when the destination address of a message matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> property and the message action matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> property.</span></span> <span data-ttu-id="f9e64-106">如果有兩個 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 物件可以接受訊息，<xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> 屬性值會決定使用較高優先順序的端點。</span><span class="sxs-lookup"><span data-stu-id="f9e64-106">If two <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objects can accept a message, the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> property value determines the higher priority endpoint.</span></span>  
  
 <span data-ttu-id="f9e64-107">使用 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 物件來設定或擴充從相關的 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 接收訊息、將訊息物件轉換為當做參數使用的物件和叫用端點作業的程序，以及執行相反動作的程序。</span><span class="sxs-lookup"><span data-stu-id="f9e64-107">Use the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> object to configure or extend the process of receiving messages from the associated <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>, converting from message objects to objects used as parameters, and invoking an endpoint operation as well as the reverse process.</span></span>  
  
 <span data-ttu-id="f9e64-108">一般而言，端點的 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 是透過實作 <xref:System.ServiceModel.Description.IEndpointBehavior> 介面所取得，但是您也可以從其他行為介面存取 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>。</span><span class="sxs-lookup"><span data-stu-id="f9e64-108">Typically, the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> for an endpoint is obtained by implementing the <xref:System.ServiceModel.Description.IEndpointBehavior> interface, but you can access the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> from the other behavior interfaces.</span></span>  
  
 <span data-ttu-id="f9e64-109">您可以使用下列 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 屬性：</span><span class="sxs-lookup"><span data-stu-id="f9e64-109">You can use the following <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> properties:</span></span>  
  
-   <span data-ttu-id="f9e64-110"><xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> 屬性可讓您取得或設定 <xref:System.ServiceModel.Dispatcher.MessageFilter> 用來識別端點是否可以處理特定訊息的 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher%2A> 物件。</span><span class="sxs-lookup"><span data-stu-id="f9e64-110">The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> property allows you to get or set a <xref:System.ServiceModel.Dispatcher.MessageFilter> object that the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher%2A> uses to identify whether the endpoint can process a particular message.</span></span>  
  
-   <span data-ttu-id="f9e64-111"><xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher%2A> 屬性會取得相關聯的 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 物件，而這個物件會在它與 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 之間傳送和接收訊息，同時可以用來檢查或修改其他的通道相關值和行為。</span><span class="sxs-lookup"><span data-stu-id="f9e64-111">The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher%2A> property gets the associated <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object, which sends and receives messages to and from the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> and which can be used to inspect or modify other channel-related values and behaviors.</span></span>  
  
-   <span data-ttu-id="f9e64-112"><xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> 會取得 <xref:System.ServiceModel.Dispatcher.MessageFilter> 物件，而這個物件會用來識別訊息是否以這個合約為目的端。</span><span class="sxs-lookup"><span data-stu-id="f9e64-112">The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> gets the <xref:System.ServiceModel.Dispatcher.MessageFilter> object that is used to identify whether a message is destined for this contract.</span></span>  
  
-   <span data-ttu-id="f9e64-113"><xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractName%2A> 和 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractNamespace%2A> 屬性會傳回端點合約的名稱和命名空間 (Namespace)。</span><span class="sxs-lookup"><span data-stu-id="f9e64-113">The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractName%2A> and <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractNamespace%2A> properties return the name and namespace of the endpoint contract.</span></span>  
  
-   <span data-ttu-id="f9e64-114"><xref:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime%2A> 屬性會傳回 <xref:System.ServiceModel.Dispatcher.DispatchRuntime> 物件，您可以使用這個物件來修改執行階段值，或為整個端點插入自訂執行階段擴充。</span><span class="sxs-lookup"><span data-stu-id="f9e64-114">The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime%2A> property returns the <xref:System.ServiceModel.Dispatcher.DispatchRuntime> object that you can use to modify run-time values or insert custom run-time extensions for the entire endpoint.</span></span>  
  
-   <span data-ttu-id="f9e64-115"><xref:System.ServiceModel.Dispatcher.EndpointDispatcher.EndpointAddress%2A> 屬性會取得端點的位址。</span><span class="sxs-lookup"><span data-stu-id="f9e64-115">The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.EndpointAddress%2A> property gets the address of the endpoint.</span></span>  
  
-   <span data-ttu-id="f9e64-116"><xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> 屬性會傳回複合篩選條件的優先順序，而 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher%2A> 將使用此複合篩選條件來確定要處理訊息的端點。</span><span class="sxs-lookup"><span data-stu-id="f9e64-116">The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> property returns the priority of the composite filter that the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher%2A> uses to establish which endpoint is to handle the message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9e64-117">下列程式碼範例將示範使用 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 來找出端點的 <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType>，並使用端點行為來插入自訂訊息偵測器。</span><span class="sxs-lookup"><span data-stu-id="f9e64-117">The following code example shows the use of <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> to locate the <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> for the endpoint and inserts a custom message inspector using an endpoint behavior.</span></span>  
  
 [!code-csharp[IEndpointBehavior#4](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9e64-118">初始化 <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointDispatcher (System.ServiceModel.EndpointAddress address, string contractName, string contractNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, string contractName, string contractNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor(System.ServiceModel.EndpointAddress,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, contractName As String, contractNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointDispatcher(System::ServiceModel::EndpointAddress ^ address, System::String ^ contractName, System::String ^ contractNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="f9e64-119">端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-119">The endpoint address.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="f9e64-120">端點合約的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-120">The name of the endpoint contract.</span>
          </span>
        </param>
        <param name="contractNamespace">
          <span data-ttu-id="f9e64-121">端點合約的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-121">The namespace of the endpoint contract.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9e64-122">使用指定的位址、合約名稱和合約命名空間，初始化 <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-122">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> class with the specified address, contract name, and contract namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9e64-123">使用這個建構函式 (Constructor) 來建立不在描述中的端點。</span><span class="sxs-lookup"><span data-stu-id="f9e64-123">Use this constructor to create an endpoint that is not in the description.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointDispatcher (System.ServiceModel.EndpointAddress address, string contractName, string contractNamespace, bool isSystemEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, string contractName, string contractNamespace, bool isSystemEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor(System.ServiceModel.EndpointAddress,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, contractName As String, contractNamespace As String, isSystemEndpoint As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointDispatcher(System::ServiceModel::EndpointAddress ^ address, System::String ^ contractName, System::String ^ contractNamespace, bool isSystemEndpoint);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractNamespace" Type="System.String" />
        <Parameter Name="isSystemEndpoint" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="f9e64-124">端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-124">The endpoint address.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="f9e64-125">端點合約的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-125">The name of the endpoint contract.</span>
          </span>
        </param>
        <param name="contractNamespace">
          <span data-ttu-id="f9e64-126">端點合約的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-126">The namespace of the endpoint contract.</span>
          </span>
        </param>
        <param name="isSystemEndpoint">
          <span data-ttu-id="f9e64-127">
            <see langword="true" /> 表示端點是由伺服器在內部建立，而非使用者所建立；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-127">
              <see langword="true" /> to indicate that the endpoint is created internally by the server and not by the user; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9e64-128">使用指定的位址、合約名稱、合約命名空間，以及端點是否為公用的系統端點，初始化 <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-128">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> class with the specified address, contract name, contract namespace, and whether the endpoint is a public, system endpoint.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressFilter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.MessageFilter AddressFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.MessageFilter AddressFilter" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property AddressFilter As MessageFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::MessageFilter ^ AddressFilter { System::ServiceModel::Dispatcher::MessageFilter ^ get(); void set(System::ServiceModel::Dispatcher::MessageFilter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.MessageFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9e64-129">取得或設定 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 物件，這個物件會用來識別特定訊息是否以這個端點位址為目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-129">Gets or sets a <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> object that is used to identify whether a particular message is destined for the endpoint address.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9e64-130">位址篩選條件，這個篩選條件會用來將訊息傳送到適當的端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-130">The address filter used to route the message to the appropriate endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9e64-131"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType> 對通道所能支援的每個端點都會使用 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>。</span><span class="sxs-lookup"><span data-stu-id="f9e64-131">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType> has an <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> for each endpoint the channel can support.</span></span> <span data-ttu-id="f9e64-132"><xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> 屬性是負責比對訊息目的端點位址的 <xref:System.ServiceModel.Dispatcher.MessageFilter?displayProperty=nameWithType> 物件。</span><span class="sxs-lookup"><span data-stu-id="f9e64-132">The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> property is a <xref:System.ServiceModel.Dispatcher.MessageFilter?displayProperty=nameWithType> object that matches the destination endpoint address of the message.</span></span> <span data-ttu-id="f9e64-133"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 會結合 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> 值與 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> 值，以判定是否要將訊息傳送到此端點。</span><span class="sxs-lookup"><span data-stu-id="f9e64-133">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> combines the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> value with the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> value to determine whether to route a message to this endpoint.</span></span>  
  
 <span data-ttu-id="f9e64-134">如果相符的兩個 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 物件可以處理訊息，則 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> 屬性就可以用來選取端點。</span><span class="sxs-lookup"><span data-stu-id="f9e64-134">In the case where two <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objects that match can process a message, the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> property is used to select an endpoint.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelDispatcher">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.ChannelDispatcher ChannelDispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.ChannelDispatcher ChannelDispatcher" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelDispatcher As ChannelDispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::ChannelDispatcher ^ ChannelDispatcher { System::ServiceModel::Dispatcher::ChannelDispatcher ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ChannelDispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9e64-135">取得相關聯的 <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> 物件，這個物件可以用來檢查或修改其他的通道相關值和行為。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-135">Gets the associated <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> object, which can be used to inspect or modify other channel-related values and behaviors.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9e64-136">通道發送器，可用以檢查或修改其他通道相關的值和行為。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-136">The channel dispatcher which can be used to inspect or modify other channel-related values and behaviors.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9e64-137"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 物件會從通道接收訊息，並使用 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A>、<xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> 和 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> 屬性來判定訊息是由哪個端點處理。</span><span class="sxs-lookup"><span data-stu-id="f9e64-137">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object receives a message from a channel and uses the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A>, <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A>, and <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> properties to determine by which endpoint the message is processed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractFilter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.MessageFilter ContractFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.MessageFilter ContractFilter" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property ContractFilter As MessageFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::MessageFilter ^ ContractFilter { System::ServiceModel::Dispatcher::MessageFilter ^ get(); void set(System::ServiceModel::Dispatcher::MessageFilter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.MessageFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9e64-138">取得或設定 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 物件，而這個物件會用來識別訊息是否以這個合約為目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-138">Gets or sets the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> object that is used to identify whether a message is destined for this contract.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9e64-139">篩選條件，這個篩選條件會用來將訊息傳送到適當的合約。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-139">The filter used to route messages to the appropriate contract.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9e64-140"><xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> 屬性是與訊息動作進行比對的 <xref:System.ServiceModel.Dispatcher.MessageFilter> 物件。</span><span class="sxs-lookup"><span data-stu-id="f9e64-140">The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> property is a <xref:System.ServiceModel.Dispatcher.MessageFilter> object that is matched against the action of a message.</span></span> <span data-ttu-id="f9e64-141"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 會結合 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> 值與 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> 值，以判定是否要將訊息傳送到此端點。</span><span class="sxs-lookup"><span data-stu-id="f9e64-141">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> combines the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> value with the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> value to determine whether to route a message to this endpoint.</span></span>  
  
 <span data-ttu-id="f9e64-142">如果相符的兩個 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 物件可以處理訊息，則 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> 屬性就可以用來選取端點。</span><span class="sxs-lookup"><span data-stu-id="f9e64-142">In the case where two <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objects that match can process a message, the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> property is used to select an endpoint.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9e64-143">取得端點合約名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-143">Gets the endpoint contract name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9e64-144">端點合約的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-144">The name of the endpoint contract.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractNamespace">
      <MemberSignature Language="C#" Value="public string ContractNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractNamespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9e64-145">取得端點合約的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-145">Gets the namespace of the endpoint contract.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9e64-146">端點合約的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-146">The namespace of the endpoint contract.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchRuntime">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.DispatchRuntime DispatchRuntime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.DispatchRuntime DispatchRuntime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DispatchRuntime As DispatchRuntime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::DispatchRuntime ^ DispatchRuntime { System::ServiceModel::Dispatcher::DispatchRuntime ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.DispatchRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9e64-147">取得 <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> 物件，這個物件會用來檢查、修改或擴充整個服務端點或用戶端回呼端點中的執行階段行為。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-147">Gets the <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> object used to inspect, modify, or extend run-time behavior across a service endpoint or a client callback endpoint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9e64-148">
            <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime" /> 物件，這個物件會用來檢查、修改或擴充整個服務端點或用戶端回呼端點中的執行階段行為。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-148">The <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime" /> object used to inspect, modify, or extend run-time behavior across a service endpoint or a client callback endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9e64-149">使用 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime%2A> 屬性，取得 <xref:System.ServiceModel.Dispatcher.DispatchRuntime> 物件來修改執行階段值或為整個端點插入自訂執行階段擴充。</span><span class="sxs-lookup"><span data-stu-id="f9e64-149">Use the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime%2A> property to obtain the <xref:System.ServiceModel.Dispatcher.DispatchRuntime> object to modify run-time values or insert custom run-time extensions for the entire endpoint.</span></span> <span data-ttu-id="f9e64-150">您也可以從 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime%2A> 屬性巡覽至端點的 <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> 集合。</span><span class="sxs-lookup"><span data-stu-id="f9e64-150">From the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime%2A> property, you can also navigate to the <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> collection for the endpoint.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9e64-151">下列程式碼範例將示範使用 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 來找出端點的 <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType>，並使用端點行為來插入自訂訊息偵測器。</span><span class="sxs-lookup"><span data-stu-id="f9e64-151">The following code example shows the use of <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> to locate the <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> for the endpoint and inserts a custom message inspector using an endpoint behavior.</span></span>  
  
 [!code-csharp[IEndpointBehavior#4](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress EndpointAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress EndpointAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.EndpointAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndpointAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ EndpointAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9e64-152">取得端點的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-152">Gets the address of the endpoint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9e64-153">端點的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-153">The address of the endpoint.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterPriority">
      <MemberSignature Language="C#" Value="public int FilterPriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FilterPriority" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FilterPriority { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9e64-154">取得或設定 <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter" /> 和 <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter" /> 組合在 <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher" /> 選取端點時的優先順序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-154">Gets or sets the priority of the <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter" /> and the <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter" /> combination when the <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher" /> is selecting endpoints.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9e64-155">篩選條件的優先順序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-155">The priority of the filter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9e64-156"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 會結合 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> 值與 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> 值，以判定是否要將訊息傳送到此端點。</span><span class="sxs-lookup"><span data-stu-id="f9e64-156">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> combines the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> value with the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> value to determine whether to route a message to this endpoint.</span></span>  
  
 <span data-ttu-id="f9e64-157">如果相符的兩個 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 物件可以處理訊息，則 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> 屬性就可以用來選取端點。</span><span class="sxs-lookup"><span data-stu-id="f9e64-157">In the case where two <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objects that match can process a message, the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> property is used to select an endpoint.</span></span>  
  
 <span data-ttu-id="f9e64-158">如果兩個端點都可以處理訊息，且其 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> 屬性的值相符，這時就會擲回 <xref:System.ServiceModel.Dispatcher.MultipleFilterMatchesException?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f9e64-158">If two endpoints can process a message and the value of their <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> property matches, a <xref:System.ServiceModel.Dispatcher.MultipleFilterMatchesException?displayProperty=nameWithType> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSystemEndpoint">
      <MemberSignature Language="C#" Value="public bool IsSystemEndpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSystemEndpoint" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.IsSystemEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSystemEndpoint As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSystemEndpoint { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9e64-159">取得值，指出端點是否一開始是由伺服器建立而不是使用者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-159">Gets a value that indicates whether the endpoint is created internally by the server and not by the user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9e64-160">如果端點是由系統產生，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9e64-160">
              <see langword="true" /> if the endpoint was generated by the system; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>