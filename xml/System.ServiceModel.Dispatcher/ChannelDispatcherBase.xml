<Type Name="ChannelDispatcherBase" FullName="System.ServiceModel.Dispatcher.ChannelDispatcherBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f11b9d85cad26795cfc2ff3756f71132472a2e9d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37616332" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ChannelDispatcherBase : System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChannelDispatcherBase extends System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChannelDispatcherBase&#xA;Inherits CommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelDispatcherBase abstract : System::ServiceModel::Channels::CommunicationObject" />
  <TypeSignature Language="F#" Value="type ChannelDispatcherBase = class&#xA;    inherit CommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="87ed3-101">通道發送器的抽象基底類別，這個發送器會接受通道並使它們與服務產生關聯。</span>
      <span class="sxs-lookup">
        <span data-stu-id="87ed3-101">Abstract base class for the channel dispatcher that accepts channels and associates them with a service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87ed3-102">這供開發人員想要保留的 Windows Communication Foundation (WCF) 的程式設計模型，但取代系統提供的執行階段。</span><span class="sxs-lookup"><span data-stu-id="87ed3-102">This is used by developers who want to keep the Windows Communication Foundation (WCF) programming model but replace the system-provided runtime.</span></span> <span data-ttu-id="87ed3-103">這類應用程式會從通道提取訊息，並且透過使用者定義的發送器直接處理訊息。</span><span class="sxs-lookup"><span data-stu-id="87ed3-103">Such applications will pull messages out of channels and handle them directly with user-defined dispatchers.</span></span> <span data-ttu-id="87ed3-104">若要使用 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>，請從這個類別衍生類別，接著擴充 <xref:System.ServiceModel.ServiceHost> 和覆寫 <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>，並將您衍生自 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 類別的執行個體加入至 <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>。</span><span class="sxs-lookup"><span data-stu-id="87ed3-104">To use <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> , create a class derived from it, extend <xref:System.ServiceModel.ServiceHost> and override <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, adding instances of your class derived from <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> to <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.</span></span>  
  
 <span data-ttu-id="87ed3-105">與 <xref:System.ServiceModel.Channels.IChannelListener> 物件關聯的 <xref:System.ServiceModel.ServiceHost> 和 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>，可以分別透過 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> 和 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> 進行檢查或修改。</span><span class="sxs-lookup"><span data-stu-id="87ed3-105">The <xref:System.ServiceModel.Channels.IChannelListener> and the <xref:System.ServiceModel.ServiceHost>, associated with the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> object are available for inspection or modification through the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> and <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> respectively.</span></span>  
  
 <span data-ttu-id="87ed3-106"><xref:System.ServiceModel.ServiceHost> 會在其 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> 集合中加入或移除 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> 項目時，呼叫 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 或 <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="87ed3-106"><xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> or <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> methods when adding or removing a <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> item from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span>  
  
 <span data-ttu-id="87ed3-107"><xref:System.ServiceModel.ServiceHost> 會在關閉 InstanceContexts 之前的關機期間呼叫 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A>。</span><span class="sxs-lookup"><span data-stu-id="87ed3-107"><xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> during shutdown before closing InstanceContexts.</span></span> <span data-ttu-id="87ed3-108">Windows Communication Foundation (WCF) 會使用這個呼叫來關閉資料包通道，並等候所有訊息都到達 InstanceContext。</span><span class="sxs-lookup"><span data-stu-id="87ed3-108">Windows Communication Foundation (WCF) uses this call to close datagram channels and wait for all messages to get to an InstanceContext.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelDispatcherBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelDispatcherBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="87ed3-109">初始化 <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87ed3-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="protected virtual void Attach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Attach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Attach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Attach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="abstract member Attach : System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Attach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcherBase.Attach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="87ed3-110">服務的 <see cref="T:System.ServiceModel.ServiceHostBase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87ed3-110">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87ed3-111">在衍生類別中覆寫時，將通道發送器附加至特定的主機。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87ed3-111">When overridden in a derived class, attaches the channel dispatcher to a specific host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87ed3-112">這個方法只有在 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 的執行個體處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態時才可以進行設定，因為這是唯一同時處於可變動且尚未處置的狀態。</span><span class="sxs-lookup"><span data-stu-id="87ed3-112">This method can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="87ed3-113"><xref:System.ServiceModel.ServiceHost> 會在 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 已加入其 <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> 集合時呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="87ed3-113">A <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is added to its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span>  <span data-ttu-id="87ed3-114">這讓 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 有機會攔截 (Hook) 事件和檢查 <xref:System.ServiceModel.ServiceHost>，並提供應該要從 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> 屬性傳回的值。</span><span class="sxs-lookup"><span data-stu-id="87ed3-114">This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to hook events and inspect the <xref:System.ServiceModel.ServiceHost>, and provides the value that should be returned from the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87ed3-115">
            <paramref name="host" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87ed3-115">
              <paramref name="host" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="87ed3-116">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態中，或是主機已設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87ed3-116">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state or the host is already set.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="87ed3-117">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87ed3-117">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="87ed3-118">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87ed3-118">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public virtual void CloseInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseInput();" />
      <MemberSignature Language="F#" Value="abstract member CloseInput : unit -&gt; unit&#xA;override this.CloseInput : unit -&gt; unit" Usage="channelDispatcherBase.CloseInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="87ed3-119">在衍生類別中覆寫時，移除與通道發送器相關聯的端點發送器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87ed3-119">When overridden in a derived class, removes the endpoint dispatchers associated with the channel dispatcher.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87ed3-120"><xref:System.ServiceModel.ServiceHost> 會在關機時呼叫這個方法，讓發送器有機會清空訊息。</span><span class="sxs-lookup"><span data-stu-id="87ed3-120"><xref:System.ServiceModel.ServiceHost> calls this method during shutdown to give the dispatcher a chance to drain messages.</span></span> <span data-ttu-id="87ed3-121"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 則使用這個呼叫來關閉資料包通道。</span><span class="sxs-lookup"><span data-stu-id="87ed3-121"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> uses this call to close datagram channels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="protected virtual void Detach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Detach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Detach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Detach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="abstract member Detach : System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Detach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcherBase.Detach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="87ed3-122">
            <see cref="T:System.ServiceModel.ServiceHostBase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87ed3-122">The <see cref="T:System.ServiceModel.ServiceHostBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87ed3-123">在衍生類別中覆寫時，從特定主機中斷通道發送器的連結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87ed3-123">When overridden in a derived class, detaches the channel dispatcher from a specific host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87ed3-124"><xref:System.ServiceModel.ServiceHostBase> 只有在 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 的執行個體處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態時才可以進行中斷，因為這是唯一同時處於可變動且尚未處置的狀態。</span><span class="sxs-lookup"><span data-stu-id="87ed3-124">The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="87ed3-125">應該將與通道發送器相關聯的 <xref:System.ServiceModel.ServiceHostBase> 設定為 `null`。</span><span class="sxs-lookup"><span data-stu-id="87ed3-125">Should set the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`.</span></span>  
  
 <span data-ttu-id="87ed3-126"><xref:System.ServiceModel.ServiceHost> 會在 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 已自其 <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> 集合中移除時呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="87ed3-126"><xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is removed from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span> <span data-ttu-id="87ed3-127">這讓 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 有機會取消攔截 (Unhook) 事件和檢查 <xref:System.ServiceModel.ServiceHost>。</span><span class="sxs-lookup"><span data-stu-id="87ed3-127">This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to unhook events and inspect the <xref:System.ServiceModel.ServiceHost>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87ed3-128">
            <paramref name="host" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87ed3-128">
              <paramref name="host" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="87ed3-129">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態中，或是主機已設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87ed3-129">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state or the host is already set.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="87ed3-130">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87ed3-130">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="87ed3-131">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87ed3-131">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : System.ServiceModel.ServiceHostBase" Usage="System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="87ed3-132">在衍生類別中覆寫時，取得與通道發送器相關聯的服務主機。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87ed3-132">When overridden in a derived class, gets the service host associated with the channel dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="87ed3-133">與發送器相關聯之服務的 <see cref="T:System.ServiceModel.ServiceHostBase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87ed3-133">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service associated with the dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87ed3-134">每個 <xref:System.ServiceModel.ServiceHost> 物件可以有許多 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 物件，而其中每個物件都與服務的不同 <xref:System.ServiceModel.Channels.IChannelListener> 具有關聯。</span><span class="sxs-lookup"><span data-stu-id="87ed3-134">Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service.</span></span> <span data-ttu-id="87ed3-135">這個主機會在 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 集合中保留這些 <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> 物件的清單。</span><span class="sxs-lookup"><span data-stu-id="87ed3-135">The host keeps a list of these <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> objects in the <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.IChannelListener Listener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.IChannelListener Listener" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Listener As IChannelListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::IChannelListener ^ Listener { System::ServiceModel::Channels::IChannelListener ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listener : System.ServiceModel.Channels.IChannelListener" Usage="System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="87ed3-136">在衍生類別中覆寫時，取得與通道發送器相關聯的通道接聽程式 (Listener)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87ed3-136">When overridden in a derived class, gets the channel listener associated with the channel dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="87ed3-137">與通道發送器相關聯的 <see cref="T:System.ServiceModel.Channels.IChannelListener" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87ed3-137">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> associated with the channel dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87ed3-138"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 會與這個 <xref:System.ServiceModel.Channels.IChannelListener> 產生關聯，而這個接聽程式的通道和訊息是由這個 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 分派。</span><span class="sxs-lookup"><span data-stu-id="87ed3-138">A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> whose channels and messages this <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is dispatching.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>