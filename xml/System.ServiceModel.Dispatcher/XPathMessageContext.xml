<Type Name="XPathMessageContext" FullName="System.ServiceModel.Dispatcher.XPathMessageContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c5eeca87fbd9ff65af2db3513f57e995c8bdd7a1" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53512575" /></Metadata><TypeSignature Language="C#" Value="public class XPathMessageContext : System.Xml.Xsl.XsltContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi XPathMessageContext extends System.Xml.Xsl.XsltContext" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.XPathMessageContext" />
  <TypeSignature Language="VB.NET" Value="Public Class XPathMessageContext&#xA;Inherits XsltContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class XPathMessageContext : System::Xml::Xsl::XsltContext" />
  <TypeSignature Language="F#" Value="type XPathMessageContext = class&#xA;    inherit XsltContext" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Xsl.XsltContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定義數個在對 SOAP 文件評估 XPath 運算式時常用的 XPath 函式和命名空間對應。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XPath 引擎提供完整的 XPath 內容支援，並且和 <xref:System.Xml.Xsl.XsltContext> 一樣，會使用 .NET Framework 的 <xref:System.Xml.XPath.XPathNavigator> 類別來實作這項支援。 <xref:System.Xml.Xsl.XsltContext> 是一個抽象類別，開發人員可以用來實作自訂 XPath 函式程式庫和宣告 XPath 變數。 <xref:System.Xml.Xsl.XsltContext> 是 <xref:System.Xml.XmlNamespaceManager>，因此也會包含命名空間前置詞對應。  
  
 篩選引擎會實作名為 <xref:System.Xml.Xsl.XsltContext> 的 <xref:System.ServiceModel.Dispatcher.XPathMessageContext>。 <xref:System.ServiceModel.Dispatcher.XPathMessageContext> 會定義可在 XPath 運算式中使用的自訂函式，並且會宣告數個通用的命名空間前置詞對應。 下表列出所定義的自訂函式<xref:System.ServiceModel.Dispatcher.XPathMessageContext>，可以使用 XPath 運算式中。  
  
|XPath 函式|描述|  
|--------------------|-----------------|  
|body|傳回在 SOAP Body 節點，不論 SOAP 版本 (1.1。 或 1.2）。|  
|標頭|傳回的 SOAP 標頭節點，不論 （1.1 或 1.2） 的 SOAP 版本。|  
|相互關聯資料|會採用輸入的字串並傳回相關聯的相互關聯訊息屬性的值。  ' wsc instanceId' 是保留的字串，用於內容為基礎的相互關聯。|  
|messageId|傳回之 Ws-addressing 的 MessageID 標頭的值。|  
|RelatesTo|傳回之 Ws-addressing 的 RelatesTo 標頭的值，不限於任何版本 （August2004 或 WSA 1.0）。|  
|ReplyTo|傳回的 Ws-addressing ReplyTo 標頭值，不限於任何版本 （August2004 或 WSA 1.0）。|  
|由|傳回從 Ws-addressing 標頭的值，不限於任何版本 （August2004 或 WSA 1.0）。|  
|faultTo|傳回的 Ws-addressing FaultTo 標頭值，不限於任何版本 （August2004 或 WSA 1.0）。|  
|設為|傳回值的 Ws-addressing 標頭的如果有的話，否則會傳回匿名。|  
|action|傳回的 Ws-addressing 動作標頭的值。|  
|soap uri|傳回的 SOAP 命名空間 uri。|  
|標頭與動作項目|接受的 SOAP 動作項目 uri，並傳回包含該動作項目，不論 SOAP 版本 （1.1 或 1.2） 的所有標頭。|  
|動作項目|傳回第一個子節點，不論 SOAP 版本 （1.1 或 1.2） 的 SOAP 動作項目 uri。|  
|is-mandatory|傳回第一個子節點為必要項目，不論 （1.1 或 1.2） 的 SOAP 版本。|  
|是-動作項目-下一步|傳回第一個子節點的 SOAP 動作項目 uri 假設下一步 的角色，但不限於任何 SOAP 版本 （1.1 或 1.2）。|  
|is-actor-ultimate-receiver|傳回第一個子節點的 SOAP 動作項目 uri 假設 UltimateReceiver 角色時，不限於任何 SOAP 版本 （1.1 或 1.2）。|  
|日期時間|接受輸入的日期字串並傳回轉換為雙精度浮點數的值。|  
|持續期間|採用輸入的 timespan 字串並傳回值為總天數。|  
|utc-現在|傳回的值<xref:System.DateTime.UtcNow%2A>。|  
  
 下表列出所宣告的預設命名空間和命名空間前置詞<xref:System.ServiceModel.Dispatcher.XPathMessageContext>。  
  
|前置詞|命名空間|  
|------------|---------------|  
|s11|http://schemas.xmlsoap.org/soap/envelope|  
|s12|http://www.w3.org/2003/05/soap-envelope|  
|wsaAugust2004|http://schemas.xmlsoap.org/ws/2004/08/addressing|  
|wsa10|http://www.w3.org/2005/08/addressing|  
|/sm|http://schemas.microsoft.com/serviceModel/2004/05/xpathfunctions|  
|tempuri|http://tempuri.org|  
|ser|http://schemas.microsoft.com/2003/10/Serialization|  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>建立 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" /> 的執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" /> 的執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageContext (System.Xml.NameTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.NameTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor(System.Xml.NameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (table As NameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageContext(System::Xml::NameTable ^ table);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.XPathMessageContext : System.Xml.NameTable -&gt; System.ServiceModel.Dispatcher.XPathMessageContext" Usage="new System.ServiceModel.Dispatcher.XPathMessageContext table" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="System.Xml.NameTable" />
      </Parameters>
      <Docs>
        <param name="table">在內部用於儲存字串的 <see cref="T:System.Xml.NameTable" /> 類別。</param>
        <summary>使用指定的 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" /> 初始化 <see cref="T:System.Xml.NameTable" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 許多類別 (包括這個 <xref:System.Xml.XmlDocument> 類別) 和 <xref:System.Xml.XmlReader> 會在內部使用 <xref:System.Xml.NameTable> 類別，以儲存屬性和項目名稱。 當項目或屬性名稱在 XML 文件中出現多次時，它只會在 <xref:System.Xml.NameTable> 中儲存一次。 這些名稱會儲存為 Common Language Runtime (CLR) 物件型別。 這可讓您對這些字串進行物件比較，而不需要更耗費資源的字串比較。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareDocument">
      <MemberSignature Language="C#" Value="public override int CompareDocument (string baseUri, string nextBaseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 CompareDocument(string baseUri, string nextBaseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageContext.CompareDocument(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CompareDocument (baseUri As String, nextBaseUri As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int CompareDocument(System::String ^ baseUri, System::String ^ nextBaseUri);" />
      <MemberSignature Language="F#" Value="override this.CompareDocument : string * string -&gt; int" Usage="xPathMessageContext.CompareDocument (baseUri, nextBaseUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.String" />
        <Parameter Name="nextBaseUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">第一份要比較之文件的基底 URI。</param>
        <param name="nextBaseUri">第二份要比較之文件的基底 URI。</param>
        <summary>根據 XSLT 處理器載入兩個文件的順序，比較它們的基底統一資源識別元 (URI)。</summary>
        <returns>一律傳回 0。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性應該在衍生類別中覆寫，才能加以使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveWhitespace">
      <MemberSignature Language="C#" Value="public override bool PreserveWhitespace (System.Xml.XPath.XPathNavigator node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool PreserveWhitespace(class System.Xml.XPath.XPathNavigator node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function PreserveWhitespace (node As XPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool PreserveWhitespace(System::Xml::XPath::XPathNavigator ^ node);" />
      <MemberSignature Language="F#" Value="override this.PreserveWhitespace : System.Xml.XPath.XPathNavigator -&gt; bool" Usage="xPathMessageContext.PreserveWhitespace node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="node">目前內容中要保留或刪除的空白區節點。</param>
        <summary>評估指定的內容是否要保留或刪除空白區節點。</summary>
        <returns>一律傳回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性應該在衍生類別中覆寫，才能加以使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveFunction">
      <MemberSignature Language="C#" Value="public override System.Xml.Xsl.IXsltContextFunction ResolveFunction (string prefix, string name, System.Xml.XPath.XPathResultType[] argTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.Xsl.IXsltContextFunction ResolveFunction(string prefix, string name, valuetype System.Xml.XPath.XPathResultType[] argTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveFunction (prefix As String, name As String, argTypes As XPathResultType()) As IXsltContextFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::Xsl::IXsltContextFunction ^ ResolveFunction(System::String ^ prefix, System::String ^ name, cli::array &lt;System::Xml::XPath::XPathResultType&gt; ^ argTypes);" />
      <MemberSignature Language="F#" Value="override this.ResolveFunction : string * string * System.Xml.XPath.XPathResultType[] -&gt; System.Xml.Xsl.IXsltContextFunction" Usage="xPathMessageContext.ResolveFunction (prefix, name, argTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.IXsltContextFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="argTypes" Type="System.Xml.XPath.XPathResultType[]" />
      </Parameters>
      <Docs>
        <param name="prefix">函式出現在 XPath 運算式時所具有的前置詞。</param>
        <param name="name">函式的名稱。</param>
        <param name="argTypes">要加以解析之函式的引數型別陣列。 這讓您可以選取具有相同名稱的方法 (例如，多載方法)。</param>
        <summary>解析函式參考並傳回表示函式的 <see cref="T:System.Xml.Xsl.IXsltContextFunction" />。</summary>
        <returns>表示函式的 <see cref="T:System.Xml.Xsl.IXsltContextFunction" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [T:System.Xml.Xsl.IXsltContextFunction](ms-help://MS.MSSDK.1033/MS.WinFXSDK.1033/cpref37/html/T_System_Xml_Xsl_IXsltContextFunction.htm)在執行階段用來評估函式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="argTypes" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveVariable">
      <MemberSignature Language="C#" Value="public override System.Xml.Xsl.IXsltContextVariable ResolveVariable (string prefix, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.Xsl.IXsltContextVariable ResolveVariable(string prefix, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageContext.ResolveVariable(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveVariable (prefix As String, name As String) As IXsltContextVariable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::Xsl::IXsltContextVariable ^ ResolveVariable(System::String ^ prefix, System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.ResolveVariable : string * string -&gt; System.Xml.Xsl.IXsltContextVariable" Usage="xPathMessageContext.ResolveVariable (prefix, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.IXsltContextVariable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">變數出現在 XPath 運算式時所具有的前置詞。</param>
        <param name="name">變數的名稱。</param>
        <summary>解析變數參考並傳回表示變數的 <see cref="T:System.Xml.Xsl.IXsltContextVariable" />。</summary>
        <returns><see cref="T:System.Xml.Xsl.IXsltContextVariable" />，表示在執行階段的變數。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Xsl.IXsltContextVariable> 會在執行時間用來取得變數的值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Whitespace">
      <MemberSignature Language="C#" Value="public override bool Whitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Whitespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageContext.Whitespace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Whitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Whitespace { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Whitespace : bool" Usage="System.ServiceModel.Dispatcher.XPathMessageContext.Whitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值會指出是否要在輸出中包含空白區 (White Space) 節點。</summary>
        <value>一律傳回 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性應該在衍生類別中覆寫，才能加以使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>