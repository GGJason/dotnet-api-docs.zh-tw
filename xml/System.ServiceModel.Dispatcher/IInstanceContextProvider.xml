<Type Name="IInstanceContextProvider" FullName="System.ServiceModel.Dispatcher.IInstanceContextProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d0aa99f55ad7d6609f503f36a43869a0e77c65cc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IInstanceContextProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInstanceContextProvider" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInstanceContextProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInstanceContextProvider" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2ac5b-101">實作此類別，即可參與建立或選擇 <see cref="T:System.ServiceModel.InstanceContext" /> 物件，特別是用來啟用共用工作階段。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ac5b-101">Implement to participate in the creation or choosing of a <see cref="T:System.ServiceModel.InstanceContext" /> object, especially to enable shared sessions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac5b-102">實作 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> 介面，即可為系統提供適當的 <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> 物件。</span><span class="sxs-lookup"><span data-stu-id="2ac5b-102">Implement the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> interface to provide the appropriate <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> object to the system.</span></span> <span data-ttu-id="2ac5b-103">一般而言，實作這個介面是為了支援共用工作階段、啟用服務執行個體集區、控制服務執行個體的存留時間，或是群組用戶端之間的內容。</span><span class="sxs-lookup"><span data-stu-id="2ac5b-103">Typically, this interface is implemented to support shared sessions, enable service instance pooling, control lifetimes of service instances, or to group contexts among clients.</span></span>  
  
 <span data-ttu-id="2ac5b-104">例如，若要實作共用，您可以插入自訂 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> 來決定讓用戶端中的哪一個工作階段或呼叫與哪一個 <xref:System.ServiceModel.InstanceContext> 物件產生關聯。</span><span class="sxs-lookup"><span data-stu-id="2ac5b-104">For example, to implement sharing, insert a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> to decide which session or call from a client is associated with which <xref:System.ServiceModel.InstanceContext> object.</span></span> <span data-ttu-id="2ac5b-105">如需示範共用執行個體內容的範例，請參閱[InstanceContextSharing](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230)。</span><span class="sxs-lookup"><span data-stu-id="2ac5b-105">For an example that demonstrates the sharing of instance contexts, see [InstanceContextSharing](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ac5b-106">將 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> 插入至 [!INCLUDE[indigo1](~/includes/indigo1-md.md)] 之後，控制 <xref:System.ServiceModel.InstanceContext> 物件 (<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> 屬性) 之建立作業的一般屬性就不再接受檢查，而且沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="2ac5b-106">When an <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> is inserted into [!INCLUDE[indigo1](~/includes/indigo1-md.md)], the normal property that controls the creation of <xref:System.ServiceModel.InstanceContext> objects (the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> property) is no longer checked and has no effect.</span></span>  
  
 <span data-ttu-id="2ac5b-107">有一個較為通用的機制是 <xref:System.ServiceModel.InstanceContext>，您可以在建立 (例如，附加自訂擴充至每個 <xref:System.ServiceModel.InstanceContext>) 時，透過此介面初始化 <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType> 物件。</span><span class="sxs-lookup"><span data-stu-id="2ac5b-107">A more generic mechanism by which you can initialize <xref:System.ServiceModel.InstanceContext> objects when created (for example, to attach custom extensions to each <xref:System.ServiceModel.InstanceContext>) is the <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetExistingInstanceContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.InstanceContext GetExistingInstanceContext (System.ServiceModel.Channels.Message message, System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.InstanceContext GetExistingInstanceContext(class System.ServiceModel.Channels.Message message, class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::InstanceContext ^ GetExistingInstanceContext(System::ServiceModel::Channels::Message ^ message, System::ServiceModel::IContextChannel ^ channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="2ac5b-108">傳入訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac5b-108">The incoming message.</span>
          </span>
        </param>
        <param name="channel">
          <span data-ttu-id="2ac5b-109">收到訊息的通道。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac5b-109">The channel that received the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac5b-110">當收到新的訊息時呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac5b-110">Called when a new message is received.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac5b-111">可用來處理訊息的 <see cref="T:System.ServiceModel.InstanceContext" /> 物件；傳回 <see langword="null" /> 時會指示 [!INCLUDE[indigo2](~/includes/indigo2-md.md)] 建立新的 <see cref="T:System.ServiceModel.InstanceContext" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac5b-111">The <see cref="T:System.ServiceModel.InstanceContext" /> object that is used to process the message; return <see langword="null" /> to instruct [!INCLUDE[indigo2](~/includes/indigo2-md.md)] to create a new <see cref="T:System.ServiceModel.InstanceContext" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac5b-112">在收到訊息時，便會呼叫 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2ac5b-112">The <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> method is called when a message is received.</span></span> <span data-ttu-id="2ac5b-113">傳回要用來處理訊息的 <xref:System.ServiceModel.InstanceContext> 物件，或者傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="2ac5b-113">Return the <xref:System.ServiceModel.InstanceContext> object that you want to process the message, or `null`.</span></span> <span data-ttu-id="2ac5b-114">如果是 `null`，[!INCLUDE[indigo2](~/includes/indigo2-md.md)] 就會為訊息建立新的 <xref:System.ServiceModel.InstanceContext> 物件，然後呼叫 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2ac5b-114">In the case of `null`, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] creates a new <xref:System.ServiceModel.InstanceContext> object for the message and then calls the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> method.</span></span>  
  
 <span data-ttu-id="2ac5b-115">如果您傳回 `null`，新的 <xref:System.ServiceModel.InstanceContext> 物件會通過節流系統，並遞增 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=nameWithType> 的計數。</span><span class="sxs-lookup"><span data-stu-id="2ac5b-115">If you return `null`, the new <xref:System.ServiceModel.InstanceContext> object goes through the throttling system and increments the count of <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeInstanceContext">
      <MemberSignature Language="C#" Value="public void InitializeInstanceContext (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.Channels.Message message, System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeInstanceContext(class System.ServiceModel.InstanceContext instanceContext, class System.ServiceModel.Channels.Message message, class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeInstanceContext(System::ServiceModel::InstanceContext ^ instanceContext, System::ServiceModel::Channels::Message ^ message, System::ServiceModel::IContextChannel ^ channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="instanceContext">
          <span data-ttu-id="2ac5b-116">新的 <see cref="T:System.ServiceModel.InstanceContext" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac5b-116">The new <see cref="T:System.ServiceModel.InstanceContext" /> object.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="2ac5b-117">傳入訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac5b-117">The incoming message.</span>
          </span>
        </param>
        <param name="channel">
          <span data-ttu-id="2ac5b-118">收到訊息的通道。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac5b-118">The channel that received the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac5b-119">當 <see langword="null" /> 方法傳回 <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" /> 時進行呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac5b-119">Called when <see langword="null" /> is returned from the <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac5b-120">當 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> 傳回 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> 而建立新的 `null` 物件時進行呼叫 <xref:System.ServiceModel.InstanceContext>。</span><span class="sxs-lookup"><span data-stu-id="2ac5b-120"><xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> is called when <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> returns `null` and a new <xref:System.ServiceModel.InstanceContext> object is created.</span></span> <span data-ttu-id="2ac5b-121">呼叫這個方法的目的是要通知您新的 <xref:System.ServiceModel.InstanceContext> 已建立。</span><span class="sxs-lookup"><span data-stu-id="2ac5b-121">This method is called to notify you that a new <xref:System.ServiceModel.InstanceContext> has been created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle (System.ServiceModel.InstanceContext instanceContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsIdle(class System.ServiceModel.InstanceContext instanceContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsIdle(System::ServiceModel::InstanceContext ^ instanceContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
      </Parameters>
      <Docs>
        <param name="instanceContext">
          <span data-ttu-id="2ac5b-122">被視為閒置的 <see cref="T:System.ServiceModel.InstanceContext" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac5b-122">The <see cref="T:System.ServiceModel.InstanceContext" /> object that is considered idle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac5b-123">當所有 <see cref="T:System.ServiceModel.InstanceContext" /> 活動完成時進行呼叫，以便實作器可以防止 <see cref="T:System.ServiceModel.InstanceContext" /> 被回收。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac5b-123">Called when all <see cref="T:System.ServiceModel.InstanceContext" /> activities have completed to enable implementers to prevent the <see cref="T:System.ServiceModel.InstanceContext" /> from being recycled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ac5b-124">如果 [!INCLUDE[indigo1](~/includes/indigo1-md.md)] 要關閉並回收 <see cref="T:System.ServiceModel.InstanceContext" /> 物件，而且要調整 <see cref="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances" /> 的值，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac5b-124">
              <see langword="true" /> if [!INCLUDE[indigo1](~/includes/indigo1-md.md)] is to close and recycle the <see cref="T:System.ServiceModel.InstanceContext" /> object and adjust the value of <see cref="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac5b-125">當 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> 即將關閉並回收閒置的 [!INCLUDE[indigo2](~/includes/indigo2-md.md)] 物件時呼叫 <xref:System.ServiceModel.InstanceContext>，以便向執行階段通知是否要繼續執行此項作業。</span><span class="sxs-lookup"><span data-stu-id="2ac5b-125"><xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> is called when [!INCLUDE[indigo2](~/includes/indigo2-md.md)] is about to close and recycle an idle <xref:System.ServiceModel.InstanceContext> object so that you can inform the runtime whether to continue doing so.</span></span>  
  
 <span data-ttu-id="2ac5b-126">如需示範共用執行個體內容的範例，請參閱[InstanceContextSharing](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230)。</span><span class="sxs-lookup"><span data-stu-id="2ac5b-126">For an example that demonstrates the sharing of instance contexts, see [InstanceContextSharing](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyIdle">
      <MemberSignature Language="C#" Value="public void NotifyIdle (System.ServiceModel.Dispatcher.InstanceContextIdleCallback callback, System.ServiceModel.InstanceContext instanceContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyIdle(class System.ServiceModel.Dispatcher.InstanceContextIdleCallback callback, class System.ServiceModel.InstanceContext instanceContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyIdle(System::ServiceModel::Dispatcher::InstanceContextIdleCallback ^ callback, System::ServiceModel::InstanceContext ^ instanceContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.ServiceModel.Dispatcher.InstanceContextIdleCallback" />
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="2ac5b-127">
            <see cref="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback" /> 物件，這個物件會在即將關閉和回收 [!INCLUDE[indigo2](~/includes/indigo2-md.md)] 物件時通知 <see cref="T:System.ServiceModel.InstanceContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac5b-127">The <see cref="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback" /> object that notifies [!INCLUDE[indigo2](~/includes/indigo2-md.md)] when the <see cref="T:System.ServiceModel.InstanceContext" /> object is to be closed and recycled.</span>
          </span>
        </param>
        <param name="instanceContext">
          <span data-ttu-id="2ac5b-128">目前的 <see cref="T:System.ServiceModel.InstanceContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac5b-128">The current <see cref="T:System.ServiceModel.InstanceContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ac5b-129">當 <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" /> 方法傳回 <see langword="false" /> 時進行呼叫，以便實作器能夠在 [!INCLUDE[indigo2](~/includes/indigo2-md.md)] 物件完成時提供回呼 (Callback) 來通知 <see cref="T:System.ServiceModel.InstanceContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ac5b-129">Called when the <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" /> method returns <see langword="false" /> to enable implementers to provide a callback to notify [!INCLUDE[indigo2](~/includes/indigo2-md.md)] when the <see cref="T:System.ServiceModel.InstanceContext" /> object is finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ac5b-130">當 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A> 方法傳回 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> 時呼叫 `false` 方法，讓您能夠為 [!INCLUDE[indigo2](~/includes/indigo2-md.md)] 提供 <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType> 物件，以便用來向執行階段通知 <xref:System.ServiceModel.InstanceContext> 已完成其工作。</span><span class="sxs-lookup"><span data-stu-id="2ac5b-130">The <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A> method is called when the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> method returns `false` to enable you to provide [!INCLUDE[indigo2](~/includes/indigo2-md.md)] with a <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType> object that you use to inform the runtime that the <xref:System.ServiceModel.InstanceContext> has finished its work.</span></span> <span data-ttu-id="2ac5b-131">當 <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType> 物件通知執行階段關於 <xref:System.ServiceModel.InstanceContext> 已完成其工作時，[!INCLUDE[indigo2](~/includes/indigo2-md.md)] 會再次呼叫 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A>。</span><span class="sxs-lookup"><span data-stu-id="2ac5b-131">When the <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType> object notifies the runtime that the <xref:System.ServiceModel.InstanceContext> has finished its work, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] calls <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> once again.</span></span> <span data-ttu-id="2ac5b-132">這個循環會一直持續，直到 <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> 傳回 `true` 而該內容已關閉並回收為止。</span><span class="sxs-lookup"><span data-stu-id="2ac5b-132">This cycle continues until <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> returns `true` and the context is closed and recycled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>