<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IInstanceContextProvider.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d0aa99f55ad7d6609f503f36a43869a0e77c65cc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d0aa99f55ad7d6609f503f36a43869a0e77c65cc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.IInstanceContextProvider">
          <source>Implement to participate in the creation or choosing of a <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object, especially to enable shared sessions.</source>
          <target state="translated">實作此類別，即可參與建立或選擇 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> 物件，特別是用來啟用共用工作階段。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInstanceContextProvider">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider&gt;</ph> interface to provide the appropriate <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType&gt;</ph> object to the system.</source>
          <target state="translated">實作 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider&gt;</ph> 介面，即可為系統提供適當的 <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInstanceContextProvider">
          <source>Typically, this interface is implemented to support shared sessions, enable service instance pooling, control lifetimes of service instances, or to group contexts among clients.</source>
          <target state="translated">一般而言，實作這個介面是為了支援共用工作階段、啟用服務執行個體集區、控制服務執行個體的存留時間，或是群組用戶端之間的內容。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInstanceContextProvider">
          <source>For example, to implement sharing, insert a custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider&gt;</ph> to decide which session or call from a client is associated with which <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object.</source>
          <target state="translated">例如，若要實作共用，您可以插入自訂 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider&gt;</ph> 來決定讓用戶端中的哪一個工作階段或呼叫與哪一個 <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> 物件產生關聯。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInstanceContextProvider">
          <source>For an example that demonstrates the sharing of instance contexts, see <bpt id="p1">[</bpt>InstanceContextSharing<ept id="p1">](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230)</ept>.</source>
          <target state="translated">如需示範共用執行個體內容的範例，請參閱<bpt id="p1">[</bpt>InstanceContextSharing<ept id="p1">](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230)</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInstanceContextProvider">
          <source>When an <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider&gt;</ph> is inserted into <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>, the normal property that controls the creation of <ph id="ph3">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> objects (the <ph id="ph4">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType&gt;</ph> property) is no longer checked and has no effect.</source>
          <target state="translated">將 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider&gt;</ph> 插入至 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 之後，控制 <ph id="ph3">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> 物件 (<ph id="ph4">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType&gt;</ph> 屬性) 之建立作業的一般屬性就不再接受檢查，而且沒有任何作用。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInstanceContextProvider">
          <source>A more generic mechanism by which you can initialize <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> objects when created (for example, to attach custom extensions to each <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph>) is the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">有一個較為通用的機制是 <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph>，您可以在建立 (例如，附加自訂擴充至每個 <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph>) 時，透過此介面初始化 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
          <source>The incoming message.</source>
          <target state="translated">傳入訊息。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
          <source>The channel that received the message.</source>
          <target state="translated">收到訊息的通道。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
          <source>Called when a new message is received.</source>
          <target state="translated">當收到新的訊息時呼叫。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object that is used to process the message; return <ph id="ph2">&lt;see langword="null" /&gt;</ph> to instruct <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> to create a new <ph id="ph4">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object.</source>
          <target state="translated">可用來處理訊息的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> 物件；傳回 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 時會指示 <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 建立新的 <ph id="ph4">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A&gt;</ph> method is called when a message is received.</source>
          <target state="translated">在收到訊息時，便會呼叫 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
          <source>Return the <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object that you want to process the message, or <ph id="ph2">`null`</ph>.</source>
          <target state="translated">傳回要用來處理訊息的 <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> 物件，或者傳回 <ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
          <source>In the case of <ph id="ph1">`null`</ph>, <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> creates a new <ph id="ph3">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object for the message and then calls the <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A&gt;</ph> method.</source>
          <target state="translated">如果是 <ph id="ph1">`null`</ph>，<ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 就會為訊息建立新的 <ph id="ph3">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> 物件，然後呼叫 <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
          <source>If you return <ph id="ph1">`null`</ph>, the new <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object goes through the throttling system and increments the count of <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果您傳回 <ph id="ph1">`null`</ph>，新的 <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> 物件會通過節流系統，並遞增 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=nameWithType&gt;</ph> 的計數。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
          <source>The incoming message.</source>
          <target state="translated">傳入訊息。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
          <source>The channel that received the message.</source>
          <target state="translated">收到訊息的通道。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
          <source>Called when <ph id="ph1">&lt;see langword="null" /&gt;</ph> is returned from the <ph id="ph2">&lt;see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" /&gt;</ph> method.</source>
          <target state="translated">當 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 方法傳回 <ph id="ph2">&lt;see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" /&gt;</ph> 時進行呼叫。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A&gt;</ph> is called when <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A&gt;</ph> returns <ph id="ph3">`null`</ph> and a new <ph id="ph4">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object is created.</source>
          <target state="translated">當 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A&gt;</ph> 傳回 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A&gt;</ph> 而建立新的 <ph id="ph3">`null`</ph> 物件時進行呼叫 <ph id="ph4">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
          <source>This method is called to notify you that a new <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> has been created.</source>
          <target state="translated">呼叫這個方法的目的是要通知您新的 <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> 已建立。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object that is considered idle.</source>
          <target state="translated">被視為閒置的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)">
          <source>Called when all <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> activities have completed to enable implementers to prevent the <ph id="ph2">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> from being recycled.</source>
          <target state="translated">當所有 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> 活動完成時進行呼叫，以便實作器可以防止 <ph id="ph2">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> 被回收。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> is to close and recycle the <ph id="ph3">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object and adjust the value of <ph id="ph4">&lt;see cref="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 要關閉並回收 <ph id="ph3">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> 物件，而且要調整 <ph id="ph4">&lt;see cref="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances" /&gt;</ph> 的值，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A&gt;</ph> is called when <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> is about to close and recycle an idle <ph id="ph3">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object so that you can inform the runtime whether to continue doing so.</source>
          <target state="translated">當 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A&gt;</ph> 即將關閉並回收閒置的 <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 物件時呼叫 <ph id="ph3">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph>，以便向執行階段通知是否要繼續執行此項作業。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)">
          <source>For an example that demonstrates the sharing of instance contexts, see <bpt id="p1">[</bpt>InstanceContextSharing<ept id="p1">](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230)</ept>.</source>
          <target state="translated">如需示範共用執行個體內容的範例，請參閱<bpt id="p1">[</bpt>InstanceContextSharing<ept id="p1">](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230)</ept>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback" /&gt;</ph> object that notifies <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> when the <ph id="ph3">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object is to be closed and recycled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback" /&gt;</ph> 物件，這個物件會在即將關閉和回收 <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 物件時通知 <ph id="ph3">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>.</source>
          <target state="translated">目前的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)">
          <source>Called when the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" /&gt;</ph> method returns <ph id="ph2">&lt;see langword="false" /&gt;</ph> to enable implementers to provide a callback to notify <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> when the <ph id="ph4">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object is finished.</source>
          <target state="translated">當 <ph id="ph1">&lt;see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" /&gt;</ph> 方法傳回 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 時進行呼叫，以便實作器能夠在 <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 物件完成時提供回呼 (Callback) 來通知 <ph id="ph4">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A&gt;</ph> method is called when the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A&gt;</ph> method returns <ph id="ph3">`false`</ph> to enable you to provide <ph id="ph4">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> with a <ph id="ph5">&lt;xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType&gt;</ph> object that you use to inform the runtime that the <ph id="ph6">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> has finished its work.</source>
          <target state="translated">當 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A&gt;</ph> 方法傳回 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A&gt;</ph> 時呼叫 <ph id="ph3">`false`</ph> 方法，讓您能夠為 <ph id="ph4">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 提供 <ph id="ph5">&lt;xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType&gt;</ph> 物件，以便用來向執行階段通知 <ph id="ph6">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> 已完成其工作。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType&gt;</ph> object notifies the runtime that the <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> has finished its work, <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> calls <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A&gt;</ph> once again.</source>
          <target state="translated">當 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType&gt;</ph> 物件通知執行階段關於 <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> 已完成其工作時，<ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 會再次呼叫 <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)">
          <source>This cycle continues until <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A&gt;</ph> returns <ph id="ph2">`true`</ph> and the context is closed and recycled.</source>
          <target state="translated">這個循環會一直持續，直到 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A&gt;</ph> 傳回 <ph id="ph2">`true`</ph> 而該內容已關閉並回收為止。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>