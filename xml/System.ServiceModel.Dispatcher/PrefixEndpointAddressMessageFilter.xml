<Type Name="PrefixEndpointAddressMessageFilter" FullName="System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="82e1feb0e4f8dba4417f1e2b6f362b6275174fa1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30518582" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PrefixEndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrefixEndpointAddressMessageFilter extends System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class PrefixEndpointAddressMessageFilter&#xA;Inherits MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrefixEndpointAddressMessageFilter : System::ServiceModel::Dispatcher::MessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.MessageFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9618d-101">表示查詢，其會使用 URI 元件的「最長的前置詞比對」來測試訊息是否符合 EndpointAddress。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9618d-101">Represents a query that tests whether a message matches an EndpointAddress using a *Longest-Prefix Match* for the URI component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9618d-102"><xref:System.ServiceModel.EndpointAddress> 物件會包含 URI 和選擇性定址標頭的集合。</span><span class="sxs-lookup"><span data-stu-id="9618d-102">An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers.</span></span> <span data-ttu-id="9618d-103">定址和訊息標頭會進行標準化來比較彼此是否相等。</span><span class="sxs-lookup"><span data-stu-id="9618d-103">The addressing and message headers are canonicalized to be compared for equality.</span></span> <span data-ttu-id="9618d-104">如果參數在 <xref:System.ServiceModel.EndpointAddress> 中出現一次以上，對應的標頭也必須至少出現在訊息中相同次數。</span><span class="sxs-lookup"><span data-stu-id="9618d-104">If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.</span></span>  
  
 <span data-ttu-id="9618d-105">此篩選條件會執行相同的查詢， <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>，不同之處在於測試訊息是否符合端點位址由*最長前置詞比對*。</span><span class="sxs-lookup"><span data-stu-id="9618d-105">This filter performs the same query as <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>, except that the test for whether a message matches an endpoint address is done by a *Longest-Prefix Match*.</span></span> <span data-ttu-id="9618d-106">這意味著篩選條件中指定的 URI 不一定完全符合訊息的 URI，但是一定要包含在該 URI 中做為前置詞。</span><span class="sxs-lookup"><span data-stu-id="9618d-106">This means that the URI specified in the filter does not have to match the message's URI exactly, but must be contained in that URI as a prefix.</span></span> <span data-ttu-id="9618d-107">例如，如果篩選條件指定位址 "www.foo.com"，而訊息的位址為 "www.foo.com/customerA"，這樣就會判定為符合篩選查詢條件的 URI 部分。</span><span class="sxs-lookup"><span data-stu-id="9618d-107">For example, if a filter specifies the address "www.foo.com", and a message is addressed to "www.foo.com/customerA", then the URI part of the filter query condition will be met.</span></span> <span data-ttu-id="9618d-108">不過，仍然要繼續進行篩選查詢之標頭部分的比對。</span><span class="sxs-lookup"><span data-stu-id="9618d-108">However, the header portion of the filter query still has to be done.</span></span>  
  
 <span data-ttu-id="9618d-109">Internet Information Services (IIS) 和基礎檔案系統 (NTFS 或 FAT) 會區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="9618d-109">Internet Information Services (IIS) and the underlying file system (NTFS or FAT) are case-insensitive.</span></span> <span data-ttu-id="9618d-110">這個類別所執行的 URI 比較也會區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="9618d-110">URI comparisons done by this class are also case-insensitive.</span></span> <span data-ttu-id="9618d-111">因此，範例，http://www.microsoft.com評估為等於http://WWW.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="9618d-111">So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9618d-112">初始化 <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrefixEndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrefixEndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="9618d-113">測試訊息時所依據的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-113">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9618d-114">初始化 <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-114">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9618d-115">
            <paramref name="address" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-115">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrefixEndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, includeHostNameInComparison As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrefixEndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address, bool includeHostNameInComparison);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="includeHostNameInComparison" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="9618d-116">測試訊息時所依據的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-116">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span>
          </span>
        </param>
        <param name="includeHostNameInComparison">
          <span data-ttu-id="9618d-117">如果主機名稱包含在端點位址比較中，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-117">
              <see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9618d-118">初始化 <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9618d-119">如果您的本機電腦上有安裝 Web 服務，則有許多對等方式可以用來參考這個位址，包括：</span><span class="sxs-lookup"><span data-stu-id="9618d-119">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   <span data-ttu-id="9618d-120">http://[my-machine-name]/foo.svc</span><span class="sxs-lookup"><span data-stu-id="9618d-120">http://[my-machine-name]/foo.svc</span></span>  
  
-   <span data-ttu-id="9618d-121">http://[my-machine-name].[my-company].com/foo.svc。</span><span class="sxs-lookup"><span data-stu-id="9618d-121">http://[my-machine-name].[my-company].com/foo.svc.</span></span>  
  
 <span data-ttu-id="9618d-122">如果 `includeHostNameInComparison` 參數值為 `false`，則上述 URI 全都會解析為相同的端點。</span><span class="sxs-lookup"><span data-stu-id="9618d-122">If the value of the `includeHostNameInComparison` parameter is `false`, the above URIs all resolve to the same endpoint.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9618d-123">
            <paramref name="address" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-123">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ Address { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9618d-124">取得 <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> 測試訊息時所依據的端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-124">Gets the Endpoint Address that the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> tests messages against.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9618d-125">
            <see cref="T:System.ServiceModel.EndpointAddress" /> 測試訊息時所依據的 <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-125">The <see cref="T:System.ServiceModel.EndpointAddress" /> that the <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> tests messages against.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal override System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; override System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData">
          <span data-ttu-id="9618d-126">與資料表中篩選條件相關聯的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-126">Data associated with the filters in the table.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="9618d-127">建立會同時依據多個端點位址來測試訊息的新篩選資料表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-127">Creates a new filter table that tests a message against multiple endpoint addresses simultaneously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9618d-128">實作 <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> 介面的物件，這個介面可以包含 <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" /> 與相關聯的 <paramref name="FilterData" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-128">An object that implements the <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> interface that can contain <see cref="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />s with associated <paramref name="FilterData" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9618d-129">此方法會傳回已針對測試特定訊息端點完成最佳化之 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="9618d-129">The method returns an instance of <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> that is optimized to test for specific message endpoints.</span></span>  
  
 <span data-ttu-id="9618d-130">這個方法主要供 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> 使用。</span><span class="sxs-lookup"><span data-stu-id="9618d-130">This method is intended to be used by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeHostNameInComparison">
      <MemberSignature Language="C#" Value="public bool IncludeHostNameInComparison { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostNameInComparison" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeHostNameInComparison As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostNameInComparison { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9618d-131">取得值，這個值會指出主機名稱是否包含在端點位址比較中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-131">Gets a value that indicates whether the host name is included in the endpoint address comparison.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9618d-132">如果主機名稱包含在端點位址比較中，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-132">
              <see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9618d-133">如果您的本機電腦上有安裝 Web 服務，則有許多對等方式可以用來參考這個位址，包括：</span><span class="sxs-lookup"><span data-stu-id="9618d-133">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   <span data-ttu-id="9618d-134">http://[my-machine-name]/foo.svc</span><span class="sxs-lookup"><span data-stu-id="9618d-134">http://[my-machine-name]/foo.svc</span></span>  
  
-   <span data-ttu-id="9618d-135">http://[my-machine-name].[my-company].com/foo.svc。</span><span class="sxs-lookup"><span data-stu-id="9618d-135">http://[my-machine-name].[my-company].com/foo.svc.</span></span>  
  
 <span data-ttu-id="9618d-136">這個屬性的預設值為 `false`，因此除非您變更這個屬性，否則上述 URI 全都會解析為相同的端點。</span><span class="sxs-lookup"><span data-stu-id="9618d-136">The default value of this property is `false`, so the above URIs all resolve to the same endpoint, unless you change this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9618d-137">測試訊息或緩衝訊息是否符合端點篩選器的準則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-137">Tests whether a message or buffered message satisfies the criteria of the endpoint filter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9618d-138">這個方法的兩個多載是相等的，因為此篩選條件不會檢查訊息本文，而只會檢查位址來進行最長的前置詞比對，並接著檢查標頭。</span><span class="sxs-lookup"><span data-stu-id="9618d-138">The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="9618d-139">要測試的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-139">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9618d-140">測試訊息是否符合指定的端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-140">Tests whether a message satisfies the specified endpoint address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9618d-141">如果 <see langword="true" /> 物件符合篩選條件中指定的端點位址，則為 <see cref="T:System.ServiceModel.Channels.Message" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-141">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the endpoint address specified in the filter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9618d-142">這個方法的兩個多載是相等的，因為此篩選條件不會檢查訊息本文，而只會檢查位址來進行最長的前置詞比對，並接著檢查標頭。</span><span class="sxs-lookup"><span data-stu-id="9618d-142">The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9618d-143">
            <paramref name="message" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-143">
              <paramref name="message" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer messageBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="messageBuffer">
          <span data-ttu-id="9618d-144">要測試的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-144">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9618d-145">測試緩衝的訊息是否符合指定的端點位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-145">Tests whether a buffered message satisfies the specified endpoint address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9618d-146">如果 <see langword="true" /> 物件符合端點位址，則為 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-146">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the endpoint address; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9618d-147">這個方法的兩個多載是相等的，因為此篩選條件不會檢查訊息本文，而只會檢查位址來進行最長的前置詞比對，並接著檢查標頭。</span><span class="sxs-lookup"><span data-stu-id="9618d-147">The two overloads of this method are equivalent because this filter does not examine the message body, only the address, to do a longest-prefix match, and then the headers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9618d-148">
            <paramref name="messageBuffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9618d-148">
              <paramref name="messageBuffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>