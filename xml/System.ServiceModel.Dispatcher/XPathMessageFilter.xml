<Type Name="XPathMessageFilter" FullName="System.ServiceModel.Dispatcher.XPathMessageFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2aa3f904ce41b4c4abe9ba39b43daad1eb794c29" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55352812" /></Metadata><TypeSignature Language="C#" Value="public class XPathMessageFilter : System.ServiceModel.Dispatcher.MessageFilter, System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XPathMessageFilter extends System.ServiceModel.Dispatcher.MessageFilter implements class System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class XPathMessageFilter&#xA;Inherits MessageFilter&#xA;Implements IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XPathMessageFilter : System::ServiceModel::Dispatcher::MessageFilter, System::Xml::Serialization::IXmlSerializable" />
  <TypeSignature Language="F#" Value="type XPathMessageFilter = class&#xA;    inherit MessageFilter&#xA;    interface IXmlSerializable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.MessageFilter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.Serialization.IXmlSerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.Xml.Serialization.XmlRoot("XPathMessageFilter", Namespace="http://schemas.microsoft.com/serviceModel/2004/05/xpathfilter")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Xml.Serialization.XmlSchemaProvider("StaticGetSchema")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Xml.Serialization.XmlRoot(ElementName="XPathMessageFilter", Namespace="http://schemas.microsoft.com/serviceModel/2004/05/xpathfilter")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="457e3-101">表示查詢由 XPath 1.0 運算式定義的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="457e3-101">Represents a query on an XML document defined by an XPath 1.0 expression.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="457e3-102"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 會使用 XPath 運算式來判斷 XML 文件是否包含特定項目、屬性、文字或其他 XML 語法結構。</span><span class="sxs-lookup"><span data-stu-id="457e3-102">An <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> uses an XPath expression to determine whether an XML document contains specific elements, attributes, text, or other XML syntactic constructs.</span></span> <span data-ttu-id="457e3-103">一般而言，應用程式會在端點使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 來查詢 SOAP 訊息的內容，然後根據查詢的結果採取適當的行動。</span><span class="sxs-lookup"><span data-stu-id="457e3-103">Typically, an application uses an <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> at an endpoint to query the contents of a SOAP message and then takes the appropriate action based on the results of that query.</span></span> <span data-ttu-id="457e3-104">例如，佇列處理序可能會使用 XPath 查詢來檢查已知標頭的優先順序項目，以便決定是否要將訊息移到佇列前面。</span><span class="sxs-lookup"><span data-stu-id="457e3-104">A queuing process, for example, may use an XPath query to check the priority element of a known header to decide whether to move a message to the front of the queue.</span></span>  
  
 <span data-ttu-id="457e3-105">XML 路徑語言 (XPath) 提供了 XML 文件之定址部分的語言。</span><span class="sxs-lookup"><span data-stu-id="457e3-105">The XML Path Language (XPath) provides a language for addressing parts of an XML document.</span></span> <span data-ttu-id="457e3-106">XPath 中的主要語法建構是一個運算式，它會定義如何周遊 XML 文件的邏輯結構，以及如何定址或識別 XPath 資料型別。</span><span class="sxs-lookup"><span data-stu-id="457e3-106">The primary syntactic construct in XPath is an expression that defines how to traverse the logical structure of an XML document and address or identify an XPath data type.</span></span> <span data-ttu-id="457e3-107">具體來說，XPath 實作會針對 XML 文件的結構評估運算式，以產生下列四種基本 XPath 資料型別中的其中一種：字串、數字、布林值 (Boolean) 和節點集。</span><span class="sxs-lookup"><span data-stu-id="457e3-107">Specifically, XPath implementations evaluate an expression against the structure of an XML document to yield one of the four basic XPath data types: strings, numbers, Booleans, and node sets.</span></span> <span data-ttu-id="457e3-108">它們也支援將 XPath 資料型別轉換為字串、數字或布林資料型別的功能。</span><span class="sxs-lookup"><span data-stu-id="457e3-108">They also support functions that convert an XPath data type to a string, number, or Boolean data type.</span></span> <span data-ttu-id="457e3-109">如果方法預期有這三種資料型別的其中一種，運算式評估結果便會隱含地轉換。</span><span class="sxs-lookup"><span data-stu-id="457e3-109">If a method expects one of these three data types, the result of the expression evaluation is implicitly converted.</span></span> <span data-ttu-id="457e3-110">請注意，這三種資料型別不能轉換為節點集型別。</span><span class="sxs-lookup"><span data-stu-id="457e3-110">Note that these three data types cannot be converted to a node-set type.</span></span> <span data-ttu-id="457e3-111">XML 路徑語言是完全述[W3C XML 路徑語言 1.0 規格](https://go.microsoft.com/fwlink/?LinkId=96179)。</span><span class="sxs-lookup"><span data-stu-id="457e3-111">The XML Path language is fully described in the [W3C XML Path Language 1.0 specification](https://go.microsoft.com/fwlink/?LinkId=96179).</span></span>  
  
 <span data-ttu-id="457e3-112">XPath 運算式中的數字會表示成雙精度 64 位元值。</span><span class="sxs-lookup"><span data-stu-id="457e3-112">Numbers in XPath expressions are expressed as double-precision 64-bit values.</span></span> <span data-ttu-id="457e3-113">因此，參與測試包含許多有效位數的 XPath 運算式可能會因為浮點精確度的問題，而傳回不正確的結果。</span><span class="sxs-lookup"><span data-stu-id="457e3-113">Therefore XPath expressions that involve testing numbers with many significant digits can return incorrect results due to floating point precision issues.</span></span> <span data-ttu-id="457e3-114">如需詳細資訊，請參閱 < [XML 路徑語言 (XPath) 1.0 版中，第 3.5 節](https://go.microsoft.com/fwlink/?LinkId=96180)。</span><span class="sxs-lookup"><span data-stu-id="457e3-114">For more information, see [XML Path Language (XPath) Version 1.0, section 3.5](https://go.microsoft.com/fwlink/?LinkId=96180).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="457e3-115">初始化 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="457e3-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="457e3-116">初始化比對所有格式正確 XML 文件之 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="457e3-116">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class that matches all well-formed XML documents.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="457e3-117">使用空白 XPath 運算式，初始化 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="457e3-117">Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> class with an empty XPath expression.</span></span> <span data-ttu-id="457e3-118">由於空白 XPath 運算式一定會比對格式正確的 XML 文件，因此所有物件都會符合由空白 XPath 運算式定義之篩選條件的準則。</span><span class="sxs-lookup"><span data-stu-id="457e3-118">An empty XPath expression always matches a well-formed XML document, so all objects satisfy the criteria of a filter defined by an empty XPath expression.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilter (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xpath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilter(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.XPathMessageFilter : string -&gt; System.ServiceModel.Dispatcher.XPathMessageFilter" Usage="new System.ServiceModel.Dispatcher.XPathMessageFilter xpath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="457e3-119">包含 XPath 1.0 運算式的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-119">A <see cref="T:System.String" /> that contains an XPath 1.0 expression.</span></span></param>
        <summary><span data-ttu-id="457e3-120">使用 XPath 運算式來指定篩選條件的查詢準則，初始化 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="457e3-120">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class using an XPath expression to specify query criteria for the filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="457e3-121">當沒有命名空間可管理時，便可使用這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="457e3-121">Use this constructor when there are no namespaces to manage.</span></span>  
  
 <span data-ttu-id="457e3-122">這個建構函式會使用預設的 <xref:System.Xml.XmlNamespaceManager> 來初始化指派給 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Namespaces%2A> 屬性的 <xref:System.ServiceModel.Dispatcher.XPathMessageContext>，因此 XPath 運算式具有 <xref:System.ServiceModel.Dispatcher.XPathMessageContext> 所定義函式程式庫的存取權。</span><span class="sxs-lookup"><span data-stu-id="457e3-122">This constructor initializes the <xref:System.Xml.XmlNamespaceManager> assigned to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Namespaces%2A> property by using the default <xref:System.ServiceModel.Dispatcher.XPathMessageContext>, so the XPath expression has access to the function library that the <xref:System.ServiceModel.Dispatcher.XPathMessageContext> defines.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="457e3-123"><paramref name="xpath" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-123"><paramref name="xpath" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilter (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilter(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.XPathMessageFilter : System.Xml.XmlReader -&gt; System.ServiceModel.Dispatcher.XPathMessageFilter" Usage="new System.ServiceModel.Dispatcher.XPathMessageFilter reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="457e3-124">要讀取經過資料流處理之 XPath 運算式的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-124">The <see cref="T:System.Xml.XmlReader" /> to read the streamed XPath expression.</span></span></param>
        <summary><span data-ttu-id="457e3-125">藉由透過已指定 XML 讀取器來讀取已經過資料流處理的 XPath，初始化 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="457e3-125">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class by reading a streamed XPath with the specified XML reader.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="457e3-126">讀取器會假設位於已序列化之 `XPathMessageFilter` 的開始項目處。</span><span class="sxs-lookup"><span data-stu-id="457e3-126">It is assumed that the reader is positioned at the start element of the serialized `XPathMessageFilter`.</span></span> <span data-ttu-id="457e3-127">在讀取之前，不會驗證項目的名稱。</span><span class="sxs-lookup"><span data-stu-id="457e3-127">The name of the element is not validated before reading.</span></span> <span data-ttu-id="457e3-128">當這個方法傳回時，讀取器會立即置於已序列化的 `XPathMessageFilter` 後方。</span><span class="sxs-lookup"><span data-stu-id="457e3-128">When this method returns, the reader is positioned immediately after the serialized `XPathMessageFilter`.</span></span> <span data-ttu-id="457e3-129">建構函式也會自動初始化命名空間管理員，方法是將 XPath 運算式中的所有前置詞當做已繫結於讀取器來進行解析。</span><span class="sxs-lookup"><span data-stu-id="457e3-129">The constructor also automatically initializes the namespace manager by resolving all prefixes in the XPath expression as they were bound in the reader.</span></span>  
  
 <span data-ttu-id="457e3-130">這個方法可以存取任何可由 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.WriteXPathTo%2A> 方法建立的 XML。</span><span class="sxs-lookup"><span data-stu-id="457e3-130">This method can access any XML that can be created by the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.WriteXPathTo%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="457e3-131"><paramref name="reader" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-131"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilter (string xpath, System.Xml.XmlNamespaceManager namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xpath, class System.Xml.XmlNamespaceManager namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xpath As String, namespaces As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilter(System::String ^ xpath, System::Xml::XmlNamespaceManager ^ namespaces);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.XPathMessageFilter : string * System.Xml.XmlNamespaceManager -&gt; System.ServiceModel.Dispatcher.XPathMessageFilter" Usage="new System.ServiceModel.Dispatcher.XPathMessageFilter (xpath, namespaces)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="namespaces" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="457e3-132">XPath 1.0 運算式。</span><span class="sxs-lookup"><span data-stu-id="457e3-132">An XPath 1.0 expression.</span></span></param>
        <param name="namespaces"><span data-ttu-id="457e3-133">解析 <see cref="T:System.Xml.XmlNamespaceManager" /> 中任何命名空間前置詞的 <paramref name="xpath" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-133">An <see cref="T:System.Xml.XmlNamespaceManager" /> that resolves any namespace prefixes in <paramref name="xpath" />.</span></span></param>
        <summary><span data-ttu-id="457e3-134">使用指定的 XPath 運算式和命名空間管理員，初始化 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="457e3-134">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class using the specified XPath expression and namespace manager.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="457e3-135">當 XPath 使用未定義在 <xref:System.ServiceModel.Dispatcher.XPathMessageContext> 中的前置詞，或當您想要使用自己的 <xref:System.Xml.XmlNamespaceManager> 時，便可使用這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="457e3-135">Use this constructor when XPath uses prefixes not defined in <xref:System.ServiceModel.Dispatcher.XPathMessageContext>, or when you want to use your own <xref:System.Xml.XmlNamespaceManager>.</span></span> <span data-ttu-id="457e3-136">如此便可以建立 <xref:System.ServiceModel.Dispatcher.XPathMessageContext> 的執行個體，並將其傳遞至這個方法。</span><span class="sxs-lookup"><span data-stu-id="457e3-136">An instance of <xref:System.ServiceModel.Dispatcher.XPathMessageContext> can be created and passed to this method.</span></span>  
  
 <span data-ttu-id="457e3-137">如果提供給這個方法的執行個體是 <xref:System.Xml.Xsl.XsltContext> 實作，這個作業就相當於呼叫 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.%23ctor%2A> 建構函式。</span><span class="sxs-lookup"><span data-stu-id="457e3-137">If the instances provided to this method are <xref:System.Xml.Xsl.XsltContext> implementations, it is equivalent to calling the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="457e3-138"><paramref name="xpath" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-138"><paramref name="xpath" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilter (System.Xml.XmlReader reader, System.Xml.XmlNamespaceManager namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader, class System.Xml.XmlNamespaceManager namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As XmlReader, namespaces As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilter(System::Xml::XmlReader ^ reader, System::Xml::XmlNamespaceManager ^ namespaces);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.XPathMessageFilter : System.Xml.XmlReader * System.Xml.XmlNamespaceManager -&gt; System.ServiceModel.Dispatcher.XPathMessageFilter" Usage="new System.ServiceModel.Dispatcher.XPathMessageFilter (reader, namespaces)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="namespaces" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="457e3-139">要讀取經過資料流處理之 XPath 運算式的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-139">The <see cref="T:System.Xml.XmlReader" /> to read the streamed XPath expression.</span></span></param>
        <param name="namespaces"><span data-ttu-id="457e3-140">解析從 <see cref="T:System.Xml.XmlNamespaceManager" /> 讀取得到之 XPath 運算式中任何命名空間前置詞的 <paramref name="reader" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-140">An <see cref="T:System.Xml.XmlNamespaceManager" /> that resolves any namespace prefixes in the XPath expression from <paramref name="reader" />.</span></span> <span data-ttu-id="457e3-141">這個項目也可以是定義自訂函式或變數的 <see cref="T:System.Xml.Xsl.XsltContext" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-141">This can also be an <see cref="T:System.Xml.Xsl.XsltContext" /> that defines custom functions or variables.</span></span></param>
        <summary><span data-ttu-id="457e3-142">藉由透過已指定 XML 讀取器來讀取已經過資料流處理的 XPath，以及使用指定的命名空間管理員，初始化 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="457e3-142">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class by reading in a streamed XPath with a specified XML reader and using the specified namespace manager.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="457e3-143">當您想要使用自己的 <xref:System.Xml.XmlReader> 和 <xref:System.Xml.XmlNamespaceManager> 來定義篩選條件時，便可使用這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="457e3-143">Use this constructor when you want to use your own <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlNamespaceManager> to define the filter.</span></span>  
  
 <span data-ttu-id="457e3-144">讀取器會假設位於已序列化之 `XPathMessageFilter` 的開始項目處。</span><span class="sxs-lookup"><span data-stu-id="457e3-144">It is assumed that the reader is positioned at the start element of the serialized `XPathMessageFilter`.</span></span> <span data-ttu-id="457e3-145">在讀取之前，不會驗證項目的名稱。</span><span class="sxs-lookup"><span data-stu-id="457e3-145">The name of the element is not validated before reading.</span></span> <span data-ttu-id="457e3-146">當這個方法傳回時，讀取器會立即置於已序列化的 `XPathMessageFilter` 後方。</span><span class="sxs-lookup"><span data-stu-id="457e3-146">When this method returns, the reader is positioned immediately after the serialized `XPathMessageFilter`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="457e3-147"><paramref name="reader" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-147"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="457e3-148"><paramref name="reader" /> 不是位於開始項目上。</span><span class="sxs-lookup"><span data-stu-id="457e3-148"><paramref name="reader" /> is not positioned on the starting element.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="457e3-149">讀取方言屬性或命名空間 URI 時發生問題，或是找到重複的屬性。</span><span class="sxs-lookup"><span data-stu-id="457e3-149">There were problems reading the dialect attribute or namespace URI, or duplicate attributes were found.</span></span>

<span data-ttu-id="457e3-150">-或-</span><span class="sxs-lookup"><span data-stu-id="457e3-150">-or-</span></span>

<span data-ttu-id="457e3-151">讀取的方言屬性無效：不是 XPath。</span><span class="sxs-lookup"><span data-stu-id="457e3-151">An invalid dialect attribute was read: it was not XPath.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilter (string xpath, System.Xml.Xsl.XsltContext context);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xpath, class System.Xml.Xsl.XsltContext context) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xpath As String, context As XsltContext)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilter(System::String ^ xpath, System::Xml::Xsl::XsltContext ^ context);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public XPathMessageFilter (string xpath, System.Xml.Xsl.XsltContext namespaces);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xpath, class System.Xml.Xsl.XsltContext namespaces) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String,System.Xml.Xsl.XsltContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xpath As String, namespaces As XsltContext)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilter(System::String ^ xpath, System::Xml::Xsl::XsltContext ^ namespaces);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.XPathMessageFilter : string * System.Xml.Xsl.XsltContext -&gt; System.ServiceModel.Dispatcher.XPathMessageFilter" Usage="new System.ServiceModel.Dispatcher.XPathMessageFilter (xpath, namespaces)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" Index="0" />
        <Parameter Name="context" Type="System.Xml.Xsl.XsltContext" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="namespaces" Type="System.Xml.Xsl.XsltContext" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xpath"><span data-ttu-id="457e3-152">篩選條件的 XPath 1.0 運算式。</span><span class="sxs-lookup"><span data-stu-id="457e3-152">The XPath 1.0 expression for the filter.</span></span></param>
        <param name="context"><span data-ttu-id="457e3-153">解析 <see cref="T:System.Xml.Xsl.XsltContext" /> 中任何命名空間前置詞、自訂函式或變數的 <paramref name="xpath" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-153">An <see cref="T:System.Xml.Xsl.XsltContext" /> that resolves any namespace prefixes, custom functions or variables in <paramref name="xpath" />.</span></span></param>
        <param name="namespaces"><span data-ttu-id="457e3-154">解析 <see cref="T:System.Xml.Xsl.XsltContext" /> 中任何命名空間前置詞、自訂函式或變數的 <paramref name="xpath" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-154">An <see cref="T:System.Xml.Xsl.XsltContext" /> that resolves any namespace prefixes, custom functions or variables in <paramref name="xpath" />.</span></span></param>
        <summary><span data-ttu-id="457e3-155">使用指定的 XPath 運算式和 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />，初始化 <see cref="T:System.Xml.Xsl.XsltContext" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="457e3-155">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class using a specified XPath expression and <see cref="T:System.Xml.Xsl.XsltContext" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilter (System.Xml.XmlReader reader, System.Xml.Xsl.XsltContext context);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader, class System.Xml.Xsl.XsltContext context) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As XmlReader, context As XsltContext)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilter(System::Xml::XmlReader ^ reader, System::Xml::Xsl::XsltContext ^ context);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public XPathMessageFilter (System.Xml.XmlReader reader, System.Xml.Xsl.XsltContext namespaces);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader, class System.Xml.Xsl.XsltContext namespaces) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader,System.Xml.Xsl.XsltContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As XmlReader, namespaces As XsltContext)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilter(System::Xml::XmlReader ^ reader, System::Xml::Xsl::XsltContext ^ namespaces);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.XPathMessageFilter : System.Xml.XmlReader * System.Xml.Xsl.XsltContext -&gt; System.ServiceModel.Dispatcher.XPathMessageFilter" Usage="new System.ServiceModel.Dispatcher.XPathMessageFilter (reader, namespaces)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" />
        <Parameter Name="context" Type="System.Xml.Xsl.XsltContext" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="namespaces" Type="System.Xml.Xsl.XsltContext" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="457e3-156">要讀取經過資料流處理之 XPath 運算式的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-156">The <see cref="T:System.Xml.XmlReader" /> to read the streamed XPath expression.</span></span></param>
        <param name="context"><span data-ttu-id="457e3-157">解析從 <see cref="T:System.Xml.Xsl.XsltContext" /> 讀取得到的 XPath 運算式中任何命名空間前置詞、函式和變數的 <paramref name="reader" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-157">An <see cref="T:System.Xml.Xsl.XsltContext" /> that resolves any namespace prefixes, functions, and variables in the XPath expression from <paramref name="reader" />.</span></span></param>
        <param name="namespaces"><span data-ttu-id="457e3-158">解析從 <see cref="T:System.Xml.Xsl.XsltContext" /> 讀取得到的 XPath 運算式中任何命名空間前置詞、函式和變數的 <paramref name="reader" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-158">An <see cref="T:System.Xml.Xsl.XsltContext" /> that resolves any namespace prefixes, functions, and variables in the XPath expression from <paramref name="reader" />.</span></span></param>
        <summary><span data-ttu-id="457e3-159">藉由透過已指定 XML 讀取器來讀取已經過資料流處理的 XPath，以及使用 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 來解析命名空間、自訂函式和變數，初始化 <see cref="T:System.Xml.Xsl.XsltContext" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="457e3-159">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> class by reading a streamed XPath with a specified XML reader and using the <see cref="T:System.Xml.Xsl.XsltContext" /> to resolve namespaces, custom functions, and variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="457e3-160">當您想要使用自己的 <xref:System.Xml.XmlReader> 和 <xref:System.Xml.XmlNamespaceManager> 來定義篩選條件時，便可使用這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="457e3-160">Use this constructor when you want to use your own <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlNamespaceManager> to define the filter.</span></span>  
  
 <span data-ttu-id="457e3-161">讀取器會假設位於已序列化之 `XPathMessageFilter` 的開始項目處。</span><span class="sxs-lookup"><span data-stu-id="457e3-161">It is assumed that the reader is positioned at the start element of the serialized `XPathMessageFilter`.</span></span> <span data-ttu-id="457e3-162">在讀取之前，不會驗證項目的名稱。</span><span class="sxs-lookup"><span data-stu-id="457e3-162">The name of the element is not validated before reading.</span></span> <span data-ttu-id="457e3-163">當這個方法傳回時，讀取器會立即置於已序列化的 `XPathMessageFilter` 後方。</span><span class="sxs-lookup"><span data-stu-id="457e3-163">When this method returns, the reader is positioned immediately after the serialized `XPathMessageFilter`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="457e3-164"><paramref name="reader" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-164"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal override System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; override System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberSignature Language="F#" Value="override this.CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;" Usage="xPathMessageFilter.CreateFilterTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData"><span data-ttu-id="457e3-165">與資料表中篩選條件相關聯的資料。</span><span class="sxs-lookup"><span data-stu-id="457e3-165">Data associated with the filters in the table.</span></span></typeparam>
        <summary><span data-ttu-id="457e3-166">建立 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />，這個篩選條件具有與其相關聯的指定資料型別。</span><span class="sxs-lookup"><span data-stu-id="457e3-166">Creates an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> that has a specified type of data associated with it.</span></span></summary>
        <returns><span data-ttu-id="457e3-167"><see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> 物件，可在其中加入與 <paramref name="FilterData" /> 相關聯的篩選條件。</span><span class="sxs-lookup"><span data-stu-id="457e3-167">An <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> object to which filters associated with <paramref name="FilterData" /> can be added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="457e3-168">這個方法是由 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> 所呼叫。</span><span class="sxs-lookup"><span data-stu-id="457e3-168">This method is called by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span> <span data-ttu-id="457e3-169">使用者應該透過呼叫篩選資料表的建構函式來建立篩選資料表。</span><span class="sxs-lookup"><span data-stu-id="457e3-169">Users should create a filter table by calling a constructor for the filter table.</span></span> <span data-ttu-id="457e3-170">這個實作會傳回 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="457e3-170">This implementation returns an instance of <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="457e3-171">判斷訊息或 XML 文件是否符合 XPath 篩選條件的查詢準則。</span><span class="sxs-lookup"><span data-stu-id="457e3-171">Determines whether a message or XML document satisfies the query criteria of the XPath filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="457e3-172">這些方法會針對一個篩選條件來檢查訊息。</span><span class="sxs-lookup"><span data-stu-id="457e3-172">These methods check one filter against a message.</span></span> <span data-ttu-id="457e3-173">如果您需要針對多個篩選條件來檢查訊息，請將篩選條件放入篩選資料表，然後使用資料表所提供的比對方法。</span><span class="sxs-lookup"><span data-stu-id="457e3-173">If you need to check the message against multiple filters, put the filters into a filter table and then use the match methods provided by the table.</span></span>  
  
 <span data-ttu-id="457e3-174">如果您只需要測試訊息標頭而不用測試訊息本文，請使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="457e3-174">If you only need to test the message headers and not the message body, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A> method.</span></span>  
  
 <span data-ttu-id="457e3-175">如果您需要測試訊息本文的部分內容，請使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="457e3-175">If you need to test parts of the message body, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A> method.</span></span>  
  
 <span data-ttu-id="457e3-176">對於包含 XPath 查詢的測試，請使用其中一種剩餘的 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A> 多載。</span><span class="sxs-lookup"><span data-stu-id="457e3-176">For tests that involve XPath queries, use one of the remaining overloads of the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="override this.Match : System.ServiceModel.Channels.Message -&gt; bool" Usage="xPathMessageFilter.Match message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="457e3-177">要測試的 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-177">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span></span></param>
        <summary><span data-ttu-id="457e3-178">測試指定的訊息是否符合 XPath 篩選條件的準則。</span><span class="sxs-lookup"><span data-stu-id="457e3-178">Tests whether a specified message satisfies the criteria of the XPath filter.</span></span> <span data-ttu-id="457e3-179">這種表單不可以存取訊息的本文。</span><span class="sxs-lookup"><span data-stu-id="457e3-179">This form is not allowed to access the body of the message.</span></span></summary>
        <returns><span data-ttu-id="457e3-180">如果 <see cref="T:System.ServiceModel.Channels.Message" /> 符合篩選條件準則，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-180"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> satisfies the filter criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="457e3-181">請使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A?displayProperty=nameWithType> 方法來比對本文中的項目。</span><span class="sxs-lookup"><span data-stu-id="457e3-181">Use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A?displayProperty=nameWithType> method to match elements from the body.</span></span> <span data-ttu-id="457e3-182">如果引擎嘗試存取訊息本文以便評估 XPath 運算式，這個方法便會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="457e3-182">An exception is thrown by this method if the engine attempts to access the message body in order to evaluate the XPath expression.</span></span> <span data-ttu-id="457e3-183">這樣有助於確保篩選引擎不會存取本文資料流。</span><span class="sxs-lookup"><span data-stu-id="457e3-183">This helps to ensure that the filter engine does not access the body stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="457e3-184"><paramref name="message" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-184"><paramref name="message" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException"><span data-ttu-id="457e3-185">XPath 評估已嘗試檢查訊息的本文。</span><span class="sxs-lookup"><span data-stu-id="457e3-185">The XPath evaluation attempted to examine the body of the message.</span></span></exception>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="457e3-186">發生編譯器錯誤。</span><span class="sxs-lookup"><span data-stu-id="457e3-186">A compiler error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer messageBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer);" />
      <MemberSignature Language="F#" Value="override this.Match : System.ServiceModel.Channels.MessageBuffer -&gt; bool" Usage="xPathMessageFilter.Match messageBuffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="messageBuffer"><span data-ttu-id="457e3-187">要測試的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-187">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <summary><span data-ttu-id="457e3-188">判斷經緩衝處理的訊息是否符合 XPath 篩選條件的查詢準則。</span><span class="sxs-lookup"><span data-stu-id="457e3-188">Determines whether a buffered message satisfies the query criteria of the XPath filter.</span></span></summary>
        <returns><span data-ttu-id="457e3-189">如果 <see cref="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" /> 符合篩選條件準則，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-189"><see langword="true" /> if the <see cref="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" /> satisfies the filter criteria; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="457e3-190">如果可以使用 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A>，便可使用這個 <xref:System.ServiceModel.Channels.MessageBuffer> 方法多載。</span><span class="sxs-lookup"><span data-stu-id="457e3-190">Use this overload of the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Match%2A> method when a <xref:System.ServiceModel.Channels.MessageBuffer> is available.</span></span> <span data-ttu-id="457e3-191">這種表單可以檢查訊息的本文。</span><span class="sxs-lookup"><span data-stu-id="457e3-191">This form is allowed to examine the body of the message.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="457e3-192"><paramref name="message" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-192"><paramref name="message" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="457e3-193">發生編譯器錯誤。</span><span class="sxs-lookup"><span data-stu-id="457e3-193">A compiler error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public bool Match (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Match(class System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Dispatcher.SeekableXPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (navigator As SeekableXPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Match(System::ServiceModel::Dispatcher::SeekableXPathNavigator ^ navigator);" />
      <MemberSignature Language="F#" Value="override this.Match : System.ServiceModel.Dispatcher.SeekableXPathNavigator -&gt; bool" Usage="xPathMessageFilter.Match navigator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="457e3-194">提供要測試之資料的 <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-194">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> that provides data to test.</span></span></param>
        <summary><span data-ttu-id="457e3-195">判斷由已指定最佳化 XPath 導覽所提供的 XML 文件是否符合 XPath 篩選條件的查詢準則。</span><span class="sxs-lookup"><span data-stu-id="457e3-195">Determines whether the XML document provided by the specified optimized XPath navigator satisfies the query criteria of the XPath filter.</span></span></summary>
        <returns><span data-ttu-id="457e3-196">如果來自 <see langword="true" /> 的資料符合篩選條件準則，則為 <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-196"><see langword="true" /> if the data from the <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> satisfies the filter criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="457e3-197"><xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> 類別會以更有效率地執行查詢的方法來擴充 <xref:System.Xml.XPath.XPathNavigator> 類別。</span><span class="sxs-lookup"><span data-stu-id="457e3-197">The <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> class extends the <xref:System.Xml.XPath.XPathNavigator> class with methods that run queries more efficiently.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="457e3-198"><paramref name="navigator" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-198"><paramref name="navigator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="457e3-199">發生編譯器錯誤。</span><span class="sxs-lookup"><span data-stu-id="457e3-199">A compiler error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public bool Match (System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Match(class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (navigator As XPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Match(System::Xml::XPath::XPathNavigator ^ navigator);" />
      <MemberSignature Language="F#" Value="override this.Match : System.Xml.XPath.XPathNavigator -&gt; bool" Usage="xPathMessageFilter.Match navigator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="457e3-200">提供要測試之資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-200">The <see cref="T:System.Xml.XPath.XPathNavigator" /> that provides data to test.</span></span></param>
        <summary><span data-ttu-id="457e3-201">評估已指定 XPath 導覽的篩選。</span><span class="sxs-lookup"><span data-stu-id="457e3-201">Evaluates the filter over the specified XPath navigator.</span></span></summary>
        <returns><span data-ttu-id="457e3-202">如果來自 <see cref="T:System.Xml.XPath.XPathNavigator" /> 的資料符合篩選條件準則，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-202"><see langword="true" /> if the data from the <see cref="T:System.Xml.XPath.XPathNavigator" /> satisfies the filter criteria; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="457e3-203"><paramref name="navigator" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-203"><paramref name="navigator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="457e3-204">發生編譯器錯誤。</span><span class="sxs-lookup"><span data-stu-id="457e3-204">A compiler error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNamespaceManager Namespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNamespaceManager Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilter.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespaces As XmlNamespaceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNamespaceManager ^ Namespaces { System::Xml::XmlNamespaceManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : System.Xml.XmlNamespaceManager" Usage="System.ServiceModel.Dispatcher.XPathMessageFilter.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNamespaceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="457e3-205">取得管理員，它會解析定義篩選條件之 XPath 運算式中的命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="457e3-205">Gets the manager that resolves namespace prefixes in the XPath expression that defines the filter.</span></span></summary>
        <value><span data-ttu-id="457e3-206">目前 <see cref="T:System.Xml.XmlNamespaceManager" /> 的 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-206">The <see cref="T:System.Xml.XmlNamespaceManager" /> for the current <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="457e3-207"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Namespaces%2A> 屬性也可以是定義自訂函式或變數的 <xref:System.Xml.Xsl.XsltContext>。</span><span class="sxs-lookup"><span data-stu-id="457e3-207">The <xref:System.ServiceModel.Dispatcher.XPathMessageFilter.Namespaces%2A> property can also be an <xref:System.Xml.Xsl.XsltContext> that defines custom function or variables.</span></span>  
  
 <span data-ttu-id="457e3-208">請勿在建立篩選條件之後修改命名空間管理員執行個體。</span><span class="sxs-lookup"><span data-stu-id="457e3-208">Do not modify the namespace manager instance once the filter is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeQuota">
      <MemberSignature Language="C#" Value="public int NodeQuota { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NodeQuota" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilter.NodeQuota" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeQuota As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NodeQuota { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NodeQuota : int with get, set" Usage="System.ServiceModel.Dispatcher.XPathMessageFilter.NodeQuota" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="457e3-209">取得或設定應在篩選評估期間查看的節點數目上限。</span><span class="sxs-lookup"><span data-stu-id="457e3-209">Gets or sets the maximum number of nodes that should be looked at during filter evaluation.</span></span></summary>
        <value><span data-ttu-id="457e3-210">應在篩選評估期間查看的節點數目上限。</span><span class="sxs-lookup"><span data-stu-id="457e3-210">The maximum number of nodes that should be looked at during filter evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="457e3-211">有些篩選條件的評估可能相當昂貴或費時。</span><span class="sxs-lookup"><span data-stu-id="457e3-211">Some filters can be extremely expensive to evaluate or are very long running.</span></span> <span data-ttu-id="457e3-212">由於篩選條件是在 XML 文件上作業的，因此設定篩選資料表之計算限制的最好方式，就是指定應在篩選評估期間查看的節點數目上限。</span><span class="sxs-lookup"><span data-stu-id="457e3-212">Because filters operate on XML documents, the best way to set computational limits is to specify the maximum number of nodes that should be looked at during a filter evaluation.</span></span>  
  
 <span data-ttu-id="457e3-213">配額的初始設定為 <xref:System.Int32.MaxValue>。</span><span class="sxs-lookup"><span data-stu-id="457e3-213">The quota is initially set to <xref:System.Int32.MaxValue>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="457e3-214">配額為零或負數。</span><span class="sxs-lookup"><span data-stu-id="457e3-214">The quota is zero or negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnGetSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Schema.XmlSchema OnGetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Schema.XmlSchema OnGetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnGetSchema" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Schema::XmlSchema ^ OnGetSchema();" />
      <MemberSignature Language="F#" Value="abstract member OnGetSchema : unit -&gt; System.Xml.Schema.XmlSchema&#xA;override this.OnGetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="xPathMessageFilter.OnGetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="457e3-215">取得目前 XML 文件的結構描述。</span><span class="sxs-lookup"><span data-stu-id="457e3-215">Gets the schema for the current XML document.</span></span></summary>
        <returns><span data-ttu-id="457e3-216">表示目前文件的 <see cref="T:System.Xml.Schema.XmlSchema" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-216">The <see cref="T:System.Xml.Schema.XmlSchema" /> that represents the current document.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadXml">
      <MemberSignature Language="C#" Value="protected virtual void OnReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadXml (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member OnReadXml : System.Xml.XmlReader -&gt; unit&#xA;override this.OnReadXml : System.Xml.XmlReader -&gt; unit" Usage="xPathMessageFilter.OnReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="457e3-217">用來讀取 XML 文件的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-217">The <see cref="T:System.Xml.XmlReader" /> used to read the XML document.</span></span></param>
        <summary><span data-ttu-id="457e3-218">讀取目前的 XML 節點。</span><span class="sxs-lookup"><span data-stu-id="457e3-218">Reads the current XML node.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="457e3-219"><paramref name="reader" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-219"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="457e3-220"><paramref name="reader" /> 不是位於開始項目上。</span><span class="sxs-lookup"><span data-stu-id="457e3-220"><paramref name="reader" /> is not positioned on the starting element.</span></span>

<span data-ttu-id="457e3-221">-或-</span><span class="sxs-lookup"><span data-stu-id="457e3-221">-or-</span></span>

<span data-ttu-id="457e3-222"><paramref name="reader" /> 遇到空項目。</span><span class="sxs-lookup"><span data-stu-id="457e3-222"><paramref name="reader" /> encountered an empty element.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="457e3-223">節點的內容無效。</span><span class="sxs-lookup"><span data-stu-id="457e3-223">Content of a node is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnWriteXml">
      <MemberSignature Language="C#" Value="protected virtual void OnWriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnWriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member OnWriteXml : System.Xml.XmlWriter -&gt; unit&#xA;override this.OnWriteXml : System.Xml.XmlWriter -&gt; unit" Usage="xPathMessageFilter.OnWriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="457e3-224">用來寫入節點的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-224">The <see cref="T:System.Xml.XmlWriter" /> used to write the node.</span></span></param>
        <summary><span data-ttu-id="457e3-225">使用 <paramref name="writer" /> 寫入節點。</span><span class="sxs-lookup"><span data-stu-id="457e3-225">Writes a node using <paramref name="writer" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="457e3-226"><paramref name="writer" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-226"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadXPath">
      <MemberSignature Language="C#" Value="protected void ReadXPath (System.Xml.XmlReader reader, System.Xml.XmlNamespaceManager namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadXPath(class System.Xml.XmlReader reader, class System.Xml.XmlNamespaceManager namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.ReadXPath(System.Xml.XmlReader,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadXPath (reader As XmlReader, namespaces As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadXPath(System::Xml::XmlReader ^ reader, System::Xml::XmlNamespaceManager ^ namespaces);" />
      <MemberSignature Language="F#" Value="member this.ReadXPath : System.Xml.XmlReader * System.Xml.XmlNamespaceManager -&gt; unit" Usage="xPathMessageFilter.ReadXPath (reader, namespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="namespaces" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="457e3-227">用來還原序列化 XPath 篩選條件的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-227">The <see cref="T:System.Xml.XmlReader" /> used to deserialize the XPath filter.</span></span></param>
        <param name="namespaces"><span data-ttu-id="457e3-228">用來管理要從其中讀取之命名空間的 <see cref="T:System.Xml.XmlNamespaceManager" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-228">The <see cref="T:System.Xml.XmlNamespaceManager" /> used to manage the namespaces being read from.</span></span></param>
        <summary><span data-ttu-id="457e3-229">使用指定的命名空間管理員，從已指定 XML 讀取器取得的 XPath，初始化 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 的目前執行個體。</span><span class="sxs-lookup"><span data-stu-id="457e3-229">Initializes the current instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> with an XPath obtained from a specified XML reader using a specified namespace manager.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="457e3-230">命名空間管理員執行個體可以是用於解析函式和變數的 <xref:System.Xml.Xsl.XsltContext>。</span><span class="sxs-lookup"><span data-stu-id="457e3-230">The namespace manager instance can be an <xref:System.Xml.Xsl.XsltContext> that is used to resolve functions and variables.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticGetSchema">
      <MemberSignature Language="C#" Value="public static System.Xml.Schema.XmlSchemaType StaticGetSchema (System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Schema.XmlSchemaType StaticGetSchema(class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.StaticGetSchema(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StaticGetSchema (schemas As XmlSchemaSet) As XmlSchemaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::Schema::XmlSchemaType ^ StaticGetSchema(System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="static member StaticGetSchema : System.Xml.Schema.XmlSchemaSet -&gt; System.Xml.Schema.XmlSchemaType" Usage="System.ServiceModel.Dispatcher.XPathMessageFilter.StaticGetSchema schemas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemas"><span data-ttu-id="457e3-231">包含 XML 結構描述定義語言 (XSD) 結構描述快取的 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-231">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the cache of XML Schema definition language (XSD) schemas.</span></span></param>
        <summary><span data-ttu-id="457e3-232">取得用於序列化 XPath 篩選條件的 XML 結構描述型別。</span><span class="sxs-lookup"><span data-stu-id="457e3-232">Gets the type of XML schema used to serialize the XPath filter.</span></span></summary>
        <returns><span data-ttu-id="457e3-233">用來序列化 XPath 篩選條件的 <see cref="T:System.Xml.Schema.XmlSchemaType" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-233">The <see cref="T:System.Xml.Schema.XmlSchemaType" /> used to serialize the XPath filter.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="457e3-234"><paramref name="schemas" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-234"><paramref name="schemas" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.GetSchema">
      <MemberSignature Language="C#" Value="System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#GetSchema" />
      <MemberSignature Language="VB.NET" Value="Function GetSchema () As XmlSchema Implements IXmlSerializable.GetSchema" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Xml::Schema::XmlSchema ^ System.Xml.Serialization.IXmlSerializable.GetSchema() = System::Xml::Serialization::IXmlSerializable::GetSchema;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.GetSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="457e3-235">取得目前結構描述的明確介面實作。</span><span class="sxs-lookup"><span data-stu-id="457e3-235">An explicit interface implementation that gets the current schema.</span></span></summary>
        <returns><span data-ttu-id="457e3-236">表示目前文件的 <see cref="T:System.Xml.Schema.XmlSchema" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-236">The <see cref="T:System.Xml.Schema.XmlSchema" /> that represents the current document.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.ReadXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Sub ReadXml (reader As XmlReader) Implements IXmlSerializable.ReadXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.ReadXml(System::Xml::XmlReader ^ reader) = System::Xml::Serialization::IXmlSerializable::ReadXml;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="457e3-237">用來讀取 XML 文件的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-237">The <see cref="T:System.Xml.XmlReader" /> used to read the XML document.</span></span></param>
        <summary><span data-ttu-id="457e3-238">讀取目前 XML 節點的明確介面實作。</span><span class="sxs-lookup"><span data-stu-id="457e3-238">An explicit interface implementation that reads the current XML node.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.WriteXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Sub WriteXml (writer As XmlWriter) Implements IXmlSerializable.WriteXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.WriteXml(System::Xml::XmlWriter ^ writer) = System::Xml::Serialization::IXmlSerializable::WriteXml;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="457e3-239">用來寫入節點的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-239">The <see cref="T:System.Xml.XmlWriter" /> used to write the node.</span></span></param>
        <summary><span data-ttu-id="457e3-240">使用 <paramref name="writer" /> 寫入 XML 節點的明確介面實作。</span><span class="sxs-lookup"><span data-stu-id="457e3-240">An explicit interface implementation that writes an XML node using <paramref name="writer" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimToSize();" />
      <MemberSignature Language="F#" Value="member this.TrimToSize : unit -&gt; unit" Usage="xPathMessageFilter.TrimToSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="457e3-241">釋放所有未使用的記憶體，以便精簡 XPath 篩選條件。</span><span class="sxs-lookup"><span data-stu-id="457e3-241">Compacts the XPath filter, which releases all unused memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="457e3-242">這個作業類似於調整陣列的大小，因此此作業沒有未使用的項目。</span><span class="sxs-lookup"><span data-stu-id="457e3-242">This operation is similar to the resizing of an array so that it has no unused elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="457e3-243">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="457e3-243">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteXPath">
      <MemberSignature Language="C#" Value="protected void WriteXPath (System.Xml.XmlWriter writer, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteXPath(class System.Xml.XmlWriter writer, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.WriteXPath(System.Xml.XmlWriter,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteXPath (writer As XmlWriter, resolver As IXmlNamespaceResolver)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteXPath(System::Xml::XmlWriter ^ writer, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.WriteXPath : System.Xml.XmlWriter * System.Xml.IXmlNamespaceResolver -&gt; unit" Usage="xPathMessageFilter.WriteXPath (writer, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="457e3-244">用來序列化 XPath 篩選條件的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-244">The <see cref="T:System.Xml.XmlWriter" /> used to serialize the XPath filter.</span></span></param>
        <param name="resolver"><span data-ttu-id="457e3-245">用來解決任何 XPath 篩選條件命名空間衝突的 <see cref="T:System.Xml.IXmlNamespaceResolver" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-245">The <see cref="T:System.Xml.IXmlNamespaceResolver" /> used to resolve any namespace conflict for the XPath filter.</span></span></param>
        <summary><span data-ttu-id="457e3-246">將 XPath 篩選條件序列化成 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-246">Serializes the XPath filter to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="457e3-247">`writer`必須位於*啟動*狀態。</span><span class="sxs-lookup"><span data-stu-id="457e3-247">The `writer` must be in the *Start* state.</span></span> <span data-ttu-id="457e3-248">否則，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="457e3-248">Otherwise an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXPathTo">
      <MemberSignature Language="C#" Value="public void WriteXPathTo (System.Xml.XmlWriter writer, string prefix, string localName, string ns, bool writeNamespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXPathTo(class System.Xml.XmlWriter writer, string prefix, string localName, string ns, bool writeNamespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilter.WriteXPathTo(System.Xml.XmlWriter,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXPathTo (writer As XmlWriter, prefix As String, localName As String, ns As String, writeNamespaces As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXPathTo(System::Xml::XmlWriter ^ writer, System::String ^ prefix, System::String ^ localName, System::String ^ ns, bool writeNamespaces);" />
      <MemberSignature Language="F#" Value="member this.WriteXPathTo : System.Xml.XmlWriter * string * string * string * bool -&gt; unit" Usage="xPathMessageFilter.WriteXPathTo (writer, prefix, localName, ns, writeNamespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="writeNamespaces" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="457e3-249">用來寫入 <see cref="T:System.Xml.XmlWriter" /> 的 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-249">The <see cref="T:System.Xml.XmlWriter" /> used to write the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span></span></param>
        <param name="prefix"><span data-ttu-id="457e3-250">XPath XML 項目的命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="457e3-250">The namespace prefix of the XPath XML element.</span></span></param>
        <param name="localName"><span data-ttu-id="457e3-251">XPath XML 項目的本機名稱。</span><span class="sxs-lookup"><span data-stu-id="457e3-251">The local name of the XPath XML element.</span></span></param>
        <param name="ns"><span data-ttu-id="457e3-252">與 XML 項目關聯的命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="457e3-252">The namespace URI to associate with the XML element.</span></span></param>
        <param name="writeNamespaces"><span data-ttu-id="457e3-253">如果應將命名空間另外序列化為屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-253"><see langword="true" /> if namespaces should be serialized out separately as attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="457e3-254">使用已指定 XML 寫入器寫入 XML XPath 項目。</span><span class="sxs-lookup"><span data-stu-id="457e3-254">Writes the XML XPath element with a specified XML writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="457e3-255">`writer`必須位於*啟動*狀態。</span><span class="sxs-lookup"><span data-stu-id="457e3-255">The `writer` must be in the *Start* state.</span></span> <span data-ttu-id="457e3-256">否則，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="457e3-256">Otherwise an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="457e3-257"><paramref name="writer" /> 或 <paramref name="localName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="457e3-257"><paramref name="writer" /> or <paramref name="localName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="457e3-258"><paramref name="localName" /> 的長度 = 0。</span><span class="sxs-lookup"><span data-stu-id="457e3-258"><paramref name="localName" /> has length = 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public string XPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilter.XPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XPath : string" Usage="System.ServiceModel.Dispatcher.XPathMessageFilter.XPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="457e3-259">取得定義篩選條件之查詢準則的 XPath 運算式。</span><span class="sxs-lookup"><span data-stu-id="457e3-259">Gets the XPath expression that defines the query criteria for the filter.</span></span></summary>
        <value><span data-ttu-id="457e3-260">篩選條件的 XPath 運算式。</span><span class="sxs-lookup"><span data-stu-id="457e3-260">The XPath expression for the filter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>