<Type Name="ChannelDispatcher" FullName="System.ServiceModel.Dispatcher.ChannelDispatcher">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64dc4c5d742c5867797292781de3cf5cf782be73" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53294626" /></Metadata><TypeSignature Language="C#" Value="public class ChannelDispatcher : System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChannelDispatcher extends System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ChannelDispatcher&#xA;Inherits ChannelDispatcherBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelDispatcher : System::ServiceModel::Dispatcher::ChannelDispatcherBase" />
  <TypeSignature Language="F#" Value="type ChannelDispatcher = class&#xA;    inherit ChannelDispatcherBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.ChannelDispatcherBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="57390-101">元件，它會接受通道且使通道與服務產生關聯。</span><span class="sxs-lookup"><span data-stu-id="57390-101">A component that accepts channels and associates them with a service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-102"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 物件會透過服務執行個體，與位於特定 URI (稱為接聽 URI) 的 <xref:System.ServiceModel.Channels.IChannelListener> 產生關聯。</span><span class="sxs-lookup"><span data-stu-id="57390-102">A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI (called a listen URI) with an instance of a service.</span></span> <span data-ttu-id="57390-103">每個 <xref:System.ServiceModel.ServiceHost> 物件都可以擁有許多 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 物件，而其中每一個物件都會與該服務的不同接聽程式 (Listener) 和接聽 URI 具有關聯。</span><span class="sxs-lookup"><span data-stu-id="57390-103">Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different listener and listen URI for that service.</span></span>  
  
 <span data-ttu-id="57390-104">當訊息抵達時，<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 會查詢每個關聯的 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 物件來判定該端點是否可以接受此訊息，然後將該訊息傳遞至可以接受的端點。</span><span class="sxs-lookup"><span data-stu-id="57390-104">When a message arrives, the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> queries each of the associated <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objects whether the endpoint can accept the message, and passes the message to the one that can.</span></span> <span data-ttu-id="57390-105">當訊息的目的端位址與 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 屬性相符，且訊息動作符合 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 屬性時，<xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> 物件就會負責處理來自 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> 的訊息。</span><span class="sxs-lookup"><span data-stu-id="57390-105">The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> object is responsible for processing messages from a <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> when the destination address of a message matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> property and the message action matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> property.</span></span>  
  
 <span data-ttu-id="57390-106">所有控制通道工作階段之存留期及行為的屬性都可以用來檢查或修改 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 物件，</span><span class="sxs-lookup"><span data-stu-id="57390-106">All properties that control the lifetime and behavior of a channel session are available for inspection or modification on the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object.</span></span> <span data-ttu-id="57390-107">除了 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 之外，這些還包括自訂 <xref:System.ServiceModel.Dispatcher.IChannelInitializer> 物件、<xref:System.ServiceModel.Channels.IChannelListener>、<xref:System.ServiceModel.ServiceHost>、目前相關聯的物件和 <xref:System.ServiceModel.InstanceContext>。</span><span class="sxs-lookup"><span data-stu-id="57390-107">In addition to the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>, these include custom <xref:System.ServiceModel.Dispatcher.IChannelInitializer> objects, the <xref:System.ServiceModel.Channels.IChannelListener>, the <xref:System.ServiceModel.ServiceHost>, the associated and <xref:System.ServiceModel.InstanceContext>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/service.cs#0)]
 [!code-vb[S_UE_ChannelDispatcher#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/service.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="57390-108">初始化 <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="57390-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.IChannelListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listener As IChannelListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelDispatcher(System::ServiceModel::Channels::IChannelListener ^ listener);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.ChannelDispatcher : System.ServiceModel.Channels.IChannelListener -&gt; System.ServiceModel.Dispatcher.ChannelDispatcher" Usage="new System.ServiceModel.Dispatcher.ChannelDispatcher listener" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="listener" Type="System.ServiceModel.Channels.IChannelListener" />
      </Parameters>
      <Docs>
        <param name="listener"><span data-ttu-id="57390-109">通道發送器的 <see cref="T:System.ServiceModel.Channels.IChannelListener" />。</span><span class="sxs-lookup"><span data-stu-id="57390-109">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> for the channel dispatcher.</span></span></param>
        <summary><span data-ttu-id="57390-110">初始化 <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="57390-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-111">從提供的接聽程式 (Listener) 使用系統提供的預設逾時，初始化 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="57390-111">Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener, with system-provided default timeouts.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#1)]
 [!code-vb[S_UE_ChannelDispatcher#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57390-112"><paramref name="listener" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="57390-112"><paramref name="listener" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.IChannelListener listener, string bindingName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listener As IChannelListener, bindingName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelDispatcher(System::ServiceModel::Channels::IChannelListener ^ listener, System::String ^ bindingName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.ChannelDispatcher : System.ServiceModel.Channels.IChannelListener * string -&gt; System.ServiceModel.Dispatcher.ChannelDispatcher" Usage="new System.ServiceModel.Dispatcher.ChannelDispatcher (listener, bindingName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="listener" Type="System.ServiceModel.Channels.IChannelListener" />
        <Parameter Name="bindingName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="listener"><span data-ttu-id="57390-113">通道發送器的 <see cref="T:System.ServiceModel.Channels.IChannelListener" />。</span><span class="sxs-lookup"><span data-stu-id="57390-113">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> for the channel dispatcher.</span></span></param>
        <param name="bindingName"><span data-ttu-id="57390-114">用於設定服務的繫結名稱。</span><span class="sxs-lookup"><span data-stu-id="57390-114">The name of the binding used to configure the service.</span></span></param>
        <summary><span data-ttu-id="57390-115">初始化 <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="57390-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-116">從提供的接聽程式和繫結使用系統提供的預設逾時，初始化 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="57390-116">Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with system-provided default timeouts.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#2)]
 [!code-vb[S_UE_ChannelDispatcher#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57390-117"><paramref name="listener" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="57390-117"><paramref name="listener" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName, System.ServiceModel.IDefaultCommunicationTimeouts timeouts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.IChannelListener listener, string bindingName, class System.ServiceModel.IDefaultCommunicationTimeouts timeouts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listener As IChannelListener, bindingName As String, timeouts As IDefaultCommunicationTimeouts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelDispatcher(System::ServiceModel::Channels::IChannelListener ^ listener, System::String ^ bindingName, System::ServiceModel::IDefaultCommunicationTimeouts ^ timeouts);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.ChannelDispatcher : System.ServiceModel.Channels.IChannelListener * string * System.ServiceModel.IDefaultCommunicationTimeouts -&gt; System.ServiceModel.Dispatcher.ChannelDispatcher" Usage="new System.ServiceModel.Dispatcher.ChannelDispatcher (listener, bindingName, timeouts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listener" Type="System.ServiceModel.Channels.IChannelListener" />
        <Parameter Name="bindingName" Type="System.String" />
        <Parameter Name="timeouts" Type="System.ServiceModel.IDefaultCommunicationTimeouts" />
      </Parameters>
      <Docs>
        <param name="listener"><span data-ttu-id="57390-118">服務的 <see cref="T:System.ServiceModel.Channels.IChannelListener" />。</span><span class="sxs-lookup"><span data-stu-id="57390-118">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> for the service.</span></span></param>
        <param name="bindingName"><span data-ttu-id="57390-119">用於設定服務的繫結名稱。</span><span class="sxs-lookup"><span data-stu-id="57390-119">The name of the binding used to configure the service.</span></span></param>
        <param name="timeouts"><span data-ttu-id="57390-120">服務的 <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />。</span><span class="sxs-lookup"><span data-stu-id="57390-120">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> for the service.</span></span></param>
        <summary><span data-ttu-id="57390-121">初始化 <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="57390-121">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-122">從提供的接聽程式和繫結使用指定的預設逾時，初始化 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="57390-122">Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with the specified default timeouts.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#3)]
 [!code-vb[S_UE_ChannelDispatcher#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57390-123"><paramref name="listener" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="57390-123"><paramref name="listener" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsynchronousTransactedAcceptEnabled">
      <MemberSignature Language="C#" Value="public bool AsynchronousTransactedAcceptEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsynchronousTransactedAcceptEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property AsynchronousTransactedAcceptEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsynchronousTransactedAcceptEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AsynchronousTransactedAcceptEnabled : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-124">取得值，指出接聽程式上交易的接受方法呼叫是否為非同步。</span><span class="sxs-lookup"><span data-stu-id="57390-124">Gets a value that indicates whether the transacted accept method calls on listener are asynchronous.</span></span></summary>
        <value><span data-ttu-id="57390-125">如果接聽程式上交易的接受方法呼叫為非同步，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="57390-125"><see langword="true" /> if the transacted accept method calls on listener are asynchronous; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="protected override void Attach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Attach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Attach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Attach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="override this.Attach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcher.Attach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="57390-126">服務的 <see cref="T:System.ServiceModel.ServiceHostBase" />。</span><span class="sxs-lookup"><span data-stu-id="57390-126">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service.</span></span></param>
        <summary><span data-ttu-id="57390-127">將通道發送器附加至主機。</span><span class="sxs-lookup"><span data-stu-id="57390-127">Attaches the channel dispatcher to the host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-128">只有在 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 的執行個體處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態時才可以設定這個屬性，因為這是唯一同時處於可變動且尚未處置的狀態。</span><span class="sxs-lookup"><span data-stu-id="57390-128">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57390-129">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-129">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57390-130">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-130">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="57390-131">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-131">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BindingName">
      <MemberSignature Language="C#" Value="public string BindingName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingName : string" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-132">取得用於設定服務的繫結名稱。</span><span class="sxs-lookup"><span data-stu-id="57390-132">Gets the name of the binding used to configure the service.</span></span></summary>
        <value><span data-ttu-id="57390-133">服務的繫結名稱。</span><span class="sxs-lookup"><span data-stu-id="57390-133">The binding name of the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-134">用來取得與這個通道發送器相關聯之繫結的名稱。</span><span class="sxs-lookup"><span data-stu-id="57390-134">Used to obtain the binding name for the binding with which this channel dispatcher is associated.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#4)]
 [!code-vb[S_UE_ChannelDispatcher#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelInitializers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt; ChannelInitializers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.IChannelInitializer&gt; ChannelInitializers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelInitializers As SynchronizedCollection(Of IChannelInitializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IChannelInitializer ^&gt; ^ ChannelInitializers { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IChannelInitializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelInitializers : System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt;" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-135">取得 <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> 物件集合，在通道第一次建立時，您可以使用這些物件來檢查和加入通道狀態。</span><span class="sxs-lookup"><span data-stu-id="57390-135">Gets a set of <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> objects that you can use to inspect and add state to channels when they are first created.</span></span></summary>
        <value><span data-ttu-id="57390-136"><see cref="T:System.Collections.Generic.SynchronizedCollection`1" />，型別為 <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="57390-136">A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of type <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-137">使用這個屬性，即可將自訂通道初始設定式插入至初始設定集合 (Initialization Collection)，以便在通道建立時檢查或修改通道狀態。</span><span class="sxs-lookup"><span data-stu-id="57390-137">Use this property to insert a custom channel initializer into the initialization collection to inspect or modify channel state when they are created.</span></span> <span data-ttu-id="57390-138">如果與發送器關聯的合約是雙工合約，這個屬性也可以用來對傳出通道執行相同的行為。</span><span class="sxs-lookup"><span data-stu-id="57390-138">This is also useful to perform the same behavior on outgoing channels if the contract associated with a dispatcher is a duplex contract.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#5)]
 [!code-vb[S_UE_ChannelDispatcher#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public override void CloseInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CloseInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CloseInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CloseInput();" />
      <MemberSignature Language="F#" Value="override this.CloseInput : unit -&gt; unit" Usage="channelDispatcher.CloseInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57390-139">停止接聽程式接受新通道。</span><span class="sxs-lookup"><span data-stu-id="57390-139">Stops the listener from accepting new channels.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-140">呼叫這個方法會停止接聽程式進行接聽。</span><span class="sxs-lookup"><span data-stu-id="57390-140">Calling this method stops the listener listening.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCloseTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultCloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultCloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultCloseTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCloseTimeout : TimeSpan" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-141">取得允許通道發送器關閉的預設時間間隔。</span><span class="sxs-lookup"><span data-stu-id="57390-141">Gets the default interval of time allowed for the channel dispatcher to close.</span></span></summary>
        <value><span data-ttu-id="57390-142"><see cref="T:System.TimeSpan" />，其中指定允許通道發送器關閉的預設時間間隔。</span><span class="sxs-lookup"><span data-stu-id="57390-142">The <see cref="T:System.TimeSpan" /> that specifies the default interval of time allowed for the channel dispatcher to close.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-143">這個預設關閉逾時可以透過 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29> 來設定。</span><span class="sxs-lookup"><span data-stu-id="57390-143">This default close timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>.</span></span> <span data-ttu-id="57390-144">否則，就會使用服務模型預設值，即 1 分鐘。</span><span class="sxs-lookup"><span data-stu-id="57390-144">Otherwise, a service model default value of 1 minute is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOpenTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultOpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultOpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultOpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultOpenTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultOpenTimeout : TimeSpan" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-145">取得允許通道發送器開啟的預設時間間隔。</span><span class="sxs-lookup"><span data-stu-id="57390-145">Gets the default interval of time allowed for the channel dispatcher to open.</span></span></summary>
        <value><span data-ttu-id="57390-146"><see cref="T:System.TimeSpan" />，其中指定允許通道發送器關閉的預設時間間隔。</span><span class="sxs-lookup"><span data-stu-id="57390-146">The <see cref="T:System.TimeSpan" /> that specifies the default interval of time allowed for the channel dispatcher to close.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-147">這個預設開啟逾時可以透過 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29> 來設定。</span><span class="sxs-lookup"><span data-stu-id="57390-147">This default open timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>.</span></span> <span data-ttu-id="57390-148">否則，就會使用服務模型預設值，即 1 分鐘。</span><span class="sxs-lookup"><span data-stu-id="57390-148">Otherwise, a service model default value of 1 minute is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="protected override void Detach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Detach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Detach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Detach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="override this.Detach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcher.Detach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="57390-149">服務的 <see cref="T:System.ServiceModel.ServiceHostBase" />。</span><span class="sxs-lookup"><span data-stu-id="57390-149">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service.</span></span></param>
        <summary><span data-ttu-id="57390-150">從通道發送器中斷服務主機的連結。</span><span class="sxs-lookup"><span data-stu-id="57390-150">Detaches the service host from the channel dispatcher.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-151"><xref:System.ServiceModel.ServiceHostBase> 只有在 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 的執行個體處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態時才可以進行中斷，因為這是唯一同時處於可變動且尚未處置的狀態。</span><span class="sxs-lookup"><span data-stu-id="57390-151">The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="57390-152">將與通道發送器關聯的 <xref:System.ServiceModel.ServiceHostBase> 設定為 `null`。</span><span class="sxs-lookup"><span data-stu-id="57390-152">Sets the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#18)]
 [!code-vb[S_UE_ChannelDispatcher#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="57390-153"><paramref name="host" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="57390-153"><paramref name="host" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57390-154"><paramref name="host" /> 不是通道發送器的主機。</span><span class="sxs-lookup"><span data-stu-id="57390-154"><paramref name="host" /> is not the host of the channel dispatcher.</span></span>

<span data-ttu-id="57390-155">-或-</span><span class="sxs-lookup"><span data-stu-id="57390-155">-or-</span></span>

<span data-ttu-id="57390-156">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-156">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57390-157">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-157">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="57390-158">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-158">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Endpoints">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.EndpointDispatcher&gt; Endpoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.EndpointDispatcher&gt; Endpoints" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Endpoints As SynchronizedCollection(Of EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::EndpointDispatcher ^&gt; ^ Endpoints { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::EndpointDispatcher ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Endpoints : System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.EndpointDispatcher&gt;" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.EndpointDispatcher&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-159">取得轉送訊息至通道端點的端點發送器。</span><span class="sxs-lookup"><span data-stu-id="57390-159">Gets the endpoint dispatchers which forward messages to the channel endpoints.</span></span></summary>
        <value><span data-ttu-id="57390-160"><see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> 的 <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />，這些發送器會將訊息轉送到通道端點。</span><span class="sxs-lookup"><span data-stu-id="57390-160">A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> which forward messages to the channel endpoints.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-161"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 對通道所能支援的每個端點都會使用不同的 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>。</span><span class="sxs-lookup"><span data-stu-id="57390-161">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> has a distinct <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> for each endpoint that the channel can support.</span></span>  
  
 <span data-ttu-id="57390-162">使用 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>，即可存取執行階段屬性，而這些屬性可讓您自訂整個端點上的執行階段。</span><span class="sxs-lookup"><span data-stu-id="57390-162">Use the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> to obtain access to runtime properties that enable you to customize the runtime across an entire endpoint.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#6)]
 [!code-vb[S_UE_ChannelDispatcher#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorHandlers">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.IErrorHandler&gt; ErrorHandlers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Dispatcher.IErrorHandler&gt; ErrorHandlers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorHandlers As Collection(Of IErrorHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Dispatcher::IErrorHandler ^&gt; ^ ErrorHandlers { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Dispatcher::IErrorHandler ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorHandlers : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.IErrorHandler&gt;" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.IErrorHandler&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-163">取得 <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> 物件集合，您可以使用這些物件來為端點插入自訂錯誤處理功能。</span><span class="sxs-lookup"><span data-stu-id="57390-163">Gets a set of <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> objects that can be used to insert custom error handling functionality for an endpoint.</span></span></summary>
        <value><span data-ttu-id="57390-164"><see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> 物件的 <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" />。</span><span class="sxs-lookup"><span data-stu-id="57390-164">A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#7)]
 [!code-vb[S_UE_ChannelDispatcher#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Host" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : System.ServiceModel.ServiceHostBase" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-165">取得與發送器關聯之服務的主機。</span><span class="sxs-lookup"><span data-stu-id="57390-165">Gets the host for the service associated with the dispatcher.</span></span></summary>
        <value><span data-ttu-id="57390-166">與發送器相關聯之服務的 <see cref="T:System.ServiceModel.ServiceHostBase" />。</span><span class="sxs-lookup"><span data-stu-id="57390-166">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service associated with the dispatcher.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-167">每個 <xref:System.ServiceModel.ServiceHost> 物件可以有許多 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 物件，而其中每個物件都與服務的不同 <xref:System.ServiceModel.Channels.IChannelListener> 具有關聯。</span><span class="sxs-lookup"><span data-stu-id="57390-167">Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#8)]
 [!code-vb[S_UE_ChannelDispatcher#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeExceptionDetailInFaults">
      <MemberSignature Language="C#" Value="public bool IncludeExceptionDetailInFaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeExceptionDetailInFaults" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeExceptionDetailInFaults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeExceptionDetailInFaults { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeExceptionDetailInFaults : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-168">取得或設定值，這個值會指定是否要在錯誤中包含例外狀況的詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="57390-168">Gets or sets a value that indicates whether to include the details about an exception in a fault.</span></span></summary>
        <value><span data-ttu-id="57390-169">如果要在錯誤中包含例外狀況的詳細資訊，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="57390-169"><see langword="true" /> if the details about an exception are included in the faults; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-170">只有在 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 的執行個體處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態時才可以設定這個屬性，因為這是唯一同時處於可變動且尚未處置的狀態。</span><span class="sxs-lookup"><span data-stu-id="57390-170">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#19)]
 [!code-vb[S_UE_ChannelDispatcher#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57390-171">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-171">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57390-172">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-172">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="57390-173">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-173">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsTransactedAccept">
      <MemberSignature Language="C#" Value="public bool IsTransactedAccept { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTransactedAccept" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTransactedAccept As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTransactedAccept { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTransactedAccept : bool" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-174">取得值，這個值會指出是否已在異動中對接聽程式呼叫「接受」方法。</span><span class="sxs-lookup"><span data-stu-id="57390-174">Gets a value that indicates whether the accept method calls on the listener are done under a transaction.</span></span></summary>
        <value><span data-ttu-id="57390-175">如果已在交易中對接聽程式呼叫「接受」方法，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="57390-175"><see langword="true" /> if the accept method calls on the listener are done under a transaction; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#9)]
 [!code-vb[S_UE_ChannelDispatcher#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransactedReceive">
      <MemberSignature Language="C#" Value="public bool IsTransactedReceive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTransactedReceive" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTransactedReceive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTransactedReceive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTransactedReceive : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-176">取得值，這個值會指出是否已在異動中對接聽程式呼叫「接收」方法。</span><span class="sxs-lookup"><span data-stu-id="57390-176">Gets a value that indicates whether the receive method calls on the listener are done under a transaction.</span></span></summary>
        <value><span data-ttu-id="57390-177">如果已在交易中對接聽程式呼叫「接收」方法，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="57390-177"><see langword="true" /> if the receive method calls on the listener are done under a transaction; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-178"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive%2A> 屬性只有在 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 的執行個體處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態時才可以進行設定，因為這是唯一同時處於可變動且尚未處置的狀態。</span><span class="sxs-lookup"><span data-stu-id="57390-178">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#10)]
 [!code-vb[S_UE_ChannelDispatcher#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57390-179">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-179">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57390-180">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-180">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="57390-181">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-181">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener Listener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.IChannelListener Listener" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Listener" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Listener As IChannelListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::Channels::IChannelListener ^ Listener { System::ServiceModel::Channels::IChannelListener ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listener : System.ServiceModel.Channels.IChannelListener" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.Listener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-182">取得與通道發送器關聯的接聽程式。</span><span class="sxs-lookup"><span data-stu-id="57390-182">Gets the listener associated with the channel dispatcher.</span></span></summary>
        <value><span data-ttu-id="57390-183">與通道發送器相關聯的 <see cref="T:System.ServiceModel.Channels.IChannelListener" />。</span><span class="sxs-lookup"><span data-stu-id="57390-183">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> associated with the channel dispatcher.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-184"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 會透過服務執行個體，與位於特定 URI 的 <xref:System.ServiceModel.Channels.IChannelListener> 產生關聯。</span><span class="sxs-lookup"><span data-stu-id="57390-184">A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI with an instance of a service.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#11)]
 [!code-vb[S_UE_ChannelDispatcher#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManualAddressing">
      <MemberSignature Language="C#" Value="public bool ManualAddressing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ManualAddressing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing" />
      <MemberSignature Language="VB.NET" Value="Public Property ManualAddressing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ManualAddressing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ManualAddressing : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-185">取得或設定值，這個值會指出通道發送器是否將定址標頭加入至要求-回覆訊息。</span><span class="sxs-lookup"><span data-stu-id="57390-185">Gets or sets a value that indicates whether the channel dispatcher adds addressing headers to request-reply messages.</span></span></summary>
        <value><span data-ttu-id="57390-186">如果 Proxy 不會加入任何定址標頭，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="57390-186"><see langword="true" /> if the proxy does not add any addressing headers; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="57390-187">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="57390-187">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-188">只有在 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 的執行個體處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態時才可以設定這個屬性，因為這是唯一同時處於可變動且尚未處置的狀態。</span><span class="sxs-lookup"><span data-stu-id="57390-188">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="57390-189">如果您不要讓用戶端將訊息識別碼 (Message ID) 和回覆 (ReplyTo) 等定址標頭加入至要求/回覆訊息，以便應用程式可以控制這些標頭，請將 <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> 屬性設定為 `true`。</span><span class="sxs-lookup"><span data-stu-id="57390-189">Set the <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> property to `true` if you want to prevent the client from adding Message ID and ReplyTo addressing headers to request/response messages so that your application can control these headers.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#12)]
 [!code-vb[S_UE_ChannelDispatcher#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57390-190">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-190">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57390-191">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-191">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="57390-192">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-192">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxPendingReceives">
      <MemberSignature Language="C#" Value="public int MaxPendingReceives { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPendingReceives" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPendingReceives As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPendingReceives { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxPendingReceives : int with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-193">取得或設定每個通道的最大暫止訊息數目。</span><span class="sxs-lookup"><span data-stu-id="57390-193">Gets or sets the maximum pending messages per channel.</span></span></summary>
        <value><span data-ttu-id="57390-194">代表最大訊息數目的整數。</span><span class="sxs-lookup"><span data-stu-id="57390-194">An integer representing a maximum number of messages.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTransactedBatchSize">
      <MemberSignature Language="C#" Value="public int MaxTransactedBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxTransactedBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTransactedBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxTransactedBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxTransactedBatchSize : int with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-195">取得或設定交易批次的大小上限。</span><span class="sxs-lookup"><span data-stu-id="57390-195">Gets or sets the maximum size for a transacted batch.</span></span></summary>
        <value><span data-ttu-id="57390-196">交易批次的大小上限。</span><span class="sxs-lookup"><span data-stu-id="57390-196">The maximum size for a transacted batch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-197"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize%2A> 屬性只有在 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 的執行個體處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態時才可以進行設定，因為這是唯一同時處於可變動且尚未處置的狀態。</span><span class="sxs-lookup"><span data-stu-id="57390-197">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#13)]
 [!code-vb[S_UE_ChannelDispatcher#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57390-198">設定的值小於零。</span><span class="sxs-lookup"><span data-stu-id="57390-198">The value set is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57390-199">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-199">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57390-200">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-200">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="57390-201">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-201">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MessageVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageVersion MessageVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion MessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageVersion ^ MessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); void set(System::ServiceModel::Channels::MessageVersion ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageVersion : System.ServiceModel.Channels.MessageVersion with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-202">取得或設定已使用或需要使用的 SOAP 訊息和 WS-Addressing 版本。</span><span class="sxs-lookup"><span data-stu-id="57390-202">Gets or sets the SOAP message and WS-Addressing versions that are used or expected.</span></span></summary>
        <value><span data-ttu-id="57390-203">已使用或需要使用的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</span><span class="sxs-lookup"><span data-stu-id="57390-203">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used or expected.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-204">指定與訊息及其交換相關聯的 SOAP 和 WS-Addressing 版本。</span><span class="sxs-lookup"><span data-stu-id="57390-204">Specifies the versions of SOAP and WS-Addressing associated with a message and its exchange.</span></span>  
  
 <span data-ttu-id="57390-205">只有在 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 的執行個體處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態時才可以設定這個屬性，因為這是唯一同時處於可變動且尚未處置的狀態。</span><span class="sxs-lookup"><span data-stu-id="57390-205">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#20)]
 [!code-vb[S_UE_ChannelDispatcher#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57390-206">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-206">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57390-207">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-207">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="57390-208">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-208">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnAbort">
      <MemberSignature Language="C#" Value="protected override void OnAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAbort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAbort();" />
      <MemberSignature Language="F#" Value="override this.OnAbort : unit -&gt; unit" Usage="channelDispatcher.OnAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57390-209">中止與發送器相關聯的接聽程式。</span><span class="sxs-lookup"><span data-stu-id="57390-209">Aborts the listener associated with the dispatcher.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginClose">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="channelDispatcher.OnBeginClose (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="57390-210"><see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成關閉作業。</span><span class="sxs-lookup"><span data-stu-id="57390-210">The <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="57390-211"><see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步關閉作業完成的通知。</span><span class="sxs-lookup"><span data-stu-id="57390-211">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the close operation.</span></span></param>
        <param name="state"><span data-ttu-id="57390-212">應用程式所指定的物件，其中包含與非同步關閉作業關聯的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="57390-212">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span></span></param>
        <summary><span data-ttu-id="57390-213">開始進行關閉發送器之通道接聽程式的非同步作業，此作業必須在指定的時間間隔內完成。</span><span class="sxs-lookup"><span data-stu-id="57390-213">Begins an asynchronous operation to close a channel listener for the dispatcher that must be completed within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="57390-214"><see cref="T:System.IAsyncResult" />，它會參考要關閉發送器之通道接聽程式的非同步作業。</span><span class="sxs-lookup"><span data-stu-id="57390-214">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to close a channel listener for the dispatcher.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginOpen">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginOpen : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="channelDispatcher.OnBeginOpen (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="57390-215"><see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成開啟作業。</span><span class="sxs-lookup"><span data-stu-id="57390-215">The <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="57390-216"><see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步開啟作業完成的通知。</span><span class="sxs-lookup"><span data-stu-id="57390-216">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the open operation.</span></span></param>
        <param name="state"><span data-ttu-id="57390-217">應用程式所指定的物件，其中包含與非同步開啟作業相關聯的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="57390-217">An object, specified by the application, that contains state information associated with the asynchronous open operation.</span></span></param>
        <summary><span data-ttu-id="57390-218">開始進行開啟發送器之通道接聽程式的非同步作業，此作業必須在指定的時間間隔內完成。</span><span class="sxs-lookup"><span data-stu-id="57390-218">Begins an asynchronous operation to open a channel listener for the dispatcher that must be completed within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="57390-219"><see cref="T:System.IAsyncResult" />，它會參考要開啟發送器之通道接聽程式的非同步作業。</span><span class="sxs-lookup"><span data-stu-id="57390-219">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to open a channel listener for the dispatcher.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-220">呼叫這個方法時，通道發送器必須與非 `null` 的服務主機產生關聯。</span><span class="sxs-lookup"><span data-stu-id="57390-220">The channel dispatcher must be associated with a non-`null` service host when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57390-221">主機或訊息版本為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="57390-221">The host or the message version is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnClose">
      <MemberSignature Language="C#" Value="protected override void OnClose (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClose(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClose (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClose(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.OnClose : TimeSpan -&gt; unit" Usage="channelDispatcher.OnClose timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="57390-222"><see cref="T:System.TimeSpan" />，其中指定允許關閉接聽程式的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="57390-222">The <see cref="T:System.TimeSpan" /> that specifies the interval of time allowed for the listener to close.</span></span></param>
        <summary><span data-ttu-id="57390-223">在指定的時間間隔內關閉與發送器相關聯的通道接聽程式。</span><span class="sxs-lookup"><span data-stu-id="57390-223">Closes the channel listener associated with the dispatcher within a specified interval of time.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed();" />
      <MemberSignature Language="F#" Value="override this.OnClosed : unit -&gt; unit" Usage="channelDispatcher.OnClosed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57390-224">提供追蹤與通道發送器相關聯之端點發送器關閉作業的功能。</span><span class="sxs-lookup"><span data-stu-id="57390-224">Provides a trace of the closing of the endpoint dispatchers associated with the channel dispatcher.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndClose">
      <MemberSignature Language="C#" Value="protected override void OnEndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndClose(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndClose : IAsyncResult -&gt; unit" Usage="channelDispatcher.OnEndClose result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="57390-225">由 <see cref="T:System.IAsyncResult" /> 方法的呼叫所傳回的 <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="57390-225">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="57390-226">完成要關閉發送器之通道接聽程式的非同步作業。</span><span class="sxs-lookup"><span data-stu-id="57390-226">Completes an asynchronous operation to close a channel listener for the dispatcher.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndOpen">
      <MemberSignature Language="C#" Value="protected override void OnEndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndOpen(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndOpen : IAsyncResult -&gt; unit" Usage="channelDispatcher.OnEndOpen result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="57390-227">由 <see cref="T:System.IAsyncResult" /> 方法的呼叫所傳回的 <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="57390-227">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="57390-228">完成要開啟發送器之通道接聽程式的非同步作業。</span><span class="sxs-lookup"><span data-stu-id="57390-228">Completes an asynchronous operation to open a channel listener for the dispatcher.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpen">
      <MemberSignature Language="C#" Value="protected override void OnOpen (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpen(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpen (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpen(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.OnOpen : TimeSpan -&gt; unit" Usage="channelDispatcher.OnOpen timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="57390-229"><see cref="T:System.TimeSpan" />，其中指定允許開啟接聽程式的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="57390-229">The <see cref="T:System.TimeSpan" /> that specifies the interval of time allowed for the listener to open.</span></span></param>
        <summary><span data-ttu-id="57390-230">開啟與通道發送器相關聯的接聽程式。</span><span class="sxs-lookup"><span data-stu-id="57390-230">Opens the listener associated with the channel dispatcher.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-231">呼叫這個方法時，通道發送器必須與非 `null` 的服務主機產生關聯，而且訊息版本必須設定為非 `null` 值。</span><span class="sxs-lookup"><span data-stu-id="57390-231">The channel dispatcher must be associated with a non-`null` service host when this method is called and message version must be set to a non-`null` value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57390-232">主機或訊息版本為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="57390-232">The host or the message version is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected override void OnOpened ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpened() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpened ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpened();" />
      <MemberSignature Language="F#" Value="override this.OnOpened : unit -&gt; unit" Usage="channelDispatcher.OnOpened " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57390-233">填入並驗證用來分派至端點的篩選資料表。</span><span class="sxs-lookup"><span data-stu-id="57390-233">Populates and validates filter table used to dispatch to the endpoints.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-234">呼叫這個方法時，通道發送器必須與非 `null` 的服務主機產生關聯。</span><span class="sxs-lookup"><span data-stu-id="57390-234">The channel dispatcher must be associated with a non-`null` service host when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57390-235">主機為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="57390-235">The host is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnOpening">
      <MemberSignature Language="C#" Value="protected override void OnOpening ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpening() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpening ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpening();" />
      <MemberSignature Language="F#" Value="override this.OnOpening : unit -&gt; unit" Usage="channelDispatcher.OnOpening " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="57390-236">檢查通道發送器是否已附加至主機。</span><span class="sxs-lookup"><span data-stu-id="57390-236">Checks whether the channel dispatcher is attached to a host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-237">開啟時，通道發送器必須與非 `null` 的服務主機產生關聯。</span><span class="sxs-lookup"><span data-stu-id="57390-237">The channel dispatcher must be associated with a non-`null` service host on opening.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57390-238">主機為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="57390-238">The host is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveContextEnabled">
      <MemberSignature Language="C#" Value="public bool ReceiveContextEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveContextEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveContextEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveContextEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveContextEnabled : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-239">取得或設定是否已啟用 ReceiveContext。</span><span class="sxs-lookup"><span data-stu-id="57390-239">Gets or sets whether ReceiveContext is enabled.</span></span></summary>
        <value><span data-ttu-id="57390-240">如果已啟用 ReceiveContext，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="57390-240"><see langword="true" /> if ReceiveContext is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-241">ReceiveContext 會控制服務處理訊息的方式，例如在需要時鎖定訊息。</span><span class="sxs-lookup"><span data-stu-id="57390-241">The ReceiveContext controls the manner in which messages are handled by the service, for example locking of the message as long as needed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveSynchronously">
      <MemberSignature Language="C#" Value="public bool ReceiveSynchronously { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveSynchronously { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveSynchronously : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-242">取得或設定值，這個值會指定發送器是否使用同步呼叫來讀取通道中的訊息。</span><span class="sxs-lookup"><span data-stu-id="57390-242">Gets or sets a value that specifies whether the dispatcher uses synchronous calls to read messages from channels.</span></span></summary>
        <value><span data-ttu-id="57390-243">如果發送器使用同步方法來讀取通道中的訊息，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="57390-243"><see langword="true" /> if the dispatcher uses synchronous methods to read messages from channels; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="57390-244">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="57390-244">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-245">如果繫結實作<xref:System.ServiceModel.Channels.IBindingRuntimePreferences>，Windows Communication Foundation (WCF) 的值指派<xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>給這個屬性的屬性。</span><span class="sxs-lookup"><span data-stu-id="57390-245">If a binding implements <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, Windows Communication Foundation (WCF) assigns the value of the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property to this property.</span></span> <span data-ttu-id="57390-246">因此，如果這個值為 `true`，就會覆寫 `false` 的 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> 預設值。</span><span class="sxs-lookup"><span data-stu-id="57390-246">So if this value is `true`, the `false` default value of <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> is overridden.</span></span>  
  
 <span data-ttu-id="57390-247">只有在 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 的執行個體處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態時才可以設定這個屬性，因為這是唯一同時處於可變動且尚未處置的狀態。</span><span class="sxs-lookup"><span data-stu-id="57390-247">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#14)]
 [!code-vb[S_UE_ChannelDispatcher#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57390-248">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-248">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57390-249">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-249">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="57390-250">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-250">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsynchronously">
      <MemberSignature Language="C#" Value="public bool SendAsynchronously { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SendAsynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously" />
      <MemberSignature Language="VB.NET" Value="Public Property SendAsynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SendAsynchronously { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SendAsynchronously : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-251">取得或設定是否以非同步方式傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="57390-251">Gets or sets whether messages are sent asynchronously.</span></span></summary>
        <value><span data-ttu-id="57390-252">如果是以非同步方式傳送訊息，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="57390-252"><see langword="true" /> if messages are sent asynchronously; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceThrottle">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.ServiceThrottle ServiceThrottle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.ServiceThrottle ServiceThrottle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceThrottle As ServiceThrottle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::ServiceThrottle ^ ServiceThrottle { System::ServiceModel::Dispatcher::ServiceThrottle ^ get(); void set(System::ServiceModel::Dispatcher::ServiceThrottle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceThrottle : System.ServiceModel.Dispatcher.ServiceThrottle with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ServiceThrottle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-253">取得或設定與通道發送器相關聯之服務的服務節流閥。</span><span class="sxs-lookup"><span data-stu-id="57390-253">Gets or sets the service throttle for the service associated with the channel dispatcher.</span></span></summary>
        <value><span data-ttu-id="57390-254"><see cref="T:System.ServiceModel.Dispatcher.ServiceThrottle" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="57390-254">A <see cref="T:System.ServiceModel.Dispatcher.ServiceThrottle" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-255">這可讓您存取用於最佳化服務之可用性及效能的控制項。</span><span class="sxs-lookup"><span data-stu-id="57390-255">This provides access to the controls used to optimize the availability and performance of a service.</span></span>  
  
 <span data-ttu-id="57390-256">只有在 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 的執行個體處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態時才可以設定這個屬性，因為這是唯一同時處於可變動且尚未處置的狀態。</span><span class="sxs-lookup"><span data-stu-id="57390-256">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#15)]
 [!code-vb[S_UE_ChannelDispatcher#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57390-257">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-257">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57390-258">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-258">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="57390-259">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-259">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionIsolationLevel">
      <MemberSignature Language="C#" Value="public System.Transactions.IsolationLevel TransactionIsolationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Transactions.IsolationLevel TransactionIsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionIsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Transactions::IsolationLevel TransactionIsolationLevel { System::Transactions::IsolationLevel get(); void set(System::Transactions::IsolationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionIsolationLevel : System.Transactions.IsolationLevel with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Transactions.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-260">取得或設定異動的預設隔離等級 (Isolation Level)。</span><span class="sxs-lookup"><span data-stu-id="57390-260">Gets or sets the default isolation level for transactions.</span></span></summary>
        <value><span data-ttu-id="57390-261">其中一個 <see cref="T:System.Transactions.IsolationLevel" /> 值。</span><span class="sxs-lookup"><span data-stu-id="57390-261">One of the <see cref="T:System.Transactions.IsolationLevel" /> values.</span></span> <span data-ttu-id="57390-262">預設為 <see cref="F:System.Transactions.IsolationLevel.Unspecified" />。</span><span class="sxs-lookup"><span data-stu-id="57390-262">The default is <see cref="F:System.Transactions.IsolationLevel.Unspecified" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-263">使用 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel%2A> 屬性，即可取得或設定服務的發送器所建立之新交易的預設隔離等級。</span><span class="sxs-lookup"><span data-stu-id="57390-263">Use the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel%2A> property to get or set the default isolation level for new transactions created by the dispatcher for the service.</span></span>  
  
 <span data-ttu-id="57390-264">只有在 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 的執行個體處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態時才可以設定這個屬性，因為這是唯一同時處於可變動且尚未處置的狀態。</span><span class="sxs-lookup"><span data-stu-id="57390-264">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#16)]
 [!code-vb[S_UE_ChannelDispatcher#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57390-265">未定義隔離等級設定。</span><span class="sxs-lookup"><span data-stu-id="57390-265">The isolation level set is not defined.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57390-266">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-266">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57390-267">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-267">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="57390-268">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-268">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan TransactionTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TransactionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TransactionTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionTimeout : TimeSpan with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="57390-269">取得或設定值，這個值會指定發送器代表服務所建立之新異動的預設逾時。</span><span class="sxs-lookup"><span data-stu-id="57390-269">Gets or sets a value that specifies the default timeout for new transactions created by the dispatcher on behalf of the service.</span></span></summary>
        <value><span data-ttu-id="57390-270"><see cref="T:System.TimeSpan" /> 值，表示交易的預設逾時期限。</span><span class="sxs-lookup"><span data-stu-id="57390-270">A <see cref="T:System.TimeSpan" /> value that represents the default timeout period for transactions.</span></span> <span data-ttu-id="57390-271">預設為 <see cref="F:System.TimeSpan.Zero" />。</span><span class="sxs-lookup"><span data-stu-id="57390-271">The default is <see cref="F:System.TimeSpan.Zero" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57390-272">只有在 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 的執行個體處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態時才可以設定這個屬性，因為這是唯一同時處於可變動且尚未處置的狀態。</span><span class="sxs-lookup"><span data-stu-id="57390-272">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#17)]
 [!code-vb[S_UE_ChannelDispatcher#17](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="57390-273">設定的值小於零或太大。</span><span class="sxs-lookup"><span data-stu-id="57390-273">The value set is less than zero or is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="57390-274">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-274">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="57390-275">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-275">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="57390-276">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中。</span><span class="sxs-lookup"><span data-stu-id="57390-276">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>