<Type Name="MessageFilter" FullName="System.ServiceModel.Dispatcher.MessageFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="44fa6f6bb564bb469186db822d7d73979753126e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageFilter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchNoneMessageFilter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.ActionMessageFilter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchAllMessageFilter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.XPathMessageFilter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2a8c6-101">用來查詢訊息之不同篩選條件類別的 <see langword="abstract" /> 基底類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a8c6-101">
          <see langword="abstract" /> base class for different classes of filters used to query messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a8c6-102"><xref:System.ServiceModel.Dispatcher.MessageFilter> 是一個 `abstract` 類別，開發人員會實作這個類別來指定要用於檢查訊息的準則。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-102"><xref:System.ServiceModel.Dispatcher.MessageFilter> is an `abstract` class that developers implement in order to specify the criteria to use for inspecting messages.</span></span> <span data-ttu-id="2a8c6-103">通常端點應用程式會使用篩選條件，根據檢查訊息的部分內容來判定如何處理訊息。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-103">Typically, filters are used by an endpoint application to determine what to do with a message based on an examination of some part of the message.</span></span> <span data-ttu-id="2a8c6-104">例如，佇列處理序可以使用 XPath 1.0 查詢檢查已知標頭的優先順序項目，以便決定是否要將訊息移到佇列前頭。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-104">A queuing process, for example, can use an XPath 1.0 query to check the priority element of a known header to determine whether to move a message to the front of the queue.</span></span>  
  
 <span data-ttu-id="2a8c6-105">篩選條件會儲存在實作 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> 的篩選資料表中。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-105">Filters are stored in a filter table that implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>.</span></span> <span data-ttu-id="2a8c6-106">資料表中的每個篩選條件都會與指定的篩選資料產生關聯，而這些篩選資料可用來指示當訊息與篩選條件相符時所要採取的動作。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-106">Each filter in the table is associated with specified filter data that can be used to indicate what actions to take if a message matches the filter.</span></span> <span data-ttu-id="2a8c6-107"><xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> 方法會用於判斷訊息是否符合篩選條件。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-107">The <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> methods are used to determine if a message satisfies a filter.</span></span>  
  
 <span data-ttu-id="2a8c6-108">因為篩選資料表無法偵測變更，所以篩選條件在建構之後，其所使用的準則就無法變更。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-108">The criteria used by a filter cannot be changed once the filter is constructed because the filter tables have no way to detect a change.</span></span> <span data-ttu-id="2a8c6-109">唯一可以修改篩選條件準則的方式，就是建構新篩選條件並刪除現有的篩選條件。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-109">The only way to modify the criteria of a filter is to construct a new one and delete the existing filter.</span></span>  
  
 <span data-ttu-id="2a8c6-110">下列類別會實作 `abstract`<xref:System.ServiceModel.Dispatcher.MessageFilter> 類別：</span><span class="sxs-lookup"><span data-stu-id="2a8c6-110">The following classes implement the `abstract`<xref:System.ServiceModel.Dispatcher.MessageFilter> class:</span></span>  
  
-   <span data-ttu-id="2a8c6-111"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 會使用 XPath 1.0 運算式來指定比對的準則。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-111"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter> uses an XPath 1.0 expression to specify the criteria for a match.</span></span>  
  
-   <span data-ttu-id="2a8c6-112"><xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> 會比對所有訊息。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-112"><xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> matches all messages.</span></span>  
  
-   <span data-ttu-id="2a8c6-113"><xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> 不會比對任何一個訊息。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-113"><xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> matches none of the messages.</span></span>  
  
-   <span data-ttu-id="2a8c6-114"><xref:System.ServiceModel.Dispatcher.ActionMessageFilter> 會測試訊息的動作是否為指定動作集中的動作。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-114"><xref:System.ServiceModel.Dispatcher.ActionMessageFilter> tests whether the action of a message is one of a specified set of actions.</span></span>  
  
-   <span data-ttu-id="2a8c6-115"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> 會測試訊息是否符合指定的端點位址。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-115"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> tests whether a message satisfies a specified endpoint address.</span></span>  
  
 <span data-ttu-id="2a8c6-116"><xref:System.ServiceModel.Channels.ChannelListenerBase%601> 是可以用來撰寫非佇列接聽程式 (Listener) 的 `abstract` 基底類別。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-116"><xref:System.ServiceModel.Channels.ChannelListenerBase%601> is an `abstract` base class that you can use for writing non-queuing listeners.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a8c6-117">在衍生類別中呼叫時，初始化 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a8c6-117">When called in a derived class, initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a8c6-118">建構函式已受保護 (Protected)，因此只有衍生自 <xref:System.ServiceModel.Dispatcher.MessageFilter> 的篩選條件可以具現化 (Instantiated)。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-118">The constructor is protected so that only filters that derive from <xref:System.ServiceModel.Dispatcher.MessageFilter> can be instantiated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; virtual System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData">
          <span data-ttu-id="2a8c6-119">與資料表中篩選條件相關聯的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a8c6-119">Data associated with the filters in the table.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="2a8c6-120">建立篩選條件的篩選資料表，這個篩選條件具有與其相關聯的指定資料型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a8c6-120">Creates a filter table for a filter that has a specified type of data associated with it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a8c6-121">
            <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> 物件，可在其中加入與 <paramref name="FilterData" /> 相關聯的篩選條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a8c6-121">An <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> object to which filters associated with <paramref name="FilterData" /> can be added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a8c6-122">這個方法可由 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> 呼叫。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-122">This method is intended to be called by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span> <span data-ttu-id="2a8c6-123">使用者應該透過呼叫篩選資料表的建構函式來建立篩選資料表。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-123">Users should create a filter table by calling a constructor for the filter table.</span></span> <span data-ttu-id="2a8c6-124">這個方法的預設實作會傳回篩選資料表，而這個篩選資料表會循序呼叫每個篩選條件的 <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-124">The default implementation of this method returns a filter table that calls the <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> method of each filter sequentially.</span></span> <span data-ttu-id="2a8c6-125">在實作篩選條件時，覆寫這個方法來與自訂篩選資料表產生關聯。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-125">Override this method to associate a custom filter table when implementing a filter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2a8c6-126">在衍生類別中覆寫時，測試訊息或緩衝訊息是否符合篩選條件的準則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a8c6-126">When overridden in a derived class, tests whether a message or a buffered message satisfies the criteria of a filter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a8c6-127">兩個多載之間的差異，在於一個多載會接受 <xref:System.ServiceModel.Channels.Message> 參數，但不可以檢查本文；</span><span class="sxs-lookup"><span data-stu-id="2a8c6-127">The difference between the two overloads is that one takes a <xref:System.ServiceModel.Channels.Message> parameter and is not permitted to examine the body.</span></span> <span data-ttu-id="2a8c6-128">另一個多載則接受 <xref:System.ServiceModel.Channels.MessageBuffer> 參數，而且可以檢查訊息的任何部分。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-128">The other takes a <xref:System.ServiceModel.Channels.MessageBuffer> parameter and can examine any part of the message.</span></span> <span data-ttu-id="2a8c6-129">訊息標頭會自動獲得緩衝，並且可以由篩選條件進行檢查，而不被取用。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-129">Message headers are automatically buffered and can be inspected by a filter without being consumed.</span></span> <span data-ttu-id="2a8c6-130">但若本文要由篩選條件檢查，整份訊息就必須加以緩衝，因為未緩衝的訊息本文可被查詢取用，因而導致其內容被終結。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-130">But if the body is to be inspected by a filter, then the entire message must be buffered because an unbuffered message body can be consumed by a query and its contents destroyed.</span></span>  
  
 <span data-ttu-id="2a8c6-131">如果不需要檢查本文，便可使用 <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A>。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-131">Use <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> if examination of the body is not required.</span></span> <span data-ttu-id="2a8c6-132">如果需要檢查訊息本文，便可使用 <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A>。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-132">Use <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> if examination of the message body is required.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="2a8c6-133">
              <see langword="Null" /> 訊息是無效的，因此這時應該會造成 <see cref="T:System.ArgumentNullException" /> 擲回。</span>
            <span class="sxs-lookup">
              <span data-stu-id="2a8c6-133">
                <see langword="Null" /> messages are invalid, and should cause an <see cref="T:System.ArgumentNullException" /> to be thrown.</span>
            </span>
          </para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="2a8c6-134">要測試的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a8c6-134">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a8c6-135">在衍生類別中覆寫時，測試訊息是否符合篩選條件的準則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a8c6-135">When overridden in a derived class, tests whether a message satisfies the filter criteria.</span>
          </span>
          <span data-ttu-id="2a8c6-136">本文無法進行檢查。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a8c6-136">The body cannot be examined.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a8c6-137">如果 <see langword="true" /> 物件符合篩選條件的準則，則為 <see cref="T:System.ServiceModel.Channels.Message" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a8c6-137">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the filter criteria; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a8c6-138">這個方法無法檢查訊息本文的內容。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-138">This method cannot inspect the contents of the message body.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="2a8c6-139">如果篩選條件嘗試檢查未緩衝訊息的本文，篩選條件一定會擲回 <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />，</span>
            <span class="sxs-lookup">
              <span data-stu-id="2a8c6-139">If the filter attempts to examine the body of an unbuffered message, then the filter must throw an <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />.</span>
            </span>
            <span data-ttu-id="2a8c6-140">而不應該傳回 <see langword="false" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="2a8c6-140">It should not return <see langword="false" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Match (buffer As MessageBuffer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="2a8c6-141">要測試的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a8c6-141">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a8c6-142">在衍生類別中覆寫時，測試緩衝訊息是否符合篩選條件的準則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a8c6-142">When overridden in a derived class, tests whether a buffered message satisfies the criteria of a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a8c6-143">如果 <see langword="true" /> 物件符合篩選條件的準則，則為 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a8c6-143">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the filter criteria; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a8c6-144">如果本文要由篩選條件檢查，就必須緩衝處理整份訊息。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-144">The message must be fully buffered if the body is to be inspected by the filter.</span></span> <span data-ttu-id="2a8c6-145"><xref:System.ServiceModel.Channels.MessageBuffer> 的本文會獲得完整的緩衝，因此可以由篩選條件檢查。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-145">The body of the <xref:System.ServiceModel.Channels.MessageBuffer> is fully buffered and therefore can be inspected by a filter.</span></span> <span data-ttu-id="2a8c6-146">尚未完整緩衝的 <xref:System.ServiceModel.Channels.Message> 本文，可能會由篩選檢查取用。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-146">The body of a <xref:System.ServiceModel.Channels.Message> that has not been fully buffered may be consumed by the filter inspection.</span></span> <span data-ttu-id="2a8c6-147"><xref:System.ServiceModel.Channels.Message> 的標頭項目會自動獲得緩衝，因此可以由篩選條件進行檢查，而不被取用。</span><span class="sxs-lookup"><span data-stu-id="2a8c6-147">The header element of a <xref:System.ServiceModel.Channels.Message> is automatically buffered and therefore can be inspected without being consumed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>