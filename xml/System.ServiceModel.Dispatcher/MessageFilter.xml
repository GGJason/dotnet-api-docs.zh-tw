<Type Name="MessageFilter" FullName="System.ServiceModel.Dispatcher.MessageFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="89562be342087ef3e8abf6bf27ffdb95d6201cc6" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48761815" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageFilter abstract" />
  <TypeSignature Language="F#" Value="type MessageFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchNoneMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.ActionMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchAllMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.XPathMessageFilter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>用來查詢訊息之不同篩選條件類別的 <see langword="abstract" /> 基底類別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.MessageFilter> 是一個 `abstract` 類別，開發人員會實作這個類別來指定要用於檢查訊息的準則。 通常端點應用程式會使用篩選條件，根據檢查訊息的部分內容來判定如何處理訊息。 例如，佇列處理序可以使用 XPath 1.0 查詢檢查已知標頭的優先順序項目，以便決定是否要將訊息移到佇列前頭。  
  
 篩選條件會儲存在實作 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> 的篩選資料表中。 資料表中的每個篩選條件都會與指定的篩選資料產生關聯，而這些篩選資料可用來指示當訊息與篩選條件相符時所要採取的動作。 <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> 方法會用於判斷訊息是否符合篩選條件。  
  
 因為篩選資料表無法偵測變更，所以篩選條件在建構之後，其所使用的準則就無法變更。 唯一可以修改篩選條件準則的方式，就是建構新篩選條件並刪除現有的篩選條件。  
  
 下列類別會實作 `abstract`<xref:System.ServiceModel.Dispatcher.MessageFilter> 類別：  
  
-   <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 會使用 XPath 1.0 運算式來指定比對的準則。  
  
-   <xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> 會比對所有訊息。  
  
-   <xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> 不會比對任何一個訊息。  
  
-   <xref:System.ServiceModel.Dispatcher.ActionMessageFilter> 會測試訊息的動作是否為指定動作集中的動作。  
  
-   <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> 會測試訊息是否符合指定的端點位址。  
  
 <xref:System.ServiceModel.Channels.ChannelListenerBase%601> 是可以用來撰寫非佇列接聽程式 (Listener) 的 `abstract` 基底類別。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>在衍生類別中呼叫時，初始化 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 建構函式已受保護 (Protected)，因此只有衍生自 <xref:System.ServiceModel.Dispatcher.MessageFilter> 的篩選條件可以具現化 (Instantiated)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; virtual System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;&#xA;override this.CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;" Usage="messageFilter.CreateFilterTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData">與資料表中篩選條件相關聯的資料。</typeparam>
        <summary>建立篩選條件的篩選資料表，這個篩選條件具有與其相關聯的指定資料型別。</summary>
        <returns>
          <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> 物件，可在其中加入與 <paramref name="FilterData" /> 相關聯的篩選條件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可由 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> 呼叫。 使用者應該透過呼叫篩選資料表的建構函式來建立篩選資料表。 這個方法的預設實作會傳回篩選資料表，而這個篩選資料表會循序呼叫每個篩選條件的 <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> 方法。 在實作篩選條件時，覆寫這個方法來與自訂篩選資料表產生關聯。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在衍生類別中覆寫時，測試訊息或緩衝訊息是否符合篩選條件的準則。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 兩個多載之間的差異，在於一個多載會接受 <xref:System.ServiceModel.Channels.Message> 參數，但不可以檢查本文； 另一個多載則接受 <xref:System.ServiceModel.Channels.MessageBuffer> 參數，而且可以檢查訊息的任何部分。 訊息標頭會自動獲得緩衝，並且可以由篩選條件進行檢查，而不被取用。 但若本文要由篩選條件檢查，整份訊息就必須加以緩衝，因為未緩衝的訊息本文可被查詢取用，因而導致其內容被終結。  
  
 如果不需要檢查本文，便可使用 <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A>。 如果需要檢查訊息本文，便可使用 <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A>。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Null" /> 訊息是無效的，因此這時應該會造成 <see cref="T:System.ArgumentNullException" /> 擲回。</para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.ServiceModel.Channels.Message -&gt; bool" Usage="messageFilter.Match message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">要測試的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</param>
        <summary>在衍生類別中覆寫時，測試訊息是否符合篩選條件的準則。 本文無法進行檢查。</summary>
        <returns>如果 <see langword="true" /> 物件符合篩選條件的準則，則為 <see cref="T:System.ServiceModel.Channels.Message" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法無法檢查訊息本文的內容。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>如果篩選條件嘗試檢查未緩衝訊息的本文，篩選條件一定會擲回 <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />， 而不應該傳回 <see langword="false" />。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Match (buffer As MessageBuffer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.ServiceModel.Channels.MessageBuffer -&gt; bool" Usage="messageFilter.Match buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer">要測試的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 物件。</param>
        <summary>在衍生類別中覆寫時，測試緩衝訊息是否符合篩選條件的準則。</summary>
        <returns>如果 <see langword="true" /> 物件符合篩選條件的準則，則為 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果本文要由篩選條件檢查，就必須緩衝處理整份訊息。 <xref:System.ServiceModel.Channels.MessageBuffer> 的本文會獲得完整的緩衝，因此可以由篩選條件檢查。 尚未完整緩衝的 <xref:System.ServiceModel.Channels.Message> 本文，可能會由篩選檢查取用。 <xref:System.ServiceModel.Channels.Message> 的標頭項目會自動獲得緩衝，因此可以由篩選條件進行檢查，而不被取用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>