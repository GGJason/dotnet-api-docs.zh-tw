<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="JsonQueryStringConverter.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52dfd6fa362e4123db7eb2d6f47bcb1e0bc29ad98.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2dfd6fa362e4123db7eb2d6f47bcb1e0bc29ad98</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>This class converts a parameter value to and from a JavaScript Object Notation (JSON).</source>
          <target state="translated">這個類別會將參數值與 JavaScript 物件標記法 (JSON) 相互轉換。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>Parameters can be specified in a JSON query string within a URL.</source>
          <target state="translated">參數可以在 URL 內的 JSON 查詢字串中指定。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>This class controls how JSON query string parameters are mapped to and from a service operation's parameters when the <ph id="ph1">&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</ph> is used to process HTTP requests from browser-based ASP.NET AJAX clients.</source>
          <target state="translated">這個類別會控制當 <ph id="ph1">&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</ph> 用來處理來自瀏覽器型 ASP.NET AJAX 用戶端的 HTTP 要求時，JSON 查詢字串參數和服務作業的參數之間的對應。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>This class is used internally by the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph><ph id="ph2">&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</ph> class for endpoints configured to accept HTTP GET/POST requests with parameters encoded in the URI query string.</source>
          <target state="translated">這個類別是由端點上的 <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph><ph id="ph2">&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</ph> 類別在內部使用，而這些端點已設定為接受具有參數編碼在 URI 查詢字串中的 HTTP GET/POST 要求。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>This class is used to convert between CLR objects and the individual operation request parameter values in the URI query string.</source>
          <target state="translated">這個類別可用來在 CLR 物件和 URI 查詢字串中個別作業要求參數值之間進行轉換。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>Unlike its base type, this class supports values of both primitive and complex types.</source>
          <target state="translated">這個類別與它的基底型別不同，會支援原始型別和複雜型別的值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter&gt;</ph> derives from <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter&gt;</ph> and supports the following types:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter&gt;</ph> 衍生自 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter&gt;</ph> 並支援下列型別：</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>An <ph id="ph1">&lt;xref:System.Array&gt;</ph> of type <ph id="ph2">&lt;xref:System.Byte&gt;</ph></source>
          <target state="translated">型別為 <ph id="ph1">&lt;xref:System.Array&gt;</ph> 的 <ph id="ph2">&lt;xref:System.Byte&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>Unlike its base type, this converter can handle any type adhering to the Data Contract model.</source>
          <target state="translated">和它的基底型別不同的是，這個轉換器可以遵照資料合約模型處理任何型別。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>The converter overrides <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt;</ph> so that each parameter is serialized to JSON using the default <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> and a JSON XML Writer configured to use the UTF-8 encoding.</source>
          <target state="translated">轉換器會覆寫 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt;</ph>，以便使用預設的 <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> 和設定為使用 UTF-8 編碼的 JSON XML 寫入器，將每個參數序列化為 JSON。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source><ph id="ph1">`null`</ph> parameters are returned as <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph> 參數會以傳回<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to verify.</source>
          <target state="translated">要驗證的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
          <source>Gets a value that indicates whether a Common Language Runtime (CLR) type specified is a known type that can be serialized and deserialized.</source>
          <target state="translated">取得值，這個值表示指定的 Common Language Runtime (CLR) 型別是否為可以序列化和還原序列化的已知型別。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the type can be serialized; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果型別可以進行序列化，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
          <source>This checks whether a CLR type can be used in a JSON query string.</source>
          <target state="translated">這會檢查 CLR 型別是否可以用在 JSON 查詢字串中。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
          <source>The CLR types that can be used in such a string are just those that are supported by <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.</source>
          <target state="translated">可在這類字串中使用的 CLR 型別正是 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 所支援的型別。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)">
          <source>The JSON form of the parameter value.</source>
          <target state="translated">參數值的 JSON 形式。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to deserialize the parameter to.</source>
          <target state="translated">要還原序列化參數為的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)">
          <source>Deserializes a JavaScript Object Notation (JSON) query string parameter to a specified Common Language Runtime (CLR) type.</source>
          <target state="translated">將 JavaScript 物件標記法 (JSON) 查詢字串參數還原序列化為指定的 Common Language Runtime (CLR) 型別。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)">
          <source>An instance of the CLR type to which the parameter value was converted.</source>
          <target state="translated">參數值轉換為的 CLR 型別的執行個體。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>The parameter value to convert.</source>
          <target state="translated">要轉換的參數值。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the parameter to serialize.</source>
          <target state="translated">要序列化之參數的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>Serializes a Common Language Runtime (CLR) parameter type to a JavaScript Object Notation (JSON) representation.</source>
          <target state="translated">將 Common Language Runtime (JSON) 參數型別序列化為 JavaScript 物件標記法 (CLR) 表示。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>The JSON query string parameter serialization of the CLR type.</source>
          <target state="translated">CLR 型別的 JSON 查詢字串參數序列化。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> is returned if the parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果參數為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會傳回 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>The converter overrides <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt;</ph> so that each parameter is serialized to JSON using the default <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> and a JSON XML Writer configured to use the UTF-8 encoding.</source>
          <target state="translated">轉換器會覆寫 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt;</ph>，以便使用預設的 <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> 和設定為使用 UTF-8 編碼的 JSON XML 寫入器，將每個參數序列化為 JSON。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>Unlike its base type, this converter can handle any type adhering to the Data Contract model.</source>
          <target state="translated">和它的基底型別不同的是，這個轉換器可以遵照資料合約模型處理任何型別。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>Consider the following operation.</source>
          <target state="translated">請參考下列作業。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>This operation produces a URL that is a URL-encoded version of the following.</source>
          <target state="translated">這個作業會產生下列 URL 編碼版本的 URL。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>