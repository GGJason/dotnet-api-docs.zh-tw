<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ICallContextInitializer.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cdbaea1b71eb2e65e216dc66aff628d9c5d94143.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cdbaea1b71eb2e65e216dc66aff628d9c5d94143</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.ICallContextInitializer">
          <source>Defines the methods that enable the initialization and recycling of thread-local storage with the thread that invokes user code.</source>
          <target state="translated">定義方法，這些方法會透過叫用使用者程式碼的執行緒，啟用執行緒區域儲存區 (Thread Local Storage) 的初始化和回收處理。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ICallContextInitializer">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ICallContextInitializer&gt;</ph> interface and add it to the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers%2A?displayProperty=nameWithType&gt;</ph> property to initialize and clean up thread-local storage for the thread that invokes user code.</source>
          <target state="translated">實作 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ICallContextInitializer&gt;</ph> 介面並將它加入至 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers%2A?displayProperty=nameWithType&gt;</ph> 屬性，以便初始化和清除負責叫用使用者程式碼之執行緒的執行緒區域儲存區。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ICallContextInitializer">
          <source>Typical usage is to set some value, such as impersonation or changing the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">通常是用來設定某個值，例如模擬或變更 <ph id="ph1">&lt;xref:System.Globalization.CultureInfo?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ICallContextInitializer">
          <source>If you wanted to establish some custom context, this is the extension point to initialize the static context property, which is then available for developers in the course of the operation.</source>
          <target state="translated">如果您想要建立某種自訂內容，這就是可以初始化靜態內容屬性的擴充點，這樣開發人員就可以在作業過程中使用這個內容屬性。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)">
          <source>The correlation object returned from the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)" /&gt;</ph> method.</source>
          <target state="translated">從 <ph id="ph1">&lt;see cref="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)" /&gt;</ph> 方法傳回的相互關聯物件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)">
          <source>Implement to participate in cleaning up the thread that invoked the operation.</source>
          <target state="translated">實作以參與清除叫用此作業的執行緒。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)">
          <source>Use this method to perform any necessary cleaning up of the operation thread.</source>
          <target state="translated">使用這個方法來執行作業執行緒的任何必要清除。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
          <source>The service instance for the operation.</source>
          <target state="translated">作業的服務執行個體。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
          <source>The client channel.</source>
          <target state="translated">用戶端通道。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
          <source>The incoming message.</source>
          <target state="translated">傳入訊息。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
          <source>Implement to participate in the initialization of the operation thread.</source>
          <target state="translated">實作以參與作業執行緒的初始化。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
          <source>A correlation object passed back as the parameter of the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">相互關聯物件，這個物件會當做 <ph id="ph1">&lt;see cref="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)" /&gt;</ph> 方法的參數傳回。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke%2A&gt;</ph> method to initialize and clean up thread-local storage for the thread that invokes user code.</source>
          <target state="translated">實作 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke%2A&gt;</ph> 方法，以便初始化和清除負責叫用使用者程式碼之執行緒的執行緒區域儲存區。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
          <source>Typical usage is to set some value, such as impersonation or changing the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">通常是用來設定某個值，例如模擬或變更 <ph id="ph1">&lt;xref:System.Globalization.CultureInfo?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
          <source>If you wanted to establish some custom context, this is the extension point to initialize the static context property, which is then available for developers in the course of the operation.</source>
          <target state="translated">如果您想要建立某種自訂內容，這就是可以初始化靜態內容屬性的擴充點，這樣開發人員就可以在作業過程中使用這個內容屬性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>