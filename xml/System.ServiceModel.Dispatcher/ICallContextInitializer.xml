<Type Name="ICallContextInitializer" FullName="System.ServiceModel.Dispatcher.ICallContextInitializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d10a711c069c0009dc65e5dc569f8a8807751e3b" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37616290" /></Metadata><TypeSignature Language="C#" Value="public interface ICallContextInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallContextInitializer" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ICallContextInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallContextInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallContextInitializer" />
  <TypeSignature Language="F#" Value="type ICallContextInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定義方法，這些方法會透過叫用使用者程式碼的執行緒，啟用執行緒區域儲存區 (Thread Local Storage) 的初始化和回收處理。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 實作 <xref:System.ServiceModel.Dispatcher.ICallContextInitializer> 介面並將它加入至 <xref:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers%2A?displayProperty=nameWithType> 屬性，以便初始化和清除負責叫用使用者程式碼之執行緒的執行緒區域儲存區。 通常是用來設定某個值，例如模擬或變更 <xref:System.Globalization.CultureInfo?displayProperty=nameWithType>。 如果您想要建立某種自訂內容，這就是可以初始化靜態內容屬性的擴充點，這樣開發人員就可以在作業過程中使用這個內容屬性。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AfterInvoke">
      <MemberSignature Language="C#" Value="public void AfterInvoke (object correlationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AfterInvoke(object correlationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AfterInvoke (correlationState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AfterInvoke(System::Object ^ correlationState);" />
      <MemberSignature Language="F#" Value="abstract member AfterInvoke : obj -&gt; unit" Usage="iCallContextInitializer.AfterInvoke correlationState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="correlationState">從 <see cref="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)" /> 方法傳回的相互關聯物件。</param>
        <summary>實作以參與清除叫用此作業的執行緒。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個方法來執行作業執行緒的任何必要清除。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeInvoke">
      <MemberSignature Language="C#" Value="public object BeforeInvoke (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.IClientChannel channel, System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BeforeInvoke(class System.ServiceModel.InstanceContext instanceContext, class System.ServiceModel.IClientChannel channel, class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ BeforeInvoke(System::ServiceModel::InstanceContext ^ instanceContext, System::ServiceModel::IClientChannel ^ channel, System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member BeforeInvoke : System.ServiceModel.InstanceContext * System.ServiceModel.IClientChannel * System.ServiceModel.Channels.Message -&gt; obj" Usage="iCallContextInitializer.BeforeInvoke (instanceContext, channel, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="channel" Type="System.ServiceModel.IClientChannel" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="instanceContext">作業的服務執行個體。</param>
        <param name="channel">用戶端通道。</param>
        <param name="message">傳入訊息。</param>
        <summary>實作以參與作業執行緒的初始化。</summary>
        <returns>相互關聯物件，這個物件會當做 <see cref="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)" /> 方法的參數傳回。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 實作 <xref:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke%2A> 方法，以便初始化和清除負責叫用使用者程式碼之執行緒的執行緒區域儲存區。 通常是用來設定某個值，例如模擬或變更 <xref:System.Globalization.CultureInfo?displayProperty=nameWithType>。 如果您想要建立某種自訂內容，這就是可以初始化靜態內容屬性的擴充點，這樣開發人員就可以在作業過程中使用這個內容屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>