<Type Name="LdapConnection" FullName="System.DirectoryServices.Protocols.LdapConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b9ddd3f6cc51eb84518b40375abc802b3012d629" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46679403" /></Metadata><TypeSignature Language="C#" Value="public class LdapConnection : System.DirectoryServices.Protocols.DirectoryConnection, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi LdapConnection extends System.DirectoryServices.Protocols.DirectoryConnection implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.LdapConnection" />
  <TypeSignature Language="VB.NET" Value="Public Class LdapConnection&#xA;Inherits DirectoryConnection&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class LdapConnection : System::DirectoryServices::Protocols::DirectoryConnection, IDisposable" />
  <TypeSignature Language="F#" Value="type LdapConnection = class&#xA;    inherit DirectoryConnection&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.Protocols.DirectoryConnection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 類別會建立對 Microsoft Active Directory 網域服務或 LDAP 伺服器的 TCP/IP 或 UDP LDAP 連接。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A>上的屬性<xref:System.DirectoryServices.Protocols.LdapConnection>物件並<xref:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate%2A>上的屬性<xref:System.DirectoryServices.Protocols.LdapSessionOptions>物件會同時設定，在指定的憑證<xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A>屬性會被忽略。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">如果無法建立連接區塊，或無法開啟到伺服器的連接，便會擲回。</exception>
        <summary>建立 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 類別的執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LdapConnection (System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identifier As LdapDirectoryIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LdapConnection(System::DirectoryServices::Protocols::LdapDirectoryIdentifier ^ identifier);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.LdapConnection : System.DirectoryServices.Protocols.LdapDirectoryIdentifier -&gt; System.DirectoryServices.Protocols.LdapConnection" Usage="new System.DirectoryServices.Protocols.LdapConnection identifier" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.DirectoryServices.Protocols.LdapDirectoryIdentifier" />
      </Parameters>
      <Docs>
        <param name="identifier"><see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> 物件，指定伺服器。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier)" /> 建構函式使用指定的目錄識別項，建立 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 類別的執行個體。 登入認證和交涉驗證 (Negotiate Authentication) 用於對 LDAP 伺服器的連接。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">如果無法建立連接區塊，或無法開啟到伺服器的連接，便會擲回。</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">要求值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LdapConnection (string server);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string server) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (server As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LdapConnection(System::String ^ server);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.LdapConnection : string -&gt; System.DirectoryServices.Protocols.LdapConnection" Usage="new System.DirectoryServices.Protocols.LdapConnection server" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="server">指定伺服器的字串，可以是網域名稱、LDAP 伺服器名稱，或包含點的字串，表示 LDAP 伺服器的 IP 位址。 或者，這個參數也可以包含通訊埠編號，並以冒號 (:) 與字串右邊分隔開。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.String)" /> 建構函式會使用指定的伺服器，建立 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 類別的執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">如果無法建立連接區塊，或無法開啟到伺服器的連接，便會擲回。</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">要求值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LdapConnection (System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier, System.Net.NetworkCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier, class System.Net.NetworkCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identifier As LdapDirectoryIdentifier, credential As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LdapConnection(System::DirectoryServices::Protocols::LdapDirectoryIdentifier ^ identifier, System::Net::NetworkCredential ^ credential);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.LdapConnection : System.DirectoryServices.Protocols.LdapDirectoryIdentifier * System.Net.NetworkCredential -&gt; System.DirectoryServices.Protocols.LdapConnection" Usage="new System.DirectoryServices.Protocols.LdapConnection (identifier, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.DirectoryServices.Protocols.LdapDirectoryIdentifier" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="identifier"><see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> 物件，指定伺服器。</param>
        <param name="credential"><see cref="T:System.Net.NetworkCredential" /> 物件，指定要使用的認證。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential)" /> 建構函式使用指定的目錄識別項和網路認證，建立 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 類別的執行個體。 使用交涉驗證。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">如果無法建立連接區塊，或無法開啟到伺服器的連接，便會擲回。</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">要求值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LdapConnection (System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier, System.Net.NetworkCredential credential, System.DirectoryServices.Protocols.AuthType authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier, class System.Net.NetworkCredential credential, valuetype System.DirectoryServices.Protocols.AuthType authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LdapConnection(System::DirectoryServices::Protocols::LdapDirectoryIdentifier ^ identifier, System::Net::NetworkCredential ^ credential, System::DirectoryServices::Protocols::AuthType authType);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.LdapConnection : System.DirectoryServices.Protocols.LdapDirectoryIdentifier * System.Net.NetworkCredential * System.DirectoryServices.Protocols.AuthType -&gt; System.DirectoryServices.Protocols.LdapConnection" Usage="new System.DirectoryServices.Protocols.LdapConnection (identifier, credential, authType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.DirectoryServices.Protocols.LdapDirectoryIdentifier" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authType" Type="System.DirectoryServices.Protocols.AuthType" />
      </Parameters>
      <Docs>
        <param name="identifier"><see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> 物件，指定伺服器。</param>
        <param name="credential"><see cref="T:System.Net.NetworkCredential" /> 物件，指定要使用的認證。</param>
        <param name="authType"><see cref="T:System.DirectoryServices.Protocols.AuthType" /> 值，指定要使用的驗證類型。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)" /> 建構函式使用指定的目錄識別項、網路認證和驗證類型，建立 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 類別的執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">如果無法建立連接區塊，或無法開啟到伺服器的連接，便會擲回。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">當 <paramref name="authType" /> 超出範圍時擲回。</exception>
        <exception cref="T:System.ArgumentException">當 <paramref name="authType" /> 指定為非同步但 <paramref name="credential" /> 已指定認證時擲回。</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">要求值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.Abort(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.Abort : IAsyncResult -&gt; unit" Usage="ldapConnection.Abort asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> 物件，參考非同步要求。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.Abort(System.IAsyncResult)" /> 方法會取消非同步要求。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">物件控制代碼無效。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> 是 null (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> 未經由對 <see cref="Overload:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest" /> 的對應呼叫傳回</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission"><see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthType">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.AuthType AuthType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.Protocols.AuthType AuthType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.LdapConnection.AuthType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthType As AuthType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::Protocols::AuthType AuthType { System::DirectoryServices::Protocols::AuthType get(); void set(System::DirectoryServices::Protocols::AuthType value); };" />
      <MemberSignature Language="F#" Value="member this.AuthType : System.DirectoryServices.Protocols.AuthType with get, set" Usage="System.DirectoryServices.Protocols.LdapConnection.AuthType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.AuthType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.LdapConnection.AuthType" /> 屬性包含受支援的驗證類型。</summary>
        <value>受支援的驗證類型。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">當 <paramref name="authType" /> 超出範圍時擲回。</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoBind">
      <MemberSignature Language="C#" Value="public bool AutoBind { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoBind" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.LdapConnection.AutoBind" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoBind As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoBind { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoBind : bool with get, set" Usage="System.DirectoryServices.Protocols.LdapConnection.AutoBind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.LdapConnection.AutoBind" /> 屬性指定是否允許自動繫結。</summary>
        <value>如果允許自動繫結，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSendRequest">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將資料非同步地傳送至伺服器。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSendRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendRequest (System.DirectoryServices.Protocols.DirectoryRequest request, System.DirectoryServices.Protocols.PartialResultProcessing partialMode, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendRequest(class System.DirectoryServices.Protocols.DirectoryRequest request, valuetype System.DirectoryServices.Protocols.PartialResultProcessing partialMode, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendRequest (request As DirectoryRequest, partialMode As PartialResultProcessing, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendRequest(System::DirectoryServices::Protocols::DirectoryRequest ^ request, System::DirectoryServices::Protocols::PartialResultProcessing partialMode, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendRequest : System.DirectoryServices.Protocols.DirectoryRequest * System.DirectoryServices.Protocols.PartialResultProcessing * AsyncCallback * obj -&gt; IAsyncResult" Usage="ldapConnection.BeginSendRequest (request, partialMode, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
        <Parameter Name="partialMode" Type="System.DirectoryServices.Protocols.PartialResultProcessing" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request"><see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 物件。</param>
        <param name="partialMode">來自 <see cref="T:System.DirectoryServices.Protocols.PartialResultProcessing" /> 列舉型別的值，指定要傳回之部分結果的層級。</param>
        <param name="callback"><see cref="T:System.AsyncCallback" /> 函式。</param>
        <param name="state"><see cref="T:System.Object" />，包含這個要求的狀態資料。</param>
        <summary>將資料非同步地傳送至伺服器。</summary>
        <returns><see cref="T:System.IAsyncResult" /> 物件，參考非同步傳送。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">物件控制代碼無效。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> 為 <see langword="null" /> (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
        <exception cref="T:System.NotSupportedException">不支援部分結果。</exception>
        <exception cref="T:System.ArgumentException">如果 <paramref name="partialMode" /> 等於 <see cref="F:System.DirectoryServices.Protocols.PartialResultProcessing.ReturnPartialResultsAndNotifyCallback" />，則必須指定回呼函式。</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission"><see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginSendRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendRequest (System.DirectoryServices.Protocols.DirectoryRequest request, TimeSpan requestTimeout, System.DirectoryServices.Protocols.PartialResultProcessing partialMode, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendRequest(class System.DirectoryServices.Protocols.DirectoryRequest request, valuetype System.TimeSpan requestTimeout, valuetype System.DirectoryServices.Protocols.PartialResultProcessing partialMode, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendRequest (request As DirectoryRequest, requestTimeout As TimeSpan, partialMode As PartialResultProcessing, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendRequest(System::DirectoryServices::Protocols::DirectoryRequest ^ request, TimeSpan requestTimeout, System::DirectoryServices::Protocols::PartialResultProcessing partialMode, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendRequest : System.DirectoryServices.Protocols.DirectoryRequest * TimeSpan * System.DirectoryServices.Protocols.PartialResultProcessing * AsyncCallback * obj -&gt; IAsyncResult" Usage="ldapConnection.BeginSendRequest (request, requestTimeout, partialMode, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
        <Parameter Name="requestTimeout" Type="System.TimeSpan" />
        <Parameter Name="partialMode" Type="System.DirectoryServices.Protocols.PartialResultProcessing" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request"><see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 物件。</param>
        <param name="requestTimeout">要求逾時之前所經過的時間 (以秒為單位)。</param>
        <param name="partialMode">來自 <see cref="T:System.DirectoryServices.Protocols.PartialResultProcessing" /> 列舉型別的值，指定要傳回之部分結果的層級。</param>
        <param name="callback"><see cref="T:System.AsyncCallback" /> 函式。</param>
        <param name="state"><see cref="T:System.Object" />，包含這個要求的狀態資料。</param>
        <summary>將資料非同步地傳送至伺服器。</summary>
        <returns><see cref="T:System.IAsyncResult" /> 物件，參考非同步傳送。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">物件控制代碼無效。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> 是 null (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
        <exception cref="T:System.NotSupportedException">不支援部分結果。</exception>
        <exception cref="T:System.ArgumentException">如果 <paramref name="partialMode" /> 等於 <see cref="F:System.DirectoryServices.Protocols.PartialResultProcessing.ReturnPartialResultsAndNotifyCallback" />，則必須指定回呼函式。</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission"><see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Bind">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳送 LDAP 繫結。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public void Bind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Bind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.Bind" />
      <MemberSignature Language="VB.NET" Value="Public Sub Bind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Bind();" />
      <MemberSignature Language="F#" Value="member this.Bind : unit -&gt; unit" Usage="ldapConnection.Bind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.Bind" /> 方法會使用目前認證傳送 LDAP 繫結。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">物件控制代碼無效。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">由 LDAP 傳回的錯誤碼，並不對應於其中一個 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 列舉型別錯誤碼。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates" /> 屬性指定傳送多個用戶端憑證以進行驗證，或 <see cref="P:System.DirectoryServices.Protocols.LdapConnection.AuthType" /> 屬性為非同步且提供一或多個認證。</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission"><see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public void Bind (System.Net.NetworkCredential newCredential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Bind(class System.Net.NetworkCredential newCredential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.Bind(System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Bind (newCredential As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Bind(System::Net::NetworkCredential ^ newCredential);" />
      <MemberSignature Language="F#" Value="member this.Bind : System.Net.NetworkCredential -&gt; unit" Usage="ldapConnection.Bind newCredential" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newCredential" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="newCredential"><see cref="T:System.Net.NetworkCredential" /> 物件，指定要使用的認證。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.Bind(System.Net.NetworkCredential)" /> 方法會使用指定的 <see cref="T:System.Net.NetworkCredential" /> 傳送 LDAP 繫結。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">物件控制代碼無效。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">由 LDAP 傳回的錯誤碼，並不對應於 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 列舉型別錯誤碼。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates" /> 屬性指定傳送多個用戶端憑證以進行驗證，或 <see cref="P:System.DirectoryServices.Protocols.LdapConnection.AuthType" /> 屬性為非同步且提供一或多個認證。</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission"><see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Credential">
      <MemberSignature Language="C#" Value="public override System.Net.NetworkCredential Credential { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential Credential" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.LdapConnection.Credential" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::NetworkCredential ^ Credential {  void set(System::Net::NetworkCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credential : System.Net.NetworkCredential" Usage="System.DirectoryServices.Protocols.LdapConnection.Credential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.LdapConnection.Credential" /> 屬性包含物件的網路認證。</summary>
        <value>物件的網路認證。</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission"><see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>關閉並選擇性地釋放 LDAP 控制代碼。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="ldapConnection.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.Dispose" /> 方法會關閉並釋放 LDAP 控制代碼。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="ldapConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">如果關閉連接時釋放控制代碼，則為 <see langword="true" />，如果關閉連接時不釋放控制代碼，則為 <see langword="false" />。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.Dispose(System.Boolean)" /> 方法會關閉連接並選擇性地釋放 LDAP 控制代碼。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSendRequest">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.DirectoryResponse EndSendRequest (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.Protocols.DirectoryResponse EndSendRequest(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSendRequest (asyncResult As IAsyncResult) As DirectoryResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::Protocols::DirectoryResponse ^ EndSendRequest(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSendRequest : IAsyncResult -&gt; System.DirectoryServices.Protocols.DirectoryResponse" Usage="ldapConnection.EndSendRequest asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DirectoryResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> 物件，包含這個要求的狀態資料。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(System.IAsyncResult)" /> 方法會完成非同步要求。</summary>
        <returns><see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 物件，其中包含要求的結果。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">如果物件已經過處置，則擲回。  物件控制代碼無效。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> 是 null (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> 不符合 <see cref="Overload:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest" /> 呼叫中傳回的 <paramref name="asyncResult" />。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">LDAP 傳回的錯誤碼不對應 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 列舉錯誤碼。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">如果伺服器傳回有錯誤的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 物件，便會擲回。</exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~LdapConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!LdapConnection ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="ldapConnection.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.Finalize" /> 方法允許 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 物件嘗試釋放資源並執行其他清除作業，然後記憶體回收才能重新回收 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 物件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPartialResults">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.PartialResultsCollection GetPartialResults (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.Protocols.PartialResultsCollection GetPartialResults(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPartialResults (asyncResult As IAsyncResult) As PartialResultsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::Protocols::PartialResultsCollection ^ GetPartialResults(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.GetPartialResults : IAsyncResult -&gt; System.DirectoryServices.Protocols.PartialResultsCollection" Usage="ldapConnection.GetPartialResults asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.PartialResultsCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> 物件，包含這個要求的狀態資料。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(System.IAsyncResult)" /> 方法會擷取非同步作業的部分結果。</summary>
        <returns><see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" /> 物件，包含部分結果。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">物件已經處置過。 物件控制代碼無效。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> 是 null (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> 不符合 <see cref="Overload:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest" /> 呼叫中傳回的 <paramref name="asyncResult" />。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">LDAP 傳回的錯誤碼不對應 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 列舉錯誤碼。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">如果伺服器傳回有錯誤的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 物件，便會擲回。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendRequest">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將單一的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 當成 LDAP v3 作業傳送。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendRequest">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.Protocols.DirectoryResponse SendRequest (System.DirectoryServices.Protocols.DirectoryRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.Protocols.DirectoryResponse SendRequest(class System.DirectoryServices.Protocols.DirectoryRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SendRequest (request As DirectoryRequest) As DirectoryResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::DirectoryServices::Protocols::DirectoryResponse ^ SendRequest(System::DirectoryServices::Protocols::DirectoryRequest ^ request);" />
      <MemberSignature Language="F#" Value="override this.SendRequest : System.DirectoryServices.Protocols.DirectoryRequest -&gt; System.DirectoryServices.Protocols.DirectoryResponse" Usage="ldapConnection.SendRequest request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DirectoryResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
      </Parameters>
      <Docs>
        <param name="request"><see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 物件，其中包含要求。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> 方法會將單一的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 當成 LDAP v3 作業傳送。</summary>
        <returns><see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 物件，包含伺服器的回應。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">物件已經處置過。 物件控制代碼無效。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> 是 null (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
        <exception cref="T:System.NotSupportedException">要求為 DsmlAuthRequest 型別。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">由 LDAP 傳回的錯誤碼，並不對應於 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 列舉型別錯誤碼。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">如果伺服器傳回有錯誤的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 物件，便會擲回。</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission"><see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SendRequest">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.DirectoryResponse SendRequest (System.DirectoryServices.Protocols.DirectoryRequest request, TimeSpan requestTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.Protocols.DirectoryResponse SendRequest(class System.DirectoryServices.Protocols.DirectoryRequest request, valuetype System.TimeSpan requestTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendRequest (request As DirectoryRequest, requestTimeout As TimeSpan) As DirectoryResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::Protocols::DirectoryResponse ^ SendRequest(System::DirectoryServices::Protocols::DirectoryRequest ^ request, TimeSpan requestTimeout);" />
      <MemberSignature Language="F#" Value="override this.SendRequest : System.DirectoryServices.Protocols.DirectoryRequest * TimeSpan -&gt; System.DirectoryServices.Protocols.DirectoryResponse" Usage="ldapConnection.SendRequest (request, requestTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DirectoryResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
        <Parameter Name="requestTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="request"><see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 物件，其中包含要求。</param>
        <param name="requestTimeout">要求逾時之前所經過的時間長度 (以秒為單位)。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan)" /> 方法會將單一的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 當成 LDAP v3 作業傳送。</summary>
        <returns><see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 物件，包含伺服器的回應。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">物件已經處置過。 物件控制代碼無效。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> 是 null (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
        <exception cref="T:System.NotSupportedException">要求為 DsmlAuthRequest 型別。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.LdapException">LDAP 傳回的錯誤碼，並不對應於 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 列舉型別錯誤碼。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">如果伺服器傳回有錯誤的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 物件，便會擲回。</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission"><see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SessionOptions">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.LdapSessionOptions SessionOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.Protocols.LdapSessionOptions SessionOptions" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.LdapConnection.SessionOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionOptions As LdapSessionOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::Protocols::LdapSessionOptions ^ SessionOptions { System::DirectoryServices::Protocols::LdapSessionOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionOptions : System.DirectoryServices.Protocols.LdapSessionOptions" Usage="System.DirectoryServices.Protocols.LdapConnection.SessionOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.LdapSessionOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.LdapConnection.SessionOptions" /> 屬性包含指定工作階段 (Session) 選項的 <see cref="T:System.DirectoryServices.Protocols.LdapSessionOptions" /> 物件。</summary>
        <value><see cref="T:System.DirectoryServices.Protocols.LdapSessionOptions" /> 物件，指定工作階段選項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A>上的屬性<xref:System.DirectoryServices.Protocols.LdapConnection>物件並<xref:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate%2A>上的屬性<xref:System.DirectoryServices.Protocols.LdapSessionOptions>物件會同時設定，在指定的憑證<xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A>屬性會被忽略。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.LdapConnection.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan with get, set" Usage="System.DirectoryServices.Protocols.LdapConnection.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.LdapConnection.Timeout" /> 屬性包含 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 逾時之前所經過的時間長度 (以秒為單位)。</summary>
        <value><see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 逾時之前所經過的時間長度 (以秒為單位)。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>