<Type Name="OracleCommandBuilder" FullName="System.Data.OracleClient.OracleCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="26965b8be25bc193a607f31a6d9ba15cad2cd4e4" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37676561" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommandBuilder&#xA;Inherits DbCommandBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommandBuilder sealed : System::Data::Common::DbCommandBuilder" />
  <TypeSignature Language="F#" Value="type OracleCommandBuilder = class&#xA;    inherit DbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("OracleCommandBuilder has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>自動產生單一資料表命令，可用來調解對 <see cref="T:System.Data.DataSet" /> 的變更和相關的資料庫。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此類型已被取代，並將.NET Framework 的未來版本中移除。 如需詳細資訊，請參閱 < [Oracle 和 ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md)。  
  
 <xref:System.Data.OracleClient.OracleDataAdapter>調解所做的變更所需的 SQL 陳述式不會自動產生<xref:System.Data.DataSet>與資料庫相關聯。 不過，您可以建立<xref:System.Data.OracleClient.OracleCommandBuilder>藉由設定會產生單一資料表更新的 SQL 陳述式的物件<xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>屬性<xref:System.Data.OracleClient.OracleDataAdapter>。 然後，<xref:System.Data.OracleClient.OracleCommandBuilder>會產生您未設定任何其他 SQL 陳述式。  
  
 之間的關聯性<xref:System.Data.OracleClient.OracleDataAdapter>和其相對應<xref:System.Data.OracleClient.OracleCommandBuilder>一定是一對一。 若要建立這種對應關係，您設定<xref:System.Data.OracleClient.OracleDataAdapter>屬性<xref:System.Data.OracleClient.OracleCommandBuilder>物件。 這會導致<xref:System.Data.OracleClient.OracleCommandBuilder>本身註冊為接聽程式，這會產生的輸出<xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating>影響事件的<xref:System.Data.DataSet>。  
  
 若要產生 INSERT、 UPDATE 或 DELETE 陳述式<xref:System.Data.OracleClient.OracleCommandBuilder>使用<xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>屬性，以擷取所需的一組中繼資料。  
  
 <xref:System.Data.OracleClient.OracleCommandBuilder>也會使用<xref:System.Data.OracleClient.OracleCommand.Connection%2A>，並<xref:System.Data.OracleClient.OracleCommand.Transaction%2A>屬性所參考<xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>。  
  
 如果您呼叫<xref:System.Data.Common.DbDataAdapter.Dispose%2A>，則<xref:System.Data.OracleClient.OracleCommandBuilder>解除關聯<xref:System.Data.OracleClient.OracleDataAdapter>，以及無法再使用產生的命令。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.OracleClient.OracleCommand>，連同<xref:System.Data.OracleClient.OracleDataAdapter>和<xref:System.Data.OracleClient.OracleConnection>，以從資料庫選取資料列。 此範例會傳遞初始化<xref:System.Data.DataSet>，連接字串、 SQL SELECT 陳述式的查詢字串和資料庫資料表名稱的字串。 這個範例會建立<xref:System.Data.OracleClient.OracleCommandBuilder>。  
  
```vb  
Private Function SelectOracleRows(connection As String, queryString As String, tableName As String) As DataSet  
  
   Dim connection As New OracleConnection(connection)  
   Dim dataAdapter As New OracleDataAdapter()  
   Dim dataSet As DataSet = New DataSet  
  
   dataAdapter.SelectCommand = New OracleCommand(queryString, connection)  
  
   Dim cmdBuilder As OracleCommandBuilder = New OracleCommandBuilder(dataAdapter)  
  
   connection.Open()  
   dataAdapter.Fill(dataSet, tableName)  
      ' Code to modify data in DataSet here   
      ' Without the OracleCommandBuilder this line would fail.  
   dataAdapter.Update(dataSet, tableName)  
   connection.Close()  
End Function  
```  
  
```csharp  
public static DataSet SelectOracleSrvRows(string myConnection, string mySelectQuery, string myTableName)  
{  
   OracleConnection myConn = new OracleConnection(myConnection);  
   OracleDataAdapter myDataAdapter = new OracleDataAdapter();  
   myDataAdapter.SelectCommand = new OracleCommand(mySelectQuery, myConn);  
   OracleCommandBuilder cb = new OracleCommandBuilder(myDataAdapter);  
  
   myConn.Open();  
   DataSet ds = new DataSet();  
   myDataAdapter.Fill(ds, myTableName);  
  
   //Code to modify data in DataSet goes here...  
  
   //Without the OracleCommandBuilder this line would fail.  
   myDataAdapter.Update(ds, myTableName);  
   myConn.Close();  
   return ds;  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleCommandBuilder>自己註冊為接聽程式<xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating>產生的事件<xref:System.Data.OracleClient.OracleDataAdapter>這個屬性中指定。  
  
 當您建立的新執行個體<xref:System.Data.OracleClient.OracleCommandBuilder>，任何現有<xref:System.Data.OracleClient.OracleCommandBuilder>與此相關聯<xref:System.Data.OracleClient.OracleDataAdapter>發行。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommandBuilder (System.Data.OracleClient.OracleDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OracleClient.OracleDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As OracleDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommandBuilder(System::Data::OracleClient::OracleDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommandBuilder : System.Data.OracleClient.OracleDataAdapter -&gt; System.Data.OracleClient.OracleCommandBuilder" Usage="new System.Data.OracleClient.OracleCommandBuilder adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.OracleClient.OracleDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">要與這個 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 產生關聯的 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 物件。</param>
        <summary>使用關聯的 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 物件來初始化 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleCommandBuilder>自己註冊為接聽程式<xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating>產生的事件<xref:System.Data.OracleClient.OracleDataAdapter>這個屬性中指定。  
  
 當您建立的新執行個體<xref:System.Data.OracleClient.OracleCommandBuilder>，任何現有<xref:System.Data.OracleClient.OracleCommandBuilder>與此相關聯<xref:System.Data.OracleClient.OracleDataAdapter>發行。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberSignature Language="F#" Value="override this.ApplyParameterInfo : System.Data.Common.DbParameter * System.Data.DataRow * System.Data.StatementType * bool -&gt; unit" Usage="oracleCommandBuilder.ApplyParameterInfo (parameter, datarow, statementType, whereClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogLocation">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CatalogLocation CatalogLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Common.CatalogLocation CatalogLocation" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.CatalogLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogLocation As CatalogLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Common::CatalogLocation CatalogLocation { System::Data::Common::CatalogLocation get(); void set(System::Data::Common::CatalogLocation value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogLocation : System.Data.Common.CatalogLocation with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.CatalogLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CatalogLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>設定或取得 <see cref="T:System.Data.Common.CatalogLocation" /> 類別之執行個體的 <see cref="T:System.Data.Common.DbCommandBuilder" />。</summary>
        <value>
          <see cref="T:System.Data.Common.CatalogLocation" /> 物件。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogSeparator">
      <MemberSignature Language="C#" Value="public override string CatalogSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogSeparator : string with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>設定或取得用做 <see cref="T:System.Data.Common.DbCommandBuilder" /> 類別執行個體之目錄分隔符號的字串。</summary>
        <value>字串，表示與 <see cref="T:System.Data.Common.DbCommandBuilder" /> 類別之執行個體搭配使用的目錄分隔符號。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As OracleDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleDataAdapter ^ DataAdapter { System::Data::OracleClient::OracleDataAdapter ^ get(); void set(System::Data::OracleClient::OracleDataAdapter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataAdapter : System.Data.OracleClient.OracleDataAdapter with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.DataAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>設定或取得 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 物件，這個 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 物件將會為它產生 SQL 陳述式。</summary>
        <value>與這個 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 相關聯的 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleCommandBuilder>自己註冊為接聽程式<xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating>產生的事件<xref:System.Data.OracleClient.OracleDataAdapter>這個屬性中指定。  
  
 當您建立的新執行個體<xref:System.Data.OracleClient.OracleCommandBuilder>，任何現有<xref:System.Data.OracleClient.OracleCommandBuilder>與此相關聯<xref:System.Data.OracleClient.OracleDataAdapter>發行。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.OracleClient.OracleCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.OracleClient.OracleCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As OracleCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::OracleClient::OracleCommand ^ command);" />
      <MemberSignature Language="F#" Value="static member DeriveParameters : System.Data.OracleClient.OracleCommand -&gt; unit" Usage="System.Data.OracleClient.OracleCommandBuilder.DeriveParameters command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.OracleClient.OracleCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <see cref="T:System.Data.OracleClient.OracleCommand" />，參考參數資訊衍生來源的預存程序。 衍生的參數已加入到 <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> 的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 集合。</param>
        <summary>從 <see cref="T:System.Data.OracleClient.OracleCommand" /> 中指定的預存程序 (Stored Procedure) 擷取參數資訊，並填入 (Populate) 指定 <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> 物件的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> 會覆寫任何現有參數資訊<xref:System.Data.OracleClient.OracleCommand>。  
  
 <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> 需要資料庫的額外呼叫以取得資訊。 如果事先已知參數資訊，它會更有效率的方式藉由明確設定的資訊填入參數集合。  
  
 您只能使用<xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A>預存程序。 您無法使用<xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A>填入<xref:System.Data.OracleClient.OracleParameterCollection>使用任意的 TRANSACT-SQL 陳述式，例如參數化的 SELECT 陳述式。  
  
 如需詳細資訊，請參閱 <<c0> [ 設定參數和參數資料類型](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">命令文字不是有效的預存程序名稱，或者指定的 <see cref="T:System.Data.CommandType" /> 不是 <see cref="F:System.Data.CommandType.StoredProcedure" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oracleCommandBuilder.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得在資料庫上執行刪除時所需之自動產生的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>告知性或疑難排解的方法之用，因為它會傳回<xref:System.Data.OracleClient.OracleCommand>来執行的物件。  
  
 您也可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>做為基礎的修改過的命令。 例如，您可能會呼叫<xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>並修改<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>值，並接著上明確設定， <xref:System.Data.OracleClient.OracleDataAdapter>。  
  
 應用程式會呼叫其中一個時，會先產生 SQL 陳述式<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>。  
  
 如需詳細資訊，請參閱 < [Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetDeleteCommand();" />
      <MemberSignature Language="F#" Value="override this.GetDeleteCommand : unit -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetDeleteCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得在資料庫上執行刪除時所需之自動產生的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 物件。</summary>
        <returns>自動產生的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 物件，執行刪除時所需要的。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>告知性或疑難排解的方法之用，因為它會傳回<xref:System.Data.OracleClient.OracleCommand>来執行的物件。  
  
 您也可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>做為基礎的修改過的命令。 例如，您可能會呼叫<xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>並修改<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>值，並接著上明確設定， <xref:System.Data.OracleClient.OracleDataAdapter>。  
  
 應用程式會呼叫其中一個時，會先產生 SQL 陳述式<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>。  
  
 如需詳細資訊，請參閱 < [Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetDeleteCommand : bool -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetDeleteCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">如果為 true，則盡可能產生符合資料行名稱的參數名稱。 如果為 false，則會產生 @p1、@p2，依此類推。</param>
        <summary>取得在資料庫上執行刪除時所需之自動產生的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 物件。</summary>
        <returns>自動產生的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 物件，執行刪除時所需要的。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>告知性或疑難排解的方法之用，因為它會傳回<xref:System.Data.OracleClient.OracleCommand>来執行的物件。  
  
 您也可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>做為基礎的修改過的命令。 例如，您可能會呼叫<xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>並修改<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>值，並接著上明確設定， <xref:System.Data.OracleClient.OracleDataAdapter>。  
  
 應用程式會呼叫其中一個時，會先產生 SQL 陳述式<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>。  
  
 產生的參數名稱時的預設行為是使用@p1， @p2，依此類推的各種不同的參數。 傳遞`true`for`useColumnsForParameterNames`參數可讓您強制<xref:System.Data.Common.DbCommandBuilder>產生改為根據的資料行名稱的參數。 。 符合下列條件時，才會如此成功：  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定，且其長度等於或大於產生的參數名稱。  
  
-   產生的參數名稱符合指定準則<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>規則運算式。  
  
-   A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。  
  
 如需詳細資訊，請參閱 < [Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得在資料庫上執行插入時所需之自動產生的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>告知性或疑難排解的方法之用，因為它會傳回<xref:System.Data.OracleClient.OracleCommand>来執行的物件。  
  
 您也可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>做為基礎的修改過的命令。 例如，您可能會呼叫<xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>並修改<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>值，並接著上明確設定， <xref:System.Data.OracleClient.OracleDataAdapter>。  
  
 應用程式會呼叫其中一個時，會先產生 SQL 陳述式<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>。  
  
 如需詳細資訊，請參閱 < [Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetInsertCommand();" />
      <MemberSignature Language="F#" Value="override this.GetInsertCommand : unit -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetInsertCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得在資料庫上執行插入時所需之自動產生的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 物件。</summary>
        <returns>執行插入所需而自動產生的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>告知性或疑難排解的方法之用，因為它會傳回<xref:System.Data.OracleClient.OracleCommand>来執行的物件。  
  
 您也可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>做為基礎的修改過的命令。 例如，您可能會呼叫<xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>並修改<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>值，並接著上明確設定， <xref:System.Data.OracleClient.OracleDataAdapter>。  
  
 應用程式會呼叫其中一個時，會先產生 SQL 陳述式<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>。  
  
 如需詳細資訊，請參閱 < [Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetInsertCommand : bool -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetInsertCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">如果為 true，則盡可能產生符合資料行名稱的參數名稱。 如果為 false，則會產生 @p1、@p2，依此類推。</param>
        <summary>取得在資料庫上執行插入時所需之自動產生的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 物件。</summary>
        <returns>執行插入所需而自動產生的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>告知性或疑難排解的方法之用，因為它會傳回<xref:System.Data.OracleClient.OracleCommand>来執行的物件。  
  
 您也可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>做為基礎的修改過的命令。 例如，您可能會呼叫<xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>並修改<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>值，並接著上明確設定， <xref:System.Data.OracleClient.OracleDataAdapter>。  
  
 應用程式會呼叫其中一個時，會先產生 SQL 陳述式<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>。  
  
 產生的參數名稱時的預設行為是使用@p1， @p2，依此類推的各種不同的參數。 傳遞`true`for`useColumnsForParameterNames`參數可讓您強制<xref:System.Data.Common.DbCommandBuilder>產生改為根據的資料行名稱的參數。 。 符合下列條件時，才會如此成功：  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定，且其長度等於或大於產生的參數名稱。  
  
-   產生的參數名稱符合指定準則<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>規則運算式。  
  
-   A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。  
  
 如需詳細資訊，請參閱 < [Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="override this.GetParameterName : int -&gt; string" Usage="oracleCommandBuilder.GetParameterName parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="override this.GetParameterName : string -&gt; string" Usage="oracleCommandBuilder.GetParameterName parameterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="override this.GetParameterPlaceholder : int -&gt; string" Usage="oracleCommandBuilder.GetParameterPlaceholder parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得在資料庫上執行更新時所需之自動產生的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>告知性或疑難排解的方法之用，因為它會傳回<xref:System.Data.OracleClient.OracleCommand>来執行的物件。  
  
 您也可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>做為基礎的修改過的命令。 例如，您可能會呼叫<xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>並修改<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>值，並接著上明確設定， <xref:System.Data.OracleClient.OracleDataAdapter>。  
  
 應用程式會呼叫其中一個時，會先產生 SQL 陳述式<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>。  
  
 如需詳細資訊，請參閱 < [Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetUpdateCommand();" />
      <MemberSignature Language="F#" Value="override this.GetUpdateCommand : unit -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetUpdateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得在資料庫上執行更新時所需之自動產生的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 物件。</summary>
        <returns>自動產生的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 物件，執行更新時所需要的。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>告知性或疑難排解的方法之用，因為它會傳回<xref:System.Data.OracleClient.OracleCommand>来執行的物件。  
  
 您也可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>做為基礎的修改過的命令。 例如，您可能會呼叫<xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>並修改<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>值，並接著上明確設定， <xref:System.Data.OracleClient.OracleDataAdapter>。  
  
 應用程式會呼叫其中一個時，會先產生 SQL 陳述式<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>。  
  
 如需詳細資訊，請參閱 < [Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="override this.GetUpdateCommand : bool -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleCommandBuilder.GetUpdateCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">如果為 true，則盡可能產生符合資料行名稱的參數名稱。 如果為 false，則會產生 @p1、@p2，依此類推。</param>
        <summary>取得在資料庫上執行更新時所需之自動產生的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 物件。</summary>
        <returns>自動產生的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 物件，執行更新時所需要的。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>告知性或疑難排解的方法之用，因為它會傳回<xref:System.Data.OracleClient.OracleCommand>来執行的物件。  
  
 您也可以使用<xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>做為基礎的修改過的命令。 例如，您可能會呼叫<xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>並修改<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>值，並接著上明確設定， <xref:System.Data.OracleClient.OracleDataAdapter>。  
  
 應用程式會呼叫其中一個時，會先產生 SQL 陳述式<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>。  
  
 產生的參數名稱時的預設行為是使用@p1， @p2，依此類推的各種不同的參數。 傳遞`true`for`useColumnsForParameterNames`參數可讓您強制<xref:System.Data.Common.DbCommandBuilder>產生改為根據的資料行名稱的參數。 。 符合下列條件時，才會如此成功：  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定，且其長度等於或大於產生的參數名稱。  
  
-   產生的參數名稱符合指定準則<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>規則運算式。  
  
-   A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。  
  
 如需詳細資訊，請參閱 < [Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberSignature Language="F#" Value="override this.QuoteIdentifier : string -&gt; string" Usage="oracleCommandBuilder.QuoteIdentifier unquotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">原始的不具引號之識別項。</param>
        <summary>在正確目錄案例中提供不具引號的識別項時，傳回該識別項具引號的正確格式，包括適當逸出識別項中的任何內嵌引號。</summary>
        <returns>具引號版本的識別項。 識別項內的內嵌引號已適當逸出。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuotePrefix">
      <MemberSignature Language="C#" Value="public string QuotePrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuotePrefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.QuotePrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property QuotePrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ QuotePrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuotePrefix : string with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.QuotePrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteSuffix">
      <MemberSignature Language="C#" Value="public string QuoteSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuoteSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.QuoteSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ QuoteSuffix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteSuffix : string with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.QuoteSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshSchema">
      <MemberSignature Language="C#" Value="public void RefreshSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RefreshSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.RefreshSchema" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshSchema ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshSchema();" />
      <MemberSignature Language="F#" Value="member this.RefreshSchema : unit -&gt; unit" Usage="oracleCommandBuilder.RefreshSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaSeparator">
      <MemberSignature Language="C#" Value="public override string SchemaSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SchemaSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SchemaSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SchemaSeparator : string with get, set" Usage="System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用於結構描述識別項和任何其他識別項間之分隔符號的字元。</summary>
        <value>當做結構描述分隔符號使用的字元。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，資料庫伺服器會表示為識別項的結構描述分隔從具有某些字元之識別項的結構描述名稱。 例如，SQL Server 使用冒號，建立完整的識別項，例如 Person: CustomerName，其中 「 Person 」 是結構描述名稱，而"CustomerName"為識別項。 設定這個屬性可讓開發人員可以修改此行為。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="override this.SetRowUpdatingHandler : System.Data.Common.DbDataAdapter -&gt; unit" Usage="oracleCommandBuilder.SetRowUpdatingHandler adapter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberSignature Language="F#" Value="override this.UnquoteIdentifier : string -&gt; string" Usage="oracleCommandBuilder.UnquoteIdentifier quotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">將移除其內嵌引號的識別項。</param>
        <summary>已提供引號識別項時，傳回該識別項不具引號的正確格式，包括不逸出識別項中的任何內嵌引號。</summary>
        <returns>不具引號的識別項，會適當包含內嵌的引號。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>