<Type Name="OracleParameter" FullName="System.Data.OracleClient.OracleParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d31a0cd7669acc5ee6381edffcbcef3bcc648eca" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390592" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleParameter&#xA;Inherits DbParameter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleParameter sealed : System::Data::Common::DbParameter, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.OracleClient.OracleParameter/OracleParameterConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Data.OracleClient.OracleCommand" /> 的參數及其對 <see cref="T:System.Data.DataColumn" /> 的對應 (選擇性)。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 參數名稱不區分大小寫。  
  
 在查詢時使用 Microsoft OLE DB Provider for Oracle (MSDAORA) 和 ODBC.NET Framework 資料提供者的 Oracle 資料庫，使用`LIKE`子句來查詢中固定長度欄位的值可能不會傳回所有預期的相符項目。 原因是： 當 Oracle 符合中的固定長度欄位`LIKE`子句，它會比對整個字串的長度，包括任何填補的後端空格。 例如，如果資料表中 Oracle 資料庫包含名為"Field1"定義為欄位`char(3)`，並輸入值"a"該資料表中，下列程式碼中的資料列將不會傳回資料列。  
  
```vb  
Dim queryString As String = "SELECT * FROM Table1 WHERE Field1 LIKE ?"  
Dim command As OleDbCommand = New OleDbCommand(queryString, connection)  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a"  
Dim reader As OleDbDataReader = command.ExecuteReader()  
```  
  
```csharp  
string queryString = "SELECT * FROM Table1 WHERE Field1 LIKE ?";  
OleDbCommand command = new OleDbCommand(queryString, connection);  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a";  
OleDbDataReader reader = command.ExecuteReader();  
```  
  
 這是因為 Oracle 儲存的資料行值為"a"(填補以"a"後, 端空格，3 的固定的欄位長度)，Oracle 不會將當成參數值的"a"相符項目是其`LIKE`固定長度欄位的比較。  
  
 若要解決這個問題，請附加百分比 （"%"） 萬用字元參數值 (`"a%"`)，或使用 SQL`=`比較改為。  
  
   
  
## Examples  
 下列範例會建立多個執行個體<xref:System.Data.OracleClient.OracleParameter>透過<xref:System.Data.OracleClient.OracleParameterCollection>內<xref:System.Data.OracleClient.OracleDataAdapter>。 這些參數可用來從資料庫選取資料並將資料<xref:System.Data.DataSet>。 這個範例假設<xref:System.Data.DataSet>和<xref:System.Data.OracleClient.OracleDataAdapter>已經建立使用適當的結構描述、 命令及連線。  
  
 [!code-csharp[Classic WebData OracleParameter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter(System::String ^ name, System::Data::OracleClient::OracleType oracleType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
      </Parameters>
      <Docs>
        <param name="name">參數名稱。</param>
        <param name="oracleType">其中一個 <see cref="T:System.Data.OracleClient.OracleType" /> 值。</param>
        <summary>初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 類別的新執行個體，該類別使用參數名稱和資料型別。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會建立<xref:System.Data.OracleClient.OracleParameter>並設定其屬性的某些。  
  
 [!code-csharp[Classic WebData OracleParameter.OracleParameter1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.OracleParameter1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="oracleType" /> 參數中所提供的值是無效的後端資料類型。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter(System::String ^ name, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">參數名稱。</param>
        <param name="value">
          <see cref="T:System.Data.OracleClient.OracleParameter" /> 物件。</param>
        <summary>初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 類別的新執行個體，該類別使用參數名稱和 <see cref="T:System.Data.OracleClient.OracleParameter" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您指定<xref:System.Object>中`value`參數，<xref:System.Data.DbType>推斷的 Microsoft.NET Framework 型別<xref:System.Object>。  
  
 當您使用的這個多載時請特別小心<xref:System.Data.OracleClient.OracleParameter>建構函式。 因為此多載會採用`value`型別的<xref:System.Object>，您必須將整數值轉換<xref:System.Object>時輸入的值為零，如下列的 Microsoft Visual C# 範例所示。  
  
```  
Parameter = new OracleParameter("pname", Convert.ToInt32(0));  
```  
  
 如果您不會執行這項轉換，編譯器會假設您嘗試呼叫`OracleParameter`(`string`， `OracleType`) 建構函式多載。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter(System::String ^ name, System::Data::OracleClient::OracleType oracleType, int size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">參數名稱。</param>
        <param name="oracleType">其中一個 <see cref="T:System.Data.OracleClient.OracleType" /> 值。</param>
        <param name="size">參數的長度。</param>
        <summary>初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 類別的新執行個體，該類別使用參數名稱、資料型別和長度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會建立<xref:System.Data.OracleClient.OracleParameter>並設定其屬性的某些。  
  
 [!code-csharp[Classic WebData OracleParameter.OracleParameter2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter2/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.OracleParameter2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="oracleType" /> 參數中所提供的值是無效的後端資料類型。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType, int size, string srcColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType, int32 size, string srcColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter(System::String ^ name, System::Data::OracleClient::OracleType oracleType, int size, System::String ^ srcColumn);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="srcColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">參數名稱。</param>
        <param name="oracleType">其中一個 <see cref="T:System.Data.OracleClient.OracleType" /> 值。</param>
        <param name="size">參數的長度。</param>
        <param name="srcColumn">來源資料行的名稱。</param>
        <summary>初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 類別的新執行個體，該類別使用參數名稱、資料型別、長度和來源資料行名稱。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會建立<xref:System.Data.OracleClient.OracleParameter>並設定其屬性的某些。  
  
 [!code-csharp[Classic WebData OracleParameter.OracleParameter3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter3/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.OracleParameter3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="oracleType" /> 參數中所提供的值是無效的後端資料類型。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType, int size, System.Data.ParameterDirection direction, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType, int32 size, valuetype System.Data.ParameterDirection direction, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.Data.ParameterDirection,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter(System::String ^ name, System::Data::OracleClient::OracleType oracleType, int size, System::Data::ParameterDirection direction, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, bool sourceColumnNullMapping, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">要對應的參數名稱。</param>
        <param name="oracleType">其中一個 <see cref="T:System.Data.OracleClient.OracleType" /> 值。</param>
        <param name="size">參數的長度。</param>
        <param name="direction">其中一個 <see cref="T:System.Data.ParameterDirection" /> 值。</param>
        <param name="sourceColumn">來源資料行的名稱。</param>
        <param name="sourceVersion">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值。</param>
        <param name="sourceColumnNullMapping">
          如果來源資料行可為 null，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="value">
          <see cref="T:System.Object" />，是 <see cref="T:System.Data.OracleClient.OracleParameter" /> 的值。</param>
        <summary>初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 類別的新執行個體，該類別使用參數名稱、資料型別、大小、方向、來源資料行、來源版本和其他屬性。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="oracleType" /> 參數中所提供的值是無效的後端資料類型。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType, int32 size, valuetype System.Data.ParameterDirection direction, bool isNullable, unsigned int8 precision, unsigned int8 scale, string srcColumn, valuetype System.Data.DataRowVersion srcVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter(System::String ^ name, System::Data::OracleClient::OracleType oracleType, int size, System::Data::ParameterDirection direction, bool isNullable, System::Byte precision, System::Byte scale, System::String ^ srcColumn, System::Data::DataRowVersion srcVersion, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="srcColumn" Type="System.String" />
        <Parameter Name="srcVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">參數名稱。</param>
        <param name="oracleType">其中一個 <see cref="T:System.Data.OracleClient.OracleType" /> 值。</param>
        <param name="size">參數的長度。</param>
        <param name="direction">其中一個 <see cref="T:System.Data.ParameterDirection" /> 值。</param>
        <param name="isNullable">
          如果欄位值可以是 null，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="precision">
          <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 所解析的小數點左右側的位數總數。</param>
        <param name="scale">
          <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 所解析的小數點位數的總數。</param>
        <param name="srcColumn">來源資料行的名稱。</param>
        <param name="srcVersion">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值。</param>
        <param name="value">
          <see cref="T:System.Object" />，是 <see cref="T:System.Data.OracleClient.OracleParameter" /> 的值。</param>
        <summary>初始化 <see cref="T:System.Data.OracleClient.OracleParameter" />類別的新執行個體，它使用參數名稱、資料類型、長度、來源資料行名稱、參數方向、數值有效位數，以及其他屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會建立<xref:System.Data.OracleClient.OracleParameter>並顯示<xref:System.Data.OracleClient.OracleParameter.ParameterName%2A>。  
  
 [!code-csharp[Classic WebData OracleParameter.OracleParameter4#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter4/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.OracleParameter4#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter4/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="oracleType" /> 參數中所提供的值是無效的後端資料類型。</exception>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.DbType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定參數的 <see cref="T:System.Data.DbType" />。</summary>
        <value>其中一個 <see cref="T:System.Data.DbType" /> 值。 預設值為 <see cref="F:System.Data.DbType.AnsiString" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleParameter.OracleType%2A>和<xref:System.Data.OracleClient.OracleParameter.DbType%2A>連結。 因此，設定<xref:System.Data.OracleClient.OracleParameter.DbType%2A>變更<xref:System.Data.OracleClient.OracleParameter.OracleType%2A>支援<xref:System.Data.OracleClient.OracleParameter.OracleType%2A>。  
  
 <xref:System.Data.OracleClient.OracleParameter.DbType%2A>， <xref:System.Data.OracleClient.OracleParameter.OracleType%2A>，和<xref:System.Data.OracleClient.OracleParameter.Size%2A>參數的屬性，可以藉由設定推斷<xref:System.Data.OracleClient.OracleParameter.Value%2A>。 因此，您不需要指定它們。 不過，它們不會顯示在<xref:System.Data.OracleClient.OracleParameter>屬性設定。 例如，如果已推斷參數的大小，<xref:System.Data.OracleClient.OracleParameter.Size%2A>陳述式執行之後未包含推斷的值。 如`String`資料型別預設值是<xref:System.Data.DbType.AnsiString>。  
  
 如需支援的資料類型的清單，請參閱適當<xref:System.Data.OracleClient.OracleParameter.OracleType%2A>成員。 如需詳細資訊，請參閱[DataAdapter 的參數](~/docs/framework/data/adonet/dataadapter-parameters.md)。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Data.OracleClient.OracleParameter>並設定其屬性的某些。  
  
 [!code-csharp[Classic WebData OracleParameter.DbType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.DbType/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.DbType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.DbType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">屬性並未設定為有效的 <see cref="T:System.Data.DbType" />。</exception>
        <altmember cref="T:System.Data.OracleClient.OracleType" />
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Direction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，以表示參數是僅限輸入、僅限輸出、雙向 (Bidirectional) 或預存程序 (Stored Procedure) 傳回值參數。</summary>
        <value>其中一個 <see cref="T:System.Data.ParameterDirection" /> 值。 預設值為 <see langword="Input" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Data.ParameterDirection>是輸出，以及執行相關聯的<xref:System.Data.OracleClient.OracleCommand>沒有傳回值，<xref:System.Data.OracleClient.OracleParameter>包含 null 值。  
  
 `Output``InputOut`，和`ReturnValue`透過呼叫所傳回的參數<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>無法存取，直到您呼叫<xref:System.Data.OracleClient.OracleDataReader.Close%2A>上<xref:System.Data.OracleClient.OracleDataReader>。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Data.OracleClient.OracleParameter>並設定其屬性的某些。  
  
```vb  
Public Sub CreateOracleDbParameter()  
   Dim parameter As New OracleParameter()  
   parameter.ParameterName = "pDName"  
   parameter.DbType = DbType.String  
   parameter.Value = "ENGINEERING"  
   parameter.SourceColumn = "DName"  
End Sub  
```  
  
```csharp  
public void CreateOracleDbParameter()   
{  
   OracleParameter parameter = new OracleParameter();  
   parameter.ParameterName = "pDName";  
   parameter.DbType = DbType.String;  
   parameter.Value = "ENGINEERING";  
   parameter.SourceColumn = "DName";  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">屬性未設定為其中一個有效的 <see cref="T:System.Data.ParameterDirection" /> 值。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值指出該參數是否接受 null 值。</summary>
        <value>
          如果接受 null 值，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用處理 null 值<xref:System.DBNull>類別。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Data.OracleClient.OracleParameter>並設定其屬性的某些。  
  
```vb  
Public Sub CreateOracleParameter()  
   Dim parameter As New OracleParameter("DName", OracleType.VarChar, 14)  
   parameter.IsNullable = True  
   parameter.Direction = ParameterDirection.Output  
End Sub  
```  
  
```csharp  
public void CreateOracleParameter()   
{  
   OracleParameter parameter = new OracleParameter("DName", OracleType.VarChar, 14);  
   parameter.IsNullable = true;  
   parameter.Direction = ParameterDirection.Output;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 屬性的位移。</summary>
        <value>
          <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 的位移。 預設值為 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Offset`屬性適用於用戶端區塊處理的二進位和字串資料。 比方說，若要插入的伺服器上的資料行中的 10 MB 的文字，使用者可能會執行 10 個參數化的插入的 1 MB 的區塊，移位的值`Offset`上每個反覆項目 1 mb。  
  
 `Offset` 指定的二進位型別，位元組數目以及字串的字元數目。 字串的計數不包括結束的字元。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Data.OracleClient.OracleParameter>並設定其屬性的某些。  
  
```vb  
Public Sub CreateOracleParameter()  
   Dim parameter As New OracleParameter("pDName", OracleType.VarChar)  
   parameter.IsNullable = True  
   parameter.Offset = 3  
End Sub  
```  
  
```csharp  
public void CreateOracleParameter()   
{  
   OracleParameter parameter = new OracleParameter("pDName", OracleType.VarChar);  
   parameter.IsNullable = true;  
   parameter.Offset = 3;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OracleType">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleType OracleType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.OracleClient.OracleType OracleType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.OracleType" />
      <MemberSignature Language="VB.NET" Value="Public Property OracleType As OracleType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleType OracleType { System::Data::OracleClient::OracleType get(); void set(System::Data::OracleClient::OracleType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定參數的 <see cref="T:System.Data.OracleClient.OracleType" />。</summary>
        <value>
          <see cref="T:System.Data.OracleClient.OracleType" /> 值，為參數的 <see cref="T:System.Data.OracleClient.OracleType" />。 預設值為 <see cref="F:System.Data.OracleClient.OracleType.VarChar" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleParameter.OracleType%2A>和<xref:System.Data.OracleClient.OracleParameter.DbType%2A>連結。 因此，設定<xref:System.Data.OracleClient.OracleParameter.DbType%2A>變更<xref:System.Data.OracleClient.OracleParameter.OracleType%2A>支援<xref:System.Data.OracleClient.OracleType>。  
  
 <xref:System.Data.OracleClient.OracleParameter.DbType%2A>， <xref:System.Data.OracleClient.OracleParameter.OracleType%2A>，和<xref:System.Data.OracleClient.OracleParameter.Size%2A>參數的屬性，可以藉由設定推斷<xref:System.Data.OracleClient.OracleParameter.Value%2A>。 因此，您不需要指定它們。 不過，它們不會顯示在<xref:System.Data.OracleClient.OracleParameter>屬性設定。 例如，如果已推斷參數的大小，<xref:System.Data.OracleClient.OracleParameter.Size%2A>陳述式執行之後未包含推斷的值。 如`String`資料型別預設值是<xref:System.Data.OracleClient.OracleType.VarChar>。  
  
 如需支援的資料類型的清單，請參閱適當<xref:System.Data.OracleClient.OracleType>成員。 如需詳細資訊，請參閱[DataAdapter 的參數](~/docs/framework/data/adonet/dataadapter-parameters.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.ParameterName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Data.OracleClient.OracleParameter" /> 的名稱。</summary>
        <value>
          <see cref="T:System.Data.OracleClient.OracleParameter" /> 的名稱。 預設為空字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework Data Provider for Oracle 不支援以問號 （？） 標示為位置參數。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Data.OracleClient.OracleParameter>並設定其屬性的某些。  
  
```vb  
Public Sub CreateOracleDbParameter()  
   Dim parameter As New OracleParameter()  
   parameter.ParameterName = "pDName"  
   parameter.DbType = DbType.String  
   parameter.Value = "ENGINEERING"  
   parameter.SourceColumn = "DName"  
End Sub  
```  
  
```csharp  
public void CreateOracleDbParameter()   
{  
   OracleParameter parameter = new OracleParameter();  
   parameter.ParameterName = "pDName";  
   parameter.DbType = DbType.String;  
   parameter.Value = "ENGINEERING";  
   parameter.SourceColumn = "DName";  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Property Precision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Precision { System::Byte get(); void set(System::Byte value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Precision</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Precision has been deprecated.  Use the Math classes to explicitly set the precision of a decimal.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來表示 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 屬性的最大位數。</summary>
        <value>用來表示 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 屬性的最大位數。 預設值為 0，指出資料提供者為 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 設定精確度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定<xref:System.Data.OracleClient.OracleParameter.Precision%2A>或<xref:System.Data.OracleClient.OracleParameter.Scale%2A>屬性沒有任何作用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.ResetDbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetDbType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重設與此 <see cref="T:System.Data.OracleClient.OracleParameter" /> 相關聯的類型。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 執行命令時，其中包含參數值、 程式碼可以明確地設定參數的型別或參數可以推斷其類型的值。 呼叫這個方法，使推斷其類型，從傳入參數中的值時，一次，會重設參數。 呼叫這個方法會同時影響<xref:System.Data.Odbc.OdbcParameter.DbType%2A>和<xref:System.Data.OracleClient.OracleParameter.OracleType%2A>屬性<xref:System.Data.OracleClient.OracleParameter>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.OracleClient.OracleParameter.ResetOracleType" />
        <altmember cref="P:System.Data.Odbc.OdbcParameter.DbType" />
        <altmember cref="P:System.Data.OracleClient.OracleParameter.OracleType" />
      </Docs>
    </Member>
    <Member MemberName="ResetOracleType">
      <MemberSignature Language="C#" Value="public void ResetOracleType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetOracleType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.ResetOracleType" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetOracleType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetOracleType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重設與此 <see cref="T:System.Data.OracleClient.OracleParameter" /> 相關聯的類型。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 執行命令時，其中包含參數值、 程式碼可以明確地設定參數的型別或參數可以推斷其類型的值。 呼叫這個方法，使推斷其類型，從傳入參數中的值時，一次，會重設參數。 呼叫這個方法會同時影響<xref:System.Data.Odbc.OdbcParameter.DbType%2A>和<xref:System.Data.OracleClient.OracleParameter.OracleType%2A>屬性<xref:System.Data.OracleClient.OracleParameter>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Odbc.OdbcParameter.ResetDbType" />
        <altmember cref="P:System.Data.Odbc.OdbcParameter.DbType" />
        <altmember cref="P:System.Data.OracleClient.OracleParameter.OracleType" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Scale { System::Byte get(); void set(System::Byte value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Scale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Scale has been deprecated.  Use the Math classes to explicitly set the scale of a decimal.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 所解析的小數點位數。</summary>
        <value>
          <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 所解析的小數點位數。 預設值為 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定<xref:System.Data.OracleClient.OracleParameter.Precision%2A>或<xref:System.Data.OracleClient.OracleParameter.Scale%2A>屬性沒有任何作用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Size { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Size</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定資料行中資料的最大大小 (以位元組為單位)。</summary>
        <value>資料行中資料的最大大小 (以位元組為單位)。 預設值為 0 (當您不想指定值的最大大小時可以使用)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定<xref:System.Data.OracleClient.OracleParameter.Size%2A>會影響參數的輸入的值。 這個屬性不影響傳回值和輸出參數。  
  
 <xref:System.Data.OracleClient.OracleParameter.Size%2A>屬性適用於二進位和字串類型。  
  
 針對非字串資料類型和 ANSI 字串資料，<xref:System.Data.OracleClient.OracleParameter.Size%2A>屬性參考到的位元組數目。 Unicode 字串資料，<xref:System.Data.OracleClient.OracleParameter.Size%2A>指的是字元數。 字串的計數不包括結束的字元。  
  
 可變長度資料類型，<xref:System.Data.OracleClient.OracleParameter.Size%2A>說明資料傳輸至伺服器的最大數量。 例如，針對 Unicode 字串值，<xref:System.Data.OracleClient.OracleParameter.Size%2A>無法用來限制傳送給伺服器，首先一百個字元的資料量。  
  
 針對雙向和輸出參數和傳回值，您必須設定大小的值。 這是不必要的輸入參數，而且如果未明確設定的值推斷，從指定之參數的實際大小參數化陳述式執行時。  
  
 <xref:System.Data.OracleClient.OracleParameter.DbType%2A>， <xref:System.Data.OracleClient.OracleParameter.OracleType%2A>，和<xref:System.Data.OracleClient.OracleParameter.Size%2A>參數的屬性，可以藉由設定推斷<xref:System.Data.OracleClient.OracleParameter.Value%2A>。 因此，您不需要指定它們。 不過，它們不會顯示在<xref:System.Data.OracleClient.OracleParameter>屬性設定。 例如，如果已推斷參數的大小，<xref:System.Data.OracleClient.OracleParameter.Size%2A>陳述式執行之後未包含推斷的值。  
  
 固定長度資料類型的值<xref:System.Data.OracleClient.OracleParameter.Size%2A>會被忽略。 它可以擷取僅供參考之用，並且會傳回的位元組的提供者會使用傳輸伺服器參數的值時的最大數量。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Data.OracleClient.OracleParameter>並設定其屬性的某些。  
  
```vb  
Public Sub CreateOracleParameter()  
   Dim parameter As New OracleParameter("pDescription", OracleType.VarChar)  
   parameter.IsNullable = True  
   parameter.Direction = ParameterDirection.Output  
   parameter.Size = 88  
End Sub  
```  
  
```csharp  
public void CreateOracleParameter()   
{  
   OracleParameter parameter = new OracleParameter("pDescription", OracleType.VarChar);  
   parameter.IsNullable = true;  
   parameter.Direction = ParameterDirection.Output;  
   parameter.Size = 88;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定來源資料行的名稱，其對應至 <see cref="T:System.Data.DataSet" /> 並用於載入或傳回 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。</summary>
        <value>對應至 <see cref="T:System.Data.DataSet" /> 的來源資料行名稱。 預設為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值之間的連結<xref:System.Data.OracleClient.OracleParameter>和<xref:System.Data.DataTable>可能的值而定的雙向<xref:System.Data.OracleClient.OracleParameter.Direction%2A>屬性。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Data.OracleClient.OracleParameter>並設定其屬性的某些。  
  
```vb  
Public Sub CreateOracleDbParameter()  
   Dim parameter As New OracleParameter()  
   parameter.ParameterName = "pDName"  
   parameter.DbType = DbType.String  
   parameter.Value = "ENGINEERING"  
   parameter.SourceColumn = "DName"  
End Sub  
```  
  
```csharp  
public void CreateOracleDbParameter()   
{  
   OracleParameter parameter = new OracleParameter();  
   parameter.ParameterName = "pDName";  
   parameter.DbType = DbType.String;  
   parameter.Value = "ENGINEERING";  
   parameter.SourceColumn = "DName";  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumnNullMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SourceColumnNullMapping { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>設定或取得值，這個值表示來源資料行是否可為 Null。 這可讓 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 正確產生可為 Null 的資料行的 Update 陳述式。</summary>
        <value>
          如果來源資料行可為 null，則為 <see langword="True" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping%2A> 正由<xref:System.Data.OracleClient.OracleCommandBuilder>正確處理可為 null 的資料行時，產生更新命令。 一般而言，使用<xref:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping%2A>僅限於開發人員繼承自<xref:System.Data.OracleClient.OracleCommandBuilder>。  
  
 <xref:System.Data.Common.DbCommandBuilder> 使用這個屬性來判斷來源資料行是否可為 null，並將此屬性設定為`true`是否可為 null，和`false`如果不是。 當<xref:System.Data.OracleClient.OracleCommandBuilder>會產生其 Update 陳述式，它會檢查<xref:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping%2A>每個參數。 如果屬性是`true`，<xref:System.Data.OracleClient.OracleCommandBuilder>會產生類似下面的 WHERE 子句 （在這個查詢運算式中，"FieldName"代表欄位的名稱）：  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 如果<xref:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping%2A>為 false，此欄位為<xref:System.Data.OracleClient.OracleCommandBuilder>會產生下列 WHERE 子句：  
  
```  
FieldName = @OriginalFieldName  
```  
  
 此外，@IsNull_FieldName包含 1，如果來源欄位包含 null 和 0 如果不存在。 這項機制可讓 Oracle 伺服器中的效能最佳化，並提供可跨多個提供者的通用程式碼。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceVersion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定載入 <see cref="T:System.Data.DataRowVersion" /> 時要使用的 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。</summary>
        <value>其中一個 <see cref="T:System.Data.DataRowVersion" /> 值。 預設值為 <see langword="Current" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性供<xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A>期間<xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType>以判斷原始或目前的值是否用於參數值。 這可讓更新的主索引鍵。 此屬性設定為版本<xref:System.Data.DataRow>供<xref:System.Data.DataRow.Item%2A?displayProperty=nameWithType>屬性 (<xref:System.Data.DataRow>索引子)，或<xref:System.Data.DataRow.GetChildRows%2A?displayProperty=nameWithType>方法<xref:System.Data.DataRow>物件。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Data.OracleClient.OracleParameter>並設定其屬性的某些。  
  
```vb  
Public Sub CreateOracleParameter()  
   Dim parameter As New OracleParameter("pDName", OracleType.VarChar)  
   parameter.IsNullable = True  
   parameter.SourceColumn = "Description"  
   parameter.SourceVersion = DataRowVersion.Current  
   parameter.Direction = ParameterDirection.Output  
End Sub  
```  
  
```csharp  
public void CreateOracleParameter()   
{  
   OracleParameter parameter = new OracleParameter("pDName", OracleType.VarChar);  
   parameter.IsNullable = true;  
   parameter.SourceColumn = "Description";  
   parameter.SourceVersion = DataRowVersion.Current;  
   parameter.Direction = ParameterDirection.Output;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.ICloneable.Clone" />。</summary>
        <returns>這個執行個體複本的新物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Data.OracleClient.OracleParameter> 執行個體轉換成 <xref:System.ICloneable> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得包含 <see cref="P:System.Data.OracleClient.OracleParameter.ParameterName" /> 的字串。</summary>
        <returns>包含 <see cref="P:System.Data.OracleClient.OracleParameter.ParameterName" /> 的字串。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定參數的值。</summary>
        <value>物件，為參數的值。 預設值為 null。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 輸入參數的值繫結至<xref:System.Data.OracleClient.OracleCommand>傳送到伺服器。 輸出和傳回值參數，在完成設定值<xref:System.Data.OracleClient.OracleCommand>及之後<xref:System.Data.OracleClient.OracleDataReader>已關閉。  
  
 輸入參數，<xref:System.Data.OracleClient.OracleParameter.Value%2A>可以設定為 Microsoft.NET Framework 資料型別或 Oracle 資料類型的物件 (例如，<xref:System.Data.OracleClient.OracleNumber>或<xref:System.Data.OracleClient.OracleString>)。  
  
 當您傳送 null 參數值到伺服器時，您必須指定 DBNull，不是 null。 系統中的 null 值是空的物件沒有值。 DBNull 用來表示 null 值。  
  
 如果應用程式指定的資料庫型別，繫結的值會轉換成該類型，提供者將資料傳送到伺服器時。 提供者會嘗試將值的任何類型的轉換，如果支援<xref:System.IConvertible>介面。 如果指定的型別不相容的值，可能導致轉換錯誤。  
  
 <xref:System.Data.OracleClient.OracleParameter.DbType%2A>， <xref:System.Data.OracleClient.OracleParameter.OracleType%2A>，和<xref:System.Data.OracleClient.OracleParameter.Size%2A>參數的屬性，來推斷設定的值。 因此，您不需要指定它們。 不過，它們不會顯示在<xref:System.Data.OracleClient.OracleParameter>屬性設定。 比方說，如果已推斷參數的大小，大小沒有推斷的值之後的陳述式執行。  
  
 `InputOutput`， `Output`，和`ReturnValue` <xref:System.Data.ParameterDirection> Value 屬性所使用的值將會 Microsoft.NET Framework 資料型別，除非輸入的值 Oracle 資料類型 (例如，<xref:System.Data.OracleClient.OracleNumber>或<xref:System.Data.OracleClient.OracleString>)。 這不會套用至 REF CURSOR，BFILE 或 LOB 資料類型。  
  
 <xref:System.Data.OracleClient.OracleParameter.Value%2A>屬性覆寫**更新**方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>