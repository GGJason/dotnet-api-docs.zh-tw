<Type Name="OracleBFile" FullName="System.Data.OracleClient.OracleBFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="459475433844047b61ade7ae3edf80506077e29a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390452" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleBFile extends System.IO.Stream implements class System.Data.SqlTypes.INullable, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleBFile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleBFile&#xA;Inherits Stream&#xA;Implements ICloneable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleBFile sealed : System::IO::Stream, ICloneable, System::Data::SqlTypes::INullable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>表示 Managed <see cref="T:System.Data.OracleClient.OracleBFile" /> 物件，該物件是專為使用 Oracle <see langword="BFILE" /> 資料型別而設計的物件。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oracle`BFILE`資料型別是一種 Oracle`LOB`資料類型，包含最大值 4 gb 之二進位資料的參考。 Oracle`BFILE`不同於其他 Oracle`LOB`資料類型，其資料儲存在伺服器上的實體檔案而不是作業系統中。 請注意，`BFILE`資料類型提供唯讀資料存取。 因此，寫入導向的方法繼承自<xref:System.IO.Stream>不支援類別。  
  
 其他特性`BFILE`資料型別有別於`LOB`資料類型包括：  
  
-   包含非結構化資料。  
  
-   支援伺服器端區塊。  
  
-   使用參考複製語意。 例如，如果您在上執行複製作業`BFILE`，則只`BFILE`複製定位器 （其為檔案的參考）。 而不會複製檔案中的資料。  
  
 `BFILE`資料類型應該用於參照`LOB`s 大的大小，因此不適合儲存在資料庫中。 使用用戶端、 伺服器及通訊額外負荷`BFILE`資料型別相較於`LOB`資料型別。 若要存取更有效率`BFILE`如果您只需要取得少量資料。 若要存取常駐的資料庫更有效率`LOB`s，如果您需要取得整個物件。  
  
 每個非 NULL<xref:System.Data.OracleClient.OracleBFile>物件都與定義基礎實體檔案的位置的兩個實體：  
  
-   Oracle DIRECTORY 物件 (檔案系統中目錄的資料庫別名) 及  
  
-   基礎實體檔案的檔名 (位於與 DIRECTORY 物件相關聯的目錄中)。  
  
 之後`BFILE`已建立，您可以擷取其定位程式的形式<xref:System.Data.OracleClient.OracleBFile>物件使用<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>或<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>方法。  
  
 若要取得<xref:System.Data.OracleClient.OracleBFile>物件，呼叫<xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A>方法。  
  
 實體檔案的<xref:System.Data.OracleClient.OracleBFile>物件有關聯的不需要存在，直到您嘗試存取它。 應用程式可以繫結<xref:System.Data.OracleClient.OracleBFile>到不存在的檔案，建立實體檔案中預期的位置，並接著呼叫<xref:System.Data.OracleClient.OracleBFile.Read%2A>。  
  
 任何嘗試存取已關閉<xref:System.Data.OracleClient.OracleBFile>使用<xref:System.Data.OracleClient.OracleBFile.Read%2A>或<xref:System.Data.OracleClient.OracleBFile.Seek%2A>方法再次開啟<xref:System.Data.OracleClient.OracleBFile>自動資料流。  
  
 下列 C# 範例會示範如何建立`BFILE`在 Oracle 資料表，然後再將它擷取的形式<xref:System.Data.OracleClient.OracleBFile>物件。 此範例示範如何使用<xref:System.Data.OracleClient.OracleDataReader>物件和<xref:System.Data.OracleClient.OracleBFile><xref:System.Data.OracleClient.OracleBFile.Seek%2A>和<xref:System.Data.OracleClient.OracleBFile.Read%2A>方法。  
  
 [!code-csharp[DataWorks OracleClient.BFile#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleClient.BFile/CS/source.cs#1)]  
  
 如需有關建立及使用 Oracle `BFILE`，請參閱 Oracle 文件中的適當主題。  
  
> [!NOTE]
>  `BeginWrite`， `EndWrite`，和`WriteByte`方法，都繼承自`System.IO.Stream`類別，因為不支援`BFILE`資料類型是唯讀的。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，表示 <see langword="BFILE" /> 資料流是否可讀取。</summary>
        <value>
          如果 <see langword="false" /> 關閉或已經處置，則為 <see langword="BFILE" />，否則為 <see langword="true" />。 對於 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 則永遠都是 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，表示是否可以執行向前及向後搜尋的作業。</summary>
        <value>
          如果 <see langword="false" /> 關閉或已經處置，則為 <see langword="BFILE" />，否則為 <see langword="true" />。 對於 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 則永遠都是 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，表示物件是否支援寫入。</summary>
        <value>永遠都會傳回 <see langword="false" />，因為 Oracle <see langword="BFILE" /> 是唯讀的資料型別。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>會建立這個 <see cref="T:System.Data.OracleClient.OracleBFile" /> 物件的複本，這個複本與原始物件一樣都會關聯到相同的實體檔案。</summary>
        <returns>新的 <see cref="T:System.Data.OracleClient.OracleBFile" /> 物件，它與原始 <see langword="OracleBFile" /> 物件一樣都會關聯到相同的實體檔案。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新的屬性<xref:System.Data.OracleClient.OracleBFile>物件一開始會有相同的值與原始物件。 不過之後,<xref:System.Data.OracleClient.OracleBFile.Clone%2A>已完成，每個<xref:System.Data.OracleClient.OracleBFile>與其他物件無關。 例如，變更值的<xref:System.Data.OracleClient.OracleBFile.Position%2A>原始屬性<xref:System.Data.OracleClient.OracleBFile>不會變更的值<xref:System.Data.OracleClient.OracleBFile.Position%2A>副本上。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Data.OracleClient.OracleConnection" /> 的這個執行個體所使用的 <see cref="T:System.Data.OracleClient.OracleBFile" />。</summary>
        <value>資料來源的連接。 預設為 Null 值。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從這個 <see cref="T:System.Data.OracleClient.OracleBFile" /> 將資料複製到目的 <see cref="T:System.Data.OracleClient.OracleLob" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
      </Parameters>
      <Docs>
        <param name="destination">目的 <see cref="T:System.Data.OracleClient.OracleLob" />。</param>
        <summary>將這個 <see cref="T:System.Data.OracleClient.OracleBFile" /> 的完整內容複製到目的 <see cref="T:System.Data.OracleClient.OracleLob" /> 的開頭。</summary>
        <returns>已複製的位元組數目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 基礎資料類型的來源<xref:System.Data.OracleClient.OracleBFile>和目的地<xref:System.Data.OracleClient.OracleLob>必須相容。 比方說，您無法將二進位資料複製到目的地<xref:System.Data.OracleClient.OracleLob>具有字元資料類型。  
  
 您必須具有寫入存取權目的地<xref:System.Data.OracleClient.OracleLob>如<xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>才能正確執行的作業。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">目的 <see langword="OracleLob" /> 是 null 物件參考。</exception>
        <exception cref="T:System.InvalidOperationException">目的端為 null <see langword="OracleLob" />。  
  
 -或-  
  
 這個 <see langword="OracleBFile" /> 相關聯的連接已經關閉。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see langword="OracleBFile" /> 物件已關閉或處置。</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination, int64 destinationOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob, destinationOffset As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination, long destinationOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="destination">目的地 <see cref="T:System.Data.OracleClient.OracleLob" />。</param>
        <param name="destinationOffset">要複製的目的位置。</param>
        <summary>將這個 <see cref="T:System.Data.OracleClient.OracleBFile" /> 的完整內容複製到指定位移 (Offset) 的目的 <see cref="T:System.Data.OracleClient.OracleLob" />。</summary>
        <returns>已複製的位元組數目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 基礎資料類型的來源<xref:System.Data.OracleClient.OracleBFile>和目的地<xref:System.Data.OracleClient.OracleLob>必須相容。 比方說，您無法將二進位資料複製到目的地<xref:System.Data.OracleClient.OracleLob>具有字元資料類型。  
  
 您必須具有寫入存取權目的地<xref:System.Data.OracleClient.OracleLob>如<xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>才能正確執行的作業。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">目的 <see langword="OracleLob" /> 是 null 物件參考。</exception>
        <exception cref="T:System.InvalidOperationException">目的端為 null <see langword="OracleLob" />。  
  
 -或-  
  
 這個 <see langword="OracleBFile" /> 相關聯的連接已經關閉。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see langword="OracleBFile" /> 物件已關閉或處置。</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(int64 sourceOffset, class System.Data.OracleClient.OracleLob destination, int64 destinationOffset, int64 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (sourceOffset As Long, destination As OracleLob, destinationOffset As Long, amount As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(long sourceOffset, System::Data::OracleClient::OracleLob ^ destination, long destinationOffset, long amount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceOffset" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
        <Parameter Name="amount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceOffset">要複製的來源位移。</param>
        <param name="destination">目的地 <see cref="T:System.Data.OracleClient.OracleLob" />。</param>
        <param name="destinationOffset">要複製的目的位置。</param>
        <param name="amount">要複製的資料量，以位元組為單位。</param>
        <summary>以指定的資料量、來源位移和目的位移，從這個 <see cref="T:System.Data.OracleClient.OracleBFile" /> 複製到目的 <see cref="T:System.Data.OracleClient.OracleLob" />。</summary>
        <returns>已複製的位元組數目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 基礎資料類型的來源<xref:System.Data.OracleClient.OracleBFile>和目的地<xref:System.Data.OracleClient.OracleLob>必須相容。 比方說，您無法將二進位資料複製到目的地<xref:System.Data.OracleClient.OracleLob>具有字元資料類型。  
  
 您必須具有寫入存取權目的地<xref:System.Data.OracleClient.OracleLob>如<xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>才能正確執行的作業。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">數量參數的值小於零或大於 4 GB。</exception>
        <exception cref="T:System.ArgumentNullException">目的 <see langword="OracleLob" /> 是 null 物件參考。</exception>
        <exception cref="T:System.InvalidOperationException">目的端為 null <see langword="OracleLob" />。  
  
 -或-  
  
 這個 <see langword="OracleBFile" /> 相關聯的連接已經關閉。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see langword="OracleBFile" /> 物件已關閉或處置。</exception>
      </Docs>
    </Member>
    <Member MemberName="DirectoryName">
      <MemberSignature Language="C#" Value="public string DirectoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.DirectoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 DIRECTORY 物件的名稱，該物件與 <see cref="T:System.Data.OracleClient.OracleBFile" /> 物件關聯。</summary>
        <value>DIRECTORY 物件的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每個非 NULL<xref:System.Data.OracleClient.OracleBFile>物件都與定義基礎實體檔案的位置的兩個實體：  
  
-   Oracle DIRECTORY 物件 (檔案系統中目錄的資料庫別名) 及  
  
-   基礎實體檔案的檔名 (位於與 DIRECTORY 物件相關聯的目錄中)。  
  
 <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>屬性會傳回從 Oracle 資料庫的目錄物件的名稱。  
  
 如需有關建立及使用 Oracle `BFILE`，請參閱 Oracle 文件中的適當主題。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">嘗試呼叫已關閉或已處置之 <see langword="DirectoryName" /> 物件上的 <see langword="OracleBFile" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public bool FileExists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FileExists" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileExists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FileExists { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，表示作業系統中是否有包含 <see langword="BFILE" /> 資料的實體檔案存在。</summary>
        <value>
          如果有包含 <see langword="true" /> 資料的實體檔案存在，則為 <see langword="BFILE" />，否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Data.OracleClient.OracleBFile" /> 物件已關閉或處置。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see langword="BFILE" /> 相關聯的連接已經關閉。</exception>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得不含路徑的 <see langword="BFILE" /> 名稱。</summary>
        <value>BFILE 的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如<xref:System.Data.OracleClient.OracleBFile.Null>，則傳回空的字串。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Data.OracleClient.OracleBFile" /> 物件已關閉或處置。</exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>目前不支援。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出 <see cref="T:System.Data.OracleClient.OracleBFile" /> 是否為 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 資料流。</summary>
        <value>
          如果 <see cref="T:System.Data.OracleClient.OracleBFile" /> 為 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 資料流，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，傳回 <see cref="T:System.Data.OracleClient.OracleBFile" /> 物件相關聯之實體檔案的長度 (以位元組為單位)。</summary>
        <value>表示實體檔案位元組長度的長值。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">在關閉或處置資料流之後會呼叫方法。</exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleBFile Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.OracleClient.OracleBFile Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleBFile.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleBFile " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleBFile ^ Null;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示沒有繫結到實體檔案的 null <see cref="T:System.Data.OracleClient.OracleBFile" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.Null> 當您想要在執行比對作業時很有用<xref:System.Data.OracleClient.OracleBFile>來決定 null 屬性。  
  
 任何嘗試執行讀取的作業<xref:System.Data.OracleClient.OracleBFile.Null>物件成功，但不會傳回任何資料。 任何嘗試執行寫入作業上<xref:System.Data.OracleClient.OracleBFile.Null>物件產生例外狀況。 選取`BFILE`包含 null 值的資料行會傳回<xref:System.Data.OracleClient.OracleBFile.Null>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Data.OracleClient.OracleBFile" /> 資料流中目前的讀取位置。</summary>
        <value>
          <see cref="T:System.Data.OracleClient.OracleBFile" /> 資料流內目前的位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不支援搜尋到的任何位置超出資料流的長度。  
  
 `Position`屬性不會不追蹤的已耗用，略過，資料流，或兩者中的位元組數目。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">嘗試使用負值或大於資料流長度的值設定位置。</exception>
        <exception cref="T:System.ObjectDisposedException">在關閉或處置資料流之後會呼叫方法。</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">位元組陣列。 傳回這個方法時，緩衝區會包含指定的位元組陣列，其值介於 <c>offset</c> 和 (<c>offset</c> + <c>count</c>) 之間，並會由讀取自目前來源的位元組取代。</param>
        <param name="offset">
          <c>buffer</c> 中以零為起始的位元組位移，即開始儲存讀取自目前資料流之資料的位置。</param>
        <param name="count">自目前資料流讀取的最大位元組數。</param>
        <summary>自目前 <see cref="T:System.Data.OracleClient.OracleBFile" /> 讀取一位元組序列，並依所讀取的位元組數目進階資料流裡的位置。</summary>
        <returns>緩衝區所讀取的總位元組數。 如果目前無法取得足夠的位元組，則這個數目可能小於所要求的位元組數。如果已經到達資料流末端，則為零。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.Read%2A>方法讀取的最大`count`位元組從目前資料流並儲存在`buffer`開始`offset`。 資料流的目前位置前移讀取位元組數。不過，如果發生例外狀況，則資料流中目前的位置維持不變。 <xref:System.Data.OracleClient.OracleBFile.Read%2A> 傳回讀取的位元組數目。 只有位置是目前資料流結尾，傳回的值為零。 <xref:System.Data.OracleClient.OracleBFile.Read%2A> 會阻擋，直到可以讀取至少一個位元組的資料，確認沒有資料可供使用。 <xref:System.Data.OracleClient.OracleBFile.Read%2A> 已達到檔案結尾時，才會傳回 0。 <xref:System.Data.OracleClient.OracleBFile.Read%2A> 是免費傳回比要求的位元組更少，即使尚未達到資料流結尾。  
  
 任何嘗試存取已關閉<xref:System.Data.OracleClient.OracleBFile>使用<xref:System.Data.OracleClient.OracleBFile.Read%2A>或<xref:System.Data.OracleClient.OracleBFile.Seek%2A>方法再次開啟<xref:System.Data.OracleClient.OracleBFile>自動資料流。  
  
 下列 C# 範例會假設這個結構描述在 Oracle 資料表：  
  
```  
(col1 number, col2 BFILE)  
```  
  
 此範例示範如何使用<xref:System.Data.OracleClient.OracleBFile.Read%2A>和<xref:System.Data.OracleClient.OracleBFile.Seek%2A>方法來存取<xref:System.Data.OracleClient.OracleBFile>物件。  
  
```  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="offset" /> 和 <paramref name="count" /> 的總和大於緩衝區長度。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> 或 <paramref name="count" /> 為負。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see langword="BFILE" /> 相關聯的連接已經關閉。</exception>
        <exception cref="T:System.IO.IOException">發生 I/O 錯誤。</exception>
        <exception cref="T:System.ObjectDisposedException">在關閉或處置資料流之後會呼叫方法。</exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">相對於原點的位元組位移。 如果 <c>offset</c> 為負數，則新的位置會在 <c>origin</c> 乘以 <c>offset</c> 之指定位元組數所指定的位置之前。 如果 <c>offset</c> 為零，則新的位置會在 <c>origin</c> 所指定的位置。 如果 <c>offset</c> 為正數，則新的位置會在 <c>origin</c> 乘以 <c>offset</c> 之指定位元組數所指定的位置之後。</param>
        <param name="origin">
          <see langword="System.IO.SeekOrigin" /> 類型的值，表示用來取得新位置的參考點。</param>
        <summary>設定目前 <see cref="T:System.Data.OracleClient.OracleBFile" /> 資料流上的位置。</summary>
        <returns>目前資料流的新位置。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`offset`是負數，新的位置，才能在之前所指定的位置`origin`所指定的位元組數`offset`。 如果`offset`為零，新的位置必須所指定的位置是`origin`。 如果`offset`是正數，新的位置，才能遵循所指定的位置`origin`所指定的位元組數`offset`。  
  
 不支援搜尋到的任何位置超出資料流的長度。  
  
 任何嘗試存取已關閉<xref:System.Data.OracleClient.OracleBFile>使用<xref:System.Data.OracleClient.OracleBFile.Read%2A>或<xref:System.Data.OracleClient.OracleBFile.Seek%2A>方法再次開啟<xref:System.Data.OracleClient.OracleBFile>自動資料流。  
  
 下列 C# 範例會假設這個結構描述在 Oracle 資料表：  
  
```  
(col1 number, col2 BFILE)  
```  
  
 此範例示範如何使用<xref:System.Data.OracleClient.OracleBFile.Read%2A>和<xref:System.Data.OracleClient.OracleBFile.Seek%2A>方法來存取<xref:System.Data.OracleClient.OracleBFile>物件。  
  
```  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">嘗試使用負值或大於資料流長度的值設定位置。</exception>
        <exception cref="T:System.ObjectDisposedException">在關閉或處置資料流之後會呼叫方法。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetFileName">
      <MemberSignature Language="C#" Value="public void SetFileName (string directory, string file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFileName(string directory, string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFileName (directory As String, file As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFileName(System::String ^ directory, System::String ^ file);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory">含有實體檔案的目錄物件別名。</param>
        <param name="file">作業系統中的檔案名稱。</param>
        <summary>將 <see cref="T:System.Data.OracleClient.OracleBFile" /> 物件繫結到作業系統中不同的檔案。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>作業必須成功在交易內。 只要呼叫<xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>上`BFILE`關聯<xref:System.Data.OracleClient.OracleBFile>物件使用不同的檔案，但不是會更新 Oracle 資料表。 若要更新之後呼叫 Oracle 資料表<xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>，您必須呼叫`Update`方法<xref:System.Data.OracleClient.OracleDataAdapter>，然後認可交易。  
  
 一旦您擷取<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>或<xref:System.Data.OracleClient.OracleBFile.FileName%2A>屬性，在快取中<xref:System.Data.OracleClient.OracleBFile>物件，並不會受到任何複製<xref:System.Data.OracleClient.OracleBFile>物件的呼叫<xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>、 或的任何變更`BFILE`資料庫中。 也就是說，它們可能不是實際值`BFILE`伺服器中的物件。  
  
 此外，擷取可能是屬性 (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>或<xref:System.Data.OracleClient.OracleBFile.FileName%2A>) 會導致這兩個屬性值，以從伺服器擷取和快取中<xref:System.Data.OracleClient.OracleBFile>物件。  
  
 下列 C# 範例會假設這個結構描述在 Oracle 資料表：  
  
```  
(col1 number, col2 BFILE)  
```  
  
 此範例示範如何使用<xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>，<xref:System.Data.OracleClient.OracleBFile.Read%2A>和<xref:System.Data.OracleClient.OracleBFile.Seek%2A>方法來存取<xref:System.Data.OracleClient.OracleBFile>物件。  
  
```  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
        OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
            command.Transaction = connection.BeginTransaction();  
            BFile.SetFileName("TESTDIR", "File1.jpg");  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">作業必須位於交易內。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">目前不支援。</param>
        <summary>目前不支援。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">當叫用的方法不受支援，或者嘗試讀取、尋找或寫入不支援叫用功能的資料流時，所擲回的例外狀況。</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Array" /> 型別的 <see cref="T:System.Byte" />，其中含有 <see cref="T:System.Data.OracleClient.OracleBFile" /> 資料。</summary>
        <value>
          <see cref="T:System.Array" /> 型別的 <see cref="T:System.Byte" />，其中含有 <see cref="T:System.Data.OracleClient.OracleBFile" /> 資料。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.Value%2A>屬性讀取整個`BFILE`一次。  
  
> [!NOTE]
>  使用的好處`BFILE`s 是擷取大量的資料區塊 （chunk） 的用戶端的能力。 不過，當您使用<xref:System.Data.OracleClient.OracleBFile.Value%2A>，您以一個連續的區塊，可能會大幅增加應用程式的額外負荷取得 BFILE 資料行的所有資料。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">目前不支援。</param>
        <param name="offset">目前不支援。</param>
        <param name="count">目前不支援。</param>
        <summary>目前不支援。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">當叫用的方法不受支援，或者嘗試讀取、尋找或寫入不支援叫用功能的資料流時，所擲回的例外狀況。</exception>
      </Docs>
    </Member>
  </Members>
</Type>