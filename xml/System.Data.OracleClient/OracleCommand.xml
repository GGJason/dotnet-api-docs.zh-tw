<Type Name="OracleCommand" FullName="System.Data.OracleClient.OracleCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2400e3f6ffaf27fe1dc012542405610ee1e833f9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36684672" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleCommand : System.Data.Common.DbCommand, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommand extends System.Data.Common.DbCommand implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommand sealed : System::Data::Common::DbCommand, ICloneable" />
  <TypeSignature Language="F#" Value="type OracleCommand = class&#xA;    inherit DbCommand&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("OracleCommand has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2ee9b-101">表示要對資料庫執行的 SQL 陳述式或預存程序。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ee9b-101">Represents an SQL statement or stored procedure to execute against a database.</span>
      </span>
      <span data-ttu-id="2ee9b-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ee9b-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-103">此類型已被取代，並將在未來的.NET Framework 版本中移除。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-103">This type is deprecated and will be removed in a future version of the .NET Framework.</span></span> <span data-ttu-id="2ee9b-104">如需詳細資訊，請參閱[Oracle 和 ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md)。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-104">For more information, see [Oracle and ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span></span>  
  
 <span data-ttu-id="2ee9b-105"><xref:System.Data.OracleClient.OracleCommand>類別會提供對資料來源執行命令的下列方法：</span><span class="sxs-lookup"><span data-stu-id="2ee9b-105">The <xref:System.Data.OracleClient.OracleCommand> class provides the following methods for executing commands against a data source:</span></span>  
  
|<span data-ttu-id="2ee9b-106">項目</span><span class="sxs-lookup"><span data-stu-id="2ee9b-106">Item</span></span>|<span data-ttu-id="2ee9b-107">描述</span><span class="sxs-lookup"><span data-stu-id="2ee9b-107">Description</span></span>|  
|----------|-----------------|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>|<span data-ttu-id="2ee9b-108">執行傳回資料列的命令。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-108">Executes commands that return rows.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>|<span data-ttu-id="2ee9b-109">針對 <xref:System.Data.OracleClient.OracleCommand.Connection%2A> 執行 SQL 陳述式，並傳回受影響的資料列數。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-109">Executes an SQL statement against the <xref:System.Data.OracleClient.OracleCommand.Connection%2A> and returns the number of rows affected.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>|<span data-ttu-id="2ee9b-110">執行命令，例如 SQL INSERT、 DELETE、 UPDATE 和 SET 陳述式。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-110">Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>|<span data-ttu-id="2ee9b-111">從資料庫擷取單一值 （例如，彙總的值），做為.NET Framework 資料類型。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-111">Retrieves a single value (for example, an aggregate value) from a database as a .NET Framework data type.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>|<span data-ttu-id="2ee9b-112">從資料庫擷取單一值 （例如，彙總的值），做為特定的 Oracle 資料類型。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-112">Retrieves a single value (for example, an aggregate value) from a database as an Oracle-specific data type.</span></span>|  
  
 <span data-ttu-id="2ee9b-113">您可以重設<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>屬性和重複使用<xref:System.Data.OracleClient.OracleCommand>物件。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-113">You can reset the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property and reuse the <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="2ee9b-114">如果執行此命令會導致嚴重<xref:System.Data.OracleClient.OracleException>、<xref:System.Data.OracleClient.OracleConnection>可能會關閉。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-114">If execution of the command results in a fatal <xref:System.Data.OracleClient.OracleException>, the <xref:System.Data.OracleClient.OracleConnection> may close.</span></span> <span data-ttu-id="2ee9b-115">但是，使用者可以再次開啟連線，然後繼續進行。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-115">However, the user can reopen the connection and continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ee9b-116">不同於**命令**物件中的其他.NET Framework 資料提供者 （SQL Server、 OLE DB 和 ODBC）<xref:System.Data.OracleClient.OracleCommand>物件不支援<xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-116">Unlike the **Command** object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), the <xref:System.Data.OracleClient.OracleCommand> object does not support a <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> property.</span></span> <span data-ttu-id="2ee9b-117">設定命令逾時有任何作用，傳回的值也永遠是零。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-117">Setting a command timeout has no effect and the value returned is always zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ee9b-118">下列範例會使用<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>方法<xref:System.Data.OracleClient.OracleCommand>，連同<xref:System.Data.OracleClient.OracleDataReader>和<xref:System.Data.OracleClient.OracleConnection>、 從資料表選取資料列。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-118">The following example uses the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method of <xref:System.Data.OracleClient.OracleCommand>, along with <xref:System.Data.OracleClient.OracleDataReader> and <xref:System.Data.OracleClient.OracleConnection>, to select rows from a table.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-119">初始化 <see cref="T:System.Data.OracleClient.OracleCommand" /> 的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-119">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-120">初始化 <see cref="T:System.Data.OracleClient.OracleCommand" /> 的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-120">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-121">基底建構函式所有的欄位初始化成為其預設值。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-121">The base constructor initializes all fields to their default values.</span></span> <span data-ttu-id="2ee9b-122">下表顯示的執行個體的初始屬性值<xref:System.Data.OracleClient.OracleCommand>。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-122">The following table shows initial property values for an instance of <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
|<span data-ttu-id="2ee9b-123">屬性</span><span class="sxs-lookup"><span data-stu-id="2ee9b-123">Properties</span></span>|<span data-ttu-id="2ee9b-124">初始值</span><span class="sxs-lookup"><span data-stu-id="2ee9b-124">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|<span data-ttu-id="2ee9b-125">空字串 ("")</span><span class="sxs-lookup"><span data-stu-id="2ee9b-125">empty string ("")</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|<span data-ttu-id="2ee9b-126">null</span><span class="sxs-lookup"><span data-stu-id="2ee9b-126">null</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2ee9b-127">下列範例會建立<xref:System.Data.OracleClient.OracleCommand>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-127">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommand : string -&gt; System.Data.OracleClient.OracleCommand" Usage="new System.Data.OracleClient.OracleCommand commandText" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandText">
          <span data-ttu-id="2ee9b-128">查詢的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-128">The text of the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ee9b-129">使用查詢的文字，初始化 <see cref="T:System.Data.OracleClient.OracleCommand" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-129">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommand : string * System.Data.OracleClient.OracleConnection -&gt; System.Data.OracleClient.OracleCommand" Usage="new System.Data.OracleClient.OracleCommand (commandText, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="commandText">
          <span data-ttu-id="2ee9b-130">查詢的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-130">The text of the query.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="2ee9b-131">
            <see cref="T:System.Data.OracleClient.OracleConnection" /> 物件，表示與資料庫的連接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-131">An <see cref="T:System.Data.OracleClient.OracleConnection" /> object that represents the connection to a database.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ee9b-132">使用查詢文字和 <see cref="T:System.Data.OracleClient.OracleCommand" /> 物件來初始化 <see cref="T:System.Data.OracleClient.OracleConnection" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-132">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query and an <see cref="T:System.Data.OracleClient.OracleConnection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ee9b-133">下列範例會建立<xref:System.Data.OracleClient.OracleCommand>。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-133">The following example creates an <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection, System.Data.OracleClient.OracleTransaction tx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection, class System.Data.OracleClient.OracleTransaction tx) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection, tx As OracleTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection, System::Data::OracleClient::OracleTransaction ^ tx);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommand : string * System.Data.OracleClient.OracleConnection * System.Data.OracleClient.OracleTransaction -&gt; System.Data.OracleClient.OracleCommand" Usage="new System.Data.OracleClient.OracleCommand (commandText, connection, tx)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
        <Parameter Name="tx" Type="System.Data.OracleClient.OracleTransaction" />
      </Parameters>
      <Docs>
        <param name="commandText">
          <span data-ttu-id="2ee9b-134">查詢的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-134">The text of the query.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="2ee9b-135">
            <see cref="T:System.Data.OracleClient.OracleConnection" /> 物件，表示與資料庫的連接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-135">An <see cref="T:System.Data.OracleClient.OracleConnection" /> object that represents the connection to a database.</span>
          </span>
        </param>
        <param name="tx">
          <span data-ttu-id="2ee9b-136">
            <see cref="T:System.Data.OracleClient.OracleCommand" /> 執行的所在 <see cref="T:System.Data.OracleClient.OracleTransaction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-136">The <see cref="T:System.Data.OracleClient.OracleTransaction" /> in which the <see cref="T:System.Data.OracleClient.OracleCommand" /> executes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ee9b-137">使用查詢文字、<see cref="T:System.Data.OracleClient.OracleCommand" /> 物件和 <see cref="T:System.Data.OracleClient.OracleConnection" /> 來初始化 <see cref="T:System.Data.OracleClient.OracleTransaction" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-137">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query, an <see cref="T:System.Data.OracleClient.OracleConnection" /> object, and an <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-138">下表顯示這項實作的執行個體的初始屬性值<xref:System.Data.OracleClient.OracleCommand>。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-138">The following table shows initial property values for an instance of this implementation of the <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
|<span data-ttu-id="2ee9b-139">屬性</span><span class="sxs-lookup"><span data-stu-id="2ee9b-139">Properties</span></span>|<span data-ttu-id="2ee9b-140">初始值</span><span class="sxs-lookup"><span data-stu-id="2ee9b-140">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|<span data-ttu-id="2ee9b-141">新<xref:System.Data.OracleClient.OracleConnection>也就是值`connection`參數。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-141">A new <xref:System.Data.OracleClient.OracleConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="2ee9b-142">您可以變更任何這些參數的值設定相關的屬性。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-142">You can change the value for any of these parameters by setting the related property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ee9b-143">下列範例會建立<xref:System.Data.OracleClient.OracleCommand>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-143">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberSignature Language="F#" Value="override this.Cancel : unit -&gt; unit" Usage="oracleCommand.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-144">嘗試取消 <see cref="T:System.Data.OracleClient.OracleCommand" /> 的執行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-144">Attempts to cancel the execution of an <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-145">如果沒有要取消項目，會發生任何事。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-145">If there is nothing to cancel, nothing happens.</span></span> <span data-ttu-id="2ee9b-146">不過，如果正在進行命令，而取消作業的嘗試失敗，則不會產生任何例外狀況 (Exception)。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-146">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ee9b-147">下列範例會建立<xref:System.Data.OracleClient.OracleCommand>、 加以執行，然後取消執行。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-147">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, executes it, then cancels the execution.</span></span> <span data-ttu-id="2ee9b-148">若要完成這項作業，方法會傳遞是 SQL SELECT 陳述式的字串，並連接到資料庫所用的字串。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-148">To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="oracleCommand.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-149">建立這個 <see cref="T:System.Data.OracleClient.OracleCommand" /> 物件的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-149">Creates a copy of this <see cref="T:System.Data.OracleClient.OracleCommand" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ee9b-150">新 <see cref="T:System.Data.OracleClient.OracleCommand" /> 物件，其中所有屬性值都與原始值相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-150">A new <see cref="T:System.Data.OracleClient.OracleCommand" /> object in which all property values are the same as the original.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Data.OracleClient.OracleCommand.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-151">取得或設定要針對資料庫執行的 SQL 陳述式或預存程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-151">Gets or sets the SQL statement or stored procedure to execute against the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ee9b-152">要執行的 SQL 陳述式或預存程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-152">The SQL statement or stored procedure to execute.</span>
          </span>
          <span data-ttu-id="2ee9b-153">預設值為空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-153">The default value is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-154">當<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>屬性設定為`StoredProcedure`、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>屬性應該設定為預存程序的名稱。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-154">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="2ee9b-155">使用者可能需要使用逸出字元語法，如果預存程序名稱包含任何特殊字元。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-155">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="2ee9b-156">當您呼叫其中一個執行方法時，命令會執行這個預存程序。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-156">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="2ee9b-157">傳遞參數至 SQL 陳述式所呼叫的.NET Framework Data Provider for Oracle 不支援問號 （？） 預留位置<xref:System.Data.OracleClient.OracleCommand>的`CommandType.Text`。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-157">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="2ee9b-158">在此情況下，您必須使用具名的參數。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-158">In this case, named parameters must be used.</span></span> <span data-ttu-id="2ee9b-159">例如: </span><span class="sxs-lookup"><span data-stu-id="2ee9b-159">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="2ee9b-160">當使用具名參數的 SQL 陳述式中呼叫<xref:System.Data.OracleClient.OracleCommand>的`CommandType.Text`，您必須在參數名稱，以冒號 （:）。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-160">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="2ee9b-161">不過，在預存程序，或您的程式碼中的其他位置的具名參數 (例如，當加入<xref:System.Data.OracleClient.OracleParameter>物件加入至<xref:System.Data.OracleClient.OracleCommand.Parameters%2A>屬性)，不會在之前使用冒號 （:），為具名的參數。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-161">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="2ee9b-162">.NET Framework Data Provider for Oracle 都會自動提供冒號。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-162">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ee9b-163">下列範例會建立<xref:System.Data.OracleClient.OracleCommand>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-163">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.OracleClient.OracleCommand.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-164">取得或設定結束執行命令的嘗試並產生錯誤之前的等待時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-164">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ee9b-165">等待命令執行的時間 (以秒為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-165">The time (in seconds) to wait for the command to execute.</span>
          </span>
          <span data-ttu-id="2ee9b-166">預設值為 30 秒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-166">The default value is 30 seconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-167"><xref:System.ArgumentException>如果就會產生受指派<xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A>屬性值小於 0。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-167">An <xref:System.ArgumentException> is generated if the assigned <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> property value is less than 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberSignature Language="F#" Value="member this.CommandType : System.Data.CommandType with get, set" Usage="System.Data.OracleClient.OracleCommand.CommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-168">取得或設定值，表示如何解譯 <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-168">Gets or sets a value indicating how the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> property is interpreted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ee9b-169">其中一個 <see cref="T:System.Data.CommandType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-169">One of the <see cref="T:System.Data.CommandType" /> values.</span>
          </span>
          <span data-ttu-id="2ee9b-170">預設值為 <see langword="Text" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-170">The default is <see langword="Text" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-171">當<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>屬性設定為`StoredProcedure`，您應該設定<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>完整的 Oracle call 語法的屬性。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-171">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, you should set the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property to the full Oracle call syntax.</span></span> <span data-ttu-id="2ee9b-172">命令再執行這個預存程序，當您呼叫其中一種 Execute 方法 (例如，<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>或<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>)。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-172">The command then executes this stored procedure when you call one of the Execute methods (for example, <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> or <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).</span></span>  
  
 <span data-ttu-id="2ee9b-173"><xref:System.Data.OracleClient.OracleCommand.Connection%2A>，<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>和<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>無法設定屬性，如果目前的連接正在執行 execute 或擷取作業。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-173">The <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> and <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="2ee9b-174">傳遞參數至 SQL 陳述式所呼叫的.NET Framework Data Provider for Oracle 不支援問號 （？） 預留位置<xref:System.Data.OracleClient.OracleCommand>的`CommandType.Text`。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-174">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="2ee9b-175">在此情況下，您必須使用具名的參數。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-175">In this case, named parameters must be used.</span></span> <span data-ttu-id="2ee9b-176">例如: </span><span class="sxs-lookup"><span data-stu-id="2ee9b-176">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="2ee9b-177">當使用具名參數的 SQL 陳述式中呼叫<xref:System.Data.OracleClient.OracleCommand>的`CommandType.Text`，您必須在參數名稱，以冒號 （:）。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-177">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="2ee9b-178">不過，在預存程序，或您的程式碼中的其他位置的具名參數 (例如，當加入<xref:System.Data.OracleClient.OracleParameter>物件加入至<xref:System.Data.OracleClient.OracleCommand.Parameters%2A>屬性)，不會在之前使用冒號 （:），為具名的參數。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-178">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="2ee9b-179">.NET Framework Data Provider for Oracle 都會自動提供冒號。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-179">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ee9b-180">下列範例會建立衍生類別的執行個體<xref:System.Data.OracleClient.OracleCommand>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-180">The following example creates an instance of a derived class <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ee9b-181">這個值不是有效的 <see cref="T:System.Data.CommandType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-181">The value was not a valid <see cref="T:System.Data.CommandType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); void set(System::Data::OracleClient::OracleConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.OracleClient.OracleConnection with get, set" Usage="System.Data.OracleClient.OracleCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-182">取得或設定 <see cref="T:System.Data.OracleClient.OracleCommand" /> 的這個執行個體所使用的 <see cref="T:System.Data.OracleClient.OracleConnection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-182">Gets or sets the <see cref="T:System.Data.OracleClient.OracleConnection" /> used by this instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ee9b-183">資料來源的連接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-183">The connection to a data source.</span>
          </span>
          <span data-ttu-id="2ee9b-184">預設為 Null 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-184">The default is a null value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-185">您不能設定<xref:System.Data.OracleClient.OracleCommand.Connection%2A>， <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>，和<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>如果目前的連接正在執行 execute 或提取作業的屬性。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-185">You cannot set the <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, and <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="2ee9b-186">如果在交易進行時設定 <xref:System.Data.OracleClient.OracleCommand.Connection%2A>，且 <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> 屬性不是 null，則會產生 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-186">If you set <xref:System.Data.OracleClient.OracleCommand.Connection%2A> while a transaction is in progress and the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated.</span></span> <span data-ttu-id="2ee9b-187">如果您設定<xref:System.Data.OracleClient.OracleCommand.Connection%2A>交易已經認可或回復之後和<xref:System.Data.OracleClient.OracleCommand.Transaction%2A>屬性不是 null，<xref:System.Data.OracleClient.OracleCommand.Transaction%2A>屬性設為 null 的值。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-187">If you set <xref:System.Data.OracleClient.OracleCommand.Connection%2A> after the transaction has been committed or rolled back, and the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is not null, the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is then set to a null value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ee9b-188">下列範例會建立<xref:System.Data.OracleClient.OracleCommand>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-188">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Connection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Connection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ee9b-189">當交易正在進行中時，<see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> 屬性會變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-189">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> property was changed while a transaction was in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateDbParameter : unit -&gt; System.Data.Common.DbParameter" Usage="oracleCommand.CreateDbParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As OracleParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleParameter ^ CreateParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateParameter : unit -&gt; System.Data.OracleClient.OracleParameter" Usage="oracleCommand.CreateParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-190">建立 <see cref="T:System.Data.OracleClient.OracleParameter" /> 物件的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-190">Creates a new instance of an <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ee9b-191">
            <see cref="T:System.Data.OracleClient.OracleParameter" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-191">An <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-192"><xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A>方法是強類型版本的<xref:System.Data.IDbCommand.CreateParameter%2A>。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-192">The <xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A> method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection with get, set" Usage="System.Data.OracleClient.OracleCommand.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbParameterCollection : System.Data.Common.DbParameterCollection" Usage="System.Data.OracleClient.OracleCommand.DbParameterCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbTransaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.OracleClient.OracleCommand.DbTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeVisible : bool with get, set" Usage="System.Data.OracleClient.OracleCommand.DesignTimeVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-193">取得或設定值，指出命令物件是否應該在自訂介面控制項中顯示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-193">Gets or sets a value indicating whether the command object should be visible in a customized interface control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ee9b-194">如果命令物件應該在控制項中顯示，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-194">
              <see langword="true" />, if the command object should be visible in a control; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2ee9b-195">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-195">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReader : System.Data.CommandBehavior -&gt; System.Data.Common.DbDataReader" Usage="oracleCommand.ExecuteDbDataReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQuery : unit -&gt; int" Usage="oracleCommand.ExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-196">針對 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> 執行 SQL 陳述式，並傳回受影響的資料列數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-196">Executes an SQL statement against the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and returns the number of rows affected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ee9b-197">對 UPDATE、INSERT 和 DELETE 陳述式而言，傳回值是受命令影響的資料列數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-197">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span>
          </span>
          <span data-ttu-id="2ee9b-198">對於 CREATE TABLE 和 DROP TABLE 陳述式，傳回值為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-198">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span>
          </span>
          <span data-ttu-id="2ee9b-199">對其他類型的陳述式而言，傳回值為 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-199">For all other types of statements, the return value is -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-200">您可以使用<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>來執行資料庫目錄作業 （例如，查詢資料庫的結構或建立資料庫物件，例如資料表）; 或若要變更的資料在資料庫中，而不使用<xref:System.Data.DataSet>、 藉由執行更新、 插入或刪除陳述式。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-200">You can use <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="2ee9b-201">雖然<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>不傳回任何資料列、 任何輸出參數或傳回對應至參數的值會以資料填入。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-201">Although <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="2ee9b-202">對 UPDATE、INSERT 和 DELETE 陳述式而言，傳回值是受命令影響的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-202">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="2ee9b-203">對於 CREATE TABLE 和 DROP TABLE 陳述式，傳回值為 0。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-203">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span></span> <span data-ttu-id="2ee9b-204">對其他類型的陳述式而言，傳回值為 -1。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-204">For all other types of statements, the return value is -1.</span></span> <span data-ttu-id="2ee9b-205">如果需要進行復原，傳回值也是-1。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-205">If a rollback occurs, the return value is also -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ee9b-206">下列範例會建立<xref:System.Data.OracleClient.OracleCommand>，然後使用執行<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-206">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it by using <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>.</span></span> <span data-ttu-id="2ee9b-207">此範例會傳遞 （例如 UPDATE、 INSERT 或 DELETE） 的 SQL 陳述式的字串，並要用來連接到資料庫的字串。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-207">The example is passed a string that is an SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ee9b-208">連接不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-208">The connection does not exist.</span>
          </span>
          <span data-ttu-id="2ee9b-209">-或-  連線未開啟。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-209">-or-  The connection is not open.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteOracleNonQuery (out System.Data.OracleClient.OracleString rowid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteOracleNonQuery([out] valuetype System.Data.OracleClient.OracleString&amp; rowid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleNonQuery (ByRef rowid As OracleString) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteOracleNonQuery([Runtime::InteropServices::Out] System::Data::OracleClient::OracleString % rowid);" />
      <MemberSignature Language="F#" Value="member this.ExecuteOracleNonQuery :  -&gt; int" Usage="oracleCommand.ExecuteOracleNonQuery rowid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowid" Type="System.Data.OracleClient.OracleString&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rowid">
          <span data-ttu-id="2ee9b-210">伺服器中實際資料列 ID 的 Base64 字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-210">A base64 string representation of the actual row ID in the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ee9b-211">針對 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> 執行 SQL 陳述式，並傳回受影響的資料列數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-211">Executes an SQL statement against the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and returns the number of rows affected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ee9b-212">對 UPDATE、INSERT 和 DELETE 陳述式而言，傳回值是受命令影響的資料列數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-212">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span>
          </span>
          <span data-ttu-id="2ee9b-213">對於 CREATE TABLE 和 DROP TABLE 陳述式，傳回值為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-213">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span>
          </span>
          <span data-ttu-id="2ee9b-214">對其他類型的陳述式而言，傳回值為 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-214">For all other types of statements, the return value is -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-215">您可以使用<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>來執行資料庫目錄作業 （例如，查詢資料庫的結構或建立資料庫物件，例如資料表）; 或若要變更的資料在資料庫中，而不使用<xref:System.Data.DataSet>、 藉由執行更新、 插入或刪除陳述式。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-215">You can use <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="2ee9b-216"><xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> 不同於<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>，會傳回`rowid`做為輸出參數，如果執行會影響只有一個資料列的 INSERT、 DELETE 或 UPDATE 陳述式。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-216"><xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> differs from <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> in that it returns `rowid` as an output parameter if you are executing an INSERT, DELETE, or UPDATE statement that affects exactly one row.</span></span> <span data-ttu-id="2ee9b-217">這可讓您用來唯一識別 Oracle 資料庫時，可讓您以提升效能，在後續的相關查詢中的資料列。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-217">This allows you to uniquely identify a row in the Oracle database, which can allow you to increase performance in subsequent, related queries.</span></span>  
  
 <span data-ttu-id="2ee9b-218">雖然<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>不傳回任何資料列、 任何輸出參數或傳回對應至參數的值會以資料填入。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-218">Although <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ee9b-219">連接不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-219">The connection does not exist.</span>
          </span>
          <span data-ttu-id="2ee9b-220">-或-  連線未開啟。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-220">-or-  The connection is not open.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleScalar">
      <MemberSignature Language="C#" Value="public object ExecuteOracleScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ExecuteOracleScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteOracleScalar();" />
      <MemberSignature Language="F#" Value="member this.ExecuteOracleScalar : unit -&gt; obj" Usage="oracleCommand.ExecuteOracleScalar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-221">執行查詢，並傳回查詢當做 Oracle 特定資料型別所傳回的結果集中第一個資料列的第一個資料行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-221">Executes the query, and returns the first column of the first row in the result set returned by the query as an Oracle-specific data type.</span>
          </span>
          <span data-ttu-id="2ee9b-222">額外的資料行或資料列都會遭到忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-222">Extra columns or rows are ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ee9b-223">做為 Oracle 特定資料型別之結果集第一個資料列的第一個資料行；而如果結果是 <see langword="REF CURSOR" />，則為 Null 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-223">The first column of the first row in the result set as an Oracle-specific data type, or a null reference if the result is a <see langword="REF CURSOR" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-224">使用<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>方法來從資料庫擷取單一值 （例如，彙總的值）。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-224">Use the <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="2ee9b-225">這需要較少的程式碼比使用<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>方法，這個方法，然後執行 產生單一值從傳回的資料所需的作業<xref:System.Data.OracleClient.OracleDataReader>。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-225">This requires less code than using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value from the data returned by an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="2ee9b-226">一般<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>查詢可以進行格式化，如下列 C# 範例所示：</span><span class="sxs-lookup"><span data-stu-id="2ee9b-226">A typical <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
command.CommandText = "SELECT COUNT(*) AS NumberOfRegions FROM Region";  
count = command.ExecuteOracleScalar();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-227">傳送 <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> 至 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />，並建置 <see cref="T:System.Data.OracleClient.OracleDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-227">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : unit -&gt; System.Data.OracleClient.OracleDataReader" Usage="oracleCommand.ExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-228">傳送 <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> 至 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />，並建置 <see cref="T:System.Data.OracleClient.OracleDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-228">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ee9b-229">
            <see cref="T:System.Data.OracleClient.OracleDataReader" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-229">An <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-230">當<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>屬性設定為`StoredProcedure`、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>屬性應該設定為預存程序的名稱。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-230">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="2ee9b-231">命令再執行這個預存程序，當您呼叫<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-231">The command then executes this stored procedure when you call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="2ee9b-232">多個<xref:System.Data.OracleClient.OracleDataReader>可以開啟任何給定的時間。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-232">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ee9b-233">下列範例會建立<xref:System.Data.OracleClient.OracleCommand>，然後執行它，藉由傳遞字串是 SQL SELECT 陳述式和用來連接到資料來源的字串。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-233">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.OracleClient.OracleDataReader" Usage="oracleCommand.ExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">
          <span data-ttu-id="2ee9b-234">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-234">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ee9b-235">傳送 <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> 至 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />，並使用其中一個 <see cref="T:System.Data.CommandBehavior" /> 值來建立 <see cref="T:System.Data.OracleClient.OracleDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-235">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />, and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ee9b-236">
            <see cref="T:System.Data.OracleClient.OracleDataReader" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-236">An <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-237">如果您預期您的 SQL 陳述式會傳回單一資料列，則指定`SingleRow`為<xref:System.Data.CommandBehavior>值可能會改善應用程式的效能。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-237">If you expect your SQL statement to return only a single row, specifying `SingleRow` as the <xref:System.Data.CommandBehavior> value may improve application performance.</span></span>  
  
 <span data-ttu-id="2ee9b-238">當<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>屬性設定為`StoredProcedure`、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>屬性應該設定為預存程序的名稱。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-238">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="2ee9b-239">命令再執行這個預存程序，當您呼叫<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-239">The command then executes this stored procedure when you call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="2ee9b-240"><xref:System.Data.OracleClient.OracleDataReader>支援特殊模式可以讓您有效率地讀取大型二進位值。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-240">The <xref:System.Data.OracleClient.OracleDataReader> supports a special mode that enables large binary values to be read efficiently.</span></span> <span data-ttu-id="2ee9b-241">如需詳細資訊，請參閱`SequentialAccess`設定<xref:System.Data.CommandBehavior>。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-241">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="2ee9b-242">多個<xref:System.Data.OracleClient.OracleDataReader>可以開啟任何給定的時間。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-242">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ee9b-243">下列範例會建立<xref:System.Data.OracleClient.OracleCommand>，然後藉由傳遞字串，是 SQL SELECT 陳述式和字串，用來連接到資料庫中執行它。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-243">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the database.</span></span> <span data-ttu-id="2ee9b-244"><xref:System.Data.CommandBehavior> 然後將設定為<xref:System.Data.CommandBehavior.CloseConnection>。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-244"><xref:System.Data.CommandBehavior> is then set to <xref:System.Data.CommandBehavior.CloseConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalar : unit -&gt; obj" Usage="oracleCommand.ExecuteScalar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-245">執行查詢，並傳回查詢當做 .NET Framework 資料型別所傳回的結果集 (Result Set) 第一個資料列的第一個資料行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-245">Executes the query, and returns the first column of the first row in the result set returned by the query as a .NET Framework data type.</span>
          </span>
          <span data-ttu-id="2ee9b-246">額外的資料行或資料列都會遭到忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-246">Extra columns or rows are ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ee9b-247">做為 .NET Framework 資料型別之結果集第一個資料列的第一個資料行；而如果結果集是空的或結果是 <see langword="REF CURSOR" />，則為 null 參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-247">The first column of the first row in the result set as a .NET Framework data type, or a null reference if the result set is empty or the result is a <see langword="REF CURSOR" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-248">使用<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>方法來從資料庫擷取單一值 （例如，彙總的值）。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-248">Use the <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="2ee9b-249">這需要較少的程式碼比使用<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>方法，這個方法，然後執行 產生單一值從傳回的資料所需的作業<xref:System.Data.OracleClient.OracleDataReader>。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-249">This requires less code than using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value from the data returned by an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="2ee9b-250">一般<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>查詢可以進行格式化，如下列 C# 範例所示：</span><span class="sxs-lookup"><span data-stu-id="2ee9b-250">A typical <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "SELECT COUNT(*) FROM Region";  
Int32 count = (int32) ExecuteScalar();  
```  
  
   
  
## Examples  
 <span data-ttu-id="2ee9b-251">下列範例會建立<xref:System.Data.OracleClient.OracleCommand>，然後執行它使用<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-251">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it using <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="2ee9b-252">此範例會傳遞是彙總的結果，傳回 SQL 陳述式的字串，並要用來連接到資料庫的字串。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-252">The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As OracleParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleParameterCollection ^ Parameters { System::Data::OracleClient::OracleParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.OracleClient.OracleParameterCollection" Usage="System.Data.OracleClient.OracleCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-253">取得 <see cref="T:System.Data.OracleClient.OracleParameterCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-253">Gets the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ee9b-254">SQL 陳述式或預存程序的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-254">The parameters of the SQL statement or stored procedure.</span>
          </span>
          <span data-ttu-id="2ee9b-255">預設為空集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-255">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-256">當<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>屬性設定為`StoredProcedure`、<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>屬性應該設定為預存程序的名稱。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-256">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="2ee9b-257">使用者可能需要使用逸出字元語法，如果預存程序名稱包含任何特殊字元。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-257">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="2ee9b-258">當您呼叫其中一個執行方法時，命令會執行這個預存程序。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-258">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="2ee9b-259">傳遞參數至 SQL 陳述式所呼叫的.NET Framework Data Provider for Oracle 不支援問號 （？） 預留位置<xref:System.Data.OracleClient.OracleCommand>的`CommandType.Text`。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-259">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="2ee9b-260">在此情況下，您必須使用具名的參數。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-260">In this case, named parameters must be used.</span></span> <span data-ttu-id="2ee9b-261">例如: </span><span class="sxs-lookup"><span data-stu-id="2ee9b-261">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="2ee9b-262">當使用具名參數的 SQL 陳述式中呼叫<xref:System.Data.OracleClient.OracleCommand>的`CommandType.Text`，您必須在參數名稱，以冒號 （:）。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-262">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="2ee9b-263">不過，在預存程序，或您的程式碼中的其他位置的具名參數 (例如，當加入<xref:System.Data.OracleClient.OracleParameter>物件加入至<xref:System.Data.OracleClient.OracleCommand.Parameters%2A>屬性)，不會在之前使用冒號 （:），為具名的參數。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-263">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="2ee9b-264">.NET Framework Data Provider for Oracle 都會自動提供冒號。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-264">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ee9b-265">下列範例會建立<xref:System.Data.OracleClient.OracleCommand>並顯示它的參數。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-265">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and displays its parameters.</span></span> <span data-ttu-id="2ee9b-266">若要完成這項作業，方法會傳遞<xref:System.Data.OracleClient.OracleConnection>，是 SQL SELECT 陳述式和陣列的查詢字串<xref:System.Data.OracleClient.OracleParameter>物件。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-266">To accomplish this, the method is passed an <xref:System.Data.OracleClient.OracleConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OracleClient.OracleParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberSignature Language="F#" Value="override this.Prepare : unit -&gt; unit" Usage="oracleCommand.Prepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-267">在資料來源上建立命令的準備好的 (或已編譯的) 版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-267">Creates a prepared (or compiled) version of the command at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-268">之前先呼叫<xref:System.Data.OracleClient.OracleCommand.Prepare%2A>，先備妥的陳述式中指定的每個參數的資料類型。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-268">Before you call <xref:System.Data.OracleClient.OracleCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2ee9b-269">
            <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> 未設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-269">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> is not set.</span>
          </span>
          <span data-ttu-id="2ee9b-270">-或-  <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> 不是 <see cref="M:System.Data.OracleClient.OracleConnection.Open" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-270">-or-  The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> is not <see cref="M:System.Data.OracleClient.OracleConnection.Open" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberSignature Language="F#" Value="member this.ResetCommandTimeout : unit -&gt; unit" Usage="oracleCommand.ResetCommandTimeout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-271">重設 <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /> 屬性為預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-271">Resets the <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /> property to the default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-272">預設值<xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A>為 30 秒。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-272">The default value of the <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> is 30 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleTransaction ^ Transaction { System::Data::OracleClient::OracleTransaction ^ get(); void set(System::Data::OracleClient::OracleTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.OracleClient.OracleTransaction with get, set" Usage="System.Data.OracleClient.OracleCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-273">取得或設定在其中執行 <see cref="T:System.Data.OracleClient.OracleTransaction" /> 的 <see cref="T:System.Data.OracleClient.OracleCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-273">Gets or sets the <see cref="T:System.Data.OracleClient.OracleTransaction" /> within which the <see cref="T:System.Data.OracleClient.OracleCommand" /> executes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ee9b-274">
            <see cref="T:System.Data.OracleClient.OracleTransaction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-274">An <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span>
          </span>
          <span data-ttu-id="2ee9b-275">預設為 Null 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-275">The default is a null value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-276">您不能設定<xref:System.Data.OracleClient.OracleCommand.Transaction%2A>屬性，如果它已設定為特定值，而且命令正在執行。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-276">You cannot set the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing.</span></span> <span data-ttu-id="2ee9b-277">如果您設定交易屬性<xref:System.Data.OracleClient.OracleTransaction>未連線到相同的物件<xref:System.Data.OracleClient.OracleConnection>為<xref:System.Data.OracleClient.OracleCommand>物件時，會擲回例外狀況，下次您嘗試執行陳述式。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-277">If you set the transaction property to an <xref:System.Data.OracleClient.OracleTransaction> object that is not connected to the same <xref:System.Data.OracleClient.OracleConnection> as the <xref:System.Data.OracleClient.OracleCommand> object, an exception will be thrown the next time you attempt to execute a statement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedRowSource : System.Data.UpdateRowSource with get, set" Usage="System.Data.OracleClient.OracleCommand.UpdatedRowSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ee9b-278">取得或設定數值，指定 <see langword="Update" /> 應該如何將命令結果套用到 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-278">Gets or sets a value that specifies how the <see langword="Update" /> method should apply command results to the <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ee9b-279">其中一個 <see cref="T:System.Data.UpdateRowSource" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-279">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ee9b-280">預設值<xref:System.Data.UpdateRowSource>值是`Both`除非命令會自動產生 (如果是做為<xref:System.Data.OracleClient.OracleCommandBuilder>)，預設值是在此情況下`None`。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-280">The default <xref:System.Data.UpdateRowSource> value is `Both` unless the command is automatically generated (as in the case of the <xref:System.Data.OracleClient.OracleCommandBuilder>), in which case the default is `None`.</span></span>  
  
 <span data-ttu-id="2ee9b-281">如需有關使用<xref:System.Data.UpdateRowSource>屬性，請參閱[DataAdapter 的參數](~/docs/framework/data/adonet/dataadapter-parameters.md)。</span><span class="sxs-lookup"><span data-stu-id="2ee9b-281">For more information about using the <xref:System.Data.UpdateRowSource> property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2ee9b-282">輸入的值不是其中一個 <see cref="T:System.Data.UpdateRowSource" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ee9b-282">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>