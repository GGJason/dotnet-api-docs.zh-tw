<Type Name="OracleDataReader" FullName="System.Data.OracleClient.OracleDataReader">
  <TypeSignature Language="C#" Value="public sealed class OracleDataReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleDataReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleDataReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleDataReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleDataReader sealed : System::Data::Common::DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="363bf-101">提供自資料來源讀取順向資料流的資料列的方法。</span><span class="sxs-lookup"><span data-stu-id="363bf-101">Provides a way of reading a forward-only stream of data rows from a data source.</span></span> <span data-ttu-id="363bf-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="363bf-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-103">若要建立<xref:System.Data.OracleClient.OracleDataReader>，您必須呼叫<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>方法<xref:System.Data.OracleClient.OracleCommand>物件，而不是直接使用建構函式。</span><span class="sxs-lookup"><span data-stu-id="363bf-103">To create an <xref:System.Data.OracleClient.OracleDataReader>, you must call the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method of the <xref:System.Data.OracleClient.OracleCommand> object, rather than directly using a constructor.</span></span>  
  
 <span data-ttu-id="363bf-104">結果集的變更另一個處理序或執行緒正在讀取資料時，可能會顯示使用者的<xref:System.Data.OracleClient.OracleDataReader>。</span><span class="sxs-lookup"><span data-stu-id="363bf-104">Changes made to a resultset by another process or thread while data is being read may be visible to the user of the <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="363bf-105"><xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> 和<xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>屬性之後，您可以呼叫<xref:System.Data.OracleClient.OracleDataReader>已關閉。</span><span class="sxs-lookup"><span data-stu-id="363bf-105"><xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> and <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.OracleClient.OracleDataReader> is closed.</span></span> <span data-ttu-id="363bf-106">在某些情況下，您必須呼叫<xref:System.Data.OracleClient.OracleDataReader.Close%2A>才能呼叫<xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>。</span><span class="sxs-lookup"><span data-stu-id="363bf-106">In some cases, you must call <xref:System.Data.OracleClient.OracleDataReader.Close%2A> before you can call <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>.</span></span>  
  
 <span data-ttu-id="363bf-107">多個<xref:System.Data.OracleClient.OracleDataReader>可以開啟任何給定的時間。</span><span class="sxs-lookup"><span data-stu-id="363bf-107">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
 <span data-ttu-id="363bf-108">下列兩個 Visual Basic 範例會示範如何使用<xref:System.Data.OracleClient.OracleDataReader>擷取 Oracle `REF CURSOR`。</span><span class="sxs-lookup"><span data-stu-id="363bf-108">The following two Visual Basic examples demonstrate how to use an <xref:System.Data.OracleClient.OracleDataReader> to retrieve an Oracle `REF CURSOR`.</span></span> <span data-ttu-id="363bf-109">這些範例使用定義在 Oracle Scott/Tiger 結構描述中，而且需要下列 PL/SQL 封裝及封裝主體的資料表。</span><span class="sxs-lookup"><span data-stu-id="363bf-109">These examples use tables that are defined in the Oracle Scott/Tiger schema, and require the following PL/SQL package and package body.</span></span> <span data-ttu-id="363bf-110">您必須建立這些伺服器使用的範例。</span><span class="sxs-lookup"><span data-stu-id="363bf-110">You must create these on your server to use the examples.</span></span>  
  
 <span data-ttu-id="363bf-111">在 Oracle 伺服器上建立下列 Oracle 封裝。</span><span class="sxs-lookup"><span data-stu-id="363bf-111">Create the following Oracle package on the Oracle server.</span></span>  
  
```  
CREATE OR REPLACE PACKAGE CURSPKG AS   
   TYPE T_CURSOR IS REF CURSOR;   
   PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
      IO_CURSOR IN OUT T_CURSOR);   
   PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
      DEPTCURSOR OUT T_CURSOR);  
END CURSPKG;  
/  
```  
  
 <span data-ttu-id="363bf-112">在 Oracle 伺服器上建立下列 Oracle Package 內容。</span><span class="sxs-lookup"><span data-stu-id="363bf-112">Create the following Oracle package body on the Oracle server.</span></span>  
  
```  
  
CREATE OR REPLACE PACKAGE BODY CURSPKG AS   
    PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
                               IO_CURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR T_CURSOR;   
    BEGIN   
        IF N_EMPNO <> 0 THEN   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO   
                        AND EMP.EMPNO = N_EMPNO;   
        ELSE   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO;   
        END IF;   
        IO_CURSOR := V_CURSOR;   
    END OPEN_ONE_CURSOR;   
    PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
                                DEPTCURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR1 T_CURSOR;   
        V_CURSOR2 T_CURSOR;   
    BEGIN   
        OPEN V_CURSOR1 FOR SELECT * FROM EMP;   
        OPEN V_CURSOR2 FOR SELECT * FROM DEPT;   
        EMPCURSOR  := V_CURSOR1;   
        DEPTCURSOR := V_CURSOR2;   
    END OPEN_TWO_CURSORS;   
END CURSPKG;  
/  
```  
  
 <span data-ttu-id="363bf-113">此 Visual Basic 範例執行傳回的 PL/SQL 預存程序`REF CURSOR`參數，並讀取的值做為<xref:System.Data.OracleClient.OracleDataReader>。</span><span class="sxs-lookup"><span data-stu-id="363bf-113">This Visual Basic example executes a PL/SQL stored procedure that returns a `REF CURSOR` parameter, and reads the value as an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
```vb  
Private Sub ReadOracleData(ByVal connectionString As String)  
   Dim connection As New OracleConnection(connectionString)  
   Dim command As New OracleCommand()  
   Dim reader As OracleDataReader  
  
   connection.Open()  
   command.Connection = connection  
   command.CommandText = "CURSPKG.OPEN_ONE_CURSOR"  
   command.CommandType = CommandType.StoredProcedure  
   command.Parameters.Add(New OracleParameter("N_EMPNO", OracleType.Number)).Value = 7369  
   command.Parameters.Add(New OracleParameter("IO_CURSOR", OracleType.Cursor)).Direction = ParameterDirection.Output  
  
   reader = command.ExecuteReader()  
   While (reader.Read())  
      ' Do something with the values.  
   End While  
   reader.Close()  
   connection.Close()  
End Sub  
```  
  
 <span data-ttu-id="363bf-114">此 Visual Basic 範例執行可傳回兩個 PL/SQL 預存程序`REF CURSOR`參數，並讀取的值使用<xref:System.Data.OracleClient.OracleDataReader>。</span><span class="sxs-lookup"><span data-stu-id="363bf-114">This Visual Basic example executes a PL/SQL stored procedure that returns two `REF CURSOR` parameters, and reads the values using an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
```vb  
Private Sub ReadOracleData(ByVal connectionString As String)  
   Dim dataSet As New DataSet()  
   Dim connection As New OracleConnection(connectionString)  
   Dim command As New OracleCommand()  
   Dim reader As OracleDataReader  
  
   connection.Open()  
   command.Connection = connection  
   command.CommandText = "CURSPKG.OPEN_TWO_CURSORS"  
   command.CommandType = CommandType.StoredProcedure  
   command.Parameters.Add(New OracleParameter("EMPCURSOR", OracleType.Cursor)).Direction = ParameterDirection.Output  
   command.Parameters.Add(New OracleParameter("DEPTCURSOR", OracleType.Cursor)).Direction = ParameterDirection.Output  
  
   reader = command.ExecuteReader(CommandBehavior.CloseConnection)  
   While (reader.Read())  
      ' Do something with the values.  
   End While  
   reader.NextResult()  
   While (reader.Read())  
        ' Do something with the values.  
   End While  
   reader.Close()  
   connection.Close()  
 End Sub  
```  
  
 <span data-ttu-id="363bf-115">這個 C# 範例會建立 Oracle 資料表，並載入資料。</span><span class="sxs-lookup"><span data-stu-id="363bf-115">This C# example creates an Oracle table and loads it with data.</span></span> <span data-ttu-id="363bf-116">您必須執行此範例中執行後續的範例中，示範如何使用之前<xref:System.Data.OracleClient.OracleDataReader>存取使用 OracleType 結構的資料。</span><span class="sxs-lookup"><span data-stu-id="363bf-116">You must run this example prior to running the subsequent example, which demonstrates using an <xref:System.Data.OracleClient.OracleDataReader> to access the data using OracleType structures.</span></span>  
  
```csharp  
public void Setup(string connectionString)  
{  
   OracleConnection connection = new OracleConnection(connectionString);  
   try  
   {  
      connection.Open();  
      OracleCommand command = connection.CreateCommand();  
      command.CommandText ="CREATE TABLE OracleTypesTable (MyVarchar2 varchar2(3000),MyNumber number(28,4) PRIMARY KEY,MyDate date, MyRaw raw(255))";  
      command.ExecuteNonQuery();  
      command.CommandText ="INSERT INTO OracleTypesTable VALUES ('test', 2, to_date('2000-01-11 12:54:01','yyyy-mm-dd hh24:mi:ss'), '0001020304')";  
      command.ExecuteNonQuery();  
      command.CommandText="SELECT * FROM OracleTypesTable";  
   }  
   catch(Exception)  
   {  
   }  
   finally  
   {  
      connection.Close();  
   }  
}  
```  
  
 <span data-ttu-id="363bf-117">這個 C# 範例會使用<xref:System.Data.OracleClient.OracleDataReader>存取資料，並使用數個<xref:System.Data.OracleClient.OracleType>結構顯示資料。</span><span class="sxs-lookup"><span data-stu-id="363bf-117">This C# example uses an <xref:System.Data.OracleClient.OracleDataReader> to access data, and uses several <xref:System.Data.OracleClient.OracleType> structures to display the data.</span></span>  
  
```csharp  
public void ReadOracleTypesExample(string connectionString)  
{  
   OracleConnection connection = new OracleConnection(connectionString);  
   connection.Open();  
   OracleCommand command = connection.CreateCommand();  
   try  
   {  
      command.CommandText = "SELECT * FROM OracleTypesTable";  
      OracleDataReader reader = command.ExecuteReader();  
      reader.Read();  
      //Using the Oracle specific getters for each type is faster than  
      //using GetOracleValue.  
      //First column, MyVarchar2, is a VARCHAR2 data type in Oracle Server  
      //and maps to OracleString.  
      OracleString oraclestring1 = reader.GetOracleString(0);  
      Console.WriteLine("OracleString " + oraclestring1.ToString());  
  
      //Second column, MyNumber, is a NUMBER data type in Oracle Server  
      //and maps to OracleNumber.  
      OracleNumber oraclenumber1 = reader.GetOracleNumber(1);  
      Console.WriteLine("OracleNumber " + oraclenumber1.ToString());  
  
      //Third column, MyDate, is a DATA data type in Oracle Server  
      //and maps to OracleDateTime.  
      OracleDateTime oracledatetime1 = reader.GetOracleDateTime(2);  
      Console.WriteLine("OracleDateTime " + oracledatetime1.ToString());  
  
      //Fourth column, MyRaw, is a RAW data type in Oracle Server and  
      //maps to OracleBinary.  
      OracleBinary oraclebinary1 = reader.GetOracleBinary(3);  
  
      //Calling value on a null OracleBinary throws  
      //OracleNullValueException; therefore, check for a null value.  
      if (oraclebinary1.IsNull==false)  
      {  
         foreach(byte b in oraclebinary1.Value)  
         {  
            Console.WriteLine("byte " + b.ToString());  
         }  
      }  
      reader.Close();  
   }  
   catch(Exception e)  
   {  
      Console.WriteLine(e.ToString());  
   }  
   finally  
   {  
      connection.Close();  
   }  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="363bf-118">下列範例會建立<xref:System.Data.OracleClient.OracleConnection>、 <xref:System.Data.OracleClient.OracleCommand>，和<xref:System.Data.OracleClient.OracleDataReader>。</span><span class="sxs-lookup"><span data-stu-id="363bf-118">The following example creates an <xref:System.Data.OracleClient.OracleConnection>, an <xref:System.Data.OracleClient.OracleCommand>, and an <xref:System.Data.OracleClient.OracleDataReader>.</span></span> <span data-ttu-id="363bf-119">此範例會讀取整個資料，並將它寫出至主控台。</span><span class="sxs-lookup"><span data-stu-id="363bf-119">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="363bf-120">最後，範例會關閉<xref:System.Data.OracleClient.OracleDataReader>，然後在<xref:System.Data.OracleClient.OracleConnection>。</span><span class="sxs-lookup"><span data-stu-id="363bf-120">Finally, the example closes the <xref:System.Data.OracleClient.OracleDataReader>, then the <xref:System.Data.OracleClient.OracleConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OracleDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleDataReader/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleDataReader/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="363bf-121">關閉 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="363bf-121">Closes the <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-122">多個<xref:System.Data.OracleClient.OracleDataReader>可以開啟任何給定的時間。</span><span class="sxs-lookup"><span data-stu-id="363bf-122">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="363bf-123">請勿呼叫`Close`或`Dispose`連接上`DataReader`，或在任何其他 managed 的物件`Finalize`類別的方法。</span><span class="sxs-lookup"><span data-stu-id="363bf-123">Do not call `Close` or `Dispose` on a connection, a `DataReader`, or any other managed object in the `Finalize` method of your class.</span></span> <span data-ttu-id="363bf-124">在完成項中，您應該只需釋放類別直接擁有的 unmanaged 的資源。</span><span class="sxs-lookup"><span data-stu-id="363bf-124">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="363bf-125">如果類別未擁有任何 Unmanaged 資源，請不要在類別定義中包含 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="363bf-125">If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition.</span></span> <span data-ttu-id="363bf-126">如需詳細資訊，請參閱[回收](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)。</span><span class="sxs-lookup"><span data-stu-id="363bf-126">For more information, see [Garbage Collection](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="363bf-127">取得值，表示目前資料列的巢狀深度。</span><span class="sxs-lookup"><span data-stu-id="363bf-127">Gets a value indicating the depth of nesting for the current row.</span></span></summary>
        <value><span data-ttu-id="363bf-128">目前資料列的巢狀深度。</span><span class="sxs-lookup"><span data-stu-id="363bf-128">The depth of nesting for the current row.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-129">最外層的資料表深度為零。</span><span class="sxs-lookup"><span data-stu-id="363bf-129">The outermost table has a depth of zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="363bf-130">取得目前資料列中的資料行數目。</span><span class="sxs-lookup"><span data-stu-id="363bf-130">Gets the number of columns in the current row.</span></span></summary>
        <value><span data-ttu-id="363bf-131">當未置於有效的資料錄集中時，則為 0，否則為目前資料錄中的資料行數目。</span><span class="sxs-lookup"><span data-stu-id="363bf-131">When not positioned in a valid record set, 0; otherwise the number of columns in the current record.</span></span> <span data-ttu-id="363bf-132">預設值為 -1。</span><span class="sxs-lookup"><span data-stu-id="363bf-132">The default is -1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-133">包含隱藏欄位。</span><span class="sxs-lookup"><span data-stu-id="363bf-133">Includes hidden fields.</span></span> <span data-ttu-id="363bf-134">使用 <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> 以排除隱藏欄位。</span><span class="sxs-lookup"><span data-stu-id="363bf-134">Use <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> to exclude hidden fields.</span></span>  
  
 <span data-ttu-id="363bf-135">不會傳回資料列，在查詢執行之後<xref:System.Data.OracleClient.OracleDataReader.FieldCount%2A>傳回 0。</span><span class="sxs-lookup"><span data-stu-id="363bf-135">After executing a query that does not return rows, <xref:System.Data.OracleClient.OracleDataReader.FieldCount%2A> returns 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="363bf-136">沒有對資料來源的目前連接。</span><span class="sxs-lookup"><span data-stu-id="363bf-136">There is no current connection to a data source.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-137">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-137">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-138">取得指定之資料行的值做為布林值 (Boolean)。</span><span class="sxs-lookup"><span data-stu-id="363bf-138">Gets the value of the specified column as a Boolean.</span></span></summary>
        <returns><span data-ttu-id="363bf-139">布林值，為資料行的值。</span><span class="sxs-lookup"><span data-stu-id="363bf-139">A Boolean that is the value of the column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-140">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-140">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-141">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-141">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (i As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-142">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-142">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-143">取得指定資料行的值做為位元組。</span><span class="sxs-lookup"><span data-stu-id="363bf-143">Gets the value of the specified column as a byte.</span></span></summary>
        <returns><span data-ttu-id="363bf-144">指定資料行的值做為位元組。</span><span class="sxs-lookup"><span data-stu-id="363bf-144">The value of the specified column as a byte.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-145">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-145">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-146">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-146">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int i, long fieldOffset, byte[] buffer2, int bufferoffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 i, int64 fieldOffset, unsigned int8[] buffer2, int32 bufferoffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (i As Integer, fieldOffset As Long, buffer2 As Byte(), bufferoffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int i, long fieldOffset, cli::array &lt;System::Byte&gt; ^ buffer2, int bufferoffset, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="fieldOffset" Type="System.Int64" />
        <Parameter Name="buffer2" Type="System.Byte[]" />
        <Parameter Name="bufferoffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-147">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-147">The zero-based column ordinal.</span></span></param>
        <param name="fieldOffset"><span data-ttu-id="363bf-148">欄位中讀取作業開始之處的索引。</span><span class="sxs-lookup"><span data-stu-id="363bf-148">The index within the field where the read operation is to begin.</span></span></param>
        <param name="buffer2"><span data-ttu-id="363bf-149">要將位元組資料流讀取到其中的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="363bf-149">The buffer into which to read the stream of bytes.</span></span></param>
        <param name="bufferoffset"><span data-ttu-id="363bf-150"><c>buffer</c> 將要開始寫入作業的索引位置。</span><span class="sxs-lookup"><span data-stu-id="363bf-150">The index where <c>buffer</c> is to begin the write operation.</span></span></param>
        <param name="length"><span data-ttu-id="363bf-151">要讀取的位元組數。</span><span class="sxs-lookup"><span data-stu-id="363bf-151">The number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="363bf-152">從指定的緩衝區位移開始，將來自指定資料行位移的位元組資料流讀取到緩衝區以做為陣列。</span><span class="sxs-lookup"><span data-stu-id="363bf-152">Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.</span></span></summary>
        <returns><span data-ttu-id="363bf-153">讀取的實際位元組數目。</span><span class="sxs-lookup"><span data-stu-id="363bf-153">The actual number of bytes read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-154"><xref:System.Data.OracleClient.OracleDataReader.GetBytes%2A> 在欄位中傳回可用位元組的數。</span><span class="sxs-lookup"><span data-stu-id="363bf-154"><xref:System.Data.OracleClient.OracleDataReader.GetBytes%2A> returns the number of available bytes in the field.</span></span> <span data-ttu-id="363bf-155">在大部分情況下，這是欄位的確切的長度。</span><span class="sxs-lookup"><span data-stu-id="363bf-155">In most cases this is the exact length of the field.</span></span> <span data-ttu-id="363bf-156">不過，傳回的數字可能小於欄位的實際長度如果`GetBytes`已經使用來取得位元組的欄位。</span><span class="sxs-lookup"><span data-stu-id="363bf-156">However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field.</span></span> <span data-ttu-id="363bf-157">這種情況下，比方說，如果可能<xref:System.Data.OracleClient.OracleDataReader>讀入緩衝區的大型資料結構。</span><span class="sxs-lookup"><span data-stu-id="363bf-157">This may be the case, for example, if the <xref:System.Data.OracleClient.OracleDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="363bf-158">如需詳細資訊，請參閱`SequentialAccess`設定<xref:System.Data.CommandBehavior>。</span><span class="sxs-lookup"><span data-stu-id="363bf-158">For more information, see the `SequentialAccess` setting of <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="363bf-159">如果您傳遞 null 值的緩衝區<xref:System.Data.OracleClient.OracleDataReader.GetBytes%2A>傳回欄位的長度，以位元組為單位。</span><span class="sxs-lookup"><span data-stu-id="363bf-159">If you pass a buffer that is a null value, <xref:System.Data.OracleClient.OracleDataReader.GetBytes%2A> returns the length of the field in bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (i As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-160">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-160">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-161">取得指定資料行的值做為字元。</span><span class="sxs-lookup"><span data-stu-id="363bf-161">Gets the value of the specified column as a character.</span></span></summary>
        <returns><span data-ttu-id="363bf-162">做為字元的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-162">The value of the specified column as a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-163">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-163">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-164">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-164">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int i, long fieldOffset, char[] buffer2, int bufferoffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 i, int64 fieldOffset, char[] buffer2, int32 bufferoffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (i As Integer, fieldOffset As Long, buffer2 As Char(), bufferoffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int i, long fieldOffset, cli::array &lt;char&gt; ^ buffer2, int bufferoffset, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="fieldOffset" Type="System.Int64" />
        <Parameter Name="buffer2" Type="System.Char[]" />
        <Parameter Name="bufferoffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-165">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-165">The zero-based column ordinal.</span></span></param>
        <param name="fieldOffset"><span data-ttu-id="363bf-166">資料列中讀取作業開始之處的索引。</span><span class="sxs-lookup"><span data-stu-id="363bf-166">The index within the row where the read operation is to begin.</span></span></param>
        <param name="buffer2"><span data-ttu-id="363bf-167">要複製資料的目的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="363bf-167">The buffer into which to copy data.</span></span></param>
        <param name="bufferoffset"><span data-ttu-id="363bf-168"><c>buffer</c> 將要開始寫入作業的索引位置。</span><span class="sxs-lookup"><span data-stu-id="363bf-168">The index where <c>buffer</c> is to begin the write operation.</span></span></param>
        <param name="length"><span data-ttu-id="363bf-169">要讀取的字元數。</span><span class="sxs-lookup"><span data-stu-id="363bf-169">The number of characters to read.</span></span></param>
        <summary><span data-ttu-id="363bf-170">從指定的緩衝區位移開始，將來自指定資料行位移的字元資料流讀取到緩衝區以做為陣列。</span><span class="sxs-lookup"><span data-stu-id="363bf-170">Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.</span></span></summary>
        <returns><span data-ttu-id="363bf-171">讀取的實際字元數目。</span><span class="sxs-lookup"><span data-stu-id="363bf-171">The actual number of characters read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-172"><xref:System.Data.OracleClient.OracleDataReader.GetChars%2A> 在欄位中傳回可用字元的數。</span><span class="sxs-lookup"><span data-stu-id="363bf-172"><xref:System.Data.OracleClient.OracleDataReader.GetChars%2A> returns the number of available characters in the field.</span></span> <span data-ttu-id="363bf-173">在大部分情況下，這是欄位的確切的長度。</span><span class="sxs-lookup"><span data-stu-id="363bf-173">In most cases this is the exact length of the field.</span></span> <span data-ttu-id="363bf-174">不過，傳回的數字可能小於欄位的實際長度如果`GetChars`已經使用從欄位取得字元。</span><span class="sxs-lookup"><span data-stu-id="363bf-174">However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field.</span></span> <span data-ttu-id="363bf-175">這種情況下，比方說，如果可能<xref:System.Data.OracleClient.OracleDataReader>讀入緩衝區的大型資料結構。</span><span class="sxs-lookup"><span data-stu-id="363bf-175">This may be the case, for example, if the <xref:System.Data.OracleClient.OracleDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="363bf-176">如需詳細資訊，請參閱`SequentialAccess`設定<xref:System.Data.CommandBehavior>。</span><span class="sxs-lookup"><span data-stu-id="363bf-176">For more information, see the `SequentialAccess` setting of <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="363bf-177">如果您傳遞 null 值的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="363bf-177">If you pass a buffer that is a null value.</span></span> <span data-ttu-id="363bf-178"><xref:System.Data.OracleClient.OracleDataReader.GetChars%2A> 傳回欄位的長度，以字元為單位。</span><span class="sxs-lookup"><span data-stu-id="363bf-178"><xref:System.Data.OracleClient.OracleDataReader.GetChars%2A> returns the length of the field in characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-179">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-179">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-180">取得來源資料型別的名稱。</span><span class="sxs-lookup"><span data-stu-id="363bf-180">Gets the name of the source data type.</span></span></summary>
        <returns><span data-ttu-id="363bf-181">來源資料型別的名稱。</span><span class="sxs-lookup"><span data-stu-id="363bf-181">The name of the source data type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-182">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-182">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-183">取得指定之資料行的值做為 <see langword="DateTime" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="363bf-183">Gets the value of the specified column as a <see langword="DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="363bf-184">做為 <see langword="DateTime" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-184">The value of the specified column as a <see langword="DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-185">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-185">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-186">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-186">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (i As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-187">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-187">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-188">取得指定之資料行的值做為 <see langword="Decimal" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="363bf-188">Gets the value of the specified column as a <see langword="Decimal" /> object.</span></span></summary>
        <returns><span data-ttu-id="363bf-189">做為 <see langword="Decimal" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-189">The value of the specified column as a <see langword="Decimal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-190">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-190">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-191">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-191">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (i As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-192">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-192">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-193">取得指定資料行的值做為雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="363bf-193">Gets the value of the specified column as a double-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="363bf-194">傳回指定資料行的值做為雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="363bf-194">The value of the specified column as a double-precision floating point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-195">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-195">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-196">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-196">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="363bf-197">傳回 <see cref="T:System.Collections.IEnumerator" />，可用來逐一查看資料讀取器中的資料列。</span><span class="sxs-lookup"><span data-stu-id="363bf-197">Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span></span></summary>
        <returns><span data-ttu-id="363bf-198"><see cref="T:System.Collections.IEnumerator" />，可用來逐一查看資料讀取器中的資料列。</span><span class="sxs-lookup"><span data-stu-id="363bf-198">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-199">雖然您可以使用這個方法來擷取明確的列舉值，支援 foreach 的語言建構，更容易使用迴圈建構直接以逐一查看資料讀取器中的資料列。</span><span class="sxs-lookup"><span data-stu-id="363bf-199">Although you can use this method to retrieve an explicit enumerator, in languages that support a foreach construct, it's simpler to use the looping construct directly in order to iterate through the rows in the data reader.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-200">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-200">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-201">取得 <see cref="T:System.Type" />，即是物件的資料型別。</span><span class="sxs-lookup"><span data-stu-id="363bf-201">Gets the <see cref="T:System.Type" /> that is the data type of the object.</span></span></summary>
        <returns><span data-ttu-id="363bf-202"><see cref="T:System.Type" />，此為物件的資料類型。</span><span class="sxs-lookup"><span data-stu-id="363bf-202">The <see cref="T:System.Type" /> that is the data type of the object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (i As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-203">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-203">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-204">取得指定資料行的值做為單精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="363bf-204">Gets the value of the specified column as a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="363bf-205">傳回指定資料行的值做為單精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="363bf-205">The value of the specified column as a single-precision floating-point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-206">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-206">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-207">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-207">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (i As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-208">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-208">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-209">取得指定資料行的值做為全域唯一識別項 (GUID)。</span><span class="sxs-lookup"><span data-stu-id="363bf-209">Gets the value of the specified column as a globally-unique identifier (GUID).</span></span></summary>
        <returns><span data-ttu-id="363bf-210">做為 GUID 的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-210">The value of the specified column as a GUID.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-211">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-211">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-212">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-212">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (i As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-213">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-213">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-214">取得指定資料行的值做為 16 位元帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="363bf-214">Gets the value of the specified column as a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="363bf-215">做為 16 位元帶正負號整數的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-215">The value of the specified column as a 16-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-216">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-216">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-217">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-217">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (i As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-218">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-218">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-219">取得指定資料行的值作為 32 位元帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="363bf-219">Gets the value of the specified column as a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="363bf-220">作為 32 位元帶正負號整數的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-220">The value of the specified column as a 32-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-221">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-221">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-222">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-222">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (i As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-223">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-223">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-224">取得指定資料行的值做為 64 位元帶正負號的整數 (Signed Integer)。</span><span class="sxs-lookup"><span data-stu-id="363bf-224">Gets the value of the specified column as a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="363bf-225">作為 64 位元帶正負號整數的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-225">The value of the specified column as a 64-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-226">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-226">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-227">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-227">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-228">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-228">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-229">取得指定資料行的名稱。</span><span class="sxs-lookup"><span data-stu-id="363bf-229">Gets the name of the specified column.</span></span></summary>
        <returns><span data-ttu-id="363bf-230">指定資料行名稱的字串。</span><span class="sxs-lookup"><span data-stu-id="363bf-230">A string that is the name of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetOracleBFile">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleBFile GetOracleBFile (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleBFile GetOracleBFile(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleBFile(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleBFile (i As Integer) As OracleBFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleBFile ^ GetOracleBFile(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-231">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-231">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-232">取得做為 <see cref="T:System.Data.OracleClient.OracleBFile" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-232">Gets the value of the specified column as an <see cref="T:System.Data.OracleClient.OracleBFile" /> object.</span></span></summary>
        <returns><span data-ttu-id="363bf-233">做為 <see cref="T:System.Data.OracleClient.OracleBFile" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-233">The value of the specified column as an <see cref="T:System.Data.OracleClient.OracleBFile" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-234">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-234">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-235">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-235">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleBinary">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleBinary GetOracleBinary (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleBinary GetOracleBinary(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleBinary(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleBinary (i As Integer) As OracleBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleBinary GetOracleBinary(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-236">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-236">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-237">取得做為 <see cref="T:System.Data.OracleClient.OracleBinary" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-237">Gets the value of the specified column as an <see cref="T:System.Data.OracleClient.OracleBinary" /> object.</span></span></summary>
        <returns><span data-ttu-id="363bf-238">做為 <see cref="T:System.Data.OracleClient.OracleBinary" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-238">The value of the specified column as an <see cref="T:System.Data.OracleClient.OracleBinary" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-239">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-239">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-240">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-240">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleDateTime">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDateTime GetOracleDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleDateTime GetOracleDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleDateTime (i As Integer) As OracleDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDateTime GetOracleDateTime(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-241">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-241">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-242">取得做為 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-242">Gets the value of the specified column as an <see cref="T:System.Data.OracleClient.OracleDateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="363bf-243">做為 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-243">The value of the specified column as an <see cref="T:System.Data.OracleClient.OracleDateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-244">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-244">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-245">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-245">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleLob">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleLob GetOracleLob (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleLob GetOracleLob(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleLob(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleLob (i As Integer) As OracleLob" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleLob ^ GetOracleLob(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleLob</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-246">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-246">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-247">取得做為 <see cref="T:System.Data.OracleClient.OracleLob" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-247">Gets the value of the specified column as an <see cref="T:System.Data.OracleClient.OracleLob" /> object.</span></span></summary>
        <returns><span data-ttu-id="363bf-248">做為 <see cref="T:System.Data.OracleClient.OracleLob" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-248">The value of the specified column as an <see cref="T:System.Data.OracleClient.OracleLob" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-249">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-249">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-250">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-250">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleMonthSpan">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleMonthSpan GetOracleMonthSpan (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleMonthSpan GetOracleMonthSpan(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleMonthSpan (i As Integer) As OracleMonthSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleMonthSpan GetOracleMonthSpan(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleMonthSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-251">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-251">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-252">取得做為 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-252">Gets the value of the specified column as an <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> object.</span></span></summary>
        <returns><span data-ttu-id="363bf-253">做為 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-253">The value of the specified column as an <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-254">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-254">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-255">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-255">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleNumber">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleNumber GetOracleNumber (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleNumber GetOracleNumber(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleNumber(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleNumber (i As Integer) As OracleNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleNumber GetOracleNumber(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-256">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-256">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-257">取得做為 <see cref="T:System.Data.OracleClient.OracleNumber" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-257">Gets the value of the specified column as an <see cref="T:System.Data.OracleClient.OracleNumber" /> object.</span></span></summary>
        <returns><span data-ttu-id="363bf-258">做為 <see cref="T:System.Data.OracleClient.OracleNumber" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-258">The value of the specified column as an <see cref="T:System.Data.OracleClient.OracleNumber" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-259">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-259">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-260">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-260">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleString">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleString GetOracleString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleString GetOracleString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleString (i As Integer) As OracleString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleString GetOracleString(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-261">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-261">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-262">取得做為 <see cref="T:System.Data.OracleClient.OracleString" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-262">Gets the value of the specified column as an <see cref="T:System.Data.OracleClient.OracleString" /> object.</span></span></summary>
        <returns><span data-ttu-id="363bf-263">做為 <see cref="T:System.Data.OracleClient.OracleString" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-263">The value of the specified column as an <see cref="T:System.Data.OracleClient.OracleString" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-264">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-264">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-265">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-265">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleTimeSpan">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTimeSpan GetOracleTimeSpan (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.OracleClient.OracleTimeSpan GetOracleTimeSpan(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleTimeSpan (i As Integer) As OracleTimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleTimeSpan GetOracleTimeSpan(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-266">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-266">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-267">取得做為 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-267">Gets the value of the specified column as an <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> object.</span></span></summary>
        <returns><span data-ttu-id="363bf-268">做為 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-268">The value of the specified column as an <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-269">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-269">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-270">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-270">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOracleValue">
      <MemberSignature Language="C#" Value="public object GetOracleValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOracleValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOracleValue(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-271">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-271">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-272">取得使用 Oracle 格式的指定序數的資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-272">Gets the value of the column at the specified ordinal in its Oracle format.</span></span></summary>
        <returns><span data-ttu-id="363bf-273">要傳回的 Oracle 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-273">The Oracle value to return.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-274">對於 null 資料庫資料行來說，這個方法會傳回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="363bf-274">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOracleValues">
      <MemberSignature Language="C#" Value="public int GetOracleValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOracleValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOracleValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOracleValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOracleValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="363bf-275">型別 <see cref="T:System.Object" /> 陣列，要複製屬性資料行。</span><span class="sxs-lookup"><span data-stu-id="363bf-275">An array of type <see cref="T:System.Object" /> into which to copy the attribute columns.</span></span></param>
        <summary><span data-ttu-id="363bf-276">取得目前資料列中使用 Oracle 格式的所有屬性 (Attribute) 資料行。</span><span class="sxs-lookup"><span data-stu-id="363bf-276">Gets all the attribute columns in the current row in Oracle format.</span></span></summary>
        <returns><span data-ttu-id="363bf-277">陣列中 <see cref="T:System.Object" /> 的執行個體數目。</span><span class="sxs-lookup"><span data-stu-id="363bf-277">The number of instances of <see cref="T:System.Object" /> in the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-278">對於大部分的應用程式，<xref:System.Data.OracleClient.OracleDataReader.GetOracleValues%2A>方法提供有效率的方式擷取所有資料行，而不是個別擷取每個資料行。</span><span class="sxs-lookup"><span data-stu-id="363bf-278">For most applications, the <xref:System.Data.OracleClient.OracleDataReader.GetOracleValues%2A> method provides an efficient means for retrieving all columns, rather than retrieving each column individually.</span></span>  
  
 <span data-ttu-id="363bf-279">您可以傳遞<xref:System.Object>陣列包含少於一個產生的資料列中所包含的資料行數目。</span><span class="sxs-lookup"><span data-stu-id="363bf-279">You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row.</span></span> <span data-ttu-id="363bf-280">資料量<xref:System.Object>陣列，含有複製到陣列。</span><span class="sxs-lookup"><span data-stu-id="363bf-280">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="363bf-281">您也可以傳遞<xref:System.Object>陣列，其長度都是多個資料行包含在產生的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="363bf-281">You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.</span></span>  
  
 <span data-ttu-id="363bf-282">對於 null 資料庫資料行來說，這個方法會傳回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="363bf-282">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="363bf-283">資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="363bf-283">The name of the column.</span></span></param>
        <summary><span data-ttu-id="363bf-284">提供資料行的名稱，取得資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-284">Gets the column ordinal, given the name of the column.</span></span></summary>
        <returns><span data-ttu-id="363bf-285">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-285">The zero-based column ordinal.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-286"><xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> 第一次執行區分大小寫的查閱。</span><span class="sxs-lookup"><span data-stu-id="363bf-286"><xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> performs a case-sensitive lookup first.</span></span> <span data-ttu-id="363bf-287">如果失敗，進行第二個不區分大小寫的搜尋。</span><span class="sxs-lookup"><span data-stu-id="363bf-287">If it fails, a second case-insensitive search is made.</span></span> <span data-ttu-id="363bf-288">方法會擲回`IndexOutOfRange`例外狀況，如果找不到以零為起始的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-288">The method throws an `IndexOutOfRange` exception if the zero-based column ordinal is not found.</span></span>  
  
 <span data-ttu-id="363bf-289"><xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> 不會區分假名寬度。</span><span class="sxs-lookup"><span data-stu-id="363bf-289"><xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="363bf-290">因為根據序數進行查閱比具名查閱更有效率，很效率不佳，呼叫<xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A>在迴圈內。</span><span class="sxs-lookup"><span data-stu-id="363bf-290">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call <xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> within a loop.</span></span> <span data-ttu-id="363bf-291">請改為呼叫<xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A>一次，然後將指派給整數變數的結果，請使用迴圈內。</span><span class="sxs-lookup"><span data-stu-id="363bf-291">Instead, call <xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> once and then assign the results to an integer variable for use within the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="363bf-292">下列範例示範如何使用 <xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="363bf-292">The following example demonstrates how to use the <xref:System.Data.OracleClient.OracleDataReader.GetOrdinal%2A> method.</span></span>  
  
```vb  
Public Sub ReadOracleData(ByVal connectionString As String)  
  
    Dim queryString As String = "SELECT OrderID, CustomerID FROM Orders"  
    Dim connection As New OracleConnection(connectionString)  
    Dim command As New OracleCommand(queryString, connectionString)  
  
    connection.Open()  
  
    Dim reader As OracleDataReader = command.ExecuteReader()  
  
    Dim custIdCol As Integer = reader.GetOrdinal("CustomerID")  
  
    Do While reader.Read()  
        Console.WriteLine("CustomerID = {0}", reader.GetString(custIdCol))  
    Loop  
  
    reader.Close()  
    connection.Close()  
End Sub  
```  
  
```csharp  
public void ReadOracleData(string connectionString)  
{  
    string queryString = "SELECT OrderID, CustomerID FROM Orders";  
    OracleConnection connection = new OracleConnection(connectionString);  
    OracleCommand command = new OracleCommand(queryString,connection);  
  
    connection.Open();  
    OracleDataReader reader = command.ExecuteReader();  
  
    int custIdCol = reader.GetOrdinal("CustomerID");  
  
    while (reader.Read())  
        Console.WriteLine("CustomerID = {0}", reader.GetString(custIdCol));  
  
    reader.Close();  
    connection.Close();  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-293"><see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="363bf-293">An <see cref="T:System.Int32" />.</span></span></param>
        <summary><span data-ttu-id="363bf-294">取得 <see langword="Object" />，其為基礎提供者特定欄位型別的表示。</span><span class="sxs-lookup"><span data-stu-id="363bf-294">Gets an <see langword="Object" /> that is a representation of the underlying provider specific field type.</span></span></summary>
        <returns><span data-ttu-id="363bf-295">取得 <see cref="T:System.Object" />，其為基礎提供者特定欄位型別的表示。</span><span class="sxs-lookup"><span data-stu-id="363bf-295">Gets an <see cref="T:System.Object" /> that is a representation of the underlying provider specific field type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-296"><see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="363bf-296">An <see cref="T:System.Int32" />.</span></span></param>
        <summary><span data-ttu-id="363bf-297">取得 <see langword="Object" />，其為基礎提供者特定欄位型別的表示。</span><span class="sxs-lookup"><span data-stu-id="363bf-297">Gets an <see langword="Object" /> that is a representation of the underlying provider specific field type.</span></span></summary>
        <returns><span data-ttu-id="363bf-298">取得 <see cref="T:System.Object" />，其為基礎提供者特定欄位型別的表示。</span><span class="sxs-lookup"><span data-stu-id="363bf-298">Gets an <see cref="T:System.Object" /> that is a representation of the underlying provider specific field type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="363bf-299"><see cref="T:System.Object" /> 的陣列。</span><span class="sxs-lookup"><span data-stu-id="363bf-299">An array of <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="363bf-300">取得物件的陣列，這些物件是基礎提供者特定值的表示。</span><span class="sxs-lookup"><span data-stu-id="363bf-300">Gets an array of objects that are a representation of the underlying provider specific values.</span></span></summary>
        <returns><span data-ttu-id="363bf-301">陣列中 <see cref="T:System.Object" /> 的執行個體數目。</span><span class="sxs-lookup"><span data-stu-id="363bf-301">The number of instances of <see cref="T:System.Object" /> in the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-302">對於大部分的應用程式，<xref:System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues%2A>方法提供有效率的方式擷取所有資料行，而不是個別擷取每個資料行。</span><span class="sxs-lookup"><span data-stu-id="363bf-302">For most applications, the <xref:System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues%2A> method provides an efficient means for retrieving all columns, rather than retrieving each column individually.</span></span>  
  
 <span data-ttu-id="363bf-303">您可以傳遞<xref:System.Object>陣列包含少於一個產生的資料列中所包含的資料行數目。</span><span class="sxs-lookup"><span data-stu-id="363bf-303">You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row.</span></span> <span data-ttu-id="363bf-304">資料量<xref:System.Object>陣列，含有複製到陣列。</span><span class="sxs-lookup"><span data-stu-id="363bf-304">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="363bf-305">您也可以傳遞<xref:System.Object>陣列，其長度都是多個資料行包含在產生的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="363bf-305">You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.</span></span>  
  
 <span data-ttu-id="363bf-306">對於 null 資料庫資料行來說，這個方法會傳回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="363bf-306">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="363bf-307">傳回 <see cref="T:System.Data.DataTable" />，描述 OracleDataReader 的資料行中繼資料 (Metadata)。</span><span class="sxs-lookup"><span data-stu-id="363bf-307">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the OracleDataReader.</span></span></summary>
        <returns><span data-ttu-id="363bf-308">描述資料行中繼資料的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="363bf-308">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-309"><xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A>方法會傳回有關每個資料行的中繼資料以下列順序：</span><span class="sxs-lookup"><span data-stu-id="363bf-309">The <xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A> method returns metadata about each column in the following order:</span></span>  
  
|<span data-ttu-id="363bf-310">DataReader 資料行</span><span class="sxs-lookup"><span data-stu-id="363bf-310">DataReader Column</span></span>|<span data-ttu-id="363bf-311">描述</span><span class="sxs-lookup"><span data-stu-id="363bf-311">Description</span></span>|  
|-----------------------|-----------------|  
|<span data-ttu-id="363bf-312">ColumnName</span><span class="sxs-lookup"><span data-stu-id="363bf-312">ColumnName</span></span>|<span data-ttu-id="363bf-313">資料行; 的名稱這可能不是唯一的。</span><span class="sxs-lookup"><span data-stu-id="363bf-313">The name of the column; this might not be unique.</span></span> <span data-ttu-id="363bf-314">如果無法判別資料行名稱，則會傳回 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-314">If the column name cannot be determined, a null value is returned.</span></span> <span data-ttu-id="363bf-315">這個名稱一律會反映目前的檢視或命令文字中的資料行的最新命名。</span><span class="sxs-lookup"><span data-stu-id="363bf-315">This name always reflects the most recent naming of the column in the current view or command text.</span></span>|  
|<span data-ttu-id="363bf-316">ColumnOrdinal</span><span class="sxs-lookup"><span data-stu-id="363bf-316">ColumnOrdinal</span></span>|<span data-ttu-id="363bf-317">資料行以零為起始的序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-317">The zero-based ordinal of the column.</span></span> <span data-ttu-id="363bf-318">此資料行不能包含 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-318">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="363bf-319">ColumnSize</span><span class="sxs-lookup"><span data-stu-id="363bf-319">ColumnSize</span></span>|<span data-ttu-id="363bf-320">資料行中值的最大可能長度。</span><span class="sxs-lookup"><span data-stu-id="363bf-320">The maximum possible length of a value in the column.</span></span> <span data-ttu-id="363bf-321">使用固定長度的資料類型的資料行，這是資料類型的大小。</span><span class="sxs-lookup"><span data-stu-id="363bf-321">For columns that use a fixed-length data type, this is the size of the data type.</span></span>|  
|<span data-ttu-id="363bf-322">NumericPrecision</span><span class="sxs-lookup"><span data-stu-id="363bf-322">NumericPrecision</span></span>|<span data-ttu-id="363bf-323">如果<xref:System.Data.OracleClient.OracleParameter.DbType%2A>是數值資料類型，這是資料行的最大有效位數。</span><span class="sxs-lookup"><span data-stu-id="363bf-323">If <xref:System.Data.OracleClient.OracleParameter.DbType%2A> is a numeric data type, this is the maximum precision of the column.</span></span> <span data-ttu-id="363bf-324">精確度取決於資料行的定義。</span><span class="sxs-lookup"><span data-stu-id="363bf-324">The precision depends on the definition of the column.</span></span> <span data-ttu-id="363bf-325">`Float` 和`Double`Oracle 中的資料類型是二進位精確度。</span><span class="sxs-lookup"><span data-stu-id="363bf-325">`Float` and `Double` data types in Oracle are binary precision.</span></span>|  
|<span data-ttu-id="363bf-326">NumericScale</span><span class="sxs-lookup"><span data-stu-id="363bf-326">NumericScale</span></span>|<span data-ttu-id="363bf-327">如果<xref:System.Data.OracleClient.OracleParameter.DbType%2A>是數值資料類型，在小數點右邊位數的數目。</span><span class="sxs-lookup"><span data-stu-id="363bf-327">If <xref:System.Data.OracleClient.OracleParameter.DbType%2A> is a numeric data type, the number of digits to the right of the decimal point.</span></span> <span data-ttu-id="363bf-328">`Float` 和`Double`在 Oracle 中的資料類型為二進位的小數位數。</span><span class="sxs-lookup"><span data-stu-id="363bf-328">`Float` and `Double` data types in Oracle are binary scale.</span></span>|  
|<span data-ttu-id="363bf-329">DataType</span><span class="sxs-lookup"><span data-stu-id="363bf-329">DataType</span></span>|<span data-ttu-id="363bf-330">對應至 common language runtime 類型的<xref:System.Data.OracleClient.OracleParameter.DbType%2A>。</span><span class="sxs-lookup"><span data-stu-id="363bf-330">Maps to the common language runtime type of <xref:System.Data.OracleClient.OracleParameter.DbType%2A>.</span></span>|  
|<span data-ttu-id="363bf-331">IsLong</span><span class="sxs-lookup"><span data-stu-id="363bf-331">IsLong</span></span>|<span data-ttu-id="363bf-332">`true` 如果資料行包含二進位長物件 (BLOB)，包含很長的資料。</span><span class="sxs-lookup"><span data-stu-id="363bf-332">`true` if the column contains a Binary Long Object (BLOB) that contains very long data.</span></span>|  
|<span data-ttu-id="363bf-333">AllowDBNull</span><span class="sxs-lookup"><span data-stu-id="363bf-333">AllowDBNull</span></span>|<span data-ttu-id="363bf-334">`true` 如果取用者可以將資料行設定為 null 的值;否則， `false`。</span><span class="sxs-lookup"><span data-stu-id="363bf-334">`true` if the consumer can set the column to a null value; otherwise, `false`.</span></span> <span data-ttu-id="363bf-335">資料行可以包含 null 值，即使它不能設為 null 的值。</span><span class="sxs-lookup"><span data-stu-id="363bf-335">A column may contain null values, even if it cannot be set to a null value.</span></span>|  
|<span data-ttu-id="363bf-336">IsUnique</span><span class="sxs-lookup"><span data-stu-id="363bf-336">IsUnique</span></span>|<span data-ttu-id="363bf-337">`true`： 沒有基底資料表的資料表中傳回的兩個資料列<xref:System.Data.Common.SchemaTableColumn.BaseTableName>-可以有相同的值，這個資料行中。</span><span class="sxs-lookup"><span data-stu-id="363bf-337">`true`: No two rows in the base table-the table returned in <xref:System.Data.Common.SchemaTableColumn.BaseTableName> -can have the same value in this column.</span></span> <span data-ttu-id="363bf-338">**IsUnique**保證能夠`true`如果資料行本身構成索引鍵或類型只適用於此資料行的 UNIQUE 條件約束。</span><span class="sxs-lookup"><span data-stu-id="363bf-338">**IsUnique** is guaranteed to be `true` if the column constitutes a key by itself or if there is a constraint of type UNIQUE that applies only to this column.</span></span> <span data-ttu-id="363bf-339">`false`: 資料行可以包含基底資料表中重複的值。</span><span class="sxs-lookup"><span data-stu-id="363bf-339">`false`: The column can contain duplicate values in the base table.</span></span> <span data-ttu-id="363bf-340">此資料行的預設值為 false。</span><span class="sxs-lookup"><span data-stu-id="363bf-340">The default for this column is false.</span></span>|  
|<span data-ttu-id="363bf-341">IsKey</span><span class="sxs-lookup"><span data-stu-id="363bf-341">IsKey</span></span>|<span data-ttu-id="363bf-342">`true`： 資料行是一組資料列集中的資料行的其中一個，結合在一起唯一識別資料列。</span><span class="sxs-lookup"><span data-stu-id="363bf-342">`true`: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row.</span></span> <span data-ttu-id="363bf-343">與資料行集中**IsKey**設為 true，必須唯一識別資料列集中的資料列。</span><span class="sxs-lookup"><span data-stu-id="363bf-343">The set of columns with **IsKey** set to true must uniquely identify a row in the rowset.</span></span> <span data-ttu-id="363bf-344">沒有這個資料行集是資料行的最小集合的需求。</span><span class="sxs-lookup"><span data-stu-id="363bf-344">There is no requirement that this set of columns is a minimal set of columns.</span></span> <span data-ttu-id="363bf-345">這個資料行集可能會產生來自基底資料表主索引鍵、 唯一條件約束或唯一索引鍵。</span><span class="sxs-lookup"><span data-stu-id="363bf-345">This set of columns may be generated from a base table primary key, a unique constraint or a unique index.</span></span> <span data-ttu-id="363bf-346">`false`： 資料行不是需要唯一識別資料列。</span><span class="sxs-lookup"><span data-stu-id="363bf-346">`false`: The column is not required to uniquely identify the row.</span></span>|  
|<span data-ttu-id="363bf-347">BaseTableName</span><span class="sxs-lookup"><span data-stu-id="363bf-347">BaseTableName</span></span>|<span data-ttu-id="363bf-348">資料表或檢視中包含資料行的資料存放區的名稱。</span><span class="sxs-lookup"><span data-stu-id="363bf-348">The name of the table or view in the data store that contains the column.</span></span> <span data-ttu-id="363bf-349">如果無法判斷基底資料表名稱，則為 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-349">A null value if the base table name cannot be determined.</span></span> <span data-ttu-id="363bf-350">此資料行的預設值為 null 的值。</span><span class="sxs-lookup"><span data-stu-id="363bf-350">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="363bf-351">BaseColumnName</span><span class="sxs-lookup"><span data-stu-id="363bf-351">BaseColumnName</span></span>|<span data-ttu-id="363bf-352">在資料存放區中的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="363bf-352">The name of the column in the data store.</span></span> <span data-ttu-id="363bf-353">這可能是在傳回的資料行名稱與不同**ColumnName**如果原先使用別名資料行。</span><span class="sxs-lookup"><span data-stu-id="363bf-353">This might be different than the column name returned in the **ColumnName** column if an alias was used.</span></span> <span data-ttu-id="363bf-354">如果無法判斷基底的資料行名稱，或如果資料列集資料行衍生而來但不是完全相同，資料中的資料行存放區，則為 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-354">A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store.</span></span> <span data-ttu-id="363bf-355">此資料行的預設值是 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-355">The default for this column is a null value.</span></span>|  
|<span data-ttu-id="363bf-356">BaseSchemaName</span><span class="sxs-lookup"><span data-stu-id="363bf-356">BaseSchemaName</span></span>|<span data-ttu-id="363bf-357">包含資料行的資料存放區中的結構描述名稱。</span><span class="sxs-lookup"><span data-stu-id="363bf-357">The name of the schema in the data store that contains the column.</span></span> <span data-ttu-id="363bf-358">如果無法判斷基底結構描述名稱，則為 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-358">A null value if the base schema name cannot be determined.</span></span> <span data-ttu-id="363bf-359">此資料行的預設值是 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-359">The default for this column is a null value.</span></span>|  
  
 <span data-ttu-id="363bf-360">在結果集中的每個資料行都會傳回一個資料列。</span><span class="sxs-lookup"><span data-stu-id="363bf-360">A row is returned for every column in the results set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="363bf-361">為了確保中繼資料行傳回正確的資訊，您必須呼叫<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>與`behavior`參數設定為`KeyInfo`。</span><span class="sxs-lookup"><span data-stu-id="363bf-361">To ensure that metadata columns return the correct information, you must call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`.</span></span> <span data-ttu-id="363bf-362">否則，有些結構描述資料表中的資料行可能會傳回預設值，null 或不正確的資料。</span><span class="sxs-lookup"><span data-stu-id="363bf-362">Otherwise, some of the columns in the schema table may return default, null, or incorrect data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-363">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-363">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-364">取得指定的資料行值做為字串。</span><span class="sxs-lookup"><span data-stu-id="363bf-364">Gets the value of the specified column as a string.</span></span></summary>
        <returns><span data-ttu-id="363bf-365">做為字串的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-365">The value of the specified column as a string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-366">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-366">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-367">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-367">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTimeSpan">
      <MemberSignature Language="C#" Value="public TimeSpan GetTimeSpan (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetTimeSpan(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetTimeSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTimeSpan (i As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetTimeSpan(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-368">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-368">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-369">取得指定的資料行值做為 <see langword="System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="363bf-369">Gets the value of the specified column as a <see langword="System.TimeSpan" />.</span></span></summary>
        <returns><span data-ttu-id="363bf-370">做為 <see cref="T:System.TimeSpan" /> 的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-370">The value of the specified column as a <see cref="T:System.TimeSpan" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-371">呼叫<xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>呼叫這個方法之前檢查是否有 null 值。</span><span class="sxs-lookup"><span data-stu-id="363bf-371">Call <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="363bf-372">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="363bf-372">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-373">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-373">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-374">取得使用原生格式的指定序數的資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-374">Gets the value of the column at the specified ordinal in its native format.</span></span></summary>
        <returns><span data-ttu-id="363bf-375">要傳回的值。</span><span class="sxs-lookup"><span data-stu-id="363bf-375">The value to return.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-376">對於 null 資料庫資料行來說，這個方法會傳回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="363bf-376">This method returns <xref:System.DBNull> for null database columns.</span></span> <span data-ttu-id="363bf-377">這個方法所傳回的值可能來自 Oracle 的數字資料類型轉換成.NET 十進位類型的結果。</span><span class="sxs-lookup"><span data-stu-id="363bf-377">The value returned by this method might be the result of the conversion from Oracle's Number data type to .NET Decimal type.</span></span> <span data-ttu-id="363bf-378">如果太大，無法儲存在.NET 十進位值，這個方法會擲回<xref:System.Data.OracleClient.OracleException>也就是溢位例外狀況。</span><span class="sxs-lookup"><span data-stu-id="363bf-378">If the value is too large to be stored in the .NET Decimal, this method throws an <xref:System.Data.OracleClient.OracleException> that is an overflow exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="363bf-379">值太大，無法以 .NET 的 Decimal 儲存。</span><span class="sxs-lookup"><span data-stu-id="363bf-379">The value is too large to be stored in the .NET Decimal.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="363bf-380">型別 <see cref="T:System.Object" /> 陣列，要複製屬性資料行。</span><span class="sxs-lookup"><span data-stu-id="363bf-380">An array of type <see cref="T:System.Object" /> into which to copy the attribute columns.</span></span></param>
        <summary><span data-ttu-id="363bf-381">使用目前資料列的資料行值填入物件陣列。</span><span class="sxs-lookup"><span data-stu-id="363bf-381">Populates an array of objects with the column values of the current row.</span></span></summary>
        <returns><span data-ttu-id="363bf-382">陣列中 <see cref="T:System.Object" /> 的執行個體數目。</span><span class="sxs-lookup"><span data-stu-id="363bf-382">The number of instances of <see cref="T:System.Object" /> in the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-383">對於大部分的應用程式，<xref:System.Data.OracleClient.OracleDataReader.GetValues%2A>方法提供有效率的方式擷取所有資料行，而不是個別擷取每個資料行。</span><span class="sxs-lookup"><span data-stu-id="363bf-383">For most applications, the <xref:System.Data.OracleClient.OracleDataReader.GetValues%2A> method provides an efficient means for retrieving all columns, rather than retrieving each column individually.</span></span>  
  
 <span data-ttu-id="363bf-384">您可以傳遞<xref:System.Object>陣列包含少於一個產生的資料列中所包含的資料行數目。</span><span class="sxs-lookup"><span data-stu-id="363bf-384">You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row.</span></span> <span data-ttu-id="363bf-385">資料量<xref:System.Object>陣列，含有複製到陣列。</span><span class="sxs-lookup"><span data-stu-id="363bf-385">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="363bf-386">您也可以傳遞<xref:System.Object>陣列，其長度都是多個資料行包含在產生的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="363bf-386">You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.</span></span>  
  
 <span data-ttu-id="363bf-387">對於 null 資料庫資料行來說，這個方法會傳回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="363bf-387">This method returns <xref:System.DBNull> for null database columns.</span></span> <span data-ttu-id="363bf-388">中傳回的值<xref:System.Object>陣列可能會從 Oracle 的數字資料類型轉換成.NET 十進位類型的結果。</span><span class="sxs-lookup"><span data-stu-id="363bf-388">The value returned in the <xref:System.Object> array might be the result of the conversion from Oracle's Number data type to .NET Decimal type.</span></span> <span data-ttu-id="363bf-389">如果太大，無法儲存在.NET 十進位值，這個方法會擲回<xref:System.Data.OracleClient.OracleException>也就是溢位例外狀況。</span><span class="sxs-lookup"><span data-stu-id="363bf-389">If the value is too large to be stored in the .NET Decimal, this method throws an <xref:System.Data.OracleClient.OracleException> that is an overflow exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="363bf-390">值太大，無法以 .NET 的 Decimal 儲存。</span><span class="sxs-lookup"><span data-stu-id="363bf-390">The value is too large to be stored in the .NET Decimal.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="363bf-391">取得值，指出 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 是否包含一個或多個資料列。</span><span class="sxs-lookup"><span data-stu-id="363bf-391">Gets a value indicating whether the <see cref="T:System.Data.OracleClient.OracleDataReader" /> contains one or more rows.</span></span></summary>
        <value>
          <span data-ttu-id="363bf-392">如果 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 包含一個或更多資料列，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="363bf-392"><see langword="true" /> if the <see cref="T:System.Data.OracleClient.OracleDataReader" /> contains one or more rows; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="363bf-393">指出 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 是否關閉。</span><span class="sxs-lookup"><span data-stu-id="363bf-393">Indicates whether the <see cref="T:System.Data.OracleClient.OracleDataReader" /> is closed.</span></span></summary>
        <value>
          <span data-ttu-id="363bf-394">如果 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 關閉，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="363bf-394"><see langword="true" /> if the <see cref="T:System.Data.OracleClient.OracleDataReader" /> is closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-395"><xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> 和<xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>屬性之後，您可以呼叫<xref:System.Data.OracleClient.OracleDataReader>已關閉。</span><span class="sxs-lookup"><span data-stu-id="363bf-395"><xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> and <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.OracleClient.OracleDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-396">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-396">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-397">取得值，指出資料行是否含有不存在或遺漏的值。</span><span class="sxs-lookup"><span data-stu-id="363bf-397">Gets a value indicating whether the column contains non-existent or missing values.</span></span></summary>
        <returns>
          <span data-ttu-id="363bf-398">如果指定的資料行值等於 <see cref="T:System.DBNull" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="363bf-398"><see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-399">若要避免引發錯誤，呼叫這個方法，以檢查是否有 null 資料行值，然後再呼叫的型別有 Get 的方法 (例如， <xref:System.Data.OracleClient.OracleDataReader.GetByte%2A>，<xref:System.Data.OracleClient.OracleDataReader.GetChar%2A>等等)。</span><span class="sxs-lookup"><span data-stu-id="363bf-399">To avoid raising an error, call this method to check for null column values before calling the typed Get methods (for example, <xref:System.Data.OracleClient.OracleDataReader.GetByte%2A>, <xref:System.Data.OracleClient.OracleDataReader.GetChar%2A>, and so on).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="363bf-400">取得使用原生格式的資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-400">Gets the value of a column in its native format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int i); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="363bf-401">資料行序數。</span><span class="sxs-lookup"><span data-stu-id="363bf-401">The column ordinal.</span></span></param>
        <summary><span data-ttu-id="363bf-402">提供資料行序數，取得使用原生格式的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-402">Gets the value of the specified column in its native format given the column ordinal.</span></span></summary>
        <value><span data-ttu-id="363bf-403">使用原生格式的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-403">The value of the specified column in its native format.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="363bf-404">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</span><span class="sxs-lookup"><span data-stu-id="363bf-404">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="363bf-405">資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="363bf-405">The column name.</span></span></param>
        <summary><span data-ttu-id="363bf-406">提供資料行名稱，取得使用原生格式的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-406">Gets the value of the specified column in its native format given the column name.</span></span></summary>
        <value><span data-ttu-id="363bf-407">使用原生格式的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="363bf-407">The value of the specified column in its native format.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="363bf-408">找不到具有指定名稱的資料行。</span><span class="sxs-lookup"><span data-stu-id="363bf-408">No column with the specified name was found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="363bf-409">將 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 前移到下一個結果。</span><span class="sxs-lookup"><span data-stu-id="363bf-409">Advances the <see cref="T:System.Data.OracleClient.OracleDataReader" /> to the next result</span></span></summary>
        <returns>
          <span data-ttu-id="363bf-410">如果有其他的結果集 (Result Set)，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="363bf-410"><see langword="true" /> if there are more result sets; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-411">您必須使用`REF CURSOR`時呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="363bf-411">You must use a `REF CURSOR` when calling this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="363bf-412">將 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 推進到下一筆記錄。</span><span class="sxs-lookup"><span data-stu-id="363bf-412">Advances the <see cref="T:System.Data.OracleClient.OracleDataReader" /> to the next record.</span></span></summary>
        <returns>
          <span data-ttu-id="363bf-413">如果有多個資料列，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="363bf-413"><see langword="true" /> if there are more rows; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-414">預設位置<xref:System.Data.OracleClient.OracleDataReader>第一筆記錄早。</span><span class="sxs-lookup"><span data-stu-id="363bf-414">The default position of the <xref:System.Data.OracleClient.OracleDataReader> is prior to the first record.</span></span> <span data-ttu-id="363bf-415">因此，您必須呼叫<xref:System.Data.OracleClient.OracleDataReader.Read%2A>開始存取任何資料。</span><span class="sxs-lookup"><span data-stu-id="363bf-415">Therefore, you must call <xref:System.Data.OracleClient.OracleDataReader.Read%2A> to begin accessing any data.</span></span>  
  
 <span data-ttu-id="363bf-416">多個<xref:System.Data.OracleClient.OracleDataReader>可以開啟任何給定的時間。</span><span class="sxs-lookup"><span data-stu-id="363bf-416">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="363bf-417">下列範例會建立<xref:System.Data.OracleClient.OracleConnection>、 <xref:System.Data.OracleClient.OracleCommand>，和<xref:System.Data.OracleClient.OracleDataReader>。</span><span class="sxs-lookup"><span data-stu-id="363bf-417">The following example creates an <xref:System.Data.OracleClient.OracleConnection>, an <xref:System.Data.OracleClient.OracleCommand>, and an <xref:System.Data.OracleClient.OracleDataReader>.</span></span> <span data-ttu-id="363bf-418">此範例會讀取整個資料，並將它寫出至主控台。</span><span class="sxs-lookup"><span data-stu-id="363bf-418">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="363bf-419">最後，範例會關閉<xref:System.Data.OracleClient.OracleDataReader>，然後在<xref:System.Data.OracleClient.OracleConnection>。</span><span class="sxs-lookup"><span data-stu-id="363bf-419">Finally, the example closes the <xref:System.Data.OracleClient.OracleDataReader>, then the <xref:System.Data.OracleClient.OracleConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="363bf-420">取得因執行 SQL 陳述式所變更、插入或刪除的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="363bf-420">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</span></span></summary>
        <value><span data-ttu-id="363bf-421">已變更、插入或刪除的資料列數。</span><span class="sxs-lookup"><span data-stu-id="363bf-421">The number of rows changed, inserted, or deleted.</span></span> <span data-ttu-id="363bf-422">SELECT 陳述式的值為 -1，如果沒有任何資料列受到影響，或是陳述式失敗，則為 0。</span><span class="sxs-lookup"><span data-stu-id="363bf-422">-1 for SELECT statements; 0 if no rows were affected, or the statement failed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="363bf-423"><xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>直到讀取所有資料列，而且您關閉屬性未設定<xref:System.Data.OracleClient.OracleDataReader>。</span><span class="sxs-lookup"><span data-stu-id="363bf-423">The <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="363bf-424"><xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> 和<xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>屬性之後，您可以呼叫<xref:System.Data.OracleClient.OracleDataReader>已關閉。</span><span class="sxs-lookup"><span data-stu-id="363bf-424"><xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> and <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.OracleClient.OracleDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>