<Type Name="DataServiceContext" FullName="System.Data.Services.Client.DataServiceContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2feb98a9c9d5b9c4ac37229b57d6ee905d722942" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39825841" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataServiceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataServiceContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Client.DataServiceContext" />
  <TypeSignature Language="VB.NET" Value="Public Class DataServiceContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataServiceContext" />
  <TypeSignature Language="F#" Value="type DataServiceContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Data.Services.Client.DataServiceContext" /> 代表資料服務的執行階段內容。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] 是無狀態的，但 <xref:System.Data.Services.Client.DataServiceContext> 不是。 為了支援如更新管理等功能，會在互動之間維護用戶端上的狀態。 這個類別以及 <xref:System.Data.Services.Client.DataServiceQuery> 類別 (後者表示對資料服務的特定 HTTP 要求) 是用戶端程式庫中兩個主要類別。  
  
   
  
## Examples  
 下列範例示範如何使用「加入服務參考」工具所產生的 <xref:System.Data.Services.Client.DataServiceContext>，以隱含方式對 Northwind 資料服務執行查詢，傳回所有客戶。 內容會自動判斷所要求之 `Customers` 實體集的 URI。 發生列舉時會隱含執行查詢。 當您完成時，會建立 Northwind 資料服務[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]。  
  
 [!code-csharp[Astoria Northwind Client#GetAllCustomers](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#getallcustomers)]
 [!code-vb[Astoria Northwind Client#GetAllCustomers](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#getallcustomers)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceContext (Uri serviceRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri serviceRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceRoot As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceContext(Uri ^ serviceRoot);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceContext : Uri -&gt; System.Data.Services.Client.DataServiceContext" Usage="new System.Data.Services.Client.DataServiceContext serviceRoot" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceRoot" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="serviceRoot">識別資料服務根目錄的絕對 URI。</param>
        <summary>使用指定的 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 初始化 <paramref name="serviceRoot" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用戶端程式庫預期 `baseURI` 指向資料服務的根目錄，但並未發出對它進行驗證的要求。 如果 `baseURI` 不識別服務的根目錄，用戶端程式庫則未定義。  
  
 有尾端斜線的 URI 等同於沒有尾端字元的 URI。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">當 <paramref name="serviceRoot" /> 為 null 時。</exception>
        <exception cref="T:System.ArgumentException">如果 <paramref name="serviceRoot" /> 不是絕對 URI 
-或- 
如果 <paramref name="serviceRoot" /> 是格式正確的 URI，但不含查詢或查詢片段。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddLink">
      <MemberSignature Language="C#" Value="public void AddLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AddLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.AddLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.AddLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">新連結的來源物件。</param>
        <param name="sourceProperty">來源物件上傳回相關物件的導覽屬性名稱。</param>
        <param name="target">透過新連結與來源物件相關的物件。</param>
        <summary>將指定的連結加入 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 正在追蹤的物件集。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通知 <xref:System.Data.Services.Client.DataServiceContext> 相關來源與目標物件之間有新連結，而且連結是以指定的來源屬性表示。 <xref:System.Data.Services.Client.DataServiceContext> 會將這個連結加入新建立的連結集，而在對 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> 的下一個呼叫時便會將該連結集傳送至資料服務。  
  
 連結是單向的關聯性。 因為關聯是雙向的在一對一的關聯中您必須呼叫<xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>以建立反向連結，並在多對一關聯，您必須呼叫<xref:System.Data.Services.Client.DataServiceContext.SetLink%2A>建立關聯的 「 一 」 端的參考連結。  
  
 目標物件必須是 `sourceProperty` 參數所識別的型別，或是該型別的子型別。  
  
   
  
## Examples  
 下列範例示範如何使用 <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> 和 <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> 方法來建立定義關聯性的連結。 此範例中也會明確設定 `Order_Details` 物件的導覽屬性。 這個範例會使用<xref:System.Data.Services.Client.DataServiceContext>根據您完成時，會建立的 Northwind 資料服務加入服務參考 工具所產生[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]。  
  
 [!code-csharp[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#addorderdetailtoorder)]
 [!code-vb[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#addorderdetailtoorder)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">當 <paramref name="source" />、<paramref name="sourceProperty" /> 或 <paramref name="target" /> 為 null 時。</exception>
        <exception cref="T:System.InvalidOperationException">如果連結已存在。  
  
-或- 
如果 <paramref name="source" /> 或 <paramref name="target" /> 物件處於 <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> 或 <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> 狀態。  
  
-或- 
如果 <paramref name="sourceProperty" /> 不是集合。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public void AddObject (string entitySetName, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddObject(string entitySetName, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AddObject(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddObject (entitySetName As String, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddObject(System::String ^ entitySetName, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.AddObject : string * obj -&gt; unit" Usage="dataServiceContext.AddObject (entitySetName, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName">將加入資源的實體集名稱。</param>
        <param name="entity">
          <see cref="T:System.Data.Services.Client.DataServiceContext" /> 所要追蹤的物件。</param>
        <summary>將指定的物件加入 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 正在追蹤的物件集。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 物件是以 <xref:System.Data.Services.Client.DataServiceContext> 狀態放入 <xref:System.Data.Services.Client.EntityStates.Added> 的追蹤集。 <xref:System.Data.Services.Client.DataServiceContext> 會嘗試在下次呼叫 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> 時透過 HTTP POST 插入物件。 這個方法不會將與指定之實體相關的物件加入 <xref:System.Data.Services.Client.DataServiceContext>。 每個物件必須透過單獨呼叫 <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A> 來加入。  
  
 此方法不會驗證指定的實體集是與相關聯的資料服務中<xref:System.Data.Services.Client.DataServiceContext>或加入的物件具有必要的屬性才能加入至指定`entity set`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">當 <paramref name="entitySetName" /> 或 <paramref name="entity" /> 為 null 時。</exception>
        <exception cref="T:System.ArgumentException">當 <paramref name="entitySetName" /> 是空的。  
  
-或- 
當 <paramref name="entity" /> 沒有定義的索引鍵屬性時。</exception>
        <exception cref="T:System.InvalidOperationException">當實體已經受到內容追蹤時。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRelatedObject">
      <MemberSignature Language="C#" Value="public void AddRelatedObject (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRelatedObject(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRelatedObject (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRelatedObject(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.AddRelatedObject : obj * string * obj -&gt; unit" Usage="dataServiceContext.AddRelatedObject (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">內容正在追蹤的父物件。</param>
        <param name="sourceProperty">導覽屬性的名稱，此屬性會根據兩個實體之間的關聯傳回相關物件。</param>
        <param name="target">正在加入的相關物件。</param>
        <summary>將相關物件加入至內容中，並建立連結以定義單一要求中兩個物件之間的關聯性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以呼叫 <xref:System.Data.Services.Client.DataServiceContext.AddRelatedObject%2A> 方法加入相關物件，而不呼叫這三個方法：<xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>、<xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>、<xref:System.Data.Services.Client.DataServiceContext.SetLink%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyingChanges">
      <MemberSignature Language="C#" Value="public bool ApplyingChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyingChanges" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.ApplyingChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplyingChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyingChanges { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplyingChanges : bool" Usage="System.Data.Services.Client.DataServiceContext.ApplyingChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，該值指出 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 目前是否正在套用追蹤之物件的變更。</summary>
        <value>如果目前正在套用變更則傳回 <see langword="true" />，否則傳回 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachLink">
      <MemberSignature Language="C#" Value="public void AttachLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AttachLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.AttachLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.AttachLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">新連結中的來源物件。</param>
        <param name="sourceProperty">來源物件上的屬性名稱，表示來源與目標物件之間的連結。</param>
        <param name="target">連結中的目標物件，這個連結繫結至這個呼叫中指定的來源物件。 目標物件必須是來源屬性所識別的型別，或是該型別的子型別。</param>
        <summary>通知 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 開始追蹤指定的連結，此連結定義實體物件之間的關聯性。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">當 <paramref name="source" />、<paramref name="sourceProperty" /> 或 <paramref name="target" /> 為 null 時。</exception>
        <exception cref="T:System.InvalidOperationException">當兩個實體之間的連結已存在時。  
  
-或- 
當 <paramref name="source" /> 或 <paramref name="target" /> 處於 <see cref="F:System.Data.Services.Client.EntityStates.Added" /> 或 <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> 狀態時。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AttachTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>通知 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 開始追蹤指定的資源並提供資源在指定之資源集內的位置。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AttachTo">
      <MemberSignature Language="C#" Value="public void AttachTo (string entitySetName, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachTo(string entitySetName, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachTo (entitySetName As String, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachTo(System::String ^ entitySetName, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.AttachTo : string * obj -&gt; unit" Usage="dataServiceContext.AttachTo (entitySetName, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName">包含資源的實體集名稱。</param>
        <param name="entity">
          <see cref="T:System.Data.Services.Client.DataServiceContext" /> 要追蹤的資源。 資源是以未變更狀態附加。</param>
        <summary>通知 <see cref="T:System.Data.Services.Client.DataServiceContext" />，開始追蹤指定的資源，並提供指定的資源集內資源的位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果實體是物件圖形的一部分，這項作業不會周遊該圖形以加入相關物件。 這是一種淺層作業。  
  
 此方法不會驗證與 <xref:System.Data.Services.Client.DataServiceContext> 相關聯的資料服務中是否發生指定的實體集。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">當 <paramref name="entity" /> 或 <paramref name="entitySetName" /> 為 <see langword="null" /> 時。</exception>
        <exception cref="T:System.ArgumentException">當 <paramref name="entitySetName" /> 是空字串時。  
  
-或- 
當 <paramref name="entity" /> 沒有定義的索引鍵屬性時。</exception>
        <exception cref="T:System.InvalidOperationException">當 <paramref name="entity" /> 已經受到內容追蹤時。</exception>
      </Docs>
    </Member>
    <Member MemberName="AttachTo">
      <MemberSignature Language="C#" Value="public void AttachTo (string entitySetName, object entity, string etag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachTo(string entitySetName, object entity, string etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachTo (entitySetName As String, entity As Object, etag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachTo(System::String ^ entitySetName, System::Object ^ entity, System::String ^ etag);" />
      <MemberSignature Language="F#" Value="member this.AttachTo : string * obj * string -&gt; unit" Usage="dataServiceContext.AttachTo (entitySetName, entity, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="etag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entitySetName">字串值，包含實體附加至的實體集名稱。</param>
        <param name="entity">要加入的實體。</param>
        <param name="etag">etag 值，表示上次從資料服務擷取時的實體狀態。 此值被視為不透明的字串；用戶端程式庫不會對它執行任何驗證。</param>
        <summary>通知 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 開始追蹤指定的資源並提供資源在指定之資源集內的位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個方法會通知 <xref:System.Data.Services.Client.DataServiceContext>，開始追蹤指定的實體並識別該實體所屬的實體集。  
  
 如果實體是物件圖形的一部分，這項作業不會周遊該圖形以加入相關物件。 物件是以未變更狀態加入 <xref:System.Data.Services.Client.DataServiceContext>。 此方法不會驗證與 <xref:System.Data.Services.Client.DataServiceContext> 相關聯的資料服務中是否發生指定的實體集。  
  
 如果使用有 etag 的多載，則會使指定的 etag 與新附加的實體產生關聯。 於是，etag 就會根據 HTTP 語意隨著實體的所有後續更新或查詢作業傳送至資料服務。 不建議手動產生 etag 值，提供此多載是為了讓可能已序列化並儲存的實體連同相關並行中繼資料重新附加。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">當 <paramref name="entitySetName" /> 為 <see langword="null" /> 時。  
  
-或- 
當 <paramref name="entity" /> 為 <see langword="null" /> 時。</exception>
        <exception cref="T:System.ArgumentException">當 <paramref name="entitySetName" /> 是空字串時。  
  
-或- 
當提供的物件沒有索引鍵屬性時。</exception>
        <exception cref="T:System.InvalidOperationException">當提供的物件已經受到內容追蹤時</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri" Usage="System.Data.Services.Client.DataServiceContext.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得識別目標資料服務根目錄的絕對 URI。</summary>
        <value>識別 T 資料服務根目錄的絕對 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有尾端斜線的 URI 等同於沒有尾端字元的 URI。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecute&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>以非同步方式將要求傳送到資料服務來執行特定的 URI。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute&lt;T&gt; (System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; continuation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute&lt;T&gt;(class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!!T&gt; continuation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute(Of T) (continuation As DataServiceQueryContinuation(Of T), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; IAsyncResult ^ BeginExecute(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ continuation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginExecute (continuation, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">查詢所傳回的型別。</typeparam>
        <param name="continuation">
          <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> 物件，表示從資料服務傳回的下一頁資料。</param>
        <param name="callback">有結果可供用戶端使用時要叫用的方法。</param>
        <param name="state">傳遞至回呼的使用者定義狀態物件。</param>
        <summary>非同步傳送要求給資料服務，在分頁式查詢結果中擷取下一頁資料。</summary>
        <returns>
          <see cref="T:System.IAsyncResult" />，表示作業的狀態。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 提供的 <xref:System.Data.Services.Client.DataServiceQueryContinuation%601> 物件包含 URI，在執行時會在查詢結果中傳回下一頁資料。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute&lt;TElement&gt; (Uri requestUri, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute&lt;TElement&gt;(class System.Uri requestUri, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute(Of TElement) (requestUri As Uri, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; IAsyncResult ^ BeginExecute(Uri ^ requestUri, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : Uri * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginExecute (requestUri, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">查詢所傳回的型別。</typeparam>
        <param name="requestUri">查詢要求將傳送至的 URI。 URI 可以是任何有效的資料服務 URI；它能包含 <c>$</c> 查詢參數。</param>
        <param name="callback">有結果可供用戶端使用時要叫用的方法。</param>
        <param name="state">傳遞至回呼的使用者定義狀態物件。</param>
        <summary>以非同步方式傳送要求，讓這個呼叫不會在等候來自服務的結果時封鎖處理。</summary>
        <returns>用於追蹤非同步作業之狀態的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回的 <xref:System.IAsyncResult> 物件用來確定非同步作業已完成的時間。 如需詳細資訊，請參閱 <<c0> [ 非同步作業](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md)。  
  
 <xref:System.Data.Services.Client.DataServiceContext.BeginExecute%2A> 方法會使用和 <xref:System.Data.Services.Client.DataServiceContext.Execute%2A> 相同的語意，但是此方法會以非同步方式傳送要求，讓這個呼叫不會在等候來自服務的結果時封鎖處理。 根據標準的開始-結束非同步模式，在擷取查詢結果時會叫用所提供的回呼。  
  
   
  
## Examples  
 下列範例示範如何透過呼叫 <xref:System.Data.Services.Client.DataServiceQuery%601.BeginExecute%2A> 方法啟動查詢來執行非同步查詢。 內嵌委派會呼叫 <xref:System.Data.Services.Client.DataServiceQuery%601.EndExecute%2A> 方法以顯示查詢結果。 這個範例會使用<xref:System.Data.Services.Client.DataServiceContext>根據您完成時，會建立的 Northwind 資料服務加入服務參考 工具所產生[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]。  
  
 [!code-csharp[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#executequeryasync)]
 [!code-vb[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#executequeryasync)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteBatch">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteBatch (AsyncCallback callback, object state, params System.Data.Services.Client.DataServiceRequest[] queries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteBatch(class System.AsyncCallback callback, object state, class System.Data.Services.Client.DataServiceRequest[] queries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteBatch (callback As AsyncCallback, state As Object, ParamArray queries As DataServiceRequest()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteBatch(AsyncCallback ^ callback, System::Object ^ state, ... cli::array &lt;System::Data::Services::Client::DataServiceRequest ^&gt; ^ queries);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteBatch : AsyncCallback * obj * System.Data.Services.Client.DataServiceRequest[] -&gt; IAsyncResult" Usage="dataServiceContext.BeginExecuteBatch (callback, state, queries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="queries" Type="System.Data.Services.Client.DataServiceRequest[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="callback">擷取對批次要求的回應時所呼叫的委派。</param>
        <param name="state">使用者定義的狀態物件，用於將內容資料傳遞給回呼方法。</param>
        <param name="queries">要包含在批次要求中的查詢要求陣列。</param>
        <summary>以非同步方式和批次方式將一組查詢送出至資料服務。</summary>
        <returns>用於追蹤非同步作業之狀態的 <see cref="T:System.IAsyncResult" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回的 <xref:System.IAsyncResult> 物件用來確定非同步作業已完成的時間。 如需詳細資訊，請參閱 <<c0> [ 非同步作業](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md)。  
  
 這些查詢會指定為 <xref:System.Data.Services.Client.DataServiceRequest%601> 執行個體。 這個方法會傳回表示整個批次要求之回應的 <xref:System.Data.Services.Client.DataServiceResponse>。 個別查詢回應表示為 <xref:System.Data.Services.Client.DataServiceResponse> 物件，可透過列舉 <xref:System.Data.Services.Client.DataServiceResponse> 執行個體存取這些物件。  
  
 當此方法傳回時，已從網路資料流讀取批次要求的完整 HTTP 回應，但尚未處理回應。 除非回應中的指定之實體經過列舉，否則不會對該實體進行任何識別 (Identity) 解析或物件具體化。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetReadStream">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetReadStream (object entity, System.Data.Services.Client.DataServiceRequestArgs args, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetReadStream(object entity, class System.Data.Services.Client.DataServiceRequestArgs args, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetReadStream (entity As Object, args As DataServiceRequestArgs, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetReadStream(System::Object ^ entity, System::Data::Services::Client::DataServiceRequestArgs ^ args, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetReadStream : obj * System.Data.Services.Client.DataServiceRequestArgs * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginGetReadStream (entity, args, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="args" Type="System.Data.Services.Client.DataServiceRequestArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">具有要擷取之二進位屬性的實體。</param>
        <param name="args">
          <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> 類別的執行個體，其中包含 HTTP 要求訊息的設定。</param>
        <param name="callback">有結果可供用戶端使用時要叫用的方法。</param>
        <param name="state">傳遞至回呼的使用者定義狀態物件。</param>
        <summary>以非同步方式來取得做為資料流之指定實體的二進位屬性資料，以及指定的訊息標題。</summary>
        <returns>用於追蹤非同步作業之狀態的 <see cref="T:System.IAsyncResult" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A>方法以非同步方式要求資料流，其中包含所要求的二進位屬性`entity`。  
  
 在 AtomPub 通訊協定，`entity`是媒體連結項目，二進位屬性相關聯的媒體資源。  
  
 不會對 `args` 中設定的標頭執行任何驗證。 因此，請不要使用變更要求意義的方式變更 HTTP 標頭。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">提供給方法的任何參數為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="entity" /> 未受到此 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 追蹤。  
  
-或- 
<paramref name="entity" /> 處於 <see cref="F:System.Data.Services.Client.EntityStates.Added" /> 狀態。  
  
-或- 
<paramref name="entity" /> 並不是媒體連結項目，而且也沒有二進位屬性。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadProperty">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>開始進行從資料服務載入指定的屬性值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadProperty">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadProperty (object entity, string propertyName, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadProperty(object entity, string propertyName, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadProperty (entity As Object, propertyName As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadProperty(System::Object ^ entity, System::String ^ propertyName, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadProperty : obj * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginLoadProperty (entity, propertyName, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">包含要載入之屬性的實體。</param>
        <param name="propertyName">要載入的指定之實體上的屬性名稱。</param>
        <param name="callback">接收到對要求的回應時所呼叫的委派。</param>
        <param name="state">使用者定義的狀態物件，用於將內容資料傳遞給回呼方法。</param>
        <summary>從資料服務非同步載入指定之屬性的值。</summary>
        <returns>
          <see langword="IAsyncResult" />，表示非同步作業的狀態。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個方法會叫用擷取屬性值的網路作業。 指定的屬性可能是實體上的任何一個屬性，包括代表關聯或連結的屬性。 如果屬性表示關聯或連結或是擱置的屬性，呼叫這個方法則會提供用戶端一個延遲載入資源的方式。 如果實體處於已修改狀態，屬性值會載入相關實體，並將這些實體和任何連結標記成未變更。  
  
 如果已載入該屬性，則呼叫此方法會讓您重新整理屬性的值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadProperty">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadProperty (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation continuation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadProperty(object entity, string propertyName, class System.Data.Services.Client.DataServiceQueryContinuation continuation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadProperty (entity As Object, propertyName As String, continuation As DataServiceQueryContinuation, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadProperty(System::Object ^ entity, System::String ^ propertyName, System::Data::Services::Client::DataServiceQueryContinuation ^ continuation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadProperty : obj * string * System.Data.Services.Client.DataServiceQueryContinuation * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginLoadProperty (entity, propertyName, continuation, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">包含要載入之屬性的實體。</param>
        <param name="propertyName">要載入的指定之實體的屬性名稱。</param>
        <param name="continuation">
          <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> 物件，表示從資料服務傳回的下一頁相關實體資料。</param>
        <param name="callback">有結果可供用戶端使用時要叫用的方法。</param>
        <param name="state">傳遞至回呼的使用者定義狀態物件。</param>
        <summary>透過使用提供的查詢接續物件，以非同步方式從資料服務載入下一頁相關實體。</summary>
        <returns>
          <see cref="T:System.IAsyncResult" />，表示作業的狀態。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 提供的 <xref:System.Data.Services.Client.DataServiceQueryContinuation%601> 物件包含 URI，在執行時會在查詢結果中傳回下一頁資料。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadProperty">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadProperty (object entity, string propertyName, Uri nextLinkUri, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadProperty(object entity, string propertyName, class System.Uri nextLinkUri, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Uri,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadProperty (entity As Object, propertyName As String, nextLinkUri As Uri, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadProperty(System::Object ^ entity, System::String ^ propertyName, Uri ^ nextLinkUri, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadProperty : obj * string * Uri * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginLoadProperty (entity, propertyName, nextLinkUri, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="nextLinkUri" Type="System.Uri" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">包含要載入之屬性的實體。</param>
        <param name="propertyName">要載入的指定之實體的屬性名稱。</param>
        <param name="nextLinkUri">用於載入下一個結果頁的 URI。</param>
        <param name="callback">有結果可供用戶端使用時要叫用的方法。</param>
        <param name="state">傳遞至回呼的使用者定義狀態物件。</param>
        <summary>透過使用提供的下一個連結 URI，以非同步方式從資料服務載入一頁相關實體。</summary>
        <returns>用於追蹤非同步作業之狀態的 <see cref="T:System.IAsyncResult" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當 `entity` 處於 <xref:System.Data.Services.Client.EntityStates.Unchanged> 或 <xref:System.Data.Services.Client.EntityStates.Modified> 狀態時，相關實體是以 <xref:System.Data.Services.Client.EntityStates.Unchanged> 狀態載入，而且實體之間的連結也是以 <xref:System.Data.Services.Client.EntityStates.Unchanged> 狀態建立。  
  
 當 `entity` 處於 <xref:System.Data.Services.Client.EntityStates.Deleted> 狀態時，相關實體是以 <xref:System.Data.Services.Client.EntityStates.Unchanged> 狀態載入，而實體之間的連結則是以 <xref:System.Data.Services.Client.EntityStates.Deleted> 狀態建立。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSaveChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將自從上一次儲存變更後 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 所收集之暫止的變更送出至資料服務。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSaveChanges">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSaveChanges (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSaveChanges(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSaveChanges (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSaveChanges(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSaveChanges : AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginSaveChanges (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">作業完成時要呼叫的委派。</param>
        <param name="state">使用者定義的狀態物件，用於將內容資料傳遞給回呼方法。</param>
        <summary>以非同步方式將自從上一次儲存變更後 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 所收集之暫止的變更送出至資料服務。</summary>
        <returns>
          <see langword="IAsyncResult" />，表示非同步作業的狀態。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 變更會以呼叫 <xref:System.Data.Services.Client.DataServiceContext>、<xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>、<xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>、<xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A>、<xref:System.Data.Services.Client.DataServiceContext.AttachLink%2A>、<xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>、<xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A> 或 <xref:System.Data.Services.Client.DataServiceContext.Detach%2A> 的方式加入至 <xref:System.Data.Services.Client.DataServiceContext.DetachLink%2A>。  
  
 變更會以如同 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> 方法的方式傳送至資料服務：每一個 HTTP 要求進行一個變更作業。  
  
 如果在處理作業時發生錯誤，資料服務不會處理任何其他作業， 而是產生回應，告知用戶端哪些作業已執行、結果，以及哪些作業由於錯誤而未嘗試。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSaveChanges">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSaveChanges (System.Data.Services.Client.SaveChangesOptions options, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSaveChanges(valuetype System.Data.Services.Client.SaveChangesOptions options, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.Data.Services.Client.SaveChangesOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSaveChanges (options As SaveChangesOptions, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSaveChanges(System::Data::Services::Client::SaveChangesOptions options, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSaveChanges : System.Data.Services.Client.SaveChangesOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginSaveChanges (options, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Data.Services.Client.SaveChangesOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="options">有關用戶端儲存暫止的變更集之方式的選項。</param>
        <param name="callback">作業完成時要呼叫的委派。</param>
        <param name="state">使用者定義的狀態物件，用於將內容資料傳遞給回呼方法。</param>
        <summary>以非同步方式將自從上一次儲存變更後 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 所收集之暫止的變更送出至資料服務。</summary>
        <returns>
          <see cref="T:System.IAsyncResult" />，表示非同步作業的狀態。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 變更會以呼叫 <xref:System.Data.Services.Client.DataServiceContext>、<xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>、<xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>、<xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A>、<xref:System.Data.Services.Client.DataServiceContext.AttachLink%2A>、<xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>、<xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A> 或 <xref:System.Data.Services.Client.DataServiceContext.Detach%2A> 的方式加入至 <xref:System.Data.Services.Client.DataServiceContext.DetachLink%2A>。  
  
 如果設定 <xref:System.Data.Services.Client.SaveChangesOptions.Batch>，則所有暫止的變更都包含在批次中的單一變更集，並在單一 HTTP 要求中送出給資料服務。 這項作業需要目標服務支援批次處理才行。  
  
 如果 <xref:System.Data.Services.Client.SaveChangesOptions.Batch> 未設定：  
  
-   變更傳送到資料服務的方式就如同 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges> 方法一樣：每個 HTTP 要求一個作業。  
  
-   <xref:System.Data.Services.Client.OperationResponse.StatusCode%2A> 一定會是 200。  
  
-   <xref:System.Data.Services.Client.OperationResponse.Headers%2A> 屬性會傳回空集合。  
  
 如果設定 <xref:System.Data.Services.Client.SaveChangesOptions.ContinueOnError>：  
  
-   如果在處理變更集作業時發生錯誤，資料服務不會嘗試變更集的後續作業，不過資料服務會繼續處理批次中的下一個變更集。  
  
-   已設定 <xref:System.Data.Services.Client.SaveChangesOptions.Batch> 時不能設定此選項，因為當啟用批次處理時，所有作業都放置在單一變更集。  
  
 如果 <xref:System.Data.Services.Client.SaveChangesOptions.ContinueOnError> 未設定：  
  
-   如果在處理作業時發生錯誤，資料服務不會處理任何其他作業，  
  
 而是產生回應，告知用戶端哪些作業已執行、其結果，以及哪些作業由於錯誤而未嘗試。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelRequest">
      <MemberSignature Language="C#" Value="public void CancelRequest (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelRequest(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.CancelRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelRequest (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelRequest(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.CancelRequest : IAsyncResult -&gt; unit" Usage="dataServiceContext.CancelRequest asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">正在取消之作業中的 <see cref="T:System.IAsyncResult" /> 物件。</param>
        <summary>嘗試取消與所提供之 <see cref="T:System.IAsyncResult" /> 物件相關聯的作業。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳遞給 <xref:System.IAsyncResult> 參數的 `asyncResult` 物件是在非同步執行作業時傳回的物件。 如需詳細資訊，請參閱 <<c0> [ 非同步作業](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md)。處理此要求，直到<xref:System.Data.Services.Client.DataServiceContext>執行個體不是可預測的狀態。 <xref:System.Data.Services.Client.DataServiceContext>可以放心使用當<xref:System.IAsyncResult.IsCompleted%2A>屬性`asyncResult`傳回值的`true`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQuery&lt;T&gt; CreateQuery&lt;T&gt; (string entitySetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceQuery`1&lt;!!T&gt; CreateQuery&lt;T&gt;(string entitySetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.CreateQuery``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateQuery(Of T) (entitySetName As String) As DataServiceQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Services::Client::DataServiceQuery&lt;T&gt; ^ CreateQuery(System::String ^ entitySetName);" />
      <MemberSignature Language="F#" Value="member this.CreateQuery : string -&gt; System.Data.Services.Client.DataServiceQuery&lt;'T&gt;" Usage="dataServiceContext.CreateQuery entitySetName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">查詢所傳回的型別。</typeparam>
        <param name="entitySetName">解析成 URI 的字串。</param>
        <summary>為指定之泛型型別的資料建立資料服務查詢。</summary>
        <returns>新的 <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> 執行個體，表示資料服務查詢。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Data.Services.Client.DataServiceContext.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定驗證資訊，此資訊為透過 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 物件所建立之每個查詢所使用。</summary>
        <value>為 Web 用戶端驗證擷取認證的基底驗證介面。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataNamespace">
      <MemberSignature Language="C#" Value="public string DataNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.DataNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property DataNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataNamespace : string with get, set" Usage="System.Data.Services.Client.DataServiceContext.DataNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 Atom 承載之資料項目 (而非中繼資料項目) 的 XML 命名空間 (Namespace)。</summary>
        <value>字串，表示承載 (格式為 ATOM) 之資料項目的 XML 命名空間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性的預設值為預設 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] 命名空間：`http://schemas.microsoft.com/ado/2007/08/dataservices`。  
  
 此屬性會影響剖析來自資料服務之內容時所用的命名空間以及產生傳送到資料服務之內容時所用的命名空間。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteLink">
      <MemberSignature Language="C#" Value="public void DeleteLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.DeleteLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.DeleteLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.DeleteLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">要標記成刪除的連結中的來源物件。</param>
        <param name="sourceProperty">來源物件上用來存取目標物件的導覽屬性名稱。</param>
        <param name="target">連結中所含有的目標物件，這個連結繫結至來源物件。 目標物件必須是來源屬性所識別的型別，或是該型別的子型別。</param>
        <summary>將 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 正在追蹤的連結清單中的連結狀態變更成已刪除。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不論連結的目前狀態為何，<xref:System.Data.Services.Client.DataServiceContext> 正在追蹤的任何連結都可以被中斷連結。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">當 <paramref name="source" />、<paramref name="sourceProperty" /> 或 <paramref name="target" /> 為 null 時。</exception>
        <exception cref="T:System.InvalidOperationException">當 <paramref name="source" /> 或 <paramref name="target" /> 處於 <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> 或 <see cref="F:System.Data.Services.Client.EntityStates.Added" /> 狀態時。  
  
-或- 
當 <paramref name="sourceProperty" /> 不是集合時。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="public void DeleteObject (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteObject(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.DeleteObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteObject (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteObject(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.DeleteObject : obj -&gt; unit" Usage="dataServiceContext.DeleteObject entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">要變更成已刪除狀態的追蹤實體。</param>
        <summary>將 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 中指定之物件的狀態變更成已刪除。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法也會將指定之實體的所有連結標記成已刪除。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">當 <paramref name="entity" /> 為 <see langword="null" /> 時。</exception>
        <exception cref="T:System.InvalidOperationException">當物件未受到 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 追蹤時。</exception>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public bool Detach (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Detach(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.Detach(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Detach (entity As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Detach(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.Detach : obj -&gt; bool" Usage="dataServiceContext.Detach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">要從 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 中斷連結的追蹤實體。</param>
        <summary>從 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 正在追蹤的實體清單中移除實體。</summary>
        <returns>如果指定的實體已中斷連結則會傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 物件卸離後就不再受到 <xref:System.Data.Services.Client.DataServiceContext> 追蹤。  
  
 可以呼叫 <xref:System.Data.Services.Client.DataServiceContext.Detach%2A> 方法卸離任何物件，而不管其 <xref:System.Data.Services.Client.EntityStates>。  
  
 在中斷連結指定的實體之後，這個方法也會一併中斷連結與實體相關的任何連結。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">當 <paramref name="entity" /> 為 <see langword="null" /> 時。</exception>
      </Docs>
    </Member>
    <Member MemberName="DetachLink">
      <MemberSignature Language="C#" Value="public bool DetachLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DetachLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.DetachLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DetachLink (source As Object, sourceProperty As String, target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DetachLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.DetachLink : obj * string * obj -&gt; bool" Usage="dataServiceContext.DetachLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">要標記成刪除的連結中所含有的來源物件。</param>
        <param name="sourceProperty">來源物件上的屬性名稱，表示來源與目標之間連結中的來源。</param>
        <param name="target">連結中所含有的目標物件，這個連結繫結至來源物件。 目標物件必須是來源屬性所識別的型別，或是該型別的子型別。</param>
        <summary>從 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 正在追蹤的連結清單中移除指定的連結。</summary>
        <returns>如果指定的實體已卸離則傳回 true，否則為 false。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不論連結的目前狀態為何，<xref:System.Data.Services.Client.DataServiceContext> 正在追蹤的任何連結都可以被中斷連結。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">當 <paramref name="source" /> 或 <paramref name="sourceProperty" /> 為 <see langword="null" /> 時。</exception>
        <exception cref="T:System.ArgumentException">當 <paramref name="sourceProperty" /> 是空字串時。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndExecute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TElement&gt; EndExecute&lt;TElement&gt; (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; EndExecute&lt;TElement&gt;(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecute(Of TElement) (asyncResult As IAsyncResult) As IEnumerable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ EndExecute(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecute : IAsyncResult -&gt; seq&lt;'Element&gt;" Usage="dataServiceContext.EndExecute asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">查詢所傳回的型別。</typeparam>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> 物件</param>
        <summary>呼叫以完成 <see cref="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)" />。</summary>
        <returns>查詢作業所傳回的結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據標準的開始-結束非同步模式，在擷取查詢結果時會叫用所提供的回呼。 如需詳細資訊，請參閱 <<c0> [ 非同步作業](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md)。  
  
 叫用回呼的時候，就會已經從 HTTP 資料流讀取所有結果，但是未加以處理，而且不會對任何本機使用者端的物件進行具體化或修改，也不會發生識別解析。 叫用 <xref:System.Data.Services.Client.DataServiceContext.EndExecute%2A> 的時候，就會建立並傳回 <xref:System.Data.Services.Client.DataServiceResponse>，但是仍未處理結果。 只有當使用者列舉結果的時候，才會發生識別解析、物件具體化和管理。  
  
   
  
## Examples  
 下列範例示範如何透過呼叫 <xref:System.Data.Services.Client.DataServiceQuery%601.BeginExecute%2A> 方法啟動查詢來執行非同步查詢。 內嵌委派會呼叫 <xref:System.Data.Services.Client.DataServiceQuery%601.EndExecute%2A> 方法以顯示查詢結果。 這個範例會使用<xref:System.Data.Services.Client.DataServiceContext>根據您完成時，會建立的 Northwind 資料服務加入服務參考 工具所產生[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]。  
  
 [!code-csharp[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#executequeryasync)]
 [!code-vb[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#executequeryasync)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">當 <paramref name="asyncResult" /> 為 <see langword="null" /> 時。</exception>
        <exception cref="T:System.ArgumentException">當 <paramref name="asyncResult" /> 不是來自這個 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 執行個體時。  
  
-或- 
當 <see cref="M:System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)" /> 方法先前已呼叫時。</exception>
        <exception cref="T:System.InvalidOperationException">在執行要求期間或將回應訊息的內容轉換為物件時引發錯誤時。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteBatch">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse EndExecuteBatch (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse EndExecuteBatch(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndExecuteBatch(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteBatch (asyncResult As IAsyncResult) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ EndExecuteBatch(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteBatch : IAsyncResult -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.EndExecuteBatch asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" />，表示非同步作業的狀態。</param>
        <summary>呼叫以完成 <see cref="M:System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])" />。</summary>
        <returns>
          <see langword="DataServiceResult" /> 物件，表示批次作業的結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以批次方式將一組查詢送出至資料服務。 個別查詢回應表示為衍生自 <xref:System.Data.Services.Client.DataServiceResponse> 的 <xref:System.Data.Services.Client.OperationResponse> 物件，可從 <xref:System.Data.Services.Client.DataServiceResponse> 執行個體存取這些物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse EndGetReadStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse EndGetReadStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndGetReadStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetReadStream (asyncResult As IAsyncResult) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ EndGetReadStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetReadStream : IAsyncResult -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.EndGetReadStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">來自包含二進位資料流之 <see cref="M:System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)" /> 作業的結果。</param>
        <summary>呼叫以完成擷取做為資料流之二進位屬性的非同步作業。</summary>
        <returns>
          <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> 的執行個體，其中包含回應資料流與其中繼資料。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫 <xref:System.Data.Services.Client.DataServiceContext.EndGetReadStream%2A> 方法來接收來自 <xref:System.Data.Services.Client.DataServiceContext.BeginGetReadStream%2A> 方法的結果。  
  
 從 <xref:System.Data.Services.Client.DataServiceContext.EndGetReadStream%2A> 方法收到回應之後，<xref:System.Data.Services.Client.DataServiceContext.BeginGetReadStream%2A> 方法才會完成。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse EndLoadProperty (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse EndLoadProperty(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndLoadProperty(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndLoadProperty (asyncResult As IAsyncResult) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ EndLoadProperty(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndLoadProperty : IAsyncResult -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.EndLoadProperty asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" />，表示非同步作業的狀態。</param>
        <summary>呼叫以完成 <see cref="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)" /> 作業。</summary>
        <returns>載入作業的回應。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在要求期間或處理來自資料服務的要求時發生錯誤，則會擲回例外狀況 (Exception)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSaveChanges">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse EndSaveChanges (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse EndSaveChanges(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndSaveChanges(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSaveChanges (asyncResult As IAsyncResult) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ EndSaveChanges(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSaveChanges : IAsyncResult -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.EndSaveChanges asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" />，表示非同步作業的狀態。</param>
        <summary>呼叫以完成 <see cref="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" /> 作業。</summary>
        <returns>
          <see cref="T:System.Data.Services.Client.DataServiceResponse" /> 物件，表示批次作業的結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您應該檢查 <xref:System.Data.Services.Client.DataServiceResponse.BatchStatusCode%2A>，以確保批次作業的結果。 在 <xref:System.Data.Services.Client.DataServiceResponse> 列舉程式所傳回的作業物件上則可以擷取個別作業結果。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Entities">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.EntityDescriptor&gt; Entities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Services.Client.EntityDescriptor&gt; Entities" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Entities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entities As ReadOnlyCollection(Of EntityDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::EntityDescriptor ^&gt; ^ Entities { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::EntityDescriptor ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Entities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.EntityDescriptor&gt;" Usage="System.Data.Services.Client.DataServiceContext.Entities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.EntityDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 目前正在追蹤的所有資源之清單。</summary>
        <value>
          <see cref="T:System.Data.Services.Client.EntityDescriptor" /> 物件的清單，代表 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 目前正在追蹤的所有資源。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果沒有正在追蹤的資源，則傳回零個元素的清單。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Execute&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將要求傳送到資料服務來執行特定的 URI。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Execute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse&lt;T&gt; Execute&lt;T&gt; (System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse`1&lt;!!T&gt; Execute&lt;T&gt;(class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!!T&gt; continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.Execute``1(System.Data.Services.Client.DataServiceQueryContinuation{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute(Of T) (continuation As DataServiceQueryContinuation(Of T)) As QueryOperationResponse(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Services::Client::QueryOperationResponse&lt;T&gt; ^ Execute(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ continuation);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; -&gt; System.Data.Services.Client.QueryOperationResponse&lt;'T&gt;" Usage="dataServiceContext.Execute continuation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">查詢所傳回的型別。</typeparam>
        <param name="continuation">
          <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> 物件，表示從資料服務傳回的下一頁資料。</param>
        <summary>傳送要求給資料服務，在分頁式查詢結果中擷取下一頁資料。</summary>
        <returns>包含查詢結果中下一頁資料的回應。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 提供的 <xref:System.Data.Services.Client.DataServiceQueryContinuation%601> 物件包含 URI，在執行時會在查詢結果中傳回下一頁資料。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在執行要求期間或將回應訊息的內容轉換為物件時引發錯誤時。</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TElement&gt; Execute&lt;TElement&gt; (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; Execute&lt;TElement&gt;(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.Execute``1(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute(Of TElement) (requestUri As Uri) As IEnumerable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ Execute(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.Execute : Uri -&gt; seq&lt;'Element&gt;" Usage="dataServiceContext.Execute requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">查詢所傳回的型別。</typeparam>
        <param name="requestUri">查詢要求將傳送至的 URI。 URI 可以是任何有效的資料服務 URI； 它能包含 $ 查詢參數。</param>
        <summary>將要求傳送到資料服務來執行特定的 URI。</summary>
        <returns>查詢作業的結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.Execute%2A> 方法用於依 URI 查詢資料服務；該方法會導致 HTTP GET 要求發出給資料服務。 指定的要求 URI 可以是絕對或相對 URI。  
  
 如果 `requestUri` 是絕對 URI，這個方法會驗證 URI 是否指向建構 <xref:System.Data.Services.Client.DataServiceContext> 時所指定的相同資料服務。 如果 `requestUri` 是相對，此方法會移除任何前導斜線並將 `requestUri` 附加到建構 <xref:System.Data.Services.Client.DataServiceContext> 時提供的路徑。 在傳遞至 <xref:System.Data.Services.Client.DataServiceContext> 建構函式的 URI 後面會附加斜線 (若沒有的話)。  
  
 當此方法傳回時，已從網路資料流讀取要求的所有 HTTP 回應，但尚未處理回應；不會識別解析或將物件具體化。 除非回應中的指定之實體經過列舉，否則不會對該實體進行任何識別解析或完整物件具體化。  
  
   
  
## Examples  
 本範例使用 `do…while` 迴圈，從資料服務的分頁結果載入 `Customers` 實體。 透過使用下一個連結 URI 呼叫 <xref:System.Data.Services.Client.DataServiceContext.Execute%2A> 方法以接收下一頁資料。  
  
 [!code-csharp[Astoria Northwind Client#GetCustomersPaged](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#getcustomerspaged)]
 [!code-vb[Astoria Northwind Client#GetCustomersPaged](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#getcustomerspaged)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">未收到 <paramref name="requestUri" /> 要求的回應時。</exception>
        <exception cref="T:System.ArgumentNullException">當 <paramref name="requestUri" /> 為 <see langword="null" /> 時。</exception>
        <exception cref="T:System.ArgumentException">當 <paramref name="requestUri" /> 不是資料服務的有效 URI 時。</exception>
        <exception cref="T:System.InvalidOperationException">在執行要求期間或將回應訊息的內容轉換為物件時引發錯誤時。</exception>
        <exception cref="T:System.Data.Services.Client.DataServiceQueryException">當資料服務傳回「HTTP 404：找不到資源」錯誤時。</exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse ExecuteBatch (params System.Data.Services.Client.DataServiceRequest[] queries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse ExecuteBatch(class System.Data.Services.Client.DataServiceRequest[] queries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.ExecuteBatch(System.Data.Services.Client.DataServiceRequest[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteBatch (ParamArray queries As DataServiceRequest()) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ ExecuteBatch(... cli::array &lt;System::Data::Services::Client::DataServiceRequest ^&gt; ^ queries);" />
      <MemberSignature Language="F#" Value="member this.ExecuteBatch : System.Data.Services.Client.DataServiceRequest[] -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.ExecuteBatch queries" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queries" Type="System.Data.Services.Client.DataServiceRequest[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="queries">組成查詢之 <see cref="T:System.Data.Services.Client.DataServiceRequest[]" /> 物件的陣列。</param>
        <summary>以批次方式將一組查詢送出至資料服務。</summary>
        <returns>批次作業的回應。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這些查詢會指定為 <xref:System.Data.Services.Client.DataServiceRequest%601> 執行個體。 這個方法會傳回表示整個批次要求之回應的 <xref:System.Data.Services.Client.DataServiceResponse>。 個別查詢回應表示為個別 <xref:System.Data.Services.Client.OperationResponse> 物件，可透過列舉 <xref:System.Data.Services.Client.DataServiceResponse> 執行個體存取這些物件。  
  
 當此方法傳回時，已從網路資料流讀取批次要求的完整 HTTP 回應，但尚未處理回應。 除非回應中的指定之實體經過列舉，否則不會對該實體進行任何識別 (Identity) 解析或物件具體化。  
  
   
  
## Examples  
 下列範例顯示如何呼叫 <xref:System.Data.Services.Client.DataServiceContext.ExecuteBatch*> 方法，執行 <xref:System.Data.Services.Client.DataServiceRequest%601> 物件的陣列，其中包含從 Northwind 資料服務同時傳回 `Customers` 和 `Products` 物件的查詢。 列舉傳回之 <xref:System.Data.Services.Client.QueryOperationResponse%601> 中的 <xref:System.Data.Services.Client.DataServiceResponse> 物件集合，也會列舉包含在每一個 <xref:System.Data.Services.Client.QueryOperationResponse%601> 中的物件集合。 這個範例會使用<xref:System.Data.Services.Client.DataServiceContext>根據您完成時，會建立的 Northwind 資料服務加入服務參考 工具所產生[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]。  
  
 [!code-csharp[Astoria Northwind Client#BatchQuery](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#batchquery)]
 [!code-vb[Astoria Northwind Client#BatchQuery](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#batchquery)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityDescriptor">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.EntityDescriptor GetEntityDescriptor (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.EntityDescriptor GetEntityDescriptor(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetEntityDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntityDescriptor (entity As Object) As EntityDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::EntityDescriptor ^ GetEntityDescriptor(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetEntityDescriptor : obj -&gt; System.Data.Services.Client.EntityDescriptor" Usage="dataServiceContext.GetEntityDescriptor entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.EntityDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">要為其傳回實體描述元的物件。</param>
        <summary>取得所提供之實體物件的 <see cref="T:System.Data.Services.Client.EntityDescriptor" />。</summary>
        <returns>
          <paramref name="entity" /> 的 <see cref="T:System.Data.Services.Client.EntityDescriptor" /> 執行個體，如果該物件的 <see cref="T:System.Data.Services.Client.EntityDescriptor" /> 不存在，則為 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLinkDescriptor">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.LinkDescriptor GetLinkDescriptor (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.LinkDescriptor GetLinkDescriptor(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetLinkDescriptor(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLinkDescriptor (source As Object, sourceProperty As String, target As Object) As LinkDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::LinkDescriptor ^ GetLinkDescriptor(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.GetLinkDescriptor : obj * string * obj -&gt; System.Data.Services.Client.LinkDescriptor" Usage="dataServiceContext.GetLinkDescriptor (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.LinkDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">連結中的來源物件</param>
        <param name="sourceProperty">
          <c>source</c> 物件上傳回相關物件的導覽屬性名稱。</param>
        <param name="target">相關實體。</param>
        <summary>針對定義兩個實體之間關聯性的特定連結取得 <see cref="T:System.Data.Services.Client.LinkDescriptor" />。</summary>
        <returns>指定之關聯性的 <see cref="T:System.Data.Services.Client.LinkDescriptor" /> 執行個體，如果該關聯性的 <see cref="T:System.Data.Services.Client.LinkDescriptor" /> 不存在，則為 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataUri">
      <MemberSignature Language="C#" Value="public Uri GetMetadataUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri GetMetadataUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetMetadataUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataUri () As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ GetMetadataUri();" />
      <MemberSignature Language="F#" Value="member this.GetMetadataUri : unit -&gt; Uri" Usage="dataServiceContext.GetMetadataUri " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得 .edmx 中繼資料位置的統一資源識別元 (URI)。</summary>
        <returns>URI，識別中繼資料描述 (格式為 .edmx) 的位置，用於傳遞至建構函式之基底 URI 的資料服務。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會以附加的單一路徑區段 (`/$metadata`) 來傳回傳遞至建構函式的 URI。 呼叫這個方法可以產生動態探索中繼資料 URI 的網路作業。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReadStream">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得指定之實體的二進位屬性資料做為資料流。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse GetReadStream(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStream (entity As Object) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ GetReadStream(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetReadStream : obj -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.GetReadStream entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">具有要擷取之二進位屬性的實體。</param>
        <summary>取得指定之實體的二進位屬性資料做為資料流。</summary>
        <returns>表示回應的 <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> 執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A>方法以同步方式要求資料流，其中包含所要求的二進位屬性`entity`。  
  
 在 AtomPub 通訊協定，`entity`是媒體連結項目，二進位屬性相關聯的媒體資源。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entity" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="entity" /> 未受到此 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 追蹤。  
  
-或- 
<paramref name="entity" /> 處於 <see cref="F:System.Data.Services.Client.EntityStates.Added" /> 狀態。  
  
-或- 
<paramref name="entity" /> 並不是媒體連結項目，而且也沒有二進位屬性。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity, System.Data.Services.Client.DataServiceRequestArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse GetReadStream(object entity, class System.Data.Services.Client.DataServiceRequestArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStream (entity As Object, args As DataServiceRequestArgs) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ GetReadStream(System::Object ^ entity, System::Data::Services::Client::DataServiceRequestArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.GetReadStream : obj * System.Data.Services.Client.DataServiceRequestArgs -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.GetReadStream (entity, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="args" Type="System.Data.Services.Client.DataServiceRequestArgs" />
      </Parameters>
      <Docs>
        <param name="entity">具有要擷取之二進位屬性的實體。</param>
        <param name="args">
          <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> 類別的執行個體，其中包含 HTTP 要求訊息的設定。</param>
        <summary>取得做為資料流之指定實體的二進位屬性資料，以及指定的訊息標題。</summary>
        <returns>表示回應的 <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> 執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A>方法以同步方式要求資料流，其中包含所要求的二進位屬性`entity`。  
  
 在 AtomPub 通訊協定，`entity`是媒體連結項目，二進位屬性相關聯的媒體資源。  
  
 不會對 `args` 中設定的標頭執行任何驗證。 因此，請不要使用變更要求意義的方式變更 HTTP 標頭。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entity" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="args" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="entity" /> 未受到此 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 追蹤。  
  
-或- 
<paramref name="entity" /> 處於 <see cref="F:System.Data.Services.Client.EntityStates.Added" /> 狀態。  
  
-或- 
<paramref name="entity" /> 並不是媒體連結項目，而且也沒有二進位屬性。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity, string acceptContentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse GetReadStream(object entity, string acceptContentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStream (entity As Object, acceptContentType As String) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ GetReadStream(System::Object ^ entity, System::String ^ acceptContentType);" />
      <MemberSignature Language="F#" Value="member this.GetReadStream : obj * string -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.GetReadStream (entity, acceptContentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="acceptContentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entity">具有要擷取之二進位屬性的實體。</param>
        <param name="acceptContentType">向資料服務要求的資料內容型別 (於 Accept 標題中指定)。</param>
        <summary>取得做為資料流之指定實體的二進位屬性資料，以及指定的 Accept 訊息標題。</summary>
        <returns>表示回應的 <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> 執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `acceptContentType`參數應該是 Accept HTTP 標頭的有效值。  
  
 <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A>方法以同步方式要求資料流，其中包含所要求的二進位屬性`entity`。  
  
 在 AtomPub 通訊協定，`entity`是媒體連結項目，二進位屬性相關聯的媒體資源。  
  
 不會對 `acceptContentType` 中設定的標頭執行任何驗證。 因此，請不要使用變更要求意義的方式變更此 HTTP 標頭。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entity" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="acceptContentType" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="entity" /> 未受到此 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 追蹤。  
  
-或- 
<paramref name="entity" /> 處於 <see cref="F:System.Data.Services.Client.EntityStates.Added" /> 狀態。  
  
-或- 
<paramref name="entity" /> 並不是媒體連結項目，而且也沒有二進位屬性。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadStreamUri">
      <MemberSignature Language="C#" Value="public Uri GetReadStreamUri (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri GetReadStreamUri(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStreamUri(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStreamUri (entity As Object) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ GetReadStreamUri(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetReadStreamUri : obj -&gt; Uri" Usage="dataServiceContext.GetReadStreamUri entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">具有要擷取之二進位屬性的實體。</param>
        <summary>取得用來傳回做為資料流之二進位屬性資料的 URI。</summary>
        <returns>二進位資料流的讀取 URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當指定的 `entity` 是媒體連結項目時，<xref:System.Data.Services.Client.DataServiceContext.GetReadStreamUri%2A> 方法會傳回用於存取媒體資源內容的 URI。  
  
 此 URI 只會在 GET 要求中用來讀取媒體資源內容。 它可能不會回應 POST、PUT 或 DELETE 要求。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">如果指定的實體是 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="entity" /> 未受到此 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 追蹤。</exception>
      </Docs>
    </Member>
    <Member MemberName="IgnoreMissingProperties">
      <MemberSignature Language="C#" Value="public bool IgnoreMissingProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreMissingProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreMissingProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreMissingProperties { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreMissingProperties : bool with get, set" Usage="System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定從型別讀取的屬性是否必須對應至用戶端型別上的屬性。</summary>
        <value>布林值，表示從型別讀取的屬性是否必須對應至用戶端型別上的屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`true`，具體化會成功，即使型別的屬性不能對應到用戶端類型的屬性。 如果`false`，屬性不符會引發例外狀況物件具體化期間。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreResourceNotFoundException">
      <MemberSignature Language="C#" Value="public bool IgnoreResourceNotFoundException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreResourceNotFoundException" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreResourceNotFoundException As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreResourceNotFoundException { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreResourceNotFoundException : bool with get, set" Usage="System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定是否在資料服務傳回 404 錯誤 (找不到資源) 時引發例外狀況。</summary>
        <value>如果是 <see langword="true" />，表示用戶端程式庫會在資料服務傳回「HTTP 404：找不到資源」錯誤時傳回空集，而不引發 <see cref="T:System.Data.Services.Client.DataServiceQueryException" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Links">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.LinkDescriptor&gt; Links { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Services.Client.LinkDescriptor&gt; Links" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Links" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Links As ReadOnlyCollection(Of LinkDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::LinkDescriptor ^&gt; ^ Links { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::LinkDescriptor ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Links : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.LinkDescriptor&gt;" Usage="System.Data.Services.Client.DataServiceContext.Links" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.LinkDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 物件目前正在追蹤的所有關聯或連結之集合。</summary>
        <value>
          <see cref="T:System.Data.Services.Client.LinkDescriptor" /> 物件的集合，代表 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 物件目前正在追蹤的所有關聯或連結。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果目前沒有正在追蹤的連結，則傳回 0 個元素的清單。 集合是唯讀的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadProperty">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從資料服務載入延遲的內容。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse LoadProperty(object entity, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty (entity As Object, propertyName As String) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.LoadProperty (entity, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entity">包含要載入之屬性的實體。</param>
        <param name="propertyName">要載入的指定之實體的屬性名稱。</param>
        <summary>從資料服務載入指定之屬性的延遲內容。</summary>
        <returns>載入作業的回應。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個方法會叫用擷取屬性值的網路作業。 指定的屬性可能是實體上的任何一個屬性，包括代表關聯或連結的屬性。  
  
 如果屬性表示關聯或連結或是擱置的屬性，呼叫這個方法則會提供用戶端一個延遲載入資源的方式。  
  
 如果實體處於未變更或已修改狀態，屬性值會載入相關實體，並將這些具有未變更連結的實體標記成未變更。  
  
 如果已載入該屬性，則呼叫此方法會讓您重新整理屬性的值。  
  
   
  
## Examples  
 下列範例示範如何明確地載入與所傳回之每個 `Customers` 執行個體相關的 `Orders` 物件。 這個範例會使用<xref:System.Data.Services.Client.DataServiceContext>根據您完成時，會建立的 Northwind 資料服務加入服務參考 工具所產生[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]。  
  
 [!code-csharp[Astoria Northwind Client#LoadRelatedOrderCustomer](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#loadrelatedordercustomer)]
 [!code-vb[Astoria Northwind Client#LoadRelatedOrderCustomer](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#loadrelatedordercustomer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse LoadProperty(object entity, string propertyName, class System.Data.Services.Client.DataServiceQueryContinuation continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty (entity As Object, propertyName As String, continuation As DataServiceQueryContinuation) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName, System::Data::Services::Client::DataServiceQueryContinuation ^ continuation);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * System.Data.Services.Client.DataServiceQueryContinuation -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.LoadProperty (entity, propertyName, continuation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation" />
      </Parameters>
      <Docs>
        <param name="entity">包含要載入之屬性的實體。</param>
        <param name="propertyName">要載入的指定之實體的屬性名稱。</param>
        <param name="continuation">
          <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> 物件，表示從資料服務載入的下一頁相關實體。</param>
        <summary>透過使用提供的查詢接續物件，從資料服務載入下一頁相關實體。</summary>
        <returns>包含下一頁相關實體資料的回應。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當 `entity` 處於 <xref:System.Data.Services.Client.EntityStates.Unchanged> 或 <xref:System.Data.Services.Client.EntityStates.Modified> 狀態時，相關實體是以 <xref:System.Data.Services.Client.EntityStates.Unchanged> 狀態的物件形式載入，而連結也是處於 <xref:System.Data.Services.Client.EntityStates.Unchanged> 狀態。  
  
 當 `entity` 處於 <xref:System.Data.Services.Client.EntityStates.Deleted> 狀態時，相關實體是以 <xref:System.Data.Services.Client.EntityStates.Unchanged> 狀態的物件形式載入，而連結則是處於 <xref:System.Data.Services.Client.EntityStates.Deleted> 狀態。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">當 <paramref name="entity" /> 處於 <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> 或 <see cref="F:System.Data.Services.Client.EntityStates.Added" /> 狀態時。</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName, Uri nextLinkUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse LoadProperty(object entity, string propertyName, class System.Uri nextLinkUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty (entity As Object, propertyName As String, nextLinkUri As Uri) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName, Uri ^ nextLinkUri);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * Uri -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.LoadProperty (entity, propertyName, nextLinkUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="nextLinkUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="entity">包含要載入之屬性的實體。</param>
        <param name="propertyName">要載入的指定之實體的屬性名稱。</param>
        <param name="nextLinkUri">用於載入下一個結果頁的 URI。</param>
        <summary>透過使用提供的下一個連結 URI，載入一頁相關實體。</summary>
        <returns>包含要求結果的 <see cref="T:System.Data.Services.Client.QueryOperationResponse`1" /> 執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當 `entity` 處於 <xref:System.Data.Services.Client.EntityStates.Unchanged> 或 <xref:System.Data.Services.Client.EntityStates.Modified> 狀態時，相關實體是以 <xref:System.Data.Services.Client.EntityStates.Unchanged> 狀態載入，而且實體之間的連結也是以 <xref:System.Data.Services.Client.EntityStates.Unchanged> 狀態建立。  
  
 當 `entity` 處於 <xref:System.Data.Services.Client.EntityStates.Deleted> 狀態時，相關實體是以 <xref:System.Data.Services.Client.EntityStates.Unchanged> 狀態載入，而實體之間的連結則是以 <xref:System.Data.Services.Client.EntityStates.Deleted> 狀態建立。  
  
   
  
## Examples  
 本範例會隨每個 `Orders` 實體傳回相關的 `Customers` 實體，並使用 `do…while` 迴圈載入 `Customers` 實體頁，同時使用巢狀的 `while` 迴圈從資料服務載入相關 `Orders` 實體的頁面。 <xref:System.Data.Services.Client.DataServiceContext.LoadProperty%2A> 方法用於載入相關 `Orders` 實體的頁面。  
  
 [!code-csharp[Astoria Northwind Client#GetCustomersPagedNested](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#getcustomerspagednested)]
 [!code-vb[Astoria Northwind Client#GetCustomersPagedNested](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#getcustomerspagednested)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">當 <paramref name="entity" /> 處於 <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> 或 <see cref="F:System.Data.Services.Client.EntityStates.Added" /> 狀態時。</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse&lt;T&gt; LoadProperty&lt;T&gt; (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse`1&lt;!!T&gt; LoadProperty&lt;T&gt;(object entity, string propertyName, class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!!T&gt; continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty``1(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty(Of T) (entity As Object, propertyName As String, continuation As DataServiceQueryContinuation(Of T)) As QueryOperationResponse(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Services::Client::QueryOperationResponse&lt;T&gt; ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName, System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ continuation);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; -&gt; System.Data.Services.Client.QueryOperationResponse&lt;'T&gt;" Usage="dataServiceContext.LoadProperty (entity, propertyName, continuation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">要載入之集合的元素型別。</typeparam>
        <param name="entity">包含要載入之屬性的實體。</param>
        <param name="propertyName">要載入的指定之實體的屬性名稱。</param>
        <param name="continuation">
          <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> 物件，表示從資料服務載入的下一頁相關實體。</param>
        <summary>透過使用提供的泛型查詢接續物件，從資料服務載入下一頁相關實體。</summary>
        <returns>包含下一頁相關實體資料的回應。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當 `entity` 處於 <xref:System.Data.Services.Client.EntityStates.Unchanged> 或 <xref:System.Data.Services.Client.EntityStates.Modified> 狀態時，相關實體是以 <xref:System.Data.Services.Client.EntityStates.Unchanged> 狀態的物件形式載入，而連結也是處於 <xref:System.Data.Services.Client.EntityStates.Unchanged> 狀態。  
  
 當 `entity` 處於 <xref:System.Data.Services.Client.EntityStates.Deleted> 狀態時，相關實體是以 <xref:System.Data.Services.Client.EntityStates.Unchanged> 狀態的物件形式載入，而連結則是處於 <xref:System.Data.Services.Client.EntityStates.Deleted> 狀態。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">當 <paramref name="entity" /> 處於 <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> 或 <see cref="F:System.Data.Services.Client.EntityStates.Added" /> 狀態時。</exception>
      </Docs>
    </Member>
    <Member MemberName="MergeOption">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.MergeOption MergeOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Client.MergeOption MergeOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.MergeOption" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOption As MergeOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::MergeOption MergeOption { System::Data::Services::Client::MergeOption get(); void set(System::Data::Services::Client::MergeOption value); };" />
      <MemberSignature Language="F#" Value="member this.MergeOption : System.Data.Services.Client.MergeOption with get, set" Usage="System.Data.Services.Client.DataServiceContext.MergeOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定從資料服務接收實體 (Entity) 的同步處理選項。</summary>
        <value>一個 <see cref="T:System.Data.Services.Client.MergeOption" /> 列舉型別 (Enumeration) 成員。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個值在物件具體化之前是由用戶端的還原序列化 (Deserialization) 元件所讀取， 因此請在對資料服務執行任何查詢或更新之前，先將這個屬性設定為適當的具體化選項。 預設值是 <xref:System.Data.Services.Client.MergeOption.AppendOnly>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingEntity">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; ReadingEntity;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; ReadingEntity" />
      <MemberSignature Language="DocId" Value="E:System.Data.Services.Client.DataServiceContext.ReadingEntity" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadingEntity As EventHandler(Of ReadingWritingEntityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Data::Services::Client::ReadingWritingEntityEventArgs ^&gt; ^ ReadingEntity;" />
      <MemberSignature Language="F#" Value="member this.ReadingEntity : EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " Usage="member this.ReadingEntity : System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當實體資料已完全讀入實體物件之後發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當實體資料連同所有巢狀實體已完全讀入目標物件之後，發生 <xref:System.Data.Services.Client.DataServiceContext.ReadingEntity> 事件。 如果追蹤不是<xref:System.Data.Services.Client.MergeOption.NoTracking>，事件發生之前，附加的物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveName">
      <MemberSignature Language="C#" Value="public Func&lt;Type,string&gt; ResolveName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Type, string&gt; ResolveName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.ResolveName" />
      <MemberSignature Language="VB.NET" Value="Public Property ResolveName As Func(Of Type, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Type ^, System::String ^&gt; ^ ResolveName { Func&lt;Type ^, System::String ^&gt; ^ get(); void set(Func&lt;Type ^, System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResolveName : Func&lt;Type, string&gt; with get, set" Usage="System.Data.Services.Client.DataServiceContext.ResolveName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Type,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定函式，當您傳送實體到資料服務時，此函式會覆寫用戶端程式庫所用的預設型別解析策略。</summary>
        <value>傳回字串，其中包含 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 啟用對用戶端程式庫使用之預設型別解析的覆寫。 將此屬性設定為識別函式的委派，此函式用來將用戶端應用程式中的型別解析為命名空間限定的型別名稱。 這樣一來，用戶端就可以在伺服器回應所提供的型別名稱以及位於用戶端的型別之間，執行自訂對應。  
  
> [!NOTE]
>  這個方法會為指定的型別啟用已序列化為目標表示 (如 Atom 或 JSON) 之實體名稱的覆寫。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public Func&lt;string,Type&gt; ResolveType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;string, class System.Type&gt; ResolveType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.ResolveType" />
      <MemberSignature Language="VB.NET" Value="Public Property ResolveType As Func(Of String, Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::String ^, Type ^&gt; ^ ResolveType { Func&lt;System::String ^, Type ^&gt; ^ get(); void set(Func&lt;System::String ^, Type ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResolveType : Func&lt;string, Type&gt; with get, set" Usage="System.Data.Services.Client.DataServiceContext.ResolveType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.String,System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定函式，從資料服務接收實體時，此函式用來覆寫用戶端程式庫所用的預設型別解析選項。</summary>
        <value>函式委派，可識別用來覆寫用戶端資料庫使用之預設型別解析選項的覆寫函式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會啟用用戶端程式庫所使用的預設型別解析策略的覆寫。 將此屬性設定為識別函式的委派，此函式會將命名空間限定的型別名稱解析為用戶端應用程式中的型別。 這樣一來，用戶端就可以在伺服器之回應中所提供的型別名稱與用戶端上的型別之間執行自訂對應。  
  
 覆寫型別解析也會在型別名稱與型別之間啟用插入自訂對應策略， 但並不會影響回應具體化為識別型別的方式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 正在追蹤的變更儲存至儲存區。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceResponse>，其中包含呼叫 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> 所產生的狀態、標頭和錯誤。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse SaveChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse SaveChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChanges () As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ SaveChanges();" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : unit -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.SaveChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 正在追蹤的變更儲存至儲存區。</summary>
        <returns>
          <see cref="T:System.Data.Services.Client.DataServiceResponse" />，其中包含呼叫 <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges.Remarks" /> 所產生的狀態、標頭和錯誤。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse SaveChanges (System.Data.Services.Client.SaveChangesOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse SaveChanges(valuetype System.Data.Services.Client.SaveChangesOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SaveChanges(System.Data.Services.Client.SaveChangesOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChanges (options As SaveChangesOptions) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ SaveChanges(System::Data::Services::Client::SaveChangesOptions options);" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : System.Data.Services.Client.SaveChangesOptions -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.SaveChanges options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Data.Services.Client.SaveChangesOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <see cref="T:System.Data.Services.Client.MergeOption" /> 列舉型別的成員，指定具體化選項。</param>
        <summary>將 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 正在追蹤的變更儲存至儲存區。</summary>
        <returns>
          <see cref="T:System.Data.Services.Client.DataServiceResponse" />，其中包含呼叫 <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> 所產生的狀態、標頭和錯誤。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 作業不會傳送至資料服務，以下列順序  
  
1.  <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>  
  
2.  <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>  
  
3.  <xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A>  
  
4.  <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>  
  
5.  <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> 和 <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesDefaultOptions">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.SaveChangesOptions SaveChangesDefaultOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Client.SaveChangesOptions SaveChangesDefaultOptions" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveChangesDefaultOptions As SaveChangesOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::SaveChangesOptions SaveChangesDefaultOptions { System::Data::Services::Client::SaveChangesOptions get(); void set(System::Data::Services::Client::SaveChangesOptions value); };" />
      <MemberSignature Language="F#" Value="member this.SaveChangesDefaultOptions : System.Data.Services.Client.SaveChangesOptions with get, set" Usage="System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.SaveChangesOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Data.Services.Client.SaveChangesOptions" /> 方法所使用的 <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> 值。</summary>
        <value>儲存變更作業的目前選項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 提供此屬性，以便一次設定 <xref:System.Data.Services.Client.DataServiceContext> 的合併和取代語意等選項，然後視需要透過呼叫其中一個 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> 多載予以覆寫。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendingRequest">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt; SendingRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Data.Services.Client.SendingRequestEventArgs&gt; SendingRequest" />
      <MemberSignature Language="DocId" Value="E:System.Data.Services.Client.DataServiceContext.SendingRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendingRequest As EventHandler(Of SendingRequestEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Data::Services::Client::SendingRequestEventArgs ^&gt; ^ SendingRequest;" />
      <MemberSignature Language="F#" Value="member this.SendingRequest : EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt; " Usage="member this.SendingRequest : System.EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>已建立新的 <see cref="T:System.Net.HttpWebRequest" /> 時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在物件上設定必要屬性值之前，發生 <xref:System.Data.Services.Client.DataServiceContext.SendingRequest> 事件。 保證  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLink">
      <MemberSignature Language="C#" Value="public void SetLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SetLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.SetLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.SetLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">新連結的來源物件。</param>
        <param name="sourceProperty">來源物件上的屬性名稱，識別新連結的目標物件。</param>
        <param name="target">新連結中所含有的子物件，這個連結要透過呼叫此方法進行初始化。 目標物件必須是由 <c>sourceProperty</c> 參數所識別之型別的子型別。 如果 <c>target</c> 是設為 null，則這個呼叫表示刪除連結作業。</param>
        <summary>通知 <see cref="T:System.Data.Services.Client.DataServiceContext" />，來源和指定的目標物件之間存在新連結，以及由 <paramref name="sourceProperty" /> 參數所指定的屬性表示該連結。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新連結是以 <xref:System.Data.Services.Client.EntityStates.Added> 狀態建立。 <xref:System.Data.Services.Client.DataServiceContext> 會將這個新連結加入至要在新建立的連結集，而在對 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> 的下一個呼叫時便會將該連結集傳送至資料服務。  
  
 如果 target 引數為 null，則應該移除或刪除 sourceProperty 所表示的連結 (其狀態會進入 <xref:System.Data.Services.Client.EntityStates.Deleted> 狀態)。  
  
 連結是單向的關聯性。 如果返回指標存在指出雙向關聯，這個方法應該重新呼叫以通知<xref:System.Data.Services.Client.DataServiceContext>的第二個連結  
  
 這個方法只支援將連結加入重數為 1 的關聯性 (來源屬性是物件參考)。 舉例來說，如果 `Person` 類別與另一個 `Person` 有 `Friend` 屬性的關係，這個呼叫可以用來使 `Person` 和 `Person` 產生關係。 如果 `sourceProperty` 代表有多個基數的關聯性，此方法會擲回例外狀況。  
  
   
  
## Examples  
 下列範例示範如何使用 <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> 和 <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> 方法來建立定義關聯性的連結。 此範例中也會明確設定 `Order_Details` 物件的導覽屬性。  
  
 [!code-csharp[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#addorderdetailtoorder)]
 [!code-vb[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#addorderdetailtoorder)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">當 <paramref name="source" />、<paramref name="sourceProperty" /> 或 <paramref name="target" /> 為 null 時。</exception>
        <exception cref="T:System.InvalidOperationException">當指定的連結已存在時。  
  
-或- 
當以 <paramref name="source" /> 或 <paramref name="target" /> 方式提供的物件處於 <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> 或 <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> 狀態時。  
  
-或- 
當 <paramref name="sourceProperty" /> 不是定義單一相關物件參考的導覽屬性時。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSaveStream">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將新資料流設定為實體的二進位屬性。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSaveStream">
      <MemberSignature Language="C#" Value="public void SetSaveStream (object entity, System.IO.Stream stream, bool closeStream, System.Data.Services.Client.DataServiceRequestArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSaveStream(object entity, class System.IO.Stream stream, bool closeStream, class System.Data.Services.Client.DataServiceRequestArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.Data.Services.Client.DataServiceRequestArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSaveStream(System::Object ^ entity, System::IO::Stream ^ stream, bool closeStream, System::Data::Services::Client::DataServiceRequestArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.SetSaveStream : obj * System.IO.Stream * bool * System.Data.Services.Client.DataServiceRequestArgs -&gt; unit" Usage="dataServiceContext.SetSaveStream (entity, stream, closeStream, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="closeStream" Type="System.Boolean" />
        <Parameter Name="args" Type="System.Data.Services.Client.DataServiceRequestArgs" />
      </Parameters>
      <Docs>
        <param name="entity">實體，包含要在其中指派資料流的二進位屬性。</param>
        <param name="stream">要從中讀取二進位資料的 <see cref="T:System.IO.Stream" />。</param>
        <param name="closeStream">
          <see cref="T:System.Boolean" /> 值，該值決定資料流在 <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> 方法完成時是否關閉。</param>
        <param name="args">
          <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> 類別的執行個體，其中包含 HTTP 要求訊息的設定。</param>
        <summary>將新的資料流設定為實體的二進位屬性，包括要求訊息中所指定的設定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A>方法會設定為與相關聯之媒體資源的二進位資料流`entity`，此實體稱為媒體連結項目。  
  
 呼叫 <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> 方法會將實體標記為媒體連結項目。 實體狀態也設定為 <xref:System.Data.Services.Client.EntityStates.Modified>，因此下次呼叫 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> 方法時會將資料流傳送到資料服務。  
  
 <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> 方法會讀取 <xref:System.IO.Stream> 直到結尾。 <xref:System.IO.Stream.Seek%2A> 上不會嘗試 <xref:System.IO.Stream> 作業。  
  
 當`closeStream`是`true`，則<xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>方法傳回前，請關閉資料流。 即使發生錯誤而未讀取資料流，資料流也會關閉。  
  
 當 `entity` 已套用 <xref:System.Data.Services.Client.MediaEntryAttribute> 時，媒體資源不能是資料流。 先刪除此屬性，然後嘗試設定 `entity` 的資料流。  
  
 不會對 `args` 中設定的標頭執行任何驗證。 因此，請不要使用變更要求意義的方式變更 HTTP 標頭。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">提供給方法的任何參數為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="entity" /> 未受到此 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 執行個體追蹤。  
  
-或- 
<paramref name="entity" /> 已套用 <see cref="T:System.Data.Services.Client.MediaEntryAttribute" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetSaveStream">
      <MemberSignature Language="C#" Value="public void SetSaveStream (object entity, System.IO.Stream stream, bool closeStream, string contentType, string slug);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSaveStream(object entity, class System.IO.Stream stream, bool closeStream, string contentType, string slug) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSaveStream(System::Object ^ entity, System::IO::Stream ^ stream, bool closeStream, System::String ^ contentType, System::String ^ slug);" />
      <MemberSignature Language="F#" Value="member this.SetSaveStream : obj * System.IO.Stream * bool * string * string -&gt; unit" Usage="dataServiceContext.SetSaveStream (entity, stream, closeStream, contentType, slug)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="closeStream" Type="System.Boolean" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="slug" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entity">實體，包含要在其中指派資料流的二進位屬性。</param>
        <param name="stream">要從中讀取二進位資料的 <see cref="T:System.IO.Stream" />。</param>
        <param name="closeStream">
          <see cref="T:System.Boolean" /> 值，該值決定資料流在 <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> 方法完成時是否關閉。</param>
        <param name="contentType">要求訊息的 Content-Type 標頭值。</param>
        <param name="slug">要求訊息的 Slug 標頭值。</param>
        <summary>將新資料流設定為實體的二進位屬性。 指定的內容類型和 Slug 標題會包含在要求訊息中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A>方法會設定為與相關聯之媒體資源的二進位資料流`entity`，此實體稱為媒體連結項目。  
  
 呼叫 <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> 方法會將實體標記為媒體連結項目。 實體狀態也設定為 <xref:System.Data.Services.Client.EntityStates.Modified>，因此下次呼叫 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> 方法時會將資料流傳送到資料服務。  
  
 <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> 方法會讀取 <xref:System.IO.Stream> 直到結尾。 <xref:System.IO.Stream.Seek%2A> 上不會嘗試 <xref:System.IO.Stream> 作業。  
  
 當`closeStream`是`true`，則<xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>方法傳回前，請關閉資料流。 即使發生錯誤而未讀取資料流，資料流也會關閉。  
  
 當 `entity` 已套用 <xref:System.Data.Services.Client.MediaEntryAttribute> 時，媒體資源不能是資料流。 先刪除此屬性，然後嘗試設定 `entity` 的資料流。  
  
 不會對 `contentType` 和 `slug` 中設定的標頭執行任何驗證。 因此，請不要使用變更要求意義的方式變更這些 HTTP 標頭。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">提供給方法的任何參數為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="entity" /> 未受到此 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 執行個體追蹤。  
  
-或- 
<see langword="entity" /> 已套用 <see cref="T:System.Data.Services.Client.MediaEntryAttribute" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Data.Services.Client.DataServiceContext.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定逾時選項，用於對資料服務的基礎 HTTP 要求。</summary>
        <value>整數，指出服務要求逾時前的時間間隔。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個值會傳遞至<xref:System.Net.HttpWebRequest.Timeout>屬性的基礎<xref:System.Net.HttpWebRequest>物件。 在對目標資料服務執行任何查詢或更新作業之前必須先設定這個值，因為會影響到要求。 這個值在對資料服務的要求之間可能會發生變更，而新值將會由下一個資料服務要求所挑選。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntity&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetEntity&lt;TEntity&gt; (Uri identity, out TEntity entity) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntity&lt;class TEntity&gt;(class System.Uri identity, [out] !!TEntity&amp; entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.TryGetEntity``1(System.Uri,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntity(Of TEntity As Class) (identity As Uri, ByRef entity As TEntity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class bool TryGetEntity(Uri ^ identity, [Runtime::InteropServices::Out] TEntity % entity);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntity : Uri *  -&gt; bool (requires 'Entity : null)" Usage="dataServiceContext.TryGetEntity (identity, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.Uri" />
        <Parameter Name="entity" Type="TEntity" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">實體的型別。</typeparam>
        <param name="identity">要擷取之追蹤實體的 URI。</param>
        <param name="entity">要擷取的實體。</param>
        <summary>透過實體 URI 的參考進行測試擷取 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 正在追蹤的實體。</summary>
        <returns>如果在 <paramref name="resourceUri" /> 找到實體，則會以 out 參數 <paramref name="entity" /> 傳回實體，並且傳回 true。 如果找不到實體，則會傳回 false。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果實體處於 <xref:System.Data.Services.Client.EntityStates.Detached> 或 <xref:System.Data.Services.Client.EntityStates.Added> 狀態，它並沒有 URI，也不能使用此方法擷取。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">當 <paramref name="identity" /> 為 <see langword="null" /> 時。</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetUri">
      <MemberSignature Language="C#" Value="public bool TryGetUri (object entity, out Uri identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetUri(object entity, [out] class System.Uri&amp; identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.TryGetUri(System.Object,System.Uri@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetUri (entity As Object, ByRef identity As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetUri(System::Object ^ entity, [Runtime::InteropServices::Out] Uri ^ % identity);" />
      <MemberSignature Language="F#" Value="member this.TryGetUri : obj *  -&gt; bool" Usage="dataServiceContext.TryGetUri (entity, identity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="identity" Type="System.Uri" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entity">
          <c>identity</c> 所識別的實體。</param>
        <param name="identity">實體的 URI。</param>
        <summary>擷取與指定之實體相關聯的標準 URI (若有的話)。</summary>
        <returns>如果標準 URI 是以 out 參數傳回的，則傳回 true。 如果指定的實體未受 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 追蹤或處於已加入狀態，則不會有可用的 URI，並且傳回 false。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.EntityStates.Added> 狀態的物件還沒有 URI。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">當 <paramref name="entity" /> 為 <see langword="null" /> 時。</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeScheme">
      <MemberSignature Language="C#" Value="public Uri TypeScheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri TypeScheme" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.TypeScheme" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeScheme As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ TypeScheme { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeScheme : Uri with get, set" Usage="System.Data.Services.Client.DataServiceContext.TypeScheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來表示服務使用哪種型別配置的 URI。</summary>
        <value>包含型別配置的 <see cref="T:System.Uri" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 ATOM 承載中，傳回值將會是分類項目的配置屬性，用來識別實體的型別。 預設值是 `http://schemas.microsoft.com/ado/2007/08/dataservices/scheme`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateObject">
      <MemberSignature Language="C#" Value="public void UpdateObject (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateObject(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.UpdateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateObject (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateObject(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.UpdateObject : obj -&gt; unit" Usage="dataServiceContext.UpdateObject entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">要指派為 <see cref="F:System.Data.Services.Client.EntityStates.Modified" /> 狀態的已追蹤實體。</param>
        <summary>將 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 中指定之物件的狀態變更成 <see cref="F:System.Data.Services.Client.EntityStates.Modified" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會擷取並修改現有的物件，然後呼叫 <xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A> 的 <xref:System.Data.Services.Client.DataServiceContext> 方法，將內容中的項目標記為已更新。 呼叫 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> 時，HTTP MERGE 訊息會傳送到資料服務。 這個範例會使用<xref:System.Data.Services.Client.DataServiceContext>根據您完成時，會建立的 Northwind 資料服務加入服務參考 工具所產生[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]。  
  
 [!code-csharp[Astoria Northwind Client#ModifyCustomer](~/samples/snippets/csharp/VS_Snippets_Misc/astoria northwind client/cs/source.cs#modifycustomer)]
 [!code-vb[Astoria Northwind Client#ModifyCustomer](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria northwind client/vb/source.vb#modifycustomer)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">當 <paramref name="entity" /> 為 <see langword="null" /> 時。</exception>
        <exception cref="T:System.ArgumentException">當 <paramref name="entity" /> 處於 <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> 狀態時。</exception>
      </Docs>
    </Member>
    <Member MemberName="UsePostTunneling">
      <MemberSignature Language="C#" Value="public bool UsePostTunneling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePostTunneling" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.UsePostTunneling" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePostTunneling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePostTunneling { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsePostTunneling : bool with get, set" Usage="System.Data.Services.Client.DataServiceContext.UsePostTunneling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定布林值，這個值表示否要使用 Post 通道。</summary>
        <value>布林值，表示否要使用 Post 通道。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可控制傳送至資料服務的建立、更新和刪除要求是否要使用通訊協定 (Protocol) 的 Post 通道功能。 當設為 true 時會使用通道。 當設為 false 時會使用標準 HTTP 方法。  
  
 此屬性的預設值為 false。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritingEntity">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; WritingEntity;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; WritingEntity" />
      <MemberSignature Language="DocId" Value="E:System.Data.Services.Client.DataServiceContext.WritingEntity" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WritingEntity As EventHandler(Of ReadingWritingEntityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Data::Services::Client::ReadingWritingEntityEventArgs ^&gt; ^ WritingEntity;" />
      <MemberSignature Language="F#" Value="member this.WritingEntity : EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " Usage="member this.WritingEntity : System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>實體已完全序列化為要求訊息中的 XML 之後發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理 <xref:System.Data.Services.Client.DataServiceContext.WritingEntity> 事件讓您能夠在傳送前變更要求中的 XML。  
  
 當您呼叫 <xref:System.Data.Services.Client.DataServiceContext.WritingEntity> 但所提供的 <xref:System.Data.Services.Client.DataServiceContext.BeginSaveChanges%28System.Data.Services.Client.SaveChangesOptions%2CSystem.AsyncCallback%2CSystem.Object%29> 值不包含 <xref:System.Data.Services.Client.SaveChangesOptions.Batch> 時，<xref:System.Data.Services.Client.SaveChangesOptions> 事件可能會發生在不同的執行緒上。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>