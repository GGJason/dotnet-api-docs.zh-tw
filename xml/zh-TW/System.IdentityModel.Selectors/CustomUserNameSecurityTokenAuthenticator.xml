<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CustomUserNameSecurityTokenAuthenticator.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72046d27f36d80c995d21193cc974134f91e740c31.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">046d27f36d80c995d21193cc974134f91e740c31</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator">
          <source>Authenticates a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /&gt;</ph> security token using a custom authentication scheme.</source>
          <target state="translated">使用自訂驗證配置，驗證 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /&gt;</ph> 安全性權杖。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator">
          <source>Override the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&gt;</ph> class when the Windows authentication provided by the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator&gt;</ph> class isn't sufficient.</source>
          <target state="translated">當 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&gt;</ph> 類別提供的 Windows 驗證不夠強時，覆寫 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator&gt;</ph> 類別。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator&gt;</ph> class authenticates the user name and password in a <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt;</ph> security token as a Windows account.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator&gt;</ph> 類別會將 <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt;</ph> 安全性權杖中的使用者名稱和密碼當做 Windows 帳號進行驗證。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator">
          <source>To provide a custom authentication scheme, derive a class from the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt;</ph> class, implement the authentication scheme, and then pass that class to the constructor for the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&gt;</ph> class.</source>
          <target state="translated">為了提供自訂驗證配置，此時會從 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt;</ph> 類別衍生類別、實作驗證配置，然後將這個類別傳遞給 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&gt;</ph> 類別的建構函式 (Constructor)。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.UserNamePasswordValidator)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" /&gt;</ph> that authenticates the user name and password using a custom authentication scheme.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" /&gt;</ph>，它會使用自訂驗證配置來驗證使用者名稱和密碼。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.UserNamePasswordValidator)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator" /&gt;</ph> class using the specified validator.</source>
          <target state="translated">使用指定的驗證程式，初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.UserNamePasswordValidator)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt;</ph> specified in the <ph id="ph2">`validator`</ph> parameter is used by the <ph id="ph3">&lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph> method to authenticate the user.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt;</ph> 方法會使用 <ph id="ph2">`validator`</ph> 參數中指定的 <ph id="ph3">&lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph> 來驗證使用者。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.UserNamePasswordValidator)">
          <source><ph id="ph1">&lt;paramref name="validator" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="validator" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source>The user name associated with the security token.</source>
          <target state="translated">與安全性權杖相關聯的使用者名稱。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source>The password associated with the security token.</source>
          <target state="translated">與安全性權杖相關聯的密碼。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source>Authenticates the specified user name and password and returns the set of authorization policies for <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /&gt;</ph> security tokens.</source>
          <target state="translated">驗證指定的使用者名稱和密碼，並傳回 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /&gt;</ph> 安全性權杖的授權原則集合。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph> that contains the set of authorization policies in effect for this application.</source>
          <target state="translated">型別為 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph>，其中包含對這個應用程式有效用的授權原則集合。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt;</ph> passed into the <ph id="ph3">&lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.%23ctor%2A&gt;</ph> constructor to authenticate the user.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph> 方法會使用傳遞至 <ph id="ph2">&lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt;</ph> 建構函式中的 <ph id="ph3">&lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.%23ctor%2A&gt;</ph> 來驗證使用者。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source>When the username and password cannot be validated, throw the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph>.</source>
          <target state="translated">當使用者名稱和密碼無法通過驗證時，便會擲回 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source>When there are no authorization policies in effect for this application, return an empty <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> of type <ph id="ph2">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>.</source>
          <target state="translated">如果沒有任何對這個應用程式有效用的授權原則時，就傳回型別為 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> 的空 <ph id="ph2">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph> method returns <ph id="ph2">`null`</ph>, Windows Communication Foundation throws a <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph>.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph>方法會傳回<ph id="ph2">`null`</ph>，會擲回 Windows Communication Foundation <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="userName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="userName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="userName" /&gt;</ph> and <ph id="ph2">&lt;paramref name="password" /&gt;</ph> combination are not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="userName" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="password" /&gt;</ph> 的組合無效。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>