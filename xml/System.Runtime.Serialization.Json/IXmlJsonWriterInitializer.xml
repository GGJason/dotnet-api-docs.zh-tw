<Type Name="IXmlJsonWriterInitializer" FullName="System.Runtime.Serialization.Json.IXmlJsonWriterInitializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d5eedde95c3ce9544180a64575467b404c948939" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46684829" /></Metadata><TypeSignature Language="C#" Value="public interface IXmlJsonWriterInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlJsonWriterInitializer" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlJsonWriterInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlJsonWriterInitializer" />
  <TypeSignature Language="F#" Value="type IXmlJsonWriterInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>當重複使用 JavaScript Object Notation (JSON) 寫入器來寫入特定輸出資料流時，指定初始化寫入器所使用的介面。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlDictionaryWriter> 方法建立的 <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> 物件會實作此介面，並且建立好的時候，隨時可以寫入以 JSON 編碼的資料。 但是如果使用者要重複使用相同的 <xref:System.Xml.XmlDictionaryWriter> 物件將新的 JSON 文件寫入至其他輸出資料流，就必須使用 <xref:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Boolean%29> 方法將寫入器初始化為適當的資料流。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetOutput">
      <MemberSignature Language="C#" Value="public void SetOutput (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutput(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutput(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream);" />
      <MemberSignature Language="F#" Value="abstract member SetOutput : System.IO.Stream * System.Text.Encoding * bool -&gt; unit" Usage="iXmlJsonWriterInitializer.SetOutput (stream, encoding, ownsStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">寫入器會將結果寫入至輸出 <see cref="T:System.IO.Stream" />。</param>
        <param name="encoding">指定輸出資料流字元編碼的 <see cref="T:System.Text.Encoding" />。</param>
        <param name="ownsStream">若為 <see langword="true" />，則寫入器會在完成時關閉輸出資料流；否則為 <see langword="false" />。</param>
        <summary>將 JavaScript Object Notation (JSON) 寫入器初始化 (或重新初始化) 為具有指定字元編碼的指定輸出資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlDictionaryWriter> 方法建立的 <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> 物件會實作此介面，並且建立好的時候，隨時可以寫入以 JSON 編碼的資料。 但是如果使用者要重複使用相同的 <xref:System.Xml.XmlDictionaryWriter> 物件將新的 JSON 文件寫入至其他輸出資料流，就必須使用 <xref:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Boolean%29> 方法將寫入器初始化為適當的資料流。  
  
 <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> 所建立的寫入器，可以處理 UTF-8 和 UTF-16 (位元組由大到小或由小到大) 編碼。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>