<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IXmlJsonReaderInitializer.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac533b58791fb6938681a3cf22ad5828eae584289ee.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33b58791fb6938681a3cf22ad5828eae584289ee</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
          <source>Specifies the interface for initializing a JavaScript Object Notation (JSON) reader when reusing them to read from a particular stream or buffer.</source>
          <target state="translated">當重複使用 JavaScript Object Notation (JSON) 讀取器從特定資料流或緩衝區讀取時，指定初始化該讀取器所使用的介面。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> objects created by one of the <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader%2A&gt;</ph> methods implement this interface and are initialized ready to read JSON-encoded data.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> 方法建立的 <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader%2A&gt;</ph> 物件會實作此介面，並且會初始化為隨時可以讀取 JSON 編碼的資料。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
          <source>But if a user wants to reuse the same <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> object to read other JSON-encoded data, then the reader must be initialized to the second dataset to be read by using one of the <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%2A&gt;</ph> methods.</source>
          <target state="translated">不過，若使用者要重複使用相同的 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> 物件來讀取其他的 JSON 編碼資料，則必須將讀取器初始化為要使用其中一個 <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%2A&gt;</ph> 方法讀取的第二個資料集。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
          <source>Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified stream or buffer that contains JSON-encoded data.</source>
          <target state="translated">將啟用 JavaScript 物件標記法 (JSON) 的讀取器重新初始化為含有 JSON 編碼資料的指定資料流或緩衝區。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> objects created by one of the <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader%2A&gt;</ph> methods implement this interface and are ready to read JSON-encoded data.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> 方法建立的 <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader%2A&gt;</ph> 物件會實作此介面，並且隨時可以讀取 JSON 編碼的資料。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
          <source>But if a user wants to reuse the same <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> object to read other JSON-encoded data, then the reader must be initialized to the second dataset to be read by using the one of the <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%2A&gt;</ph> methods.</source>
          <target state="translated">不過，若使用者要重複使用相同的 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> 物件來讀取其他的 JSON 編碼資料，則必須將讀取器初始化為要使用其中一個 <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%2A&gt;</ph> 方法讀取的第二個資料集。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A&gt;</ph> value set as part of the <ph id="ph2">`quotas`</ph> parameter only limits the amount of information being read into memory when the input is being read from a stream with the <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> method and is not enforced when the <ph id="ph4">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> method is used to read information from a buffer.</source>
          <target state="translated">設定為 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A&gt;</ph> 參數部分的 <ph id="ph2">`quotas`</ph> 值只會限制使用 <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> 方法從資料流讀取輸入時，讀入記憶體的資訊量；使用 <ph id="ph4">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> 方法從緩衝區讀取資訊時並不會採用這個值。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
          <source>The limits on the number of attributes that can be loaded are not relevant to the JSON context.</source>
          <target state="translated">可以載入之屬性數目的限制與 JSON 內容無關。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> from which to read.</source>
          <target state="translated">要從其中讀取的輸入 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> used by the reader.</source>
          <target state="translated">此讀取器使用的 <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReaderQuotas" /&gt;</ph> to apply.</source>
          <target state="translated">要套用的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReaderQuotas" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>Delegate to call when the reader is closed.</source>
          <target state="translated">關閉讀取器時要呼叫的委派。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified stream that contains JSON-encoded data.</source>
          <target state="translated">將啟用 JavaScript 物件標記法 (JSON) 的讀取器重新初始化為含有 JSON 編碼資料的指定資料流。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>A <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> object that reads JSON-encoded streams can be reused by calling the <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> method to reinitialize it.</source>
          <target state="translated">讀取 JSON 編碼資料流的 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> 物件可以藉由呼叫 <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> 方法來重新初始化，以重複使用此物件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The reader can interpret the UTF-8 and the UTF-16 (big- or little-endian) encodings.</source>
          <target state="translated">此讀取器可以解譯 UTF-8 和 UTF-16 (位元組由大到小或由小到大) 編碼。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The reader uses the encoding set at initialization time if one is passed or the encoding is automatically detected if <ph id="ph1">`null`</ph> is passed.</source>
          <target state="translated">如果有傳遞編碼集則讀取器會在初始化階段使用編碼集，如果傳遞的是 <ph id="ph1">`null`</ph> 則會自動偵測編碼。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A&gt;</ph> value set as part of the <ph id="ph2">`quotas`</ph> parameter only limits the amount of information being read into memory when the input is being read from a stream with the <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> method and is not enforced when the <ph id="ph4">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> method is used to read information from a buffer.</source>
          <target state="translated">設定為 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A&gt;</ph> 參數部分的 <ph id="ph2">`quotas`</ph> 值只會限制使用 <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> 方法從資料流讀取輸入時，讀入記憶體的資訊量；使用 <ph id="ph4">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> 方法從緩衝區讀取資訊時並不會採用這個值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The limits on the number of attributes that can be loaded are not relevant to the JSON context.</source>
          <target state="translated">可以載入之屬性數目的限制與 JSON 內容無關。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> buffer array from which to read.</source>
          <target state="translated">要從其中讀取的輸入 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 緩衝區陣列。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The starting position from which to read in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">要在「緩衝區」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept> 中進行讀取的起始位置。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The number of bytes that can be read from <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">可以從「緩衝區」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>中讀取的位元組數目。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> used by the reader.</source>
          <target state="translated">此讀取器使用的 <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReaderQuotas" /&gt;</ph> to apply.</source>
          <target state="translated">要套用的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReaderQuotas" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.OnXmlDictionaryReaderClose" /&gt;</ph> delegate to call when the reader is closed.</source>
          <target state="translated">關閉讀取器時要呼叫的 <ph id="ph1">&lt;see cref="T:System.Xml.OnXmlDictionaryReaderClose" /&gt;</ph> 委派 (Delegate)。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified buffer that contains JSON-encoded data.</source>
          <target state="translated">將啟用 JavaScript 物件標記法 (JSON) 的讀取器重新初始化為含有 JSON 編碼資料的指定緩衝區。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>A <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> object that reads a JSON-encoded buffered <ph id="ph2">&lt;xref:System.Byte&gt;</ph> can be reused by calling the <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> method to reinitialize it.</source>
          <target state="translated">讀取 JSON 編碼緩衝之 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> 的 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 物件可以藉由呼叫 <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> 方法來重新初始化，以重複使用此物件。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The reader can interpret the UTF-8 and the UTF-16 (big- or little-endian) encodings.</source>
          <target state="translated">此讀取器可以解譯 UTF-8 和 UTF-16 (位元組由大到小或由小到大) 編碼。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The reader uses the encoding set at initialization time if one is passed or the encoding is automatically detected if <ph id="ph1">`null`</ph> is passed.</source>
          <target state="translated">如果有傳遞編碼集則讀取器會在初始化階段使用編碼集，如果傳遞的是 <ph id="ph1">`null`</ph> 則會自動偵測編碼。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A&gt;</ph> value set as part of the <ph id="ph2">`quotas`</ph> parameter only limits the amount of information being read into memory when the input is being read from a stream with the <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> method and is not enforced when the <ph id="ph4">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> method is used to read information from a buffer.</source>
          <target state="translated">設定為 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A&gt;</ph> 參數部分的 <ph id="ph2">`quotas`</ph> 值只會限制使用 <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> 方法從資料流讀取輸入時，讀入記憶體的資訊量；使用 <ph id="ph4">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> 方法從緩衝區讀取資訊時並不會採用這個值。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The limits on the number of attributes that can be loaded are not relevant to the JSON context.</source>
          <target state="translated">可以載入之屬性數目的限制與 JSON 內容無關。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>