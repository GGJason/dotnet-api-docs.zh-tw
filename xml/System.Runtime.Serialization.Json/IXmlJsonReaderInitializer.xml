<Type Name="IXmlJsonReaderInitializer" FullName="System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c4d67b3276b9bfdc254fb6828c29903605dda2c8" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46634169" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IXmlJsonReaderInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlJsonReaderInitializer" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlJsonReaderInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlJsonReaderInitializer" />
  <TypeSignature Language="F#" Value="type IXmlJsonReaderInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4db8c-101">當重複使用 JavaScript Object Notation (JSON) 讀取器從特定資料流或緩衝區讀取時，指定初始化該讀取器所使用的介面。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4db8c-101">Specifies the interface for initializing a JavaScript Object Notation (JSON) reader when reusing them to read from a particular stream or buffer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4db8c-102">其中一個 <xref:System.Xml.XmlDictionaryReader> 方法建立的 <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader%2A> 物件會實作此介面，並且會初始化為隨時可以讀取 JSON 編碼的資料。</span><span class="sxs-lookup"><span data-stu-id="4db8c-102">The <xref:System.Xml.XmlDictionaryReader> objects created by one of the <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader%2A> methods implement this interface and are initialized ready to read JSON-encoded data.</span></span> <span data-ttu-id="4db8c-103">不過，若使用者要重複使用相同的 <xref:System.Xml.XmlDictionaryReader> 物件來讀取其他的 JSON 編碼資料，則必須將讀取器初始化為要使用其中一個 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%2A> 方法讀取的第二個資料集。</span><span class="sxs-lookup"><span data-stu-id="4db8c-103">But if a user wants to reuse the same <xref:System.Xml.XmlDictionaryReader> object to read other JSON-encoded data, then the reader must be initialized to the second dataset to be read by using one of the <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%2A> methods.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="SetInput">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4db8c-104">將啟用 JavaScript 物件標記法 (JSON) 的讀取器重新初始化為含有 JSON 編碼資料的指定資料流或緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db8c-104">Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified stream or buffer that contains JSON-encoded data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4db8c-105">其中一個 <xref:System.Xml.XmlDictionaryReader> 方法建立的 <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader%2A> 物件會實作此介面，並且隨時可以讀取 JSON 編碼的資料。</span><span class="sxs-lookup"><span data-stu-id="4db8c-105">The <xref:System.Xml.XmlDictionaryReader> objects created by one of the <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader%2A> methods implement this interface and are ready to read JSON-encoded data.</span></span> <span data-ttu-id="4db8c-106">不過，若使用者要重複使用相同的 <xref:System.Xml.XmlDictionaryReader> 物件來讀取其他的 JSON 編碼資料，則必須將讀取器初始化為要使用其中一個 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%2A> 方法讀取的第二個資料集。</span><span class="sxs-lookup"><span data-stu-id="4db8c-106">But if a user wants to reuse the same <xref:System.Xml.XmlDictionaryReader> object to read other JSON-encoded data, then the reader must be initialized to the second dataset to be read by using the one of the <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%2A> methods.</span></span>  
  
 <span data-ttu-id="4db8c-107">設定為 <xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> 參數部分的 `quotas` 值只會限制使用 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> 方法從資料流讀取輸入時，讀入記憶體的資訊量；使用 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> 方法從緩衝區讀取資訊時並不會採用這個值。</span><span class="sxs-lookup"><span data-stu-id="4db8c-107">The <xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> value set as part of the `quotas` parameter only limits the amount of information being read into memory when the input is being read from a stream with the <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> method and is not enforced when the <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> method is used to read information from a buffer.</span></span> <span data-ttu-id="4db8c-108">可以載入之屬性數目的限制與 JSON 內容無關。</span><span class="sxs-lookup"><span data-stu-id="4db8c-108">The limits on the number of attributes that can be loaded are not relevant to the JSON context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetInput">
      <MemberSignature Language="C#" Value="public void SetInput (System.IO.Stream stream, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInput(class System.IO.Stream stream, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetInput(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberSignature Language="F#" Value="abstract member SetInput : System.IO.Stream * System.Text.Encoding * System.Xml.XmlDictionaryReaderQuotas * System.Xml.OnXmlDictionaryReaderClose -&gt; unit" Usage="iXmlJsonReaderInitializer.SetInput (stream, encoding, quotas, onClose)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="4db8c-109">要從其中讀取的輸入 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db8c-109">The input <see cref="T:System.IO.Stream" /> from which to read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="4db8c-110">此讀取器使用的 <see cref="T:System.Text.Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db8c-110">The <see cref="T:System.Text.Encoding" /> used by the reader.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="4db8c-111">要套用的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db8c-111">
              <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply.</span>
          </span>
        </param>
        <param name="onClose">
          <span data-ttu-id="4db8c-112">關閉讀取器時要呼叫的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db8c-112">Delegate to call when the reader is closed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4db8c-113">將啟用 JavaScript 物件標記法 (JSON) 的讀取器重新初始化為含有 JSON 編碼資料的指定資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db8c-113">Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified stream that contains JSON-encoded data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4db8c-114">讀取 JSON 編碼資料流的 <xref:System.Xml.XmlDictionaryReader> 物件可以藉由呼叫 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> 方法來重新初始化，以重複使用此物件。</span><span class="sxs-lookup"><span data-stu-id="4db8c-114">A <xref:System.Xml.XmlDictionaryReader> object that reads JSON-encoded streams can be reused by calling the <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> method to reinitialize it.</span></span>  
  
 <span data-ttu-id="4db8c-115">此讀取器可以解譯 UTF-8 和 UTF-16 (位元組由大到小或由小到大) 編碼。</span><span class="sxs-lookup"><span data-stu-id="4db8c-115">The reader can interpret the UTF-8 and the UTF-16 (big- or little-endian) encodings.</span></span> <span data-ttu-id="4db8c-116">如果有傳遞編碼集則讀取器會在初始化階段使用編碼集，如果傳遞的是 `null` 則會自動偵測編碼。</span><span class="sxs-lookup"><span data-stu-id="4db8c-116">The reader uses the encoding set at initialization time if one is passed or the encoding is automatically detected if `null` is passed.</span></span>  
  
 <span data-ttu-id="4db8c-117">設定為 <xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> 參數部分的 `quotas` 值只會限制使用 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> 方法從資料流讀取輸入時，讀入記憶體的資訊量；使用 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> 方法從緩衝區讀取資訊時並不會採用這個值。</span><span class="sxs-lookup"><span data-stu-id="4db8c-117">The <xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> value set as part of the `quotas` parameter only limits the amount of information being read into memory when the input is being read from a stream with the <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> method and is not enforced when the <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> method is used to read information from a buffer.</span></span> <span data-ttu-id="4db8c-118">可以載入之屬性數目的限制與 JSON 內容無關。</span><span class="sxs-lookup"><span data-stu-id="4db8c-118">The limits on the number of attributes that can be loaded are not relevant to the JSON context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInput">
      <MemberSignature Language="C#" Value="public void SetInput (byte[] buffer, int offset, int count, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInput(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetInput(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberSignature Language="F#" Value="abstract member SetInput : byte[] * int * int * System.Text.Encoding * System.Xml.XmlDictionaryReaderQuotas * System.Xml.OnXmlDictionaryReaderClose -&gt; unit" Usage="iXmlJsonReaderInitializer.SetInput (buffer, offset, count, encoding, quotas, onClose)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="4db8c-119">要從其中讀取的輸入 <see cref="T:System.Byte" /> 緩衝區陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db8c-119">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="4db8c-120">要在「緩衝區」<c></c> 中進行讀取的起始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db8c-120">The starting position from which to read in <c>buffer</c>.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4db8c-121">可以從「緩衝區」<c></c>中讀取的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db8c-121">The number of bytes that can be read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="4db8c-122">此讀取器使用的 <see cref="T:System.Text.Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db8c-122">The <see cref="T:System.Text.Encoding" /> used by the reader.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="4db8c-123">要套用的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db8c-123">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply.</span>
          </span>
        </param>
        <param name="onClose">
          <span data-ttu-id="4db8c-124">關閉讀取器時要呼叫的 <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> 委派 (Delegate)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db8c-124">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4db8c-125">將啟用 JavaScript 物件標記法 (JSON) 的讀取器重新初始化為含有 JSON 編碼資料的指定緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db8c-125">Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified buffer that contains JSON-encoded data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4db8c-126">讀取 JSON 編碼緩衝之 <xref:System.Xml.XmlDictionaryReader> 的 <xref:System.Byte> 物件可以藉由呼叫 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> 方法來重新初始化，以重複使用此物件。</span><span class="sxs-lookup"><span data-stu-id="4db8c-126">A <xref:System.Xml.XmlDictionaryReader> object that reads a JSON-encoded buffered <xref:System.Byte> can be reused by calling the <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> method to reinitialize it.</span></span>  
  
 <span data-ttu-id="4db8c-127">此讀取器可以解譯 UTF-8 和 UTF-16 (位元組由大到小或由小到大) 編碼。</span><span class="sxs-lookup"><span data-stu-id="4db8c-127">The reader can interpret the UTF-8 and the UTF-16 (big- or little-endian) encodings.</span></span> <span data-ttu-id="4db8c-128">如果有傳遞編碼集則讀取器會在初始化階段使用編碼集，如果傳遞的是 `null` 則會自動偵測編碼。</span><span class="sxs-lookup"><span data-stu-id="4db8c-128">The reader uses the encoding set at initialization time if one is passed or the encoding is automatically detected if `null` is passed.</span></span>  
  
 <span data-ttu-id="4db8c-129">設定為 <xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> 參數部分的 `quotas` 值只會限制使用 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> 方法從資料流讀取輸入時，讀入記憶體的資訊量；使用 <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> 方法從緩衝區讀取資訊時並不會採用這個值。</span><span class="sxs-lookup"><span data-stu-id="4db8c-129">The <xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> value set as part of the `quotas` parameter only limits the amount of information being read into memory when the input is being read from a stream with the <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> method and is not enforced when the <xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29> method is used to read information from a buffer.</span></span> <span data-ttu-id="4db8c-130">可以載入之屬性數目的限制與 JSON 內容無關。</span><span class="sxs-lookup"><span data-stu-id="4db8c-130">The limits on the number of attributes that can be loaded are not relevant to the JSON context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>