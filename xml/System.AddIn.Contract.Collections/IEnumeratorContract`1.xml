<Type Name="IEnumeratorContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.IEnumeratorContract&lt;C&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="78e6345cd517ff39900eb51228e68866710c9309" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37705773" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;C&gt; : System.AddIn.Contract.IContract where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.IEnumeratorContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumeratorContract(Of C)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename C&gt;&#xA; where C : IContractpublic interface class IEnumeratorContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IEnumeratorContract&lt;'C (requires 'C :&gt; IContract)&gt; = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C">
      <span data-ttu-id="0c052-101">要列舉之物件的型別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c052-101">The type of objects to enumerate.</span>
      </span>
      <span data-ttu-id="0c052-102">
        <c>C</c>必須實作<see cref="T:System.AddIn.Contract.IContract" />介面。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c052-102">
          <c>C</c> must implement the <see cref="T:System.AddIn.Contract.IContract" /> interface.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="0c052-103">列舉 <see cref="T:System.AddIn.Contract.IContract" /> 物件之泛型集合的項目。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c052-103">Enumerates the elements of a generic collection of <see cref="T:System.AddIn.Contract.IContract" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c052-104">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="0c052-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="0c052-105">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="0c052-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="0c052-106">在這個位置，傳回值<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="0c052-106">At this position, the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span> <span data-ttu-id="0c052-107">因此，您必須呼叫<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>列舉值前進到第一個元素的集合，然後再呼叫<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c052-107">Therefore, you must call <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
 <span data-ttu-id="0c052-108"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> 會傳回相同的物件直到呼叫 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c052-108"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="0c052-109"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 設定傳回值<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>下一個項目。</span><span class="sxs-lookup"><span data-stu-id="0c052-109"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 <span data-ttu-id="0c052-110">如果<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>集合，也就是列舉值的結尾是否位於集合中的最後一個元素之後的階段和<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="0c052-110">If <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="0c052-111">列舉值位於此位置，後續呼叫<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="0c052-111">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="0c052-112">如果上次呼叫<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>傳回`false`，傳回值<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="0c052-112">If the last call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span>  
  
 <span data-ttu-id="0c052-113">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="0c052-113">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="0c052-114">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</span><span class="sxs-lookup"><span data-stu-id="0c052-114">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public C GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !C GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As C" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; C GetCurrent();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrent : unit -&gt; 'C" Usage="iEnumeratorContract.GetCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>C</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c052-115">傳回集合中位於列舉值目前位置的 <see cref="T:System.AddIn.Contract.IContract" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c052-115">Returns the <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c052-116">集合中位於列舉值目前位置的 <see cref="T:System.AddIn.Contract.IContract" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c052-116">The <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c052-117">傳回值<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>未定義任何下列的情況下：</span><span class="sxs-lookup"><span data-stu-id="0c052-117">The return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="0c052-118">列舉值位於集合中的第一個項目之前立即建立列舉值之後，或之後<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="0c052-118">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> is called.</span></span> <span data-ttu-id="0c052-119"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 必須先呼叫列舉值前進到第一個元素的集合，然後再呼叫<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c052-119"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
-   <span data-ttu-id="0c052-120">在上次呼叫<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>傳回`false`，表示集合的結尾。</span><span class="sxs-lookup"><span data-stu-id="0c052-120">The last call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="0c052-121">因為在集合中，例如加入、 修改或刪除的項目所做的變更而無效列舉值。</span><span class="sxs-lookup"><span data-stu-id="0c052-121">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="0c052-122"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> 會傳回相同的物件直到呼叫 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c052-122"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="0c052-123"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 設定傳回值<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>下一個項目。</span><span class="sxs-lookup"><span data-stu-id="0c052-123"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool" Usage="iEnumeratorContract.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c052-124">將列舉值往前推至下集合中的下一個項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c052-124">Advances the enumerator to the next element of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c052-125">如果列舉值成功地前移至下一個項目，則為 <see langword="true" />，如果列舉值已超過集合的結尾，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c052-125">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c052-126">建立列舉值之後，或之後<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A>呼叫方法，列舉值位於集合的第一個元素之前。</span><span class="sxs-lookup"><span data-stu-id="0c052-126">After an enumerator is created or after the <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> method is called, an enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="0c052-127">第一次呼叫<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>方法會將列舉程式移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="0c052-127">The first call to the <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> method moves the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="0c052-128">如果<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>集合，也就是列舉值的結尾是否位於集合中的最後一個元素之後的階段和<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="0c052-128">If <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="0c052-129">列舉值位於此位置，後續呼叫<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>也會傳回`false`直到<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="0c052-129">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> also return `false` until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="0c052-130">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="0c052-130">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="0c052-131">如果變更集合，例如加入、 修改或刪除元素，列舉值會將永久失效，而且下次呼叫<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>或是<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A>就會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="0c052-131">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0c052-132">在建立列舉值之後，會修改集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c052-132">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iEnumeratorContract.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c052-133">設定列舉值至它的初始位置，這是在集合中第一個元素之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c052-133">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c052-134">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="0c052-134">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="0c052-135">如果變更集合，例如加入、 修改或刪除元素，列舉值會將永久失效，而且下次呼叫<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>或是<xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A>就會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="0c052-135">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0c052-136">在建立列舉值之後，會修改集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c052-136">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>