<Type Name="Publish" FullName="System.EnterpriseServices.Internal.Publish">
  <TypeSignature Language="C#" Value="public class Publish : System.EnterpriseServices.Internal.IComSoapPublisher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Publish extends System.Object implements class System.EnterpriseServices.Internal.IComSoapPublisher" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.Publish" />
  <TypeSignature Language="VB.NET" Value="Public Class Publish&#xA;Implements IComSoapPublisher" />
  <TypeSignature Language="C++ CLI" Value="public ref class Publish : System::EnterpriseServices::Internal::IComSoapPublisher" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.IComSoapPublisher</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("d8013eef-730b-45e2-ba24-874b7242c425")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9ae42-101">發行啟用 SOAP 之 COM+ 應用程式的 COM 介面。</span><span class="sxs-lookup"><span data-stu-id="9ae42-101">Publishes COM interfaces for SOAP-enabled COM+ applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ae42-102"><xref:System.EnterpriseServices.Internal.Publish> 為.NET framework 內部使用。</span><span class="sxs-lookup"><span data-stu-id="9ae42-102"><xref:System.EnterpriseServices.Internal.Publish> is used internally by the .NET Framework.</span></span> <span data-ttu-id="9ae42-103">您不需要在您的程式碼中直接使用它。</span><span class="sxs-lookup"><span data-stu-id="9ae42-103">You do not need to use it directly in your code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Publish ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Publish();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9ae42-104">初始化 <see cref="T:System.EnterpriseServices.Internal.Publish" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="9ae42-104">Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.Publish" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMailBox">
      <MemberSignature Language="C#" Value="public void CreateMailBox (string RootMailServer, string MailBox, out string SmtpName, out string Domain, out string PhysicalPath, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateMailBox(string RootMailServer, string MailBox, [out] string&amp; SmtpName, [out] string&amp; Domain, [out] string&amp; PhysicalPath, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateMailBox (RootMailServer As String, MailBox As String, ByRef SmtpName As String, ByRef Domain As String, ByRef PhysicalPath As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CreateMailBox(System::String ^ RootMailServer, System::String ^ MailBox, [Runtime::InteropServices::Out] System::String ^ % SmtpName, [Runtime::InteropServices::Out] System::String ^ % Domain, [Runtime::InteropServices::Out] System::String ^ % PhysicalPath, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RootMailServer" Type="System.String" />
        <Parameter Name="MailBox" Type="System.String" />
        <Parameter Name="SmtpName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="Domain" Type="System.String&amp;" RefType="out" />
        <Parameter Name="PhysicalPath" Type="System.String&amp;" RefType="out" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="RootMailServer"><span data-ttu-id="9ae42-105">根郵件伺服器的 URL。</span><span class="sxs-lookup"><span data-stu-id="9ae42-105">The URL for the root mail server.</span></span></param>
        <param name="MailBox"><span data-ttu-id="9ae42-106">要建立的信箱。</span><span class="sxs-lookup"><span data-stu-id="9ae42-106">The mailbox to create.</span></span></param>
        <param name="SmtpName"><span data-ttu-id="9ae42-107">當這個方法傳回時，這個參數會包含內含信箱的 Simple Mail Transfer Protocol (SMTP) 伺服器名稱。</span><span class="sxs-lookup"><span data-stu-id="9ae42-107">When this method returns, this parameter contains the name of the Simple Mail Transfer Protocol (SMTP) server containing the mailbox.</span></span></param>
        <param name="Domain"><span data-ttu-id="9ae42-108">當這個方法傳回時，這個參數會包含 SMTP 伺服器的網域。</span><span class="sxs-lookup"><span data-stu-id="9ae42-108">When this method returns, this parameter contains the domain of the SMTP server.</span></span></param>
        <param name="PhysicalPath"><span data-ttu-id="9ae42-109">當這個方法傳回時，這個參數會包含信箱的檔案系統路徑。</span><span class="sxs-lookup"><span data-stu-id="9ae42-109">When this method returns, this parameter contains the file system path for the mailbox.</span></span></param>
        <param name="Error"><span data-ttu-id="9ae42-110">如果遇到問題，則這個方法傳回時，這個參數會包含錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="9ae42-110">When this method returns, this parameter contains an error message if a problem was encountered.</span></span></param>
        <summary><span data-ttu-id="9ae42-111">在指定的 URL 建立啟用 SOAP 的 COM+ 應用程式信箱。</span><span class="sxs-lookup"><span data-stu-id="9ae42-111">Creates a SOAP-enabled COM+ application mailbox at a specified URL.</span></span> <span data-ttu-id="9ae42-112">未完整實作。</span><span class="sxs-lookup"><span data-stu-id="9ae42-112">Not fully implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ae42-113">未完整實作。無法建立信箱。</span><span class="sxs-lookup"><span data-stu-id="9ae42-113">Not fully implemented; does not create a mailbox.</span></span> <span data-ttu-id="9ae42-114">傳回的錯誤訊息 「 COM + SOAP 服務不支援 SMTP 發行集 」。</span><span class="sxs-lookup"><span data-stu-id="9ae42-114">Returns the error message "COM+ SOAP services SMTP publication is not supported."</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9ae42-115">呼叫鏈結中的呼叫端沒有存取 Unmanaged 程式碼的使用權限。</span><span class="sxs-lookup"><span data-stu-id="9ae42-115">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9ae42-116">提供存取 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="9ae42-116">for the ability to access unmanaged code.</span></span> <span data-ttu-id="9ae42-117">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="9ae42-117">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateVirtualRoot">
      <MemberSignature Language="C#" Value="public void CreateVirtualRoot (string Operation, string FullUrl, out string BaseUrl, out string VirtualRoot, out string PhysicalPath, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateVirtualRoot(string Operation, string FullUrl, [out] string&amp; BaseUrl, [out] string&amp; VirtualRoot, [out] string&amp; PhysicalPath, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateVirtualRoot (Operation As String, FullUrl As String, ByRef BaseUrl As String, ByRef VirtualRoot As String, ByRef PhysicalPath As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CreateVirtualRoot(System::String ^ Operation, System::String ^ FullUrl, [Runtime::InteropServices::Out] System::String ^ % BaseUrl, [Runtime::InteropServices::Out] System::String ^ % VirtualRoot, [Runtime::InteropServices::Out] System::String ^ % PhysicalPath, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operation" Type="System.String" />
        <Parameter Name="FullUrl" Type="System.String" />
        <Parameter Name="BaseUrl" Type="System.String&amp;" RefType="out" />
        <Parameter Name="VirtualRoot" Type="System.String&amp;" RefType="out" />
        <Parameter Name="PhysicalPath" Type="System.String&amp;" RefType="out" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Operation"><span data-ttu-id="9ae42-118">要執行的作業。</span><span class="sxs-lookup"><span data-stu-id="9ae42-118">The operation to perform.</span></span></param>
        <param name="FullUrl"><span data-ttu-id="9ae42-119">虛擬根目錄 (Virtual Root) 的完整 URL 位址。</span><span class="sxs-lookup"><span data-stu-id="9ae42-119">The complete URL address for the virtual root.</span></span></param>
        <param name="BaseUrl"><span data-ttu-id="9ae42-120">當這個方法傳回時，這個參數會包含基礎 URL 位址。</span><span class="sxs-lookup"><span data-stu-id="9ae42-120">When this method returns, this parameter contains the base URL address.</span></span></param>
        <param name="VirtualRoot"><span data-ttu-id="9ae42-121">當這個方法傳回時，這個參數會包含虛擬根目錄的名稱。</span><span class="sxs-lookup"><span data-stu-id="9ae42-121">When this method returns, this parameter contains the name of the virtual root.</span></span></param>
        <param name="PhysicalPath"><span data-ttu-id="9ae42-122">當這個方法傳回時，這個參數會包含虛擬根目錄的檔案路徑。</span><span class="sxs-lookup"><span data-stu-id="9ae42-122">When this method returns, this parameter contains the file path for the virtual root.</span></span></param>
        <param name="Error"><span data-ttu-id="9ae42-123">如果遇到問題，則這個方法傳回時，這個參數會包含錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="9ae42-123">When this method returns, this parameter contains an error message if a problem was encountered.</span></span></param>
        <summary><span data-ttu-id="9ae42-124">建立啟用 SOAP 的 COM+ 應用程式的虛擬根目錄 (Virtual Root)。</span><span class="sxs-lookup"><span data-stu-id="9ae42-124">Creates a SOAP-enabled COM+ application virtual root.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ae42-125">建議<xref:System.EnterpriseServices.Internal.SoapServerVRoot.CreateVirtualRootEx%2A>來取代<xref:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot%2A>。</span><span class="sxs-lookup"><span data-stu-id="9ae42-125">It is recommended that <xref:System.EnterpriseServices.Internal.SoapServerVRoot.CreateVirtualRootEx%2A> be used instead of <xref:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9ae42-126">呼叫鏈結中的呼叫端沒有存取 Unmanaged 程式碼的使用權限。</span><span class="sxs-lookup"><span data-stu-id="9ae42-126">A caller in the call chain does not have permission to access unmanaged code.</span></span>  
  
 <span data-ttu-id="9ae42-127">-或-</span><span class="sxs-lookup"><span data-stu-id="9ae42-127">-or-</span></span>  
  
 <span data-ttu-id="9ae42-128">呼叫端並沒有可以存取 DNS 資訊的使用權限。</span><span class="sxs-lookup"><span data-stu-id="9ae42-128">The caller does not have permission to access DNS information.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ae42-129"><paramref name="FullUrl" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9ae42-129"><paramref name="FullUrl" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="9ae42-130">當解析本機主機名稱時，發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="9ae42-130">An error is encountered when resolving the local host name.</span></span></exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="9ae42-131"><paramref name="FullUrl" /> 是空的。</span><span class="sxs-lookup"><span data-stu-id="9ae42-131"><paramref name="FullUrl" /> is empty.</span></span>  
  
 <span data-ttu-id="9ae42-132">-或-</span><span class="sxs-lookup"><span data-stu-id="9ae42-132">-or-</span></span>  
  
 <span data-ttu-id="9ae42-133"><paramref name="FullUrl" /> 中指定的配置無效。</span><span class="sxs-lookup"><span data-stu-id="9ae42-133">The scheme specified in <paramref name="FullUrl" /> is invalid.</span></span>  
  
 <span data-ttu-id="9ae42-134">-或-</span><span class="sxs-lookup"><span data-stu-id="9ae42-134">-or-</span></span>  
  
 <span data-ttu-id="9ae42-135"><paramref name="FullUrl" /> 包含兩個以上連續的斜線。</span><span class="sxs-lookup"><span data-stu-id="9ae42-135"><paramref name="FullUrl" /> contains more than two consecutive slashes.</span></span>  
  
 <span data-ttu-id="9ae42-136">-或-</span><span class="sxs-lookup"><span data-stu-id="9ae42-136">-or-</span></span>  
  
 <span data-ttu-id="9ae42-137"><paramref name="FullUrl" /> 中指定的密碼無效。</span><span class="sxs-lookup"><span data-stu-id="9ae42-137">The password specified in <paramref name="FullUrl" /> is invalid.</span></span>  
  
 <span data-ttu-id="9ae42-138">-或-</span><span class="sxs-lookup"><span data-stu-id="9ae42-138">-or-</span></span>  
  
 <span data-ttu-id="9ae42-139"><paramref name="FullUrl" /> 中指定的主機名稱無效。</span><span class="sxs-lookup"><span data-stu-id="9ae42-139">The host name specified in <paramref name="FullUrl" /> is invalid.</span></span>  
  
 <span data-ttu-id="9ae42-140">-或-</span><span class="sxs-lookup"><span data-stu-id="9ae42-140">-or-</span></span>  
  
 <span data-ttu-id="9ae42-141"><paramref name="FullUrl" /> 中指定的檔案名稱無效。</span><span class="sxs-lookup"><span data-stu-id="9ae42-141">The file name specified in <paramref name="FullUrl" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9ae42-142">針對遠端執行功能基礎結構的設定。</span><span class="sxs-lookup"><span data-stu-id="9ae42-142">for configuration of the remoting infrastructure.</span></span> <span data-ttu-id="9ae42-143">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></span><span class="sxs-lookup"><span data-stu-id="9ae42-143">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DeleteMailBox">
      <MemberSignature Language="C#" Value="public void DeleteMailBox (string RootMailServer, string MailBox, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteMailBox(string RootMailServer, string MailBox, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.DeleteMailBox(System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteMailBox (RootMailServer As String, MailBox As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteMailBox(System::String ^ RootMailServer, System::String ^ MailBox, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox(System.String,System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RootMailServer" Type="System.String" />
        <Parameter Name="MailBox" Type="System.String" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="RootMailServer"><span data-ttu-id="9ae42-144">根郵件伺服器的 URL。</span><span class="sxs-lookup"><span data-stu-id="9ae42-144">The URL for the root mail server.</span></span></param>
        <param name="MailBox"><span data-ttu-id="9ae42-145">要刪除的信箱。</span><span class="sxs-lookup"><span data-stu-id="9ae42-145">The mailbox to delete.</span></span></param>
        <param name="Error"><span data-ttu-id="9ae42-146">如果遇到問題，則這個方法傳回時，這個參數會包含錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="9ae42-146">When this method returns, this parameter contains an error message if a problem was encountered.</span></span></param>
        <summary><span data-ttu-id="9ae42-147">在指定的 URL 刪除啟用 SOAP 的 COM+ 應用程式信箱。</span><span class="sxs-lookup"><span data-stu-id="9ae42-147">Deletes a SOAP-enabled COM+ application mailbox at a specified URL.</span></span> <span data-ttu-id="9ae42-148">未完整實作。</span><span class="sxs-lookup"><span data-stu-id="9ae42-148">Not fully implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ae42-149">未完整實作，並不會刪除信箱。</span><span class="sxs-lookup"><span data-stu-id="9ae42-149">Not fully implemented, does not delete the mailbox.</span></span> <span data-ttu-id="9ae42-150">傳回的錯誤訊息 「 COM + SOAP 服務不支援 SMTP 發行集 」。</span><span class="sxs-lookup"><span data-stu-id="9ae42-150">Returns the error message "COM+ SOAP services SMTP publication is not supported."</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9ae42-151">呼叫鏈結中的呼叫端沒有存取 Unmanaged 程式碼的使用權限。</span><span class="sxs-lookup"><span data-stu-id="9ae42-151">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9ae42-152">提供存取 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="9ae42-152">for the ability to access unmanaged code.</span></span> <span data-ttu-id="9ae42-153">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="9ae42-153">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DeleteVirtualRoot">
      <MemberSignature Language="C#" Value="public void DeleteVirtualRoot (string RootWebServer, string FullUrl, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteVirtualRoot(string RootWebServer, string FullUrl, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot(System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteVirtualRoot (RootWebServer As String, FullUrl As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteVirtualRoot(System::String ^ RootWebServer, System::String ^ FullUrl, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(System.String,System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RootWebServer" Type="System.String" />
        <Parameter Name="FullUrl" Type="System.String" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="RootWebServer"><span data-ttu-id="9ae42-154">根 Web 伺服器。</span><span class="sxs-lookup"><span data-stu-id="9ae42-154">The root Web server.</span></span></param>
        <param name="FullUrl"><span data-ttu-id="9ae42-155">虛擬根目錄 (Virtual Root) 的完整 URL 位址。</span><span class="sxs-lookup"><span data-stu-id="9ae42-155">The complete URL address for the virtual root.</span></span></param>
        <param name="Error"><span data-ttu-id="9ae42-156">如果遇到問題，則這個方法傳回時，這個參數會包含錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="9ae42-156">When this method returns, this parameter contains an error message if a problem was encountered.</span></span></param>
        <summary><span data-ttu-id="9ae42-157">刪除啟用 SOAP 的 COM+ 應用程式的虛擬根目錄。</span><span class="sxs-lookup"><span data-stu-id="9ae42-157">Deletes a SOAP-enabled COM+ application virtual root.</span></span> <span data-ttu-id="9ae42-158">未完整實作。</span><span class="sxs-lookup"><span data-stu-id="9ae42-158">Not fully implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ae42-159">功能<xref:System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot%2A>尚無法使用。</span><span class="sxs-lookup"><span data-stu-id="9ae42-159">The functionality for <xref:System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot%2A> is not yet available.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9ae42-160">目前，此方法會傳回不會產生錯誤，但不是會刪除虛擬根目錄。</span><span class="sxs-lookup"><span data-stu-id="9ae42-160">The method currently returns without an error, but the virtual root is not deleted.</span></span>  
  
 <span data-ttu-id="9ae42-161">當功能就會變成可用時，建議使用這個方法會<xref:System.EnterpriseServices.Internal.SoapServerVRoot.DeleteVirtualRootEx%2A>。</span><span class="sxs-lookup"><span data-stu-id="9ae42-161">When the functionality becomes available, the recommended method will be <xref:System.EnterpriseServices.Internal.SoapServerVRoot.DeleteVirtualRootEx%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9ae42-162">呼叫鏈結中的呼叫端沒有存取 Unmanaged 程式碼的使用權限。</span><span class="sxs-lookup"><span data-stu-id="9ae42-162">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9ae42-163">提供存取 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="9ae42-163">for the ability to access unmanaged code.</span></span> <span data-ttu-id="9ae42-164">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="9ae42-164">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GacInstall">
      <MemberSignature Language="C#" Value="public void GacInstall (string AssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GacInstall(string AssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.GacInstall(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GacInstall (AssemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GacInstall(System::String ^ AssemblyPath);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath"><span data-ttu-id="9ae42-165">組件的檔案系統路徑。</span><span class="sxs-lookup"><span data-stu-id="9ae42-165">The file system path for the assembly.</span></span></param>
        <summary><span data-ttu-id="9ae42-166">將組件 (Assembly) 安裝到全域組件快取中。</span><span class="sxs-lookup"><span data-stu-id="9ae42-166">Installs an assembly in the global assembly cache.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9ae42-167">呼叫鏈結中的呼叫端沒有存取 Unmanaged 程式碼的使用權限。</span><span class="sxs-lookup"><span data-stu-id="9ae42-167">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9ae42-168">提供存取 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="9ae42-168">for the ability to access unmanaged code.</span></span> <span data-ttu-id="9ae42-169">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="9ae42-169">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GacRemove">
      <MemberSignature Language="C#" Value="public void GacRemove (string AssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GacRemove(string AssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.GacRemove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GacRemove (AssemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GacRemove(System::String ^ AssemblyPath);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath"><span data-ttu-id="9ae42-170">組件的檔案系統路徑。</span><span class="sxs-lookup"><span data-stu-id="9ae42-170">The file system path for the assembly.</span></span></param>
        <summary><span data-ttu-id="9ae42-171">將組件從全域組件快取中移除。</span><span class="sxs-lookup"><span data-stu-id="9ae42-171">Removes an assembly from the global assembly cache.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9ae42-172">呼叫鏈結中的呼叫端沒有存取 Unmanaged 程式碼的使用權限。</span><span class="sxs-lookup"><span data-stu-id="9ae42-172">A caller in the call chain does not have permission to access unmanaged code.</span></span>  
  
 <span data-ttu-id="9ae42-173">-或-</span><span class="sxs-lookup"><span data-stu-id="9ae42-173">-or-</span></span>  
  
 <span data-ttu-id="9ae42-174">呼叫端沒有路徑探索權限。</span><span class="sxs-lookup"><span data-stu-id="9ae42-174">The caller does not have path discovery permission.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ae42-175"><paramref name="AssemblyPath" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9ae42-175"><paramref name="AssemblyPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9ae42-176"><paramref name="AssemblyPath" /> 是空的。</span><span class="sxs-lookup"><span data-stu-id="9ae42-176"><paramref name="AssemblyPath" /> is empty.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ae42-177">找不到 <paramref name="AssemblyPath" />。</span><span class="sxs-lookup"><span data-stu-id="9ae42-177"><paramref name="AssemblyPath" /> is not found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="9ae42-178">使用兩個不同的辨識項載入組件或模組兩次。</span><span class="sxs-lookup"><span data-stu-id="9ae42-178">An assembly or module was loaded twice with two different evidences.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ae42-179"><paramref name="AssemblyPath" /> 不是有效的組件。</span><span class="sxs-lookup"><span data-stu-id="9ae42-179"><paramref name="AssemblyPath" /> is not a valid assembly.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9ae42-180">提供存取 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="9ae42-180">for the ability to access unmanaged code.</span></span> <span data-ttu-id="9ae42-181">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="9ae42-181">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblyNameForCache">
      <MemberSignature Language="C#" Value="public void GetAssemblyNameForCache (string TypeLibPath, out string CachePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetAssemblyNameForCache(string TypeLibPath, [out] string&amp; CachePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.GetAssemblyNameForCache(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetAssemblyNameForCache (TypeLibPath As String, ByRef CachePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetAssemblyNameForCache(System::String ^ TypeLibPath, [Runtime::InteropServices::Out] System::String ^ % CachePath);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache(System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TypeLibPath" Type="System.String" />
        <Parameter Name="CachePath" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="TypeLibPath"><span data-ttu-id="9ae42-182">含有 typelib 之檔案的路徑。</span><span class="sxs-lookup"><span data-stu-id="9ae42-182">The path for the file that contains the typelib.</span></span></param>
        <param name="CachePath"><span data-ttu-id="9ae42-183">當這個方法傳回時，這個參數會包含 SoapCache 目錄的名稱。</span><span class="sxs-lookup"><span data-stu-id="9ae42-183">When this method returns, this parameter contains the name of the SoapCache directory.</span></span></param>
        <summary><span data-ttu-id="9ae42-184">傳回 SoapCache 目錄中以強式名稱簽名所產生組件的完整路徑。</span><span class="sxs-lookup"><span data-stu-id="9ae42-184">Returns the full path for a strong-named signed generated assembly in the SoapCache directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ae42-185">Unmanaged COM + 元件已發佈，透過 SOAP 端點的.NET 遠端處理，必須可讓.NET Framework 中使用的 unmanaged 的元件會產生 proxy。</span><span class="sxs-lookup"><span data-stu-id="9ae42-185">For an unmanaged COM+ component to be published through .NET remoting as a SOAP endpoint, a proxy needs to be generated to make the unmanaged components available to the .NET Framework.</span></span> <span data-ttu-id="9ae42-186">這樣做，以程式設計方式執行相同的步驟，做為類型程式庫匯入工具 (Tlbimp.exe)，[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]工具，用於 proxy 的中繼資料組件轉換成 unmanaged 的 COM + 型別程式庫。</span><span class="sxs-lookup"><span data-stu-id="9ae42-186">This is done by programmatically performing the same steps as Type Library Importer (Tlbimp.exe), the [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)] tool that is used to convert unmanaged COM+ type libraries to proxy metadata assemblies.</span></span> <span data-ttu-id="9ae42-187">不過，對於透過成功的 SOAP 用戶端啟用，用戶端和伺服器電腦必須共用相同的強式名稱簽章的中繼資料 proxy。</span><span class="sxs-lookup"><span data-stu-id="9ae42-187">For client activation over SOAP to succeed, however, client and server machines must share the same strong-named signed metadata proxies.</span></span> <span data-ttu-id="9ae42-188">基於這個理由，受管理的 proxy 組件時產生的 unmanaged COM + 元件，強式名稱金鑰也產生並用於登入 proxy 的組件。</span><span class="sxs-lookup"><span data-stu-id="9ae42-188">For this reason, when a managed proxy assembly is generated for an unmanaged COM+ component, a strong name key is also generated and used to sign the proxy assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ae42-189"><paramref name="TypeLibPath" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9ae42-189"><paramref name="TypeLibPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9ae42-190">呼叫端沒有必要的權限。</span><span class="sxs-lookup"><span data-stu-id="9ae42-190">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ae42-191">此檔案名稱是空的，只包含空格或包含無效字元。</span><span class="sxs-lookup"><span data-stu-id="9ae42-191">The file name is empty, contains only white spaces, or contains invalid characters.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="9ae42-192">存取 <paramref name="TypeLibPath" /> 遭拒。</span><span class="sxs-lookup"><span data-stu-id="9ae42-192">Access to <paramref name="TypeLibPath" /> is denied.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="9ae42-193">指定的路徑、檔案名稱，或兩者都超出系統定義的長度上限。</span><span class="sxs-lookup"><span data-stu-id="9ae42-193">The specified path, file name, or both exceed the system-defined maximum length.</span></span> <span data-ttu-id="9ae42-194">例如，在以 Windows 為基礎的平台上，路徑必須少於 248 個字元，檔案名稱必須少於 260 個字元。</span><span class="sxs-lookup"><span data-stu-id="9ae42-194">For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9ae42-195"><paramref name="TypeLibPath" /> 在字串的中間包含一個冒號 (:)。</span><span class="sxs-lookup"><span data-stu-id="9ae42-195"><paramref name="TypeLibPath" /> contains a colon (:) in the middle of the string.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="9ae42-196">讀取檔案。</span><span class="sxs-lookup"><span data-stu-id="9ae42-196">for reading files.</span></span> <span data-ttu-id="9ae42-197">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="9ae42-197">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetClientPhysicalPath">
      <MemberSignature Language="C#" Value="public static string GetClientPhysicalPath (bool CreateDir);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClientPhysicalPath(bool CreateDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.GetClientPhysicalPath(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClientPhysicalPath (CreateDir As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClientPhysicalPath(bool CreateDir);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CreateDir" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CreateDir"><span data-ttu-id="9ae42-198">設定為 <see langword="true" /> 表示會建立目錄，<see langword="false" /> 則表示傳回路徑，但不建立目錄。</span><span class="sxs-lookup"><span data-stu-id="9ae42-198">Set to <see langword="true" /> to create the directory, or <see langword="false" /> to return the path but not create the directory.</span></span></param>
        <summary><span data-ttu-id="9ae42-199">傳回目錄的路徑以存放用戶端組態檔案。</span><span class="sxs-lookup"><span data-stu-id="9ae42-199">Returns the path for the directory for storing client configuration files.</span></span></summary>
        <returns><span data-ttu-id="9ae42-200">包含組態檔的目錄路徑。</span><span class="sxs-lookup"><span data-stu-id="9ae42-200">The path for the directory to contain the configuration files.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ae42-201">建立目錄"\com\SOAPAssembly\\「 系統目錄下。</span><span class="sxs-lookup"><span data-stu-id="9ae42-201">Creates the directories "\com\SOAPAssembly\\" under the system directory.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="9ae42-202">呼叫端沒有必要的權限。</span><span class="sxs-lookup"><span data-stu-id="9ae42-202">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeNameFromProgId">
      <MemberSignature Language="C#" Value="public string GetTypeNameFromProgId (string AssemblyPath, string ProgId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTypeNameFromProgId(string AssemblyPath, string ProgId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.GetTypeNameFromProgId(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeNameFromProgId (AssemblyPath As String, ProgId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetTypeNameFromProgId(System::String ^ AssemblyPath, System::String ^ ProgId);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
        <Parameter Name="ProgId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath"><span data-ttu-id="9ae42-203">組件的檔案系統路徑。</span><span class="sxs-lookup"><span data-stu-id="9ae42-203">The file system path for the assembly.</span></span></param>
        <param name="ProgId"><span data-ttu-id="9ae42-204">類別的程式設計識別項。</span><span class="sxs-lookup"><span data-stu-id="9ae42-204">The programmatic identifier of the class.</span></span></param>
        <summary><span data-ttu-id="9ae42-205">反映在組件上，並傳回符合 ProgID 的型別名稱。</span><span class="sxs-lookup"><span data-stu-id="9ae42-205">Reflects over an assembly and returns the type name that matches the ProgID.</span></span></summary>
        <returns><span data-ttu-id="9ae42-206">符合 ProgID 的型別名稱。</span><span class="sxs-lookup"><span data-stu-id="9ae42-206">The type name that matches the ProgID.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9ae42-207">呼叫鏈結中的呼叫端沒有存取 Unmanaged 程式碼的使用權限。</span><span class="sxs-lookup"><span data-stu-id="9ae42-207">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9ae42-208">提供存取 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="9ae42-208">for the ability to access unmanaged code.</span></span> <span data-ttu-id="9ae42-209">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="9ae42-209">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ParseUrl">
      <MemberSignature Language="C#" Value="public static void ParseUrl (string FullUrl, out string BaseUrl, out string VirtualRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParseUrl(string FullUrl, [out] string&amp; BaseUrl, [out] string&amp; VirtualRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.ParseUrl(System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParseUrl (FullUrl As String, ByRef BaseUrl As String, ByRef VirtualRoot As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParseUrl(System::String ^ FullUrl, [Runtime::InteropServices::Out] System::String ^ % BaseUrl, [Runtime::InteropServices::Out] System::String ^ % VirtualRoot);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FullUrl" Type="System.String" />
        <Parameter Name="BaseUrl" Type="System.String&amp;" RefType="out" />
        <Parameter Name="VirtualRoot" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FullUrl"><span data-ttu-id="9ae42-210">虛擬根目錄 (Virtual Root) 的完整 URL 位址。</span><span class="sxs-lookup"><span data-stu-id="9ae42-210">The complete URL address for the virtual root.</span></span></param>
        <param name="BaseUrl"><span data-ttu-id="9ae42-211">當這個方法傳回時，這個參數會包含基礎 URL 位址。</span><span class="sxs-lookup"><span data-stu-id="9ae42-211">When this method returns, this parameter contains the base URL address.</span></span></param>
        <param name="VirtualRoot"><span data-ttu-id="9ae42-212">當這個方法傳回時，這個參數會包含虛擬根目錄的名稱。</span><span class="sxs-lookup"><span data-stu-id="9ae42-212">When this method returns, this parameter contains the name of the virtual root.</span></span></param>
        <summary><span data-ttu-id="9ae42-213">剖析 URL 並傳回基礎 URL 和虛擬根目錄的部分。</span><span class="sxs-lookup"><span data-stu-id="9ae42-213">Parses a URL and returns the base URL and virtual root portions.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ae42-214"><paramref name="FullUrl" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9ae42-214"><paramref name="FullUrl" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="9ae42-215">當解析本機主機名稱時，發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="9ae42-215">An error is encountered when resolving the local host name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9ae42-216">呼叫端並沒有可以存取 DNS 資訊的使用權限。</span><span class="sxs-lookup"><span data-stu-id="9ae42-216">The caller does not have permission to access DNS information.</span></span></exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="9ae42-217"><paramref name="FullUrl" /> 是空的。</span><span class="sxs-lookup"><span data-stu-id="9ae42-217"><paramref name="FullUrl" /> is empty.</span></span>  
  
 <span data-ttu-id="9ae42-218">-或-</span><span class="sxs-lookup"><span data-stu-id="9ae42-218">-or-</span></span>  
  
 <span data-ttu-id="9ae42-219"><paramref name="FullUrl" /> 中指定的配置無效。</span><span class="sxs-lookup"><span data-stu-id="9ae42-219">The scheme specified in <paramref name="FullUrl" /> is invalid.</span></span>  
  
 <span data-ttu-id="9ae42-220">-或-</span><span class="sxs-lookup"><span data-stu-id="9ae42-220">-or-</span></span>  
  
 <span data-ttu-id="9ae42-221"><paramref name="FullUrl" /> 含有太多斜線。</span><span class="sxs-lookup"><span data-stu-id="9ae42-221"><paramref name="FullUrl" /> contains too many slashes.</span></span>  
  
 <span data-ttu-id="9ae42-222">-或-</span><span class="sxs-lookup"><span data-stu-id="9ae42-222">-or-</span></span>  
  
 <span data-ttu-id="9ae42-223"><paramref name="FullUrl" /> 中指定的密碼無效。</span><span class="sxs-lookup"><span data-stu-id="9ae42-223">The password specified in <paramref name="FullUrl" /> is invalid.</span></span>  
  
 <span data-ttu-id="9ae42-224">-或-</span><span class="sxs-lookup"><span data-stu-id="9ae42-224">-or-</span></span>  
  
 <span data-ttu-id="9ae42-225"><paramref name="FullUrl" /> 中指定的主機名稱無效。</span><span class="sxs-lookup"><span data-stu-id="9ae42-225">The host name specified in <paramref name="FullUrl" /> is invalid.</span></span>  
  
 <span data-ttu-id="9ae42-226">-或-</span><span class="sxs-lookup"><span data-stu-id="9ae42-226">-or-</span></span>  
  
 <span data-ttu-id="9ae42-227"><paramref name="FullUrl" /> 中指定的檔案名稱無效。</span><span class="sxs-lookup"><span data-stu-id="9ae42-227">The file name specified in <paramref name="FullUrl" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessClientTlb">
      <MemberSignature Language="C#" Value="public void ProcessClientTlb (string ProgId, string SrcTlbPath, string PhysicalPath, string VRoot, string BaseUrl, string Mode, string Transport, out string AssemblyName, out string TypeName, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessClientTlb(string ProgId, string SrcTlbPath, string PhysicalPath, string VRoot, string BaseUrl, string Mode, string Transport, [out] string&amp; AssemblyName, [out] string&amp; TypeName, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessClientTlb (ProgId As String, SrcTlbPath As String, PhysicalPath As String, VRoot As String, BaseUrl As String, Mode As String, Transport As String, ByRef AssemblyName As String, ByRef TypeName As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessClientTlb(System::String ^ ProgId, System::String ^ SrcTlbPath, System::String ^ PhysicalPath, System::String ^ VRoot, System::String ^ BaseUrl, System::String ^ Mode, System::String ^ Transport, [Runtime::InteropServices::Out] System::String ^ % AssemblyName, [Runtime::InteropServices::Out] System::String ^ % TypeName, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="SrcTlbPath" Type="System.String" />
        <Parameter Name="PhysicalPath" Type="System.String" />
        <Parameter Name="VRoot" Type="System.String" />
        <Parameter Name="BaseUrl" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
        <Parameter Name="Transport" Type="System.String" />
        <Parameter Name="AssemblyName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="TypeName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ProgId"><span data-ttu-id="9ae42-228">類別的程式設計識別項。</span><span class="sxs-lookup"><span data-stu-id="9ae42-228">The programmatic identifier of the class.</span></span></param>
        <param name="SrcTlbPath"><span data-ttu-id="9ae42-229">含有 typelib 之檔案的路徑。</span><span class="sxs-lookup"><span data-stu-id="9ae42-229">The path for the file that contains the typelib.</span></span></param>
        <param name="PhysicalPath"><span data-ttu-id="9ae42-230">Web 應用程式目錄。</span><span class="sxs-lookup"><span data-stu-id="9ae42-230">The Web application directory.</span></span></param>
        <param name="VRoot"><span data-ttu-id="9ae42-231">虛擬根目錄的名稱。</span><span class="sxs-lookup"><span data-stu-id="9ae42-231">The name of the virtual root.</span></span></param>
        <param name="BaseUrl"><span data-ttu-id="9ae42-232">含有虛擬根目錄的基礎 URL。</span><span class="sxs-lookup"><span data-stu-id="9ae42-232">The base URL that contains the virtual root.</span></span></param>
        <param name="Mode"><span data-ttu-id="9ae42-233">啟動模式。</span><span class="sxs-lookup"><span data-stu-id="9ae42-233">The activation mode.</span></span></param>
        <param name="Transport"><span data-ttu-id="9ae42-234">未使用。</span><span class="sxs-lookup"><span data-stu-id="9ae42-234">Not used.</span></span> <span data-ttu-id="9ae42-235">為此參數指定 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9ae42-235">Specify <see langword="null" /> for this parameter.</span></span></param>
        <param name="AssemblyName"><span data-ttu-id="9ae42-236">當這個方法傳回時，這個參數會包含組件的顯示名稱。</span><span class="sxs-lookup"><span data-stu-id="9ae42-236">When this method returns, this parameter contains the display name of the assembly.</span></span></param>
        <param name="TypeName"><span data-ttu-id="9ae42-237">當這個方法傳回時，這個參數會包含組件的完整型別名稱。</span><span class="sxs-lookup"><span data-stu-id="9ae42-237">When this method returns, this parameter contains the fully-qualified type name of the assembly.</span></span></param>
        <param name="Error"><span data-ttu-id="9ae42-238">如果遇到問題，則這個方法傳回時，這個參數會包含錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="9ae42-238">When this method returns, this parameter contains an error message if a problem was encountered.</span></span></param>
        <summary><span data-ttu-id="9ae42-239">處理用戶端型別程式庫，並在用戶端建立組態檔。</span><span class="sxs-lookup"><span data-stu-id="9ae42-239">Processes a client type library, creating a configuration file on the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ae42-240">這個方法在用戶端 proxy 匯入用於產生遠端組態檔。</span><span class="sxs-lookup"><span data-stu-id="9ae42-240">This method is used on a client proxy import to generate a remoting configuration file.</span></span>  
  
 <span data-ttu-id="9ae42-241">如果`Mode`參數為"wellknownobject"或空字串 ("")，會假設已知的物件。否則，會假設用戶端啟用。</span><span class="sxs-lookup"><span data-stu-id="9ae42-241">If the `Mode` parameter is either "wellknownobject" or an empty string (""), a well-known object is assumed; otherwise, client activation is assumed.</span></span>  
  
 <span data-ttu-id="9ae42-242">建議<xref:System.EnterpriseServices.Internal.SoapClientImport.ProcessClientTlbEx%2A>來取代<xref:System.EnterpriseServices.Internal.Publish.ProcessClientTlb%2A>。</span><span class="sxs-lookup"><span data-stu-id="9ae42-242">It is recommended that <xref:System.EnterpriseServices.Internal.SoapClientImport.ProcessClientTlbEx%2A> be used instead of <xref:System.EnterpriseServices.Internal.Publish.ProcessClientTlb%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9ae42-243">呼叫鏈結中的呼叫端沒有存取 Unmanaged 程式碼的使用權限。</span><span class="sxs-lookup"><span data-stu-id="9ae42-243">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9ae42-244">提供存取 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="9ae42-244">for the ability to access unmanaged code.</span></span> <span data-ttu-id="9ae42-245">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="9ae42-245">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessServerTlb">
      <MemberSignature Language="C#" Value="public void ProcessServerTlb (string ProgId, string SrcTlbPath, string PhysicalPath, string Operation, out string strAssemblyName, out string TypeName, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessServerTlb(string ProgId, string SrcTlbPath, string PhysicalPath, string Operation, [out] string&amp; strAssemblyName, [out] string&amp; TypeName, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessServerTlb (ProgId As String, SrcTlbPath As String, PhysicalPath As String, Operation As String, ByRef strAssemblyName As String, ByRef TypeName As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessServerTlb(System::String ^ ProgId, System::String ^ SrcTlbPath, System::String ^ PhysicalPath, System::String ^ Operation, [Runtime::InteropServices::Out] System::String ^ % strAssemblyName, [Runtime::InteropServices::Out] System::String ^ % TypeName, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="SrcTlbPath" Type="System.String" />
        <Parameter Name="PhysicalPath" Type="System.String" />
        <Parameter Name="Operation" Type="System.String" />
        <Parameter Name="strAssemblyName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="TypeName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ProgId"><span data-ttu-id="9ae42-246">類別的程式設計識別項。</span><span class="sxs-lookup"><span data-stu-id="9ae42-246">The programmatic identifier of the class.</span></span></param>
        <param name="SrcTlbPath"><span data-ttu-id="9ae42-247">含有型別程式庫之檔案的路徑。</span><span class="sxs-lookup"><span data-stu-id="9ae42-247">The path for the file that contains the type library.</span></span></param>
        <param name="PhysicalPath"><span data-ttu-id="9ae42-248">Web 應用程式目錄。</span><span class="sxs-lookup"><span data-stu-id="9ae42-248">The Web application directory.</span></span></param>
        <param name="Operation"><span data-ttu-id="9ae42-249">要執行的作業。</span><span class="sxs-lookup"><span data-stu-id="9ae42-249">The operation to perform.</span></span></param>
        <param name="strAssemblyName"><span data-ttu-id="9ae42-250">當這個方法傳回時，這個參數會包含組件的顯示名稱。</span><span class="sxs-lookup"><span data-stu-id="9ae42-250">When this method returns, this parameter contains the display name of the assembly.</span></span></param>
        <param name="TypeName"><span data-ttu-id="9ae42-251">當這個方法傳回時，這個參數會包含組件的完整型別名稱。</span><span class="sxs-lookup"><span data-stu-id="9ae42-251">When this method returns, this parameter contains the fully-qualified type name of the assembly.</span></span></param>
        <param name="Error"><span data-ttu-id="9ae42-252">如果遇到問題，則這個方法傳回時，這個參數會包含錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="9ae42-252">When this method returns, this parameter contains an error message if a problem was encountered.</span></span></param>
        <summary><span data-ttu-id="9ae42-253">處理伺服器型別程式庫，不是將元件項目加入 Web.config 和 Default.disco 檔案中，就是將之刪除。</span><span class="sxs-lookup"><span data-stu-id="9ae42-253">Processes a server type library, either adding or deleting component entries to the Web.config and Default.disco files.</span></span> <span data-ttu-id="9ae42-254">若有必要則產生 Proxy。</span><span class="sxs-lookup"><span data-stu-id="9ae42-254">Generates a proxy if necessary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ae42-255"><xref:System.EnterpriseServices.Internal.Publish.ProcessServerTlb%2A> 探索檔案和 web.config 檔案中的型別程式庫，元件加入一個項目，並且會產生或複製到 bin 目錄，unmanaged 元件的 proxy。</span><span class="sxs-lookup"><span data-stu-id="9ae42-255"><xref:System.EnterpriseServices.Internal.Publish.ProcessServerTlb%2A> adds an entry to the discovery file and the web.config file for the components in the typelib, and either generates or copies a proxy to the bin directory for unmanaged components.</span></span> <span data-ttu-id="9ae42-256">如果`Operation`等於 「 刪除 」 並元件項目會從 Web.config 和 Default.disco 檔案移除。</span><span class="sxs-lookup"><span data-stu-id="9ae42-256">If `Operation` equals "delete," then the component entries are removed from the Web.config and Default.disco files.</span></span>  
  
 <span data-ttu-id="9ae42-257">建議<xref:System.EnterpriseServices.Internal.SoapServerTlb.AddServerTlb%2A>和<xref:System.EnterpriseServices.Internal.SoapServerTlb.DeleteServerTlb%2A>來取代<xref:System.EnterpriseServices.Internal.Publish.ProcessServerTlb%2A>。</span><span class="sxs-lookup"><span data-stu-id="9ae42-257">It is recommended that <xref:System.EnterpriseServices.Internal.SoapServerTlb.AddServerTlb%2A> and <xref:System.EnterpriseServices.Internal.SoapServerTlb.DeleteServerTlb%2A> be used instead of <xref:System.EnterpriseServices.Internal.Publish.ProcessServerTlb%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9ae42-258">呼叫鏈結中的呼叫端沒有存取 Unmanaged 程式碼的使用權限。</span><span class="sxs-lookup"><span data-stu-id="9ae42-258">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException"><span data-ttu-id="9ae42-259"><paramref name="SrcTlbPath" /> 參數參考到 scrobj.dll，因此不支援指令碼元件的 SOAP 發行作業。</span><span class="sxs-lookup"><span data-stu-id="9ae42-259">The <paramref name="SrcTlbPath" /> parameter referenced scrobj.dll; therefore, SOAP publication of script components is not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="9ae42-260">提供存取 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="9ae42-260">for the ability to access unmanaged code.</span></span> <span data-ttu-id="9ae42-261">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="9ae42-261">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RegisterAssembly">
      <MemberSignature Language="C#" Value="public void RegisterAssembly (string AssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAssembly(string AssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.RegisterAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterAssembly (AssemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterAssembly(System::String ^ AssemblyPath);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath"><span data-ttu-id="9ae42-262">組件的檔案系統路徑。</span><span class="sxs-lookup"><span data-stu-id="9ae42-262">The file system path for the assembly.</span></span></param>
        <summary><span data-ttu-id="9ae42-263">註冊 COM Interop 的組件。</span><span class="sxs-lookup"><span data-stu-id="9ae42-263">Registers an assembly for COM interop.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ae42-264"><xref:System.EnterpriseServices.Internal.Publish.RegisterAssembly%2A> 您可以使用組件註冊工具 (Regasm.exe) 來註冊組件中可建立的類別。</span><span class="sxs-lookup"><span data-stu-id="9ae42-264"><xref:System.EnterpriseServices.Internal.Publish.RegisterAssembly%2A> uses the Assembly Registration tool (Regasm.exe) to register the creatable classes in the assembly.</span></span> <span data-ttu-id="9ae42-265">如需詳細資訊，請參閱[Regasm.exe （組件登錄工具）](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)。</span><span class="sxs-lookup"><span data-stu-id="9ae42-265">For more information, see [Regasm.exe (Assembly Registration Tool)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.EnterpriseServices.RegistrationException"><span data-ttu-id="9ae42-266">輸入組件沒有強式名稱。</span><span class="sxs-lookup"><span data-stu-id="9ae42-266">The input assembly does not have a strong name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9ae42-267">呼叫鏈結中的呼叫端沒有存取 Unmanaged 程式碼的使用權限。</span><span class="sxs-lookup"><span data-stu-id="9ae42-267">A caller in the call chain does not have permission to access unmanaged code.</span></span>  
  
 <span data-ttu-id="9ae42-268">-或-</span><span class="sxs-lookup"><span data-stu-id="9ae42-268">-or-</span></span>  
  
 <span data-ttu-id="9ae42-269">指定了不是以 "file://" 開頭的基礎碼，而且沒有必要的 <see cref="T:System.Net.WebPermission" />。</span><span class="sxs-lookup"><span data-stu-id="9ae42-269">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ae42-270"><paramref name="AssemblyPath" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9ae42-270"><paramref name="AssemblyPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ae42-271">找不到 <paramref name="AssemblyPath" />，或未指定副檔名。</span><span class="sxs-lookup"><span data-stu-id="9ae42-271"><paramref name="AssemblyPath" /> is not found, or a filename extension is not specified.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ae42-272"><paramref name="AssemblyPath" /> 不是有效的組件。</span><span class="sxs-lookup"><span data-stu-id="9ae42-272"><paramref name="AssemblyPath" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="9ae42-273">以兩個不同辨識項載入兩次組件或模組，或是組件名稱長度超過 MAX_PATH 字元數。</span><span class="sxs-lookup"><span data-stu-id="9ae42-273">An assembly or module was loaded twice with two different evidences, or the assembly name is longer than MAX_PATH characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9ae42-274">以 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 標記的方法不是 <see langword="static" />。</span><span class="sxs-lookup"><span data-stu-id="9ae42-274">A method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not <see langword="static" />.</span></span>  
  
 <span data-ttu-id="9ae42-275">-或-</span><span class="sxs-lookup"><span data-stu-id="9ae42-275">-or-</span></span>  
  
 <span data-ttu-id="9ae42-276">在階層架構的指定層級中，有一個以上的方法是以 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 標記。</span><span class="sxs-lookup"><span data-stu-id="9ae42-276">There is more than one method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> at a given level of the hierarchy.</span></span>  
  
 <span data-ttu-id="9ae42-277">-或-</span><span class="sxs-lookup"><span data-stu-id="9ae42-277">-or-</span></span>  
  
 <span data-ttu-id="9ae42-278">以 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 標記之方法的簽章無效。</span><span class="sxs-lookup"><span data-stu-id="9ae42-278">The signature of the method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not valid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="9ae42-279">提供存取登錄的能力。</span><span class="sxs-lookup"><span data-stu-id="9ae42-279">for the ability to access the registry.</span></span> <span data-ttu-id="9ae42-280">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="9ae42-280">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="9ae42-281">判斷目前的目錄。</span><span class="sxs-lookup"><span data-stu-id="9ae42-281">for determining the current directory.</span></span> <span data-ttu-id="9ae42-282">相關聯的列舉型別： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" /></span><span class="sxs-lookup"><span data-stu-id="9ae42-282">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="9ae42-283">用於讀取以"file:// 開頭的 URI。</span><span class="sxs-lookup"><span data-stu-id="9ae42-283">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="9ae42-284">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="9ae42-284">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="9ae42-285">用於讀取不是以"file:// 開頭的 URI。</span><span class="sxs-lookup"><span data-stu-id="9ae42-285">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="UnRegisterAssembly">
      <MemberSignature Language="C#" Value="public void UnRegisterAssembly (string AssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnRegisterAssembly(string AssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.UnRegisterAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnRegisterAssembly (AssemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnRegisterAssembly(System::String ^ AssemblyPath);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath"><span data-ttu-id="9ae42-286">組件的檔案系統路徑。</span><span class="sxs-lookup"><span data-stu-id="9ae42-286">The file system path for the assembly.</span></span></param>
        <summary><span data-ttu-id="9ae42-287">移除 COM Interop 組件的註冊。</span><span class="sxs-lookup"><span data-stu-id="9ae42-287">Unregisters a COM interop assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ae42-288"><xref:System.EnterpriseServices.Internal.Publish.UnRegisterAssembly%2A> 使用 Regasm.exe 取消登錄組件中可建立的類別。</span><span class="sxs-lookup"><span data-stu-id="9ae42-288"><xref:System.EnterpriseServices.Internal.Publish.UnRegisterAssembly%2A> uses Regasm.exe to unregister the creatable classes in the assembly.</span></span> <span data-ttu-id="9ae42-289">如需詳細資訊，請參閱[Regasm.exe （組件登錄工具）](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)。</span><span class="sxs-lookup"><span data-stu-id="9ae42-289">For more information, see [Regasm.exe (Assembly Registration Tool)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9ae42-290">呼叫鏈結中的呼叫端沒有存取 Unmanaged 程式碼的使用權限。</span><span class="sxs-lookup"><span data-stu-id="9ae42-290">A caller in the call chain does not have permission to access unmanaged code.</span></span>  
  
 <span data-ttu-id="9ae42-291">-或-</span><span class="sxs-lookup"><span data-stu-id="9ae42-291">-or-</span></span>  
  
 <span data-ttu-id="9ae42-292">指定了不是以 "file://" 開頭的基礎碼，而且沒有必要的 <see cref="T:System.Net.WebPermission" />。</span><span class="sxs-lookup"><span data-stu-id="9ae42-292">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9ae42-293"><paramref name="AssemblyPath" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9ae42-293"><paramref name="AssemblyPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9ae42-294">找不到 <paramref name="AssemblyPath" />，或未指定副檔名。</span><span class="sxs-lookup"><span data-stu-id="9ae42-294"><paramref name="AssemblyPath" /> is not found, or a file name extension is not specified.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="9ae42-295"><paramref name="AssemblyPath" /> 不是有效的組件。</span><span class="sxs-lookup"><span data-stu-id="9ae42-295"><paramref name="AssemblyPath" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="9ae42-296">以兩個不同辨識項載入兩次組件或模組，或是組件名稱長度超過 MAX_PATH 字元數。</span><span class="sxs-lookup"><span data-stu-id="9ae42-296">An assembly or module was loaded twice with two different evidences, or the assembly name is longer than MAX_PATH characters.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9ae42-297">以 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 標記的方法不是 <see langword="static" />。</span><span class="sxs-lookup"><span data-stu-id="9ae42-297">A method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not <see langword="static" />.</span></span>  
  
 <span data-ttu-id="9ae42-298">-或-</span><span class="sxs-lookup"><span data-stu-id="9ae42-298">-or-</span></span>  
  
 <span data-ttu-id="9ae42-299">在階層架構的指定層級中，有一個以上的方法是以 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 標記。</span><span class="sxs-lookup"><span data-stu-id="9ae42-299">There is more than one method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> at a given level of the hierarchy.</span></span>  
  
 <span data-ttu-id="9ae42-300">-或-</span><span class="sxs-lookup"><span data-stu-id="9ae42-300">-or-</span></span>  
  
 <span data-ttu-id="9ae42-301">以 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> 標記之方法的簽章無效。</span><span class="sxs-lookup"><span data-stu-id="9ae42-301">The signature of the method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not valid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="9ae42-302">提供存取登錄的能力。</span><span class="sxs-lookup"><span data-stu-id="9ae42-302">for the ability to access the registry.</span></span> <span data-ttu-id="9ae42-303">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="9ae42-303">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="9ae42-304">判斷目前的目錄。</span><span class="sxs-lookup"><span data-stu-id="9ae42-304">for determining the current directory.</span></span> <span data-ttu-id="9ae42-305">相關聯的列舉型別： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" /></span><span class="sxs-lookup"><span data-stu-id="9ae42-305">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="9ae42-306">用於讀取以"file:// 開頭的 URI。</span><span class="sxs-lookup"><span data-stu-id="9ae42-306">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="9ae42-307">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="9ae42-307">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="9ae42-308">用於讀取不是以"file:// 開頭的 URI。</span><span class="sxs-lookup"><span data-stu-id="9ae42-308">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>