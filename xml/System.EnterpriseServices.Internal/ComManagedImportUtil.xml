<Type Name="ComManagedImportUtil" FullName="System.EnterpriseServices.Internal.ComManagedImportUtil">
  <TypeSignature Language="C#" Value="public class ComManagedImportUtil : System.EnterpriseServices.Internal.IComManagedImportUtil" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComManagedImportUtil extends System.Object implements class System.EnterpriseServices.Internal.IComManagedImportUtil" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ComManagedImportUtil" />
  <TypeSignature Language="VB.NET" Value="Public Class ComManagedImportUtil&#xA;Implements IComManagedImportUtil" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComManagedImportUtil : System::EnterpriseServices::Internal::IComManagedImportUtil" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.IComManagedImportUtil</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("3b0398c9-7812-4007-85cb-18c771f2206f")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1133b-101">在 COM+ 目錄中識別和安裝元件。</span><span class="sxs-lookup"><span data-stu-id="1133b-101">Identifies and installs components in the COM+ catalog.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1133b-102"><xref:System.EnterpriseServices.Internal.ComManagedImportUtil> 為.NET framework 內部使用。</span><span class="sxs-lookup"><span data-stu-id="1133b-102"><xref:System.EnterpriseServices.Internal.ComManagedImportUtil> is used internally by the .NET Framework.</span></span> <span data-ttu-id="1133b-103">您不需要直接在您的程式碼中使用的類別。</span><span class="sxs-lookup"><span data-stu-id="1133b-103">You do not need to use the class directly in your code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComManagedImportUtil ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComManagedImportUtil();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1133b-104">初始化 <see cref="T:System.EnterpriseServices.Internal.ComManagedImportUtil" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="1133b-104">Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.ComManagedImportUtil" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComponentInfo">
      <MemberSignature Language="C#" Value="public void GetComponentInfo (string assemblyPath, out string numComponents, out string componentInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetComponentInfo(string assemblyPath, [out] string&amp; numComponents, [out] string&amp; componentInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetComponentInfo (assemblyPath As String, ByRef numComponents As String, ByRef componentInfo As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetComponentInfo(System::String ^ assemblyPath, [Runtime::InteropServices::Out] System::String ^ % numComponents, [Runtime::InteropServices::Out] System::String ^ % componentInfo);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyPath" Type="System.String" />
        <Parameter Name="numComponents" Type="System.String&amp;" RefType="out" />
        <Parameter Name="componentInfo" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="assemblyPath"><span data-ttu-id="1133b-105">組件的路徑。</span><span class="sxs-lookup"><span data-stu-id="1133b-105">The path to the assembly.</span></span></param>
        <param name="numComponents"><span data-ttu-id="1133b-106">當這個方法傳回時，這個參數會包含組件中的元件數目。</span><span class="sxs-lookup"><span data-stu-id="1133b-106">When this method returns, this parameter contains the number of components in the assembly.</span></span></param>
        <param name="componentInfo"><span data-ttu-id="1133b-107">當這個方法傳回時，這個參數會包含元件的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="1133b-107">When this method returns, this parameter contains the information about the components.</span></span></param>
        <summary><span data-ttu-id="1133b-108">從組件 (Assembly) 取得元件資訊。</span><span class="sxs-lookup"><span data-stu-id="1133b-108">Gets the component information from the assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1133b-109">這個方法會呼叫 COM + 目錄來識別的類別識別項 (Clsid) 和中的元件之前已註冊的 DLL 的 Progid。</span><span class="sxs-lookup"><span data-stu-id="1133b-109">This method is called by the COM+ catalog to identify the class identifiers (CLSIDs) and ProgIDs of the components in a DLL before it is registered.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1133b-110"><paramref name="assemblyPath" /> 為空字串、只包含泛空白字元 (White Space)，或包含一個以上如 <see cref="F:System.IO.Path.InvalidPathChars" /> 所定義的無效字元。</span><span class="sxs-lookup"><span data-stu-id="1133b-110"><paramref name="assemblyPath" /> is an empty string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span>  
  
 <span data-ttu-id="1133b-111">-或-</span><span class="sxs-lookup"><span data-stu-id="1133b-111">-or-</span></span>  
  
 <span data-ttu-id="1133b-112">系統可能不會擷取絕對路徑。</span><span class="sxs-lookup"><span data-stu-id="1133b-112">The system could not retrieve the absolute path.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1133b-113">呼叫端沒有必要的權限。</span><span class="sxs-lookup"><span data-stu-id="1133b-113">The caller does not have the required permissions.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1133b-114"><paramref name="assemblyPath" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1133b-114"><paramref name="assemblyPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="1133b-115"><paramref name="assemblyPath" /> 包含冒號 (":")。</span><span class="sxs-lookup"><span data-stu-id="1133b-115"><paramref name="assemblyPath" /> contains a colon (":").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="1133b-116">指定的路徑、檔案名稱，或兩者都超出系統定義的長度上限。</span><span class="sxs-lookup"><span data-stu-id="1133b-116">The specified path, file name, or both exceed the system-defined maximum length.</span></span> <span data-ttu-id="1133b-117">例如，在 Windows 架構的平台上，路徑必須少於 248 個字元，檔案名稱必須少於 260 個字元。</span><span class="sxs-lookup"><span data-stu-id="1133b-117">For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1133b-118">提供存取 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="1133b-118">for the ability to access unmanaged code.</span></span> <span data-ttu-id="1133b-119">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="1133b-119">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="InstallAssembly">
      <MemberSignature Language="C#" Value="public void InstallAssembly (string asmpath, string parname, string appname);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InstallAssembly(string asmpath, string parname, string appname) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstallAssembly (asmpath As String, parname As String, appname As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InstallAssembly(System::String ^ asmpath, System::String ^ parname, System::String ^ appname);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asmpath" Type="System.String" />
        <Parameter Name="parname" Type="System.String" />
        <Parameter Name="appname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="asmpath"><span data-ttu-id="1133b-120">組件的路徑。</span><span class="sxs-lookup"><span data-stu-id="1133b-120">The path for the assembly.</span></span></param>
        <param name="parname"><span data-ttu-id="1133b-121">COM+ 分割名稱。</span><span class="sxs-lookup"><span data-stu-id="1133b-121">The COM+ partition name.</span></span></param>
        <param name="appname"><span data-ttu-id="1133b-122">COM+ 應用程式名稱。</span><span class="sxs-lookup"><span data-stu-id="1133b-122">The COM+ application name.</span></span></param>
        <summary><span data-ttu-id="1133b-123">安裝組件至 COM+ 應用程式中。</span><span class="sxs-lookup"><span data-stu-id="1133b-123">Installs an assembly into a COM+ application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1133b-124"><xref:System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly%2A> 呼叫<xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A?displayProperty=nameWithType>，它會執行下列步驟：</span><span class="sxs-lookup"><span data-stu-id="1133b-124"><xref:System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly%2A> calls <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A?displayProperty=nameWithType>, which performs the following steps:</span></span>  
  
1.  <span data-ttu-id="1133b-125">註冊組件。</span><span class="sxs-lookup"><span data-stu-id="1133b-125">Registration of the assembly.</span></span>  
  
2.  <span data-ttu-id="1133b-126">產生類型程式庫。</span><span class="sxs-lookup"><span data-stu-id="1133b-126">Generation of a type library.</span></span>  
  
3.  <span data-ttu-id="1133b-127">註冊類型程式庫。</span><span class="sxs-lookup"><span data-stu-id="1133b-127">Registration of the type library.</span></span>  
  
4.  <span data-ttu-id="1133b-128">在指定的應用程式的類型程式庫的安裝。</span><span class="sxs-lookup"><span data-stu-id="1133b-128">Installation of the type library under the specified application.</span></span>  
  
5.  <span data-ttu-id="1133b-129">包含類型程式庫中的元件的組態設定。</span><span class="sxs-lookup"><span data-stu-id="1133b-129">Configuration of the components contained in the type library.</span></span>  
  
 <span data-ttu-id="1133b-130">此方法要求呼叫端在本機電腦上具有系統管理權限。</span><span class="sxs-lookup"><span data-stu-id="1133b-130">This method requires the caller to have administrative privileges on the local computer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1133b-131">呼叫鏈結中的呼叫端沒有存取 Unmanaged 程式碼的使用權限。</span><span class="sxs-lookup"><span data-stu-id="1133b-131">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.EnterpriseServices.RegistrationException"><span data-ttu-id="1133b-132">輸入組件沒有強式名稱。</span><span class="sxs-lookup"><span data-stu-id="1133b-132">The input assembly does not have a strong name.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1133b-133">提供存取 unmanaged 程式碼的能力。</span><span class="sxs-lookup"><span data-stu-id="1133b-133">for the ability to access unmanaged code.</span></span> <span data-ttu-id="1133b-134">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="1133b-134">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="1133b-135">提供存取登錄的能力。</span><span class="sxs-lookup"><span data-stu-id="1133b-135">for the ability to access the registry.</span></span> <span data-ttu-id="1133b-136">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="1133b-136">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>