<Type Name="NavigationService" FullName="System.Windows.Navigation.NavigationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d4d64e95223ead25be6eb0a447e2f5dd78e82b25" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36465079" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NavigationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NavigationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.NavigationService" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NavigationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class NavigationService sealed" />
  <TypeSignature Language="F#" Value="type NavigationService = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contains methods, properties, and events to support navigation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService> 封裝的下載內容，在瀏覽器樣式瀏覽內容的能力。  
  
 內容可以是任何類型的.NET Framework 物件和 HTML 檔案。 一般情況下，不過，頁面是慣用的套件內容，以瀏覽方式時 (請參閱<xref:System.Windows.Controls.Page>)。  
  
 內容可以藉由提供的物件執行個體並呼叫的多載，導覽至<xref:System.Windows.Navigation.NavigationService.Navigate%2A>接受物件的方法：  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=nameWithType>  
  
 或者，內容可以瀏覽至藉由傳遞至其中的相對或絕對 URI<xref:System.Windows.Navigation.NavigationService.Navigate%2A>方法多載會接受 URI:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%2CSystem.Boolean%29?displayProperty=nameWithType>  
  
 當內容的 URI，巡覽至<xref:System.Windows.Navigation.NavigationService>會傳回包含內容的物件。  
  
 可巡覽的存留期追蹤透過下列事件：  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigated>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationProgress>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationStopped>  
  
-   <xref:System.Windows.Navigation.NavigationService.LoadCompleted>  
  
-   <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>.  
  
 發生巡覽; 每次引發並非所有的事件引發的事件組取決的類型 （內容或內容片段），就會發生的瀏覽和巡覽完成的方式 （取消、 已停止或失敗）。  
  
 下圖說明這些事件的引發順序：  
  
 ![頁面巡覽流程圖](~/add/media/navigationoverviewfigure11.png "頁面巡覽流程圖")  
  
 期間或之後的導覽，<xref:System.Windows.Navigation.NavigationService>提供所巡覽，包括所巡覽之內容的 URI 之內容的相關資訊 (<xref:System.Windows.Navigation.NavigationService.Source%2A>)，目前內容的 URI (<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>)，和包含的物件所巡覽的內容 (<xref:System.Windows.Navigation.NavigationService.Content%2A>)。  
  
 內容巡覽時<xref:System.Windows.Navigation.NavigationService>巡覽記錄中記錄為項目瀏覽。 項目加入備份瀏覽歷程記錄，其中一個新的瀏覽發生時，藉由呼叫<xref:System.Windows.Navigation.NavigationService.Navigate%2A>方法，或瀏覽至 向前巡覽記錄中的項目，藉由呼叫<xref:System.Windows.Navigation.NavigationService.GoForward%2A>。 向前巡覽記錄中加入項目依序巡覽至後方的項目瀏覽歷程記錄，藉由呼叫<xref:System.Windows.Navigation.NavigationService.GoBack%2A>。 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> 和<xref:System.Windows.Navigation.NavigationService.CanGoForward%2A>報表是否有後方的項目分別是和向前巡覽記錄。 此外，最新項目在上一步可以藉由呼叫移除導覽記錄<xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>。  
  
 根據預設，<xref:System.Windows.Navigation.NavigationService>不會儲存在瀏覽歷程記錄中的內容物件的執行個體。 相反地，<xref:System.Windows.Navigation.NavigationService>使用巡覽記錄中巡覽至每次建立內容物件的新執行個體。 此行為被為了避免過多的記憶體耗用量在巡覽大量內容時。 因此，內容的狀態並不會記住從一個瀏覽至下一步。 不過，WPF 提供數種技術之可以將一段內容的狀態儲存在瀏覽歷程記錄。  
  
 使用<xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>，您也可以記住多重集的單一頁面的執行個體的狀態。  
  
 <xref:System.Windows.Navigation.NavigationService> 是`sealed`類別，並因此無法具現化; 相反地，<xref:System.Windows.Navigation.NavigationService>正由導覽器來瀏覽。 在 WPF 中，有兩個導覽器：<xref:System.Windows.Navigation.NavigationWindow>和<xref:System.Windows.Controls.Frame>。  
  
 以視覺化的方式，[!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]使用[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]為導覽器，以提供整合的使用者經驗。 實際，不過[!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]實際使用<xref:System.Windows.Navigation.NavigationWindow>導覽; 為<xref:System.Windows.Application.MainWindow%2A>屬性[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]中執行[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]會傳回參考<xref:System.Windows.Navigation.NavigationWindow>，並由管理的瀏覽歷程記錄<xref:System.Windows.Navigation.NavigationWindow>由管理的瀏覽歷程記錄與整合[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]如下：  
  
-   當內容導覽至藉由呼叫<xref:System.Windows.Navigation.NavigationService.Navigate%2A>， <xref:System.Windows.Navigation.NavigationService.GoBack%2A>，和<xref:System.Windows.Navigation.NavigationService.GoForward%2A>從[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]相關的瀏覽歷程記錄項目也會新增至[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]瀏覽歷程記錄。  
  
-   當中的項目[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]瀏覽[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]都已選取，[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]導致<xref:System.Windows.Navigation.NavigationService>巡覽回或轉送與那些項目相關聯的內容。  
  
> [!NOTE]
>  A<xref:System.Windows.Controls.Frame>可以提供自己的瀏覽歷程記錄，或使用它裝載 [導覽] 的瀏覽歷程記錄。 如果<xref:System.Windows.Controls.Frame>提供自己的瀏覽歷程記錄，它可以顯示其本身的瀏覽[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]來瀏覽導覽記錄中; 中的項目那些項目不會加入至主機導覽巡覽歷程記錄 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>， [!INCLUDE[TLA2#tla_iegeneric](~/includes/tla2sharptla-iegeneric-md.md)])，因此，無法瀏覽至從瀏覽[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]每個 (請參閱<xref:System.Windows.Controls.Frame.JournalOwnership%2A>)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBackEntry">
      <MemberSignature Language="C#" Value="public void AddBackEntry (System.Windows.Navigation.CustomContentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBackEntry(class System.Windows.Navigation.CustomContentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBackEntry (state As CustomContentState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBackEntry(System::Windows::Navigation::CustomContentState ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddBackEntry : System.Windows.Navigation.CustomContentState -&gt; unit" Usage="navigationService.AddBackEntry state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Navigation.CustomContentState" />
      </Parameters>
      <Docs>
        <param name="state">A <see cref="T:System.Windows.Navigation.CustomContentState" /> object that represents application-defined state that is associated with a specific piece of content.</param>
        <summary>Adds an entry to back navigation history that contains a <see cref="T:System.Windows.Navigation.CustomContentState" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A><xref:System.Windows.Navigation.CustomContentState>，和<xref:System.Windows.Navigation.IProvideCustomContentState>用來協助您記住多重集的目前內容的狀態。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="state" /> is <see langword="null" />, and a <see cref="T:System.Windows.Navigation.CustomContentState" /> object isn't returned from <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />.</exception>
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoBack : bool" Usage="System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether there is at least one entry in back navigation history.</summary>
        <value>
          <see langword="true" /> 如果沒有至少一個項目中向後巡覽記錄中;否則， <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> 若要判斷向後巡覽記錄中是否至少一個項目。 應檢查這個屬性，然後再呼叫<xref:System.Windows.Navigation.NavigationService.GoBack%2A>; 如果<xref:System.Windows.Navigation.NavigationService.GoBack%2A>稱為和向後巡覽記錄中沒有任何項目<xref:System.InvalidOperationException>就會擲回。  
  
> [!NOTE]
>  如果巡覽歷程記錄由多個導覽器共用 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)、 最新的項目在上一步瀏覽歷程記錄可能未新增由<xref:System.Windows.Navigation.NavigationService>為目前的導覽器。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoForward : bool" Usage="System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether there is at least one entry in forward navigation history.</summary>
        <value>
          <see langword="true" /> 如果向前巡覽記錄中; 沒有至少一個項目否則， <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> 若要判斷向前巡覽記錄中是否至少一個項目。 應檢查這個屬性，然後再呼叫<xref:System.Windows.Navigation.NavigationService.GoForward%2A>; 如果<xref:System.Windows.Navigation.NavigationService.GoForward%2A>稱為向前巡覽記錄中沒有任何項目和<xref:System.InvalidOperationException>就會擲回。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Content : obj with get, set" Usage="System.Windows.Navigation.NavigationService.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a reference to the object that contains the current content.</summary>
        <value>物件，包含目前的內容物件的參考。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用下列其中一種設定內容：  
  
-   直接管理，藉由將它設定為物件的參考。  
  
-   間接，藉由呼叫<xref:System.Windows.Navigation.NavigationService.Navigate%2A>， <xref:System.Windows.Navigation.NavigationService.GoBack%2A>，或<xref:System.Windows.Navigation.NavigationService.GoForward%2A>。  
  
 設定<xref:System.Windows.Navigation.NavigationService>導覽是非同步的因為起始新的瀏覽;<xref:System.Windows.Navigation.NavigationService.Content%2A>不會傳回值，如果它設定之後，立即檢查。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="CurrentSource">
      <MemberSignature Language="C#" Value="public Uri CurrentSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CurrentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentSource As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CurrentSource { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentSource : Uri" Usage="System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the URI of the content that was last navigated to.</summary>
        <value>A<see cref="T:System.Uri" />內容是上一次瀏覽，巡覽至所使用的 URI，否則如果<see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>屬性不會變更，直到瀏覽至不同的 URI 已順利完成。  
  
 <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> 您可以將具有僅片段的 URI。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentNavigation">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FragmentNavigation As FragmentNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::FragmentNavigationEventHandler ^ FragmentNavigation;" />
      <MemberSignature Language="F#" Value="member this.FragmentNavigation : System.Windows.Navigation.FragmentNavigationEventHandler " Usage="member this.FragmentNavigation : System.Windows.Navigation.FragmentNavigationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.FragmentNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when navigation to a content fragment begins, which occurs immediately, if the desired fragment is in the current content, or after the source [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] content has been loaded, if the desired fragment is in different content.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，內容片段是內容也就是包含具名<xref:System.Windows.UIElement>，也就是<xref:System.Windows.UIElement>其<xref:System.Windows.FrameworkElement.Name%2A>設定的屬性，例如：  
  
```  
<TextBlock Name="FragmentName">...</TextBlock>  
```  
  
 您瀏覽至[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]藉由提供具有後置詞，以下列格式的 URI 片段：  
  
 \#*FragmentName*  
  
 以下顯示參考內容片段的 URI 的範例：  
  
 `http://www.microsoft.com/targetpage.xaml#FragmentName`  
  
 [來源] 頁面載入之後 (後<xref:System.Windows.Navigation.NavigationService.LoadCompleted>就會引發事件)，開始片段巡覽和<xref:System.Windows.Navigation.NavigationService>嘗試找出[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]片段。 如果[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]找到片段，<xref:System.Windows.Navigation.NavigationService>指示內容導覽 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>) 來顯示，片段。 如果您需要變更此行為，您可以處理<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>以提供您自己的片段導覽行為。 <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> 傳遞<xref:System.Windows.Navigation.FragmentNavigationEventArgs>參數公開為此，這時有用的屬性包括：  
  
-   擁有此瀏覽服務 [導覽] (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)。  
  
-   片段名稱。  
  
 您可以處理<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>覆寫預設 WPF 片段實作，以自己的自訂實作。 如果您這樣做，您需要設定<xref:System.Windows.Navigation.FragmentNavigationEventArgs.Handled%2A>來`true`; 否則會套用預設 WPF 片段處理行為。  
  
 您應該避免直接初始化中的瀏覽<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>事件處理常式。 因為<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>起始新的瀏覽，從現有瀏覽期間若引發<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>事件處理常式會建立可能會導致巢狀瀏覽<xref:System.ExecutionEngineException>擲回。 相反地，您可以間接起始瀏覽藉由建立項目使用的非同步工作<xref:System.Windows.Threading.Dispatcher>。  
  
> [!NOTE]
>  當<xref:System.Windows.Navigation.NavigationService>引發<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>，它也會引發<xref:System.Windows.Application.FragmentNavigation?displayProperty=nameWithType>事件<xref:System.Windows.Application>物件。  
  
> [!IMPORTANT]
>  片段巡覽不支援鬆散[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]頁面 (僅限標記[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]檔案`Page`是根項目) 在下列情況下：  
>   
>  • 當巡覽至在鬆散片段[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]頁面。  
>   
>  • 從鬆散瀏覽時[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]頁面，即可在鬆散的另一個片段[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]頁面。  
>   
>  不過，鬆散[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]頁面可以瀏覽至其本身的片段。  
  
   
  
## Examples  
 下列範例示範如何處理<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>以提供自訂的片段導覽行為。 在此情況下，範例會開啟錯誤[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]頁面上，如果來源中的片段[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]找不到頁面。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowfragmentnavigationcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowfragmentnavigationcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="GetNavigationService">
      <MemberSignature Language="C#" Value="public static System.Windows.Navigation.NavigationService GetNavigationService (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Navigation.NavigationService GetNavigationService(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Navigation::NavigationService ^ GetNavigationService(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetNavigationService : System.Windows.DependencyObject -&gt; System.Windows.Navigation.NavigationService" Usage="System.Windows.Navigation.NavigationService.GetNavigationService dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> in content that is hosted by a navigator.</param>
        <summary>Gets a reference to the <see cref="T:System.Windows.Navigation.NavigationService" /> for the navigator whose content contains the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
        <returns>A reference to the <see cref="T:System.Windows.Navigation.NavigationService" /> for the navigator whose content contains the specified <see cref="T:System.Windows.DependencyObject" />; can be <see langword="null" /> in some cases.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 具有導覽<xref:System.Windows.Navigation.NavigationService>可處理內容的導覽。 WPF 有兩個導覽器：<xref:System.Windows.Navigation.NavigationWindow>和<xref:System.Windows.Controls.Frame>。 若要處理巡覽要求，以及管理巡覽存留期，巡覽器會使用 WPF 瀏覽服務，它會實作為<xref:System.Windows.Navigation.NavigationService>類別。 由導覽所裝載的內容可以取得 [導覽器] 的參考<xref:System.Windows.Navigation.NavigationService>藉由呼叫<xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>方法。  
  
 <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> 傳回`null`時`dependencyObject`:  
  
-   是<xref:System.Windows.Navigation.NavigationWindow>。  
  
-   是<xref:System.Windows.Controls.Frame>的：  
  
    1.  由另一個導覽所裝載。  
  
    2.  具有其<xref:System.Windows.Controls.Frame.JournalOwnership%2A>屬性設定為<xref:System.Windows.Navigation.JournalOwnership.UsesParentJournal>。  
  
-   不是由導覽所裝載之內容的一部分。  
  
 WPF 提供取得參考的兩個快速鍵<xref:System.Windows.Navigation.NavigationService>:  
  
-   <xref:System.Windows.Navigation.NavigationService> ，處理瀏覽到<xref:System.Windows.Controls.Page>可以存取從<xref:System.Windows.Controls.Page>本身所取得的值及其<xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=nameWithType>屬性。  
  
-   <xref:System.Windows.Navigation.NavigationService> ，會由<xref:System.Windows.Controls.Frame>處理功能可以存取所取得的值<xref:System.Windows.Controls.Frame.NavigationService%2A>屬性。  
  
   
  
## Examples  
 下列範例會示範如何<xref:System.Windows.Controls.UserControl>可以藉由呼叫擷取瀏覽服務<xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>。  
  
 [!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode1)]
 [!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode1)]  
[!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode2)]
[!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="dependencyObject" /> parameter is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoBack();" />
      <MemberSignature Language="F#" Value="member this.GoBack : unit -&gt; unit" Usage="navigationService.GoBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Navigates to the most recent entry in back navigation history, if there is one.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 然後再呼叫<xref:System.Windows.Navigation.NavigationService.GoBack%2A>、<xref:System.Windows.Navigation.NavigationService.CanGoBack%2A>屬性可檢查以判斷向後巡覽記錄中是否有項目。  
  
   
  
## Examples  
 下列範例會導覽至最新的項目在上一步瀏覽歷程記錄，如果有的話。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowbackcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowbackcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Navigation.NavigationService.GoBack" /> is called when there are no entries in back navigation history.</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoForward ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoForward();" />
      <MemberSignature Language="F#" Value="member this.GoForward : unit -&gt; unit" Usage="navigationService.GoForward " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Navigate to the most recent entry in forward navigation history, if there is one.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 然後再呼叫<xref:System.Windows.Navigation.NavigationService.GoForward%2A>、<xref:System.Windows.Navigation.NavigationService.CanGoForward%2A>屬性可檢查以判斷向前巡覽記錄中是否有項目。  
  
   
  
## Examples  
 如果有的話，下列範例會導覽至向前巡覽記錄中最新的項目。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowforwardcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowforwardcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Navigation.NavigationService.GoForward" /> is called when there are no entries in forward navigation history.</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As LoadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::LoadCompletedEventHandler ^ LoadCompleted;" />
      <MemberSignature Language="F#" Value="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " Usage="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when content that was navigated to has been loaded, parsed, and has begun rendering.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您處理<xref:System.Windows.Navigation.NavigationService.LoadCompleted>如果您要探索有關巡覽要求完成負載的相關資訊。 這項資訊可從<xref:System.Windows.Navigation.NavigationEventArgs>物件傳遞至<xref:System.Windows.Navigation.NavigationService.LoadCompleted>事件處理常式，並包含：  
  
-   內容，並且它的 URI。  
  
-   [導覽器] (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)。  
  
-   其他資料，如果藉由呼叫初始化巡覽<xref:System.Windows.Navigation.NavigationService.Navigate%2A>或<xref:System.Windows.Navigation.NavigationService.Navigate%2A>。  
  
-   回應詳細資料 (使用<xref:System.Net.WebResponse>物件)。  
  
 <xref:System.Windows.Navigation.NavigationService.LoadCompleted> 當 [來源] 頁面無法找到或載入，在此情況下，不會引發<xref:System.Windows.Navigation.NavigationService.NavigationFailed>，就會引發。  
  
> [!NOTE]
>  當<xref:System.Windows.Navigation.NavigationService>引發<xref:System.Windows.Navigation.NavigationService.LoadCompleted>，它也會引發<xref:System.Windows.Application.LoadCompleted?displayProperty=nameWithType>事件<xref:System.Windows.Application>物件。  
  
   
  
## Examples  
 下列範例示範如何處理<xref:System.Windows.Navigation.NavigationService.LoadCompleted>。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowloadcompletedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowloadcompletedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Navigate asynchronously to the specified source content.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root);" />
      <MemberSignature Language="F#" Value="member this.Navigate : obj -&gt; bool" Usage="navigationService.Navigate root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">An object that contains the content to navigate to.</param>
        <summary>Navigate asynchronously to content that is contained by an object.</summary>
        <returns>
          <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> 會瀏覽至<xref:System.Object>所指定`root`如果下列條件成立：  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>事件不會取消。  
  
-   Web 要求 (請參閱<xref:System.Windows.Navigation.NavigationService.Navigating>) 可以建立。  
  
 如果`root`是`null`，則現有內容 (<xref:System.Windows.Navigation.NavigationService.Content%2A>) 會清除。  
  
> [!NOTE]
>  下載 Web 內容，您可能會收到 Web 例外狀況 (例如，404： 找不到檔案)。 您可以處理這類例外狀況，從<xref:System.Windows.Navigation.NavigationService.NavigationFailed>。  
  
   
  
## Examples  
 下列範例示範如何瀏覽至<xref:System.Windows.Controls.Page>物件，其中包含來源內容樹狀結構。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigateobjectcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigateobjectcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri -&gt; bool" Usage="navigationService.Navigate source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
        <summary>Navigate asynchronously to content that is specified by a URI.</summary>
        <returns>
          <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值`source`可以是 Web[!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)]或有效的組件的 URI (請參閱[WPF 中的組件 Uri](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md))。  
  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> 會瀏覽至所指定的 URI`source`如果下列條件成立：  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>事件不會取消。  
  
-   Web 要求 (請參閱<xref:System.Windows.Navigation.NavigationService.Navigating>) 可以建立。  
  
 如果`source`是`null`，則現有內容 (<xref:System.Windows.Navigation.NavigationService.Content%2A>) 會清除。  
  
> [!NOTE]
>  下載 Web 內容，您可能會收到 Web 例外狀況 (例如，404： 找不到檔案)。 您可以處理這類例外狀況，從<xref:System.Windows.Navigation.NavigationService.NavigationFailed>。  
  
 您可以使用<xref:System.Windows.Navigation.NavigationService.Navigate%2A>瀏覽至內容片段。 如果內容 URI 所識別的目前內容，它不會下載一次。  
  
   
  
## Examples  
 下列範例會示範如何瀏覽至 URI。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatecode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatecode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root, System::Object ^ navigationState);" />
      <MemberSignature Language="F#" Value="member this.Navigate : obj * obj -&gt; bool" Usage="navigationService.Navigate (root, navigationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">An object that contains the content to navigate to.</param>
        <param name="navigationState">An object that contains data to be used for processing during navigation.</param>
        <summary>Navigate asynchronously to content that is contained by an object, and pass an object that contains data to be used for processing during navigation.</summary>
        <returns>
          <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法具有相同的行為<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>，不過，而不是 URI 傳遞的物件。  
  
   
  
## Examples  
 下列範例示範如何瀏覽至<xref:System.Windows.Controls.Page>包含來源內容，並傳遞導覽狀態的物件。  
  
 [!code-csharp[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * obj -&gt; bool" Usage="navigationService.Navigate (source, navigationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
        <param name="navigationState">An object that contains data to be used for processing during navigation.</param>
        <summary>Navigate asynchronously to source content located at a URI, and pass an object that contains data to be used for processing during navigation.</summary>
        <returns>
          <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 巡覽是非同步的因為它可能會在同一時間可進行多個導覽。 比方說，如果在單一頁面上有兩個子框架，則無法瀏覽這兩個框架。 在此情況下，所引發的各種導覽事件<xref:System.Windows.Navigation.NavigationService>可能會引發的多次，一個用於每一項，在巡覽的內容且不一定順序來巡覽要求。 因此，如果特定瀏覽要求需要處理的個別要求特定資料，它就無法使用可瀏覽的所有要求的資料。 相反地，您可以使用`navigationState`瀏覽處理，是一個巡覽要求的特定傳遞資料。  
  
 下列事件引數提供導覽狀態的存取：  
  
-   <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A> (傳遞至<xref:System.Windows.Navigation.NavigationService.Navigating>事件)。  
  
-   <xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A> (傳遞至<xref:System.Windows.Navigation.NavigationService.Navigated>， <xref:System.Windows.Navigation.NavigationService.NavigationStopped>，<xref:System.Windows.Navigation.NavigationService.LoadCompleted>事件處理常式)。  
  
   
  
## Examples  
 下列範例示範瀏覽至 URI，以及傳遞導覽狀態。  
  
 [!code-csharp[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState, bool sandboxExternalContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object, sandboxExternalContent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * obj * bool -&gt; bool" Usage="navigationService.Navigate (source, navigationState, sandboxExternalContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
        <Parameter Name="sandboxExternalContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
        <param name="navigationState">An object that contains data to be used for processing during navigation.</param>
        <param name="sandboxExternalContent">Download content into a partial trust security sandbox (with the default Internet zone set of permissions, if <see langword="true" />. The default is <see langword="false" />.</param>
        <summary>Navigate asynchronously to source content located at a URI, pass an object containing navigation state for processing during navigation, and sandbox the content.</summary>
        <returns>
          <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法是只對獨立應用程式和[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]內容。  
  
 這個方法會表現相同的行為<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>，並確保下載的內容會放入部分信任安全性沙箱擴充 (使用預設網際網路區域的一組權限-請參閱[WPF 部分信任安全性](~/docs/framework/wpf/wpf-partial-trust-security.md))。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigated As NavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatedEventHandler ^ Navigated;" />
      <MemberSignature Language="F#" Value="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " Usage="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the content that is being navigated to has been found, and is available from the <see cref="P:System.Windows.Navigation.NavigationService.Content" /> property, although it may not have completed loading.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您處理<xref:System.Windows.Navigation.NavigationService.Navigated>如果您需要時下載開始探索有關巡覽要求的相關資訊。 這項資訊可從<xref:System.Windows.Navigation.NavigationEventArgs>物件傳遞至<xref:System.Windows.Navigation.NavigationService.Navigated>事件處理常式，並包含：  
  
-   [來源] 頁面中。 當<xref:System.Windows.Navigation.NavigationService.Navigated>引發時，至少一部分 [來源] 頁面[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]已剖析，並附加至目標內容的控制項樹狀結構。  
  
-   要求的 URI。  
  
-   [導覽器] (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)。  
  
-   其他資料，如果藉由呼叫初始化巡覽<xref:System.Windows.Navigation.NavigationService.Navigate%2A>或<xref:System.Windows.Navigation.NavigationService.Navigate%2A>。  
  
-   回應詳細資料 (使用<xref:System.Net.WebResponse>物件)。  
  
 <xref:System.Windows.Navigation.NavigationService.Navigated> 當 [來源] 頁面無法找到或載入，在此情況下，不會引發<xref:System.Windows.Navigation.NavigationService.NavigationFailed>，就會引發。  
  
> [!NOTE]
>  當<xref:System.Windows.Navigation.NavigationService>引發<xref:System.Windows.Navigation.NavigationService.NavigationFailed>，它也會引發<xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType>事件<xref:System.Windows.Application>物件。  
  
   
  
## Examples  
 下列範例示範如何處理<xref:System.Windows.Navigation.NavigationService.Navigated>。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigating As NavigatingCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatingCancelEventHandler ^ Navigating;" />
      <MemberSignature Language="F#" Value="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " Usage="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a new navigation is requested.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigating> 當新的瀏覽已要求，但來源之前要求內容，包括何時引發：  
  
-   呼叫 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>。  
  
-   <xref:System.Windows.Navigation.NavigationService.GoBack%2A> 或<xref:System.Windows.Navigation.NavigationService.GoForward%2A>稱為 (或從瀏覽選取某個項目[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)])。  
  
-   若要巡覽內容片段。  
  
 您處理<xref:System.Windows.Navigation.NavigationService.Navigating>如果您要探索有關巡覽要求瀏覽啟動之前的相關資訊。 這項資訊可從<xref:System.Windows.Navigation.NavigatingCancelEventArgs>物件傳遞至<xref:System.Windows.Navigation.NavigationService.Navigating>事件處理常式。  
  
 A<xref:System.Net.WebRequest>物件瀏覽已建立且可從<xref:System.Windows.Navigation.NavigatingCancelEventArgs>參數，因為實際的要求尚未被這個時候，您可以重新設定<xref:System.Net.WebRequest>物件，如有必要。  
  
 您也處理<xref:System.Windows.Navigation.NavigatingCancelEventArgs>取消瀏覽，必要時，藉由設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>為 true。 如果您取消瀏覽時，會不引發任何其他瀏覽事件。  
  
> [!NOTE]
>  如果您的應用程式裝載在瀏覽器中，您無法防止使用者在不用離開您的應用程式，藉由取消<xref:System.Windows.Navigation.NavigationService.Navigating>事件。  
  
 內容的第一段巡覽至巡覽器之後 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)，每一項從巡覽至別處的內容新增至巡覽記錄。 如果您要儲存您要離開的瀏覽之內容的相關狀態資訊時，您可以將狀態新增至日誌項目，該內容設定<xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A>與<xref:System.Windows.Navigation.CustomContentState>物件。  
  
> [!NOTE]
>  當<xref:System.Windows.Navigation.NavigationService>引發<xref:System.Windows.Navigation.NavigationService.Navigating>，它也會引發<xref:System.Windows.Application.Navigating?displayProperty=nameWithType>事件<xref:System.Windows.Application>物件。  
  
   
  
## Examples  
 下列範例示範如何處理<xref:System.Windows.Navigation.NavigationService.Navigating>來偵測是否已經發出要求，以重新整理靜態內容，如果是的話，請取消要求。  
  
 <xref:System.Windows.Navigation.NavigationService.Navigating>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationFailed">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event NavigationFailed As NavigationFailedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationFailedEventHandler ^ NavigationFailed;" />
      <MemberSignature Language="F#" Value="member this.NavigationFailed : System.Windows.Navigation.NavigationFailedEventHandler " Usage="member this.NavigationFailed : System.Windows.Navigation.NavigationFailedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationFailedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when an error occurs while navigating to the requested content.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當是<xref:System.Net.WebException>或<xref:System.IO.IOException>導覽期間擲回<xref:System.Windows.Navigation.NavigationService.NavigationFailed>就會引發事件。 <xref:System.Windows.Navigation.NavigationService.NavigationFailed> 傳遞<xref:System.Windows.Navigation.NavigationFailedEventArgs>封裝例外狀況，並造成此例外狀況所巡覽的詳細資料的相關資訊。  
  
 當例外狀況會從失敗的瀏覽，且未經處理時，列出的順序會引發下列事件：  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=nameWithType> 或 <xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=nameWithType>。  
  
-   <xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Application.DispatcherUnhandledException>.  
  
 如果導覽 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>) 由一或多個導覽器`NavigationFailed`它們其中任何一個上就不會引發。  
  
   
  
## Examples  
 下列範例示範如何處理<xref:System.Windows.Navigation.NavigationService.NavigationFailed>。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationfailedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationfailedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationProgress">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationProgress As NavigationProgressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationProgressEventHandler ^ NavigationProgress;" />
      <MemberSignature Language="F#" Value="member this.NavigationProgress : System.Windows.Navigation.NavigationProgressEventHandler " Usage="member this.NavigationProgress : System.Windows.Navigation.NavigationProgressEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs periodically during a download to provide navigation progress information.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> 傳遞<xref:System.Windows.Navigation.NavigationProgressEventArgs>公開下列進度資訊：  
  
-   已下載的位元組到目前為止 (<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>)。  
  
-   若要下載的總位元組數目 (<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>)。  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> 會針對每個 1024 個位元組的內容下載之後，以及引發一次的剩餘的位元組數目是否曾經低於 1024 個位元組。 基於這個理由，處理<xref:System.Windows.Navigation.NavigationService.NavigationProgress>提供實用的方式來追蹤和顯示目前下載的進度。  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> 將不會引發在某些情況下，例如當相同的內容瀏覽至時，或內容片段巡覽至目前載入的內容時 (也就是值<xref:System.Windows.Navigation.NavigationService.Content%2A>屬性)。  
  
 當瀏覽至已編譯的 XAML 資源，最終<xref:System.Windows.Navigation.NavigationService.NavigationProgress>可能不會引發事件。 這表示，在下載結束時，上次報告<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>值可能不等於<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>值。 處理<xref:System.Windows.Navigation.NavigationService.LoadCompleted>瀏覽已完成時收到通知的事件。  
  
> [!NOTE]
>  當<xref:System.Windows.Navigation.NavigationService>引發<xref:System.Windows.Navigation.NavigationService.NavigationProgress>，它也會引發<xref:System.Windows.Application.NavigationProgress?displayProperty=nameWithType>事件<xref:System.Windows.Application>物件。  
  
   
  
## Examples  
 下列範例示範如何處理<xref:System.Windows.Navigation.NavigationService.NavigationProgress>。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationprogresscode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationprogresscode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="NavigationStopped">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationStopped As NavigationStoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationStoppedEventHandler ^ NavigationStopped;" />
      <MemberSignature Language="F#" Value="member this.NavigationStopped : System.Windows.Navigation.NavigationStoppedEventHandler " Usage="member this.NavigationStopped : System.Windows.Navigation.NavigationStoppedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationStoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the <see cref="M:System.Windows.Navigation.NavigationService.StopLoading" /> method is called, or when a new navigation is requested while a current navigation is in progress.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您處理<xref:System.Windows.Navigation.NavigationService.NavigationStopped>如果您需要下載停止時，探索有關巡覽要求的相關資訊。 這項資訊可從<xref:System.Windows.Navigation.NavigationEventArgs>物件傳遞至<xref:System.Windows.Navigation.NavigationService.NavigationStopped>事件處理常式，並包含：  
  
-   要求的 URI。  
  
-   [導覽器] (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)。  
  
-   其他資料，如果藉由呼叫初始化巡覽<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>或<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>。  
  
> [!NOTE]
>  當<xref:System.Windows.Navigation.NavigationService>引發<xref:System.Windows.Navigation.NavigationService.NavigationStopped>，它也會引發<xref:System.Windows.Application.NavigationStopped?displayProperty=nameWithType>事件<xref:System.Windows.Application>物件。  
  
   
  
## Examples  
 下列範例示範如何處理<xref:System.Windows.Navigation.NavigationService.NavigationStopped>。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationstoppedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationstoppedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="navigationService.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reloads the current content.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果目前的內容 (的值所指定<xref:System.Windows.Navigation.NavigationService.Source%2A>屬性) 再次，巡覽至<xref:System.Windows.Navigation.NavigationService>不會再次下載內容。 若要強制<xref:System.Windows.Navigation.NavigationService>若要重新瀏覽至內容，呼叫<xref:System.Windows.Navigation.NavigationService.Refresh%2A>。  
  
 請注意，如果同樣地，巡覽至目前的內容是否藉由呼叫<xref:System.Windows.Navigation.NavigationService.Navigate%2A>或<xref:System.Windows.Navigation.NavigationService.Refresh%2A>，新的項目不會加入至 瀏覽歷程記錄。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
      </Docs>
    </Member>
    <Member MemberName="RemoveBackEntry">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalEntry RemoveBackEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Navigation.JournalEntry RemoveBackEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBackEntry () As JournalEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Navigation::JournalEntry ^ RemoveBackEntry();" />
      <MemberSignature Language="F#" Value="member this.RemoveBackEntry : unit -&gt; System.Windows.Navigation.JournalEntry" Usage="navigationService.RemoveBackEntry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes the most recent journal entry from back history.</summary>
        <returns>The most recent <see cref="T:System.Windows.Navigation.JournalEntry" /> in back navigation history, if there is one.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果兩個或多個導覽器 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>) 共用相同的瀏覽歷程記錄，可以使用一個導覽<xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>擷取發生在另一個的導覽巡覽向後巡覽歷程記錄項目。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri with get, set" Usage="System.Windows.Navigation.NavigationService.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URI of the current content, or the URI of new content that is currently being navigated to.</summary>
        <value>A <see cref="T:System.Uri" /> ，其中包含目前的內容或目前所巡覽之內容的 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您將此屬性設定為不同於目前所顯示，[導覽器] 的 URI (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>) 巡覽至指定的 URI。  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> 設定為除非則會取消巡覽，從 URI 是瀏覽已載入的內容。  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> 您可以將僅限片段的 URI，並可設為`null`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopLoading">
      <MemberSignature Language="C#" Value="public void StopLoading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopLoading() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.StopLoading" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopLoading ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopLoading();" />
      <MemberSignature Language="F#" Value="member this.StopLoading : unit -&gt; unit" Usage="navigationService.StopLoading " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops further downloading of content for the current navigation request.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> 可以呼叫儘速<xref:System.Windows.Navigation.NavigationService.Navigate%2A>傳回，並停止正在執行中子框架的導覽。  
  
 (<xref:System.Windows.Controls.Frame>)  
  
 呼叫<xref:System.Windows.Navigation.NavigationService.StopLoading%2A>方法會引發<xref:System.Windows.Navigation.NavigationService.NavigationStopped>事件。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> 必須初始化巡覽在相同執行緒上呼叫。  
  
   
  
## Examples  
 下列範例會示範如何停止載入。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowstoploadingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowstoploadingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
  </Members>
</Type>