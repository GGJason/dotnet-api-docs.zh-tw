<Type Name="NavigationService" FullName="System.Windows.Navigation.NavigationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ada487929a3270b8b3a3f316486ea10531a71ff1" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39762288" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NavigationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NavigationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.NavigationService" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NavigationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class NavigationService sealed" />
  <TypeSignature Language="F#" Value="type NavigationService = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含支援巡覽的方法、屬性和事件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService> 封裝下載的瀏覽器式巡覽內容中的內容的能力。  
  
 內容可以是任何類型的.NET Framework 物件和 HTML 檔案。 一般情況下，不過，頁面會偏好做為封裝內容以供瀏覽的方式使用 (請參閱<xref:System.Windows.Controls.Page>)。  
  
 內容可以瀏覽至提供的物件執行個體，並呼叫的多載<xref:System.Windows.Navigation.NavigationService.Navigate%2A>接受物件的方法：  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=nameWithType>  
  
 或者，內容可以瀏覽至藉由傳遞至其中的相對或絕對 URI<xref:System.Windows.Navigation.NavigationService.Navigate%2A>方法多載可接受的 URI:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%2CSystem.Boolean%29?displayProperty=nameWithType>  
  
 當內容巡覽至的 URI，<xref:System.Windows.Navigation.NavigationService>會傳回包含內容的物件。  
  
 瀏覽的存留期可以追蹤透過下列事件：  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigated>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationProgress>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationStopped>  
  
-   <xref:System.Windows.Navigation.NavigationService.LoadCompleted>  
  
-   <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>。  
  
 發生巡覽; 每次引發並不是所有的事件所引發的事件集的取決類型 （內容或內容片段），就會發生的瀏覽和巡覽完成的方式 （已取消、 已停止或失敗）。  
  
 下圖說明這些事件的引發順序：  
  
 ![頁面巡覽流程圖](~/add/media/navigationoverviewfigure11.png "頁面巡覽流程圖")  
  
 期間或之後的瀏覽<xref:System.Windows.Navigation.NavigationService>提供之內容所要巡覽，包括正在巡覽之內容的 URI 的相關資訊 (<xref:System.Windows.Navigation.NavigationService.Source%2A>)，目前內容的 URI (<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>)，和包含的物件若要巡覽的內容 (<xref:System.Windows.Navigation.NavigationService.Content%2A>)。  
  
 當內容巡覽<xref:System.Windows.Navigation.NavigationService>巡覽記錄中記錄的導覽中的項目。 項目會加入向後巡覽記錄，其中一個新的瀏覽發生時，藉由呼叫<xref:System.Windows.Navigation.NavigationService.Navigate%2A>方法，或瀏覽至向前巡覽記錄中的項目，藉由呼叫<xref:System.Windows.Navigation.NavigationService.GoForward%2A>。 項目就會加入向前巡覽記錄中，瀏覽至項目後巡覽記錄，藉由呼叫<xref:System.Windows.Navigation.NavigationService.GoBack%2A>。 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> 和<xref:System.Windows.Navigation.NavigationService.CanGoForward%2A>報表是否有項目後和向前巡覽記錄，分別。 此外，最新項目後會移除巡覽歷程記錄，請呼叫<xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>。  
  
 根據預設，<xref:System.Windows.Navigation.NavigationService>不會儲存在巡覽記錄中的內容物件的執行個體。 相反地，<xref:System.Windows.Navigation.NavigationService>巡覽至使用巡覽記錄每次會建立內容物件的新執行個體。 此行為被設計來巡覽大量內容時，避免過多的記憶體耗用量。 因此，內容的狀態並不會記住從一個瀏覽至下一步。 不過，WPF 提供數種技術，供您可以儲存一種狀態一段內容巡覽記錄中。  
  
 使用<xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>，您也可以記住多組的單一頁面的執行個體的狀態。  
  
 <xref:System.Windows.Navigation.NavigationService> 已`sealed`類別，並因此無法具現化; 相反地，<xref:System.Windows.Navigation.NavigationService>供導覽器用來瀏覽。 在 WPF 中，有兩個導覽器：<xref:System.Windows.Navigation.NavigationWindow>和<xref:System.Windows.Controls.Frame>。  
  
 在視覺上，[!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]使用[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]為導覽器中，以提供整合式的使用者體驗。 實際，不過[!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]實際使用<xref:System.Windows.Navigation.NavigationWindow>作為 [導覽];<xref:System.Windows.Application.MainWindow%2A>屬性[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]中執行[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]會傳回參考<xref:System.Windows.Navigation.NavigationWindow>，和所管理的瀏覽歷程記錄<xref:System.Windows.Navigation.NavigationWindow>由管理的瀏覽歷程記錄與整合[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]如下：  
  
-   當內容巡覽至藉由呼叫<xref:System.Windows.Navigation.NavigationService.Navigate%2A>， <xref:System.Windows.Navigation.NavigationService.GoBack%2A>，並<xref:System.Windows.Navigation.NavigationService.GoForward%2A>內在[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]相關的瀏覽歷程記錄項目也會新增至[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]瀏覽歷程記錄。  
  
-   當中的項目[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]瀏覽[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]已選取[!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]會導致<xref:System.Windows.Navigation.NavigationService>巡覽回或轉送這些項目相關聯的內容。  
  
> [!NOTE]
>  A<xref:System.Windows.Controls.Frame>可以提供自己的巡覽歷程記錄，或使用它裝載的巡覽器巡覽歷程記錄。 如果<xref:System.Windows.Controls.Frame>提供它自己的巡覽記錄，它可以顯示自己的巡覽[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]瀏覽的項目在巡覽記錄中; 這些項目不會新增至主應用程式巡覽器巡覽歷程記錄 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>， [!INCLUDE[TLA2#tla_iegeneric](~/includes/tla2sharptla-iegeneric-md.md)])，因此，無法瀏覽至從導覽[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]每個 (請參閱<xref:System.Windows.Controls.Frame.JournalOwnership%2A>)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBackEntry">
      <MemberSignature Language="C#" Value="public void AddBackEntry (System.Windows.Navigation.CustomContentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBackEntry(class System.Windows.Navigation.CustomContentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBackEntry (state As CustomContentState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBackEntry(System::Windows::Navigation::CustomContentState ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddBackEntry : System.Windows.Navigation.CustomContentState -&gt; unit" Usage="navigationService.AddBackEntry state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Navigation.CustomContentState" />
      </Parameters>
      <Docs>
        <param name="state">
          <see cref="T:System.Windows.Navigation.CustomContentState" /> 物件，表示與特定內容關聯的應用程式定義狀態。</param>
        <summary>將項目加入至包含 <see cref="T:System.Windows.Navigation.CustomContentState" /> 物件的向後巡覽記錄。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A><xref:System.Windows.Navigation.CustomContentState>，和<xref:System.Windows.Navigation.IProvideCustomContentState>用來協助您記住多組目前內容的狀態。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="state" /> 為 <see langword="null" />，而且沒有從 <see cref="T:System.Windows.Navigation.CustomContentState" /> 傳回 <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" /> 物件。</exception>
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoBack : bool" Usage="System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值表示向後巡覽記錄中是否至少有一個項目。</summary>
        <value>如果向後巡覽記錄中有至少一個項目則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> 若要判斷向後巡覽記錄中是否至少一個項目。 應該檢查這個屬性，然後再呼叫<xref:System.Windows.Navigation.NavigationService.GoBack%2A>; 如果<xref:System.Windows.Navigation.NavigationService.GoBack%2A>稱為和向後巡覽記錄中沒有任何項目<xref:System.InvalidOperationException>就會擲回。  
  
> [!NOTE]
>  如果多個導覽器共用的巡覽歷程記錄 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)，最新的項目重新瀏覽歷程記錄可能尚未新增所<xref:System.Windows.Navigation.NavigationService>之目前的巡覽器。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoForward : bool" Usage="System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值表示向前巡覽記錄中是否至少有一個項目。</summary>
        <value>如果向前巡覽記錄中至少有一個項目則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> 若要判斷向前巡覽記錄中是否至少一個項目。 應該檢查這個屬性，然後再呼叫<xref:System.Windows.Navigation.NavigationService.GoForward%2A>; 如果<xref:System.Windows.Navigation.NavigationService.GoForward%2A>稱為和向前巡覽記錄中沒有任何項目<xref:System.InvalidOperationException>就會擲回。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Content : obj with get, set" Usage="System.Windows.Navigation.NavigationService.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定包含目前內容之物件的參考。</summary>
        <value>參考包含目前內容之物件的物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用下列其中一種設定內容：  
  
-   直接藉由將它設定為物件的參考。  
  
-   間接，藉由呼叫<xref:System.Windows.Navigation.NavigationService.Navigate%2A>， <xref:System.Windows.Navigation.NavigationService.GoBack%2A>，或<xref:System.Windows.Navigation.NavigationService.GoForward%2A>。  
  
 設定<xref:System.Windows.Navigation.NavigationService>瀏覽是非同步的因為起始新的瀏覽;<xref:System.Windows.Navigation.NavigationService.Content%2A>不會傳回值，如果它在設定之後，立即檢查。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="CurrentSource">
      <MemberSignature Language="C#" Value="public Uri CurrentSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CurrentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentSource As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CurrentSource { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentSource : Uri" Usage="System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得最後巡覽之內容的 URI。</summary>
        <value>A<see cref="T:System.Uri" />內容的最後巡覽，巡覽至所使用的 URI，否則如果<see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>屬性不會變更，直到瀏覽至不同的 URI 已順利完成。  
  
 <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> 可以使用僅限片段的 URI 設定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentNavigation">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FragmentNavigation As FragmentNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::FragmentNavigationEventHandler ^ FragmentNavigation;" />
      <MemberSignature Language="F#" Value="member this.FragmentNavigation : System.Windows.Navigation.FragmentNavigationEventHandler " Usage="member this.FragmentNavigation : System.Windows.Navigation.FragmentNavigationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.FragmentNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在開始巡覽內容片段時發生，如果需要的片段位在目前的內容中，則會立即發生，如果需要的片段位在不同的內容中，則會在載入來源 [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] 內容之後發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，內容片段是內容也就是包含具名<xref:System.Windows.UIElement>，即<xref:System.Windows.UIElement>其<xref:System.Windows.FrameworkElement.Name%2A>設定的屬性，例如：  
  
```  
<TextBlock Name="FragmentName">...</TextBlock>  
```  
  
 您瀏覽至[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]後置詞，以下列格式提供 URI 的片段：  
  
 \#*FragmentName*  
  
 以下顯示 URI，參考至內容片段的範例：  
  
 `http://www.microsoft.com/targetpage.xaml#FragmentName`  
  
 [來源] 頁面載入之後 (後<xref:System.Windows.Navigation.NavigationService.LoadCompleted>就會引發事件)，片段巡覽開始，<xref:System.Windows.Navigation.NavigationService>嘗試找出[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]片段。 如果[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]找到片段，則<xref:System.Windows.Navigation.NavigationService>會指示內容的巡覽器 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>) 來顯示，片段。 如果您需要變更此行為，您可以處理<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>提供您自己的片段巡覽行為。 <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> 傳遞<xref:System.Windows.Navigation.FragmentNavigationEventArgs>參數會公開針對此目的，是很有用的屬性包括：  
  
-   擁有此瀏覽服務的巡覽器 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)。  
  
-   片段名稱。  
  
 您可以處理<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>覆寫預設 WPF 片段實作，使用您自己的自訂實作。 如果您這樣做，您需要設定<xref:System.Windows.Navigation.FragmentNavigationEventArgs.Handled%2A>至`true`; 否則處理行為的預設 WPF 片段會套用。  
  
 您應該避免直接初始化中的瀏覽<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>事件處理常式。 由於<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>現有的導覽，起始從新的巡覽，會引發<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>事件處理常式會建立可能會導致巢狀瀏覽<xref:System.ExecutionEngineException>擲回。 相反地，您可以間接初始化巡覽建立項目使用的非同步工作<xref:System.Windows.Threading.Dispatcher>。  
  
> [!NOTE]
>  當<xref:System.Windows.Navigation.NavigationService>引發<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>，它也會引發<xref:System.Windows.Application.FragmentNavigation?displayProperty=nameWithType>上的事件<xref:System.Windows.Application>物件。  
  
> [!IMPORTANT]
>  片段巡覽不支援鬆散[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]頁面 (僅標記[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]檔案與`Page`作為根項目) 在下列情況：  
>   
>  • 當瀏覽至在鬆散的片段[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]頁面。  
>   
>  • 當瀏覽鬆散[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]頁面，即可在鬆散的另一個片段[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]頁面。  
>   
>  不過，鬆散[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]頁面可以巡覽至其本身的片段。  
  
   
  
## Examples  
 下列範例示範如何處理<xref:System.Windows.Navigation.NavigationService.FragmentNavigation>提供自訂的片段巡覽行為。 在此情況下，範例會開啟錯誤[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]頁面上，如果在來源中的片段[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]找不到頁面。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowfragmentnavigationcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowfragmentnavigationcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="GetNavigationService">
      <MemberSignature Language="C#" Value="public static System.Windows.Navigation.NavigationService GetNavigationService (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Navigation.NavigationService GetNavigationService(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Navigation::NavigationService ^ GetNavigationService(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetNavigationService : System.Windows.DependencyObject -&gt; System.Windows.Navigation.NavigationService" Usage="System.Windows.Navigation.NavigationService.GetNavigationService dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">巡覽器所裝載之內容中的 <see cref="T:System.Windows.DependencyObject" />。</param>
        <summary>取得內容包含所指定 <see cref="T:System.Windows.Navigation.NavigationService" /> 之巡覽器的 <see cref="T:System.Windows.DependencyObject" /> 參考。</summary>
        <returns>內容包含所指定 <see cref="T:System.Windows.DependencyObject" /> 之導覽器的 <see cref="T:System.Windows.Navigation.NavigationService" /> 參考；在某些情況下可以是 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 巡覽器已<xref:System.Windows.Navigation.NavigationService>處理內容的瀏覽。 WPF 有兩個導覽器：<xref:System.Windows.Navigation.NavigationWindow>和<xref:System.Windows.Controls.Frame>。 若要處理巡覽要求及管理瀏覽存留期，導覽器會使用 WPF 瀏覽服務，它會實作為<xref:System.Windows.Navigation.NavigationService>類別。 裝載的巡覽器的內容可以取得之巡覽器的參考<xref:System.Windows.Navigation.NavigationService>藉由呼叫<xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>方法。  
  
 <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> 會傳回`null`當`dependencyObject`:  
  
-   是<xref:System.Windows.Navigation.NavigationWindow>。  
  
-   是<xref:System.Windows.Controls.Frame>的：  
  
    1.  是由另一個導覽工具裝載。  
  
    2.  具有其<xref:System.Windows.Controls.Frame.JournalOwnership%2A>屬性設定為<xref:System.Windows.Navigation.JournalOwnership.UsesParentJournal>。  
  
-   不是巡覽器所裝載之內容的一部分。  
  
 WPF 提供用於取得參考的兩個快速鍵<xref:System.Windows.Navigation.NavigationService>:  
  
-   <xref:System.Windows.Navigation.NavigationService> ，處理瀏覽至<xref:System.Windows.Controls.Page>您可以從存取<xref:System.Windows.Controls.Page>本身所取得的值及其<xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=nameWithType>屬性。  
  
-   <xref:System.Windows.Navigation.NavigationService> ，由<xref:System.Windows.Controls.Frame>來處理瀏覽可以存取所取得的值<xref:System.Windows.Controls.Frame.NavigationService%2A>屬性。  
  
   
  
## Examples  
 下列範例示範如何<xref:System.Windows.Controls.UserControl>可以藉由呼叫擷取瀏覽服務<xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>。  
  
 [!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode1)]
 [!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode1)]  
[!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode2)]
[!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dependencyObject" /> 參數為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoBack();" />
      <MemberSignature Language="F#" Value="member this.GoBack : unit -&gt; unit" Usage="navigationService.GoBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>巡覽至向後巡覽記錄中的最新項目 (如果有的話)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 然後再呼叫<xref:System.Windows.Navigation.NavigationService.GoBack%2A>，則<xref:System.Windows.Navigation.NavigationService.CanGoBack%2A>屬性可以進行檢查以判斷向後巡覽記錄中是否有項目。  
  
   
  
## Examples  
 下列範例會導覽至最新的項目後巡覽記錄，如果有的話。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowbackcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowbackcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">當向後巡覽記錄中沒有項目時呼叫 <see cref="M:System.Windows.Navigation.NavigationService.GoBack" />。</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoForward ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoForward();" />
      <MemberSignature Language="F#" Value="member this.GoForward : unit -&gt; unit" Usage="navigationService.GoForward " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>巡覽至向前巡覽記錄中的最新項目 (如果有的話)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 然後再呼叫<xref:System.Windows.Navigation.NavigationService.GoForward%2A>，則<xref:System.Windows.Navigation.NavigationService.CanGoForward%2A>屬性可進行檢查以判斷向前巡覽記錄中是否有項目。  
  
   
  
## Examples  
 如果有的話，下列範例會巡覽至向前巡覽記錄中最新的項目。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowforwardcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowforwardcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">當向前巡覽記錄中沒有項目時呼叫 <see cref="M:System.Windows.Navigation.NavigationService.GoForward" />。</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As LoadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::LoadCompletedEventHandler ^ LoadCompleted;" />
      <MemberSignature Language="F#" Value="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " Usage="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當所巡覽的內容被載入、剖析以及開始呈現時，就會發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您處理<xref:System.Windows.Navigation.NavigationService.LoadCompleted>如果您要探索在載入完成後瀏覽要求的相關資訊。 此資訊也可從<xref:System.Windows.Navigation.NavigationEventArgs>傳遞給物件<xref:System.Windows.Navigation.NavigationService.LoadCompleted>事件處理常式，並包含：  
  
-   內容和其 URI。  
  
-   [導覽器] (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)。  
  
-   其他資料，如果藉由呼叫初始化巡覽<xref:System.Windows.Navigation.NavigationService.Navigate%2A>或<xref:System.Windows.Navigation.NavigationService.Navigate%2A>。  
  
-   回應詳細資料 (使用<xref:System.Net.WebResponse>物件)。  
  
 <xref:System.Windows.Navigation.NavigationService.LoadCompleted> 當 [來源] 頁面無法找到或載入，在此情況下，不會引發<xref:System.Windows.Navigation.NavigationService.NavigationFailed>，就會引發。  
  
> [!NOTE]
>  當<xref:System.Windows.Navigation.NavigationService>引發<xref:System.Windows.Navigation.NavigationService.LoadCompleted>，它也會引發<xref:System.Windows.Application.LoadCompleted?displayProperty=nameWithType>上的事件<xref:System.Windows.Application>物件。  
  
   
  
## Examples  
 下列範例示範如何處理<xref:System.Windows.Navigation.NavigationService.LoadCompleted>。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowloadcompletedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowloadcompletedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>非同步巡覽至所指定的來源內容。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root);" />
      <MemberSignature Language="F#" Value="member this.Navigate : obj -&gt; bool" Usage="navigationService.Navigate root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">包含所要巡覽之內容的物件。</param>
        <summary>非同步巡覽至物件所包含的內容。</summary>
        <returns>如果未取消巡覽則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> 將瀏覽至<xref:System.Object>所指定`root`如果下列條件成立：  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>事件未取消。  
  
-   Web 要求 (請參閱<xref:System.Windows.Navigation.NavigationService.Navigating>) 可以建立。  
  
 如果`root`已`null`，現有的內容 (<xref:System.Windows.Navigation.NavigationService.Content%2A>) 會清除。  
  
> [!NOTE]
>  下載 Web 內容，您可能會收到 Web 例外狀況 (例如，404： 找不到檔案)。 您可以處理來自這類例外狀況<xref:System.Windows.Navigation.NavigationService.NavigationFailed>。  
  
   
  
## Examples  
 下列範例示範如何瀏覽至<xref:System.Windows.Controls.Page>物件，其中包含來源內容樹狀結構。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigateobjectcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigateobjectcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri -&gt; bool" Usage="navigationService.Navigate source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">針對需要的內容，以 URI 來初始化的 <see cref="T:System.Uri" /> 物件。</param>
        <summary>非同步巡覽至 URI 所指定的內容。</summary>
        <returns>如果未取消巡覽則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值`source`可以是 Web[!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)]或 有效的組件的 URI (請參閱[WPF 中的 Pack Uri](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md))。  
  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> 將瀏覽至所指定的 URI`source`如果下列條件成立：  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>事件未取消。  
  
-   Web 要求 (請參閱<xref:System.Windows.Navigation.NavigationService.Navigating>) 可以建立。  
  
 如果`source`已`null`，現有的內容 (<xref:System.Windows.Navigation.NavigationService.Content%2A>) 會清除。  
  
> [!NOTE]
>  下載 Web 內容，您可能會收到 Web 例外狀況 (例如，404： 找不到檔案)。 您可以處理來自這類例外狀況<xref:System.Windows.Navigation.NavigationService.NavigationFailed>。  
  
 您可以使用<xref:System.Windows.Navigation.NavigationService.Navigate%2A>瀏覽至內容片段。 如果目前的內容 URI 所識別的內容，它不會下載一次。  
  
   
  
## Examples  
 下列範例示範如何瀏覽至 URI。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatecode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatecode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root, System::Object ^ navigationState);" />
      <MemberSignature Language="F#" Value="member this.Navigate : obj * obj -&gt; bool" Usage="navigationService.Navigate (root, navigationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">包含所要巡覽之內容的物件。</param>
        <param name="navigationState">物件，其中包含要在巡覽期間用於處理作業的資料。</param>
        <summary>非同步巡覽至物件所包含的內容，並傳遞包含要在巡覽期間用來處理之資料的物件。</summary>
        <returns>如果未取消巡覽則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法有相同的行為<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>，不過，物件會傳遞而不是 URI。  
  
   
  
## Examples  
 下列範例示範如何瀏覽至<xref:System.Windows.Controls.Page>物件包含來源內容，並傳遞瀏覽狀態。  
  
 [!code-csharp[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * obj -&gt; bool" Usage="navigationService.Navigate (source, navigationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">針對需要的內容，以 URI 來初始化的 <see cref="T:System.Uri" /> 物件。</param>
        <param name="navigationState">物件，其中包含要在巡覽期間用於處理作業的資料。</param>
        <summary>非同步巡覽至位在 URI 的來源內容，並傳遞包含要在瀏覽期間用來處理之資料的物件。</summary>
        <returns>如果未取消巡覽則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 巡覽是非同步的因為它可能會在同一時間可進行的多個巡覽。 比方說，如果在單一頁面上，有兩個子框架，則可以瀏覽這兩個畫面格。 在此情況下，所引發的各種巡覽事件<xref:System.Windows.Navigation.NavigationService>可能是引發的多次，一個用於每個所要巡覽至內容片段，而且不一定的順序巡覽要求。 因此，如果特定巡覽要求需要處理個別要求特定的資料，它就無法使用可瀏覽的所有要求的資料。 相反地，您可以使用`navigationState`巡覽處理，是一個瀏覽要求的特定傳遞資料。  
  
 下列的事件引數提供導覽狀態的存取：  
  
-   <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A> (傳遞至<xref:System.Windows.Navigation.NavigationService.Navigating>事件)。  
  
-   <xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A> (傳遞給<xref:System.Windows.Navigation.NavigationService.Navigated>， <xref:System.Windows.Navigation.NavigationService.NavigationStopped>，<xref:System.Windows.Navigation.NavigationService.LoadCompleted>事件處理常式)。  
  
   
  
## Examples  
 下列範例示範如何瀏覽至 URI，並傳遞瀏覽狀態。  
  
 [!code-csharp[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState, bool sandboxExternalContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object, sandboxExternalContent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * obj * bool -&gt; bool" Usage="navigationService.Navigate (source, navigationState, sandboxExternalContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
        <Parameter Name="sandboxExternalContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">針對需要的內容，以 URI 來初始化的 <see cref="T:System.Uri" /> 物件。</param>
        <param name="navigationState">物件，其中包含要在巡覽期間用於處理作業的資料。</param>
        <param name="sandboxExternalContent">下載內容至部分信任安全性沙箱 (如果為 <see langword="true" />，則使用預設的網際網路區域集權限)。 預設值為 <see langword="false" />。</param>
        <summary>非同步巡覽至位在 URI 的來源內容、傳遞包含瀏覽狀態的物件以在瀏覽期間用於處理，以及對內容進行沙箱測試。</summary>
        <returns>如果未取消巡覽則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法是只對獨立應用程式和[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]內容。  
  
 這個方法會表現出相同的行為<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>，並將它擴充藉由確保下載的內容放在部分信任安全性沙箱 (使用的預設網際網路區域權限集-請參閱[WPF 部分信任安全性](~/docs/framework/wpf/wpf-partial-trust-security.md))。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigated As NavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatedEventHandler ^ Navigated;" />
      <MemberSignature Language="F#" Value="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " Usage="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當找到所要巡覽的內容，此內容也可以從 <see cref="P:System.Windows.Navigation.NavigationService.Content" /> 屬性取得 (雖然可能尚未完全載入) 時，就會發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您處理<xref:System.Windows.Navigation.NavigationService.Navigated>如果您必須下載開始時，找出巡覽要求的相關資訊。 此資訊也可從<xref:System.Windows.Navigation.NavigationEventArgs>傳遞給物件<xref:System.Windows.Navigation.NavigationService.Navigated>事件處理常式，並包含：  
  
-   [來源] 頁面中。 當<xref:System.Windows.Navigation.NavigationService.Navigated>引發時，至少部分的 [來源] 頁面[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]已剖析，並附加至目標內容的控制項樹狀結構。  
  
-   要求的 URI。  
  
-   [導覽器] (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)。  
  
-   其他資料，如果藉由呼叫初始化巡覽<xref:System.Windows.Navigation.NavigationService.Navigate%2A>或<xref:System.Windows.Navigation.NavigationService.Navigate%2A>。  
  
-   回應詳細資料 (使用<xref:System.Net.WebResponse>物件)。  
  
 <xref:System.Windows.Navigation.NavigationService.Navigated> 當 [來源] 頁面無法找到或載入，在此情況下，不會引發<xref:System.Windows.Navigation.NavigationService.NavigationFailed>，就會引發。  
  
> [!NOTE]
>  當<xref:System.Windows.Navigation.NavigationService>引發<xref:System.Windows.Navigation.NavigationService.NavigationFailed>，它也會引發<xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType>上的事件<xref:System.Windows.Application>物件。  
  
   
  
## Examples  
 下列範例示範如何處理<xref:System.Windows.Navigation.NavigationService.Navigated>。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigating As NavigatingCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatingCancelEventHandler ^ Navigating;" />
      <MemberSignature Language="F#" Value="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " Usage="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要求新的巡覽時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigating> 當要求新的巡覽，但來源之前要求內容，包括何時引發：  
  
-   呼叫 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>。  
  
-   <xref:System.Windows.Navigation.NavigationService.GoBack%2A> 或是<xref:System.Windows.Navigation.NavigationService.GoForward%2A>稱為 (或從瀏覽選取某個項目[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)])。  
  
-   巡覽內容片段。  
  
 您處理<xref:System.Windows.Navigation.NavigationService.Navigating>如果您要探索導覽開始前瀏覽要求的相關資訊。 此資訊也可從<xref:System.Windows.Navigation.NavigatingCancelEventArgs>傳遞給物件<xref:System.Windows.Navigation.NavigationService.Navigating>事件處理常式。  
  
 A<xref:System.Net.WebRequest>物件的導覽方式建立，而且可從<xref:System.Windows.Navigation.NavigatingCancelEventArgs>參數，因為此時尚未已成為實際的要求，您可以重新設定<xref:System.Net.WebRequest>物件，如有必要。  
  
 您也會處理<xref:System.Windows.Navigation.NavigatingCancelEventArgs>以取消瀏覽，如有需要，藉由設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>設為 true。 如果您取消瀏覽時，會不引發任何其他瀏覽事件。  
  
> [!NOTE]
>  如果您的應用程式裝載在瀏覽器中，您無法防止使用者離開您的應用程式，藉由取消<xref:System.Windows.Navigation.NavigationService.Navigating>事件。  
  
 巡覽器所巡覽之內容的第一個片段之後 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)，每個巡覽離開內容片段新增至巡覽記錄。 如果您要儲存您瀏覽離開內容的狀態資訊時，您可以加入狀態的日誌項目，該內容設定<xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A>與<xref:System.Windows.Navigation.CustomContentState>物件。  
  
> [!NOTE]
>  當<xref:System.Windows.Navigation.NavigationService>引發<xref:System.Windows.Navigation.NavigationService.Navigating>，它也會引發<xref:System.Windows.Application.Navigating?displayProperty=nameWithType>上的事件<xref:System.Windows.Application>物件。  
  
   
  
## Examples  
 下列範例示範如何處理<xref:System.Windows.Navigation.NavigationService.Navigating>來偵測是否已要求重新整理靜態內容，如果是，取消要求。  
  
 <xref:System.Windows.Navigation.NavigationService.Navigating>。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationFailed">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event NavigationFailed As NavigationFailedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationFailedEventHandler ^ NavigationFailed;" />
      <MemberSignature Language="F#" Value="member this.NavigationFailed : System.Windows.Navigation.NavigationFailedEventHandler " Usage="member this.NavigationFailed : System.Windows.Navigation.NavigationFailedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationFailedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在巡覽所要求的內容時，如果發生錯誤，就會發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當可能<xref:System.Net.WebException>或<xref:System.IO.IOException>期間導覽中，會擲回<xref:System.Windows.Navigation.NavigationService.NavigationFailed>就會引發事件。 <xref:System.Windows.Navigation.NavigationService.NavigationFailed> 傳遞<xref:System.Windows.Navigation.NavigationFailedEventArgs>封裝例外狀況，並瀏覽造成例外狀況的詳細資料的相關資訊。  
  
 當例外狀況的失敗之巡覽，結果，而且未進行處理時，列出的順序會引發下列事件：  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>。  
  
-   <xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=nameWithType> 或 <xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=nameWithType>。  
  
-   <xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType>。  
  
-   <xref:System.Windows.Application.DispatcherUnhandledException>。  
  
 如果巡覽器 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>) 由一或多個導覽器`NavigationFailed`就不會引發任何。  
  
   
  
## Examples  
 下列範例示範如何處理<xref:System.Windows.Navigation.NavigationService.NavigationFailed>。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationfailedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationfailedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationProgress">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationProgress As NavigationProgressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationProgressEventHandler ^ NavigationProgress;" />
      <MemberSignature Language="F#" Value="member this.NavigationProgress : System.Windows.Navigation.NavigationProgressEventHandler " Usage="member this.NavigationProgress : System.Windows.Navigation.NavigationProgressEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在下載期間定期發生以提供導覽進度資訊。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> 傳遞<xref:System.Windows.Navigation.NavigationProgressEventArgs>公開下列進度資訊：  
  
-   到目前為止下載的位元組數 (<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>)。  
  
-   若要下載的總位元組數目 (<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>)。  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> 會針對每一個 1024 位元組的內容下載之後，以及引發一次的剩餘的位元組數目是否曾經低於 1024 個位元組。 基於這個理由，處理<xref:System.Windows.Navigation.NavigationService.NavigationProgress>提供實用的方式，來追蹤和顯示目前的下載進度。  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> 不會引發在某些情況下，例如當相同的內容瀏覽至時，或當內容片段巡覽上目前已載入的內容 (也就是值<xref:System.Windows.Navigation.NavigationService.Content%2A>屬性)。  
  
 瀏覽至已編譯的 XAML 資源，最終時<xref:System.Windows.Navigation.NavigationService.NavigationProgress>可能不會引發事件。 這表示，在結束時的下載，最後一個報告，報告<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>值可能不等於<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>值。 處理<xref:System.Windows.Navigation.NavigationService.LoadCompleted>瀏覽已完成時接獲通知的事件。  
  
> [!NOTE]
>  當<xref:System.Windows.Navigation.NavigationService>引發<xref:System.Windows.Navigation.NavigationService.NavigationProgress>，它也會引發<xref:System.Windows.Application.NavigationProgress?displayProperty=nameWithType>上的事件<xref:System.Windows.Application>物件。  
  
   
  
## Examples  
 下列範例示範如何處理<xref:System.Windows.Navigation.NavigationService.NavigationProgress>。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationprogresscode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationprogresscode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="NavigationStopped">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationStopped As NavigationStoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationStoppedEventHandler ^ NavigationStopped;" />
      <MemberSignature Language="F#" Value="member this.NavigationStopped : System.Windows.Navigation.NavigationStoppedEventHandler " Usage="member this.NavigationStopped : System.Windows.Navigation.NavigationStoppedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationStoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當呼叫 <see cref="M:System.Windows.Navigation.NavigationService.StopLoading" /> 方法，或是當目前的巡覽正在進行，但又要求新的巡覽時，就會發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您處理<xref:System.Windows.Navigation.NavigationService.NavigationStopped>如果您需要下載已停止時，探索巡覽要求的相關資訊。 此資訊也可從<xref:System.Windows.Navigation.NavigationEventArgs>傳遞給物件<xref:System.Windows.Navigation.NavigationService.NavigationStopped>事件處理常式，並包含：  
  
-   要求的 URI。  
  
-   [導覽器] (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>)。  
  
-   其他資料，如果藉由呼叫初始化巡覽<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>或<xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>。  
  
> [!NOTE]
>  當<xref:System.Windows.Navigation.NavigationService>引發<xref:System.Windows.Navigation.NavigationService.NavigationStopped>，它也會引發<xref:System.Windows.Application.NavigationStopped?displayProperty=nameWithType>上的事件<xref:System.Windows.Application>物件。  
  
   
  
## Examples  
 下列範例示範如何處理<xref:System.Windows.Navigation.NavigationService.NavigationStopped>。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationstoppedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationstoppedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="navigationService.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重新載入目前的內容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果目前的內容 (值所指定<xref:System.Windows.Navigation.NavigationService.Source%2A>屬性) 瀏覽至 同樣地，<xref:System.Windows.Navigation.NavigationService>不會再次下載內容。 若要強制<xref:System.Windows.Navigation.NavigationService>若要重新瀏覽至內容，呼叫<xref:System.Windows.Navigation.NavigationService.Refresh%2A>。  
  
 請注意，如果同樣地，巡覽至目前的內容是否藉由呼叫<xref:System.Windows.Navigation.NavigationService.Navigate%2A>或<xref:System.Windows.Navigation.NavigationService.Refresh%2A>，新的項目不會加入至巡覽記錄。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
      </Docs>
    </Member>
    <Member MemberName="RemoveBackEntry">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalEntry RemoveBackEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Navigation.JournalEntry RemoveBackEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBackEntry () As JournalEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Navigation::JournalEntry ^ RemoveBackEntry();" />
      <MemberSignature Language="F#" Value="member this.RemoveBackEntry : unit -&gt; System.Windows.Navigation.JournalEntry" Usage="navigationService.RemoveBackEntry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將最新的日誌項目從向後記錄中移除。</summary>
        <returns>向後巡覽記錄中的最新 <see cref="T:System.Windows.Navigation.JournalEntry" /> (若有的話)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果兩個或多個導覽器 (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>) 共用相同的巡覽記錄，可以使用一個瀏覽器<xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>擷取發生在另一個導覽器中瀏覽之向後巡覽記錄項目。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri with get, set" Usage="System.Windows.Navigation.NavigationService.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定目前內容的 URI，或目前正在巡覽之新內容的 URI。</summary>
        <value>A <see cref="T:System.Uri" /> ，其中包含目前的內容或目前正在巡覽之內容的 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您將這個屬性設定為不同的 URI，與目前正在顯示，[導覽器] (<xref:System.Windows.Navigation.NavigationWindow>， <xref:System.Windows.Controls.Frame>) 巡覽至指定的 URI。  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> 設定為載入從 URI 巡覽，除非則會取消巡覽的內容。  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> 可以使用僅限片段的 URI，設定，而且可以設定為`null`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopLoading">
      <MemberSignature Language="C#" Value="public void StopLoading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopLoading() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.StopLoading" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopLoading ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopLoading();" />
      <MemberSignature Language="F#" Value="member this.StopLoading : unit -&gt; unit" Usage="navigationService.StopLoading " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>停止為目前的巡覽要求進一步下載內容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> 可以呼叫只要<xref:System.Windows.Navigation.NavigationService.Navigate%2A>傳回，並停止正在進行子框架中的導覽。  
  
 (<xref:System.Windows.Controls.Frame>)  
  
 呼叫<xref:System.Windows.Navigation.NavigationService.StopLoading%2A>方法會引發<xref:System.Windows.Navigation.NavigationService.NavigationStopped>事件。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> 必須初始化巡覽的相同執行緒上呼叫。  
  
   
  
## Examples  
 下列範例示範如何停止載入。  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowstoploadingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowstoploadingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
  </Members>
</Type>