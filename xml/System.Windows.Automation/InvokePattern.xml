<Type Name="InvokePattern" FullName="System.Windows.Automation.InvokePattern">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="06184164aba4c2ea7b3ec8e0b889cdd58d42b862" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37525730" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InvokePattern : System.Windows.Automation.BasePattern" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InvokePattern extends System.Windows.Automation.BasePattern" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.InvokePattern" />
  <TypeSignature Language="VB.NET" Value="Public Class InvokePattern&#xA;Inherits BasePattern" />
  <TypeSignature Language="C++ CLI" Value="public ref class InvokePattern : System::Windows::Automation::BasePattern" />
  <TypeSignature Language="F#" Value="type InvokePattern = class&#xA;    inherit BasePattern" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.BasePattern</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示啟動時並不會維護狀態，而是會啟始或執行明確之單一動作的控制項。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控制項支援<xref:System.Windows.Automation.InvokePattern>如果相同的行為不會公開透過另一個控制項模式。 比方說，如果<xref:System.Windows.Automation.InvokePattern.Invoke%2A>控制項上的方法會執行相同的動作<xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A>或是<xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A>方法，控制項將不會支援<xref:System.Windows.Automation.InvokePattern>。  
  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 項目，表示控制項，例如核取方塊和選項按鈕，維護狀態，而是支援<xref:System.Windows.Automation.TogglePattern>或<xref:System.Windows.Automation.SelectionItemPattern>。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.Provider.IInvokeProvider" />
  </Docs>
  <Members>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.InvokePattern.Invoke" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke();" />
      <MemberSignature Language="F#" Value="member this.Invoke : unit -&gt; unit" Usage="invokePattern.Invoke " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳送要求以啟動控制項，並啟始其單一明確的動作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫<xref:System.Windows.Automation.InvokePattern.Invoke%2A>應該立即傳回而不會封鎖。 不過，此行為是完全取決於[!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)]提供者實作。 在案例中，呼叫<xref:System.Windows.Automation.InvokePattern.Invoke%2A>造成封鎖的問題 （例如強制回應對話方塊） 個別協助程式執行緒可能需要呼叫方法。  
  
   
  
## Examples  
 在下列範例中<xref:System.Windows.Automation.InvokePattern>控制項模式取自控制項和<xref:System.Windows.Automation.InvokePattern.Invoke%2A>呼叫方法。  
  
 [!code-csharp[UIAInvokePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAInvokePattern_snip/CSharp/UIAInvokePattern_snippets.cs#101)]
 [!code-vb[UIAInvokePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAInvokePattern_snip/VisualBasic/UIAInvokePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">此項目不支援 <see cref="T:System.Windows.Automation.InvokePattern" /> 控制項模式，或是處於隱藏或封鎖狀態。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">項目未啟用。 當使用者介面自動化提供者對 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" /> 屬性已實作自己的處理方式時會引發。</exception>
      </Docs>
    </Member>
    <Member MemberName="InvokedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent InvokedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent InvokedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.InvokePattern.InvokedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InvokedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ InvokedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvokedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.InvokePattern.InvokedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別叫用或啟動控制項時引發的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該使用中的對等欄位<xref:System.Windows.Automation.InvokePatternIdentifiers>。  
  
 <xref:System.Windows.Automation.InvokePattern.InvokedEvent>做為參數傳遞識別碼<xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>。  
  
   
  
## Examples  
 在下列範例中，事件處理常式識別為叫用事件的事件比較<xref:System.Windows.Automation.AutomationEventArgs.EventId%2A>中使用的事件引數<xref:System.Windows.Automation.InvokePattern.InvokedEvent>識別碼欄位。  
  
 [!code-csharp[UIAClient_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#101)]
 [!code-vb[UIAClient_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationPattern Pattern;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationPattern Pattern" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.InvokePattern.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Pattern As AutomationPattern " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationPattern ^ Pattern;" />
      <MemberSignature Language="F#" Value=" staticval mutable Pattern : System.Windows.Automation.AutomationPattern" Usage="System.Windows.Automation.InvokePattern.Pattern" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="T:System.Windows.Automation.InvokePattern" /> 控制項模式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 UI 自動化提供者應該使用中的對等欄位<xref:System.Windows.Automation.InvokePatternIdentifiers>。  
  
 這類模式識別項傳遞給方法<xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>來擷取從指定的控制項模式感興趣的<xref:System.Windows.Automation.AutomationElement>。  
  
   
  
## Examples  
 在下列範例中<xref:System.Windows.Automation.InvokePattern>控制項模式取自控制項和<xref:System.Windows.Automation.InvokePattern.Invoke%2A>呼叫方法。  
  
 [!code-csharp[UIAInvokePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAInvokePattern_snip/CSharp/UIAInvokePattern_snippets.cs#101)]
 [!code-vb[UIAInvokePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAInvokePattern_snip/VisualBasic/UIAInvokePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>