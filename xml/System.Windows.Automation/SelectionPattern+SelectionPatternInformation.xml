<Type Name="SelectionPattern+SelectionPatternInformation" FullName="System.Windows.Automation.SelectionPattern+SelectionPatternInformation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f02d572416e724abb8b95f2ec4389b89e986e615" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37582403" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct SelectionPattern.SelectionPatternInformation" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit SelectionPattern/SelectionPatternInformation extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.SelectionPattern.SelectionPatternInformation" />
  <TypeSignature Language="VB.NET" Value="Public Structure SelectionPattern.SelectionPatternInformation" />
  <TypeSignature Language="C++ CLI" Value="public: value class SelectionPattern::SelectionPatternInformation" />
  <TypeSignature Language="F#" Value="type SelectionPattern.SelectionPatternInformation = struct" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>使用 <see cref="T:System.Windows.Automation.SelectionPattern" /> 物件的 <see cref="P:System.Windows.Automation.SelectionPattern.Current" /> 或 <see cref="P:System.Windows.Automation.SelectionPattern.Cached" /> 存取子，提供該物件的屬性值存取。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CanSelectMultiple">
      <MemberSignature Language="C#" Value="public bool CanSelectMultiple { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelectMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.CanSelectMultiple" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanSelectMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanSelectMultiple { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSelectMultiple : bool" Usage="System.Windows.Automation.SelectionPattern.SelectionPatternInformation.CanSelectMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值指定容器是否允許同時選取多個子項目。</summary>
        <value>如果控制項支援多重選取，則為 <see langword="true" />；否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可以是動態，比方說，在少數情況下，控制項可能會允許多個項目選取，但接著只允許單一選取進行。  
  
   
  
## Examples  
 在下列範例中，<xref:System.Windows.Automation.SelectionPattern>控制項模式取自<xref:System.Windows.Automation.AutomationElement>和後續會用來擷取屬性值。  
  
 [!code-csharp[UIASelectionPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIASelectionPattern_snip/CSharp/UIASelectionPattern_snippets.cs#101)]
 [!code-vb[UIASelectionPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIASelectionPattern_snip/VisualBasic/UIASelectionPattern_snippets.vb#101)]  
[!code-csharp[UIASelectionPattern_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIASelectionPattern_snip/CSharp/UIASelectionPattern_snippets.cs#104)]
[!code-vb[UIASelectionPattern_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIASelectionPattern_snip/VisualBasic/UIASelectionPattern_snippets.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement[] GetSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement[] GetSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.GetSelection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelection () As AutomationElement()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationElement ^&gt; ^ GetSelection();" />
      <MemberSignature Language="F#" Value="member this.GetSelection : unit -&gt; System.Windows.Automation.AutomationElement[]" Usage="selectionPatternInformation.GetSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取選取容器中所有選取的項目。</summary>
        <returns>選取之項目的集合。 預設值為空白陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 在下列範例中，集合<xref:System.Windows.Automation.AutomationElement>會取得代表選取的項目，在 選取容器中。  
  
 [!code-csharp[UIASelectionPattern_snip#1025](~/samples/snippets/csharp/VS_Snippets_Wpf/UIASelectionPattern_snip/CSharp/UIASelectionPattern_snippets.cs#1025)]
 [!code-vb[UIASelectionPattern_snip#1025](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIASelectionPattern_snip/VisualBasic/UIASelectionPattern_snippets.vb#1025)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionRequired">
      <MemberSignature Language="C#" Value="public bool IsSelectionRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.SelectionPattern.SelectionPatternInformation.IsSelectionRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelectionRequired : bool" Usage="System.Windows.Automation.SelectionPattern.SelectionPatternInformation.IsSelectionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指定容器是否需要至少選取一個子項目。</summary>
        <value>如果控制項要求至少要選取一個項目，則此值為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可以是動態的。 例如，控制項的最初狀態可能預設沒有選取任何項目，表示 <xref:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired%2A> 為 `false`。 不過，在選取項目之後，控制項就必須至少有一個項目一律保持為選取。  
  
   
  
## Examples  
 在下列範例中，<xref:System.Windows.Automation.SelectionPattern>控制項模式取自<xref:System.Windows.Automation.AutomationElement>和後續會用來擷取屬性值。  
  
 [!code-csharp[UIASelectionPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIASelectionPattern_snip/CSharp/UIASelectionPattern_snippets.cs#101)]
 [!code-vb[UIASelectionPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIASelectionPattern_snip/VisualBasic/UIASelectionPattern_snippets.vb#101)]  
[!code-csharp[UIASelectionPattern_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIASelectionPattern_snip/CSharp/UIASelectionPattern_snippets.cs#104)]
[!code-vb[UIASelectionPattern_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIASelectionPattern_snip/VisualBasic/UIASelectionPattern_snippets.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>