<Type Name="AutomationElement" FullName="System.Windows.Automation.AutomationElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd63062de3cf7ff6511f6e5b22388b331a982f6d" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53225303" /></Metadata><TypeSignature Language="C#" Value="public sealed class AutomationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AutomationElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.AutomationElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AutomationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class AutomationElement sealed" />
  <TypeSignature Language="F#" Value="type AutomationElement = class" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>代表使用者介面自動化樹狀目錄中的使用者介面自動化項目，並包含可由使用者介面自動化用戶端應用程式當成識別項來使用的值。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>對應到一段[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]，而不論基礎實作 (例如[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]或[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)])。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/65847654-9994-4a9e-b36d-2dd5d998770b">UI 自動化概觀</related>
  </Docs>
  <Members>
    <Member MemberName="AcceleratorKeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AcceleratorKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AcceleratorKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceleratorKeyProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ AcceleratorKeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AcceleratorKeyProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.AcceleratorKeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 快速鍵組合叫用動作。 例如，CTRL + O 通常用來叫用**開啟**檔案 通用對話方塊。 <xref:System.Windows.Automation.AutomationElement> ，具有快速鍵按鍵屬性設定一律會實作<xref:System.Windows.Automation.InvokePattern>類別。  
  
 傳回屬性的值屬於類型<xref:System.String>。 屬性的預設值是空字串。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#124](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#124)]
 [!code-vb[UIAClient_snip#124](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#124)]  
  
 下列範例會擷取目前屬性的值，但如果項目本身不提供屬性值，指定<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#125](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#125)]
 [!code-vb[UIAClient_snip#125](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#125)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="AccessKeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AccessKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AccessKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AccessKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AccessKeyProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ AccessKeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AccessKeyProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.AccessKeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 存取金鑰是功能表、 功能表項目，或啟動附加的功能表函式的按鈕等控制項的標籤文字中的字元。 比方說，如果字母"O"通常用來叫用**File Open**通用對話方塊中，從**檔案**功能表。  
  
 存取金鑰值屬於類型<xref:System.String>，而且包含註冊項目的存取金鑰為字元。 字串的預設值是空字串。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#127](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#127)]
 [!code-vb[UIAClient_snip#127](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#127)]  
  
 下列範例會擷取目前屬性的值，但如果項目本身不提供屬性值，指定<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#128](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#128)]
 [!code-vb[UIAClient_snip#128](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#128)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="AsyncContentLoadedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AsyncContentLoadedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AsyncContentLoadedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AsyncContentLoadedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ AsyncContentLoadedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AsyncContentLoadedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別非同步內容載入期間引發的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 表示非同步內容載入事件發生時，主要是由提供者使用這個事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AsyncContentLoadedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AutomationFocusChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AutomationFocusChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AutomationFocusChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationFocusChangedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ AutomationFocusChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutomationFocusChangedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別變更焦點時引發的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationFocusChangedEventArgs" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771428(v=vs.90)">TrackFocus 範例</related>
      </Docs>
    </Member>
    <Member MemberName="AutomationIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AutomationIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AutomationIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ AutomationIdProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutomationIdProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.AutomationIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別用來識別元素的 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 傳回屬性的值屬於類型<xref:System.String>。 屬性的預設值是空字串。  
  
 供<xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>項目的預期保持不變，不論本機語言應用程式的任何執行個體中。 值應該是唯一的同層級項目，但不是一定是唯一的跨整個桌面。 例如，多個執行個體的應用程式或在 Microsoft Windows 檔案總管中，多個資料夾檢視可能包含具有相同的項目<xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>，例如"SystemMenuBar 」。  
  
 雖然支援<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>一律建議針對較佳的可測試性，這個屬性不是強制性。 它是支援，<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>很適合用於建立測試自動化的指令碼執行，不論 UI 語言。 用戶端應該作任何假設有關<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>s 由其他應用程式。 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>一定不保證能夠穩定跨不同的版本或組建的應用程式。  
  
 執行個體[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]項目中可唯一識別在桌面上，依其<xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>屬性。  
  
> [!NOTE]
>  所有控制項檢視中的使用者介面自動化項目都支援<xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> ，除了最上層的應用程式視窗、衍生自不具識別碼或 x:Uid 之 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 控制項的使用者介面自動化項目，以及和使用者介面自動化項目衍生自不具控制項識別碼之 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 控制項的使用者介面自動化項目以外。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#129](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#129)]
 [!code-vb[UIAClient_snip#129](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#129)]  
  
 下列範例會擷取目前屬性的值，但如果項目本身不提供屬性值，指定<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#130](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#130)]
 [!code-vb[UIAClient_snip#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#130)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.RuntimeIdProperty" />
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
    <Member MemberName="AutomationPropertyChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AutomationPropertyChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AutomationPropertyChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationPropertyChangedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ AutomationPropertyChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutomationPropertyChangedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別屬性變更的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationPropertyChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="BoundingRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty BoundingRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty BoundingRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.BoundingRectangleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BoundingRectangleProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ BoundingRectangleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BoundingRectangleProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.BoundingRectangleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 週框矩形屬於類型<xref:System.Windows.Rect>。 傳回的矩形是以實體螢幕座標表示。 預設值為 <xref:System.Windows.Rect.Empty%2A>。 <xref:System.Windows.Rect.Empty%2A> 如果項目不目前顯示傳回[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]。  
  
 傳回的矩形可以包含不可點選的點。 其中會發生此問題的執行個體另外包括何時[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]項目具有不規則的形狀或可點選區域或遮蔽其他[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]項目。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#131](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#131)]
 [!code-vb[UIAClient_snip#131](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#131)]  
  
 下列範例會擷取目前屬性的值，但如果項目本身不提供屬性值，指定<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#132](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#132)]
 [!code-vb[UIAClient_snip#132](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#132)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4380cad7-e509-448f-b9a5-6de042605fd4">UI 自動化和畫面縮放比例</related>
      </Docs>
    </Member>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement.AutomationElementInformation Cached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElement/AutomationElementInformation Cached" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.Cached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cached As AutomationElement.AutomationElementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement::AutomationElementInformation Cached { System::Windows::Automation::AutomationElement::AutomationElementInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.Cached : System.Windows.Automation.AutomationElement.AutomationElementInformation" Usage="System.Windows.Automation.AutomationElement.Cached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement+AutomationElementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 物件的快取 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 屬性值。</summary>
        <value>包含 <see cref="T:System.Windows.Automation.AutomationElement" /> 之快取屬性值的結構。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 存取子[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]屬性會表示為屬性所傳回的結構<xref:System.Windows.Automation.AutomationElement.Cached%2A>。 您不需要擷取結構;您可以直接存取其成員，如下列範例所示。 可用的屬性和其使用的特定資訊，請參閱<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>。  
  
 若要取得目前的值[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]屬性在這個項目使用<xref:System.Windows.Automation.AutomationElement.Current%2A>屬性。  
  
   
  
## Examples  
 下列範例示範如何<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A>屬性可以快取，並接著藉由擷取<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">沒有快取屬性。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> 的 UI 不再存在。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI 自動化用戶端中的快取</related>
      </Docs>
    </Member>
    <Member MemberName="CachedChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementCollection CachedChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElementCollection CachedChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.CachedChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedChildren As AutomationElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElementCollection ^ CachedChildren { System::Windows::Automation::AutomationElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CachedChildren : System.Windows.Automation.AutomationElementCollection" Usage="System.Windows.Automation.AutomationElement.CachedChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 的快取子元素。</summary>
        <value>子元素的集合。 如果該元素沒有子系，則可以是空集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回集合的檢視由<xref:System.Windows.Automation.CacheRequest.TreeFilter%2A>條件<xref:System.Windows.Automation.CacheRequest>所使用的時這<xref:System.Windows.Automation.AutomationElement>取得物件。  
  
 只有當快取子系的範圍<xref:System.Windows.Automation.CacheRequest>包含<xref:System.Windows.Automation.TreeScope.Subtree>， <xref:System.Windows.Automation.TreeScope.Children>，或<xref:System.Windows.Automation.TreeScope.Descendants>。  
  
 如果<xref:System.Windows.Automation.CacheRequest>指定當孩子們在此層級中，快取，但沒有任何子系，則這個屬性的值為 0。 不過，如果沒有要求的快取子系，在此層級，嘗試擷取此屬性會引發例外狀況。  
  
   
  
## Examples  
 在下列範例中，清單方塊項目取自父視窗項目，同時<xref:System.Windows.Automation.CacheRequest>作用中並<xref:System.Windows.Automation.CacheRequest.TreeScope%2A>是<xref:System.Windows.Automation.TreeScope.Children>。 指定之屬性的子項目 （也就是清單項目） 會儲存在快取，而且可以從擷取<xref:System.Windows.Automation.AutomationElement.CachedChildren%2A>清單方塊。  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> 的 UI 不再存在。</exception>
        <exception cref="T:System.InvalidOperationException">未要求快取此項目的子系。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI 自動化用戶端中的快取</related>
      </Docs>
    </Member>
    <Member MemberName="CachedParent">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement CachedParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElement CachedParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.CachedParent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedParent As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement ^ CachedParent { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CachedParent : System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.CachedParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 的快取父系。</summary>
        <value>父元素。 傳回值可以是<see langword="null" />指定的項目是否沒有父代-例如，如果這個元素是根節點。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 在下列範例中，<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A>快取的屬性清單方塊和它的清單項目。 清單方塊項目位於<xref:System.Windows.Automation.AutomationElement.CachedParent%2A>的每個清單項目元素的屬性。  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">快取不到任何父項目。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> 的 UI 不再存在。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI 自動化用戶端中的快取</related>
      </Docs>
    </Member>
    <Member MemberName="ClassNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ClassNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ClassNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ClassNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClassNameProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ClassNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClassNameProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ClassNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 類別名稱的使用者介面自動化提供者實作而定，因此無法計算時採用標準格式。 不過，如果您知道的類別名稱您可用它來確認您的應用程式運作與預期[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]項目。  
  
 傳回屬性的值屬於類型<xref:System.String>。 預設值為空字串。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#133](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#133)]
 [!code-vb[UIAClient_snip#133](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#133)]  
  
 下列範例會擷取目前屬性的值，但如果項目本身不提供屬性值，指定<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#134](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#134)]
 [!code-vb[UIAClient_snip#134](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#134)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="ClickablePointProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ClickablePointProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ClickablePointProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ClickablePointProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickablePointProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ClickablePointProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClickablePointProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ClickablePointProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別可按點屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 <xref:System.Windows.Automation.AutomationElement>不可點選如果它完全遮住其他視窗。  
  
 傳回屬性的值屬於類型<xref:System.Windows.Point>。 預設值為 `null`。  
  
 傳回的值是在實體的螢幕座標。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。  
  
 [!code-csharp[UIAClient_snip#135](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#135)]
 [!code-vb[UIAClient_snip#135](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#135)]  
  
 下列範例會擷取目前屬性的值，但如果項目本身不提供屬性值，指定<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#166](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#166)]
 [!code-vb[UIAClient_snip#166](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#166)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4380cad7-e509-448f-b9a5-6de042605fd4">UI 自動化和畫面縮放比例</related>
      </Docs>
    </Member>
    <Member MemberName="ControlTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ControlTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ControlTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ControlTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ControlTypeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ControlTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ControlTypeProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ControlTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 屬性的預設值是 <xref:System.Windows.Automation.ControlType.Custom>  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#136](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#136)]
 [!code-vb[UIAClient_snip#136](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#136)]  
  
 下列範例會擷取目前屬性的值，但如果項目本身不提供屬性值，指定<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#137](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#137)]
 [!code-vb[UIAClient_snip#137](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#137)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/261dcc59-3a62-4e40-91dd-63ff9d2241c0">UI 自動化控制項類型</related>
      </Docs>
    </Member>
    <Member MemberName="CultureProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CultureProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CultureProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.CultureProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CultureProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ CultureProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CultureProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.CultureProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別文化特性屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 在 Windows Presentation Foundation (WPF) 架構中，報告的預設值一律會`en-US`因為.NET Framework 會自動預設為英文。 若為其他使用者介面 (UI) 架構，必須明確設定此屬性，或它不會公開。  
  
 此屬性會針對每個控制項，可以存在，但通常才可使用應用程式層級。  
  
 傳回屬性的值屬於類型<xref:System.Globalization.CultureInfo>。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。  
  
 [!code-csharp[UIAClient_snip#138](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#138)]
 [!code-vb[UIAClient_snip#138](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#138)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement.AutomationElementInformation Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElement/AutomationElementInformation Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As AutomationElement.AutomationElementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement::AutomationElementInformation Current { System::Windows::Automation::AutomationElement::AutomationElementInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Automation.AutomationElement.AutomationElementInformation" Usage="System.Windows.Automation.AutomationElement.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement+AutomationElementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Automation.AutomationElement" /> 目前的屬性值。</summary>
        <value>包含目前屬性值的結構。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 存取子[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]屬性會表示為屬性所傳回的結構<xref:System.Windows.Automation.AutomationElement.Current%2A>。 您不需要擷取結構;您可以直接存取其成員，如下列範例所示。 可用的屬性和其使用的特定資訊，請參閱<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>。  
  
 若要取得的快的取值[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]在這個項目上的屬性，請使用<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
   
  
## Examples  
 下列範例顯示如何<xref:System.Windows.Automation.AutomationElement.Current%2A>屬性用來擷取清單中已選取項目的名稱。  
  
 [!code-csharp[UIAClient_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient_snip#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> 的 UI 不再存在。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="automationElement.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要比較的 <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
        <summary>判斷指定的 <see cref="T:System.Windows.Automation.AutomationElement" /> 是否具有與此 <see cref="T:System.Windows.Automation.AutomationElement" /> 相同的值。</summary>
        <returns><see langword="true" /> 表示指定的 <see cref="T:System.Windows.Automation.AutomationElement" /> 與此 <see cref="T:System.Windows.Automation.AutomationElement" /> 相同；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 比較為相等的兩個項目可能包含不同的快取的資訊的不同點的時間。 相等檢查只測試<xref:System.Windows.Automation.AutomationElement>物件參考相同的基礎使用者介面項目，; 亦即，它們有相同的執行階段識別項。  
  
 這個方法就相當於等號比較運算子，這也會比較執行階段識別項。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AutomationElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AutomationElement ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="automationElement.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementCollection FindAll (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElementCollection FindAll(valuetype System.Windows.Automation.TreeScope scope, class System.Windows.Automation.Condition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElementCollection ^ FindAll(System::Windows::Automation::TreeScope scope, System::Windows::Automation::Condition ^ condition);" />
      <MemberSignature Language="F#" Value="member this.FindAll : System.Windows.Automation.TreeScope * System.Windows.Automation.Condition -&gt; System.Windows.Automation.AutomationElementCollection" Usage="automationElement.FindAll (scope, condition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Windows.Automation.TreeScope" />
        <Parameter Name="condition" Type="System.Windows.Automation.Condition" />
      </Parameters>
      <Docs>
        <param name="scope">指定搜尋範圍之值的位元組合。</param>
        <param name="condition">包含符合準則的物件。</param>
        <summary>傳回滿足指定條件的所有 <see cref="T:System.Windows.Automation.AutomationElement" /> 物件。</summary>
        <returns>符合指定條件的物件集合。 如果沒有符合的成員，則傳回空白集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 搜尋範圍是相對於呼叫該方法的項目。 在樹狀目錄中所發生的順序，會傳回元素。  
  
 搜尋的桌面上的最上層視窗時，務必指定<xref:System.Windows.Automation.TreeScope.Children>中`scope`，而非<xref:System.Windows.Automation.TreeScope.Descendants>。 在桌面的整個樹狀子目錄搜尋，可以逐一查看數千個項目，會導致堆疊溢位。  
  
 如果您的用戶端應用程式可能會嘗試尋找的項目在其自己的使用者介面中，您必須讓所有[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]個別執行緒上呼叫。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Windows.Automation.AutomationElement.FindAll%2A>找出所有已啟用 視窗中的按鈕。  
  
 [!code-csharp[UIAClient_snip#116](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#116)]
 [!code-vb[UIAClient_snip#116](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#116)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0ab8d42c-5b8b-481b-b788-2caecc2f0191">UI 自動化執行緒問題</related>
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement FindFirst (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement FindFirst(valuetype System.Windows.Automation.TreeScope scope, class System.Windows.Automation.Condition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ FindFirst(System::Windows::Automation::TreeScope scope, System::Windows::Automation::Condition ^ condition);" />
      <MemberSignature Language="F#" Value="member this.FindFirst : System.Windows.Automation.TreeScope * System.Windows.Automation.Condition -&gt; System.Windows.Automation.AutomationElement" Usage="automationElement.FindFirst (scope, condition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Windows.Automation.TreeScope" />
        <Parameter Name="condition" Type="System.Windows.Automation.Condition" />
      </Parameters>
      <Docs>
        <param name="scope">指定搜尋範圍之值的位元組合。</param>
        <param name="condition">包含符合準則的物件。</param>
        <summary>傳回符合指定條件的第一個子項目或子系元素。</summary>
        <returns>符合條件的第一個元素，沒有符合的元素時則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 搜尋範圍是相對於呼叫該方法的項目。  
  
 搜尋的最上層的視窗在桌面時，務必指定<xref:System.Windows.Automation.TreeScope.Children>中`scope`，而非<xref:System.Windows.Automation.TreeScope.Descendants>。 在桌面的整個樹狀子目錄搜尋，可以逐一查看數千個項目，會導致堆疊溢位。  
  
 如果您的用戶端應用程式可能會嘗試尋找的項目在其自己的使用者介面中，您必須讓所有[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]個別執行緒上呼叫。  
  
   
  
## Examples  
 下列範例顯示如何尋找子視窗從其識別項。  
  
 [!code-csharp[UIAClient_snip#110](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#110)]
 [!code-vb[UIAClient_snip#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#110)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0ab8d42c-5b8b-481b-b788-2caecc2f0191">UI 自動化執行緒問題</related>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FocusedElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.AutomationElement FocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FocusedElement As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::AutomationElement ^ FocusedElement { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusedElement : System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.FocusedElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前具有焦點的 <see cref="T:System.Windows.Automation.AutomationElement" />。</summary>
        <value>取得具有焦點的 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 元素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您的用戶端應用程式可能會嘗試尋找的項目在其自己的使用者介面中，您必須讓所有[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]個別執行緒上呼叫。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/0ab8d42c-5b8b-481b-b788-2caecc2f0191">UI 自動化執行緒問題</related>
      </Docs>
    </Member>
    <Member MemberName="FrameworkIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty FrameworkIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty FrameworkIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.FrameworkIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FrameworkIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ FrameworkIdProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FrameworkIdProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.FrameworkIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.String>。 預設值為空字串。  
  
 這個屬性可讓特殊的情況下套用至整個 UI 架構的應用程式。 屬性值的範例為"Win32"、"Win32"、"winform"和"DirectUI"。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。  
  
 [!code-csharp[UIAClient_snip#139](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#139)]
 [!code-vb[UIAClient_snip#139](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#139)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromHandle (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromHandle(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (hwnd As IntPtr) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::AutomationElement ^ FromHandle(IntPtr hwnd);" />
      <MemberSignature Language="F#" Value="static member FromHandle : nativeint -&gt; System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.FromHandle hwnd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 元素的控制代碼。</param>
        <summary>針對指定之視窗控制代碼所參考的[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 項目，擷取一個新的 <see cref="T:System.Windows.Automation.AutomationElement" /> 物件。</summary>
        <returns>由 <paramref name="hwnd" /> 識別之 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 項目的 <see cref="T:System.Windows.Automation.AutomationElement" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)" />
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
    <Member MemberName="FromLocalProvider">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromLocalProvider (System.Windows.Automation.Provider.IRawElementProviderSimple localImpl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromLocalProvider(class System.Windows.Automation.Provider.IRawElementProviderSimple localImpl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromLocalProvider (localImpl As IRawElementProviderSimple) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::AutomationElement ^ FromLocalProvider(System::Windows::Automation::Provider::IRawElementProviderSimple ^ localImpl);" />
      <MemberSignature Language="F#" Value="static member FromLocalProvider : System.Windows.Automation.Provider.IRawElementProviderSimple -&gt; System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.FromLocalProvider localImpl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localImpl" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
      </Parameters>
      <Docs>
        <param name="localImpl">提供者物件。</param>
        <summary>從本機 <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> 實作擷取新的 <see cref="T:System.Windows.Automation.AutomationElement" /> 物件。</summary>
        <returns><see cref="T:System.Windows.Automation.AutomationElement" />，代表由提供者物件提供的元素。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可能使用的用戶端協助程式庫，若要啟用其呼叫端存取自己的原生項目類型。 例如，[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]會在內部使用這個方法，以便它可以傳回<xref:System.Windows.Automation.AutomationElement>想要取得的用戶端[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]項目，直接從<xref:System.Windows.UIElement>。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
    <Member MemberName="FromPoint">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromPoint (System.Windows.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromPoint(valuetype System.Windows.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromPoint (pt As Point) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::AutomationElement ^ FromPoint(System::Windows::Point pt);" />
      <MemberSignature Language="F#" Value="static member FromPoint : System.Windows.Point -&gt; System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.FromPoint pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="pt">要尋找 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 元素的桌面實際螢幕座標。</param>
        <summary>針對位於桌面上所指定點的 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 項目擷取新的 <see cref="T:System.Windows.Automation.AutomationElement" /> 物件。</summary>
        <returns>位於指定點的 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.FromPoint%2A> 最接近的根項目邏輯樹狀結構中傳回的項目。  
  
 如果您的用戶端應用程式可能會嘗試尋找的項目在其自己的使用者介面中，您必須讓所有[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]個別執行緒上呼叫。  
  
 雖然傳回週框矩形內的重點是<xref:System.Windows.Automation.AutomationElement>，就不一定要是控制項可點選的一部分。 比方說，圓形按鈕可能無法可點選接近其周框的角落的其中一個。  
  
   
  
## Examples  
 下列範例會擷取<xref:System.Windows.Automation.AutomationElement>中系統游標的位置。  
  
 [!code-csharp[UIAClient_snip#181](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#181)]
 [!code-vb[UIAClient_snip#181](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#181)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)" />
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4380cad7-e509-448f-b9a5-6de042605fd4">UI 自動化和畫面縮放比例</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0ab8d42c-5b8b-481b-b788-2caecc2f0191">UI 自動化執行緒問題</related>
      </Docs>
    </Member>
    <Member MemberName="GetCachedPattern">
      <MemberSignature Language="C#" Value="public object GetCachedPattern (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPattern(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedPattern (pattern As AutomationPattern) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCachedPattern(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberSignature Language="F#" Value="member this.GetCachedPattern : System.Windows.Automation.AutomationPattern -&gt; obj" Usage="automationElement.GetCachedPattern pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">要擷取之模式的識別碼。</param>
        <summary>從這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 的快取擷取指定的模式。</summary>
        <returns>代表所指定模式的物件。 如果沒有符合的模式，會傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A> 從快取擷取指定的模式。 若要擷取目前的物件，指定的模式，請呼叫<xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>。  
  
 如果要求的模式未先前快取，則這個方法會擲回例外狀況。  
  
   
  
## Examples  
 下列範例示範如何快取，並擷取模式。  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">快取內沒有要求的模式，或項目不支援此模式。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> 的 UI 不再存在。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI 自動化用戶端中的快取</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCachedPropertyValue">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從 <see cref="T:System.Windows.Automation.AutomationElement" /> 擷取所指定屬性的已快取值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> 指定的屬性擷取的快取<xref:System.Windows.Automation.AutomationElement>。 若要擷取目前的屬性，請呼叫<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.AutomationElement.Cached" />
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI 自動化用戶端中的快取</related>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">用戶端的 UI 自動化屬性</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCachedPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPropertyValue(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedPropertyValue (property As AutomationProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCachedPropertyValue(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.GetCachedPropertyValue : System.Windows.Automation.AutomationProperty -&gt; obj" Usage="automationElement.GetCachedPropertyValue property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">要擷取之屬性的識別碼。</param>
        <summary>從這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 的快取擷取所指定屬性的值。 對於目標 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 元素未明確支援的屬性，會傳回屬性類型的適當預設值。</summary>
        <returns>包含所指定屬性之值的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果項目本身的使用者介面自動化提供者支援的屬性，則會傳回屬性的值。 預設屬性，否則為所指定[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]會傳回。 預設屬性的資訊，請參閱的屬性識別碼欄位<xref:System.Windows.Automation.AutomationElement>，例如<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>。  
  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> 從指定的屬性會擷取<xref:System.Windows.Automation.AutomationElement>的快取。 若要擷取目前的物件，指定的屬性呼叫<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>。  
  
 如果要求的屬性未先前快取，則這個方法會擲回例外狀況。  
  
   
  
## Examples  
 以下顯示如何使用這個方法，來擷取快取的屬性。  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">要求的屬性不在快取中。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> 的 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 不再存在。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCachedPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPropertyValue(class System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedPropertyValue (property As AutomationProperty, ignoreDefaultValue As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCachedPropertyValue(System::Windows::Automation::AutomationProperty ^ property, bool ignoreDefaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetCachedPropertyValue : System.Windows.Automation.AutomationProperty * bool -&gt; obj" Usage="automationElement.GetCachedPropertyValue (property, ignoreDefaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
        <Parameter Name="ignoreDefaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">要擷取之屬性的識別碼。</param>
        <param name="ignoreDefaultValue">一個值，它指定若不支援指定的屬性時是否要忽略預設值。</param>
        <summary>從這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 的快取擷取所指定屬性的值，選擇忽略任何預設屬性。</summary>
        <returns>包含所指定屬性的物件，或者若元素未提供值且 <paramref name="ignoreDefaultValue" /> 為 <see langword="true" />，則是 <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> 擷取指定之的屬性的快取<xref:System.Windows.Automation.AutomationElement>。 若要擷取目前的屬性，請呼叫<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>。  
  
 傳遞`false`中`ignoreDefaultValue`相當於呼叫<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=nameWithType>。  
  
 如果項目本身的使用者介面自動化提供者支援的屬性，則會傳回屬性的值。 否則，如果`ignoreDefaultValue`已`false`，由指定的預設屬性[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]會傳回。 預設屬性的資訊，請參閱的屬性識別碼欄位<xref:System.Windows.Automation.AutomationElement>，例如<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>。  
  
 如果要求的屬性未先前快取，則這個方法會擲回例外狀況。  
  
   
  
## Examples  
 下列範例會示範如何使用這個方法，來擷取快取的屬性。  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">要求的屬性不在快取中。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> 的 UI 不再存在。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetClickablePoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetClickablePoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point GetClickablePoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClickablePoint () As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point GetClickablePoint();" />
      <MemberSignature Language="F#" Value="member this.GetClickablePoint : unit -&gt; System.Windows.Point" Usage="automationElement.GetClickablePoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在可點按的 <see cref="T:System.Windows.Automation.AutomationElement" /> 上擷取點。</summary>
        <returns>可由用戶端使用以在此元素上按一下之點的實際螢幕座標。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>不可點選如果它完全遮住其他視窗。  
  
 <xref:System.Windows.Automation.AutomationElement>時可點按它符合下列所有條件：  
  
-   以程式設計的方式顯示，並提供[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]樹狀目錄中。  
  
-   它是完整捲動到檢視範圍內與其父容器中，如果有的話。 如果項目會將其裁剪，則不是可點按的保證。  
  
-   任何其他 UI 項目未遮蔽的項目。 如果項目會變暗是 UI 項目，其上階以外，它可能不能按。  
  
-   包含項目的視窗本身必須為可點按。 例如，視窗不可點選如果包含的視窗是完全透明。 按下滑鼠會按一下視窗下方的視窗，讓透明視窗內的任何控制項將不會傳回可點選的點。  
  
-   如果項目 （例如清單或樹狀結構檢視） 的容器，它必須有一個點，當按下會導致焦點控制項的背景。 如果容器控制項的每個部分子系項目所佔用的它不可點選。  
  
 沒有控制項將會執行任何動作時按下定義的點保證為可點按的 UI 自動化提供者。 請考慮改為使用在控制項上執行動作的控制項模式。  
  
   
  
## Examples  
 下列程式碼會擷取控制項可點選的點，並將系統游標移至該點。  
  
 [!code-csharp[UIAClient_snip#179](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#179)]
 [!code-vb[UIAClient_snip#179](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#179)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.NoClickablePointException">沒有可點選的點。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> 的 UI 不再存在。</exception>
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
        <related type="Article" href="https://msdn.microsoft.com/library/4380cad7-e509-448f-b9a5-6de042605fd4">UI 自動化和畫面縮放比例</related>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPattern">
      <MemberSignature Language="C#" Value="public object GetCurrentPattern (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPattern(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPattern (pattern As AutomationPattern) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCurrentPattern(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentPattern : System.Windows.Automation.AutomationPattern -&gt; obj" Usage="automationElement.GetCurrentPattern pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">要擷取之模式的識別碼。</param>
        <summary>在此 <see cref="T:System.Windows.Automation.AutomationElement" /> 上擷取指定的模式物件。</summary>
        <returns>模式物件 (若指定的模式受 <see cref="T:System.Windows.Automation.AutomationElement" /> 支援)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> 取得指定的模式，在呼叫時，根據其可用性。  
  
 針對某些形式的[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]，這個方法會產生跨處理序的效能負擔。 應用程式可以快取模式，並加以使用來擷取額外負荷專注<xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>。  
  
   
  
## Examples  
 下列範例示範如何使用此方法來擷取<xref:System.Windows.Automation.SelectionItemPattern>，然後用來在清單方塊中選取的項目。  
  
 [!code-csharp[UIAClient_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#103)]
 [!code-vb[UIAClient_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#103)]  
  
> [!NOTE]
>  針對經常重複工作，例如範例中，就會更有效率快取模式，然後使用<xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">項目不支援此模式。</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> 的 UI 不再存在。</exception>
        <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md">用戶端的 UI 自動化控制項模式</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentPropertyValue">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從 <see cref="T:System.Windows.Automation.AutomationElement" /> 擷取所指定屬性的目前值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所傳回的值<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>方法是在呼叫時的最新。 值之後可以變更與互動的其他應用程式[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]。  
  
 針對某些形式的[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]，這個方法會產生跨處理序的效能負擔。 應用程式可以快取屬性，並加以使用來擷取額外負荷專注<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.AutomationElement.Current" />
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">用戶端的 UI 自動化屬性</related>
        <related type="Article" href="https://msdn.microsoft.com/library/a6c31d7b-b33e-49b3-b5c1-31a345f9b7c8">UI 自動化屬性概觀</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPropertyValue(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPropertyValue (property As AutomationProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCurrentPropertyValue(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentPropertyValue : System.Windows.Automation.AutomationProperty -&gt; obj" Usage="automationElement.GetCurrentPropertyValue property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">指定要擷取之屬性的 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 屬性識別碼。</param>
        <summary>在此 <see cref="T:System.Windows.Automation.AutomationElement" /> 上擷取所指定屬性的值。 對於目標 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 元素未明確支援的屬性，會傳回屬性類型的適當預設值。</summary>
        <returns>包含所指定屬性之值的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所傳回的值<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>方法是在呼叫時的最新。 值之後可以變更與互動的其他應用程式[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]。  
  
 如果項目本身的使用者介面自動化提供者支援的屬性，則會傳回屬性的值。 預設屬性，否則為所指定[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]會傳回。 預設屬性的資訊，請參閱的屬性識別碼欄位<xref:System.Windows.Automation.AutomationElement>，例如<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>。  
  
 針對某些形式的[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]，這個方法會產生跨處理序的效能負擔。 涉及額外負荷，藉由快取屬性，並加以使用來擷取<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>。  
  
   
  
## Examples  
 下列範例會擷取目前的值<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A>屬性。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#126](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#126)]
 [!code-vb[UIAClient_snip#126](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#126)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> 的 UI 不再存在。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPropertyValue(class System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPropertyValue (property As AutomationProperty, ignoreDefaultValue As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCurrentPropertyValue(System::Windows::Automation::AutomationProperty ^ property, bool ignoreDefaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentPropertyValue : System.Windows.Automation.AutomationProperty * bool -&gt; obj" Usage="automationElement.GetCurrentPropertyValue (property, ignoreDefaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
        <Parameter Name="ignoreDefaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">指定要擷取之屬性的 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 屬性識別碼。</param>
        <param name="ignoreDefaultValue">一個值，它指定若支援指定的屬性時是否應該忽略預設值。</param>
        <summary>在此 <see cref="T:System.Windows.Automation.AutomationElement" /> 上擷取所指定屬性的值，選擇性忽略任何預設屬性。</summary>
        <returns>包含所指定屬性的物件，或者若元素未提供值且 <paramref name="ignoreDefaultValue" /> 為 <see langword="true" />，則是 <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳遞`false`中`ignoreDefaultValue`相當於呼叫<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=nameWithType>。  
  
 如果項目本身的使用者介面自動化提供者支援的屬性，則會傳回屬性的值。 否則，如果`ignoreDefaultValue`已`false`，由指定的預設屬性[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]會傳回。 預設屬性的資訊，請參閱的屬性識別碼欄位<xref:System.Windows.Automation.AutomationElement>，例如<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>。  
  
 所傳回的值<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>方法是在呼叫時的最新。 值之後可以變更與互動的其他應用程式[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]。  
  
 針對某些形式的[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]，這個方法會產生跨處理序的效能負擔。 應用程式可以快取屬性，並加以使用來擷取額外負荷專注<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>。  
  
   
  
## Examples  
 下列範例會擷取目前的值<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A>屬性，但指定的項目本身不提供屬性值，如果<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> 的 UI 不再存在。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="automationElement.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取此 <see cref="T:System.Windows.Automation.AutomationElement" /> 的雜湊碼。</summary>
        <returns>32 位元帶正負號的整數雜湊碼。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeId">
      <MemberSignature Language="C#" Value="public int[] GetRuntimeId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetRuntimeId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetRuntimeId" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeId () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetRuntimeId();" />
      <MemberSignature Language="F#" Value="member this.GetRuntimeId : unit -&gt; int[]" Usage="automationElement.GetRuntimeId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取已指派給 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 項目的唯一識別碼。</summary>
        <returns>代表執行階段識別碼的整數陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 只保證是唯一的識別項[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]它所產生的桌面。 經過一段時間就可以重複使用識別碼。  
  
 執行階段識別項的格式可能會在未來版本中變更。 傳回的識別項應該視為不透明值，並僅用於比較;例如，若要判斷是否<xref:System.Windows.Automation.AutomationElement>快取中。  
  
   
  
## Examples  
 下列範例示範如何擷取執行階段識別項的<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#111](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#111)]
 [!code-vb[UIAClient_snip#111](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#111)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> 的 UI 不再存在。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedPatterns">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationPattern[] GetSupportedPatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationPattern[] GetSupportedPatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetSupportedPatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSupportedPatterns () As AutomationPattern()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationPattern ^&gt; ^ GetSupportedPatterns();" />
      <MemberSignature Language="F#" Value="member this.GetSupportedPatterns : unit -&gt; System.Windows.Automation.AutomationPattern[]" Usage="automationElement.GetSupportedPatterns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取此 <see cref="T:System.Windows.Automation.AutomationElement" /> 支援的控制項模式。</summary>
        <returns><see cref="T:System.Windows.Automation.AutomationPattern" /> 物件陣列，代表支援的控制項模式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法通常會用於偵錯。 呼叫它需要大量處理，因為它會查詢<xref:System.Windows.Automation.AutomationElement>每個可能的模式。 通常您會使用<xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>來擷取從特定的控制項模式<xref:System.Windows.Automation.AutomationElement>。 若要確認是否支援特定的模式，請檢查適當的屬性;比方說， <xref:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty>。  
  
   
  
## Examples  
 下列範例示範如何擷取所支援的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#114](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#114)]
 [!code-vb[UIAClient_snip#114](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#114)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md">用戶端的 UI 自動化控制項模式</related>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedProperties">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationProperty[] GetSupportedProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationProperty[] GetSupportedProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetSupportedProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSupportedProperties () As AutomationProperty()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationProperty ^&gt; ^ GetSupportedProperties();" />
      <MemberSignature Language="F#" Value="member this.GetSupportedProperties : unit -&gt; System.Windows.Automation.AutomationProperty[]" Usage="automationElement.GetSupportedProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取元素支援之屬性的識別碼。</summary>
        <returns>支援之屬性識別碼的陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回的陣列識別此項目; 所支援的所有屬性不過，它也可以包含重複的項目或屬性包含`null`或空值。 大部分用途而言最好使用<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>來判斷是否目前支援的屬性，以及取得其目前的值。  
  
   
  
## Examples  
 下列範例示範如何擷取支援的屬性<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#115](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#115)]
 [!code-vb[UIAClient_snip#115](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#115)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">用戶端的 UI 自動化屬性</related>
      </Docs>
    </Member>
    <Member MemberName="GetUpdatedCache">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetUpdatedCache (System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetUpdatedCache(class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdatedCache (request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetUpdatedCache(System::Windows::Automation::CacheRequest ^ request);" />
      <MemberSignature Language="F#" Value="member this.GetUpdatedCache : System.Windows.Automation.CacheRequest -&gt; System.Windows.Automation.AutomationElement" Usage="automationElement.GetUpdatedCache request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="request">要包含在已更新之快取中的模式與屬性。</param>
        <summary>擷取具有已更新之快取的新的 <see cref="T:System.Windows.Automation.AutomationElement" />。</summary>
        <returns>具有已更新之快取的新 <see cref="T:System.Windows.Automation.AutomationElement" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 原始<xref:System.Windows.Automation.AutomationElement>會保持不變。 <xref:System.Windows.Automation.AutomationElement.GetUpdatedCache%2A> 傳回新<xref:System.Windows.Automation.AutomationElement>，它會參考相同[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]且具有相同<xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>。  
  
   
  
## Examples  
 下列範例會示範如何快取可能會更新在下拉式方塊中的選取項目變更時。  
  
 [!code-csharp[UIAClient_snip#109](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#109)]
 [!code-vb[UIAClient_snip#109](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#109)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI 自動化用戶端中的快取</related>
      </Docs>
    </Member>
    <Member MemberName="HasKeyboardFocusProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty HasKeyboardFocusProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty HasKeyboardFocusProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasKeyboardFocusProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ HasKeyboardFocusProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HasKeyboardFocusProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#140](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#140)]
 [!code-vb[UIAClient_snip#140](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#140)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="HelpTextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty HelpTextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty HelpTextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.HelpTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HelpTextProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ HelpTextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HelpTextProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.HelpTextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 這項資訊通常被取自提供者所指定的工具提示。  
  
 傳回屬性的值屬於類型<xref:System.String>。 屬性的預設值是空字串。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#126](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#126)]
 [!code-vb[UIAClient_snip#126](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#126)]  
  
 下列範例會擷取目前屬性的值，但如果項目本身不提供屬性值，指定<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsContentElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsContentElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsContentElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsContentElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsContentElementProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsContentElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsContentElementProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsContentElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 內容檢視[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]樹狀目錄中提供的檢視[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]其中只包含代表資料中的項目[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]。  
  
 項目必須是要能夠保存內容控制項。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`true`。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#141](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#141)]
 [!code-vb[UIAClient_snip#141](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#141)]  
  
 下列範例會擷取目前屬性的值，但如果項目本身不提供屬性值，指定<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#142](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#142)]
 [!code-vb[UIAClient_snip#142](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#142)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ContentViewCondition" />
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsControlElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsControlElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsControlElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsControlElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsControlElementProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsControlElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsControlElementProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsControlElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 控制項是使用者察覺到做為互動式或包含的資訊中的項目[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`true`。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#143](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#143)]
 [!code-vb[UIAClient_snip#143](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#143)]  
  
 下列範例會擷取目前屬性的值，但如果項目本身不提供屬性值，指定<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#144](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#144)]
 [!code-vb[UIAClient_snip#144](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#144)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ControlViewCondition" />
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsDockPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsDockPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsDockPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDockPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsDockPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDockPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.DockPattern" /> 控制項模式的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會確定是否支援指定的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" /> 屬性，指出是否啟用 <see cref="T:System.Windows.Automation.AutomationElement" /> 所參考的 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
 控制項的啟用的狀態時`false`，它會假設，子控制項也不啟用。 當控制項的父代的狀態變更時，您不應該預期來自子元素的屬性變更事件。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#146](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#146)]
 [!code-vb[UIAClient_snip#146](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#146)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsExpandCollapsePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsExpandCollapsePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsExpandCollapsePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsExpandCollapsePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsExpandCollapsePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsExpandCollapsePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.ExpandCollapsePattern" /> 控制項模式的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會擷取值，指定是否支援指定的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsGridItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsGridItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsGridItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsGridItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsGridItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsGridItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.GridItemPattern" /> 控制項模式的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會確定是否支援指定的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsGridPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsGridPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsGridPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsGridPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsGridPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsGridPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.GridPattern" /> 控制項模式的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會確定是否支援指定的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsInvokePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsInvokePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsInvokePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInvokePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsInvokePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsInvokePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.InvokePattern" /> 控制項模式的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會確定是否支援指定的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsItemContainerPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsItemContainerPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsItemContainerPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsItemContainerPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsItemContainerPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsItemContainerPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.ItemContainerPattern" /> 控制項模式的屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsKeyboardFocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsKeyboardFocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsKeyboardFocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 此屬性會提供正常運作所需的資訊<xref:System.Windows.Automation.AutomationElement.SetFocus%2A>方法。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#147](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#147)]
 [!code-vb[UIAClient_snip#147](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#147)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsMultipleViewPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsMultipleViewPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsMultipleViewPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMultipleViewPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsMultipleViewPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMultipleViewPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.MultipleViewPattern" /> 控制項模式的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會確定是否支援指定的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsOffscreenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsOffscreenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsOffscreenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsOffscreenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOffscreenProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsOffscreenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsOffscreenProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsOffscreenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" /> 屬性，該屬性表示是否可在螢幕上看見[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 傳回的值屬於類型<xref:System.Boolean>，而且預設值為`false`。  
  
 如需有關這個屬性時`true`，請參閱<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A>。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#148](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#148)]
 [!code-vb[UIAClient_snip#148](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#148)]  
  
 下列範例會擷取目前屬性的值，但如果項目本身不提供屬性值，指定<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#149](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#149)]
 [!code-vb[UIAClient_snip#149](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#149)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsPasswordProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsPasswordProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsPasswordProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsPasswordProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPasswordProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsPasswordProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsPasswordProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsPasswordProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 這個屬性的傳回值是<xref:System.Boolean>。 它會傳回`true`表示的內容是受保護，否則為`false`。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。  
  
 [!code-csharp[UIAClient_snip#150](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#150)]
 [!code-vb[UIAClient_snip#150](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#150)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsRangeValuePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsRangeValuePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsRangeValuePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsRangeValuePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsRangeValuePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsRangeValuePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.RangeValuePattern" /> 控制項模式的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會確定是否支援指定的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsRequiredForFormProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsRequiredForFormProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsRequiredForFormProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsRequiredForFormProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsRequiredForFormProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsRequiredForFormProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsRequiredForFormProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsRequiredForFormProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 這個屬性傳回的值屬於類型<xref:System.Boolean>，而且預設值為`false`。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#151](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#151)]
 [!code-vb[UIAClient_snip#151](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#151)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsScrollItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsScrollItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsScrollItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsScrollItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsScrollItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsScrollItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別的屬性指出此 <see cref="T:System.Windows.Automation.AutomationElement" /> 是否有 <see cref="T:System.Windows.Automation.ScrollItemPattern" /> 控制項模式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會確定是否支援指定的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsScrollPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsScrollPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsScrollPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsScrollPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsScrollPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsScrollPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.ScrollPattern" /> 控制項模式的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會確定是否支援指定的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSelectionItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSelectionItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSelectionItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSelectionItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.SelectionItemPattern" /> 控制項模式的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會確定是否支援指定的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSelectionPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSelectionPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSelectionPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSelectionPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.SelectionPattern" /> 控制項模式的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會確定是否支援指定的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronizedInputPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSynchronizedInputPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSynchronizedInputPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSynchronizedInputPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSynchronizedInputPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSynchronizedInputPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.SynchronizedInputPattern" /> 控制項模式的屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTableItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTableItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTableItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTableItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTableItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTableItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.TableItemPattern" /> 控制項模式的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會確定是否支援指定的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsTablePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTablePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTablePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTablePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTablePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTablePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.TablePattern" /> 控制項模式的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會確定是否支援指定的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsTextPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTextPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTextPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTextPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTextPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTextPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.TextPattern" /> 控制項模式的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會確定是否支援指定的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsTogglePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTogglePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTogglePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTogglePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTogglePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTogglePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.TogglePattern" /> 控制項模式的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會確定是否支援指定的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsTransformPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTransformPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTransformPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTransformPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTransformPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTransformPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.TransformPattern" /> 控制項模式的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會確定是否支援指定的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsValuePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsValuePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsValuePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsValuePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsValuePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsValuePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.ValuePattern" /> 控制項模式的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會確定是否支援指定的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="IsVirtualizedItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsVirtualizedItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsVirtualizedItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVirtualizedItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsVirtualizedItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsVirtualizedItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.VirtualizedItemPattern" /> 控制項模式的屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWindowPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsWindowPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsWindowPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsWindowPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsWindowPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsWindowPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別表示這個 <see cref="T:System.Windows.Automation.AutomationElement" /> 上是否有 <see cref="T:System.Windows.Automation.WindowPattern" /> 控制項模式的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回屬性的值屬於類型<xref:System.Boolean>。 屬性的預設值是`false`。  
  
   
  
## Examples  
 下列範例會確定是否支援指定的控制項模式<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="ItemStatusProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ItemStatusProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ItemStatusProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ItemStatusProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemStatusProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ItemStatusProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemStatusProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ItemStatusProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" /> 屬性，該屬性指出複雜項目的視覺化表示狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 傳回值是控制項定義<xref:System.String>。 預設值為空字串。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#152](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#152)]
 [!code-vb[UIAClient_snip#152](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#152)]  
  
 下列範例會擷取目前屬性的值，但如果項目本身不提供屬性值，指定<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#153](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#153)]
 [!code-vb[UIAClient_snip#153](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#153)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="ItemTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ItemTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ItemTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ItemTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemTypeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ItemTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemTypeProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ItemTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 傳回值是控制項定義<xref:System.String>。 預設值為空字串。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#154](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#154)]
 [!code-vb[UIAClient_snip#154](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#154)]  
  
 下列範例會擷取目前屬性的值，但指定是否項目本身不會提供屬性的值，要傳回而不是預設值是一個應用程式定義的字串。  
  
 [!code-csharp[UIAClient_snip#155](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#155)]
 [!code-vb[UIAClient_snip#155](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#155)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="LabeledByProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty LabeledByProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty LabeledByProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LabeledByProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LabeledByProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ LabeledByProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LabeledByProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.LabeledByProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" /> 屬性，該屬性會識別與控制項關聯的標籤。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 傳回屬性的值屬於類型<xref:System.Windows.Automation.AutomationElement>。 屬性的預設值是`null`。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#156](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#156)]
 [!code-vb[UIAClient_snip#156](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#156)]  
  
 下列範例會擷取目前屬性的值，但如果項目本身不提供屬性值，指定<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#157](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#157)]
 [!code-vb[UIAClient_snip#157](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#157)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="LayoutInvalidatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent LayoutInvalidatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent LayoutInvalidatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LayoutInvalidatedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ LayoutInvalidatedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LayoutInvalidatedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別版面配置失效時引發的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 每當多個項目的可見性資訊已變更，則元素的容器會引發這個事件。  用戶端會使用此事件為指標，它需要重新整理<xref:System.Windows.Automation.AutomationElement.BoundingRectangleProperty>和<xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty>它可能已快取的項目樹狀結構中的資訊。 建議的變更數目，就會觸發此事件是 25。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="LocalizedControlTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty LocalizedControlTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty LocalizedControlTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LocalizedControlTypeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ LocalizedControlTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LocalizedControlTypeProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別地區語言的 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 提供者，才能公開這個屬性，它代表沒有明確定義的控制項類型的自訂控制項時。  
  
 傳回屬性的值屬於類型<xref:System.String>。 屬性的預設值是空字串。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#158](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#158)]
 [!code-vb[UIAClient_snip#158](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#158)]  
  
 下列範例會擷取目前屬性的值，但如果項目本身不提供屬性值，指定<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#159](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#159)]
 [!code-vb[UIAClient_snip#159](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#159)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="MenuClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent MenuClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent MenuClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.MenuClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuClosedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ MenuClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuClosedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.MenuClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別功能表關閉時引發的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MenuOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent MenuOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent MenuOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.MenuOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuOpenedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ MenuOpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuOpenedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.MenuOpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別功能表開啟時引發的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ NameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.NameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 傳回屬性的值屬於類型<xref:System.String>。 屬性的預設值是空字串。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#160](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#160)]
 [!code-vb[UIAClient_snip#160](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#160)]  
  
 下列範例會擷取目前屬性的值，但如果項目本身不提供屬性值，指定<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#161](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#161)]
 [!code-vb[UIAClient_snip#161](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#161)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="NativeWindowHandleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty NativeWindowHandleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty NativeWindowHandleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NativeWindowHandleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NativeWindowHandleProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ NativeWindowHandleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NativeWindowHandleProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.NativeWindowHandleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 傳回屬性的值屬於類型<xref:System.Int32>。 屬性的預設值為 0。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#162](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#162)]
 [!code-vb[UIAClient_snip#162](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#162)]  
  
 下列範例會擷取目前屬性的值，但如果項目本身不提供屬性值，指定<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#163](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#163)]
 [!code-vb[UIAClient_snip#163](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#163)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="NotSupported">
      <MemberSignature Language="C#" Value="public static readonly object NotSupported;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object NotSupported" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NotSupported As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ NotSupported;" />
      <MemberSignature Language="F#" Value=" staticval mutable NotSupported : obj" Usage="System.Windows.Automation.AutomationElement.NotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指出不支援某屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
   
  
## Examples  
 下列範例會擷取的說明文字屬性<xref:System.Windows.Automation.AutomationElement>，並指定，<xref:System.Windows.Automation.AutomationElement.NotSupported>如果控制項不支援該屬性傳回。  
  
 [!code-csharp[UIAClient_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Automation.AutomationElement left, class System.Windows.Automation.AutomationElement right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As AutomationElement, right As AutomationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Automation::AutomationElement ^ left, System::Windows::Automation::AutomationElement ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Automation.AutomationElement * System.Windows.Automation.AutomationElement -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="right" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="left">要比較的第一個 <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
        <param name="right">要比較的第二個 <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
        <summary>傳回一個值，這個值指出指定的 <see cref="T:System.Windows.Automation.AutomationElement" /> 物件是否參考相同的 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 元素。</summary>
        <returns>如果兩個 <see cref="T:System.Windows.Automation.AutomationElement" /> 物件參考相同的 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 元素，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 兩個<xref:System.Windows.Automation.AutomationElement>比較為相等的物件可能包含不同的快取的資訊的不同點的時間。 <xref:System.Windows.Automation.AutomationElement.op_Equality%2A> 只會測試物件參考相同的基礎[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]項目。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Automation.AutomationElement left, class System.Windows.Automation.AutomationElement right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As AutomationElement, right As AutomationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Automation::AutomationElement ^ left, System::Windows::Automation::AutomationElement ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Automation.AutomationElement * System.Windows.Automation.AutomationElement -&gt; bool" Usage="System.Windows.Automation.AutomationElement.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="right" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="left">要比較的第一個 <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
        <param name="right">要比較的第二個 <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
        <summary>傳回值，指出指定的 <see cref="T:System.Windows.Automation.AutomationElement" /> 物件是否參考不同的 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 元素。</summary>
        <returns>如果兩個物件參考不同的 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 元素，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="OrientationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty OrientationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty OrientationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.OrientationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OrientationProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ OrientationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OrientationProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.OrientationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 屬性的值屬於類型<xref:System.Windows.Automation.OrientationType>。 預設值為 <xref:System.Windows.Automation.OrientationType.None>。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#164](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#164)]
 [!code-vb[UIAClient_snip#164](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#164)]  
  
 下列範例會擷取目前屬性的值，但如果項目本身不提供屬性值，指定<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#165](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#165)]
 [!code-vb[UIAClient_snip#165](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#165)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="PositionInSetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty PositionInSetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty PositionInSetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.PositionInSetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PositionInSetProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ PositionInSetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PositionInSetProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.PositionInSetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>描述自動化項目在視為同層級的項目集合中的序數位置。</summary>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

`PositionInSetProperty` 可搭配<xref:System.Windows.Automation.AutomationElement.SizeOfSetProperty>來描述自動化項目集合中的序數位置。

         ]]></format>
          </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ProcessIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ProcessIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ProcessIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ProcessIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ProcessIdProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ProcessIdProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ProcessIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" /> 屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 這個屬性也可以從擷取<xref:System.Windows.Automation.AutomationElement.Current%2A>或<xref:System.Windows.Automation.AutomationElement.Cached%2A>屬性。  
  
 傳回屬性的值屬於類型<xref:System.Int32>。 屬性的預設值為 0。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。 如果項目未提供，則會傳回預設值。  
  
 [!code-csharp[UIAClient_snip#167](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#167)]
 [!code-vb[UIAClient_snip#167](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#167)]  
  
 下列範例會擷取目前屬性的值，但如果項目本身不提供屬性值，指定<xref:System.Windows.Automation.AutomationElement.NotSupported>要傳回而不是預設值。  
  
 [!code-csharp[UIAClient_snip#168](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#168)]
 [!code-vb[UIAClient_snip#168](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#168)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="RootElement">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement RootElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.AutomationElement RootElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.RootElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RootElement As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::AutomationElement ^ RootElement { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootElement : System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.RootElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前桌面的根 <see cref="T:System.Windows.Automation.AutomationElement" />。</summary>
        <value>根項目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用的根項目做為起點來尋找其他項目，使用<xref:System.Windows.Automation.AutomationElement.FindAll%2A>和<xref:System.Windows.Automation.AutomationElement.FindFirst%2A>方法。  
  
 當您搜尋從根項目，請務必指定<xref:System.Windows.Automation.TreeScope.Children>範圍中的搜尋，不<xref:System.Windows.Automation.TreeScope.Descendants>。 在桌面的整個樹狀子目錄搜尋，可以逐一查看數千個項目，會導致堆疊溢位。  
  
   
  
## Examples  
 下列範例程式碼會擷取桌面的所有直屬子系的集合。  
  
 [!code-csharp[UIAClient_snip#201](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#201)]
 [!code-vb[UIAClient_snip#201](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#201)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimeIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty RuntimeIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty RuntimeIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.RuntimeIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RuntimeIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ RuntimeIdProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RuntimeIdProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.RuntimeIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別包含元素之執行階段識別項的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 執行階段識別碼屬性指定的識別碼<xref:System.Windows.Automation.AutomationElement>唯一在桌面上。  
  
 屬性的傳回值是陣列型別的<xref:System.Int32>。 它沒有預設值。  
  
   
  
## Examples  
 下列範例會擷取目前的屬性值。  
  
 [!code-csharp[UIAClient_snip#169](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#169)]
 [!code-vb[UIAClient_snip#169](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#169)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetRuntimeId" />
        <altmember cref="M:System.Windows.Automation.WindowClosedEventArgs.GetRuntimeId" />
        <altmember cref="M:System.Windows.Automation.StructureChangedEventArgs.GetRuntimeId" />
        <altmember cref="F:System.Windows.Automation.AutomationElement.AutomationIdProperty" />
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 自動化屬性概觀</related>
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.SetFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus();" />
      <MemberSignature Language="F#" Value="member this.SetFocus : unit -&gt; unit" Usage="automationElement.SetFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將焦點設在 <see cref="T:System.Windows.Automation.AutomationElement" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法的行為取決於項目的使用者介面自動化提供者所實作。 設定焦點不會不一定是帶到前景項目，或讓它立即可見。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" /> 的 UI 不再存在。</exception>
      </Docs>
    </Member>
    <Member MemberName="SizeOfSetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty SizeOfSetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty SizeOfSetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.SizeOfSetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SizeOfSetProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ SizeOfSetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SizeOfSetProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.SizeOfSetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>描述群組或集合中視為同層級的自動化項目計數。</summary>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

`SizeOfSetProperty` 可搭配<xref:System.Windows.Automation.AutomationElement.PositionInSetProperty>來描述集合中項目的計數。

         ]]></format>
          </remarks>
      </Docs>
    </Member>
    <Member MemberName="StructureChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent StructureChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent StructureChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.StructureChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StructureChangedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ StructureChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StructureChangedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.StructureChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 樹狀變更時引發的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent ToolTipClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent ToolTipClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ToolTipClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipClosedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ ToolTipClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTipClosedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.ToolTipClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別工具提示關閉時引發的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent ToolTipOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent ToolTipOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ToolTipOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipOpenedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ ToolTipOpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTipOpenedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.ToolTipOpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別工具提示開啟時引發的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端應用程式會使用這個識別項。 使用者介面自動化提供者應使用中的對等識別碼<xref:System.Windows.Automation.AutomationElementIdentifiers>。  
  
 是在桌面上，暫時的工具提示和工具提示可能會關閉用戶端會收到事件的時間。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="TryGetCachedPattern">
      <MemberSignature Language="C#" Value="public bool TryGetCachedPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetCachedPattern(class System.Windows.Automation.AutomationPattern pattern, [out] object&amp; patternObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetCachedPattern (pattern As AutomationPattern, ByRef patternObject As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetCachedPattern(System::Windows::Automation::AutomationPattern ^ pattern, [Runtime::InteropServices::Out] System::Object ^ % patternObject);" />
      <MemberSignature Language="F#" Value="member this.TryGetCachedPattern : System.Windows.Automation.AutomationPattern *  -&gt; bool" Usage="automationElement.TryGetCachedPattern (pattern, patternObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
        <Parameter Name="patternObject" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pattern">要擷取之控制項模式的識別項。</param>
        <param name="patternObject">傳回時，如果快取中有該模式則包含該模式；否則傳回 <see langword="null" />。</param>
        <summary>從快取擷取控制項模式。</summary>
        <returns><see langword="true" /> 表示快取中有該模式；<see langword="false" /> 表示快取中沒有該模式或不支援該模式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何快取，並擷取控制項模式。  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI 自動化用戶端中的快取</related>
      </Docs>
    </Member>
    <Member MemberName="TryGetClickablePoint">
      <MemberSignature Language="C#" Value="public bool TryGetClickablePoint (out System.Windows.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetClickablePoint([out] valuetype System.Windows.Point&amp; pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetClickablePoint (ByRef pt As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetClickablePoint([Runtime::InteropServices::Out] System::Windows::Point % pt);" />
      <MemberSignature Language="F#" Value="member this.TryGetClickablePoint :  -&gt; bool" Usage="automationElement.TryGetClickablePoint pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Windows.Point" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pt">這個方法傳回時，會包含可按點的實際螢幕座標。</param>
        <summary>擷取可按元素內的一個點。</summary>
        <returns><see langword="true" /> 表示此點可按；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>不可點選如果它完全遮住其他視窗。  
  
   
  
## Examples  
 下列範例會嘗試擷取可點選的點上<xref:System.Windows.Automation.AutomationElement>。  
  
 [!code-csharp[UIAClient_snip#112](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#112)]
 [!code-vb[UIAClient_snip#112](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#112)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
        <related type="Article" href="https://msdn.microsoft.com/library/4380cad7-e509-448f-b9a5-6de042605fd4">UI 自動化和畫面縮放比例</related>
      </Docs>
    </Member>
    <Member MemberName="TryGetCurrentPattern">
      <MemberSignature Language="C#" Value="public bool TryGetCurrentPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetCurrentPattern(class System.Windows.Automation.AutomationPattern pattern, [out] object&amp; patternObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetCurrentPattern (pattern As AutomationPattern, ByRef patternObject As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetCurrentPattern(System::Windows::Automation::AutomationPattern ^ pattern, [Runtime::InteropServices::Out] System::Object ^ % patternObject);" />
      <MemberSignature Language="F#" Value="member this.TryGetCurrentPattern : System.Windows.Automation.AutomationPattern *  -&gt; bool" Usage="automationElement.TryGetCurrentPattern (pattern, patternObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
        <Parameter Name="patternObject" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pattern">要擷取之控制項模式的識別項。</param>
        <param name="patternObject">傳回時，如果支援則為控制項模式；否則為 <see langword="null" />。</param>
        <summary>擷取實作控制項模式的物件。</summary>
        <returns><see langword="true" /> 表示支援該模式；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 針對某些形式的[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]，這個方法會產生跨處理序的效能負擔。 應用程式可以快取模式，並加以使用來擷取額外負荷專注<xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>。  
  
   
  
## Examples  
 下列範例示範如何使用此方法來擷取控制項模式。  
  
 [!code-csharp[UIAClient_snip#113](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#113)]
 [!code-vb[UIAClient_snip#113](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#113)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
        <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md">用戶端的 UI 自動化控制項模式</related>
      </Docs>
    </Member>
  </Members>
</Type>