<Type Name="AutomationElement+AutomationElementInformation" FullName="System.Windows.Automation.AutomationElement+AutomationElementInformation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dde7d70db13246a761ad1726b428ff0e6c170eff" />
    <Meta Name="ms.sourcegitcommit" Value="058bfa0b75b777d3171411d35da8f11617fc06b0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="05/04/2018" />
    <Meta Name="ms.locfileid" Value="33659217" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct AutomationElement.AutomationElementInformation" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit AutomationElement/AutomationElementInformation extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.AutomationElement.AutomationElementInformation" />
  <TypeSignature Language="VB.NET" Value="Public Structure AutomationElement.AutomationElementInformation" />
  <TypeSignature Language="C++ CLI" Value="public: value class AutomationElement::AutomationElementInformation" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含 <see cref="P:System.Windows.Automation.AutomationElement.Cached" /> 或 <see cref="P:System.Windows.Automation.AutomationElement.Current" /> 屬性所使用的屬性存取子。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 屬性可直接從<xref:System.Windows.Automation.AutomationElement.Cached%2A>和<xref:System.Windows.Automation.AutomationElement.Current%2A>; 您不需要擷取<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>結構本身。  
  
 此結構中的屬性也可以擷取使用<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>和<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>，使用對應的識別項從<xref:System.Windows.Automation.AutomationElement>。 例如，<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey%2A?displayProperty=nameWithType>屬性由<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty?displayProperty=nameWithType>欄位。 這些識別項; 的參考頁面上可用的個別屬性的詳細資訊請參閱 < 備註 > 一節的每個參考主題的連結。  
  
   
  
## Examples  
 下列範例會示範如何<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A>屬性擷取自這個結構。  
  
 [!code-csharp[UIAClient_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient_snip#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AcceleratorKey">
      <MemberSignature Language="C#" Value="public string AcceleratorKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AcceleratorKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceleratorKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AcceleratorKey { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得的字串包含項目的快速鍵組合。</summary>
        <value>此組合鍵順序可叫用與項目關聯的動作。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 快速鍵組合來叫用動作。 例如，CTRL + O 通常用於叫用**開啟舊檔** 對話方塊。 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 已設定永遠啟動快速鍵按鍵屬性的項目實作<xref:System.Windows.Automation.InvokePattern>類別。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public string AccessKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessKey { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得的字串包含項目的便捷鍵字元。</summary>
        <value>與項目關聯的字元，用以啟動該項目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 便捷鍵是中的功能表、 功能表項目或可啟動附加的功能表功能按鈕等控制項的標籤文字的字元。 比方說，如果找到字母"O"通常用來叫用**開啟**通用對話方塊從**檔案**功能表。  [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 設定永遠將存取屬性的項目實作<xref:System.Windows.Automation.InvokePattern>類別。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.AccessKeyProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomationId">
      <MemberSignature Language="C#" Value="public string AutomationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AutomationId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutomationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AutomationId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含項目之 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] 的字串。</summary>
        <value>項目是在其容器中的同層級之間的唯一識別碼。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當有<xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>項目的預期保持不變，不論本機語言應用程式的任何執行個體中。 值應該是整個桌面同層級項目中的唯一性，但不是一定是唯一。 例如，多個執行個體的應用程式或在 Microsoft Windows 檔案總管 中的多個資料夾檢視可能包含具有相同的項目<xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>，例如"SystemMenuBar"。  
  
 雖然支援<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>一律建議更好的測試能力，這個屬性不是強制性。 支援，where<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>建立測試自動化指令碼的 UI 語言不論執行的是很有用。 用戶端應該作任何假設有關<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>s 由其他應用程式。 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>一定不保證能夠穩定跨不同的版本，或應用程式的組建。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundingRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect BoundingRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect BoundingRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundingRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect BoundingRectangle { System::Windows::Rect get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得完全圍住項目的矩形座標。</summary>
        <value>封入矩形的點座標。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回的矩形可以包含沒有任何可點選的點。 在這種情形的執行個體時，就[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]項目具有不規則的形狀或可點選區域或遮蔽其他[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]項目。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.BoundingRectangleProperty" />
      </Docs>
    </Member>
    <Member MemberName="ClassName">
      <MemberSignature Language="C#" Value="public string ClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得的字串包含控制項開發人員指定之項目的類別名稱。</summary>
        <value>控制項開發人員指定的類別名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性的值是視實作而定。 屬性是用於測試環境。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.ClassNameProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.ControlType ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.ControlType ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As ControlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::ControlType ^ ControlType { System::Windows::Automation::ControlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得項目的 <see cref="T:System.Windows.Automation.ControlType" />。</summary>
        <value>這個項目的互動模型。 預設值是 <see cref="F:System.Windows.Automation.ControlType.Custom" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控制項類型所描述的已知的互動模型任意[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]項目，而不需要依賴當地語系化的控制項類型或複雜的邏輯規則組合。  
  
 這個屬性可以變更在執行階段的唯一情況是支援的控制項<xref:System.Windows.Automation.MultipleViewPattern>。 範例是[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]ListView 控制項，可以變更從<xref:System.Windows.Automation.ControlType.DataGrid>至<xref:System.Windows.Automation.ControlType.List>依據目前的檢視。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.ControlTypeProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameworkId">
      <MemberSignature Language="C#" Value="public string FrameworkId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FrameworkId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FrameworkId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FrameworkId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得基礎 UI 架構的名稱。</summary>
        <value>UI 架構的名稱，如 "Win32"、"WinForm" 或 "DirectUI"。 預設值為空字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回屬性的值屬於型別<xref:System.String>。 預設值為空字串。  
  
 這個屬性可讓特殊案例套用至整個使用者介面架構的應用程式。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.FrameworkIdProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeyboardFocus">
      <MemberSignature Language="C#" Value="public bool HasKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasKeyboardFocus { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得的值指出項目是否有鍵盤焦點。</summary>
        <value>
          <see langword="true" /> 表示項目有鍵盤焦點，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果容器內的項目具有焦點，<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus%2A>對於容器項目也是如此。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與項目相關的說明文字。</summary>
        <value>項目的工具提示說明文字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.HelpTextProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContentElement">
      <MemberSignature Language="C#" Value="public bool IsContentElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContentElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsContentElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsContentElement { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得的值指出項目是否為內容項目。</summary>
        <value>
          <see langword="true" /> 表示項目是內容項目；否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 內容項目包含呈現給使用者的資料。 內容項目的範例包括在清單方塊或按鈕在對話方塊中的項目。 非內容項目，也稱為周邊的項目，通常用來管理複合控制項; 中的內容例如，下拉式清單控制項上的按鈕。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.IsContentElementProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControlElement">
      <MemberSignature Language="C#" Value="public bool IsControlElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsControlElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsControlElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsControlElement { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得的值指出是否將項目視為控制項。</summary>
        <value>
          <see langword="true" /> 表示將項目視為控制項; 否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.IsControlElementProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得的值指出 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]參考的[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 項目是否已啟用。</summary>
        <value>
          如果啟用控制項，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled%2A>屬性可變更因為[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]互動。 您應該藉由呼叫取得更新的快取<xref:System.Windows.Automation.AutomationElement.GetUpdatedCache%2A>如果的值<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled%2A>自發出快取要求，可能已變更屬性。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.IsEnabledProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusable">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得的值指示 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]項目能否接受鍵盤焦點。</summary>
        <value>
          <see langword="true" /> 表示控制項可接收鍵盤焦點；否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffscreen">
      <MemberSignature Language="C#" Value="public bool IsOffscreen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffscreen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffscreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffscreen { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得的值表示螢幕上是否能看見 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]項目。</summary>
        <value>
          <see langword="true" /> 表示看不到控制項；否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 布林值，指出是否完全捲動項目 （例如，清單方塊中的項目是容器物件的檢視區外） 或摺疊檢視 （例如，在樹狀檢視、 功能表上或最小化的視窗中的項目）。  
  
 如果項目的可點選的點，可能會導致它被已取得焦點，認定為部分的項目超出螢幕時，即使是在螢幕上。  
  
 屬性的值不會受到阻擋其他視窗，或項目是否出現在特定的監視。  
  
 IsOffscreen 時`true,`捲動或摺疊 檢視中，但仍然是使用者的感覺 UI，一部分的項目可以帶回至檢視的簡單的操作，例如捲動或按一下下拉式清單控制項上。  
  
 如果項目，則使用者不會不完全察覺或稱為 「 以程式設計方式隱藏 」 （例如，對話方塊關閉，但會由應用程式快取的加上底線物件） 然後它應該從移除項目樹狀結構，而不是設定的值來 IsOffscreen `true`。  
  
 當這個值是`true`對容器，也很`true`的容器項目子系。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPassword">
      <MemberSignature Language="C#" Value="public bool IsPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPassword" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPassword { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得的值表示 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]項目是否包含受保護的內容。</summary>
        <value>
          <see langword="true" /> 表示項目包含受保護的內容，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性可讓應用程式，例如螢幕助讀程式來判斷是否要大聲閱讀文字內容的控制項。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.IsPasswordProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequiredForForm">
      <MemberSignature Language="C#" Value="public bool IsRequiredForForm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequiredForForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRequiredForForm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRequiredForForm { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得的值指示表單上的 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]項目是否為必填。</summary>
        <value>
          <see langword="true" /> 表示項目為必填，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.IsRequiredForFormProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStatus">
      <MemberSignature Language="C#" Value="public string ItemStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemStatus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemStatus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemStatus { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得的描述會說明項目 (element) 內某項目 (item) 的狀態。</summary>
        <value>狀態的描述。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可讓用戶端，以確定項目是否傳達狀態項目有關的資訊。 例如，訊息的應用程式中的連絡人相關聯的項目可能是 「 忙碌 」 或 「 已連接 」。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.ItemStatusProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得說明項目型別的描述。</summary>
        <value>描述項目之當地語系化字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性用來取得資訊清單、 樹狀檢視中或資料方格中的項目。 例如，檔案的目錄檢視中的項目可能是 「 文件檔案 」 或 「 資料夾 」。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.ItemTypeProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabeledBy">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement LabeledBy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElement LabeledBy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LabeledBy As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement ^ LabeledBy { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得的項目包含此項目的文字標籤。</summary>
        <value>此項目是這個項目的標籤。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可以用來擷取，例如，下拉式方塊的靜態文字標籤。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.LabeledByProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalizedControlType">
      <MemberSignature Language="C#" Value="public string LocalizedControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalizedControlType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalizedControlType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LocalizedControlType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得控制項類型的描述。</summary>
        <value>控制項類型 (例如 "button") 的當地語系化描述。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得項目的名稱。</summary>
        <value>[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 項目的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 項目的名稱可用來尋找項目中的[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]項目樹狀結構時<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>項目上不支援屬性。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.NameProperty>。  
  
   
  
## Examples  
 下列範例會示範如何<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A>擷取屬性。  
  
 [!code-csharp[UIAClient_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient_snip#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NativeWindowHandle">
      <MemberSignature Language="C#" Value="public int NativeWindowHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NativeWindowHandle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeWindowHandle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NativeWindowHandle { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得項目之視窗的控制代碼。</summary>
        <value>視窗的控制代碼 (如果存在的話)；否則為 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.NativeWindowHandleProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.OrientationType Orientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.OrientationType Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Orientation As OrientationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::OrientationType Orientation { System::Windows::Automation::OrientationType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.OrientationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得控制項的方向。</summary>
        <value>方向。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 捲軸等可以有垂直或水平方向的滑桿控制項支援這個屬性。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.OrientationProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessId { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得項目的處理序[!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)]。</summary>
        <value>裝載項目處理序的識別碼。 屬性的預設值為 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理程序[!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)]由作業系統指派。 中可以看到**PID**資料行**處理程序**在 [工作管理員] 索引標籤。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Automation.AutomationElement.ProcessIdProperty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>