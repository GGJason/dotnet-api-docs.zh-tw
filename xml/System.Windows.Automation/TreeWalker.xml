<Type Name="TreeWalker" FullName="System.Windows.Automation.TreeWalker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4249cd6644cdda12705b0532466d15b88c79cb63" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51875034" /></Metadata><TypeSignature Language="C#" Value="public sealed class TreeWalker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TreeWalker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.TreeWalker" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TreeWalker" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeWalker sealed" />
  <TypeSignature Language="F#" Value="type TreeWalker = class" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供用來巡覽使用者介面自動化樹狀目錄的方法和屬性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者介面自動化用戶端檢視[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]做為一組在桌面上的項目<xref:System.Windows.Automation.AutomationElement>排列在樹狀結構中的物件。  
  
 使用<xref:System.Windows.Automation.TreeWalker>類別，用戶端應用程式可以瀏覽[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]樹狀目錄中選取的樹狀結構檢視，然後從一個逐步<xref:System.Windows.Automation.AutomationElement>到另一個指定的方向，使用<xref:System.Windows.Automation.TreeWalker.GetFirstChild%2A>， <xref:System.Windows.Automation.TreeWalker.GetLastChild%2A>， <xref:System.Windows.Automation.TreeWalker.GetPreviousSibling%2A>，<xref:System.Windows.Automation.TreeWalker.GetNextSibling%2A>，和<xref:System.Windows.Automation.TreeWalker.GetParent%2A>方法。  
  
 瀏覽[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]使用<xref:System.Windows.Automation.TreeWalker>可能會導致跨處理序的呼叫，並做為尋找元素的使用效率<xref:System.Windows.Automation.AutomationElement.FindAll%2A>或<xref:System.Windows.Automation.AutomationElement.FindFirst%2A>方法。  
  
 如果您的用戶端應用程式可能會嘗試尋找的項目在其自己的使用者介面中，您必須讓所有[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]個別執行緒上呼叫。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
    <related type="Article" href="https://msdn.microsoft.com/library/afcd21dc-2ffa-48c9-9332-51269f44b7e9">使用 TreeWalker 巡覽 UI 自動化項目</related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeWalker (System.Windows.Automation.Condition condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Automation.Condition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.#ctor(System.Windows.Automation.Condition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeWalker(System::Windows::Automation::Condition ^ condition);" />
      <MemberSignature Language="F#" Value="new System.Windows.Automation.TreeWalker : System.Windows.Automation.Condition -&gt; System.Windows.Automation.TreeWalker" Usage="new System.Windows.Automation.TreeWalker condition" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="condition" Type="System.Windows.Automation.Condition" />
      </Parameters>
      <Docs>
        <param name="condition"><see cref="T:System.Windows.Automation.TreeWalker" /> 將巡覽之 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]項目樹狀目錄的檢視。</param>
        <summary>初始化 <see cref="T:System.Windows.Automation.TreeWalker" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 不相符的項目`condition`跳過當<xref:System.Windows.Automation.TreeWalker>用來瀏覽項目樹狀結構。  
  
 如果您的用戶端應用程式可能會嘗試尋找的項目在其自己的使用者介面中，您必須讓所有[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]個別執行緒上呼叫。  
  
   
  
## Examples  
 下列範例示範如何建構<xref:System.Windows.Automation.TreeWalker>，只有在已啟用的項目之間巡覽。  
  
 [!code-csharp[UIAClient_snip#174](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#174)]
 [!code-vb[UIAClient_snip#174](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#174)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/afcd21dc-2ffa-48c9-9332-51269f44b7e9">使用 TreeWalker 巡覽 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Condition Condition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Condition Condition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.TreeWalker.Condition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Condition As Condition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Condition ^ Condition { System::Windows::Automation::Condition ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Condition : System.Windows.Automation.Condition" Usage="System.Windows.Automation.TreeWalker.Condition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Condition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得的物件定義 <see cref="T:System.Windows.Automation.TreeWalker" /> 物件的檢視。</summary>
        <value>定義檢視的條件。 此為傳遞至建構函式的值。</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.TreeWalker.#ctor(System.Windows.Automation.Condition)" />
      </Docs>
    </Member>
    <Member MemberName="ContentViewWalker">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.TreeWalker ContentViewWalker;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.TreeWalker ContentViewWalker" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.TreeWalker.ContentViewWalker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentViewWalker As TreeWalker " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::TreeWalker ^ ContentViewWalker;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentViewWalker : System.Windows.Automation.TreeWalker" Usage="System.Windows.Automation.TreeWalker.ContentViewWalker" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TreeWalker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示預先定義的 <see cref="T:System.Windows.Automation.TreeWalker" />，內含在樹狀目錄中標記為內容控制項之項目的檢視。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您的用戶端應用程式可能會嘗試尋找的項目在其自己的使用者介面中，您必須讓所有[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]個別執行緒上呼叫。  
  
   
  
## Examples  
 下列範例所示<xref:System.Windows.Automation.TreeWalker.ControlViewWalker>用來建構樹狀結構檢視中的樹狀子目錄的項目。 使用方式<xref:System.Windows.Automation.TreeWalker.ContentViewWalker>完全相同。  
  
 [!code-csharp[UIAClient_snip#171](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#171)]
 [!code-vb[UIAClient_snip#171](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#171)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.IsContentElementProperty" />
        <altmember cref="F:System.Windows.Automation.AutomationElement.IsControlElementProperty" />
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/afcd21dc-2ffa-48c9-9332-51269f44b7e9">使用 TreeWalker 巡覽 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
    <Member MemberName="ControlViewWalker">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.TreeWalker ControlViewWalker;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.TreeWalker ControlViewWalker" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.TreeWalker.ControlViewWalker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ControlViewWalker As TreeWalker " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::TreeWalker ^ ControlViewWalker;" />
      <MemberSignature Language="F#" Value=" staticval mutable ControlViewWalker : System.Windows.Automation.TreeWalker" Usage="System.Windows.Automation.TreeWalker.ControlViewWalker" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TreeWalker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示預先定義的 <see cref="T:System.Windows.Automation.TreeWalker" />，內含在樹狀目錄中標記為控制項之項目的檢視。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您的用戶端應用程式可能會嘗試尋找的項目在其自己的使用者介面中，您必須讓所有[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]個別執行緒上呼叫。  
  
   
  
## Examples  
 下列範例所示<xref:System.Windows.Automation.TreeWalker.ControlViewWalker>用來建構樹狀結構檢視中的樹狀子目錄的項目。  
  
 [!code-csharp[UIAClient_snip#171](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#171)]
 [!code-vb[UIAClient_snip#171](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#171)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.IsControlElementProperty" />
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/afcd21dc-2ffa-48c9-9332-51269f44b7e9">使用 TreeWalker 巡覽 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstChild">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>擷取所指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的第一個子項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以有額外的子項目不符合目前的檢視狀態，因此不會傳回瀏覽項目樹狀結構時。  
  
 結構<xref:System.Windows.Automation.AutomationElement>樹狀結構變更為可見[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]桌面變更的項目。 不保證項目，傳回第一個子項目會傳回第一個子系為後續傳遞。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstChild">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetFirstChild (System.Windows.Automation.AutomationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetFirstChild(class System.Windows.Automation.AutomationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetFirstChild(System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstChild (element As AutomationElement) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetFirstChild(System::Windows::Automation::AutomationElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.GetFirstChild : System.Windows.Automation.AutomationElement -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetFirstChild element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="element">要從中擷取第一個子系的項目。</param>
        <summary>擷取所指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的第一個子項目。</summary>
        <returns>第一個子項目，如果沒有此項目，則為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以有額外的子項目不符合目前的檢視狀態，因此不會傳回瀏覽項目樹狀結構時。  
  
 結構<xref:System.Windows.Automation.AutomationElement>樹狀結構變更為可見[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]桌面變更的項目。 不保證項目，傳回第一個子項目會傳回第一個子系為後續傳遞。  
  
   
  
## Examples  
 下列範例所示<xref:System.Windows.Automation.TreeWalker.GetFirstChild%2A>用來建構樹狀結構檢視中的樹狀子目錄的項目。  
  
 [!code-csharp[UIAClient_snip#171](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#171)]
 [!code-vb[UIAClient_snip#171](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#171)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/afcd21dc-2ffa-48c9-9332-51269f44b7e9">使用 TreeWalker 巡覽 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
    <Member MemberName="GetFirstChild">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetFirstChild (System.Windows.Automation.AutomationElement element, System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetFirstChild(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetFirstChild(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstChild (element As AutomationElement, request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetFirstChild(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::CacheRequest ^ request);" />
      <MemberSignature Language="F#" Value="member this.GetFirstChild : System.Windows.Automation.AutomationElement * System.Windows.Automation.CacheRequest -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetFirstChild (element, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="element">要從中擷取第一個子系的項目。</param>
        <param name="request">快取要求物件，指定要在傳回之 <see cref="T:System.Windows.Automation.AutomationElement" /> 中快取的屬性和模式。</param>
        <summary>擷取指定之 <see cref="T:System.Windows.Automation.AutomationElement" /> 的第一個子項目並快取屬性和模式。</summary>
        <returns>第一個子項目，如果沒有此項目，則為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以有額外的子項目不符合目前的檢視狀態，因此不會傳回瀏覽項目樹狀結構時。  
  
 結構<xref:System.Windows.Automation.AutomationElement>樹狀結構變更為可見[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]桌面變更的項目。 不保證項目，傳回第一個子項目會傳回第一個子系為後續傳遞。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/afcd21dc-2ffa-48c9-9332-51269f44b7e9">使用 TreeWalker 巡覽 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLastChild">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>擷取所指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的最後一個子項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以有額外的子項目不符合目前的檢視狀態，因此不會傳回瀏覽項目樹狀結構時。  
  
 結構<xref:System.Windows.Automation.AutomationElement>樹狀結構變更為可見[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]桌面變更的項目。 不保證最後一個子項目會傳回最後一個子系為後續傳遞項目，傳回。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLastChild">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetLastChild (System.Windows.Automation.AutomationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetLastChild(class System.Windows.Automation.AutomationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetLastChild(System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastChild (element As AutomationElement) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetLastChild(System::Windows::Automation::AutomationElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.GetLastChild : System.Windows.Automation.AutomationElement -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetLastChild element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="element">要從中擷取最後一個子系的項目。</param>
        <summary>擷取所指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的最後一個子項目。</summary>
        <returns><see cref="T:System.Windows.Automation.AutomationElement" /> 為最後一個子項目，如果沒有此項目，則為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以有額外的子項目不符合目前的檢視狀態，因此不會傳回瀏覽項目樹狀結構時。  
  
 結構<xref:System.Windows.Automation.AutomationElement>樹狀結構變更為可見[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]桌面變更的項目。 不保證最後一個子項目會傳回最後一個子系為後續傳遞項目，傳回。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/afcd21dc-2ffa-48c9-9332-51269f44b7e9">使用 TreeWalker 巡覽 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
    <Member MemberName="GetLastChild">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetLastChild (System.Windows.Automation.AutomationElement element, System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetLastChild(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetLastChild(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastChild (element As AutomationElement, request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetLastChild(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::CacheRequest ^ request);" />
      <MemberSignature Language="F#" Value="member this.GetLastChild : System.Windows.Automation.AutomationElement * System.Windows.Automation.CacheRequest -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetLastChild (element, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="element">要從中擷取最後一個子系的項目。</param>
        <param name="request">快取要求物件，指定要在傳回之 <see cref="T:System.Windows.Automation.AutomationElement" /> 中快取的屬性和模式。</param>
        <summary>擷取指定之 <see cref="T:System.Windows.Automation.AutomationElement" /> 的最後一個子項目並快取屬性和模式。</summary>
        <returns>最後一個子項目，如果沒有此項目，則為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以有額外的子項目不符合目前的檢視狀態，因此不會傳回瀏覽項目樹狀結構時。  
  
 結構<xref:System.Windows.Automation.AutomationElement>樹狀結構變更為可見[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]桌面變更的項目。 不保證最後一個子項目會傳回最後一個子系為後續傳遞項目，傳回。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/afcd21dc-2ffa-48c9-9332-51269f44b7e9">使用 TreeWalker 巡覽 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextSibling">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>擷取所指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的下一個同層級項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以有其他的同層級項目不符合目前的檢視狀態，因此不會傳回瀏覽項目樹狀結構時。  
  
 結構<xref:System.Windows.Automation.AutomationElement>樹狀結構變更為可見[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]桌面變更的項目。 不保證下一個同層級項目將會傳回下一個同層級後續傳遞項目，傳回。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextSibling">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetNextSibling (System.Windows.Automation.AutomationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetNextSibling(class System.Windows.Automation.AutomationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetNextSibling(System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextSibling (element As AutomationElement) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetNextSibling(System::Windows::Automation::AutomationElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.GetNextSibling : System.Windows.Automation.AutomationElement -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetNextSibling element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="element">要從中擷取下一個同層級的 <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
        <summary>擷取所指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的下一個同層級項目。</summary>
        <returns>下一個同層級項目，如果沒有此項目，則為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以有其他的同層級項目不符合目前的檢視狀態，因此不會傳回瀏覽項目樹狀結構時。  
  
 結構<xref:System.Windows.Automation.AutomationElement>樹狀結構變更為可見[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]桌面變更的項目。 不保證下一個同層級項目將會傳回下一個同層級後續傳遞項目，傳回。  
  
   
  
## Examples  
 下列範例所示<xref:System.Windows.Automation.TreeWalker.GetNextSibling%2A>用來建構樹狀結構檢視中的樹狀子目錄的項目。  
  
 [!code-csharp[UIAClient_snip#171](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#171)]
 [!code-vb[UIAClient_snip#171](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#171)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/afcd21dc-2ffa-48c9-9332-51269f44b7e9">使用 TreeWalker 巡覽 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
    <Member MemberName="GetNextSibling">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetNextSibling (System.Windows.Automation.AutomationElement element, System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetNextSibling(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetNextSibling(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextSibling (element As AutomationElement, request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetNextSibling(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::CacheRequest ^ request);" />
      <MemberSignature Language="F#" Value="member this.GetNextSibling : System.Windows.Automation.AutomationElement * System.Windows.Automation.CacheRequest -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetNextSibling (element, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="element">要從中擷取下一個同層級的項目。</param>
        <param name="request">快取要求物件，指定要在傳回之 <see cref="T:System.Windows.Automation.AutomationElement" /> 中快取的屬性和模式。</param>
        <summary>擷取指定之 <see cref="T:System.Windows.Automation.AutomationElement" /> 的下一個同層級項目並快取屬性和模式。</summary>
        <returns>下一個同層級項目，如果沒有此項目，則為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以有其他的同層級項目不符合目前的檢視狀態，因此不會傳回瀏覽項目樹狀結構時。  
  
 結構<xref:System.Windows.Automation.AutomationElement>樹狀結構變更為可見[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]桌面變更的項目。 不保證下一個同層級項目將會傳回下一個同層級後續傳遞項目，傳回。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/afcd21dc-2ffa-48c9-9332-51269f44b7e9">使用 TreeWalker 巡覽 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParent">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>擷取所指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的父項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 結構<xref:System.Windows.Automation.AutomationElement>樹狀結構變更為可見[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]桌面變更的項目。 不保證項目傳回做為父系後續傳遞傳回父項目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetParent (System.Windows.Automation.AutomationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetParent(class System.Windows.Automation.AutomationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetParent(System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParent (element As AutomationElement) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetParent(System::Windows::Automation::AutomationElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.GetParent : System.Windows.Automation.AutomationElement -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetParent element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="element">要傳回父代的項目。</param>
        <summary>擷取所指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的父項目。</summary>
        <returns>父項目，如果指定的項目為樹狀目錄的根項目，或在目前檢視中看不到父項目，則為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例所示<xref:System.Windows.Automation.TreeWalker.GetParent%2A>用來尋找視窗項目，其中包含指定的項目。  
  
 [!code-csharp[UIAFocusTracker_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFocusTracker_snip/CSharp/FocusTracker.cs#102)]
 [!code-vb[UIAFocusTracker_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFocusTracker_snip/VisualBasic/FocusTracker.vb#102)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/afcd21dc-2ffa-48c9-9332-51269f44b7e9">使用 TreeWalker 巡覽 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetParent (System.Windows.Automation.AutomationElement element, System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetParent(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetParent(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParent (element As AutomationElement, request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetParent(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::CacheRequest ^ request);" />
      <MemberSignature Language="F#" Value="member this.GetParent : System.Windows.Automation.AutomationElement * System.Windows.Automation.CacheRequest -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetParent (element, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="element">要傳回父代的項目。</param>
        <param name="request">快取要求物件，指定在傳回的 <see cref="T:System.Windows.Automation.AutomationElement" /> 中要快取的成員。</param>
        <summary>擷取指定之 <see cref="T:System.Windows.Automation.AutomationElement" /> 的父項目並快取屬性和模式。</summary>
        <returns>父項目，如果指定的項目為樹狀目錄的根項目，或在檢視中看不到父項目，則為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 結構<xref:System.Windows.Automation.AutomationElement>樹狀結構變更為可見[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]桌面變更的項目。 不保證項目傳回做為父系後續傳遞傳回父項目。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/afcd21dc-2ffa-48c9-9332-51269f44b7e9">使用 TreeWalker 巡覽 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPreviousSibling">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>擷取所指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的上一個同層級項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以有其他的同層級項目不符合目前的檢視狀態，因此不會傳回瀏覽項目樹狀結構時。  
  
 結構<xref:System.Windows.Automation.AutomationElement>樹狀結構變更為可見[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]桌面變更的項目。 不保證項目，傳回上一個同層級項目將會傳回與前一個同層級後續傳遞。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPreviousSibling">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetPreviousSibling (System.Windows.Automation.AutomationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetPreviousSibling(class System.Windows.Automation.AutomationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetPreviousSibling(System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousSibling (element As AutomationElement) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetPreviousSibling(System::Windows::Automation::AutomationElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousSibling : System.Windows.Automation.AutomationElement -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetPreviousSibling element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="element">要從中擷取上一個同層級的項目。</param>
        <summary>擷取所指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的上一個同層級項目。</summary>
        <returns>前一個同層級項目，如果沒有此項目，則為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以有其他的同層級項目不符合目前的檢視狀態，因此不會傳回瀏覽項目樹狀結構時。  
  
 結構<xref:System.Windows.Automation.AutomationElement>樹狀結構變更為可見[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]桌面變更的項目。 不保證項目，傳回上一個同層級項目將會傳回與前一個同層級後續傳遞。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/afcd21dc-2ffa-48c9-9332-51269f44b7e9">使用 TreeWalker 巡覽 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
    <Member MemberName="GetPreviousSibling">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetPreviousSibling (System.Windows.Automation.AutomationElement element, System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetPreviousSibling(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetPreviousSibling(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousSibling (element As AutomationElement, request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetPreviousSibling(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::CacheRequest ^ request);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousSibling : System.Windows.Automation.AutomationElement * System.Windows.Automation.CacheRequest -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetPreviousSibling (element, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="element">要從中擷取上一個同層級的項目。</param>
        <param name="request">快取要求物件，指定要在傳回之 <see cref="T:System.Windows.Automation.AutomationElement" /> 中快取的屬性和模式。</param>
        <summary>擷取指定之 <see cref="T:System.Windows.Automation.AutomationElement" /> 的上一個同層級並快取屬性和模式。</summary>
        <returns>前一個同層級項目，如果沒有此項目，則為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以有其他的同層級項目不符合目前的檢視狀態，因此不會傳回瀏覽項目樹狀結構時。  
  
 結構<xref:System.Windows.Automation.AutomationElement>樹狀結構變更為可見[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]桌面變更的項目。 不保證項目，傳回上一個同層級項目將會傳回與前一個同層級後續傳遞。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/afcd21dc-2ffa-48c9-9332-51269f44b7e9">使用 TreeWalker 巡覽 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Normalize">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在此 <see cref="T:System.Windows.Automation.AutomationElement" /> 執行個體使用的樹狀檢視中，擷取最接近指定之 <see cref="T:System.Windows.Automation.TreeWalker" /> 的祖系項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 元素會藉由瀏覽樹狀目錄中的祖系鏈結，直到符合檢視條件的項目正規化<xref:System.Windows.Automation.TreeWalker>物件為止。 如果已到達根項目，即使它不符合檢視條件，會傳回根項目。  
  
 這個方法可用於取得參考的應用程式[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]點擊測試的項目。 應用程式可能會想要只使用特定類型的項目，而且可以使用<xref:System.Windows.Automation.TreeWalker.Normalize%2A>，確定無論何種項目一開始擷取 （例如，當在捲軸上可取得輸入的焦點），則只有 （例如內容感興趣的項目最後會擷取項目）。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement Normalize (System.Windows.Automation.AutomationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement Normalize(class System.Windows.Automation.AutomationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.Normalize(System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Normalize (element As AutomationElement) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ Normalize(System::Windows::Automation::AutomationElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.Normalize : System.Windows.Automation.AutomationElement -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.Normalize element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="element">要做為正規化起點的項目。</param>
        <summary>如果節點符合 <see cref="P:System.Windows.Automation.TreeWalker.Condition" />，則擷取節點本身，或是擷取符合 <see cref="P:System.Windows.Automation.TreeWalker.Condition" /> 的最近父代或祖系節點。</summary>
        <returns>目前檢視中最近的 <see cref="T:System.Windows.Automation.AutomationElement" />。 如果向上巡覽祖系鏈結時到達根項目，則會傳回根項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 元素會藉由瀏覽樹狀目錄中的祖系鏈結，直到符合檢視條件的項目正規化<xref:System.Windows.Automation.TreeWalker>物件為止。 如果已到達根項目，即使它不符合檢視條件，會傳回根項目。  
  
 這個方法可用於取得參考的應用程式[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]點擊測試的項目。 應用程式可能會想要只使用特定類型的項目，而且可以使用<xref:System.Windows.Automation.TreeWalker.Normalize%2A>，確定無論何種項目一開始擷取 （例如，當在捲軸上可取得輸入的焦點），則只有 （例如內容感興趣的項目最後會擷取項目）。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/afcd21dc-2ffa-48c9-9332-51269f44b7e9">使用 TreeWalker 巡覽 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement Normalize (System.Windows.Automation.AutomationElement element, System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement Normalize(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.Normalize(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function Normalize (element As AutomationElement, request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ Normalize(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::CacheRequest ^ request);" />
      <MemberSignature Language="F#" Value="member this.Normalize : System.Windows.Automation.AutomationElement * System.Windows.Automation.CacheRequest -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.Normalize (element, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="element">要做為正規化起點的項目。</param>
        <param name="request">快取要求物件，指定要在傳回之 <see cref="T:System.Windows.Automation.AutomationElement" /> 中快取的屬性和模式。</param>
        <summary>如果節點符合 <see cref="P:System.Windows.Automation.TreeWalker.Condition" />，則擷取節點本身，或是擷取符合 <see cref="P:System.Windows.Automation.TreeWalker.Condition" /> 的最近父代或祖系節點，並快取屬性和模式。</summary>
        <returns>目前檢視中最近的 <see cref="T:System.Windows.Automation.AutomationElement" />。 如果向上巡覽祖系鏈結時到達根項目，則會傳回根項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 元素會藉由瀏覽樹狀目錄中的祖系鏈結，直到符合檢視條件的項目正規化<xref:System.Windows.Automation.TreeWalker>物件為止。 如果已到達根項目，即使它不符合檢視條件，會傳回根項目。  
  
 這個方法可用於取得參考的應用程式[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]點擊測試的項目。 應用程式可能會想要只使用特定類型的項目，而且可以使用<xref:System.Windows.Automation.TreeWalker.Normalize%2A>，確定無論何種項目一開始擷取 （例如，當在捲軸上可取得輸入的焦點），則只有 （例如內容感興趣的項目最後會擷取項目）。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/afcd21dc-2ffa-48c9-9332-51269f44b7e9">使用 TreeWalker 巡覽 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
    <Member MemberName="RawViewWalker">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.TreeWalker RawViewWalker;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.TreeWalker RawViewWalker" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.TreeWalker.RawViewWalker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RawViewWalker As TreeWalker " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::TreeWalker ^ RawViewWalker;" />
      <MemberSignature Language="F#" Value=" staticval mutable RawViewWalker : System.Windows.Automation.TreeWalker" Usage="System.Windows.Automation.TreeWalker.RawViewWalker" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TreeWalker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示預先定義的 <see cref="T:System.Windows.Automation.TreeWalker" />，其中包含樹狀目錄中所有項目的檢視。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您的用戶端應用程式可能會嘗試尋找的項目在其自己的使用者介面中，您必須讓所有[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]個別執行緒上呼叫。  
  
   
  
## Examples  
 下列範例所示<xref:System.Windows.Automation.TreeWalker.ControlViewWalker>用來建構樹狀結構檢視中的樹狀子目錄的項目。 使用方式<xref:System.Windows.Automation.TreeWalker.RawViewWalker>完全相同。  
  
 [!code-csharp[UIAClient_snip#171](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#171)]
 [!code-vb[UIAClient_snip#171](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#171)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 自動化樹狀目錄概觀</related>
        <related type="Article" href="https://msdn.microsoft.com/library/afcd21dc-2ffa-48c9-9332-51269f44b7e9">使用 TreeWalker 巡覽 UI 自動化項目</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">取得 UI 自動化項目</related>
      </Docs>
    </Member>
  </Members>
</Type>