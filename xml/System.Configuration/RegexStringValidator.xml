<Type Name="RegexStringValidator" FullName="System.Configuration.RegexStringValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="59778b1058f818ccedbfc9b5a304f30e6f98c891" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37686611" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegexStringValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegexStringValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.RegexStringValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class RegexStringValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegexStringValidator : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type RegexStringValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>根據規則運算式所提供的規則來提供字串的驗證。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.RegexStringValidator>物件包含的規則需要驗證根據規則運算式的字串物件。 執行個體時，會建立規則<xref:System.Configuration.RegexStringValidator>建立類別。  
  
 <xref:System.Configuration.RegexStringValidator.CanValidate%2A>方法會判斷要驗證的物件型別是否符合預期的類型。 正在驗證的物件會傳遞做為參數的<xref:System.Configuration.RegexStringValidator.Validate%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Configuration.RegexStringValidator>型別。  
  
 [!code-csharp[System.Configuration.RegexStringValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.RegexStringValidator/CS/RegexStringValidator.cs#1)]
 [!code-vb[System.Configuration.RegexStringValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.RegexStringValidator/VB/RegexStringValidator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexStringValidator (string regex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string regex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.RegexStringValidator.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (regex As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexStringValidator(System::String ^ regex);" />
      <MemberSignature Language="F#" Value="new System.Configuration.RegexStringValidator : string -&gt; System.Configuration.RegexStringValidator" Usage="new System.Configuration.RegexStringValidator regex" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="regex" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regex">字串，會指定規則運算式。</param>
        <summary>初始化 <see cref="T:System.Configuration.RegexStringValidator" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="regex" /> 為 null 或空字串 ("")。</exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="regexStringValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">物件的型別。</param>
        <summary>判斷是否可以驗證物件的型別。</summary>
        <returns>如果 <paramref name="type" /> 參數符合某字串，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果驗證失敗，則會擲回例外狀況。  
  
   
  
## Examples  
 下列範例示範如何使用 <xref:System.Configuration.RegexStringValidator.CanValidate%2A> 方法。 此程式碼範例是針對所提供之較大範例的一部分<xref:System.Configuration.RegexStringValidator>類別。  
  
 [!code-csharp[System.Configuration.RegexStringValidator#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.RegexStringValidator/CS/RegexStringValidator.cs#3)]
 [!code-vb[System.Configuration.RegexStringValidator#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.RegexStringValidator/VB/RegexStringValidator.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.RegexStringValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="regexStringValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">物件的值。</param>
        <summary>判斷物件的值是否有效。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Configuration.RegexStringValidator>物件包含的規則需要驗證根據規則運算式的字串物件。 執行個體時，會建立規則<xref:System.Configuration.RegexStringValidator>建立類別。 要驗證的字串物件會傳遞做為參數的<xref:System.Configuration.RegexStringValidator.Validate%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例會示範如何使用 <xref:System.Configuration.RegexStringValidator.Validate%2A> 方法。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Configuration.RegexStringValidator>類別。  
  
 [!code-csharp[System.Configuration.RegexStringValidator#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.RegexStringValidator/CS/RegexStringValidator.cs#4)]
 [!code-vb[System.Configuration.RegexStringValidator#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.RegexStringValidator/VB/RegexStringValidator.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> 不符合 <see cref="T:System.Text.RegularExpressions.Regex" /> 類別的參數。</exception>
        <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
      </Docs>
    </Member>
  </Members>
</Type>