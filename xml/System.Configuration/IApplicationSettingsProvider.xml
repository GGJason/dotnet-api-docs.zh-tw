<Type Name="IApplicationSettingsProvider" FullName="System.Configuration.IApplicationSettingsProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6e68491c4abcd4ee9d840a4ddd0365ae1484c5fa" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37687391" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApplicationSettingsProvider" />
  <TypeSignature Language="F#" Value="type IApplicationSettingsProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定義用戶端為主之應用程式設定提供者的擴充功能。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 應用程式設定架構可讓您提供的自訂儲存機制，藉由建立自訂設定提供者，這個類別是類別的應用程式設定衍生自<xref:System.Configuration.SettingsProvider>。 這種類別包含儲存和擷取屬性的基本功能。 不過，您可以在這裡加入額外的標準化的功能藉由實作<xref:System.Configuration.IApplicationSettingsProvider>自訂設定提供者中的介面。 這個介面包含三個主要是讓更有效地處理應用程式版本變更的設定提供者的方法。 一般而言，設定提供者會儲存應用程式設定，針對不同版本的應用程式分開預期會在下列情況：  
  
-   並排顯示執行不同版本的應用程式。  
  
-   升級應用程式時，請保留應用程式設定。  
  
-   重設應用程式設定，設為預設值為目前使用的版本。  
  
 <xref:System.Configuration.LocalFileSettingsProvider> 類別會實作 <xref:System.Configuration.IApplicationSettingsProvider> 介面。 同一組所包含的方法<xref:System.Configuration.IApplicationSettingsProvider>中也有<xref:System.Configuration.ApplicationSettingsBase>類別，啟用的應用程式設定包裝函式和其設定提供者之間的預先定義的通訊通道的建立。  
  
> [!NOTE]
>  這個介面是選擇性的。 如果提供者未實作這個介面時，如果它嘗試存取此介面所定義之任何的方法設定基礎結構將會失敗而不另行通知。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
  </Docs>
  <Members>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue" Usage="iApplicationSettingsProvider.GetPreviousVersion (context, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Configuration.SettingsContext" />，描述目前應用程式的使用方式。</param>
        <param name="property">要傳回值的 <see cref="T:System.Configuration.SettingsProperty" />。</param>
        <summary>傳回相同應用程式先前版本的指定設定屬性值。</summary>
        <returns>
          <see cref="T:System.Configuration.SettingsPropertyValue" />，包含指定屬性設定的值，與在應用程式先前版本中的最後設定一樣，如果找不到設定，則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>方法搭配<xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>移轉應用程式設定的新版應用程式安裝期間或之後的方法。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">針對<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />權限。</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Reset : System.Configuration.SettingsContext -&gt; unit" Usage="iApplicationSettingsProvider.Reset context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Configuration.SettingsContext" />，描述目前應用程式的使用方式。</param>
        <summary>將與指定應用程式相關聯的應用程式設定重設為預設值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A>方法會重新初始化之指定的應用程式設定群組的預存的值。 相反地，<xref:System.Configuration.DefaultSettingValueAttribute>屬性在初始化期間，提供單一設定屬性的預設值，如果它沒有預存的值。  
  
 設定提供者會判斷合理的預設值是指定群組的應用程式設定。 例如，在實作<xref:System.Configuration.LocalFileSettingsProvider>回到在其共用值重設使用者範圍的設定`application.exe.config`檔案; 相反地，將會使應用程式範圍的設定保持不變。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">針對<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />權限。</permission>
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit" Usage="iApplicationSettingsProvider.Upgrade (context, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Configuration.SettingsContext" />，描述目前應用程式的使用方式。</param>
        <param name="properties">
          <see cref="T:System.Configuration.SettingsPropertyCollection" />，包含要擷取其值的設定屬性群組。</param>
        <summary>指示提供者應用程式已升級。 這讓提供者可以適當升級其儲存的設定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 並排顯示安裝和執行不同版本相同的應用程式，可讓.NET Framework。 應用程式設定提供者會儲存應用程式分開，以確保隔離每個版本的應用程式設定。 不過，您可能要從目前的應用程式的先前版本移轉設定。 若要提供這項移轉功能，請使用<xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>方法，從衍生類別中實作<xref:System.Configuration.SettingsProvider>。  
  
 您可以使用<xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>方法搭配<xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>移轉應用程式設定的新版應用程式安裝期間或之後的方法。  
  
 應該隱藏這個方法，每個應用程式設定有<xref:System.Configuration.NoSettingsVersionUpgradeAttribute>套用，或整個設定包裝函式類別，衍生自<xref:System.Configuration.ApplicationSettingsBase>。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">針對<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />權限。</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>