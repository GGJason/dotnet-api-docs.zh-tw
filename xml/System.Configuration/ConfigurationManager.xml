<Type Name="ConfigurationManager" FullName="System.Configuration.ConfigurationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="498b12805830f568d86400b697fb352f4e53056e" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55424040" /></Metadata><TypeSignature Language="C#" Value="public static class ConfigurationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConfigurationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationManager abstract sealed" />
  <TypeSignature Language="F#" Value="type ConfigurationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="75027-101">提供用戶端應用程式的組態檔存取。</span><span class="sxs-lookup"><span data-stu-id="75027-101">Provides access to configuration files for client applications.</span></span> <span data-ttu-id="75027-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="75027-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75027-103"><xref:System.Configuration.ConfigurationManager>類別可讓您存取電腦、 應用程式和使用者設定資訊。</span><span class="sxs-lookup"><span data-stu-id="75027-103">The <xref:System.Configuration.ConfigurationManager> class enables you to access machine, application, and user configuration information.</span></span> <span data-ttu-id="75027-104">這個類別會取代<xref:System.Configuration.ConfigurationSettings>類別已被取代。</span><span class="sxs-lookup"><span data-stu-id="75027-104">This class replaces the <xref:System.Configuration.ConfigurationSettings> class, which is deprecated.</span></span> <span data-ttu-id="75027-105">Web 應用程式，使用<xref:System.Web.Configuration.WebConfigurationManager>類別。</span><span class="sxs-lookup"><span data-stu-id="75027-105">For web applications, use the <xref:System.Web.Configuration.WebConfigurationManager> class.</span></span>  
  
 <span data-ttu-id="75027-106">若要使用<xref:System.Configuration.ConfigurationManager>類別，您的專案必須參考`System.Configuration`組件。</span><span class="sxs-lookup"><span data-stu-id="75027-106">To use the <xref:System.Configuration.ConfigurationManager> class, your project must reference the `System.Configuration` assembly.</span></span> <span data-ttu-id="75027-107">根據預設，有些專案範本，例如主控台應用程式，不會參考這個組件，您必須手動參考它。</span><span class="sxs-lookup"><span data-stu-id="75027-107">By default, some project templates, like Console Application, do not reference this assembly so you must manually reference it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="75027-108">名稱和應用程式組態檔的位置取決於應用程式的主應用程式。</span><span class="sxs-lookup"><span data-stu-id="75027-108">The name and location of the application configuration file depend on the application's host.</span></span> <span data-ttu-id="75027-109">如需詳細資訊，請參閱[NIB:應用程式組態檔](https://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0)。</span><span class="sxs-lookup"><span data-stu-id="75027-109">For more information, see [NIB: Application Configuration Files](https://msdn.microsoft.com/library/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0).</span></span>  
  
 <span data-ttu-id="75027-110">您可以使用內建<xref:System.Configuration>類型或衍生自它們來處理組態資訊。</span><span class="sxs-lookup"><span data-stu-id="75027-110">You can use the built-in <xref:System.Configuration> types or derive from them to handle configuration information.</span></span> <span data-ttu-id="75027-111">藉由使用這些類型，您可以直接使用組態資訊且您可以擴充以包含自訂資訊的組態檔。</span><span class="sxs-lookup"><span data-stu-id="75027-111">By using these types, you can work directly with configuration information and you can extend configuration files to include custom information.</span></span>  
  
 <span data-ttu-id="75027-112"><xref:System.Configuration.ConfigurationManager>類別包含的成員，可讓您執行下列工作：</span><span class="sxs-lookup"><span data-stu-id="75027-112">The <xref:System.Configuration.ConfigurationManager> class includes members that enable you to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="75027-113">讀取組態檔中的區段。</span><span class="sxs-lookup"><span data-stu-id="75027-113">Read a section from a configuration file.</span></span> <span data-ttu-id="75027-114">若要存取組態資訊，請呼叫<xref:System.Configuration.ConfigurationManager.GetSection%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="75027-114">To access configuration information, call the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="75027-115">針對這類的某些小節`appSettings`並`connectionStrings`，使用<xref:System.Configuration.ConfigurationManager.AppSettings%2A>和<xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A>類別。</span><span class="sxs-lookup"><span data-stu-id="75027-115">For some sections such as `appSettings` and `connectionStrings`, use the <xref:System.Configuration.ConfigurationManager.AppSettings%2A> and <xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A> classes.</span></span> <span data-ttu-id="75027-116">這些成員執行唯讀作業使用的設定，單一快取執行個體，則為多執行緒注意。</span><span class="sxs-lookup"><span data-stu-id="75027-116">These members perform read-only operations, use a single cached instance of the configuration, and are multithread aware.</span></span>  
  
-   <span data-ttu-id="75027-117">讀取和寫入組態檔的整體。</span><span class="sxs-lookup"><span data-stu-id="75027-117">Read and write configuration files as a whole.</span></span> <span data-ttu-id="75027-118">您的應用程式可以讀取和寫入任何層級的組態設定值，為自己或其他應用程式或電腦，在本機或遠端。</span><span class="sxs-lookup"><span data-stu-id="75027-118">Your application can read and write configuration settings at any level, for itself or for other applications or computers, locally or remotely.</span></span> <span data-ttu-id="75027-119">使用所提供的方法的其中一個<xref:System.Configuration.ConfigurationManager>開啟組態檔，例如 SampleApp.exe.config 的類別。這些方法會傳回<xref:System.Configuration.Configuration>會公開方法與屬性，您可以使用它來處理相關聯的組態檔的物件。</span><span class="sxs-lookup"><span data-stu-id="75027-119">Use one of the methods provided by the <xref:System.Configuration.ConfigurationManager> class to open a configuration file such as SampleApp.exe.config. These methods return a <xref:System.Configuration.Configuration> object that in turn exposes methods and properties you can use to work with the associated configuration files.</span></span> <span data-ttu-id="75027-120">方法會執行讀取或寫入作業和寫入檔案時，每次建立設定資料。</span><span class="sxs-lookup"><span data-stu-id="75027-120">The methods perform read or write operations and create the configuration data every time that a file is written.</span></span>  
  
-   <span data-ttu-id="75027-121">支援的組態工作。</span><span class="sxs-lookup"><span data-stu-id="75027-121">Support configuration tasks.</span></span> <span data-ttu-id="75027-122">下列類型用來支援各種不同的設定工作：</span><span class="sxs-lookup"><span data-stu-id="75027-122">The following types are used to support various configuration tasks:</span></span>  
  
    -   <xref:System.Configuration.SectionInformation>  
  
    -   <xref:System.Configuration.PropertyInformation>  
  
    -   <xref:System.Configuration.PropertyInformationCollection>  
  
    -   <xref:System.Configuration.ElementInformation>  
  
    -   <xref:System.Configuration.ContextInformation>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroup>  
  
    -   <xref:System.Configuration.ConfigurationSectionGroupCollection>  
  
     <span data-ttu-id="75027-123">除了使用現有的組態資訊，您可以建立和使用自訂組態項目，例如擴充內建的組態型別<xref:System.Configuration.ConfigurationElement>， <xref:System.Configuration.ConfigurationElementCollection>， <xref:System.Configuration.ConfigurationProperty>，和<xref:System.Configuration.ConfigurationSection>類別。</span><span class="sxs-lookup"><span data-stu-id="75027-123">In addition to working with existing configuration information, you can create and work with custom configuration elements by extending the built-in configuration types such as the <xref:System.Configuration.ConfigurationElement>, <xref:System.Configuration.ConfigurationElementCollection>, <xref:System.Configuration.ConfigurationProperty>, and <xref:System.Configuration.ConfigurationSection> classes.</span></span> <span data-ttu-id="75027-124">如需如何以程式設計方式擴充內建的設定類型的範例，請參閱<xref:System.Configuration.ConfigurationSection>。</span><span class="sxs-lookup"><span data-stu-id="75027-124">For an example of how to extend a built-in configuration type programmatically, see <xref:System.Configuration.ConfigurationSection>.</span></span> <span data-ttu-id="75027-125">如需如何擴充內建的組態型別，以使用以屬性為基礎的模型的範例，請參閱<xref:System.Configuration.ConfigurationElement>。</span><span class="sxs-lookup"><span data-stu-id="75027-125">For an example of how to extend a built-in configuration type that uses the attribute-based model, see <xref:System.Configuration.ConfigurationElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75027-126">第一個範例顯示簡單的主控台應用程式會讀取應用程式設定、 加入新的設定，以及更新現有的設定。</span><span class="sxs-lookup"><span data-stu-id="75027-126">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="75027-127">上述範例假設您的專案有 App.config 檔案，如下所示。</span><span class="sxs-lookup"><span data-stu-id="75027-127">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 <span data-ttu-id="75027-128">下列範例示範如何使用從資料庫讀取資料的連接字串。</span><span class="sxs-lookup"><span data-stu-id="75027-128">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="75027-129">上述範例假設您的專案具有 App.config，如下所示。</span><span class="sxs-lookup"><span data-stu-id="75027-129">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="75027-130"><see cref="T:System.Configuration.Configuration" />類別可讓您以程式設計方式編輯組態檔的存取。</span><span class="sxs-lookup"><span data-stu-id="75027-130">The <see cref="T:System.Configuration.Configuration" /> class enables programmatic access for editing configuration files.</span></span> <span data-ttu-id="75027-131">您可以使用所提供的開啟方法的其中一個<see cref="T:System.Configuration.ConfigurationManager" />。</span><span class="sxs-lookup"><span data-stu-id="75027-131">You use one of the Open methods provided by <see cref="T:System.Configuration.ConfigurationManager" />.</span></span> <span data-ttu-id="75027-132">這些方法會傳回<see cref="T:System.Configuration.Configuration" />物件，接著提供必要的方法和屬性，以處理基礎的組態檔。</span><span class="sxs-lookup"><span data-stu-id="75027-132">These methods return a <see cref="T:System.Configuration.Configuration" /> object, which in turn provides the required methods and properties to handle the underlying configuration files.</span></span> <span data-ttu-id="75027-133">您可以存取這些檔案進行讀取或寫入。</span><span class="sxs-lookup"><span data-stu-id="75027-133">You can access these files for reading or writing.</span></span>  
  
<span data-ttu-id="75027-134">若要讀取的組態檔，使用<see cref="M:System.Configuration.Configuration.GetSection(System.String)" />或<see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" />讀取組態資訊。</span><span class="sxs-lookup"><span data-stu-id="75027-134">To read the configuration files, use <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> or <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> to read configuration information.</span></span> <span data-ttu-id="75027-135">讀取的處理程序的使用者必須具有下列權限：</span><span class="sxs-lookup"><span data-stu-id="75027-135">The user or process that reads must have the following permissions:</span></span> 
<span data-ttu-id="75027-136">-讀取組態檔，在目前的組態階層層級上的權限。</span><span class="sxs-lookup"><span data-stu-id="75027-136">-   Read permission on the configuration file at the current configuration hierarchy level.</span></span>  
  
<span data-ttu-id="75027-137">-讀取權限的所有父設定檔。</span><span class="sxs-lookup"><span data-stu-id="75027-137">-   Read permissions on all the parent configuration files.</span></span>  
  
<span data-ttu-id="75027-138">如果您的應用程式需要它自己的設定唯讀存取，建議您改用<see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />方法。</span><span class="sxs-lookup"><span data-stu-id="75027-138">If your application needs read-only access to its own configuration, we recommend that you use the <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> method.</span></span> <span data-ttu-id="75027-139">這個方法可以存取目前的應用程式的快取的設定值，其具有較佳的效能比<see cref="T:System.Configuration.Configuration" />類別。</span><span class="sxs-lookup"><span data-stu-id="75027-139">This method provides access to the cached configuration values for the current application, which has better performance than the <see cref="T:System.Configuration.Configuration" /> class.</span></span>  
  
<span data-ttu-id="75027-140">若要寫入組態檔，請使用其中一種<see cref="Overload:System.Configuration.Configuration.Save" />方法。</span><span class="sxs-lookup"><span data-stu-id="75027-140">To write to the configuration files, use one of the <see cref="Overload:System.Configuration.Configuration.Save" /> methods.</span></span> <span data-ttu-id="75027-141">寫入的處理程序的使用者必須具有下列權限：</span><span class="sxs-lookup"><span data-stu-id="75027-141">The user or process that writes must have the following permissions:</span></span> 
<span data-ttu-id="75027-142">-撰寫組態檔，並在目前的組態階層層級目錄的權限。</span><span class="sxs-lookup"><span data-stu-id="75027-142">-   Write permission on the configuration file and directory at the current configuration hierarchy level.</span></span>  
  
<span data-ttu-id="75027-143">-讀取所有的組態檔的權限。</span><span class="sxs-lookup"><span data-stu-id="75027-143">-   Read permissions on all the configuration files.</span></span></para></block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Web.Configuration.WebConfigurationManager" />
    <related type="Article" href="~/docs/framework/configure-apps/index.md"><span data-ttu-id="75027-144">組態檔</span><span class="sxs-lookup"><span data-stu-id="75027-144">Configuration Files</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.NameValueCollection AppSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.AppSettings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AppSettings As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::NameValueCollection ^ AppSettings { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppSettings : System.Collections.Specialized.NameValueCollection" Usage="System.Configuration.ConfigurationManager.AppSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="75027-145">取得目前應用程式預設組態的 <see cref="T:System.Configuration.AppSettingsSection" /> 資料。</span><span class="sxs-lookup"><span data-stu-id="75027-145">Gets the <see cref="T:System.Configuration.AppSettingsSection" /> data for the current application's default configuration.</span></span></summary>
        <value><span data-ttu-id="75027-146">A<see cref="T:System.Collections.Specialized.NameValueCollection" />物件，其中包含的內容<see cref="T:System.Configuration.AppSettingsSection" />物件目前的應用程式預設組態。</span><span class="sxs-lookup"><span data-stu-id="75027-146">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the contents of the <see cref="T:System.Configuration.AppSettingsSection" /> object for the current application's default configuration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75027-147">A<xref:System.Configuration.AppSettingsSection>物件包含的組態檔的內容`appSettings`一節。</span><span class="sxs-lookup"><span data-stu-id="75027-147">A <xref:System.Configuration.AppSettingsSection> object contains the contents of the configuration file's `appSettings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75027-148">第一個範例顯示簡單的主控台應用程式會讀取應用程式設定、 加入新的設定，以及更新現有的設定。</span><span class="sxs-lookup"><span data-stu-id="75027-148">The first example shows a simple console application that reads application settings, adds a new setting, and updates an existing setting.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadAllSettings();  
            ReadSetting("Setting1");  
            ReadSetting("NotValid");  
            AddUpdateAppSettings("NewSetting", "May 7, 2014");  
            AddUpdateAppSettings("Setting1", "May 8, 2014");  
            ReadAllSettings();  
        }  
  
        static void ReadAllSettings()  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
  
                if (appSettings.Count == 0)  
                {  
                    Console.WriteLine("AppSettings is empty.");  
                }  
                else  
                {  
                    foreach (var key in appSettings.AllKeys)  
                    {  
                        Console.WriteLine("Key: {0} Value: {1}", key, appSettings[key]);  
                    }  
                }  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void ReadSetting(string key)  
        {  
            try  
            {  
                var appSettings = ConfigurationManager.AppSettings;  
                string result = appSettings[key] ?? "Not Found";  
                Console.WriteLine(result);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error reading app settings");  
            }  
        }  
  
        static void AddUpdateAppSettings(string key, string value)  
        {  
            try  
            {  
                var configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);  
                var settings = configFile.AppSettings.Settings;  
                if (settings[key] == null)  
                {  
                    settings.Add(key, value);  
                }  
                else  
                {  
                    settings[key].Value = value;  
                }  
                configFile.Save(ConfigurationSaveMode.Modified);  
                ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name);  
            }  
            catch (ConfigurationErrorsException)  
            {  
                Console.WriteLine("Error writing app settings");  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Module Module1  
  
    Sub Main()  
        ReadAllSettings()  
        ReadSetting("Setting1")  
        ReadSetting("NotValid")  
        AddUpdateAppSettings("NewSetting", "May 7, 2014")  
        AddUpdateAppSettings("Setting1", "May 8, 2014")  
        ReadAllSettings()  
    End Sub  
  
    Sub ReadAllSettings()  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
  
            If appSettings.Count = 0 Then  
                Console.WriteLine("AppSettings is empty.")  
            Else  
                For Each key As String In appSettings.AllKeys  
                    Console.WriteLine("Key: {0} Value: {1}", key, appSettings(key))  
                Next  
            End If  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub ReadSetting(key As String)  
        Try  
            Dim appSettings = ConfigurationManager.AppSettings  
            Dim result As String = appSettings(key)  
            If IsNothing(result) Then  
                result = "Not found"  
            End If  
            Console.WriteLine(result)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error reading app settings")  
        End Try  
    End Sub  
  
    Sub AddUpdateAppSettings(key As String, value As String)  
        Try  
            Dim configFile = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None)  
            Dim settings = configFile.AppSettings.Settings  
            If IsNothing(settings(key)) Then  
                settings.Add(key, value)  
            Else  
                settings(key).Value = value  
            End If  
            configFile.Save(ConfigurationSaveMode.Modified)  
            ConfigurationManager.RefreshSection(configFile.AppSettings.SectionInformation.Name)  
        Catch e As ConfigurationErrorsException  
            Console.WriteLine("Error writing app settings")  
        End Try  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="75027-149">上述範例假設您的專案有 App.config 檔案，如下所示。</span><span class="sxs-lookup"><span data-stu-id="75027-149">The previous example assumes your project has an App.config file as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
  <appSettings>  
    <add key="Setting1" value="May 5, 2014"/>  
    <add key="Setting2" value="May 6, 2014"/>  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="75027-150">無法使用此應用程式設定資料來擷取 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="75027-150">Could not retrieve a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object with the application settings data.</span></span></exception>
        <altmember cref="T:System.Configuration.AppSettingsSection" />
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionStrings">
      <MemberSignature Language="C#" Value="public static System.Configuration.ConnectionStringSettingsCollection ConnectionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.ConnectionStringSettingsCollection ConnectionStrings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ConnectionStrings As ConnectionStringSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::ConnectionStringSettingsCollection ^ ConnectionStrings { System::Configuration::ConnectionStringSettingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionStrings : System.Configuration.ConnectionStringSettingsCollection" Usage="System.Configuration.ConfigurationManager.ConnectionStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConnectionStringSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="75027-151">取得目前應用程式預設組態的 <see cref="T:System.Configuration.ConnectionStringsSection" /> 資料。</span><span class="sxs-lookup"><span data-stu-id="75027-151">Gets the <see cref="T:System.Configuration.ConnectionStringsSection" /> data for the current application's default configuration.</span></span></summary>
        <value><span data-ttu-id="75027-152">A<see cref="T:System.Configuration.ConnectionStringSettingsCollection" />物件，其中包含的內容<see cref="T:System.Configuration.ConnectionStringsSection" />物件目前的應用程式預設組態。</span><span class="sxs-lookup"><span data-stu-id="75027-152">A <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object that contains the contents of the <see cref="T:System.Configuration.ConnectionStringsSection" /> object for the current application's default configuration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75027-153">A<xref:System.Configuration.ConnectionStringsSection>物件包含的組態檔的內容`connectionStrings`一節。</span><span class="sxs-lookup"><span data-stu-id="75027-153">A <xref:System.Configuration.ConnectionStringsSection> object contains the contents of the configuration file's `connectionStrings` section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75027-154">下列範例示範如何使用從資料庫讀取資料的連接字串。</span><span class="sxs-lookup"><span data-stu-id="75027-154">The following example shows how to use a connection string to read data from a database.</span></span>  
  
```csharp  
using System;  
using System.Configuration;  
using System.Data.SqlClient;  
  
namespace ConsoleApplication1  
{  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            ReadProducts();  
        }  
  
        static void ReadProducts()  
        {  
            var connectionString = ConfigurationManager.ConnectionStrings["WingtipToys"].ConnectionString;  
            string queryString = "SELECT Id, ProductName FROM dbo.Products;";  
            using (var connection = new SqlConnection(connectionString))  
            {  
                var command = new SqlCommand(queryString, connection);  
                connection.Open();  
                using (var reader = command.ExecuteReader())  
                {  
                    while (reader.Read())  
                    {  
                        Console.WriteLine(String.Format("{0}, {1}", reader[0], reader[1]));  
                    }  
                }  
            }  
        }  
    }  
}  
```  
  
```vb  
Imports System.Configuration  
Imports System.Data.SqlClient  
Module Module1  
  
    Sub Main()  
        ReadProducts()  
    End Sub  
  
    Sub ReadProducts()  
        Dim connectionString = ConfigurationManager.ConnectionStrings("WingtipToys").ConnectionString  
        Dim queryString = "SELECT Id, ProductName FROM dbo.Products;"  
        Using connection As New SqlConnection(connectionString)  
            Dim command = New SqlCommand(queryString, connection)  
            connection.Open()  
  
            Using reader As SqlDataReader = command.ExecuteReader()  
                While reader.Read()  
                    Console.WriteLine(String.Format("{0}, {1}", reader(0), reader(1)))  
                End While  
            End Using  
        End Using  
    End Sub  
  
End Module  
```  
  
 <span data-ttu-id="75027-155">上述範例假設您的專案具有 App.config，如下所示。</span><span class="sxs-lookup"><span data-stu-id="75027-155">The previous example assumes your project has an App.config as shown below.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
    <startup>   
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
    </startup>  
    <connectionStrings>  
      <add name="WingtipToys" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=WingtipToys;Integrated Security=True;Pooling=False" />  
    </connectionStrings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="75027-156">無法擷取 <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="75027-156">Could not retrieve a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object.</span></span></exception>
        <altmember cref="T:System.Configuration.ConnectionStringsSection" />
        <altmember cref="T:System.Configuration.ConnectionStringSettingsCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public static object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member GetSection : string -&gt; obj" Usage="System.Configuration.ConfigurationManager.GetSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName"><span data-ttu-id="75027-157">組態區段路徑和名稱。</span><span class="sxs-lookup"><span data-stu-id="75027-157">The configuration section path and name.</span></span> <span data-ttu-id="75027-158">節點名稱以正斜線分隔，例如 "system.net/mailSettings/smtp"。</span><span class="sxs-lookup"><span data-stu-id="75027-158">Node names are separated by forward slashes, for example "system.net/mailSettings/smtp".</span></span></param>
        <summary><span data-ttu-id="75027-159">擷取目前應用程式預設組態的指定組態區段。</span><span class="sxs-lookup"><span data-stu-id="75027-159">Retrieves a specified configuration section for the current application's default configuration.</span></span></summary>
        <returns><span data-ttu-id="75027-160">指定的 <see cref="T:System.Configuration.ConfigurationSection" /> 物件；如果區段不存在，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75027-160">The specified <see cref="T:System.Configuration.ConfigurationSection" /> object, or <see langword="null" /> if the section does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75027-161">用戶端應用程式，這個方法會擷取由合併應用程式組態檔、 本機使用者組態檔案和漫遊設定檔的組態檔。</span><span class="sxs-lookup"><span data-stu-id="75027-161">For client applications, this method retrieves a configuration file obtained by merging the application configuration file, the local user configuration file, and the roaming configuration file.</span></span>  
  
 <span data-ttu-id="75027-162"><xref:System.Configuration.ConfigurationManager.GetSection%2A>方法會存取無法變更的執行階段組態資訊。</span><span class="sxs-lookup"><span data-stu-id="75027-162">The <xref:System.Configuration.ConfigurationManager.GetSection%2A> method accesses run-time configuration information that it cannot change.</span></span> <span data-ttu-id="75027-163">若要變更組態，您使用<xref:System.Configuration.Configuration.GetSection%2A>針對組態檔，您使用其中一個下列的開啟方法取得的方法：</span><span class="sxs-lookup"><span data-stu-id="75027-163">To change the configuration, you use the <xref:System.Configuration.Configuration.GetSection%2A> method on the configuration file that you obtain by using one of the following Open methods:</span></span>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A>  
  
-   <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>  
  
   
  
## Examples  
 <span data-ttu-id="75027-164">下列範例會示範如何使用 <xref:System.Configuration.ConfigurationManager.GetSection%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="75027-164">The following example shows how to use the <xref:System.Configuration.ConfigurationManager.GetSection%2A> method.</span></span> <span data-ttu-id="75027-165">範例是針對所提供之較大範例的一部分<xref:System.Configuration.ConfigurationManager>類別。</span><span class="sxs-lookup"><span data-stu-id="75027-165">The example is part of a larger example that is provided for the <xref:System.Configuration.ConfigurationManager> class.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="75027-166">無法載入組態檔。</span><span class="sxs-lookup"><span data-stu-id="75027-166">A configuration file could not be loaded.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="75027-167">您必須轉換成預期的組態類型的傳回值。</span><span class="sxs-lookup"><span data-stu-id="75027-167">You must cast the return value to the expected configuration type.</span></span> <span data-ttu-id="75027-168">若要避免可能的轉型例外狀況，您應該使用條件式轉型作業例如<see langword="as" />以 C# 或 Visual Basic 中的函式的運算子。</span><span class="sxs-lookup"><span data-stu-id="75027-168">To avoid possible casting exceptions, you should use a conditional casting operation such as the <see langword="as" /> operator in C# or the  function in Visual Basic.</span></span></para></block>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="75027-169">將指定的用戶端組態檔做為 <see cref="T:System.Configuration.Configuration" /> 物件開啟。</span><span class="sxs-lookup"><span data-stu-id="75027-169">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="F#" Value="static member OpenExeConfiguration : System.Configuration.ConfigurationUserLevel -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenExeConfiguration userLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="userLevel"><span data-ttu-id="75027-170">對其開啟組態的 <see cref="T:System.Configuration.ConfigurationUserLevel" />。</span><span class="sxs-lookup"><span data-stu-id="75027-170">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> for which you are opening the configuration.</span></span></param>
        <summary><span data-ttu-id="75027-171">將目前應用程式的組態檔開啟為 <see cref="T:System.Configuration.Configuration" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="75027-171">Opens the configuration file for the current application as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
        <returns><span data-ttu-id="75027-172"><see cref="T:System.Configuration.Configuration" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="75027-172">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75027-173">用戶端應用程式使用適用於所有的使用者、 個別的設定會套用至個別使用者，以及設定會套用至漫遊使用者的全域組態。</span><span class="sxs-lookup"><span data-stu-id="75027-173">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="75027-174">`userLevel`參數判斷是否不有任何使用者層級 （在組態檔是在應用程式的相同目錄中），藉由指示要開啟的組態檔的位置或的個別使用者層級 (組態檔位於應用程式設定路徑取決於使用者層級）。</span><span class="sxs-lookup"><span data-stu-id="75027-174">The `userLevel` parameter determines the location of the configuration file being opened by indicating whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level).</span></span>  
  
 <span data-ttu-id="75027-175">指定要傳遞下列其中一項以取得哪些組態值`userLevel`:</span><span class="sxs-lookup"><span data-stu-id="75027-175">Specify which configuration to get by passing one of the following values for `userLevel`:</span></span>  
  
-   <span data-ttu-id="75027-176">若要取得<xref:System.Configuration.Configuration>設定套用到所有的使用者的物件`userLevel`至<xref:System.Configuration.ConfigurationUserLevel.None>。</span><span class="sxs-lookup"><span data-stu-id="75027-176">To get the <xref:System.Configuration.Configuration> object that applies to all users, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.None>.</span></span>  
  
-   <span data-ttu-id="75027-177">若要取得本機<xref:System.Configuration.Configuration>物件，適用於目前的使用者集`userLevel`至<xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>。</span><span class="sxs-lookup"><span data-stu-id="75027-177">To get the local <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal>.</span></span>  
  
-   <span data-ttu-id="75027-178">若要取得漫遊<xref:System.Configuration.Configuration>設定適用於目前的使用者的物件`userLevel`至<xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>。</span><span class="sxs-lookup"><span data-stu-id="75027-178">To get the roaming <xref:System.Configuration.Configuration> object that applies to the current user, set `userLevel` to <xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming>.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="75027-179">若要取得<xref:System.Configuration.Configuration>物件對於資源，您的程式碼必須擁有讀取權限繼承設定的所有設定檔。</span><span class="sxs-lookup"><span data-stu-id="75027-179">To get the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="75027-180">若要更新組態檔，您的程式碼必須額外擁有組態檔，它所在的目錄的寫入權限。</span><span class="sxs-lookup"><span data-stu-id="75027-180">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75027-181">下列程式碼範例示範如何使用 <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="75027-181">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#5)]
 [!code-vb[System.Configuration.ConfigurationManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="75027-182">無法載入組態檔。</span><span class="sxs-lookup"><span data-stu-id="75027-182">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenExeConfiguration (string exePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenExeConfiguration(string exePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExeConfiguration (exePath As String) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenExeConfiguration(System::String ^ exePath);" />
      <MemberSignature Language="F#" Value="static member OpenExeConfiguration : string -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenExeConfiguration exePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exePath"><span data-ttu-id="75027-183">可執行檔 (exe) 的路徑。</span><span class="sxs-lookup"><span data-stu-id="75027-183">The path of the executable (exe) file.</span></span></param>
        <summary><span data-ttu-id="75027-184">將指定的用戶端組態檔做為 <see cref="T:System.Configuration.Configuration" /> 物件開啟。</span><span class="sxs-lookup"><span data-stu-id="75027-184">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
        <returns><span data-ttu-id="75027-185"><see cref="T:System.Configuration.Configuration" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="75027-185">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75027-186">用戶端應用程式使用適用於所有的使用者、 個別的設定會套用至個別使用者，以及設定會套用至漫遊使用者的全域組態。</span><span class="sxs-lookup"><span data-stu-id="75027-186">Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</span></span> <span data-ttu-id="75027-187">`userLevel`值會決定要開啟的組態檔的位置。</span><span class="sxs-lookup"><span data-stu-id="75027-187">The `userLevel` value determines the location of the configuration file being opened.</span></span> <span data-ttu-id="75027-188">它會指出是否有任何使用者層級 （在組態檔是在應用程式的相同目錄中） 或 （在組態檔是位於取決於使用者層級類型的應用程式設定路徑） 的每位使用者層級。</span><span class="sxs-lookup"><span data-stu-id="75027-188">It indicates whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level type.).</span></span>  
  
 <span data-ttu-id="75027-189">呼叫這個方法多載就相當於呼叫<xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29>多載`preLoad`參數設為`false`。</span><span class="sxs-lookup"><span data-stu-id="75027-189">Calling this method overload is equivalent to calling the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29> overload with the `preLoad` parameter set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75027-190">下列程式碼範例示範如何使用 <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="75027-190">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenExeConfiguration%2A> method.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#6)]
 [!code-vb[System.Configuration.ConfigurationManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="75027-191">無法載入組態檔。</span><span class="sxs-lookup"><span data-stu-id="75027-191">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMachineConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMachineConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMachineConfiguration () As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMachineConfiguration();" />
      <MemberSignature Language="F#" Value="static member OpenMachineConfiguration : unit -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMachineConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="75027-192">將目前電腦上的電腦組態檔開啟做為 <see cref="T:System.Configuration.Configuration" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="75027-192">Opens the machine configuration file on the current computer as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
        <returns><span data-ttu-id="75027-193"><see cref="T:System.Configuration.Configuration" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="75027-193">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75027-194">機器組態設定會套用至整個電腦和所有應用程式存在，除非覆寫本機應用程式的範圍。</span><span class="sxs-lookup"><span data-stu-id="75027-194">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="75027-195">機器組態設定會從目前執行版本的.NET Framework 的 Machine.config 檔案讀取。</span><span class="sxs-lookup"><span data-stu-id="75027-195">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="75027-196">Machine.config 檔案位於下列子目錄：</span><span class="sxs-lookup"><span data-stu-id="75027-196">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="75027-197">*%windir%* \Microsoft.NET\Framework\\*version*\config</span><span class="sxs-lookup"><span data-stu-id="75027-197">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="75027-198">若要取得<xref:System.Configuration.Configuration>物件對於資源，您的程式碼必須擁有讀取權限繼承設定的所有設定檔。</span><span class="sxs-lookup"><span data-stu-id="75027-198">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="75027-199">若要更新組態檔，您的程式碼必須額外擁有組態檔，它所在的目錄的寫入權限。</span><span class="sxs-lookup"><span data-stu-id="75027-199">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="75027-200">您不可以存取其他版本可能會在電腦上安裝的.NET framework 的 Machine.config 檔案。</span><span class="sxs-lookup"><span data-stu-id="75027-200">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75027-201">下列程式碼範例示範如何使用<xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A>方法，以取得組態檔中包含的所有區段。</span><span class="sxs-lookup"><span data-stu-id="75027-201">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMachineConfiguration%2A> method to obtain all sections that are contained in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="75027-202">無法載入組態檔。</span><span class="sxs-lookup"><span data-stu-id="75027-202">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenMappedExeConfiguration">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="75027-203">將指定的用戶端組態檔做為 <see cref="T:System.Configuration.Configuration" /> 物件開啟。</span><span class="sxs-lookup"><span data-stu-id="75027-203">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel);" />
      <MemberSignature Language="F#" Value="static member OpenMappedExeConfiguration : System.Configuration.ExeConfigurationFileMap * System.Configuration.ConfigurationUserLevel -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedExeConfiguration (fileMap, userLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" />
      </Parameters>
      <Docs>
        <param name="fileMap"><span data-ttu-id="75027-204"><see cref="T:System.Configuration.ExeConfigurationFileMap" /> 物件，參考要使用的組態檔，而非應用程式預設組態檔。</span><span class="sxs-lookup"><span data-stu-id="75027-204">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span></span></param>
        <param name="userLevel"><span data-ttu-id="75027-205">對其開啟組態的 <see cref="T:System.Configuration.ConfigurationUserLevel" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="75027-205">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span></span></param>
        <summary><span data-ttu-id="75027-206">開啟指定的用戶端組態檔，做為使用指定檔案對應和使用者層級的 <see cref="T:System.Configuration.Configuration" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="75027-206">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping and user level.</span></span></summary>
        <returns><span data-ttu-id="75027-207">組態物件。</span><span class="sxs-lookup"><span data-stu-id="75027-207">The configuration object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75027-208"><xref:System.Configuration.ConfigurationUserLevel>物件可以決定要開啟的組態檔的位置。</span><span class="sxs-lookup"><span data-stu-id="75027-208">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file being opened.</span></span> <span data-ttu-id="75027-209">它會指出檔案是否有任何使用者層級 （在組態檔是在應用程式的相同目錄中） 或個別使用者層級 (設定檔是位於應用程式設定的路徑取決於`userLevel`)。</span><span class="sxs-lookup"><span data-stu-id="75027-209">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="75027-210">若要取得<xref:System.Configuration.Configuration>物件對於資源，您的程式碼必須擁有讀取權限繼承設定的所有設定檔。</span><span class="sxs-lookup"><span data-stu-id="75027-210">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="75027-211">若要更新組態檔，您的程式碼必須額外擁有組態檔，它所在的目錄的寫入權限。</span><span class="sxs-lookup"><span data-stu-id="75027-211">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75027-212">下列程式碼範例示範如何使用<xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>方法，以取得組態檔所包含的所有區段。</span><span class="sxs-lookup"><span data-stu-id="75027-212">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> method to obtain all sections that are contained by the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#9)]
 [!code-vb[System.Configuration.ConfigurationManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="75027-213">無法載入組態檔。</span><span class="sxs-lookup"><span data-stu-id="75027-213">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.ConfigurationUserLevel" />
        <altmember cref="T:System.Configuration.Configuration" />
      </Docs>
    </Member>
    <Member MemberName="OpenMappedExeConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedExeConfiguration (System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedExeConfiguration(class System.Configuration.ExeConfigurationFileMap fileMap, valuetype System.Configuration.ConfigurationUserLevel userLevel, bool preLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedExeConfiguration (fileMap As ExeConfigurationFileMap, userLevel As ConfigurationUserLevel, preLoad As Boolean) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedExeConfiguration(System::Configuration::ExeConfigurationFileMap ^ fileMap, System::Configuration::ConfigurationUserLevel userLevel, bool preLoad);" />
      <MemberSignature Language="F#" Value="static member OpenMappedExeConfiguration : System.Configuration.ExeConfigurationFileMap * System.Configuration.ConfigurationUserLevel * bool -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedExeConfiguration (fileMap, userLevel, preLoad)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ExeConfigurationFileMap" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userLevel" Type="System.Configuration.ConfigurationUserLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="preLoad" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="fileMap"><span data-ttu-id="75027-214"><see cref="T:System.Configuration.ExeConfigurationFileMap" /> 物件，參考要使用的組態檔，而非應用程式預設組態檔。</span><span class="sxs-lookup"><span data-stu-id="75027-214">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references the configuration file to use instead of the default application configuration file.</span></span></param>
        <param name="userLevel"><span data-ttu-id="75027-215">對其開啟組態的 <see cref="T:System.Configuration.ConfigurationUserLevel" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="75027-215">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</span></span></param>
        <param name="preLoad"><span data-ttu-id="75027-216"><see langword="true" /> 表示要預先載入所有區段群組和區段，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="75027-216"><see langword="true" /> to preload all section groups and sections; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="75027-217">開啟指定的用戶端組態檔，做為使用指定之檔案對應、使用者層級和預先載入選項的 <see cref="T:System.Configuration.Configuration" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="75027-217">Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping, user level, and preload option.</span></span></summary>
        <returns><span data-ttu-id="75027-218">組態物件。</span><span class="sxs-lookup"><span data-stu-id="75027-218">The configuration object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75027-219"><xref:System.Configuration.ConfigurationUserLevel>物件判斷正在開啟組態檔的位置。</span><span class="sxs-lookup"><span data-stu-id="75027-219">The <xref:System.Configuration.ConfigurationUserLevel> object determines the location of the configuration file that is being opened.</span></span> <span data-ttu-id="75027-220">它會指出檔案是否有任何使用者層級 （在組態檔是在應用程式的相同目錄中） 或個別使用者層級 (在組態檔是位於應用程式設定的路徑取決於`userLevel`)。</span><span class="sxs-lookup"><span data-stu-id="75027-220">It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path that is determined by `userLevel`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="75027-221">若要取得<xref:System.Configuration.Configuration>物件對於資源，您的程式碼必須擁有讀取權限繼承設定的所有設定檔。</span><span class="sxs-lookup"><span data-stu-id="75027-221">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="75027-222">若要更新組態檔，您的程式碼必須額外擁有組態檔，它所在的目錄的寫入權限。</span><span class="sxs-lookup"><span data-stu-id="75027-222">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span>  
  
 <span data-ttu-id="75027-223">如需程式碼範例，請參閱<xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A>多載。</span><span class="sxs-lookup"><span data-stu-id="75027-223">For a code example, see the <xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="75027-224">無法載入組態檔。</span><span class="sxs-lookup"><span data-stu-id="75027-224">A configuration file could not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenMappedMachineConfiguration">
      <MemberSignature Language="C#" Value="public static System.Configuration.Configuration OpenMappedMachineConfiguration (System.Configuration.ConfigurationFileMap fileMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Configuration.Configuration OpenMappedMachineConfiguration(class System.Configuration.ConfigurationFileMap fileMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenMappedMachineConfiguration (fileMap As ConfigurationFileMap) As Configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Configuration::Configuration ^ OpenMappedMachineConfiguration(System::Configuration::ConfigurationFileMap ^ fileMap);" />
      <MemberSignature Language="F#" Value="static member OpenMappedMachineConfiguration : System.Configuration.ConfigurationFileMap -&gt; System.Configuration.Configuration" Usage="System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration fileMap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Configuration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileMap" Type="System.Configuration.ConfigurationFileMap" />
      </Parameters>
      <Docs>
        <param name="fileMap"><span data-ttu-id="75027-225"><see cref="T:System.Configuration.ExeConfigurationFileMap" /> 物件，參考要使用的組態檔，而非應用程式預設組態檔。</span><span class="sxs-lookup"><span data-stu-id="75027-225">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</span></span></param>
        <summary><span data-ttu-id="75027-226">開啟電腦組態檔做為使用指定檔案對應的 <see cref="T:System.Configuration.Configuration" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="75027-226">Opens the machine configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping.</span></span></summary>
        <returns><span data-ttu-id="75027-227"><see cref="T:System.Configuration.Configuration" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="75027-227">A <see cref="T:System.Configuration.Configuration" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75027-228">機器組態設定會套用至整個電腦和所有應用程式存在，除非覆寫本機應用程式的範圍。</span><span class="sxs-lookup"><span data-stu-id="75027-228">Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</span></span> <span data-ttu-id="75027-229">機器組態設定會從目前執行版本的.NET Framework 的 Machine.config 檔案讀取。</span><span class="sxs-lookup"><span data-stu-id="75027-229">Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</span></span> <span data-ttu-id="75027-230">Machine.config 檔案位於下列子目錄：</span><span class="sxs-lookup"><span data-stu-id="75027-230">The Machine.config file is located in the following subdirectory:</span></span>  
  
 <span data-ttu-id="75027-231">*%windir%* \Microsoft.NET\Framework\\*version*\config</span><span class="sxs-lookup"><span data-stu-id="75027-231">*%windir%* \Microsoft.NET\Framework\\*version*\config</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="75027-232">若要取得<xref:System.Configuration.Configuration>物件對於資源，您的程式碼必須擁有讀取權限繼承設定的所有設定檔。</span><span class="sxs-lookup"><span data-stu-id="75027-232">To obtain the <xref:System.Configuration.Configuration> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</span></span> <span data-ttu-id="75027-233">若要更新組態檔，您的程式碼必須額外擁有組態檔，它所在的目錄的寫入權限。</span><span class="sxs-lookup"><span data-stu-id="75027-233">To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</span></span> <span data-ttu-id="75027-234">您不可以存取其他版本可能會在電腦上安裝的.NET framework 的 Machine.config 檔案。</span><span class="sxs-lookup"><span data-stu-id="75027-234">It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75027-235">下列程式碼範例示範如何使用<xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A>方法，以取得組態檔中的所有區段。</span><span class="sxs-lookup"><span data-stu-id="75027-235">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration%2A> method to obtain all sections in the configuration file.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#4)]
 [!code-vb[System.Configuration.ConfigurationManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="75027-236">無法載入組態檔。</span><span class="sxs-lookup"><span data-stu-id="75027-236">A configuration file could not be loaded.</span></span></exception>
        <altmember cref="T:System.Configuration.Configuration" />
        <altmember cref="T:System.Configuration.ConfigurationFileMap" />
      </Docs>
    </Member>
    <Member MemberName="RefreshSection">
      <MemberSignature Language="C#" Value="public static void RefreshSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RefreshSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RefreshSection (sectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RefreshSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="static member RefreshSection : string -&gt; unit" Usage="System.Configuration.ConfigurationManager.RefreshSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName"><span data-ttu-id="75027-237">組態區段名稱或要重新整理之區段的組態路徑和區段名稱。</span><span class="sxs-lookup"><span data-stu-id="75027-237">The configuration section name or the configuration path and section name of the section to refresh.</span></span></param>
        <summary><span data-ttu-id="75027-238">重新整理具名區段，以便下次擷取它時，會從磁碟重新讀取它。</span><span class="sxs-lookup"><span data-stu-id="75027-238">Refreshes the named section so the next time that it is retrieved it will be re-read from disk.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75027-239">這個方法會使指定的組態區段的快取失效而不會影響其他區段。</span><span class="sxs-lookup"><span data-stu-id="75027-239">This method invalidates the cache for the specified configuration section without affecting other sections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75027-240">下列程式碼範例示範如何使用<xref:System.Configuration.ConfigurationManager.RefreshSection%2A>方法，以重新整理應用程式設定的組態區段。</span><span class="sxs-lookup"><span data-stu-id="75027-240">The following code example shows how to use the <xref:System.Configuration.ConfigurationManager.RefreshSection%2A> method to refresh the application settings configuration section.</span></span>  
  
 [!code-csharp[System.Configuration.ConfigurationManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/CS/configurationmanager.cs#7)]
 [!code-vb[System.Configuration.ConfigurationManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationManager/VB/configurationmanager.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>