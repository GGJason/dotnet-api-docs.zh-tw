<Type Name="ApplicationSettingsBase" FullName="System.Configuration.ApplicationSettingsBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="81e0b3e822204b77302e8c6a560b29fc4205f991" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52915948" /></Metadata><TypeSignature Language="C#" Value="public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ApplicationSettingsBase extends System.Configuration.SettingsBase implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ApplicationSettingsBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ApplicationSettingsBase&#xA;Inherits SettingsBase&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationSettingsBase abstract : System::Configuration::SettingsBase, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type ApplicationSettingsBase = class&#xA;    inherit SettingsBase&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="44f5c-101">做為衍生實體包裝函式類別的基底類別，以實作 Windows Form 應用程式中的應用程式設定功能。</span><span class="sxs-lookup"><span data-stu-id="44f5c-101">Acts as a base class for deriving concrete wrapper classes to implement the application settings feature in Window Forms applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-102"><xref:System.Configuration.ApplicationSettingsBase> 新增下列功能來<xref:System.Configuration.SettingsBase>Web 為基礎的應用程式所使用的類別：</span><span class="sxs-lookup"><span data-stu-id="44f5c-102"><xref:System.Configuration.ApplicationSettingsBase> adds the following functionality to the <xref:System.Configuration.SettingsBase> class, which is used by Web-based applications:</span></span>  
  
-   <span data-ttu-id="44f5c-103">能夠偵測的衍生，設定包裝函式類別上的屬性。</span><span class="sxs-lookup"><span data-stu-id="44f5c-103">The ability to detect attributes on a derived, settings wrapper class.</span></span> <span data-ttu-id="44f5c-104"><xref:System.Configuration.ApplicationSettingsBase> 支援宣告式模型用於包裝函式的類別屬性，如稍後所述。</span><span class="sxs-lookup"><span data-stu-id="44f5c-104"><xref:System.Configuration.ApplicationSettingsBase> supports the declarative model used for wrapper class properties, as described later.</span></span>  
  
-   <span data-ttu-id="44f5c-105">較高層級<xref:System.Configuration.ApplicationSettingsBase.Save%2A>和<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="44f5c-105">Higher-level <xref:System.Configuration.ApplicationSettingsBase.Save%2A> and <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods.</span></span>  
  
-   <span data-ttu-id="44f5c-106">您可以處理以確保正確性的個別設定的額外的驗證事件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-106">Additional validation events that you can handle to ensure the correctness of individual settings.</span></span>  
  
 <span data-ttu-id="44f5c-107">在應用程式設定架構中，若要存取的設定屬性群組您需要衍生實體包裝函式類別從<xref:System.Configuration.ApplicationSettingsBase>。</span><span class="sxs-lookup"><span data-stu-id="44f5c-107">In the application settings architecture, to access a group of settings properties you need to derive a concrete wrapper class from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="44f5c-108">包裝函式類別自訂<xref:System.Configuration.ApplicationSettingsBase>如下：</span><span class="sxs-lookup"><span data-stu-id="44f5c-108">The wrapper class customizes <xref:System.Configuration.ApplicationSettingsBase> in the following ways:</span></span>  
  
-   <span data-ttu-id="44f5c-109">若要存取每個設定屬性，對應的強型別的公用屬性會加入包裝函式類別。</span><span class="sxs-lookup"><span data-stu-id="44f5c-109">For every settings property to be accessed, a corresponding strongly typed public property is added to the wrapper class.</span></span> <span data-ttu-id="44f5c-110">此屬性具有`get`並`set`存取子讀取/寫入應用程式設定，但僅限於`get`唯讀設定的存取子。</span><span class="sxs-lookup"><span data-stu-id="44f5c-110">This property has `get` and `set` accessors for read/write application settings, but only a `get` accessor for read-only settings.</span></span>  
  
-   <span data-ttu-id="44f5c-111">適當的屬性必須套用至包裝函式類別的公用屬性是否設定應該支援漫遊的預設值，表示設定屬性，例如設定的領域 （應用程式或使用者） 的特性設定，以自動設定提供者使用，然後依此類推。</span><span class="sxs-lookup"><span data-stu-id="44f5c-111">Appropriated attributes must be applied to the wrapper class's public properties to indicate characteristics of the settings property, such as the setting's scope (application or user), whether the setting should support roaming, the default value for the setting, the settings provider to be used, and so on.</span></span> <span data-ttu-id="44f5c-112">每個屬性，才可指定其範圍中，使用<xref:System.Configuration.ApplicationScopedSettingAttribute>或<xref:System.Configuration.UserScopedSettingAttribute>。</span><span class="sxs-lookup"><span data-stu-id="44f5c-112">Each property is required to specify its scope, using either <xref:System.Configuration.ApplicationScopedSettingAttribute> or <xref:System.Configuration.UserScopedSettingAttribute>.</span></span> <span data-ttu-id="44f5c-113">應用程式範圍的設定是唯讀如果預設<xref:System.Configuration.LocalFileSettingsProvider>用。</span><span class="sxs-lookup"><span data-stu-id="44f5c-113">Application-scoped settings are read-only if the default <xref:System.Configuration.LocalFileSettingsProvider> is used.</span></span>  
  
 <span data-ttu-id="44f5c-114"><xref:System.Configuration.ApplicationSettingsBase>類別會使用反映來偵測這些屬性在執行階段。</span><span class="sxs-lookup"><span data-stu-id="44f5c-114">The <xref:System.Configuration.ApplicationSettingsBase> class uses reflection to detect these attributes at run time.</span></span> <span data-ttu-id="44f5c-115">大部分的這項資訊傳遞至設定提供者層，也就是負責儲存體、 保存格式等等。</span><span class="sxs-lookup"><span data-stu-id="44f5c-115">Most of this information gets passed to the settings provider layer, which is responsible for storage, persistence format, and so on.</span></span>  
  
 <span data-ttu-id="44f5c-116">當應用程式有多個設定包裝函式類別，每個類別定義*設定群組*。</span><span class="sxs-lookup"><span data-stu-id="44f5c-116">When an application has multiple settings wrapper classes, each class defines a *settings group*.</span></span> <span data-ttu-id="44f5c-117">每個群組具有下列特性：</span><span class="sxs-lookup"><span data-stu-id="44f5c-117">Each group has the following characteristics:</span></span>  
  
-   <span data-ttu-id="44f5c-118">群組可以包含任何數目或類型屬性設定。</span><span class="sxs-lookup"><span data-stu-id="44f5c-118">A group can contain any number or type of property settings.</span></span>  
  
-   <span data-ttu-id="44f5c-119">如果群組名稱不明確設定裝飾的包裝函式類別，則<xref:System.Configuration.SettingsGroupNameAttribute>，則會自動產生的名稱。</span><span class="sxs-lookup"><span data-stu-id="44f5c-119">If the group name is not explicitly set by the decorating the wrapper class with a <xref:System.Configuration.SettingsGroupNameAttribute>, then a name is automatically generated.</span></span>  
  
 <span data-ttu-id="44f5c-120">根據預設，所有的用戶端應用程式使用<xref:System.Configuration.LocalFileSettingsProvider>提供儲存體。</span><span class="sxs-lookup"><span data-stu-id="44f5c-120">By default, all client-based applications use the <xref:System.Configuration.LocalFileSettingsProvider> to provide storage.</span></span> <span data-ttu-id="44f5c-121">如果想要使用替代的設定提供者，則包裝函式類別或屬性必須有對應裝飾<xref:System.Configuration.SettingsProviderAttribute>。</span><span class="sxs-lookup"><span data-stu-id="44f5c-121">If an alternate settings provider is desired, then the wrapper class or property must be decorated with a corresponding <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="44f5c-122">如需使用應用程式設定的詳細資訊，請參閱[適用於 Windows Form 應用程式設定](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md)。</span><span class="sxs-lookup"><span data-stu-id="44f5c-122">For more information about using application settings, see [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f5c-123">下列程式碼範例示範如何使用的應用程式設定，以保存主要表單的下列屬性： 位置、 大小、 背景色彩和標題列文字。</span><span class="sxs-lookup"><span data-stu-id="44f5c-123">The following code example demonstrates the use of application settings to persist the following attributes of the main form: location, size, background color, and title bar text.</span></span> <span data-ttu-id="44f5c-124">所有這些屬性會保存為單一應用程式中的設定屬性`FormSettings`類別，名為`FormLocation`， `FormSize`，`FormBackColor`和`FormText`分別。</span><span class="sxs-lookup"><span data-stu-id="44f5c-124">All of these attributes are persisted as single application settings properties in the `FormSettings` class, named `FormLocation`, `FormSize`, `FormBackColor` and `FormText`, respectively.</span></span> <span data-ttu-id="44f5c-125">所有以外的`FormText`並`Size`是資料繫結至其相關聯的表單屬性，而且具有預設設定值，套用使用<xref:System.Configuration.DefaultSettingValueAttribute>。</span><span class="sxs-lookup"><span data-stu-id="44f5c-125">All except for `FormText` and `Size` are data bound to their associated form properties and have a default setting value applied using <xref:System.Configuration.DefaultSettingValueAttribute>.</span></span>  
  
 <span data-ttu-id="44f5c-126">表單包含四個子控制項具有下列名稱和函式：</span><span class="sxs-lookup"><span data-stu-id="44f5c-126">The form contains four child controls that have the following names and functions:</span></span>  
  
-   <span data-ttu-id="44f5c-127">名為按鈕`btnBackColor`用來顯示**色彩**通用對話方塊。</span><span class="sxs-lookup"><span data-stu-id="44f5c-127">A button named `btnBackColor` used to display the **Color** common dialog box.</span></span>  
  
-   <span data-ttu-id="44f5c-128">名為按鈕`btnReload`用以<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>應用程式設定。</span><span class="sxs-lookup"><span data-stu-id="44f5c-128">A button named `btnReload` used to <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> the application settings.</span></span>  
  
-   <span data-ttu-id="44f5c-129">名為按鈕`btnReset`用以<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>應用程式設定。</span><span class="sxs-lookup"><span data-stu-id="44f5c-129">A button named `btnReset` used to <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> the application settings.</span></span>  
  
-   <span data-ttu-id="44f5c-130">名為 textbox`tbStatus`用來顯示程式的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="44f5c-130">A textbox named `tbStatus` used to display status information about the program.</span></span>  
  
 <span data-ttu-id="44f5c-131">請注意，在每次執行的應用程式之後，其他的句號字元會附加到表單的標題文字。</span><span class="sxs-lookup"><span data-stu-id="44f5c-131">Notice that after every execution of the application, an additional period character is appended to the title text of the form.</span></span>  
  
 <span data-ttu-id="44f5c-132">此程式碼範例需要表單<xref:System.Windows.Forms.ColorDialog>名為類別`colorDialog1`，，<xref:System.Windows.Forms.StatusStrip>用來控制<xref:System.Windows.Forms.ToolStripStatusLabel>名為`tbStatus`。</span><span class="sxs-lookup"><span data-stu-id="44f5c-132">This code example requires a Form with a <xref:System.Windows.Forms.ColorDialog> class named `colorDialog1`, and a <xref:System.Windows.Forms.StatusStrip> control with a <xref:System.Windows.Forms.ToolStripStatusLabel> named `tbStatus`.</span></span> <span data-ttu-id="44f5c-133">此外，它需要三個<xref:System.Windows.Forms.Button>命名的物件`btnReload`， `btnReset`，和`btnBackColor`。</span><span class="sxs-lookup"><span data-stu-id="44f5c-133">Additionally, it requires three <xref:System.Windows.Forms.Button> objects named `btnReload`, `btnReset`, and `btnBackColor`.</span></span>  
  
 [!code-cpp[AppSettingsSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#1)]
 [!code-csharp[AppSettingsSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#1)]
 [!code-vb[AppSettingsSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.SettingsGroupNameAttribute" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/64090a34-8556-4904-8ea0-20efe9f8c886"><span data-ttu-id="44f5c-134">Windows Form 的應用程式設定</span><span class="sxs-lookup"><span data-stu-id="44f5c-134">Application Settings for Windows Forms</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="44f5c-135">初始化 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="44f5c-135">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44f5c-136">將 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 類別的執行個體初始化成其預設狀態。</span><span class="sxs-lookup"><span data-stu-id="44f5c-136">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class to its default state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-137">預設建構函式應在工作時，沒有與目前的設定包裝函式類別，衍生自相關聯的元件假設<xref:System.Configuration.ApplicationSettingsBase>。</span><span class="sxs-lookup"><span data-stu-id="44f5c-137">The default constructor was designed to work under the assumption that there is no component associated with the current settings wrapper class, which derives from <xref:System.Configuration.ApplicationSettingsBase>.</span></span>  
  
 <span data-ttu-id="44f5c-138">建立包裝函式類別的執行個體時，繼承的程式碼會自動執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="44f5c-138">When an instance of a wrapper class is created, inherited code will automatically perform the following actions:</span></span>  
  
1.  <span data-ttu-id="44f5c-139">反映類別。</span><span class="sxs-lookup"><span data-stu-id="44f5c-139">Reflect over the class.</span></span>  
  
2.  <span data-ttu-id="44f5c-140">使用標記包裝函式的每個屬性`[UserScopedSettingAttribute]`或是`[ApplicationScopedSettingAttribute]`，對應<xref:System.Configuration.SettingsProperty>建立。</span><span class="sxs-lookup"><span data-stu-id="44f5c-140">For each property on the wrapper marked with either `[UserScopedSettingAttribute]` or `[ApplicationScopedSettingAttribute]`, a corresponding <xref:System.Configuration.SettingsProperty> is created.</span></span>  
  
3.  <span data-ttu-id="44f5c-141">每個<xref:System.Configuration.SettingsProperty>有一些其根據其他屬性，則會選擇性地包裝函式的屬性，例如預設值或設定提供者的屬性集內。</span><span class="sxs-lookup"><span data-stu-id="44f5c-141">Each <xref:System.Configuration.SettingsProperty> has some of its properties set based on other attributes that are optionally present on the wrapper's properties, such as the default value or the settings provider.</span></span>  
  
4.  <span data-ttu-id="44f5c-142">所有其他屬性會直接放入屬性包，<xref:System.Configuration.SettingsProperty.Attributes%2A>屬性<xref:System.Configuration.SettingsProperty>類別。</span><span class="sxs-lookup"><span data-stu-id="44f5c-142">All other attributes are simply put into an attribute bag, the <xref:System.Configuration.SettingsProperty.Attributes%2A> property of the <xref:System.Configuration.SettingsProperty> class.</span></span>  
  
5.  <span data-ttu-id="44f5c-143">所有<xref:System.Configuration.SettingsProperty>物件加入至<xref:System.Configuration.SettingsPropertyCollection>由<xref:System.Configuration.ApplicationSettingsBase.Properties%2A>屬性<xref:System.Configuration.ApplicationSettingsBase>類別。</span><span class="sxs-lookup"><span data-stu-id="44f5c-143">All <xref:System.Configuration.SettingsProperty> objects are added to a <xref:System.Configuration.SettingsPropertyCollection> represented by the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> property of the <xref:System.Configuration.ApplicationSettingsBase> class.</span></span> <span data-ttu-id="44f5c-144">這個集合會傳遞至<xref:System.Configuration.SettingsBase.Initialize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="44f5c-144">This collection is then passed to the <xref:System.Configuration.SettingsBase.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="44f5c-145">步驟 3 先前所述，為隱含<xref:System.Configuration.ApplicationSettingsBase>原生搭配數個屬性的屬性，特別是下列： <xref:System.Configuration.SettingsProviderAttribute>， <xref:System.Configuration.DefaultSettingValueAttribute>，和<xref:System.Configuration.SettingsSerializeAsAttribute>。</span><span class="sxs-lookup"><span data-stu-id="44f5c-145">As implied by step 3 mentioned previously, <xref:System.Configuration.ApplicationSettingsBase> natively works with several property attributes, specifically the following: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>, and <xref:System.Configuration.SettingsSerializeAsAttribute>.</span></span> <span data-ttu-id="44f5c-146">所有其他設定屬性會直接傳遞給適當的基礎提供者。</span><span class="sxs-lookup"><span data-stu-id="44f5c-146">All other settings attributes are simply passed through to the appropriate underlying provider.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="T:System.Configuration.SettingsPropertyCollection" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : System.ComponentModel.IComponent -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="44f5c-147">將做為應用程式設定物件之擁有者的元件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-147">The component that will act as the owner of the application settings object.</span></span></param>
        <summary><span data-ttu-id="44f5c-148">使用提供的擁有者元件，初始化 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="44f5c-148">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied owner component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-149">這個建構函式就完全相當於<xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29>叫用的建構函式：</span><span class="sxs-lookup"><span data-stu-id="44f5c-149">This constructor is exactly equivalent to the <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29> constructor using the invocation:</span></span>  
  
 `ApplicationSettingsBase(owner, String.Empty)`  
  
 <span data-ttu-id="44f5c-150">包裝函式類別的具現化期間，如何使用反映相關的資訊，請參閱預設<xref:System.Configuration.ApplicationSettingsBase.%23ctor>建構函式。</span><span class="sxs-lookup"><span data-stu-id="44f5c-150">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f5c-151"><paramref name="owner" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="44f5c-151"><paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.ComponentModel.Component.Site" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::String ^ settingsKey);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : string -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase settingsKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="settingsKey"><span data-ttu-id="44f5c-152"><see cref="T:System.String" />，可以唯一識別包裝函式類別的個別執行個體。</span><span class="sxs-lookup"><span data-stu-id="44f5c-152">A <see cref="T:System.String" /> that uniquely identifies separate instances of the wrapper class.</span></span></param>
        <summary><span data-ttu-id="44f5c-153">使用提供的設定索引鍵，初始化 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="44f5c-153">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied settings key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-154">這個建構函式初始化<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>屬性設為值的`settingsKey`參數。</span><span class="sxs-lookup"><span data-stu-id="44f5c-154">This constructor initializes the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property to the value of the `settingsKey` parameter.</span></span> <span data-ttu-id="44f5c-155">這個屬性可用於釐清設定包裝函式類別，在相同的應用程式定義域中的不同執行個體。</span><span class="sxs-lookup"><span data-stu-id="44f5c-155">This property is useful in disambiguating different instances of the settings wrapper class in the same application domain.</span></span>  
  
 <span data-ttu-id="44f5c-156">包裝函式類別的具現化期間，如何使用反映相關的資訊，請參閱預設<xref:System.Configuration.ApplicationSettingsBase.%23ctor>建構函式。</span><span class="sxs-lookup"><span data-stu-id="44f5c-156">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner, string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent, settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner, System::String ^ settingsKey);" />
      <MemberSignature Language="F#" Value="new System.Configuration.ApplicationSettingsBase : System.ComponentModel.IComponent * string -&gt; System.Configuration.ApplicationSettingsBase" Usage="new System.Configuration.ApplicationSettingsBase (owner, settingsKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="44f5c-157">將做為應用程式設定物件之擁有者的元件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-157">The component that will act as the owner of the application settings object.</span></span></param>
        <param name="settingsKey"><span data-ttu-id="44f5c-158"><see cref="T:System.String" />，可以唯一識別包裝函式類別的個別執行個體。</span><span class="sxs-lookup"><span data-stu-id="44f5c-158">A <see cref="T:System.String" /> that uniquely identifies separate instances of the wrapper class.</span></span></param>
        <summary><span data-ttu-id="44f5c-159">使用提供的擁有者元件和設定索引鍵，初始化 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="44f5c-159">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied owner component and settings key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-160"><xref:System.ComponentModel.IComponent>所指定的物件`owner`參數做為此應用程式設定類別的目前執行個體擁有者。</span><span class="sxs-lookup"><span data-stu-id="44f5c-160">The <xref:System.ComponentModel.IComponent> object specified by the `owner` parameter acts as the owner of the current instance of this applications settings class.</span></span> <span data-ttu-id="44f5c-161">包裝函式類別衍生自的設定初始化期間<xref:System.Configuration.ApplicationSettingsBase>，擁有者的站台針對查詢<xref:System.Configuration.ISettingsProviderService>。</span><span class="sxs-lookup"><span data-stu-id="44f5c-161">During the initialization of the settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>, the owner's site is queried for a <xref:System.Configuration.ISettingsProviderService>.</span></span> <span data-ttu-id="44f5c-162">如果有的話，它會偏好使用原生的設定提供者給包裝函式類別，所指定的所有屬性<xref:System.Configuration.SettingsProviderAttribute>。</span><span class="sxs-lookup"><span data-stu-id="44f5c-162">If one exists, it is used in preference to native settings provider for all the properties of the wrapper class, as specified by the <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="44f5c-163">這個建構函式初始化<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>屬性設為值的`settingsKey`參數。</span><span class="sxs-lookup"><span data-stu-id="44f5c-163">This constructor initializes the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property to the value of the `settingsKey` parameter.</span></span> <span data-ttu-id="44f5c-164">這個屬性可用於釐清不同的執行個體相同的應用程式定義域中的包裝函式類別。</span><span class="sxs-lookup"><span data-stu-id="44f5c-164">This property is useful in disambiguating different instances of the wrapper class in the same application domain.</span></span>  
  
 <span data-ttu-id="44f5c-165">包裝函式類別的具現化期間，如何使用反映相關的資訊，請參閱預設<xref:System.Configuration.ApplicationSettingsBase.%23ctor>建構函式。</span><span class="sxs-lookup"><span data-stu-id="44f5c-165">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="44f5c-166"><paramref name="owner" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="44f5c-166"><paramref name="owner" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Context" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Context As SettingsContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsContext ^ Context { System::Configuration::SettingsContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Configuration.SettingsContext" Usage="System.Configuration.ApplicationSettingsBase.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44f5c-167">取得與設定群組相關的應用程式設定內容。</span><span class="sxs-lookup"><span data-stu-id="44f5c-167">Gets the application settings context associated with the settings group.</span></span></summary>
        <value><span data-ttu-id="44f5c-168">與設定群組相關的 <see cref="T:System.Configuration.SettingsContext" />。</span><span class="sxs-lookup"><span data-stu-id="44f5c-168">A <see cref="T:System.Configuration.SettingsContext" /> associated with the settings group.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-169">每個設定包裝函式類別衍生自<xref:System.Configuration.ApplicationSettingsBase>具有與其相關聯的內容。</span><span class="sxs-lookup"><span data-stu-id="44f5c-169">Each settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase> has a context associated with it.</span></span> <span data-ttu-id="44f5c-170">內容會傳遞至每個屬性的設定提供者找出如何使用屬性。</span><span class="sxs-lookup"><span data-stu-id="44f5c-170">The context is passed to the settings provider for each property to identify how the property is used.</span></span> <span data-ttu-id="44f5c-171">因此，內容做為提示，以協助判斷最有效方式保存相關聯的應用程式設定值的設定提供者。</span><span class="sxs-lookup"><span data-stu-id="44f5c-171">Context therefore acts as a hint to help the settings provider determine how best to persist the associated application settings values.</span></span>  
  
 <span data-ttu-id="44f5c-172">相反地，<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>屬性可讓設定提供者，以釐清具有相同的包裝函式類別的多個執行個體。</span><span class="sxs-lookup"><span data-stu-id="44f5c-172">In contrast, the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property enables the settings provider to disambiguate multiple instances of the same wrapper class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="T:System.Configuration.SettingsContext" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.ApplicationSettingsGroup" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public object GetPreviousVersion (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPreviousVersion(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPreviousVersion(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousVersion : string -&gt; obj" Usage="applicationSettingsBase.GetPreviousVersion propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="44f5c-173"><see cref="T:System.String" />，包含要傳回其值的設定屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="44f5c-173">A <see cref="T:System.String" /> containing the name of the settings property whose value is to be returned.</span></span></param>
        <summary><span data-ttu-id="44f5c-174">傳回同一應用程式之前一版本的具名設定屬性值。</span><span class="sxs-lookup"><span data-stu-id="44f5c-174">Returns the value of the named settings property for the previous version of the same application.</span></span></summary>
        <returns><span data-ttu-id="44f5c-175">如果找到，則為包含指定 <see cref="T:System.Object" /> 值的 <see cref="T:System.Configuration.SettingsProperty" />，否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="44f5c-175">An <see cref="T:System.Object" /> containing the value of the specified <see cref="T:System.Configuration.SettingsProperty" /> if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-176"><xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A>方法通常用於搭配<xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>新版應用程式在安裝期間移轉應用程式設定時的方法。</span><span class="sxs-lookup"><span data-stu-id="44f5c-176">The <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> method is often used in conjunction with the <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> method when migrating application settings during the installation of a new version of an application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException"><span data-ttu-id="44f5c-177">屬性不存在。</span><span class="sxs-lookup"><span data-stu-id="44f5c-177">The property does not exist.</span></span> <span data-ttu-id="44f5c-178">屬性計數為零，或在資料存放區中找不到屬性。</span><span class="sxs-lookup"><span data-stu-id="44f5c-178">The property count is zero or the property cannot be found in the data store.</span></span></exception>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Configuration.ApplicationSettingsBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="44f5c-179"><see cref="T:System.String" />，包含要存取的屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="44f5c-179">A <see cref="T:System.String" /> containing the name of the property to access.</span></span></param>
        <summary><span data-ttu-id="44f5c-180">取得或設定指定應用程式設定屬性的值。</span><span class="sxs-lookup"><span data-stu-id="44f5c-180">Gets or sets the value of the specified application settings property.</span></span></summary>
        <value><span data-ttu-id="44f5c-181">如果找到，則為已命名設定屬性的值，否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="44f5c-181">If found, the value of the named settings property; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-182"><xref:System.Configuration.ApplicationSettingsBase.Item%2A>屬性，也就是索引子，經常會在包裝函式類別衍生自設定<xref:System.Configuration.ApplicationSettingsBase>。</span><span class="sxs-lookup"><span data-stu-id="44f5c-182">The <xref:System.Configuration.ApplicationSettingsBase.Item%2A> property, also known as the indexer, is routinely used in the settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="44f5c-183"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> 將包裝函式類別的公用屬性繫結至對應的設定屬性。</span><span class="sxs-lookup"><span data-stu-id="44f5c-183"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> binds the public property of the wrapper class to the corresponding settings property.</span></span>  
  
 <span data-ttu-id="44f5c-184"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> 會引發數個事件，根據正在執行的作業：</span><span class="sxs-lookup"><span data-stu-id="44f5c-184"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> raises several events depending on the operation being performed:</span></span>  
  
-   <span data-ttu-id="44f5c-185">擷取屬性時，第一次<xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-185">The first time a property is retrieved, the <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> event is raised.</span></span>  
  
-   <span data-ttu-id="44f5c-186">當屬性設定時，<xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-186">When a property is set, the <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> event is raised.</span></span> <span data-ttu-id="44f5c-187">如果處理常式並不會取消事件，則在設定屬性值和<xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-187">If the handler does not cancel the event, then the property value is set and the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException"><span data-ttu-id="44f5c-188">沒有與目前包裝函式相關的屬性，或找不到指定屬性。</span><span class="sxs-lookup"><span data-stu-id="44f5c-188">There are no properties associated with the current wrapper or the specified property could not be found.</span></span></exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException"><span data-ttu-id="44f5c-189">已嘗試設定唯讀屬性。</span><span class="sxs-lookup"><span data-stu-id="44f5c-189">An attempt was made to set a read-only property.</span></span></exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException"><span data-ttu-id="44f5c-190">在設定作業期間，提供之值的型別與設定屬性不相容。</span><span class="sxs-lookup"><span data-stu-id="44f5c-190">The value supplied is of a type incompatible with the settings property, during a set operation.</span></span></exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="44f5c-191">無法剖析組態檔。</span><span class="sxs-lookup"><span data-stu-id="44f5c-191">The configuration file could not be parsed.</span></span></exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="P:System.Configuration.SettingsProperty.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(object sender, class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (sender As Object, e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::Object ^ sender, System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : obj * System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="applicationSettingsBase.OnPropertyChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="44f5c-192">事件的來源。</span><span class="sxs-lookup"><span data-stu-id="44f5c-192">The source of the event.</span></span></param>
        <param name="e"><span data-ttu-id="44f5c-193"><see cref="T:System.ComponentModel.PropertyChangedEventArgs" />，其中包含事件資料。</span><span class="sxs-lookup"><span data-stu-id="44f5c-193">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="44f5c-194">引發 <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-194">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-195">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="44f5c-195">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="44f5c-196">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="44f5c-196">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="44f5c-197"><xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="44f5c-197">The <xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="44f5c-198">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="44f5c-198">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="44f5c-199">當在衍生類別中覆寫 <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> 方法，使已註冊的委派能接收到事件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-199">When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingChanging(object sender, class System.Configuration.SettingChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingChanging (sender As Object, e As SettingChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingChanging(System::Object ^ sender, System::Configuration::SettingChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingChanging : obj * System.Configuration.SettingChangingEventArgs -&gt; unit&#xA;override this.OnSettingChanging : obj * System.Configuration.SettingChangingEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingChanging (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="44f5c-200">事件的來源。</span><span class="sxs-lookup"><span data-stu-id="44f5c-200">The source of the event.</span></span></param>
        <param name="e"><span data-ttu-id="44f5c-201"><see cref="T:System.Configuration.SettingChangingEventArgs" />，其中包含事件資料。</span><span class="sxs-lookup"><span data-stu-id="44f5c-201">A <see cref="T:System.Configuration.SettingChangingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="44f5c-202">引發 <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-202">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-203">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="44f5c-203">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="44f5c-204">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="44f5c-204">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="44f5c-205"><xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="44f5c-205">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="44f5c-206">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="44f5c-206">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="44f5c-207">當在衍生類別中覆寫 <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> 方法，使已註冊的委派能接收到事件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-207">When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsLoaded(object sender, class System.Configuration.SettingsLoadedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsLoaded (sender As Object, e As SettingsLoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsLoaded(System::Object ^ sender, System::Configuration::SettingsLoadedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingsLoaded : obj * System.Configuration.SettingsLoadedEventArgs -&gt; unit&#xA;override this.OnSettingsLoaded : obj * System.Configuration.SettingsLoadedEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingsLoaded (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingsLoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="44f5c-208">事件的來源。</span><span class="sxs-lookup"><span data-stu-id="44f5c-208">The source of the event.</span></span></param>
        <param name="e"><span data-ttu-id="44f5c-209"><see cref="T:System.Configuration.SettingsLoadedEventArgs" />，其中包含事件資料。</span><span class="sxs-lookup"><span data-stu-id="44f5c-209">A <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="44f5c-210">引發 <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-210">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-211">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="44f5c-211">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="44f5c-212">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="44f5c-212">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="44f5c-213"><xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="44f5c-213">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="44f5c-214">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="44f5c-214">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="44f5c-215">當在衍生類別中覆寫 <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> 方法，使已註冊的委派能接收到事件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-215">When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsSaving">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsSaving(object sender, class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsSaving (sender As Object, e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsSaving(System::Object ^ sender, System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSettingsSaving : obj * System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnSettingsSaving : obj * System.ComponentModel.CancelEventArgs -&gt; unit" Usage="applicationSettingsBase.OnSettingsSaving (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="44f5c-216">事件的來源。</span><span class="sxs-lookup"><span data-stu-id="44f5c-216">The source of the event.</span></span></param>
        <param name="e"><span data-ttu-id="44f5c-217"><see cref="T:System.ComponentModel.CancelEventArgs" />，其中包含事件資料。</span><span class="sxs-lookup"><span data-stu-id="44f5c-217">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="44f5c-218">引發 <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-218">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-219">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="44f5c-219">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="44f5c-220">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="44f5c-220">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="44f5c-221"><xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="44f5c-221">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="44f5c-222">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="44f5c-222">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="44f5c-223">當在衍生類別中覆寫 <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> 方法，使已註冊的委派能接收到事件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-223">When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.SettingsPropertyCollection" Usage="System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44f5c-224">取得包裝函式中設定屬性的集合。</span><span class="sxs-lookup"><span data-stu-id="44f5c-224">Gets the collection of settings properties in the wrapper.</span></span></summary>
        <value><span data-ttu-id="44f5c-225"><see cref="T:System.Configuration.SettingsPropertyCollection" />，包含目前包裝函式中使用的所有 <see cref="T:System.Configuration.SettingsProperty" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-225">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing all the <see cref="T:System.Configuration.SettingsProperty" /> objects used in the current wrapper.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-226">`get`存取子<xref:System.Configuration.ApplicationSettingsBase.Properties%2A>屬性會反映之中繼資料的設定包裝函式類別，衍生自<xref:System.Configuration.ApplicationSettingsBase>、 動態決定的一組可用的應用程式設定屬性。</span><span class="sxs-lookup"><span data-stu-id="44f5c-226">The `get` accessor of the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> property reflects over the metadata of the settings wrapper class, which is derived from <xref:System.Configuration.ApplicationSettingsBase>, to dynamically determine the set of available application settings properties.</span></span>  
  
 <span data-ttu-id="44f5c-227"><xref:System.Configuration.ApplicationSettingsBase>類別原本就會辨識某些特性的應用程式設定，例如其名稱、 屬性型別、 設定提供者、 預設值，讀取唯一的狀態，以及序列化喜好設定。</span><span class="sxs-lookup"><span data-stu-id="44f5c-227">The <xref:System.Configuration.ApplicationSettingsBase> class natively recognizes certain characteristics of an application setting, such as its name, property type, settings provider, default value, read only status, and a serialization preference.</span></span> <span data-ttu-id="44f5c-228">這些特性會鏡像處理中以內容形式<xref:System.Configuration.SettingsProperty>類別。</span><span class="sxs-lookup"><span data-stu-id="44f5c-228">These characteristics are mirrored as properties in the <xref:System.Configuration.SettingsProperty> class.</span></span> <span data-ttu-id="44f5c-229">設定屬性的所有其他屬性只被傳遞到其相關聯的設定提供者。</span><span class="sxs-lookup"><span data-stu-id="44f5c-229">All other attributes of the settings property are just passed through to its associated settings provider.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="44f5c-230">找不到相關的設定提供者，或其執行個體化已失敗。</span><span class="sxs-lookup"><span data-stu-id="44f5c-230">The associated settings provider could not be found or its instantiation failed.</span></span></exception>
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="T:System.Configuration.SettingsProperty" />
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44f5c-231">發生於應用程式設定屬性值變更之後。</span><span class="sxs-lookup"><span data-stu-id="44f5c-231">Occurs after the value of an application settings property is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-232"><xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>透過變更一個設定屬性時，會引發事件`set`存取子<xref:System.Configuration.ApplicationSettingsBase.Item%2A>方法，或針對每個屬性時進行呼叫，以還原<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>或<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="44f5c-232">The <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event is raised when a settings property is changed through the `set` accessor of the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method, or for every property that is restored when a call is made to the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> or <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="44f5c-233">沒有對應的`PropertyChanging`這個事件類別; 相反地，請參閱<xref:System.Configuration.ApplicationSettingsBase.SettingChanging>事件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-233">There is no corresponding `PropertyChanging` event for this class; instead, see the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
        <altmember cref="T:System.ComponentModel.PropertyChangedEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="PropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyValueCollection PropertyValues" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyValues As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyValueCollection ^ PropertyValues { System::Configuration::SettingsPropertyValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyValues : System.Configuration.SettingsPropertyValueCollection" Usage="System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44f5c-234">取得屬性值的集合。</span><span class="sxs-lookup"><span data-stu-id="44f5c-234">Gets a collection of property values.</span></span></summary>
        <value><span data-ttu-id="44f5c-235">屬性值的 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="44f5c-235">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> of property values.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Providers As SettingsProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsProviderCollection ^ Providers { System::Configuration::SettingsProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Configuration.SettingsProviderCollection" Usage="System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44f5c-236">取得包裝函式使用之應用程式設定提供者的集合。</span><span class="sxs-lookup"><span data-stu-id="44f5c-236">Gets the collection of application settings providers used by the wrapper.</span></span></summary>
        <value><span data-ttu-id="44f5c-237"><see cref="T:System.Configuration.SettingsProviderCollection" />，包含目前設定包裝函式之設定屬性使用的所有 <see cref="T:System.Configuration.SettingsProvider" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-237">A <see cref="T:System.Configuration.SettingsProviderCollection" /> containing all the <see cref="T:System.Configuration.SettingsProvider" /> objects used by the settings properties of the current settings wrapper.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-238"><xref:System.Configuration.SettingsProviderAttribute>判斷何種設定提供者由設定包裝函式類別或個別設定屬性。</span><span class="sxs-lookup"><span data-stu-id="44f5c-238">The <xref:System.Configuration.SettingsProviderAttribute> determines what setting provider is used by a settings wrapper class or an individual setting property.</span></span> <span data-ttu-id="44f5c-239">如果未指定此屬性，用戶端應用程式會使用<xref:System.Configuration.LocalFileSettingsProvider>。</span><span class="sxs-lookup"><span data-stu-id="44f5c-239">If this attribute is not specified, a client application will use the <xref:System.Configuration.LocalFileSettingsProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public void Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reload();" />
      <MemberSignature Language="F#" Value="member this.Reload : unit -&gt; unit" Usage="applicationSettingsBase.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44f5c-240">重新整理持續性儲存體 (Persistent Storage) 的應用程式設定屬性值。</span><span class="sxs-lookup"><span data-stu-id="44f5c-240">Refreshes the application settings property values from persistent storage.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-241"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A>方法會清除目前快取的屬性值，在後續存取時，造成重新載入這些值從永續性儲存體。</span><span class="sxs-lookup"><span data-stu-id="44f5c-241">The <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method clears the currently cached property values, causing a reload of these values from persistent storage when they are subsequently accessed.</span></span> <span data-ttu-id="44f5c-242">這個方法會執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="44f5c-242">This method performs the following actions:</span></span>  
  
-   <span data-ttu-id="44f5c-243">它會清除目前快取的屬性，藉由清除所表示之集合<xref:System.Configuration.SettingsBase.PropertyValues%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="44f5c-243">It clears the currently cached properties by clearing the collection represented by the <xref:System.Configuration.SettingsBase.PropertyValues%2A> property.</span></span>  
  
-   <span data-ttu-id="44f5c-244">它會引發<xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>事件的每位成員<xref:System.Configuration.ApplicationSettingsBase.Properties%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="44f5c-244">It raises the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event for every member of the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> collection.</span></span>  
  
 <span data-ttu-id="44f5c-245"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> 相反<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>在於前者會載入最後一集的已儲存的應用程式設定值，而後者會載入已儲存的預設值。</span><span class="sxs-lookup"><span data-stu-id="44f5c-245"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> contrasts with <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f5c-246">下列程式碼範例所示<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>方法的主體中叫用<xref:System.Windows.Forms.Control.Click>名為按鈕的事件處理常式`btnReload`。</span><span class="sxs-lookup"><span data-stu-id="44f5c-246">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReload`.</span></span> <span data-ttu-id="44f5c-247">此呼叫後，應用程式設定的目前儲存的值會重新載入至其對應的屬性。</span><span class="sxs-lookup"><span data-stu-id="44f5c-247">As a result of this call, the currently stored values for the application settings are reloaded into their corresponding properties.</span></span> <span data-ttu-id="44f5c-248">完整的程式碼範例會列在<xref:System.Configuration.ApplicationSettingsBase>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="44f5c-248">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#6](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#6)]
 [!code-csharp[AppSettingsSample#6](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#6)]
 [!code-vb[AppSettingsSample#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="M:System.Configuration.SettingsPropertyValueCollection.Clear" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="applicationSettingsBase.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44f5c-249">將保存的應用程式設定值還原至其對應的預設屬性。</span><span class="sxs-lookup"><span data-stu-id="44f5c-249">Restores the persisted application settings values to their corresponding default properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-250"><xref:System.Configuration.ApplicationSettingsBase.Reset%2A>方法會覆寫使用者範圍的設定屬性來還原每個應用程式設定的目前保存的值。</span><span class="sxs-lookup"><span data-stu-id="44f5c-250">The <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method overwrites the user-scoped settings properties by restoring the currently persisted value of each application settings.</span></span> <span data-ttu-id="44f5c-251">這個方法會執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="44f5c-251">This method performs the following actions:</span></span>  
  
-   <span data-ttu-id="44f5c-252">它會呼叫<xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType>上支援此選擇性方法，每個設定提供者的方法。</span><span class="sxs-lookup"><span data-stu-id="44f5c-252">It calls the <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType> method on every settings provider that supports this optional method.</span></span>  
  
-   <span data-ttu-id="44f5c-253">它會呼叫<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>方法，以強制重新整理的設定屬性值。</span><span class="sxs-lookup"><span data-stu-id="44f5c-253">It calls the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method to force a refresh of the settings property values.</span></span>  
  
 <span data-ttu-id="44f5c-254"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> 相反<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>在於前者會載入最後一集的已儲存的應用程式設定值，而後者會載入已儲存的預設值。</span><span class="sxs-lookup"><span data-stu-id="44f5c-254"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> contrasts with <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f5c-255">下列程式碼範例所示<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>方法的主體中叫用<xref:System.Windows.Forms.Control.Click>名為按鈕的事件處理常式`btnReset`。</span><span class="sxs-lookup"><span data-stu-id="44f5c-255">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReset`.</span></span> <span data-ttu-id="44f5c-256">此呼叫後，應用程式設定的預存的預設值，會重新載入至其對應的屬性。</span><span class="sxs-lookup"><span data-stu-id="44f5c-256">As a result of this call, the stored default values for the application settings are reloaded into their corresponding properties.</span></span> <span data-ttu-id="44f5c-257">完整的程式碼範例會列在<xref:System.Configuration.ApplicationSettingsBase>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="44f5c-257">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#5)]
 [!code-csharp[AppSettingsSample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#5)]
 [!code-vb[AppSettingsSample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="44f5c-258">無法剖析組態檔。</span><span class="sxs-lookup"><span data-stu-id="44f5c-258">The configuration file could not be parsed.</span></span></exception>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberSignature Language="F#" Value="override this.Save : unit -&gt; unit" Usage="applicationSettingsBase.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44f5c-259">儲存應用程式設定屬性的目前值。</span><span class="sxs-lookup"><span data-stu-id="44f5c-259">Stores the current values of the application settings properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-260"><xref:System.Configuration.ApplicationSettingsBase.Save%2A>方法會寫入其相關聯的資料存放區中的每個設定屬性的目前值。</span><span class="sxs-lookup"><span data-stu-id="44f5c-260">The <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method writes the current value of each settings property to its associated data store.</span></span> <span data-ttu-id="44f5c-261">每一個屬性，這個方法會呼叫<xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>相關聯的設定提供者上的方法。</span><span class="sxs-lookup"><span data-stu-id="44f5c-261">For each property, this method calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method on the associated settings provider.</span></span>  
  
 <span data-ttu-id="44f5c-262">這個方法不同於 基底類別實作，便會產生<xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>前的值會寫入事件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-262">This method differs from the base class implementation in that it raises the <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event before the values are written.</span></span>  
  
 <span data-ttu-id="44f5c-263">如果所定義的唯一設定是應用程式範圍的設定，<xref:System.Configuration.ApplicationSettingsBase.Save%2A>沒有任何影響，並不傳回任何錯誤，如果使用預設值來呼叫<xref:System.Configuration.LocalFileSettingsProvider>。</span><span class="sxs-lookup"><span data-stu-id="44f5c-263">If the only settings defined are application-scoped settings, <xref:System.Configuration.ApplicationSettingsBase.Save%2A> will have no effect and return no error if called with the default <xref:System.Configuration.LocalFileSettingsProvider>.</span></span> <span data-ttu-id="44f5c-264"><xref:System.Configuration.LocalFileSettingsProvider> 只會儲存使用者範圍的設定。</span><span class="sxs-lookup"><span data-stu-id="44f5c-264"><xref:System.Configuration.LocalFileSettingsProvider> only saves user-scoped settings.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="44f5c-265">沒有對應的 Load 方法，因為在包裝函式類別初始設定期間自動載入應用程式設定的值。</span><span class="sxs-lookup"><span data-stu-id="44f5c-265">There is no corresponding Load method because the values of application settings are automatically loaded during wrapper class initialization.</span></span> <span data-ttu-id="44f5c-266">相反地，這些值不會自動儲存應用程式結束時。</span><span class="sxs-lookup"><span data-stu-id="44f5c-266">In contrast, these values are not automatically saved when an application ends.</span></span> <span data-ttu-id="44f5c-267">因此，您必須明確呼叫<xref:System.Configuration.ApplicationSettingsBase.Save%2A>方法，將應用程式設定的目前值。</span><span class="sxs-lookup"><span data-stu-id="44f5c-267">Therefore, you must explicitly call the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method to persist the current values of the application settings.</span></span> <span data-ttu-id="44f5c-268">這通常會在執行<xref:System.Windows.Forms.Form.Closing>事件處理常式的主要或包含<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="44f5c-268">This is typically performed in the <xref:System.Windows.Forms.Form.Closing> event handler of the primary or containing <xref:System.Windows.Forms.Form>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f5c-269">下列程式碼範例所示<xref:System.Configuration.ApplicationSettingsBase.Save%2A>方法呼叫從<xref:System.Windows.Forms.Form.Closing>主要表單的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="44f5c-269">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method being called from the <xref:System.Windows.Forms.Form.Closing> event handler for the primary form.</span></span> <span data-ttu-id="44f5c-270">這個方法也會提供額外的週期附加到表單的相關聯之設定屬性<xref:System.Windows.Forms.Control.Text%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="44f5c-270">This method also appends an extra period to the settings property that is associated with the form's <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 <span data-ttu-id="44f5c-271">完整的程式碼範例會列在<xref:System.Configuration.ApplicationSettingsBase>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="44f5c-271">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#3)]
 [!code-csharp[AppSettingsSample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#3)]
 [!code-vb[AppSettingsSample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SettingChanging">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingChangingEventHandler SettingChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingChangingEventHandler SettingChanging" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingChanging As SettingChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingChangingEventHandler ^ SettingChanging;" />
      <MemberSignature Language="F#" Value="member this.SettingChanging : System.Configuration.SettingChangingEventHandler " Usage="member this.SettingChanging : System.Configuration.SettingChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44f5c-272">發生於應用程式設定屬性值變更之前。</span><span class="sxs-lookup"><span data-stu-id="44f5c-272">Occurs before the value of an application settings property is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-273"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging>應用程式設定值，屬性透過在變更之前，就會發生事件<xref:System.Configuration.ApplicationSettingsBase.Item%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="44f5c-273">The <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event occurs before an application setting value property is changed through the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method.</span></span> <span data-ttu-id="44f5c-274">這個事件就不會引發的時機<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>或<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>方法受到呼叫。</span><span class="sxs-lookup"><span data-stu-id="44f5c-274">This event is not raised when the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> or <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> methods are called.</span></span> <span data-ttu-id="44f5c-275"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> 您可以透過取消<xref:System.Configuration.SettingChangingEventArgs>事件資料類別。</span><span class="sxs-lookup"><span data-stu-id="44f5c-275"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> can be canceled through the <xref:System.Configuration.SettingChangingEventArgs> event data class.</span></span>  
  
 <span data-ttu-id="44f5c-276">您通常會使用<xref:System.Configuration.ApplicationSettingsBase.SettingChanging>来處理個別的設定屬性的立即驗證事件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-276">You typically use the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event to handle immediate validation of an individual settings property.</span></span> <span data-ttu-id="44f5c-277">如需有關驗證的詳細資訊，請參閱[How to:驗證應用程式設定](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md)。</span><span class="sxs-lookup"><span data-stu-id="44f5c-277">For more information about validation, see [How to: Validate Application Settings](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md).</span></span>  
  
 <span data-ttu-id="44f5c-278">沒有對應的`SettingChanged`這個事件類別; 相反地，請參閱<xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-278">There is no corresponding `SettingChanged` event for this class; instead, see the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f5c-279">下列程式碼範例所示<xref:System.Configuration.ApplicationSettingsBase.SettingChanging>型別的物件的事件處理常式`FormSettings`，包裝函式類別衍生自<xref:System.Configuration.ApplicationSettingsBase>。</span><span class="sxs-lookup"><span data-stu-id="44f5c-279">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="44f5c-280">這個處理常式將事件資訊顯示在文字方塊中名為`tbStatus`。</span><span class="sxs-lookup"><span data-stu-id="44f5c-280">The handler displays the event information in a textbox named `tbStatus`.</span></span> <span data-ttu-id="44f5c-281">完整的程式碼範例會列在<xref:System.Configuration.ApplicationSettingsBase>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="44f5c-281">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#7)]
 [!code-csharp[AppSettingsSample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#7)]
 [!code-vb[AppSettingsSample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/9f145ada-4267-436a-aa4c-c4dcffd0afb7"><span data-ttu-id="44f5c-282">如何：驗證應用程式設定</span><span class="sxs-lookup"><span data-stu-id="44f5c-282">How to: Validate Application Settings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44f5c-283">取得或設定應用程式設定群組的設定索引鍵。</span><span class="sxs-lookup"><span data-stu-id="44f5c-283">Gets or sets the settings key for the application settings group.</span></span></summary>
        <value><span data-ttu-id="44f5c-284"><see cref="T:System.String" />，包含目前設定群組的設定索引鍵。</span><span class="sxs-lookup"><span data-stu-id="44f5c-284">A <see cref="T:System.String" /> containing the settings key for the current settings group.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-285"><xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>屬性，可讓用戶端程式碼，在特定的設定提供者，來區分相同的應用程式設定類別的多個執行個體。</span><span class="sxs-lookup"><span data-stu-id="44f5c-285">The <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property is provided to enable client code, and in particular the settings provider, to disambiguate between multiple instances of the same application settings class.</span></span>  
  
 <span data-ttu-id="44f5c-286">除非設定包裝函式類別設計為使用單一子句模式，可能會有相同的應用程式設定類別，在單一應用程式中的多個執行個體。</span><span class="sxs-lookup"><span data-stu-id="44f5c-286">Unless the settings wrapper class is designed using the singleton pattern, there can be multiple instances of the same application settings class in a single application.</span></span> <span data-ttu-id="44f5c-287">值<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>應該根據屬性值是如何共用設定。</span><span class="sxs-lookup"><span data-stu-id="44f5c-287">The value of <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should be set according to how the property values are intended to be shared.</span></span>  
  
-   <span data-ttu-id="44f5c-288">如果設定屬性的包裝函式要在相同的應用程式，然後包裝函式的所有執行個體之間共用<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>應該在所有執行個體具有相同的值。</span><span class="sxs-lookup"><span data-stu-id="44f5c-288">If the settings properties of the wrapper are intended to be shared across all instances of the wrapper in the same application, then <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should have the same value in all of the instances.</span></span> <span data-ttu-id="44f5c-289">這是預設行為<xref:System.Configuration.ApplicationSettingsBase>類別。</span><span class="sxs-lookup"><span data-stu-id="44f5c-289">This is the default behavior of the <xref:System.Configuration.ApplicationSettingsBase> class.</span></span>  
  
-   <span data-ttu-id="44f5c-290">如果包裝函式的設定屬性主要做為每個執行個體，然後<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>應該有唯一的值，每個執行個體。</span><span class="sxs-lookup"><span data-stu-id="44f5c-290">If the settings properties of the wrapper are intended to be per instance, then <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should have a unique value for every instance.</span></span> <span data-ttu-id="44f5c-291"><xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29>建構函式的版本可讓您在初始化<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>的唯一字串。</span><span class="sxs-lookup"><span data-stu-id="44f5c-291">The <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29> version of the constructor enables you to initialize <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> to a unique string.</span></span>  
  
 <span data-ttu-id="44f5c-292">相反地，<xref:System.Configuration.ApplicationSettingsBase.Context%2A>屬性來設定提供者，讓它能夠將值保存在以有效率且進行有條理的方式提供的提示。</span><span class="sxs-lookup"><span data-stu-id="44f5c-292">In contrast, the <xref:System.Configuration.ApplicationSettingsBase.Context%2A> property provides hints to the settings provider to enable it to persist values in an efficient and orderly manner.</span></span>  
  
 <span data-ttu-id="44f5c-293"><xref:System.Configuration.SettingChangingEventArgs>類別包含類似<xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A>屬性，可協助識別來源<xref:System.Configuration.ApplicationSettingsBase.SettingChanging>事件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-293">The <xref:System.Configuration.SettingChangingEventArgs> class contains a similar <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> property that helps identify the source of the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Context" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SettingsLoaded">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsLoadedEventHandler SettingsLoaded" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsLoaded As SettingsLoadedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsLoadedEventHandler ^ SettingsLoaded;" />
      <MemberSignature Language="F#" Value="member this.SettingsLoaded : System.Configuration.SettingsLoadedEventHandler " Usage="member this.SettingsLoaded : System.Configuration.SettingsLoadedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsLoadedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44f5c-294">發生於從儲存區擷取應用程式設定之後。</span><span class="sxs-lookup"><span data-stu-id="44f5c-294">Occurs after the application settings are retrieved from storage.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-295"><xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>只有在初始之後發生的事件`get`存取第一個組態屬性使用，通常透過<xref:System.Configuration.ApplicationSettingsBase.Item%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="44f5c-295">The <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> event occurs only after the initial `get` access of the first configuration property used, typically through the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method.</span></span> <span data-ttu-id="44f5c-296">後續的存取會使用在本機快取的設定屬性的值。</span><span class="sxs-lookup"><span data-stu-id="44f5c-296">Subsequent accesses use values for the settings property that are cached locally.</span></span> <span data-ttu-id="44f5c-297"><xref:System.Configuration.ApplicationSettingsBase.Reset%2A>和<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>方法將會清除所有快取的值，因此將會再次引發這個事件，在後續的屬性存取。</span><span class="sxs-lookup"><span data-stu-id="44f5c-297">The <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> and <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods will clear all cached values so this event will be raised again upon subsequent property access.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="T:System.Configuration.SettingsLoadedEventArgs" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="SettingsSaving">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsSavingEventHandler SettingsSaving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsSavingEventHandler SettingsSaving" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsSaving As SettingsSavingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsSavingEventHandler ^ SettingsSaving;" />
      <MemberSignature Language="F#" Value="member this.SettingsSaving : System.Configuration.SettingsSavingEventHandler " Usage="member this.SettingsSaving : System.Configuration.SettingsSavingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsSavingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44f5c-298">發生於值儲存至資料存放區之前。</span><span class="sxs-lookup"><span data-stu-id="44f5c-298">Occurs before values are saved to the data store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-299"><xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>引發事件<xref:System.Configuration.ApplicationSettingsBase.Save%2A>之前它會儲存到其相關聯的資料存放區的應用程式設定屬性的方法。</span><span class="sxs-lookup"><span data-stu-id="44f5c-299">The <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event is raised by the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method before it stores the application settings properties to their associated data store.</span></span> <span data-ttu-id="44f5c-300">相關聯的事件處理常式可以取消這個事件。</span><span class="sxs-lookup"><span data-stu-id="44f5c-300">The associated event handler can cancel this event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44f5c-301">下列程式碼範例所示<xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>型別的物件的事件處理常式`FormSettings`，包裝函式類別衍生自<xref:System.Configuration.ApplicationSettingsBase>。</span><span class="sxs-lookup"><span data-stu-id="44f5c-301">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="44f5c-302">處理常式會要求使用者儲存目前的應用程式設定屬性值。</span><span class="sxs-lookup"><span data-stu-id="44f5c-302">The handler queries the user to save the current application settings property values.</span></span> <span data-ttu-id="44f5c-303">完整的程式碼範例會列在<xref:System.Configuration.ApplicationSettingsBase>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="44f5c-303">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#8](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#8)]
 [!code-csharp[AppSettingsSample#8](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#8)]
 [!code-vb[AppSettingsSample#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public virtual void Upgrade ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Upgrade ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade();" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : unit -&gt; unit&#xA;override this.Upgrade : unit -&gt; unit" Usage="applicationSettingsBase.Upgrade " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44f5c-304">更新應用程式設定，以反映應用程式的最近安裝。</span><span class="sxs-lookup"><span data-stu-id="44f5c-304">Updates application settings to reflect a more recent installation of the application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44f5c-305"><xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>方法會執行兩個動作，以確保順利轉換到新版的應用程式：</span><span class="sxs-lookup"><span data-stu-id="44f5c-305">The <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> method performs two actions to assure smooth transition to a new version of an application:</span></span>  
  
-   <span data-ttu-id="44f5c-306">它會通知所有對應的設定提供者的存在升級的應用程式透過呼叫其<xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType>方法，假設他們已實作<xref:System.Configuration.IApplicationSettingsProvider>介面。</span><span class="sxs-lookup"><span data-stu-id="44f5c-306">It notifies all of the corresponding settings providers of the existence of the upgraded application through a call to their <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType> method, assuming they have implemented the <xref:System.Configuration.IApplicationSettingsProvider> interface.</span></span> <span data-ttu-id="44f5c-307">如果設定包裝函式類別標示為不會執行此動作<xref:System.Configuration.NoSettingsVersionUpgradeAttribute>。</span><span class="sxs-lookup"><span data-stu-id="44f5c-307">This action is not performed if the settings wrapper class is marked with <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.</span></span>  
  
-   <span data-ttu-id="44f5c-308">它會重新載入所有應用程式設定的值。</span><span class="sxs-lookup"><span data-stu-id="44f5c-308">It reloads the values for all of the application settings.</span></span>  
  
 <span data-ttu-id="44f5c-309">您可以覆寫預設行為<xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>來實作自訂升級或合併行為。</span><span class="sxs-lookup"><span data-stu-id="44f5c-309">You can override the default behavior of <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> to implement custom upgrading or merging behavior.</span></span> <span data-ttu-id="44f5c-310">使用<xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A>方法來擷取個別的值，對於舊版的應用程式的設定。</span><span class="sxs-lookup"><span data-stu-id="44f5c-310">Use the <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> method to retrieve individual values for a setting for the previous version of the application.</span></span> <span data-ttu-id="44f5c-311">自訂升級行為的範例包括：</span><span class="sxs-lookup"><span data-stu-id="44f5c-311">Examples of custom upgrade behavior include:</span></span>  
  
-   <span data-ttu-id="44f5c-312">使用新的 「 原則 」 預設值覆寫一個或多個先前的使用者指定值或先前的預設值。</span><span class="sxs-lookup"><span data-stu-id="44f5c-312">Using new policy defaults that override one or more of the previous user-specified values or previous defaults.</span></span>  
  
-   <span data-ttu-id="44f5c-313">特殊的相容性，使用較新範圍、 不同的設定屬性群組和等等的舊值的翻譯。</span><span class="sxs-lookup"><span data-stu-id="44f5c-313">Special translation of old values to be compatible with newer ranges, a different settings property group, and so on.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="44f5c-314">無法剖析組態檔。</span><span class="sxs-lookup"><span data-stu-id="44f5c-314">The configuration file could not be parsed.</span></span></exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      </Docs>
    </Member>
  </Members>
</Type>