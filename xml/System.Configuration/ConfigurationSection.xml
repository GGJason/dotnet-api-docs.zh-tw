<Type Name="ConfigurationSection" FullName="System.Configuration.ConfigurationSection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="50b032013ee388f601a901827cebfb8bd035f798" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30380072" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ConfigurationSection : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConfigurationSection extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationSection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConfigurationSection&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationSection abstract : System::Configuration::ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>代表組態檔中的區段。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您使用<xref:System.Configuration.ConfigurationSection>類別來實作自訂的區段類型。 擴充<xref:System.Configuration.ConfigurationSection>類別，以提供自訂的處理和以程式設計方式存取自訂組態區段。 如需有關如何使用自訂組態區段，請參閱[How to： 建立自訂組態區段使用 ConfigurationSection](http://msdn.microsoft.com/library/febaca98-c727-4017-95ed-82e2fb6cf234)。  
  
 區段中的項目以註冊其處理型別`configSections`項目。 如需範例，請參閱 < 範例 > 一節所示的組態檔摘錄。  
  
> [!NOTE]
>  在舊版的.NET Framework 中，組態區段處理常式所使用的組態設定進行變更以程式設計的方式。 現在，所有預設設定區段都都由擴充的類別<xref:System.Configuration.ConfigurationSection>類別。  
  
   
  
## Examples  
 下列範例會示範如何以程式設計的方式實作自訂區段。  
  
 如需示範如何實作及使用自訂的區段，使用屬性化的模型實作的完整範例，請參閱<xref:System.Configuration.ConfigurationElement>。  
  
 [!code-csharp[System.Configuration.ConfigurationSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#1)]
 [!code-vb[System.Configuration.ConfigurationSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#1)]  
  
 下列範例是組態檔的摘錄，套用至前一個範例。  
  
 ```xml
<?xml version="1.0" encoding="utf-8"?>
  <configuration>  
    <configSections>
      <section name="CustomSection" type="Samples.AspNet. CustomSection, CustomConfigurationSection, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" allowDefinition="Everywhere" allowExeDefinition="MachineToApplication" restartOnExternalChanges="true" />
    </configSections>  

    <CustomSection fileName="default.txt" maxUsers="1000" maxIdleTime="00:15:00" /> 
 
  </configuration>
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>您可以使用程式設計或宣告式 （使用屬性） 的程式撰寫模型來建立自訂組態區段：  
  
-   程式設計模型。 此模型，針對每個區段屬性您必須建立屬性以取得或設定其值將它加入至基礎的內部屬性包<see cref="T:System.Configuration.ConfigurationElement" />基底類別。  
  
-   宣告式模型。 這個簡單的模型，也稱為屬性化的模型，可讓您使用的屬性，而將其屬性定義區段屬性。 這些屬性會指示 ASP.NET 組態系統有關的屬性類型和其預設值。 這項資訊，透過反映，取得與 ASP.NET 組態系統會建立區段屬性物件，並執行必要的初始化。  
  
 <see cref="T:System.Configuration.Configuration" />類別允許以程式設計方式存取編輯組態檔。 您可以存取這些檔案進行讀取或寫入，如下所示：  
  
-   讀取。 您使用<see cref="M:System.Configuration.Configuration.GetSection(System.String)" />或<see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" />讀取組態資訊。 請注意使用者讀取或處理序必須具有下列權限：  
  
    -   讀取組態檔，在目前的組態階層層級上的權限。  
  
    -   讀取權限的所有父組態檔。  
  
     如果您的應用程式需要唯讀存取它自己的設定，則建議您使用<see cref="Overload:System.Web.Configuration.WebConfigurationManager.GetSection" />多載的方法，在 Web 應用程式，或<see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />方法在用戶端應用程式的情況下。  
  
     這些方法會提供存取目前的應用程式的快取的設定值，其具有較佳的效能比<see cref="T:System.Configuration.Configuration" />類別。  
  
 <block subset="none" type="note"><para>  
 如果您使用靜態<see langword="GetSection" />採用方法<paramref name="path" />參數，<paramref name="path" />參數必須參考應用程式在其中執行程式碼; 否則會忽略此參數與目前正在執行的組態資訊會傳回應用程式。  
  
</para></block>  
  
-   撰寫。 您可以使用其中一種<see cref="Overload:System.Configuration.Configuration.Save" />寫入組態資訊的方法。 請注意，寫入的處理序的使用者必須具有下列權限：  
  
    -   寫入設定檔案和目錄，在目前的組態階層層級上的權限。  
  
    -   讀取所有的組態檔的權限。</para>
    </block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Configuration.SectionInformation" />
    <altmember cref="T:System.Configuration.ConfigurationElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationSection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConfigurationSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Configuration.ConfigurationSection" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要使用<xref:System.Configuration.ConfigurationSection.%23ctor%2A>建構函式，您必須先定義自訂區段類型。 如需範例，請參閱<xref:System.Configuration.ConfigurationSection>類別概觀。  
  
   
  
## Examples  
 下列範例將示範如何使用這個 <xref:System.Configuration.ConfigurationSection.%23ctor%2A> 建構函式。 這個範例假設您已建立名為自訂區段類別`CustomSection`。 如需這種類別的範例，請參閱<xref:System.Configuration.ConfigurationSection>類別概觀。  
  
 [!code-csharp[System.Configuration.ConfigurationSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#2)]
 [!code-vb[System.Configuration.ConfigurationSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeSection">
      <MemberSignature Language="C#" Value="protected internal virtual void DeserializeSection (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void DeserializeSection(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub DeserializeSection (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void DeserializeSection(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">從組態檔讀取的 <see cref="T:System.Xml.XmlReader" /> 物件。</param>
        <summary>從組態檔讀取 XML。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 還原序列化指從組態檔、 其轉換成即時資料，以及其儲存在物件中的讀取 XML 資料。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <paramref name="reader" /> 在組態檔中找不到項目。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeObject">
      <MemberSignature Language="C#" Value="protected internal virtual object GetRuntimeObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object GetRuntimeObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.GetRuntimeObject" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetRuntimeObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ GetRuntimeObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，傳回自訂物件。</summary>
        <returns>表示區段的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Configuration.Configuration.GetSection%2A>方法在執行階段呼叫，組態系統會先建立適當的執行個體<xref:System.Configuration.ConfigurationSection>類別，並再傳回的物件，它會從取得<xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A>方法。  
  
 根據預設，<xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A>只會傳回物件，代表<xref:System.Configuration.ConfigurationSection>的呼叫。  
  
   
  
## Examples  
 下列範例會示範如何使用 <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> 方法。  
  
 [!code-csharp[System.Configuration.ConfigurationSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#4)]
 [!code-vb[System.Configuration.ConfigurationSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>您可以覆寫<see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" />方法，以在執行階段傳回的自訂型別。  
  
 例如，若要限制可修改執行階段中的設定<see cref="T:System.Configuration.ConfigurationSection" />類別，您可以覆寫<see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" />，如果有的話，會強制執行的限制的設定，您可以修改的自訂型別傳回。  
  
 如果執行階段物件僅供內部，傳回的物件不能外定義它的組件。 其中一種方式來建立衍生自物件<see cref="T:System.Configuration.ConfigurationSection" />和只能存取您在執行的組件中的程式碼時建立的內部執行階段物件的方法會傳回您<see cref="T:System.Configuration.ConfigurationSection" />實作。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="protected internal override bool IsModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.IsModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsModified () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsModified();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中進行實作時，指出這個組態項目自上次儲存或載入後是否已修改。</summary>
        <returns>
          如果項目已修改則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetModified">
      <MemberSignature Language="C#" Value="protected internal override void ResetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void ResetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ResetModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub ResetModified ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void ResetModified();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中實作時，將 <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> 方法的值重設為 <see langword="false" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SectionInformation">
      <MemberSignature Language="C#" Value="public System.Configuration.SectionInformation SectionInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SectionInformation SectionInformation" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationSection.SectionInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SectionInformation As SectionInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::SectionInformation ^ SectionInformation { System::Configuration::SectionInformation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SectionInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Configuration.SectionInformation" /> 物件，該物件包含 <see cref="T:System.Configuration.ConfigurationSection" /> 物件之不可自訂的資訊和功能。</summary>
        <value>
          <see cref="T:System.Configuration.SectionInformation" />，其中包含 <see cref="T:System.Configuration.ConfigurationSection" /> 之不可自訂的資訊和功能。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例將示範如何使用 <xref:System.Configuration.ConfigurationSection.SectionInformation%2A> 屬性。  
  
 [!code-csharp[System.Configuration.ConfigurationSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#3)]
 [!code-vb[System.Configuration.ConfigurationSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SectionInformation" />
      </Docs>
    </Member>
    <Member MemberName="SerializeSection">
      <MemberSignature Language="C#" Value="protected internal virtual string SerializeSection (System.Configuration.ConfigurationElement parentElement, string name, System.Configuration.ConfigurationSaveMode saveMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string SerializeSection(class System.Configuration.ConfigurationElement parentElement, string name, valuetype System.Configuration.ConfigurationSaveMode saveMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SerializeSection (parentElement As ConfigurationElement, name As String, saveMode As ConfigurationSaveMode) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ SerializeSection(System::Configuration::ConfigurationElement ^ parentElement, System::String ^ name, System::Configuration::ConfigurationSaveMode saveMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="saveMode" Type="System.Configuration.ConfigurationSaveMode" />
      </Parameters>
      <Docs>
        <param name="parentElement">
          <see cref="T:System.Configuration.ConfigurationElement" /> 執行個體，要用來做為執行取消合併時的父代。</param>
        <param name="name">要建立的區段名稱。</param>
        <param name="saveMode">要在寫入至字串時所使用的 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 執行個體。</param>
        <summary>建立 XML 字串，在該字串的單一區段中，包含了要寫入檔案之 <see cref="T:System.Configuration.ConfigurationSection" /> 物件的取消合併檢視。</summary>
        <returns>XML 字串，包含了 <see cref="T:System.Configuration.ConfigurationSection" /> 物件的取消合併檢視。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 序列化是指包含物件，以 XML 格式和其存放裝置的組態檔中的即時資料的轉換。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeElementInTargetVersion">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializeElementInTargetVersion (System.Configuration.ConfigurationElement element, string elementName, System.Runtime.Versioning.FrameworkName targetFramework);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializeElementInTargetVersion(class System.Configuration.ConfigurationElement element, string elementName, class System.Runtime.Versioning.FrameworkName targetFramework) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializeElementInTargetVersion (element As ConfigurationElement, elementName As String, targetFramework As FrameworkName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializeElementInTargetVersion(System::Configuration::ConfigurationElement ^ element, System::String ^ elementName, System::Runtime::Versioning::FrameworkName ^ targetFramework);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="targetFramework" Type="System.Runtime.Versioning.FrameworkName" />
      </Parameters>
      <Docs>
        <param name="element">可供序列化的候選 <see cref="T:System.Configuration.ConfigurationElement" /> 物件。</param>
        <param name="elementName">顯示在 XML 中的 <see cref="T:System.Configuration.ConfigurationElement" /> 物件名稱。</param>
        <param name="targetFramework">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 目標版本。</param>
        <summary>表示指定的項目是否應該在組態物件階層架構針對指定的 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 目標版本序列化時予以序列化。</summary>
        <returns>
          如果應該序列化 <paramref name="element" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 建立的每個組態區段[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]和更新版本必須明確覆寫這個方法並傳回`true`，但只有指定的項目是指定之版本的有效[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。 針對較舊版本所建立的現有組態區段[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]並沒有變更。  
  
 基底型別包含這個方法一律會傳回的預設實作`true`。 如果您實作的組態區段，而且您不覆寫這個方法，預設的組態區段中所包含的所有組態項目會都序列化所有 framework 版本。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePropertyInTargetVersion">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializePropertyInTargetVersion (System.Configuration.ConfigurationProperty property, string propertyName, System.Runtime.Versioning.FrameworkName targetFramework, System.Configuration.ConfigurationElement parentConfigurationElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializePropertyInTargetVersion(class System.Configuration.ConfigurationProperty property, string propertyName, class System.Runtime.Versioning.FrameworkName targetFramework, class System.Configuration.ConfigurationElement parentConfigurationElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializePropertyInTargetVersion (property As ConfigurationProperty, propertyName As String, targetFramework As FrameworkName, parentConfigurationElement As ConfigurationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializePropertyInTargetVersion(System::Configuration::ConfigurationProperty ^ property, System::String ^ propertyName, System::Runtime::Versioning::FrameworkName ^ targetFramework, System::Configuration::ConfigurationElement ^ parentConfigurationElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Configuration.ConfigurationProperty" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="targetFramework" Type="System.Runtime.Versioning.FrameworkName" />
        <Parameter Name="parentConfigurationElement" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="property">可供序列化的候選 <see cref="T:System.Configuration.ConfigurationProperty" /> 物件。</param>
        <param name="propertyName">顯示在 XML 中的 <see cref="T:System.Configuration.ConfigurationProperty" /> 物件名稱。</param>
        <param name="targetFramework">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 目標版本。</param>
        <param name="parentConfigurationElement">屬性的父項目。</param>
        <summary>表示指定的屬性是否應該在組態物件階層架構針對指定的 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 目標版本序列化時予以序列化。</summary>
        <returns>
          如果應該序列化 <paramref name="property" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 建立的每個組態區段[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]和更新版本必須明確覆寫這個方法並傳回`true`，但只有在指定的屬性是指定之版本的有效[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。 針對較舊版本所建立的現有組態區段[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]並沒有變更。  
  
 基底型別包含這個方法一律會傳回的預設實作`true`。 如果您實作的組態區段，而且您不覆寫這個方法，預設的組態區段中所包含的所有組態屬性會都序列化所有 framework 版本。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSectionInTargetVersion">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializeSectionInTargetVersion (System.Runtime.Versioning.FrameworkName targetFramework);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializeSectionInTargetVersion(class System.Runtime.Versioning.FrameworkName targetFramework) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializeSectionInTargetVersion (targetFramework As FrameworkName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializeSectionInTargetVersion(System::Runtime::Versioning::FrameworkName ^ targetFramework);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetFramework" Type="System.Runtime.Versioning.FrameworkName" />
      </Parameters>
      <Docs>
        <param name="targetFramework">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 目標版本。</param>
        <summary>表示目前的 <see cref="T:System.Configuration.ConfigurationSection" /> 執行個體是否應該在組態物件階層架構針對指定的 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 目標版本序列化時予以序列化。</summary>
        <returns>
          如果應該序列化目前的區段，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 建立的每個組態區段[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]和更新版本必須明確覆寫這個方法並傳回`true`，但前提是組態區段會指定版本的有效[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。 針對較舊版本所建立的現有組態區段[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]並沒有變更。  
  
 基底型別包含這個方法一律會傳回的預設實作`true`。 如果您實作的組態區段，而且您不覆寫這個方法，預設的組態區段會序列化所有的 framework 版本。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>