<Type Name="LongValidatorAttribute" FullName="System.Configuration.LongValidatorAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="905355fe0f6368d995aada8e9cc7eaf035fea5cd" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49131832" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LongValidatorAttribute : System.Configuration.ConfigurationValidatorAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LongValidatorAttribute extends System.Configuration.ConfigurationValidatorAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.LongValidatorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LongValidatorAttribute&#xA;Inherits ConfigurationValidatorAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class LongValidatorAttribute sealed : System::Configuration::ConfigurationValidatorAttribute" />
  <TypeSignature Language="F#" Value="type LongValidatorAttribute = class&#xA;    inherit ConfigurationValidatorAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>以宣告方式指示 .NET Framework 在組態屬性上執行長整數驗證。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您使用<xref:System.Configuration.LongValidatorAttribute>屬性來裝飾的組態屬性。 這會指示.NET Framework 來驗證屬性使用<xref:System.Configuration.LongValidator>物件，並將裝飾參數的值傳遞給它。  
  
 您可以套用<xref:System.Configuration.LongValidatorAttribute>屬性只有屬性型別。  
  
   
  
## Examples  
 下列範例示範如何裝飾的自訂屬性<xref:System.Configuration.ConfigurationSection>物件使用<xref:System.Configuration.LongValidatorAttribute>屬性。  
  
 [!code-csharp[System.Configuration.ConfigurationValidatorAttributes#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/CS/ConfigurationValidatorAttributes.cs#7)]
 [!code-vb[System.Configuration.ConfigurationValidatorAttributes#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/VB/ConfigurationValidatorAttributes.vb#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationValidatorAttribute" />
    <altmember cref="T:System.Configuration.ConfigurationSection" />
    <altmember cref="T:System.Configuration.ConfigurationPropertyAttribute" />
    <altmember cref="T:System.Configuration.LongValidator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LongValidatorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidatorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LongValidatorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Configuration.LongValidatorAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 屬性化模型中所使用這個建構函式以確保指派給相關屬性的值為長整數。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludeRange">
      <MemberSignature Language="C#" Value="public bool ExcludeRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExcludeRange" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.LongValidatorAttribute.ExcludeRange" />
      <MemberSignature Language="VB.NET" Value="Public Property ExcludeRange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExcludeRange { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExcludeRange : bool with get, set" Usage="System.Configuration.LongValidatorAttribute.ExcludeRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出要加入還是排除 <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" /> 和 <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" /> 屬性值所定義範圍中的整數。</summary>
        <value>如果必須排除此值，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 範圍是在內<xref:System.Configuration.LongValidatorAttribute.MinValue%2A>和<xref:System.Configuration.LongValidatorAttribute.MaxValue%2A>屬性值。 當<xref:System.Configuration.LongValidatorAttribute.ExcludeRange%2A>屬性值是`false`，允許的值為超出範圍。  
  
   
  
## Examples  
 下列範例將示範如何使用 <xref:System.Configuration.IntegerValidatorAttribute.ExcludeRange%2A> 屬性。  
  
 [!code-csharp[System.Configuration.ConfigurationValidatorAttributes#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/CS/ConfigurationValidatorAttributes.cs#7)]
 [!code-vb[System.Configuration.ConfigurationValidatorAttributes#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/VB/ConfigurationValidatorAttributes.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public long MaxValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxValue" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.LongValidatorAttribute.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxValue As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxValue { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxValue : int64 with get, set" Usage="System.Configuration.LongValidatorAttribute.MaxValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定此屬性所允許的最大值。</summary>
        <value>長整數，表示允許的最大值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LongValidatorAttribute.MaxValue%2A>屬性值會包含在允許的範圍。  
  
   
  
## Examples  
 下列範例將示範如何使用 <xref:System.Configuration.LongValidatorAttribute.MaxValue%2A> 屬性。  
  
 [!code-csharp[System.Configuration.ConfigurationValidatorAttributes#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/CS/ConfigurationValidatorAttributes.cs#7)]
 [!code-vb[System.Configuration.ConfigurationValidatorAttributes#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/VB/ConfigurationValidatorAttributes.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選取的值小於 <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public long MinValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MinValue" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.LongValidatorAttribute.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Property MinValue As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MinValue { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MinValue : int64 with get, set" Usage="System.Configuration.LongValidatorAttribute.MinValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定此屬性所允許的最小值。</summary>
        <value>整數，表示允許的最小值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LongValidatorAttribute.MinValue%2A>屬性值會包含在允許的範圍。  
  
   
  
## Examples  
 下列範例將示範如何使用 <xref:System.Configuration.LongValidatorAttribute.MinValue%2A> 屬性。  
  
 [!code-csharp[System.Configuration.ConfigurationValidatorAttributes#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/CS/ConfigurationValidatorAttributes.cs#7)]
 [!code-vb[System.Configuration.ConfigurationValidatorAttributes#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationValidatorAttributes/VB/ConfigurationValidatorAttributes.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選取的值大於 <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidatorInstance">
      <MemberSignature Language="C#" Value="public override System.Configuration.ConfigurationValidatorBase ValidatorInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationValidatorBase ValidatorInstance" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.LongValidatorAttribute.ValidatorInstance" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidatorInstance As ConfigurationValidatorBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::ConfigurationValidatorBase ^ ValidatorInstance { System::Configuration::ConfigurationValidatorBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidatorInstance : System.Configuration.ConfigurationValidatorBase" Usage="System.Configuration.LongValidatorAttribute.ValidatorInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationValidatorBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Configuration.LongValidator" /> 類別的執行個體。</summary>
        <value>
          <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 驗證程式執行個體。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您使用<xref:System.Configuration.LongValidatorAttribute.ValidatorInstance%2A>屬性值，藉由呼叫執行字串驗證其<xref:System.Configuration.LongValidator.Validate%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>