<Type Name="SettingsProvider" FullName="System.Configuration.SettingsProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ce8d7bedb9986401fb6bcb4ea8785cfe8ca6ab0" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46642870" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SettingsProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SettingsProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SettingsProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SettingsProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>做為應用程式設定架構中衍生自訂設定提供者的基底類別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定提供者會定義儲存在應用程式設定架構中使用的組態資料的機制。 .NET Framework 包含單一的預設設定提供者， <xref:System.Configuration.LocalFileSettingsProvider>，它會儲存到本機檔案系統的組態資料。 不過，您可以建立另一個儲存機制，藉由衍生自抽象<xref:System.Configuration.SettingsProvider>類別。 包裝函式類別使用的提供者取決於裝飾的包裝函式類別<xref:System.Configuration.SettingsProviderAttribute>。 如果這個屬性未提供，預設值， <xref:System.Configuration.LocalFileSettingsProvider>，會使用。  
  
 當您建立自訂設定提供者，最小值時，您必須提供這個類別的三種方法的實作： <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>，<xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>和<xref:System.Configuration.SettingsProvider.ApplicationName%2A>。  
  
 用戶端應用程式，您可以更標準化將功能加入至自訂提供者也實作<xref:System.Configuration.IApplicationSettingsProvider>介面。 此介面反映方法中找到<xref:System.Configuration.ApplicationSettingsBase>類別，主要是讓 版本控制支援。  
  
 一般而言，您應該設計為單一執行個體，以避免儲存體資源爭用的設定提供者。 提供者也應該是安全執行緒，因為它們可以同時從多個在單一應用程式定義域中的包裝函式執行個體或呼叫不同網域中的多個應用程式。  
  
 最小值，設定提供者必須識別三個屬性 —<xref:System.Configuration.ApplicationScopedSettingAttribute>， <xref:System.Configuration.UserScopedSettingAttribute>，和<xref:System.Configuration.DefaultSettingValueAttribute>。 可以套用至應用程式設定的屬性完整清單，請參閱 <<c0> [ 應用程式設定屬性](~/docs/framework/winforms/advanced/application-settings-attributes.md)。 自訂設定提供者應該解決屬性套用至設定的屬性，以下列方式：  
  
1.  如果提供者可以完成要求的屬性所隱含，顯然它應該這麼做。  
  
2.  如果提供者無法滿足的要求，它應該以無訊息模式忽略它。  
  
3.  如果兩個或多個屬性衝突;比方說，將與所裝飾的屬性<xref:System.Configuration.ApplicationScopedSettingAttribute>並<xref:System.Configuration.UserScopedSettingAttribute>; 提供者應該擲回<xref:System.Configuration.ConfigurationException>。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ConfigurationException" />
    <related type="Article" href="http://msdn.microsoft.com/library/c8eb2ad0-fac6-4ea2-9140-675a4a44d562">應用程式設定架構</related>
    <related type="Article" href="http://msdn.microsoft.com/library/53caa66c-a9fb-43a5-953c-ad092590098d">應用程式設定屬性</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Configuration.SettingsProvider" /> 類別的執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這是這個抽象類別此預設受保護建構函式。 在衍生的自訂設定提供者不需要提供明確的建構函式，因為<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>方法通常會執行所有的初始化。  
  
 用戶端程式碼通常不會直接具現化的設定提供者;相反地，您可以使用下列程序來尋找特定的設定屬性的設定提供者：  
  
1.  呼叫<xref:System.ComponentModel.Component.GetService%2A>方法在目前<xref:System.ComponentModel.Component>或是<xref:System.ComponentModel.ISite>返回目前的參考<xref:System.Configuration.ISettingsProviderService>。  
  
2.  呼叫<xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A>方法的<xref:System.Configuration.ISettingsProviderService>在傳回的設定提供者的第一個步驟中擷取。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Configuration.SettingsProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定目前正在執行之應用程式的名稱。</summary>
        <value>A <see cref="T:System.String" /> ，其中包含應用程式的簡短的名稱，不包含完整路徑或副檔名，例如， <c>SimpleAppSettings</c>。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SettingsProvider.ApplicationName%2A>和<xref:System.Configuration.Provider.ProviderBase.Name%2A>屬性協助釐清同樣地在不同的應用程式中的具名的設定屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPropertyValues (context As SettingsContext, collection As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection" Usage="settingsProvider.GetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Configuration.SettingsContext" />，描述目前應用程式的使用方式。</param>
        <param name="collection">
          <see cref="T:System.Configuration.SettingsPropertyCollection" />，包含要擷取其值的設定屬性群組。</param>
        <summary>傳回指定之應用程式執行個體和設定屬性群組的設定屬性值集合。</summary>
        <returns>
          <see cref="T:System.Configuration.SettingsPropertyValueCollection" />，包含指定設定屬性群組的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>必須實作方法，以處理特殊的設定，這些標記與<xref:System.Configuration.SpecialSettingAttribute>，以及協調應用程式和使用者設定。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetPropertyValues (context As SettingsContext, collection As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit" Usage="settingsProvider.SetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Configuration.SettingsContext" />，描述目前應用程式的使用方式。</param>
        <param name="collection">
          <see cref="T:System.Configuration.SettingsPropertyValueCollection" />，表示要設定的屬性設定群組。</param>
        <summary>設定指定屬性設定群組的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase> 包含<xref:System.Configuration.ApplicationSettingsBase.Save%2A>方法，呼叫以保存所有其設定屬性的值。 這個方法會列舉所有設定其設定屬性與呼叫相關聯的提供者<xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>方法，每個<xref:System.Configuration.SettingsProvider>執行實際的序列化作業。  
  
 <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>方法應該實作的安全性考量事項：  
  
-   只有完全受信任的程式碼應該可以更新應用程式設定。 更新使用者的應用程式設定，就應該允許部分信任的程式碼。 不受信任的程式碼通常不允許更新應用程式設定。  
  
-   使用量配額應該為了防範資源攻擊被視為由部分信任的應用程式。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
  </Members>
</Type>