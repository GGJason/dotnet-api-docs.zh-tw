<Type Name="SettingsProvider" FullName="System.Configuration.SettingsProvider">
  <TypeSignature Language="C#" Value="public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SettingsProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SettingsProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SettingsProvider abstract : System::Configuration::Provider::ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2153d-101">做為應用程式設定架構中衍生自訂設定提供者的基底類別。</span><span class="sxs-lookup"><span data-stu-id="2153d-101">Acts as a base class for deriving custom settings providers in the application settings architecture.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2153d-102">設定提供者會定義儲存在應用程式設定架構所使用的組態資料的機制。</span><span class="sxs-lookup"><span data-stu-id="2153d-102">A settings provider defines the mechanism for storing configuration data used in the application settings architecture.</span></span> <span data-ttu-id="2153d-103">.NET Framework 包含單一的預設設定提供者， <xref:System.Configuration.LocalFileSettingsProvider>，它會儲存到本機檔案系統的組態資料。</span><span class="sxs-lookup"><span data-stu-id="2153d-103">The .NET Framework contains a single default settings provider, <xref:System.Configuration.LocalFileSettingsProvider>, which stores configuration data to the local file system.</span></span> <span data-ttu-id="2153d-104">不過，您可以建立另一個儲存機制，藉由衍生自抽象<xref:System.Configuration.SettingsProvider>類別。</span><span class="sxs-lookup"><span data-stu-id="2153d-104">However, you can create alternate storage mechanisms by deriving from the abstract <xref:System.Configuration.SettingsProvider> class.</span></span> <span data-ttu-id="2153d-105">包裝函式類別所使用的提供者由裝飾的包裝函式類別<xref:System.Configuration.SettingsProviderAttribute>。</span><span class="sxs-lookup"><span data-stu-id="2153d-105">The provider that a wrapper class uses is determined by decorating the wrapper class with the <xref:System.Configuration.SettingsProviderAttribute>.</span></span> <span data-ttu-id="2153d-106">如果這個屬性未提供，預設值， <xref:System.Configuration.LocalFileSettingsProvider>，會使用。</span><span class="sxs-lookup"><span data-stu-id="2153d-106">If this attribute is not provided, the default, <xref:System.Configuration.LocalFileSettingsProvider>, is used.</span></span>  
  
 <span data-ttu-id="2153d-107">當您建立自訂的設定提供者，最小值時，您必須提供這個類別的三個方法的實作： <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>，<xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>和<xref:System.Configuration.SettingsProvider.ApplicationName%2A>。</span><span class="sxs-lookup"><span data-stu-id="2153d-107">When you create a custom settings provider, at minimum, you must provide implementations for the three methods of this class: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> and <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.</span></span>  
  
 <span data-ttu-id="2153d-108">用戶端應用程式，您可以加入更多的標準化的功能的自訂提供者也實作<xref:System.Configuration.IApplicationSettingsProvider>介面。</span><span class="sxs-lookup"><span data-stu-id="2153d-108">For client applications, you can add more standardized functionality to a custom provider by also implementing the <xref:System.Configuration.IApplicationSettingsProvider> interface.</span></span> <span data-ttu-id="2153d-109">這個介面會反映方法中找到<xref:System.Configuration.ApplicationSettingsBase>類別，主要是讓 版本管理支援。</span><span class="sxs-lookup"><span data-stu-id="2153d-109">This interface mirrors methods found in the <xref:System.Configuration.ApplicationSettingsBase> class, which mainly enables versioning support.</span></span>  
  
 <span data-ttu-id="2153d-110">一般而言，您應該設計為單一執行個體，以避免儲存體資源爭用的設定提供者。</span><span class="sxs-lookup"><span data-stu-id="2153d-110">Typically, you should design settings providers to be single-instanced to avoid storage resource contention.</span></span> <span data-ttu-id="2153d-111">提供者也應該是安全執行緒，因為它們可以同時呼叫從單一應用程式網域中的多個包裝函式執行個體或不同網域中的多個應用程式。</span><span class="sxs-lookup"><span data-stu-id="2153d-111">Providers should also be thread-safe because they can be called simultaneously from multiple wrapper instances in a single application domain or from multiple applications in different domains.</span></span>  
  
 <span data-ttu-id="2153d-112">最小值，設定提供者必須辨識三個屬性 —<xref:System.Configuration.ApplicationScopedSettingAttribute>， <xref:System.Configuration.UserScopedSettingAttribute>，和<xref:System.Configuration.DefaultSettingValueAttribute>。</span><span class="sxs-lookup"><span data-stu-id="2153d-112">At minimum, a settings provider must recognize three attributes—<xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>, and <xref:System.Configuration.DefaultSettingValueAttribute>.</span></span> <span data-ttu-id="2153d-113">可以套用至應用程式設定屬性的完整清單，請參閱[應用程式設定屬性](~/docs/framework/winforms/advanced/application-settings-attributes.md)。</span><span class="sxs-lookup"><span data-stu-id="2153d-113">For a full listing of attributes that can be applied to application settings, see [Application Settings Attributes](~/docs/framework/winforms/advanced/application-settings-attributes.md).</span></span> <span data-ttu-id="2153d-114">自訂設定提供者應該解決屬性套用至設定屬性，以下列方式：</span><span class="sxs-lookup"><span data-stu-id="2153d-114">A custom setting provider should resolve attributes applied to settings properties in the following manner:</span></span>  
  
1.  <span data-ttu-id="2153d-115">如果提供者可以滿足屬性所隱含的要求，顯然它應如此做。</span><span class="sxs-lookup"><span data-stu-id="2153d-115">If the provider can fulfill the request implied by the attribute, obviously it should do so.</span></span>  
  
2.  <span data-ttu-id="2153d-116">如果提供者無法滿足要求，它應該以無訊息模式忽略它。</span><span class="sxs-lookup"><span data-stu-id="2153d-116">If the provider cannot fulfill the request, it should ignore it silently.</span></span>  
  
3.  <span data-ttu-id="2153d-117">如果兩個或多個屬性衝突。例如，正在裝飾與這兩個屬性<xref:System.Configuration.ApplicationScopedSettingAttribute>和<xref:System.Configuration.UserScopedSettingAttribute>; 提供者應該擲回<xref:System.Configuration.ConfigurationException>。</span><span class="sxs-lookup"><span data-stu-id="2153d-117">If two or more properties conflict; for example, a property being decorated with both <xref:System.Configuration.ApplicationScopedSettingAttribute> and <xref:System.Configuration.UserScopedSettingAttribute>; the provider should throw a <xref:System.Configuration.ConfigurationException>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ConfigurationException" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2153d-118">初始化 <see cref="T:System.Configuration.SettingsProvider" /> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="2153d-118">Initializes an instance of the <see cref="T:System.Configuration.SettingsProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2153d-119">這是這個預設受保護建構函式的這個抽象類別。</span><span class="sxs-lookup"><span data-stu-id="2153d-119">This is this default protected constructor for this abstract class.</span></span> <span data-ttu-id="2153d-120">在衍生的自訂設定提供者不需要提供明確的建構函式，因為<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>方法通常會執行所有的初始化。</span><span class="sxs-lookup"><span data-stu-id="2153d-120">Derived custom settings providers are not required to provide an explicit constructor because the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method typically performs all initialization.</span></span>  
  
 <span data-ttu-id="2153d-121">用戶端程式碼通常未直接執行個體化設定提供者。相反地，您可以使用下列程序來尋找特定的設定屬性的設定提供者：</span><span class="sxs-lookup"><span data-stu-id="2153d-121">Client code typically does not directly instantiate a settings provider; instead, you use the following procedure to find a settings provider for a particular settings property:</span></span>  
  
1.  <span data-ttu-id="2153d-122">呼叫<xref:System.ComponentModel.Component.GetService%2A>方法在目前<xref:System.ComponentModel.Component>或<xref:System.ComponentModel.ISite>傳回參考目前<xref:System.Configuration.ISettingsProviderService>。</span><span class="sxs-lookup"><span data-stu-id="2153d-122">Call the <xref:System.ComponentModel.Component.GetService%2A> method on the current <xref:System.ComponentModel.Component> or <xref:System.ComponentModel.ISite> to return a reference to the current <xref:System.Configuration.ISettingsProviderService>.</span></span>  
  
2.  <span data-ttu-id="2153d-123">呼叫<xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A>方法<xref:System.Configuration.ISettingsProviderService>傳回設定提供者的第一個步驟中所擷取。</span><span class="sxs-lookup"><span data-stu-id="2153d-123">Call the <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> method of the <xref:System.Configuration.ISettingsProviderService> retrieved in the first step to return the settings provider.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2153d-124">取得或設定目前正在執行之應用程式的名稱。</span><span class="sxs-lookup"><span data-stu-id="2153d-124">Gets or sets the name of the currently running application.</span></span></summary>
        <value><span data-ttu-id="2153d-125">A <see cref="T:System.String" /> ，其中包含應用程式的簡短的名稱，不包含完整路徑或副檔名，例如， <c>SimpleAppSettings</c>。</span><span class="sxs-lookup"><span data-stu-id="2153d-125">A <see cref="T:System.String" /> that contains the application's shortened name, which does not contain a full path or extension, for example, <c>SimpleAppSettings</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2153d-126"><xref:System.Configuration.SettingsProvider.ApplicationName%2A>和<xref:System.Configuration.Provider.ProviderBase.Name%2A>屬性有助於釐清同樣的具名的設定不同的應用程式的屬性。</span><span class="sxs-lookup"><span data-stu-id="2153d-126">The <xref:System.Configuration.SettingsProvider.ApplicationName%2A> and <xref:System.Configuration.Provider.ProviderBase.Name%2A> properties help to disambiguate similarly named setting properties in different applications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPropertyValues (context As SettingsContext, collection As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="2153d-127"><see cref="T:System.Configuration.SettingsContext" />，描述目前應用程式的使用方式。</span><span class="sxs-lookup"><span data-stu-id="2153d-127">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application use.</span></span></param>
        <param name="collection"><span data-ttu-id="2153d-128"><see cref="T:System.Configuration.SettingsPropertyCollection" />，包含要擷取其值的設定屬性群組。</span><span class="sxs-lookup"><span data-stu-id="2153d-128">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</span></span></param>
        <summary><span data-ttu-id="2153d-129">傳回指定之應用程式執行個體和設定屬性群組的設定屬性值集合。</span><span class="sxs-lookup"><span data-stu-id="2153d-129">Returns the collection of settings property values for the specified application instance and settings property group.</span></span></summary>
        <returns><span data-ttu-id="2153d-130"><see cref="T:System.Configuration.SettingsPropertyValueCollection" />，包含指定設定屬性群組的值。</span><span class="sxs-lookup"><span data-stu-id="2153d-130">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> containing the values for the specified settings property group.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2153d-131"><xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>方法必須實作以處理特殊的設定、 標記與那些<xref:System.Configuration.SpecialSettingAttribute>，以及協調應用程式和使用者設定。</span><span class="sxs-lookup"><span data-stu-id="2153d-131">The <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> method must be implemented to handle special settings, those marked with <xref:System.Configuration.SpecialSettingAttribute>, as well as reconcile application and user settings.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetPropertyValues (context As SettingsContext, collection As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="2153d-132"><see cref="T:System.Configuration.SettingsContext" />，描述目前應用程式的使用方式。</span><span class="sxs-lookup"><span data-stu-id="2153d-132">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span></span></param>
        <param name="collection"><span data-ttu-id="2153d-133"><see cref="T:System.Configuration.SettingsPropertyValueCollection" />，表示要設定的屬性設定群組。</span><span class="sxs-lookup"><span data-stu-id="2153d-133">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> representing the group of property settings to set.</span></span></param>
        <summary><span data-ttu-id="2153d-134">設定指定屬性設定群組的值。</span><span class="sxs-lookup"><span data-stu-id="2153d-134">Sets the values of the specified group of property settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2153d-135"><xref:System.Configuration.ApplicationSettingsBase> 包含<xref:System.Configuration.ApplicationSettingsBase.Save%2A>方法，呼叫以保存所有其設定屬性的值。</span><span class="sxs-lookup"><span data-stu-id="2153d-135"><xref:System.Configuration.ApplicationSettingsBase> contains the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method, which is called to persist the values of all of its settings properties.</span></span> <span data-ttu-id="2153d-136">此方法透過所有的設定會列舉其設定屬性和呼叫相關聯的提供者<xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>每個方法<xref:System.Configuration.SettingsProvider>執行實際的序列化作業。</span><span class="sxs-lookup"><span data-stu-id="2153d-136">This method enumerates through all the settings providers associated with its settings properties, and calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method for each <xref:System.Configuration.SettingsProvider> to perform the actual serialization operation.</span></span>  
  
 <span data-ttu-id="2153d-137"><xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>方法應該實作的安全性考量事項：</span><span class="sxs-lookup"><span data-stu-id="2153d-137">The <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method should be implemented with security in mind:</span></span>  
  
-   <span data-ttu-id="2153d-138">只有完全受信任的程式碼應允許更新應用程式設定。</span><span class="sxs-lookup"><span data-stu-id="2153d-138">Only fully trusted code should be allowed to update application settings.</span></span> <span data-ttu-id="2153d-139">更新使用者應用程式設定，應該允許部分信任的程式碼。</span><span class="sxs-lookup"><span data-stu-id="2153d-139">Partially trusted code should be allowed to update only user application settings.</span></span> <span data-ttu-id="2153d-140">不受信任的程式碼通常不允許更新應用程式設定。</span><span class="sxs-lookup"><span data-stu-id="2153d-140">Untrusted code is not typically allowed to update application settings.</span></span>  
  
-   <span data-ttu-id="2153d-141">使用量配額應視為防衛資源攻擊由部分信任的應用程式。</span><span class="sxs-lookup"><span data-stu-id="2153d-141">Usage quotas should be considered to guard against resource attacks by partially trusted applications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
  </Members>
</Type>