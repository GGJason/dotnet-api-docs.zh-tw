<Type Name="UriSection" FullName="System.Configuration.UriSection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54e8fc849ad3578ee35a97dc37b72c70c6dddcb5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30379412" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UriSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UriSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.UriSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UriSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriSection sealed : System::Configuration::ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>代表組態檔內的 URI 區段。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現有<xref:System.Uri?displayProperty=nameWithType>類別已經擴充成支援國際資源識別項 (IRI) 和國際化網域名稱。 目前的使用者不會看到從.NET Framework 2.0 行為的任何變更，除非它們特別啟用 IRI 和 IDN。 這可確保應用程式與舊版 .NET framework 相容。  
  
 IRI 和 IDN 組態設定可以使用擷取<xref:System.Configuration.UriSection>類別。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.UriSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Configuration.UriSection" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現有<xref:System.Uri?displayProperty=nameWithType>類別已經擴充成支援國際資源識別項 (IRI) 和國際化網域名稱。 目前的使用者不會看到從.NET Framework 2.0 行為的任何變更，除非它們特別啟用 IRI 和 IDN。 這可確保應用程式與舊版 .NET framework 相容。  
  
 IRI 和 IDN 組態設定可以使用擷取<xref:System.Configuration.UriSection>類別。  
  
 如需有關 IRI 支援的詳細資訊，請參閱 < 備註 > 一節<xref:System.Uri?displayProperty=nameWithType>類別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Idn">
      <MemberSignature Language="C#" Value="public System.Configuration.IdnElement Idn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.IdnElement Idn" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.Idn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Idn As IdnElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::IdnElement ^ Idn { System::Configuration::IdnElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("idn")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.IdnElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Configuration.IdnElement" /> 物件，包含 <see cref="T:System.Uri" /> 類別中之 International Domain Name (IDN) 處理的組態設定。</summary>
        <value>在 <see cref="T:System.Uri" /> 類別中處理的 International Domain Name (IDN) 組態設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現有<xref:System.Uri?displayProperty=nameWithType>類別已經擴充成支援國際資源識別項 (IRI) 和國際化網域名稱。 目前的使用者不會看到從.NET Framework 2.0 行為的任何變更，除非它們特別啟用 IRI 和 IDN。 這可確保應用程式與舊版 .NET framework 相容。  
  
 IRI 和 IDN 組態設定可以使用擷取<xref:System.Configuration.UriSection>類別。 <xref:System.Configuration.UriSection.Idn%2A>屬性會傳回 IDN 的組態設定中的處理<xref:System.Uri?displayProperty=nameWithType>類別。  
  
 必須啟用 IRI 處理才能進行 IDN 處理。 如果停用 IRI 處理，則 IDN 處理會設定為預設設定，此種情況下，.NET Framework 2.0 行為會用於相容性，但不使用 IDN 名稱。  
  
 國際化網域名稱 (IDN) 屬性只會控制 IDN 處理。 根據預設，會執行所有其他 IRI 處理 （例如字元正規化）。  
  
 組態設定<xref:System.Configuration.IdnElement>會讀取一次當第一個<xref:System.Uri?displayProperty=nameWithType>類別建構。 該時間之後的組態設定變更會被忽略。  
  
 如需有關 IRI 支援的詳細資訊，請參閱 < 備註 > 一節<xref:System.Uri?displayProperty=nameWithType>類別。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.IdnElement" />
        <altmember cref="T:System.Configuration.IriParsingElement" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="IriParsing">
      <MemberSignature Language="C#" Value="public System.Configuration.IriParsingElement IriParsing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.IriParsingElement IriParsing" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.IriParsing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IriParsing As IriParsingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::IriParsingElement ^ IriParsing { System::Configuration::IriParsingElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("iriParsing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.IriParsingElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Configuration.IriParsingElement" /> 物件，包含 <see cref="T:System.Uri" /> 類別中之 International Resource Identifiers (IRI) 剖析的組態設定。</summary>
        <value>在 <see cref="T:System.Uri" /> 類別中剖析的 International Resource Identifier (IRI) 組態設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現有<xref:System.Uri?displayProperty=nameWithType>類別已經擴充成支援國際資源識別項 (IRI) 和國際化網域名稱。 目前的使用者不會看到從.NET Framework 2.0 行為的任何變更，除非它們特別啟用 IRI 和 IDN。 這可確保應用程式與舊版 .NET framework 相容。  
  
 IRI 和 IDN 組態設定可以使用擷取<xref:System.Configuration.UriSection>類別。 <xref:System.Configuration.UriSection.IriParsing%2A>屬性會傳回 IRI 剖析中的組態設定<xref:System.Uri?displayProperty=nameWithType>類別。  
  
 必須啟用 IRI 處理才能進行 IDN 處理。 如果停用 IRI 處理，則 IDN 處理會設定為預設設定，此種情況下，.NET Framework 2.0 行為會用於相容性，但不使用 IDN 名稱。  
  
 國際化網域名稱 (IDN) 屬性只會控制 IDN 處理。 根據預設，會執行所有其他 IRI 處理 （例如字元正規化）。  
  
 組態設定<xref:System.Configuration.IriParsingElement>會讀取一次當第一個<xref:System.Uri?displayProperty=nameWithType>類別建構。 該時間之後的組態設定變更會被忽略。  
  
 如需有關 IRI 支援的詳細資訊，請參閱 < 備註 > 一節<xref:System.Uri?displayProperty=nameWithType>類別。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.IdnElement" />
        <altmember cref="T:System.Configuration.IriParsingElement" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemeSettings">
      <MemberSignature Language="C#" Value="public System.Configuration.SchemeSettingElementCollection SchemeSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SchemeSettingElementCollection SchemeSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.SchemeSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemeSettings As SchemeSettingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::SchemeSettingElementCollection ^ SchemeSettings { System::Configuration::SchemeSettingElementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("schemeSettings")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SchemeSettingElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 物件，此物件包含在 <see cref="T:System.Uri" /> 類別中剖析之結構描述的組態設定。</summary>
        <value>在 <see cref="T:System.Uri" /> 類別中剖析之結構描述的組態設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.UriSection.SchemeSettings%2A>屬性不是泛型。 只有 genericUriParserOptions ="DontUnescapePathDotsAndSlashes 」 組態設定支援 HTTP 和 HTTPS 配置。 會忽略所有其他設定。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SchemeSettingElement" />
        <altmember cref="T:System.Configuration.SchemeSettingElementCollection" />
        <altmember cref="T:System.GenericUriParserOptions" />
      </Docs>
    </Member>
  </Members>
</Type>