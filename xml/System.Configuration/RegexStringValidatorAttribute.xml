<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RegexStringValidatorAttribute.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5571b7832709c52003c5a7a68530758814c362630.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">571b7832709c52003c5a7a68530758814c362630</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Configuration.RegexStringValidatorAttribute">
          <source>Declaratively instructs the .NET Framework to perform string validation on a configuration property using a regular expression.</source>
          <target state="translated">以宣告方式指示 .NET Framework 在組態屬性上利用規則運算式執行字串驗證。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Configuration.RegexStringValidatorAttribute">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.RegexStringValidatorAttribute">
          <source>You use the <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidatorAttribute&gt;</ph> to decorate a configuration property, which will instruct the .NET Framework to validate the property using the <ph id="ph2">&lt;xref:System.Configuration.RegexStringValidator&gt;</ph> and pass to it the value of the decorating parameters.</source>
          <target state="translated">您使用<ph id="ph1">&lt;xref:System.Configuration.RegexStringValidatorAttribute&gt;</ph>裝飾組態屬性，會指示要驗證屬性使用的.NET Framework<ph id="ph2">&lt;xref:System.Configuration.RegexStringValidator&gt;</ph>和裝飾參數的值傳遞給它。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.RegexStringValidatorAttribute">
          <source>You may apply <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidatorAttribute&gt;</ph> objects to property types only.</source>
          <target state="translated">您可以套用<ph id="ph1">&lt;xref:System.Configuration.RegexStringValidatorAttribute&gt;</ph>只有屬性類型的物件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.RegexStringValidatorAttribute">
          <source>The following example shows how to decorate the properties of a custom <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> object using the <ph id="ph2">&lt;xref:System.Configuration.RegexStringValidatorAttribute&gt;</ph> object.</source>
          <target state="translated">下列範例示範如何在自訂屬性來裝飾<ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph>物件使用<ph id="ph2">&lt;xref:System.Configuration.RegexStringValidatorAttribute&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)">
          <source>The string to use for regular expression validation.</source>
          <target state="translated">用來驗證規則運算式的字串。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.RegexStringValidatorAttribute" /&gt;</ph> object.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Configuration.RegexStringValidatorAttribute" /&gt;</ph> 物件的新執行個體。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)">
          <source>The <ph id="ph1">`regex`</ph> parameter contains the regular expression pattern that a string must match before it can be assigned to the decorated configuration-element property.</source>
          <target state="translated"><ph id="ph1">`regex`</ph>參數包含字串必須符合規則運算式模式給裝飾的組態項目屬性之前。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)">
          <source>You use this constructor in the attributed model to ensure that the string value assigned to the related property contains only the allowed characters.</source>
          <target state="translated">屬性化的模型中所使用這個建構函式以確保指派給相關屬性的字串值包含允許的字元。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidatorAttribute.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">下列範例將示範如何使用這個 <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidatorAttribute.%23ctor%2A&gt;</ph> 建構函式。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Configuration.RegexStringValidatorAttribute.Regex">
          <source>Gets the string used to perform regular-expression validation.</source>
          <target state="translated">取得用來執行規則運算式驗證的字串。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.RegexStringValidatorAttribute.Regex">
          <source>The string containing the regular expression used to filter the string assigned to the decorated configuration-element property.</source>
          <target state="translated">包含規則運算式的字串，此規則運算式是用來篩選指派給裝飾的組態項目屬性的字串。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.RegexStringValidatorAttribute.Regex">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidatorAttribute.Regex%2A&gt;</ph> property.</source>
          <target state="translated">下列範例將示範如何使用 <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidatorAttribute.Regex%2A&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance">
          <source>Gets an instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.RegexStringValidator" /&gt;</ph> class.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Configuration.RegexStringValidator" /&gt;</ph> 類別的執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance">
          <source>The <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationValidatorBase" /&gt;</ph> validator instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationValidatorBase" /&gt;</ph> 驗證程式執行個體。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance">
          <source>You use the <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance%2A&gt;</ph> property to perform string validation by calling its <ph id="ph2">&lt;xref:System.Configuration.StringValidator.Validate%2A&gt;</ph> method.</source>
          <target state="translated">您使用<ph id="ph1">&lt;xref:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance%2A&gt;</ph>屬性來執行字串驗證藉由呼叫其<ph id="ph2">&lt;xref:System.Configuration.StringValidator.Validate%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範如何使用 <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance%2A&gt;</ph> 方法。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>