<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IPersistComponentSettings.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac536cdd14653e8d239fcffab82331de0392616795f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36cdd14653e8d239fcffab82331de0392616795f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Configuration.IPersistComponentSettings">
          <source>Defines standard functionality for controls or libraries that store and retrieve application settings.</source>
          <target state="translated">定義用來儲存並擷取應用程式設定之控制項或程式庫的標準功能。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IPersistComponentSettings">
          <source>Typically, you can add application settings support to an application by creating a settings wrapper class, which is derived from <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>, and then add special properties to this class.</source>
          <target state="translated">通常，將應用程式設定的支援加入應用程式所建立的設定包裝函式類別，衍生自<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>，然後將特殊屬性加入至這個類別。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IPersistComponentSettings">
          <source>However, this approach does not sufficiently encapsulate application settings for a control so that its container is shielded from the details.</source>
          <target state="translated">不過，這種方法不會完全封裝控制項的應用程式設定值，讓其容器已防護的詳細資料。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IPersistComponentSettings">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings&gt;</ph> interface provides an application with a standard interface for communicating application settings state change requests to a control, component, or library module.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings&gt;</ph>介面提供標準的介面，來進行通訊的應用程式設定狀態控制項、 元件或程式庫模組的變更要求的應用程式。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IPersistComponentSettings">
          <source>Design-time tools also depend on this interface to properly manage controls and components.</source>
          <target state="translated">設計階段工具也會取決於這個介面來適當地管理控制項和元件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
          <source>Reads the control's application settings into their corresponding properties and updates the control's state.</source>
          <target state="translated">將控制項的應用程式設定讀入其對應的屬性，並更新控制項的狀態。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
          <source>In general, the <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A&gt;</ph> method performs two essential operations:</source>
          <target state="translated">一般情況下，<ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A&gt;</ph>方法會執行兩項基本作業：</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
          <source>It causes each application settings instance contained by the control to refresh the values of its application settings properties, typically by calling their <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> methods.</source>
          <target state="translated">它會導致重新整理其應用程式設定屬性值，通常透過呼叫控制項所包含的每個應用程式設定執行個體及其<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
          <source>As required, it updates those general properties that depend on these reloaded settings properties.</source>
          <target state="translated">必要時，它會更新相依於這些重新載入設定屬性的一般屬性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
          <source>For example, if the settings class contained a <ph id="ph1">`location`</ph> settings property, <ph id="ph2">&lt;xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A&gt;</ph> should ensure that the control's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property is updated to reflect this reloaded setting.</source>
          <target state="translated">例如，如果設定類別包含<ph id="ph1">`location`</ph>設定屬性<ph id="ph2">&lt;xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A&gt;</ph>應該確保控制項的<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>屬性會更新以反映此重新載入的設定。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings">
          <source>Resets the control's application settings properties to their default values.</source>
          <target state="translated">將控制項的應用程式設定屬性重設為其預設值。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings">
          <source>The implementation of the <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A&gt;</ph> method typically calls the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> method on each instance of an application settings class it contains.</source>
          <target state="translated">實作<ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A&gt;</ph>方法通常會呼叫<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph>上每個執行個體，其中包含應用程式設定類別的方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
          <source>Persists the control's application settings properties.</source>
          <target state="translated">保存控制項的應用程式設定屬性。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A&gt;</ph> method writes the values of the control's application settings properties to the associated data store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A&gt;</ph>方法寫入相關聯的資料存放區中的控制項的應用程式設定屬性的值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
          <source>The data store and serialization technique the method uses is determined by the settings provider associated with each settings class through the <ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>.</source>
          <target state="translated">此方法會使用的資料存放區和序列化技術取決於與透過每個設定類別相關聯的設定提供者<ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
          <source>You can override the choice of the settings provider by using the <ph id="ph1">&lt;xref:System.Configuration.ISettingsProviderService&gt;</ph> interface.</source>
          <target state="translated">您可以使用覆寫的設定提供者選擇<ph id="ph1">&lt;xref:System.Configuration.ISettingsProviderService&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
          <source>If the <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the control should call <ph id="ph3">&lt;xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A&gt;</ph> in its own <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method so that the control's configuration data is stored automatically before the application ends.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph>屬性是<ph id="ph2">`true`</ph>，控制項應該呼叫<ph id="ph3">&lt;xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A&gt;</ph>在它自己<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph>方法以便在應用程式結束前自動儲存控制項的設定資料。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Configuration.IPersistComponentSettings.SaveSettings">
          <source>Gets or sets a value indicating whether the control should automatically persist its application settings properties.</source>
          <target state="translated">取得或設定值，指出控制項是否應自動保存其應用程式設定屬性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SaveSettings">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control should automatically persist its state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控制項應該自動保存其狀態，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SaveSettings">
          <source>If a control contains configuration data, it will typically persist this data in response to an explicit call to the <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A&gt;</ph> method or sometimes implicitly when the control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method is invoked.</source>
          <target state="translated">如果控制項包含組態資料，它通常會保存回應的明確呼叫這項資料<ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A&gt;</ph>方法或有時隱含當控制項的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph>叫用方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SaveSettings">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph> property determines whether a control automatically persists its configuration data when it is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph>屬性會決定在處置是否控制項會自動保存其組態資料。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SaveSettings">
          <source>The default value of <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph> depends on the implementation of the control.</source>
          <target state="translated">預設值<ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph>控制項的實作而定。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SaveSettings">
          <source>The documentation for the control should indicate whether it uses application settings, what data is persisted, and what the default value of the <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph> property is.</source>
          <target state="translated">控制項的文件應該會指出是否要使用應用程式設定、 哪些資料會保留，以及預設的值為何<ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SaveSettings">
          <source>The following code example shows the proper way for a control to check the value of the <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph> property before it attempts to automatically persist its configuration data.</source>
          <target state="translated">下列程式碼範例顯示正確的方式來檢查值的控制項<ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A&gt;</ph>之前它會嘗試自動保存其組態資料的屬性。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>Gets or sets the value of the application settings key for the current instance of the control.</source>
          <target state="translated">取得或設定目前控制項執行個體的應用程式設定索引鍵值。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the settings key for the current instance of the control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，包含目前控制項執行個體的設定索引鍵。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>Use the <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A&gt;</ph> property to disambiguate groups of application settings properties when there are multiple instances of the same wrapper class.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A&gt;</ph>屬性以釐清應用程式設定屬性群組有相同的包裝函式類別的多個執行個體時。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>For example, if a control contains an associated wrapper class, then placing multiple instances of the same control in the same application will typically result in multiple instances of the wrapper class.</source>
          <target state="translated">例如，如果控制項包含相關聯的包裝函式類別，然後將多個執行個體相同的控制項放置在相同的應用程式通常會包裝函式類別的多個執行個體。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>A settings key is required only when the configuration data differs on a per-instance basis; for example, the location of dynamically positioned controls.</source>
          <target state="translated">只有在針對每個執行個體; 不同的組態資料時，則需要設定金鑰例如，動態地定位控制項的位置。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>The following general rules apply to the use of <ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A&gt;</ph>:</source>
          <target state="translated">下列一般規則套用至使用<ph id="ph1">&lt;xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>A control, like any class, may contain zero or more application settings classes, derived from <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.</source>
          <target state="translated">控制項，如同任何類別，可能包含零或多個應用程式設定類別，衍生自<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>Each settings class contains its own <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType&gt;</ph> property, which helps disambiguate multiple instances of that class.</source>
          <target state="translated">每個設定類別包含其專屬<ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType&gt;</ph>屬性，可協助釐清該類別的多個執行個體。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>A control should separate its per-instance data and its shared data into different settings classes.</source>
          <target state="translated">控制項應該將其每個執行個體資料和共用的資料分成不同的設定類別。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>For a control with any per-instance configuration data, the <ph id="ph1">`get`</ph> accessor of the <ph id="ph2">&lt;xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A&gt;</ph> property should default to the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph> of the control.</source>
          <target state="translated">與任何個別執行個體的設定資料，控制項<ph id="ph1">`get`</ph>的存取子<ph id="ph2">&lt;xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A&gt;</ph>屬性應該預設為<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Name%2A&gt;</ph>的控制項。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>In most cases the name of the control will be unique within an application.</source>
          <target state="translated">在大部分情況下名稱中將是控制項的唯一的應用程式。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>If the control contains only shared configuration data, <ph id="ph1">`get`</ph> should default to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">如果控制項包含共用組態資料<ph id="ph1">`get`</ph>應該預設為<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>The <ph id="ph1">`set`</ph> accessor for this property should be implemented to distinguish between settings classes containing per-instance and shared configuration data.</source>
          <target state="translated"><ph id="ph1">`set`</ph>應該實作這個屬性存取子，以區別包含每個執行個體和共用的設定資料的設定類別。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>For each settings class containing per-instance data, <ph id="ph1">`set`</ph> should just pass-through to the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType&gt;</ph> property of the settings class.</source>
          <target state="translated">針對每個包含每個執行個體資料的設定類別<ph id="ph1">`set`</ph>應該直接傳遞至<ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType&gt;</ph>設定類別的屬性。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.IPersistComponentSettings.SettingsKey">
          <source>For settings classes containing shared data, <ph id="ph1">`set`</ph> should perform no action for that settings class.</source>
          <target state="translated">針對包含共用的資料，設定類別<ph id="ph1">`set`</ph>應該對該設定的類別執行任何動作。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>