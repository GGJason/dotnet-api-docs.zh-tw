<Type Name="IPersistComponentSettings" FullName="System.Configuration.IPersistComponentSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36cdd14653e8d239fcffab82331de0392616795f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30379342" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPersistComponentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistComponentSettings" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IPersistComponentSettings" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersistComponentSettings" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersistComponentSettings" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7e6c4-101">定義用來儲存並擷取應用程式設定之控制項或程式庫的標準功能。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7e6c4-101">Defines standard functionality for controls or libraries that store and retrieve application settings.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e6c4-102">通常，將應用程式設定的支援加入應用程式所建立的設定包裝函式類別，衍生自<xref:System.Configuration.ApplicationSettingsBase>，然後將特殊屬性加入至這個類別。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-102">Typically, you can add application settings support to an application by creating a settings wrapper class, which is derived from <xref:System.Configuration.ApplicationSettingsBase>, and then add special properties to this class.</span></span> <span data-ttu-id="7e6c4-103">不過，這種方法不會完全封裝控制項的應用程式設定值，讓其容器已防護的詳細資料。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-103">However, this approach does not sufficiently encapsulate application settings for a control so that its container is shielded from the details.</span></span> <span data-ttu-id="7e6c4-104"><xref:System.Configuration.IPersistComponentSettings>介面提供標準的介面，來進行通訊的應用程式設定狀態控制項、 元件或程式庫模組的變更要求的應用程式。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-104">The <xref:System.Configuration.IPersistComponentSettings> interface provides an application with a standard interface for communicating application settings state change requests to a control, component, or library module.</span></span> <span data-ttu-id="7e6c4-105">設計階段工具也會取決於這個介面來適當地管理控制項和元件。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-105">Design-time tools also depend on this interface to properly manage controls and components.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
  </Docs>
  <Members>
    <Member MemberName="LoadComponentSettings">
      <MemberSignature Language="C#" Value="public void LoadComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadComponentSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7e6c4-106">將控制項的應用程式設定讀入其對應的屬性，並更新控制項的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6c4-106">Reads the control's application settings into their corresponding properties and updates the control's state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e6c4-107">一般情況下，<xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A>方法會執行兩項基本作業：</span><span class="sxs-lookup"><span data-stu-id="7e6c4-107">In general, the <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> method performs two essential operations:</span></span>  
  
-   <span data-ttu-id="7e6c4-108">它會導致重新整理其應用程式設定屬性值，通常透過呼叫控制項所包含的每個應用程式設定執行個體及其<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-108">It causes each application settings instance contained by the control to refresh the values of its application settings properties, typically by calling their <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods.</span></span>  
  
-   <span data-ttu-id="7e6c4-109">必要時，它會更新相依於這些重新載入設定屬性的一般屬性。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-109">As required, it updates those general properties that depend on these reloaded settings properties.</span></span> <span data-ttu-id="7e6c4-110">例如，如果設定類別包含`location`設定屬性<xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A>應該確保控制項的<xref:System.Windows.Forms.Control.Location%2A>屬性會更新以反映此重新載入的設定。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-110">For example, if the settings class contained a `location` settings property, <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> should ensure that the control's <xref:System.Windows.Forms.Control.Location%2A> property is updated to reflect this reloaded setting.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="ResetComponentSettings">
      <MemberSignature Language="C#" Value="public void ResetComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetComponentSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7e6c4-111">將控制項的應用程式設定屬性重設為其預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6c4-111">Resets the control's application settings properties to their default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e6c4-112">實作<xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A>方法通常會呼叫<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>上每個執行個體，其中包含應用程式設定類別的方法。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-112">The implementation of the <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> method typically calls the <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method on each instance of an application settings class it contains.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="SaveComponentSettings">
      <MemberSignature Language="C#" Value="public void SaveComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveComponentSettings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7e6c4-113">保存控制項的應用程式設定屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6c4-113">Persists the control's application settings properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e6c4-114"><xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>方法寫入相關聯的資料存放區中的控制項的應用程式設定屬性的值。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-114">The <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> method writes the values of the control's application settings properties to the associated data store.</span></span> <span data-ttu-id="7e6c4-115">此方法會使用的資料存放區和序列化技術取決於與透過每個設定類別相關聯的設定提供者<xref:System.Configuration.SettingsProviderAttribute>。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-115">The data store and serialization technique the method uses is determined by the settings provider associated with each settings class through the <xref:System.Configuration.SettingsProviderAttribute>.</span></span> <span data-ttu-id="7e6c4-116">您可以使用覆寫的設定提供者選擇<xref:System.Configuration.ISettingsProviderService>介面。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-116">You can override the choice of the settings provider by using the <xref:System.Configuration.ISettingsProviderService> interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7e6c4-117">如果<xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>屬性是`true`，控制項應該呼叫<xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>在它自己<xref:System.Windows.Forms.Control.Dispose%2A>方法以便在應用程式結束前自動儲存控制項的設定資料。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-117">If the <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property is `true`, the control should call <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> in its own <xref:System.Windows.Forms.Control.Dispose%2A> method so that the control's configuration data is stored automatically before the application ends.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public bool SaveSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e6c4-118">取得或設定值，指出控制項是否應自動保存其應用程式設定屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6c4-118">Gets or sets a value indicating whether the control should automatically persist its application settings properties.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e6c4-119">如果控制項應該自動保存其狀態，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6c4-119">
              <see langword="true" /> if the control should automatically persist its state; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e6c4-120">如果控制項包含組態資料，它通常會保存回應的明確呼叫這項資料<xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>方法或有時隱含當控制項的<xref:System.Windows.Forms.Control.Dispose%2A>叫用方法。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-120">If a control contains configuration data, it will typically persist this data in response to an explicit call to the <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> method or sometimes implicitly when the control's <xref:System.Windows.Forms.Control.Dispose%2A> method is invoked.</span></span> <span data-ttu-id="7e6c4-121"><xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>屬性會決定在處置是否控制項會自動保存其組態資料。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-121">The <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property determines whether a control automatically persists its configuration data when it is disposed.</span></span>  
  
 <span data-ttu-id="7e6c4-122">預設值<xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>控制項的實作而定。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-122">The default value of <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> depends on the implementation of the control.</span></span> <span data-ttu-id="7e6c4-123">控制項的文件應該會指出是否要使用應用程式設定、 哪些資料會保留，以及預設的值為何<xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-123">The documentation for the control should indicate whether it uses application settings, what data is persisted, and what the default value of the <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property is.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e6c4-124">下列程式碼範例顯示正確的方式來檢查值的控制項<xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>之前它會嘗試自動保存其組態資料的屬性。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-124">The following code example shows the proper way for a control to check the value of the <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property before it attempts to automatically persist its configuration data.</span></span>  
  
 `protected override void Dispose( bool disposing ) {`  
  
 `if(disposing) {`  
  
 `try {`  
  
 `if (SaveSettings) {`  
  
 `SaveComponentSettings();`  
  
 `}`  
  
 `}`  
  
 `finally {`  
  
 `//...`  
  
 `}`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.SettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e6c4-125">取得或設定目前控制項執行個體的應用程式設定索引鍵值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6c4-125">Gets or sets the value of the application settings key for the current instance of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e6c4-126">
            <see cref="T:System.String" />，包含目前控制項執行個體的設定索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e6c4-126">A <see cref="T:System.String" /> containing the settings key for the current instance of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e6c4-127">使用<xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>屬性以釐清應用程式設定屬性群組有相同的包裝函式類別的多個執行個體時。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-127">Use the <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> property to disambiguate groups of application settings properties when there are multiple instances of the same wrapper class.</span></span> <span data-ttu-id="7e6c4-128">例如，如果控制項包含相關聯的包裝函式類別，然後將多個執行個體相同的控制項放置在相同的應用程式通常會包裝函式類別的多個執行個體。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-128">For example, if a control contains an associated wrapper class, then placing multiple instances of the same control in the same application will typically result in multiple instances of the wrapper class.</span></span> <span data-ttu-id="7e6c4-129">只有在針對每個執行個體; 不同的組態資料時，則需要設定金鑰例如，動態地定位控制項的位置。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-129">A settings key is required only when the configuration data differs on a per-instance basis; for example, the location of dynamically positioned controls.</span></span>  
  
 <span data-ttu-id="7e6c4-130">下列一般規則套用至使用<xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:</span><span class="sxs-lookup"><span data-stu-id="7e6c4-130">The following general rules apply to the use of <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:</span></span>  
  
-   <span data-ttu-id="7e6c4-131">控制項，如同任何類別，可能包含零或多個應用程式設定類別，衍生自<xref:System.Configuration.ApplicationSettingsBase>。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-131">A control, like any class, may contain zero or more application settings classes, derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="7e6c4-132">每個設定類別包含其專屬<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType>屬性，可協助釐清該類別的多個執行個體。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-132">Each settings class contains its own <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> property, which helps disambiguate multiple instances of that class.</span></span>  
  
-   <span data-ttu-id="7e6c4-133">控制項應該將其每個執行個體資料和共用的資料分成不同的設定類別。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-133">A control should separate its per-instance data and its shared data into different settings classes.</span></span>  
  
-   <span data-ttu-id="7e6c4-134">與任何個別執行個體的設定資料，控制項`get`的存取子<xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>屬性應該預設為<xref:System.Windows.Forms.Control.Name%2A>的控制項。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-134">For a control with any per-instance configuration data, the `get` accessor of the <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> property should default to the <xref:System.Windows.Forms.Control.Name%2A> of the control.</span></span> <span data-ttu-id="7e6c4-135">在大部分情況下名稱中將是控制項的唯一的應用程式。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-135">In most cases the name of the control will be unique within an application.</span></span> <span data-ttu-id="7e6c4-136">如果控制項包含共用組態資料`get`應該預設為`null`。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-136">If the control contains only shared configuration data, `get` should default to `null`.</span></span>  
  
-   <span data-ttu-id="7e6c4-137">`set`應該實作這個屬性存取子，以區別包含每個執行個體和共用的設定資料的設定類別。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-137">The `set` accessor for this property should be implemented to distinguish between settings classes containing per-instance and shared configuration data.</span></span> <span data-ttu-id="7e6c4-138">針對每個包含每個執行個體資料的設定類別`set`應該直接傳遞至<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType>設定類別的屬性。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-138">For each settings class containing per-instance data, `set` should just pass-through to the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> property of the settings class.</span></span> <span data-ttu-id="7e6c4-139">針對包含共用的資料，設定類別`set`應該對該設定的類別執行任何動作。</span><span class="sxs-lookup"><span data-stu-id="7e6c4-139">For settings classes containing shared data, `set` should perform no action for that settings class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
  </Members>
</Type>