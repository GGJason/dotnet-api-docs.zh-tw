<Type Name="PrintJobInfoCollection" FullName="System.Printing.PrintJobInfoCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="560d9896f430a6aa8b3b5069583dd1aae9f9adc2" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57936377" /></Metadata><TypeSignature Language="C#" Value="public class PrintJobInfoCollection : System.Printing.PrintSystemObjects, IDisposable, System.Collections.Generic.IEnumerable&lt;System.Printing.PrintSystemJobInfo&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintJobInfoCollection extends System.Printing.PrintSystemObjects implements class System.Collections.Generic.IEnumerable`1&lt;class System.Printing.PrintSystemJobInfo&gt;, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PrintJobInfoCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintJobInfoCollection&#xA;Inherits PrintSystemObjects&#xA;Implements IDisposable, IEnumerable(Of PrintSystemJobInfo)" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintJobInfoCollection : System::Printing::PrintSystemObjects, IDisposable, System::Collections::Generic::IEnumerable&lt;System::Printing::PrintSystemJobInfo ^&gt;" />
  <TypeSignature Language="F#" Value="type PrintJobInfoCollection = class&#xA;    inherit PrintSystemObjects&#xA;    interface seq&lt;PrintSystemJobInfo&gt;&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Printing.PrintSystemObjects</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Printing.PrintSystemJobInfo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6f782-101">表示一個或多個 <see cref="T:System.Printing.PrintSystemJobInfo" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="6f782-101">Represents one or more <see cref="T:System.Printing.PrintSystemJobInfo" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="6f782-102">類別內<xref:System.Printing>命名空間不支援使用 Windows 服務或 ASP.NET 應用程式或服務中。</span><span class="sxs-lookup"><span data-stu-id="6f782-102">Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service.</span></span> <span data-ttu-id="6f782-103">嘗試使用這些類別內其中一個應用程式類型可能會產生非預期的問題，例如會受到影響服務效能和執行階段例外狀況。</span><span class="sxs-lookup"><span data-stu-id="6f782-103">Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</span></span>  
  
 <span data-ttu-id="6f782-104">如果您想要列印 Windows Form 應用程式，請參閱<xref:System.Drawing.Printing>命名空間。</span><span class="sxs-lookup"><span data-stu-id="6f782-104">If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintJobInfoCollection (System.Printing.PrintQueue printQueue, string[] propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintQueue printQueue, string[] propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.#ctor(System.Printing.PrintQueue,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintJobInfoCollection(System::Printing::PrintQueue ^ printQueue, cli::array &lt;System::String ^&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintJobInfoCollection : System.Printing.PrintQueue * string[] -&gt; System.Printing.PrintJobInfoCollection" Usage="new System.Printing.PrintJobInfoCollection (printQueue, propertyFilter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="printQueue" Type="System.Printing.PrintQueue" />
        <Parameter Name="propertyFilter" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="printQueue"><span data-ttu-id="6f782-105">其列印工作將會填入集合中的列印佇列。</span><span class="sxs-lookup"><span data-stu-id="6f782-105">The print queue whose print jobs will populate the collection.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="6f782-106"><see cref="T:System.Printing.PrintSystemJobInfo" /> 物件的屬性子集清單。</span><span class="sxs-lookup"><span data-stu-id="6f782-106">A list of a subset of the properties of a <see cref="T:System.Printing.PrintSystemJobInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="6f782-107">初始化 <see cref="T:System.Printing.PrintJobInfoCollection" /> 類別的新執行個體，這個類別包含在指定之 <see cref="T:System.Printing.PrintSystemJobInfo" /> 中每個工作的 <see cref="T:System.Printing.PrintQueue" /> 物件，且只會初始化特定屬性篩選條件中列出之屬性內的物件。</span><span class="sxs-lookup"><span data-stu-id="6f782-107">Initializes a new instance of the <see cref="T:System.Printing.PrintJobInfoCollection" /> class that contains the <see cref="T:System.Printing.PrintSystemJobInfo" /> objects for every job that is in the specified <see cref="T:System.Printing.PrintQueue" /> and that initializes those objects only in the properties that are listed in the specified property filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f782-108"><xref:System.Printing.PrintSystemJobInfo>集合中的物件只會初始化會列在這些屬性`propertyFilter`。</span><span class="sxs-lookup"><span data-stu-id="6f782-108">The <xref:System.Printing.PrintSystemJobInfo> objects in the collection are initialized only in those properties that are listed in the `propertyFilter`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Printing.PrintSystemJobInfo printObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Printing.PrintSystemJobInfo printObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.Add(System.Printing.PrintSystemJobInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (printObject As PrintSystemJobInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Printing::PrintSystemJobInfo ^ printObject);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Printing.PrintSystemJobInfo -&gt; unit" Usage="printJobInfoCollection.Add printObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printObject" Type="System.Printing.PrintSystemJobInfo" />
      </Parameters>
      <Docs>
        <param name="printObject"><span data-ttu-id="6f782-109">加入的物件。</span><span class="sxs-lookup"><span data-stu-id="6f782-109">The object that is added.</span></span></param>
        <summary><span data-ttu-id="6f782-110">將成員加入至 <see cref="T:System.Printing.PrintJobInfoCollection" />。</span><span class="sxs-lookup"><span data-stu-id="6f782-110">Adds a member to the <see cref="T:System.Printing.PrintJobInfoCollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool );" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool ) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose ( As Boolean)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool );" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="protected override void Dispose (bool A_0);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool A_0) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.Dispose(System.Boolean)" FrameworkAlternate="netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (A_0 As Boolean)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool A_0);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="printJobInfoCollection.Dispose A_0" FrameworkAlternate="netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.Dispose(System.Boolean)" FrameworkAlternate="netframework-3.0" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="printJobInfoCollection.Dispose " FrameworkAlternate="netframework-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="6f782-111"><see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="6f782-111"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <param name="A_0"><span data-ttu-id="6f782-112"><see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="6f782-112"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="6f782-113">釋放 <see cref="T:System.Printing.PrintJobInfoCollection" /> 正在使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="6f782-113">Releases the unmanaged resources that are being used by the <see cref="T:System.Printing.PrintJobInfoCollection" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f782-114">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6f782-114">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="6f782-115">`Dispose()` 叫用受保護`Dispose(Boolean)`方法未命名的布林參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="6f782-115">`Dispose()` invokes the protected `Dispose(Boolean)` method with the unnamed Boolean parameter set to `true`.</span></span> <span data-ttu-id="6f782-116"><xref:System.Object.Finalize%2A> 叫用`Dispose`參數設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="6f782-116"><xref:System.Object.Finalize%2A> invokes `Dispose` with the parameter set to `false`.</span></span>  
  
 <span data-ttu-id="6f782-117">布林值參數，則為 true 時，這個方法會釋放任何 managed 物件所持有的所有資源這個<xref:System.Printing.PrintJobInfoCollection>參考。</span><span class="sxs-lookup"><span data-stu-id="6f782-117">When the Boolean parameter is true, this method releases all resources held by any managed objects that this <xref:System.Printing.PrintJobInfoCollection> references.</span></span> <span data-ttu-id="6f782-118">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="6f782-118">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="6f782-119">
            <see langword="Dispose" /> 可以被其他物件呼叫多次。</span><span class="sxs-lookup"><span data-stu-id="6f782-119">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="6f782-120">覆寫 <see langword="Dispose(Boolean)" /> 時，請小心不要參考到先前已在對 <see langword="Dispose" /> 的早期呼叫中被處置 (Dispose) 的物件。</span><span class="sxs-lookup"><span data-stu-id="6f782-120">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="6f782-121">如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 &lt;&lt;c2&gt; [ 實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="6f782-121">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="6f782-122">如需詳細資訊<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱[清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)並[覆寫 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="6f782-122">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerator&lt;System.Printing.PrintSystemJobInfo&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Printing.PrintSystemJobInfo&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator(Of PrintSystemJobInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Printing::PrintSystemJobInfo ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Printing.PrintSystemJobInfo&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Printing.PrintSystemJobInfo&gt;" Usage="printJobInfoCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Printing.PrintSystemJobInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6f782-123">取得實作泛型 <see cref="T:System.Collections.IEnumerator" />、使用 <see cref="T:System.Printing.PrintSystemJobInfo" /> 關閉之介面的物件。</span><span class="sxs-lookup"><span data-stu-id="6f782-123">Gets an object that implements the generic <see cref="T:System.Collections.IEnumerator" /> interface that is closed with <see cref="T:System.Printing.PrintSystemJobInfo" />.</span></span></summary>
        <returns><span data-ttu-id="6f782-124">實作泛型 <see cref="T:System.Collections.IEnumerator" /> 介面且可逐一查看 <see cref="T:System.Printing.PrintSystemJobInfo" /> 所包含之 <see cref="T:System.Printing.PrintJobInfoCollection" /> 物件的物件。</span><span class="sxs-lookup"><span data-stu-id="6f782-124">An object that implements the generic <see cref="T:System.Collections.IEnumerator" /> interface and that can iterate through the <see cref="T:System.Printing.PrintSystemJobInfo" /> objects that the <see cref="T:System.Printing.PrintJobInfoCollection" /> contains.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f782-125">我們建議您改用`foreach`陳述式來逐一查看集合的所有成員。</span><span class="sxs-lookup"><span data-stu-id="6f782-125">We recommend that you use the `foreach` statement to iterate through all members of the collection.</span></span> <span data-ttu-id="6f782-126">使用<xref:System.Printing.PrintJobInfoCollection.GetEnumerator%2A>只有當您需要自訂反覆項目，例如藉由略過所有其他成員。</span><span class="sxs-lookup"><span data-stu-id="6f782-126">Use <xref:System.Printing.PrintJobInfoCollection.GetEnumerator%2A> only when you need to customize iteration, such as by skipping every other member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNonGenericEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetNonGenericEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetNonGenericEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.GetNonGenericEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNonGenericEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetNonGenericEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member GetNonGenericEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetNonGenericEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="printJobInfoCollection.GetNonGenericEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6f782-127">取得實作非泛型 <see cref="T:System.Collections.IEnumerator" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="6f782-127">Gets an object that implements the non-generic <see cref="T:System.Collections.IEnumerator" /> interface.</span></span></summary>
        <returns><span data-ttu-id="6f782-128">實作非泛型 <see cref="T:System.Collections.IEnumerator" /> 介面且可逐一查看 <see cref="T:System.Printing.PrintSystemJobInfo" /> 所包含之 <see cref="T:System.Printing.PrintJobInfoCollection" /> 物件的物件。</span><span class="sxs-lookup"><span data-stu-id="6f782-128">An object that implements the non-generic <see cref="T:System.Collections.IEnumerator" /> interface and that can iterate through the <see cref="T:System.Printing.PrintSystemJobInfo" /> objects that the <see cref="T:System.Printing.PrintJobInfoCollection" /> contains.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f782-129">我們建議您改用`foreach`陳述式來逐一查看集合的所有成員。</span><span class="sxs-lookup"><span data-stu-id="6f782-129">We recommend that you use the `foreach` statement to iterate through all members of the collection.</span></span> <span data-ttu-id="6f782-130">只有當您需要自訂的反覆項目，例如，藉由略過所有其他成員時，請使用您自己的列舉值物件。</span><span class="sxs-lookup"><span data-stu-id="6f782-130">Use your own enumerator object only when you need to customize iteration, such as by skipping every other member.</span></span>  
  
 <span data-ttu-id="6f782-131">如果您需要您自己的列舉值，我們建議您使用泛型型別安全函式<xref:System.Printing.PrintJobInfoCollection.GetEnumerator%2A>而不是<xref:System.Printing.PrintJobInfoCollection.GetNonGenericEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="6f782-131">If you need your own enumerator, we recommend that you use the generic, type-safe function <xref:System.Printing.PrintJobInfoCollection.GetEnumerator%2A> instead of <xref:System.Printing.PrintJobInfoCollection.GetNonGenericEnumerator%2A>.</span></span> <span data-ttu-id="6f782-132"><xref:System.Printing.PrintJobInfoCollection.GetNonGenericEnumerator%2A>是公用的才能滿足需求的<xref:System.Collections.IEnumerable>介面，藉由將這個集合。</span><span class="sxs-lookup"><span data-stu-id="6f782-132">The <xref:System.Printing.PrintJobInfoCollection.GetNonGenericEnumerator%2A> is public only to fulfill the requirements of the <xref:System.Collections.IEnumerable> interface, which is implemented by this collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintJobInfoCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>