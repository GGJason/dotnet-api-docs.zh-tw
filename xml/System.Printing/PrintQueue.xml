<Type Name="PrintQueue" FullName="System.Printing.PrintQueue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c6b3d9e0a8384145837ce652f7618e46663ce003" /><Meta Name="ms.sourcegitcommit" Value="662f143e6be46d519ff8ab4451d543d91e651478" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/18/2018" /><Meta Name="ms.locfileid" Value="53565453" /></Metadata><TypeSignature Language="C#" Value="public class PrintQueue : System.Printing.PrintSystemObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PrintQueue extends System.Printing.PrintSystemObject" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PrintQueue" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintQueue&#xA;Inherits PrintSystemObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintQueue : System::Printing::PrintSystemObject" />
  <TypeSignature Language="F#" Value="type PrintQueue = class&#xA;    inherit PrintSystemObject" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Printing.PrintSystemObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="17f64-101">管理印表機和列印工作。</span><span class="sxs-lookup"><span data-stu-id="17f64-101">Manages printers and print jobs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-102">某些屬性<xref:System.Printing.PrintQueue>物件代表電腦上執行之列印佇列公用程式的特性，但其他項目代表功能或在印表機本身的狀態。</span><span class="sxs-lookup"><span data-stu-id="17f64-102">Some properties of the <xref:System.Printing.PrintQueue> object represent characteristics of the print queue utility that runs on the computer, but others represent features or states of the printer itself.</span></span> <span data-ttu-id="17f64-103">例如，<xref:System.Printing.PrintQueue.NumberOfJobs%2A>特點就是的列印佇列，但<xref:System.Printing.PrintQueue.Location%2A>是印表機的屬性。</span><span class="sxs-lookup"><span data-stu-id="17f64-103">For example, <xref:System.Printing.PrintQueue.NumberOfJobs%2A> is a characteristic of the print queue, but <xref:System.Printing.PrintQueue.Location%2A> is a property of the printer.</span></span> <span data-ttu-id="17f64-104">許多印表機，例如它是否需要使用者注意，屬性需要傳遞，透過的方式<xref:System.Printing.PrintQueue.Refresh%2A>方法，從印表機到<xref:System.Printing.PrintQueue>物件。</span><span class="sxs-lookup"><span data-stu-id="17f64-104">Many of the properties of the printer, such as whether it needs user attention, need to be passed, by means of the <xref:System.Printing.PrintQueue.Refresh%2A> method, from the printer itself to the <xref:System.Printing.PrintQueue> object.</span></span> <span data-ttu-id="17f64-105">這應該對應的屬性之前 (<xref:System.Printing.PrintQueue.NeedUserIntervention%2A>) 會讀取您的程式。</span><span class="sxs-lookup"><span data-stu-id="17f64-105">This should be done before the corresponding property (<xref:System.Printing.PrintQueue.NeedUserIntervention%2A>) is read by your program.</span></span> <span data-ttu-id="17f64-106">同樣地，當您的程式變更的一或多個屬性的值時，才<xref:System.Printing.PrintQueue>物件，變更必須在電腦上撰寫實際的列印佇列公用程式。</span><span class="sxs-lookup"><span data-stu-id="17f64-106">Similarly, when your program changes the values of one or more properties of a <xref:System.Printing.PrintQueue> object, the change must be written to the actual print queue utility on the computer.</span></span> <span data-ttu-id="17f64-107">執行這項作業<xref:System.Printing.PrintQueue.Commit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="17f64-107">Do this with the <xref:System.Printing.PrintQueue.Commit%2A> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="17f64-108">類別內<xref:System.Printing>命名空間不支援使用 Windows 服務或 ASP.NET 應用程式或服務中。</span><span class="sxs-lookup"><span data-stu-id="17f64-108">Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service.</span></span> <span data-ttu-id="17f64-109">嘗試使用這些類別內其中一個應用程式類型可能會產生非預期的問題，例如會受到影響服務效能和執行階段例外狀況。</span><span class="sxs-lookup"><span data-stu-id="17f64-109">Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</span></span>  
  
 <span data-ttu-id="17f64-110">如果您想要列印 Windows Form 應用程式，請參閱<xref:System.Drawing.Printing>命名空間。</span><span class="sxs-lookup"><span data-stu-id="17f64-110">If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Printing.PrintServer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17f64-111">初始化 <see cref="T:System.Printing.PrintQueue" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="17f64-111">Initializes a new instance of the <see cref="T:System.Printing.PrintQueue" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="17f64-112">裝載 (Host) 列印佇列的列印伺服器。</span><span class="sxs-lookup"><span data-stu-id="17f64-112">The print server to host the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="17f64-113">列印佇列的名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-113">The name of the print queue.</span></span></param>
        <summary><span data-ttu-id="17f64-114">使用指定的 <see cref="T:System.Printing.PrintQueue" /> 和佇列名稱，初始化 <see cref="T:System.Printing.PrintServer" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="17f64-114">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" /> and queue name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-115"><xref:System.Printing.PrintQueue> 建構函式不包含<xref:System.Printing.PrintSystemDesiredAccess>參數預設為<xref:System.Printing.PrintSystemDesiredAccess.UsePrinter>存取。</span><span class="sxs-lookup"><span data-stu-id="17f64-115"><xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter default to <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> access.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, int printSchemaVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, int32 printSchemaVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, int printSchemaVersion);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * int -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, printSchemaVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="printSchemaVersion" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="17f64-116">裝載列印佇列的列印伺服器。</span><span class="sxs-lookup"><span data-stu-id="17f64-116">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="17f64-117">列印佇列的名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-117">The name of the print queue.</span></span></param>
        <param name="printSchemaVersion"><span data-ttu-id="17f64-118">要使用的列印結構描述版本。</span><span class="sxs-lookup"><span data-stu-id="17f64-118">The version of the Print Schema to use.</span></span></param>
        <summary><span data-ttu-id="17f64-119">使用指定的 <see cref="T:System.Printing.PrintQueue" />、佇列名稱和列印結構描述版本，初始化 <see cref="T:System.Printing.PrintServer" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="17f64-119">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and print schema version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-120"><xref:System.Printing.PrintQueue> 建構函式不包含<xref:System.Printing.PrintSystemDesiredAccess>參數預設為<xref:System.Printing.PrintSystemDesiredAccess.UsePrinter>存取。</span><span class="sxs-lookup"><span data-stu-id="17f64-120"><xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter  default to <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> access.</span></span>  
  
 <span data-ttu-id="17f64-121">[列印結構描述](https://go.microsoft.com/fwlink/?LinkId=186397)隨著 Windows Vista 發行的版本是"1"。</span><span class="sxs-lookup"><span data-stu-id="17f64-121">The [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) version released with Windows Vista is "1".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintQueueIndexedProperty[] propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, valuetype System.Printing.PrintQueueIndexedProperty[] propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, cli::array &lt;System::Printing::PrintQueueIndexedProperty&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * System.Printing.PrintQueueIndexedProperty[] -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, propertyFilter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="propertyFilter" Type="System.Printing.PrintQueueIndexedProperty[]" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="17f64-122">裝載列印佇列的列印伺服器。</span><span class="sxs-lookup"><span data-stu-id="17f64-122">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="17f64-123">列印佇列的名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-123">The name of the print queue.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="17f64-124"><see cref="T:System.Printing.PrintQueueIndexedProperty" /> 值的陣列，這個陣列會指定要初始化的屬性值。</span><span class="sxs-lookup"><span data-stu-id="17f64-124">An array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values that specifies the property values to initialize.</span></span></param>
        <summary><span data-ttu-id="17f64-125">使用指定的 <see cref="T:System.Printing.PrintQueue" />、佇列名稱和要初始化的 <see cref="T:System.Printing.PrintServer" /> 值陣列，初始化 <see cref="T:System.Printing.PrintQueueIndexedProperty" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="17f64-125">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values to initialize.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-126"><xref:System.Printing.PrintQueue> 建構函式不包含<xref:System.Printing.PrintSystemDesiredAccess>參數預設為<xref:System.Printing.PrintSystemDesiredAccess.UsePrinter>存取。</span><span class="sxs-lookup"><span data-stu-id="17f64-126"><xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter default to <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> access.</span></span>  
  
 <span data-ttu-id="17f64-127">建構函式使用`propertyFilter`參數可以改善效能。</span><span class="sxs-lookup"><span data-stu-id="17f64-127">The use of a constructor with the `propertyFilter` parameter improves performance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * System.Printing.PrintSystemDesiredAccess -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, desiredAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="17f64-128">裝載列印佇列的列印伺服器。</span><span class="sxs-lookup"><span data-stu-id="17f64-128">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="17f64-129">列印佇列的名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-129">The name of the print queue.</span></span></param>
        <param name="desiredAccess"><span data-ttu-id="17f64-130">其中一個 <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 值，其會指定程式需要的列印佇列存取類型。</span><span class="sxs-lookup"><span data-stu-id="17f64-130">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" /> values that specifies the type of access to the print queue that your program needs.</span></span></param>
        <summary><span data-ttu-id="17f64-131">使用指定的 <see cref="T:System.Printing.PrintQueue" />、佇列名稱和想要的存取權限，初始化 <see cref="T:System.Printing.PrintServer" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="17f64-131">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and desired access.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="17f64-132"><paramref name="desiredAccess" /> 是只可以套用至 <see cref="T:System.Printing.PrintServer" /> 物件的值，而不是 <see cref="T:System.Printing.PrintQueue" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="17f64-132"><paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object.</span></span> <span data-ttu-id="17f64-133">例如，<see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-133">For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, cli::array &lt;System::String ^&gt; ^ propertyFilter);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * string[] -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, propertyFilter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="propertyFilter" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="17f64-134">裝載列印佇列的列印伺服器。</span><span class="sxs-lookup"><span data-stu-id="17f64-134">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="17f64-135">列印佇列的名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-135">The name of the print queue.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="17f64-136">要初始化的屬性名稱陣列。</span><span class="sxs-lookup"><span data-stu-id="17f64-136">An array of the names of properties to initialize.</span></span></param>
        <summary><span data-ttu-id="17f64-137">使用指定的 <see cref="T:System.Printing.PrintQueue" />、佇列名稱和要初始化的屬性名稱陣列，初始化 <see cref="T:System.Printing.PrintServer" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="17f64-137">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, and array of property names to initialize.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-138"><xref:System.Printing.PrintQueue> 建構函式不包含<xref:System.Printing.PrintSystemDesiredAccess>參數預設為<xref:System.Printing.PrintSystemDesiredAccess.UsePrinter>存取。</span><span class="sxs-lookup"><span data-stu-id="17f64-138"><xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter default to <xref:System.Printing.PrintSystemDesiredAccess.UsePrinter> access.</span></span>  
  
 <span data-ttu-id="17f64-139">建構函式使用`propertyFilter`參數可以改善效能。</span><span class="sxs-lookup"><span data-stu-id="17f64-139">The use of a constructor with the `propertyFilter` parameter improves performance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, int printSchemaVersion, System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, int32 printSchemaVersion, valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, int printSchemaVersion, System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * int * System.Printing.PrintSystemDesiredAccess -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, printSchemaVersion, desiredAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="printSchemaVersion" Type="System.Int32" />
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="17f64-140">裝載列印佇列的列印伺服器。</span><span class="sxs-lookup"><span data-stu-id="17f64-140">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="17f64-141">列印佇列的名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-141">The name of the print queue.</span></span></param>
        <param name="printSchemaVersion"><span data-ttu-id="17f64-142">要使用的列印結構描述版本。</span><span class="sxs-lookup"><span data-stu-id="17f64-142">The version of the Print Schema to use.</span></span></param>
        <param name="desiredAccess"><span data-ttu-id="17f64-143">其中一個 <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 值，其會指定程式需要的列印佇列存取類型。</span><span class="sxs-lookup"><span data-stu-id="17f64-143">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" /> values that specifies the type of access to the print queue that your program needs.</span></span></param>
        <summary><span data-ttu-id="17f64-144">使用指定的 <see cref="T:System.Printing.PrintQueue" />、佇列名稱、列印結構描述版本和想要的存取權限，初始化 <see cref="T:System.Printing.PrintServer" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="17f64-144">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, print schema version, and desired access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-145">[列印結構描述](https://go.microsoft.com/fwlink/?LinkId=186397)隨著 Windows Vista 發行的版本是"1"。</span><span class="sxs-lookup"><span data-stu-id="17f64-145">The [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) version released with Windows Vista is "1".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="17f64-146"><paramref name="desiredAccess" /> 是只可以套用至 <see cref="T:System.Printing.PrintServer" /> 物件的值，而不是 <see cref="T:System.Printing.PrintQueue" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="17f64-146"><paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object.</span></span> <span data-ttu-id="17f64-147">例如，<see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-147">For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintQueueIndexedProperty[] propertyFilter, System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, valuetype System.Printing.PrintQueueIndexedProperty[] propertyFilter, valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, cli::array &lt;System::Printing::PrintQueueIndexedProperty&gt; ^ propertyFilter, System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * System.Printing.PrintQueueIndexedProperty[] * System.Printing.PrintSystemDesiredAccess -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, propertyFilter, desiredAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="propertyFilter" Type="System.Printing.PrintQueueIndexedProperty[]" />
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="17f64-148">裝載列印佇列的列印伺服器。</span><span class="sxs-lookup"><span data-stu-id="17f64-148">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="17f64-149">列印佇列的名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-149">The name of the print queue.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="17f64-150"><see cref="T:System.Printing.PrintQueueIndexedProperty" /> 值陣列，這個陣列會指定要初始化的屬性。</span><span class="sxs-lookup"><span data-stu-id="17f64-150">An array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values that specifies the properties to initialize.</span></span></param>
        <param name="desiredAccess"><span data-ttu-id="17f64-151">其中一個 <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 值，其會指定程式需要的列印佇列存取類型。</span><span class="sxs-lookup"><span data-stu-id="17f64-151">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" /> values that specifies the type of access to the print queue that your program needs.</span></span></param>
        <summary><span data-ttu-id="17f64-152">使用指定的 <see cref="T:System.Printing.PrintQueue" />、佇列名稱、要初始化的 <see cref="T:System.Printing.PrintServer" /> 值陣列和想要的存取權限，初始化 <see cref="T:System.Printing.PrintQueueIndexedProperty" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="17f64-152">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class with the specified <see cref="T:System.Printing.PrintServer" />, queue name, array of <see cref="T:System.Printing.PrintQueueIndexedProperty" /> values to initialize, and desired access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-153">建構函式使用`propertyFilter`參數可以改善效能。</span><span class="sxs-lookup"><span data-stu-id="17f64-153">The use of a constructor with the `propertyFilter` parameter improves performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="17f64-154"><paramref name="desiredAccess" /> 是只可以套用至 <see cref="T:System.Printing.PrintServer" /> 物件的值，而不是 <see cref="T:System.Printing.PrintQueue" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="17f64-154"><paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object.</span></span> <span data-ttu-id="17f64-155">例如，<see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-155">For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter, System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter, valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintQueue(System::Printing::PrintServer ^ printServer, System::String ^ printQueueName, cli::array &lt;System::String ^&gt; ^ propertyFilter, System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="F#" Value="new System.Printing.PrintQueue : System.Printing.PrintServer * string * string[] * System.Printing.PrintSystemDesiredAccess -&gt; System.Printing.PrintQueue" Usage="new System.Printing.PrintQueue (printServer, printQueueName, propertyFilter, desiredAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="printServer" Type="System.Printing.PrintServer" />
        <Parameter Name="printQueueName" Type="System.String" />
        <Parameter Name="propertyFilter" Type="System.String[]" />
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="printServer"><span data-ttu-id="17f64-156">裝載列印佇列的列印伺服器。</span><span class="sxs-lookup"><span data-stu-id="17f64-156">The print server that hosts the print queue.</span></span></param>
        <param name="printQueueName"><span data-ttu-id="17f64-157">列印佇列的名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-157">The name of the print queue.</span></span></param>
        <param name="propertyFilter"><span data-ttu-id="17f64-158">要初始化的屬性名稱陣列。</span><span class="sxs-lookup"><span data-stu-id="17f64-158">An array of the names of properties to initialize.</span></span></param>
        <param name="desiredAccess"><span data-ttu-id="17f64-159">其中一個 <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 值，其會指定程式需要的列印佇列存取類型。</span><span class="sxs-lookup"><span data-stu-id="17f64-159">One of the <see cref="T:System.Printing.PrintSystemDesiredAccess" /> values that specifies the type of access to the print queue that your program needs.</span></span></param>
        <summary><span data-ttu-id="17f64-160">使用指定的 <see cref="T:System.Printing.PrintQueue" />、佇列名稱、屬性篩選常式 (Filter) 和想要的存取權限，初始化 <see cref="T:System.Printing.PrintServer" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="17f64-160">Initializes a new instance of <see cref="T:System.Printing.PrintQueue" /> class using the specified <see cref="T:System.Printing.PrintServer" />, queue name, property filter, and desired access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-161">建構函式使用`propertyFilter`參數可以改善效能。</span><span class="sxs-lookup"><span data-stu-id="17f64-161">The use of a constructor with the `propertyFilter` parameter improves performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="17f64-162"><paramref name="desiredAccess" /> 是只可以套用至 <see cref="T:System.Printing.PrintServer" /> 物件的值，而不是 <see cref="T:System.Printing.PrintQueue" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="17f64-162"><paramref name="desiredAccess" /> is a value that can be applied only to a <see cref="T:System.Printing.PrintServer" /> object, not a <see cref="T:System.Printing.PrintQueue" /> object.</span></span> <span data-ttu-id="17f64-163">例如，<see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-163">For example, <see cref="F:System.Printing.PrintSystemDesiredAccess.AdministrateServer" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddJob">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17f64-164">將新的列印工作插入佇列。</span><span class="sxs-lookup"><span data-stu-id="17f64-164">Inserts a new print job into the queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-165">除非佇列已暫停或處於錯誤狀態，工作會到達佇列頂端時，這是列印函式。</span><span class="sxs-lookup"><span data-stu-id="17f64-165">Unless the queue is paused or in an error state, the job prints when it reaches the top of the queue, so this is a printing function.</span></span>  
  
 <span data-ttu-id="17f64-166">列印中的其他方式[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]包括<xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType>方法，可用來包含或不含開啟的對話方塊中和許多<xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>並<xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>方法<xref:System.Windows.Xps.XpsDocumentWriter>。</span><span class="sxs-lookup"><span data-stu-id="17f64-166">Other ways to print in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob" />
      <MemberSignature Language="VB.NET" Value="Public Function AddJob () As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob();" />
      <MemberSignature Language="F#" Value="member this.AddJob : unit -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17f64-167">在佇列中插入新 (以一般方式命名) 的列印工作，其內容是 <see cref="T:System.Byte" /> 陣列。</span><span class="sxs-lookup"><span data-stu-id="17f64-167">Inserts a new (generically named) print job, whose content is a <see cref="T:System.Byte" /> array, into the queue.</span></span></summary>
        <returns><span data-ttu-id="17f64-168"><see cref="T:System.Printing.PrintSystemJobInfo" />，表示列印工作及其狀態。</span><span class="sxs-lookup"><span data-stu-id="17f64-168">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-169">使用此方法來寫入多工緩衝處理檔案，不會自動包含的裝置特定資訊，[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)]多工緩衝處理器。</span><span class="sxs-lookup"><span data-stu-id="17f64-169">Use this method to write device specific information, to a spool file, that is not automatically included by the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] spooler.</span></span> <span data-ttu-id="17f64-170">當然，您必須知道多工緩衝處理檔案是否[!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)]或[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="17f64-170">Of course, you need to know whether the spool file is [!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)] or [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)].</span></span> <span data-ttu-id="17f64-171">如果您想要使用<xref:System.IO.Stream> [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]，您可以使用<xref:System.Printing.PrintQueueStream>類別而不是這個方法。</span><span class="sxs-lookup"><span data-stu-id="17f64-171">If you prefer to work with the <xref:System.IO.Stream> [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], you can use the <xref:System.Printing.PrintQueueStream> class instead of this method.</span></span>  
  
 <span data-ttu-id="17f64-172">之後<xref:System.Printing.PrintQueue.AddJob%2A>呼叫的方法，您必須撰寫<xref:System.Byte>陣列<xref:System.Printing.PrintSystemJobInfo.JobStream%2A>屬性<xref:System.Printing.PrintSystemJobInfo>所傳回<xref:System.Printing.PrintQueue.AddJob%2A>或建立任何列印工作。</span><span class="sxs-lookup"><span data-stu-id="17f64-172">After the <xref:System.Printing.PrintQueue.AddJob%2A> method has been called, you must write a <xref:System.Byte> array to the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> property of the <xref:System.Printing.PrintSystemJobInfo> that is returned by <xref:System.Printing.PrintQueue.AddJob%2A> or no print job is created.</span></span> <span data-ttu-id="17f64-173">這個陣列會是什麼列印如果印表機使用，而且未暫停。</span><span class="sxs-lookup"><span data-stu-id="17f64-173">This array is what prints if the printer is working and is not paused.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="17f64-174">如果<xref:System.Printing.PrintSystemJobInfo.JobStream%2A>不會關閉具有<xref:System.IO.Stream.Close%2A>所在的執行緒結束前<xref:System.Printing.PrintQueue.AddJob%2A>呼叫，則<xref:System.InvalidOperationException>時，該執行緒結束，因為多工緩衝處理器執行緒無法獲得控制，透過擲回<xref:System.IO.Stream>物件。</span><span class="sxs-lookup"><span data-stu-id="17f64-174">If the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> is not closed with <xref:System.IO.Stream.Close%2A> before the end of the thread in which <xref:System.Printing.PrintQueue.AddJob%2A> is called, then an <xref:System.InvalidOperationException> is thrown when that thread ends because the spooler thread cannot gain control over the <xref:System.IO.Stream> object.</span></span>  
  
 <span data-ttu-id="17f64-175">列印佇列中[!INCLUDE[TLA#tla_gui](~/includes/tlasharptla-gui-md.md)]，此作業具有 「 列印系統文件 」 的名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-175">In the print queue's [!INCLUDE[TLA#tla_gui](~/includes/tlasharptla-gui-md.md)], the job has the name "Print System Document".</span></span> <span data-ttu-id="17f64-176">若要為工作指定不同的名稱，使用<xref:System.Printing.PrintQueue.AddJob%28System.String%29>多載。</span><span class="sxs-lookup"><span data-stu-id="17f64-176">To give the job a different name, use the <xref:System.Printing.PrintQueue.AddJob%28System.String%29> overload.</span></span>  
  
 <span data-ttu-id="17f64-177">列印中的其他方式[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]包括<xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType>方法，可用來包含或不含開啟的對話方塊中和許多<xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>並<xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>方法<xref:System.Windows.Xps.XpsDocumentWriter>。</span><span class="sxs-lookup"><span data-stu-id="17f64-177">Other ways to print in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-178">下列範例示範如何使用<xref:System.Printing.PrintQueue.AddJob>傳送<xref:System.Byte>列印佇列的陣列。</span><span class="sxs-lookup"><span data-stu-id="17f64-178">The following example shows how to use <xref:System.Printing.PrintQueue.AddJob> to send a <xref:System.Byte> array to a print queue.</span></span> <span data-ttu-id="17f64-179">此程式碼僅適用於可以偵測及列印純文字的印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-179">This code only works with printers that can detect and print plain text.</span></span> <span data-ttu-id="17f64-180">其中部分不能。</span><span class="sxs-lookup"><span data-stu-id="17f64-180">Some of them cannot.</span></span>  
  
 [!code-csharp[WriteToSpoolFile#AddUnnamedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/WriteToSpoolFile/CSharp/Program.cs#addunnamedjob)]
 [!code-vb[WriteToSpoolFile#AddUnnamedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WriteToSpoolFile/visualbasic/program.vb#addunnamedjob)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob (string jobName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob(string jobName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddJob (jobName As String) As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob(System::String ^ jobName);" />
      <MemberSignature Language="F#" Value="member this.AddJob : string -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob jobName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="jobName"><span data-ttu-id="17f64-181">列印工作的名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-181">The name of the print job.</span></span></param>
        <summary><span data-ttu-id="17f64-182">在佇列中插入新的列印工作，其內容是 <see cref="T:System.Byte" /> 陣列。</span><span class="sxs-lookup"><span data-stu-id="17f64-182">Inserts a new print job, whose content is a <see cref="T:System.Byte" /> array, into the queue.</span></span></summary>
        <returns><span data-ttu-id="17f64-183"><see cref="T:System.Printing.PrintSystemJobInfo" />，表示列印工作及其狀態。</span><span class="sxs-lookup"><span data-stu-id="17f64-183">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-184">使用此方法來寫入多工緩衝處理檔案，不會自動包含的裝置特定資訊，[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)]多工緩衝處理器。</span><span class="sxs-lookup"><span data-stu-id="17f64-184">Use this method to write device specific information, to a spool file, that is not automatically included by the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] spooler.</span></span> <span data-ttu-id="17f64-185">當然，您必須知道多工緩衝處理檔案是否[!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)]或[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="17f64-185">Of course, you need to know whether the spool file is [!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)] or [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)].</span></span> <span data-ttu-id="17f64-186">如果您想要使用<xref:System.IO.Stream> [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]，您可以使用<xref:System.Printing.PrintQueueStream>類別而不是這個方法。</span><span class="sxs-lookup"><span data-stu-id="17f64-186">If you prefer to work with the <xref:System.IO.Stream> [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], you can use the <xref:System.Printing.PrintQueueStream> class instead of this method.</span></span>  
  
 <span data-ttu-id="17f64-187">之後<xref:System.Printing.PrintQueue.AddJob%2A>呼叫的方法，您必須撰寫<xref:System.Byte>陣列<xref:System.Printing.PrintSystemJobInfo.JobStream%2A>屬性<xref:System.Printing.PrintSystemJobInfo>所傳回<xref:System.Printing.PrintQueue.AddJob%2A>或建立任何列印工作。</span><span class="sxs-lookup"><span data-stu-id="17f64-187">After the <xref:System.Printing.PrintQueue.AddJob%2A> method has been called, you must write a <xref:System.Byte> array to the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> property of the <xref:System.Printing.PrintSystemJobInfo> that is returned by <xref:System.Printing.PrintQueue.AddJob%2A> or no print job is created.</span></span> <span data-ttu-id="17f64-188">這個陣列會是什麼列印如果印表機使用，而且未暫停。</span><span class="sxs-lookup"><span data-stu-id="17f64-188">This array is what prints if the printer is working and is not paused.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="17f64-189">如果<xref:System.Printing.PrintSystemJobInfo.JobStream%2A>不會關閉具有<xref:System.IO.Stream.Close%2A>所在的執行緒結束前<xref:System.Printing.PrintQueue.AddJob%2A>呼叫，則<xref:System.InvalidOperationException>時，該執行緒結束，因為多工緩衝處理器執行緒無法獲得控制，透過擲回<xref:System.IO.Stream>物件。</span><span class="sxs-lookup"><span data-stu-id="17f64-189">If the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> is not closed with <xref:System.IO.Stream.Close%2A> before the end of the thread in which <xref:System.Printing.PrintQueue.AddJob%2A> is called, then an <xref:System.InvalidOperationException> is thrown when that thread ends because the spooler thread cannot gain control over the <xref:System.IO.Stream> object.</span></span>  
  
 <span data-ttu-id="17f64-190">列印中的其他方式[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]包括<xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType>方法，可用來包含或不含開啟的對話方塊中和許多<xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>並<xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>方法<xref:System.Windows.Xps.XpsDocumentWriter>。</span><span class="sxs-lookup"><span data-stu-id="17f64-190">Other ways to print in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-191">下列範例示範如何使用<xref:System.Printing.PrintQueue.AddJob%28System.String%29>讀取檔案到<xref:System.Byte>陣列，並將陣列傳送至列印佇列。</span><span class="sxs-lookup"><span data-stu-id="17f64-191">The following example shows how to use <xref:System.Printing.PrintQueue.AddJob%28System.String%29> to read a file into a <xref:System.Byte> array and send the array to a print queue.</span></span> <span data-ttu-id="17f64-192">此程式碼會假設為 c： 磁碟機的根目錄中名為 test.txt 的檔案。</span><span class="sxs-lookup"><span data-stu-id="17f64-192">This code assumes that there is a file called test.txt in the root of the C: drive.</span></span> <span data-ttu-id="17f64-193">此程式碼僅適用於可以偵測及列印純文字的印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-193">This code only works with printers that can detect and print plain text.</span></span> <span data-ttu-id="17f64-194">其中部分不能。</span><span class="sxs-lookup"><span data-stu-id="17f64-194">Some of them cannot.</span></span>  
  
 [!code-csharp[WriteToSpoolFile#AddNamedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/WriteToSpoolFile/CSharp/Program.cs#addnamedjob)]
 [!code-vb[WriteToSpoolFile#AddNamedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WriteToSpoolFile/visualbasic/program.vb#addnamedjob)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob (string jobName, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob(string jobName, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob(System.String,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob(System::String ^ jobName, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="member this.AddJob : string * System.Printing.PrintTicket -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob (jobName, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="jobName"><span data-ttu-id="17f64-195">要列印之文件的路徑和名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-195">The path and name of the document that is being printed.</span></span></param>
        <param name="printTicket"><span data-ttu-id="17f64-196">列印工作的設定。</span><span class="sxs-lookup"><span data-stu-id="17f64-196">The settings of the print job.</span></span></param>
        <summary><span data-ttu-id="17f64-197">將 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] 文件的新列印工作插入佇列，而且為其指定名稱和設定。</span><span class="sxs-lookup"><span data-stu-id="17f64-197">Inserts a new print job for an [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] Document into the queue, and gives it the specified name and settings.</span></span></summary>
        <returns><span data-ttu-id="17f64-198"><see cref="T:System.Printing.PrintSystemJobInfo" />，表示列印工作及其狀態。</span><span class="sxs-lookup"><span data-stu-id="17f64-198">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-199">如需詳細資訊，請參閱<xref:System.Printing.PrintQueue.AddJob%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="17f64-199">For more information, see <xref:System.Printing.PrintQueue.AddJob%28System.String%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob (string jobName, string documentPath, bool fastCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob(string jobName, string documentPath, bool fastCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddJob (jobName As String, documentPath As String, fastCopy As Boolean) As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob(System::String ^ jobName, System::String ^ documentPath, bool fastCopy);" />
      <MemberSignature Language="F#" Value="member this.AddJob : string * string * bool -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob (jobName, documentPath, fastCopy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" />
        <Parameter Name="documentPath" Type="System.String" />
        <Parameter Name="fastCopy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="jobName"><span data-ttu-id="17f64-200">列印工作的名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-200">The name of the print job.</span></span></param>
        <param name="documentPath"><span data-ttu-id="17f64-201">要列印之文件的路徑和名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-201">The path and name of the document that is being printed.</span></span></param>
        <param name="fastCopy"><span data-ttu-id="17f64-202"><see langword="true" /> 表示快速進行多工緩衝處理，而無需回應每頁的進度，也無需驗證檔案是否為有效的 [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-202"><see langword="true" /> to spool quickly without page-by-page progress feedback and without validating that the file is valid [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="17f64-203">將 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] 文件的新列印工作插入佇列，為其指定名稱，並指定是否應驗證該工作。</span><span class="sxs-lookup"><span data-stu-id="17f64-203">Inserts a new print job for an [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] Document into the queue, gives it the specified name, and specifies whether or not it should be validated.</span></span></summary>
        <returns><span data-ttu-id="17f64-204"><see cref="T:System.Printing.PrintSystemJobInfo" />，表示列印工作及其狀態。</span><span class="sxs-lookup"><span data-stu-id="17f64-204">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-205">如果`fastCopy`已`true`，則必須是印表機[列印概觀](~/docs/framework/wpf/advanced/printing-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="17f64-205">If `fastCopy` is `true`, then the printer must be an [Printing Overview](~/docs/framework/wpf/advanced/printing-overview.md).</span></span> <span data-ttu-id="17f64-206">如果未列出，請<xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>方法會擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="17f64-206">If it is not, the <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> method throws an exception.</span></span>  
  
 <span data-ttu-id="17f64-207">如果`fastCopy`是`false`，則不需要使用 XPSDrv 印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-207">If `fastCopy` is `false`, then it is not necessary to use an XPSDrv printer.</span></span> <span data-ttu-id="17f64-208">[!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]加入佇列的檔案會轉換成印表機的頁面描述語言，例如 PCL 或 Postscript。</span><span class="sxs-lookup"><span data-stu-id="17f64-208">The [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] file being added to the queue is converted to the printer's page description language, such as PCL or Postscript.</span></span> <span data-ttu-id="17f64-209">不過，這種列印會呼叫[!INCLUDE[TLA#tla_com](~/includes/tlasharptla-com-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="17f64-209">However, this kind of printing makes a call to [!INCLUDE[TLA#tla_com](~/includes/tlasharptla-com-md.md)].</span></span> <span data-ttu-id="17f64-210">在呼叫[!INCLUDE[TLA2#tla_com](~/includes/tla2sharptla-com-md.md)]呼叫的執行緒需要單一執行緒 apartment (<xref:System.Threading.ApartmentState.STA>) 而不是多執行緒 apartment (<xref:System.Threading.ApartmentState.MTA>) 中的預設值[!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)]2.0 和更新版本。</span><span class="sxs-lookup"><span data-stu-id="17f64-210">The call to [!INCLUDE[TLA2#tla_com](~/includes/tla2sharptla-com-md.md)] requires that the calling thread have a single-threaded apartment (<xref:System.Threading.ApartmentState.STA>) instead of multiple-threaded apartment (<xref:System.Threading.ApartmentState.MTA>) which is the default in [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] 2.0 and later.</span></span> <span data-ttu-id="17f64-211">(如需執行緒和 apartment 狀態的詳細資訊，請參閱 < [Managed 和 Unmanaged 執行緒處理](https://msdn.microsoft.com/library/db425c20-4b2f-4433-bf96-76071c7881e5)，和<xref:System.Threading.ApartmentState>。)有兩種執行此動作：</span><span class="sxs-lookup"><span data-stu-id="17f64-211">(For more on threading and apartment states, see [Managed and Unmanaged Threading](https://msdn.microsoft.com/library/db425c20-4b2f-4433-bf96-76071c7881e5), and <xref:System.Threading.ApartmentState>.) There are two ways of doing this:</span></span>  
  
-   <span data-ttu-id="17f64-212">最簡單方式是加入<xref:System.STAThreadAttribute>(也就是 「`[System.STAThreadAttribute()]`") 正上方的應用程式的第一行`Main`方法 (通常是"`static void Main(string[] args)`")。</span><span class="sxs-lookup"><span data-stu-id="17f64-212">The simplest way is to add the <xref:System.STAThreadAttribute> (that is, "`[System.STAThreadAttribute()]`") just above the first line of the application's `Main` method (usually "`static void Main(string[] args)`").</span></span>  
  
-   <span data-ttu-id="17f64-213">如果您需要您`Main`執行緒的 apartment 狀態<xref:System.Threading.ApartmentState.MTA>，您可以存放的呼叫<xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>在個別執行緒的 apartment 狀態會設為<xref:System.Threading.ApartmentState.STA>與<xref:System.Threading.Thread.SetApartmentState%2A>。</span><span class="sxs-lookup"><span data-stu-id="17f64-213">If you need your `Main` thread's apartment state to be <xref:System.Threading.ApartmentState.MTA>, you can house the call to <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> in a separate thread whose apartment state is set to <xref:System.Threading.ApartmentState.STA> with <xref:System.Threading.Thread.SetApartmentState%2A>.</span></span> <span data-ttu-id="17f64-214">下列範例說明此第二種技術。</span><span class="sxs-lookup"><span data-stu-id="17f64-214">The example below illustrates this second technique.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17f64-215">您不能套用<xref:System.STAThreadAttribute>以外的任何方法`Main`而且您無法使用<xref:System.Threading.Thread.SetApartmentState%2A>如`Main`執行緒。</span><span class="sxs-lookup"><span data-stu-id="17f64-215">You cannot apply the <xref:System.STAThreadAttribute> to any method except `Main` and you cannot use <xref:System.Threading.Thread.SetApartmentState%2A> for the `Main` thread.</span></span>  
  
 <span data-ttu-id="17f64-216">列印中的其他方式[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]包括<xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType>方法，可用來包含或不含開啟的對話方塊中和許多<xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>並<xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>方法<xref:System.Windows.Xps.XpsDocumentWriter>。</span><span class="sxs-lookup"><span data-stu-id="17f64-216">Other ways to print in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=nameWithType> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-217">下列範例示範如何使用<xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>批次列印所有[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]目錄中的檔案。</span><span class="sxs-lookup"><span data-stu-id="17f64-217">The following example shows how to use <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29> to batch print all the [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] files in a directory.</span></span>  
  
 [!code-csharp[BatchPrintXPSFiles#BatchPrintXPSFiles](~/samples/snippets/csharp/VS_Snippets_Wpf/BatchPrintXPSFiles/CSharp/Program.cs#batchprintxpsfiles)]
 [!code-vb[BatchPrintXPSFiles#BatchPrintXPSFiles](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BatchPrintXPSFiles/visualbasic/program.vb#batchprintxpsfiles)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.ApartmentState" />
        <altmember cref="T:System.STAThreadAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/e78b14f1-e487-43cd-9c6d-1a07483f1730"><span data-ttu-id="17f64-218">將 COM 元件公開給 .NET Framework</span><span class="sxs-lookup"><span data-stu-id="17f64-218">Exposing COM Components to the .NET Framework</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="17f64-219">isXPS 一致性工具</span><span class="sxs-lookup"><span data-stu-id="17f64-219">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo AddJob (string jobName, string documentPath, bool fastCopy, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo AddJob(string jobName, string documentPath, bool fastCopy, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ AddJob(System::String ^ jobName, System::String ^ documentPath, bool fastCopy, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="member this.AddJob : string * string * bool * System.Printing.PrintTicket -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.AddJob (jobName, documentPath, fastCopy, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobName" Type="System.String" />
        <Parameter Name="documentPath" Type="System.String" />
        <Parameter Name="fastCopy" Type="System.Boolean" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="jobName"><span data-ttu-id="17f64-220">要列印之文件的路徑和名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-220">The path and name of the document that is being printed.</span></span></param>
        <param name="documentPath"><span data-ttu-id="17f64-221">要列印之文件的路徑和名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-221">The path and name of the document that is being printed.</span></span></param>
        <param name="fastCopy"><span data-ttu-id="17f64-222"><see langword="true" /> 表示快速進行多工緩衝處理，而無需回應每頁的進度，也無需驗證檔案是否為有效的 [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-222"><see langword="true" /> to spool quickly without page-by-page progress feedback and without validating that the file is valid [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]; otherwise, <see langword="false" />.</span></span></param>
        <param name="printTicket"><span data-ttu-id="17f64-223">列印工作的設定。</span><span class="sxs-lookup"><span data-stu-id="17f64-223">The settings of the print job.</span></span></param>
        <summary><span data-ttu-id="17f64-224">將 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] 文件的新列印工作插入佇列，為其指定名稱和設定，並指定是否應驗證該工作。</span><span class="sxs-lookup"><span data-stu-id="17f64-224">Inserts a new print job for an [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] Document into the queue, gives it the specified name and settings, and specifies whether or not it should be validated.</span></span></summary>
        <returns><span data-ttu-id="17f64-225"><see cref="T:System.Printing.PrintSystemJobInfo" />，表示列印工作及其狀態。</span><span class="sxs-lookup"><span data-stu-id="17f64-225">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that represents the print job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-226">如需詳細資訊，請參閱<xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>。</span><span class="sxs-lookup"><span data-stu-id="17f64-226">For more information, see <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AveragePagesPerMinute">
      <MemberSignature Language="C#" Value="public virtual int AveragePagesPerMinute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AveragePagesPerMinute" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.AveragePagesPerMinute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AveragePagesPerMinute As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AveragePagesPerMinute { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AveragePagesPerMinute : int" Usage="System.Printing.PrintQueue.AveragePagesPerMinute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-227">取得以每分鐘頁數測量的印表機速度。</span><span class="sxs-lookup"><span data-stu-id="17f64-227">Gets the speed of the printer measured in pages per minute.</span></span></summary>
        <value><span data-ttu-id="17f64-228">印表機每分鐘列印的平均頁數。</span><span class="sxs-lookup"><span data-stu-id="17f64-228">The average pages printed per minute of the printer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientPrintSchemaVersion">
      <MemberSignature Language="C#" Value="public int ClientPrintSchemaVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClientPrintSchemaVersion" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.ClientPrintSchemaVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientPrintSchemaVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClientPrintSchemaVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientPrintSchemaVersion : int" Usage="System.Printing.PrintQueue.ClientPrintSchemaVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-229">取得<see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">列印結構描述</see>的版本。</span><span class="sxs-lookup"><span data-stu-id="17f64-229">Gets the version of the <see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">Print Schema</see>.</span></span></summary>
        <value><span data-ttu-id="17f64-230">新版[列印結構描述](https://go.microsoft.com/fwlink/?LinkId=186397)使用中。</span><span class="sxs-lookup"><span data-stu-id="17f64-230">The version of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) in use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-231">[列印結構描述](https://go.microsoft.com/fwlink/?LinkId=186397)隨著 Windows Vista 發行的版本為 1。</span><span class="sxs-lookup"><span data-stu-id="17f64-231">The [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) version released with Windows Vista is 1.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=186397"><span data-ttu-id="17f64-232">列印結構描述</span><span class="sxs-lookup"><span data-stu-id="17f64-232">Print Schema</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public virtual string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Printing.PrintQueue.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-233">取得或設定印表機的相關註解。</span><span class="sxs-lookup"><span data-stu-id="17f64-233">Gets or sets a comment about the printer.</span></span></summary>
        <value><span data-ttu-id="17f64-234">印表機的相關註解。</span><span class="sxs-lookup"><span data-stu-id="17f64-234">A comment about the printer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-235">註解是在 Windows 的 [印表機] 清單和 Windows 通用列印對話方塊上的使用者可以看見。</span><span class="sxs-lookup"><span data-stu-id="17f64-235">The comment is visible to users in the Windows printer list and on the Windows common print dialog.</span></span> <span data-ttu-id="17f64-236">它可以提供資訊不包含在印表機的名稱、 模型或位置屬性，也會顯示在相同的位置;例如，"保留供薪資部門下午 3 點與下午 4 點之間。 」</span><span class="sxs-lookup"><span data-stu-id="17f64-236">It can provide information not contained in the printer's name, model, or location properties, which are also visible in the same places; for example, "Reserved for Payroll Dept. between 3 pm and 4 pm."</span></span> <span data-ttu-id="17f64-237">(<xref:System.Printing.PrintQueue.Description%2A>屬性可讓您儲存使用者無法檢視，除非您的應用程式使其可見的資訊。)</span><span class="sxs-lookup"><span data-stu-id="17f64-237">(The <xref:System.Printing.PrintQueue.Description%2A> property enables you to store information that users cannot view unless your application makes it visible.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberSignature Language="F#" Value="override this.Commit : unit -&gt; unit" Usage="printQueue.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17f64-238">將 <see cref="T:System.Printing.PrintQueue" /> 物件的目前屬性寫入至列印伺服器上的實際列印佇列。</span><span class="sxs-lookup"><span data-stu-id="17f64-238">Writes the current properties of the <see cref="T:System.Printing.PrintQueue" /> object to the actual print queue on the print server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-239">您的程式所產生的屬性變更<xref:System.Printing.PrintQueue>物件不實際生效之前執行程式<xref:System.Printing.PrintQueue.Commit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="17f64-239">Changes that your program makes to the properties of a <xref:System.Printing.PrintQueue> object do not actually take effect until the program executes the <xref:System.Printing.PrintQueue.Commit%2A> method.</span></span>  
  
 <span data-ttu-id="17f64-240">此方法需要<xref:System.Printing.PrintQueue>物件會使用建立<xref:System.Printing.PrintSystemDesiredAccess.AdministratePrinter>權限。</span><span class="sxs-lookup"><span data-stu-id="17f64-240">The method requires that the <xref:System.Printing.PrintQueue> object be created with <xref:System.Printing.PrintSystemDesiredAccess.AdministratePrinter> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-241">下列範例示範如何使用這個方法合併兩個的列印票證。</span><span class="sxs-lookup"><span data-stu-id="17f64-241">The following example shows how to use this method while merging two print tickets.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="17f64-242">部分屬性無法認可。</span><span class="sxs-lookup"><span data-stu-id="17f64-242">Some of the properties could not be committed.</span></span></exception>
        <exception cref="T:System.Printing.PrintCommitAttributesException"><span data-ttu-id="17f64-243">部分屬性無法認可。</span><span class="sxs-lookup"><span data-stu-id="17f64-243">Some of the properties could not be committed.</span></span>  
  
<span data-ttu-id="17f64-244">-或-</span><span class="sxs-lookup"><span data-stu-id="17f64-244">-or-</span></span> 
<span data-ttu-id="17f64-245"><see cref="T:System.Printing.PrintQueue" /> 物件不是以足夠的權限建立。</span><span class="sxs-lookup"><span data-stu-id="17f64-245">The <see cref="T:System.Printing.PrintQueue" /> object was not created with sufficient rights.</span></span></exception>
        <altmember cref="M:System.Printing.PrintQueue.Refresh" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateXpsDocumentWriter">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17f64-246">建立 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="17f64-246">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="17f64-247">isXPS 一致性工具</span><span class="sxs-lookup"><span data-stu-id="17f64-247">isXPS Conformance Tool</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref System.Printing.PrintDocumentImageableArea documentImageableArea);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(class System.Printing.PrintDocumentImageableArea&amp; documentImageableArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (ByRef documentImageableArea As PrintDocumentImageableArea) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::Printing::PrintDocumentImageableArea ^ % documentImageableArea);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter :  -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter documentImageableArea" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentImageableArea" Type="System.Printing.PrintDocumentImageableArea" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="documentImageableArea"><span data-ttu-id="17f64-248">物件的參考，包含裝置可在其上列印的頁面區域維度。</span><span class="sxs-lookup"><span data-stu-id="17f64-248">A reference to an object that contains the dimensions of the area of the page on which the device can print.</span></span> <span data-ttu-id="17f64-249">由於這個參數的資料型別沒有公用建構函式，因此這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="17f64-249">Since its data type has no public constructor, this parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="17f64-250">建立 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 物件，開啟 Windows 通用列印對話方塊，並傳回 <see langword="ref" /> (Visual Basic 中為 <see langword="ByRef" />) 參數，這個參數表示可影像化區域和媒體維度的詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="17f64-250">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog and returns a <see langword="ref" /> (<see langword="ByRef" /> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</span></span></summary>
        <returns><span data-ttu-id="17f64-251">將 XPS 資料寫入資料流的 <see cref="T:System.Windows.Xps.XpsDocumentWriter" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-251">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream.</span></span> <span data-ttu-id="17f64-252">這可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-252">This can be <see langword="null" />.</span></span> <span data-ttu-id="17f64-253">(參數 <paramref name="documentImageableArea" /> 是該方法初始化的 <see langword="ref" /> [Visual Basic 中為 <see langword="ByRef" />] 參數，因此它代表再次傳回的項目)。</span><span class="sxs-lookup"><span data-stu-id="17f64-253">(The parameter <paramref name="documentImageableArea" /> is a <see langword="ref" /> [<see langword="ByRef" /> in Visual Basic] parameter that is initialized by the method, so it represents a second returned item.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-254">許多印表機需要英吋為單位沾周圍的空間邊緣的每個頁面至紙張的底框的四分之一，最多，並將它移到印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-254">Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer.</span></span> <span data-ttu-id="17f64-255">否則碳粉可能會破壞紙張流程機制。</span><span class="sxs-lookup"><span data-stu-id="17f64-255">Otherwise toner would foul the paper flow mechanism.</span></span> <span data-ttu-id="17f64-256">可列印的區域是 「 可影像化區域 」。</span><span class="sxs-lookup"><span data-stu-id="17f64-256">The area which can be printed is the "imageable area."</span></span>  
  
 <span data-ttu-id="17f64-257">型別<xref:System.Printing.PrintDocumentImageableArea>沒有公用建構函式。</span><span class="sxs-lookup"><span data-stu-id="17f64-257">The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor.</span></span> <span data-ttu-id="17f64-258">因此，變數`documentImageableArea`必須宣告並指派給`null`和則只會傳遞至方法。</span><span class="sxs-lookup"><span data-stu-id="17f64-258">Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method.</span></span> <span data-ttu-id="17f64-259">這個方法會顯示<xref:System.Windows.Controls.PrintDialog>需要使用者輸入。</span><span class="sxs-lookup"><span data-stu-id="17f64-259">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="17f64-260">使用者選取印表機、 紙張大小和方向並關閉對話方塊之後,`documentImageableArea`指向實際的物件和其屬性會初始化。</span><span class="sxs-lookup"><span data-stu-id="17f64-260">After the user has selected a printer, paper size, and orientation and closed the dialog, `documentImageableArea` points to an actual object and its properties are initialized.</span></span>  
  
 <span data-ttu-id="17f64-261">如果使用者取消，或關閉對話方塊，傳回的值是`null`。</span><span class="sxs-lookup"><span data-stu-id="17f64-261">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="17f64-262">如此一來，傳回的值必須檢查`null`應用程式。</span><span class="sxs-lookup"><span data-stu-id="17f64-262">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="17f64-263">isXPS 一致性工具</span><span class="sxs-lookup"><span data-stu-id="17f64-263">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (System.Printing.PrintQueue printQueue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(class System.Printing.PrintQueue printQueue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::Printing::PrintQueue ^ printQueue);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter : System.Printing.PrintQueue -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter printQueue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printQueue" Type="System.Printing.PrintQueue" />
      </Parameters>
      <Docs>
        <param name="printQueue"><span data-ttu-id="17f64-264">列印 XPS 文件的列印佇列。</span><span class="sxs-lookup"><span data-stu-id="17f64-264">A print queue to print the XPS document.</span></span></param>
        <summary><span data-ttu-id="17f64-265">建立 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 物件，並將它與指定的列印佇列相關聯。</span><span class="sxs-lookup"><span data-stu-id="17f64-265">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object and associates it with the specified print queue.</span></span></summary>
        <returns><span data-ttu-id="17f64-266">寫入至 XPS 資料流的 <see cref="T:System.Windows.Xps.XpsDocumentWriter" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-266">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes to an XPS stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="17f64-267">下列範例示範如何使用這個方法來建立<xref:System.Windows.Xps.XpsDocumentWriter>。</span><span class="sxs-lookup"><span data-stu-id="17f64-267">The following example shows how to use this method to create an <xref:System.Windows.Xps.XpsDocumentWriter>.</span></span>  
  
 [!code-csharp[XpsPrint#PrintQueueSnip](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsPrint/CSharp/XpsPrintHelper.cs#printqueuesnip)]
 [!code-vb[XpsPrint#PrintQueueSnip](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsPrint/visualbasic/xpsprinthelper.vb#printqueuesnip)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="17f64-268">isXPS 一致性工具</span><span class="sxs-lookup"><span data-stu-id="17f64-268">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref double width, ref double height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(float64&amp; width, float64&amp; height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Double@,System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (ByRef width As Double, ByRef height As Double) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(double % width, double % height);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter :  *  -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" RefType="ref" />
        <Parameter Name="height" Type="System.Double" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="width"><span data-ttu-id="17f64-269">XPS 文件的寬度。</span><span class="sxs-lookup"><span data-stu-id="17f64-269">The width of the XPS document.</span></span></param>
        <param name="height"><span data-ttu-id="17f64-270">XPS 文件的高度。</span><span class="sxs-lookup"><span data-stu-id="17f64-270">The height of the XPS document.</span></span></param>
        <summary><span data-ttu-id="17f64-271">使用指定的維度 (Dimension) 建立 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="17f64-271">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object with the specified dimensions.</span></span></summary>
        <returns><span data-ttu-id="17f64-272">寫入至 XPS 資料流的 <see cref="T:System.Windows.Xps.XpsDocumentWriter" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-272">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes to an XPS stream.</span></span> <span data-ttu-id="17f64-273">這可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-273">This can be <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-274">這個方法會顯示<xref:System.Windows.Controls.PrintDialog>需要使用者輸入。</span><span class="sxs-lookup"><span data-stu-id="17f64-274">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="17f64-275">如果使用者取消，或關閉對話方塊，傳回的值是`null`。</span><span class="sxs-lookup"><span data-stu-id="17f64-275">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="17f64-276">如此一來，傳回的值必須檢查`null`應用程式。</span><span class="sxs-lookup"><span data-stu-id="17f64-276">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="17f64-277">isXPS 一致性工具</span><span class="sxs-lookup"><span data-stu-id="17f64-277">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (string jobDescription, ref System.Printing.PrintDocumentImageableArea documentImageableArea);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(string jobDescription, class System.Printing.PrintDocumentImageableArea&amp; documentImageableArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (jobDescription As String, ByRef documentImageableArea As PrintDocumentImageableArea) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::String ^ jobDescription, System::Printing::PrintDocumentImageableArea ^ % documentImageableArea);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter : string *  -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter (jobDescription, documentImageableArea)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobDescription" Type="System.String" />
        <Parameter Name="documentImageableArea" Type="System.Printing.PrintDocumentImageableArea" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="jobDescription"><span data-ttu-id="17f64-278">列印工作的名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-278">A name for the print job.</span></span> <span data-ttu-id="17f64-279">它會顯示在 Windows 列印使用者介面中。</span><span class="sxs-lookup"><span data-stu-id="17f64-279">It appears in the Windows printing user interface.</span></span></param>
        <param name="documentImageableArea"><span data-ttu-id="17f64-280">物件的參考，包含裝置可在其上列印的頁面區域維度。</span><span class="sxs-lookup"><span data-stu-id="17f64-280">A reference to an object that contains the dimensions of the area of the page on which the device can print.</span></span> <span data-ttu-id="17f64-281">由於這個參數的資料型別沒有公用建構函式，因此這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="17f64-281">Since its data type has no public constructor, this parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="17f64-282">建立 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 物件，開啟 Windows 通用列印對話方塊 (並為其提供工作描述)，且傳回 <see langword="ref" /> (Visual Basic 中為<see langword="ByRef" />) 參數，這個參數表示可影像化區域和媒體維度的詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="17f64-282">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog (and provides it a job description) and returns a <see langword="ref" /> (<see langword="ByRef" /> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</span></span></summary>
        <returns><span data-ttu-id="17f64-283">將 XPS 資料寫入資料流的 <see cref="T:System.Windows.Xps.XpsDocumentWriter" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-283">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream.</span></span> <span data-ttu-id="17f64-284">這可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-284">This can be <see langword="null" />.</span></span> <span data-ttu-id="17f64-285">(參數 <paramref name="documentImageableArea" /> 是該方法初始化的 <see langword="ref" /> [Visual Basic 中為 <see langword="ByRef" />] 參數，因此它代表再次傳回的項目)。</span><span class="sxs-lookup"><span data-stu-id="17f64-285">(The parameter <paramref name="documentImageableArea" /> is a <see langword="ref" /> [<see langword="ByRef" /> in Visual Basic] parameter that is initialized by the method, so it represents a second returned item.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-286">許多印表機需要英吋為單位沾周圍的空間邊緣的每個頁面至紙張的底框的四分之一，最多，並將它移到印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-286">Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer.</span></span> <span data-ttu-id="17f64-287">否則碳粉可能會破壞紙張流程機制。</span><span class="sxs-lookup"><span data-stu-id="17f64-287">Otherwise toner would foul the paper flow mechanism.</span></span> <span data-ttu-id="17f64-288">可列印的區域是 「 可影像化區域 」。</span><span class="sxs-lookup"><span data-stu-id="17f64-288">The area which can be printed is the "imageable area."</span></span>  
  
 <span data-ttu-id="17f64-289">型別<xref:System.Printing.PrintDocumentImageableArea>沒有公用建構函式。</span><span class="sxs-lookup"><span data-stu-id="17f64-289">The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor.</span></span> <span data-ttu-id="17f64-290">因此，變數`documentImageableArea`必須宣告並指派給`null`和則只會傳遞至方法。</span><span class="sxs-lookup"><span data-stu-id="17f64-290">Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method.</span></span> <span data-ttu-id="17f64-291">這個方法會顯示<xref:System.Windows.Controls.PrintDialog>需要使用者輸入。</span><span class="sxs-lookup"><span data-stu-id="17f64-291">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="17f64-292">使用者選取印表機、 紙張大小和方向並關閉對話方塊之後,`documentImageableArea`指向實際的物件和其屬性會初始化。</span><span class="sxs-lookup"><span data-stu-id="17f64-292">After the user has selected a printer, paper size, and orientation and closed the dialog, `documentImageableArea` points to an actual object, and its properties are initialized.</span></span>  
  
 <span data-ttu-id="17f64-293">如果使用者取消，或關閉對話方塊，傳回的值是`null`。</span><span class="sxs-lookup"><span data-stu-id="17f64-293">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="17f64-294">如此一來，傳回的值必須檢查`null`應用程式。</span><span class="sxs-lookup"><span data-stu-id="17f64-294">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="17f64-295">isXPS 一致性工具</span><span class="sxs-lookup"><span data-stu-id="17f64-295">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref System.Printing.PrintDocumentImageableArea documentImageableArea, ref System.Windows.Controls.PageRangeSelection pageRangeSelection, ref System.Windows.Controls.PageRange pageRange);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(class System.Printing.PrintDocumentImageableArea&amp; documentImageableArea, valuetype System.Windows.Controls.PageRangeSelection&amp; pageRangeSelection, valuetype System.Windows.Controls.PageRange&amp; pageRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (ByRef documentImageableArea As PrintDocumentImageableArea, ByRef pageRangeSelection As PageRangeSelection, ByRef pageRange As PageRange) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::Printing::PrintDocumentImageableArea ^ % documentImageableArea, System::Windows::Controls::PageRangeSelection % pageRangeSelection, System::Windows::Controls::PageRange % pageRange);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter :  *  *  -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter (documentImageableArea, pageRangeSelection, pageRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentImageableArea" Type="System.Printing.PrintDocumentImageableArea" RefType="ref" />
        <Parameter Name="pageRangeSelection" Type="System.Windows.Controls.PageRangeSelection" RefType="ref" />
        <Parameter Name="pageRange" Type="System.Windows.Controls.PageRange" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="documentImageableArea"><span data-ttu-id="17f64-296">物件的參考，包含裝置可在其上列印的頁面區域維度。</span><span class="sxs-lookup"><span data-stu-id="17f64-296">A reference to an object that contains the dimensions of the area of the page on which the device can print.</span></span> <span data-ttu-id="17f64-297">由於這個參數的資料型別沒有公用建構函式，因此這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="17f64-297">Since its data type has no public constructor, this parameter is passed uninitialized.</span></span></param>
        <param name="pageRangeSelection"><span data-ttu-id="17f64-298">指定是列印所有頁面還是僅列印使用者指定之範圍的值。</span><span class="sxs-lookup"><span data-stu-id="17f64-298">A value that specifies whether to print all pages or only a range that is specified by the user.</span></span></param>
        <param name="pageRange"><span data-ttu-id="17f64-299">列印的頁面範圍。</span><span class="sxs-lookup"><span data-stu-id="17f64-299">The range of pages that is printed.</span></span></param>
        <summary><span data-ttu-id="17f64-300">建立 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 物件，開啟 Windows 通用列印對話方塊，在對話方塊中輸入頁面範圍和列印工作的描述，並傳回 <see langword="ref" /> (Visual Basic 中為 <see langword="ByRef" />) 參數，這個參數表示可影像化區域和媒體維度的詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="17f64-300">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog, provides the dialog with a page range and a description of the print job, and returns a <see langword="ref" /> (<see langword="ByRef" /> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</span></span></summary>
        <returns><span data-ttu-id="17f64-301">將 XPS 資料寫入資料流的 <see cref="T:System.Windows.Xps.XpsDocumentWriter" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-301">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream.</span></span> <span data-ttu-id="17f64-302">這可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-302">This can be <see langword="null" />.</span></span> <span data-ttu-id="17f64-303">(參數 <paramref name="documentImageableArea" />、<paramref name="pageRangeSelection" /> 和 <paramref name="pageRange" /> 都是使用者初始化並在關閉對話方塊時傳回的 <see langword="ref" /> [Visual Basic 中為 <see langword="ByRef" />] 參數，因此每個參數都代表額外傳回的項目)。</span><span class="sxs-lookup"><span data-stu-id="17f64-303">(The parameters <paramref name="documentImageableArea" />, <paramref name="pageRangeSelection" />, and <paramref name="pageRange" /> are all <see langword="ref" /> [<see langword="ByRef" /> in Visual Basic] parameters that are initialized by the user and returned when the dialog is closed, so each represents an additional returned item.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-304">許多印表機需要英吋為單位沾周圍的空間邊緣的每個頁面至紙張的底框的四分之一，最多，並將它移到印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-304">Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer.</span></span> <span data-ttu-id="17f64-305">否則碳粉可能會破壞紙張流程機制。</span><span class="sxs-lookup"><span data-stu-id="17f64-305">Otherwise toner would foul the paper flow mechanism.</span></span> <span data-ttu-id="17f64-306">可列印的區域是 「 可影像化區域 」。</span><span class="sxs-lookup"><span data-stu-id="17f64-306">The area which can be printed is the "imageable area."</span></span>  
  
 <span data-ttu-id="17f64-307">型別<xref:System.Printing.PrintDocumentImageableArea>沒有公用建構函式。</span><span class="sxs-lookup"><span data-stu-id="17f64-307">The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor.</span></span> <span data-ttu-id="17f64-308">因此，變數`documentImageableArea`必須宣告並指派給`null`和則只會傳遞至方法。</span><span class="sxs-lookup"><span data-stu-id="17f64-308">Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method.</span></span> <span data-ttu-id="17f64-309">這個方法會顯示<xref:System.Windows.Controls.PrintDialog>需要使用者輸入。</span><span class="sxs-lookup"><span data-stu-id="17f64-309">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="17f64-310">使用者 （包括選取印表機、 紙張大小、 方向和頁面範圍） 對話方塊上，設定其列印工作。</span><span class="sxs-lookup"><span data-stu-id="17f64-310">The user configures his print job on the dialog (including selecting a printer, paper size, orientation, and page range).</span></span> <span data-ttu-id="17f64-311">關閉對話方塊時，`pageRangeSelection`並`pageRange`有值，和`documentImageableArea`指向實際物件其屬性會初始化。</span><span class="sxs-lookup"><span data-stu-id="17f64-311">When the dialog is closed, `pageRangeSelection` and `pageRange` have values, and `documentImageableArea` points to an actual object whose properties are initialized.</span></span>  
  
 <span data-ttu-id="17f64-312">如果使用者取消，或關閉對話方塊，傳回的值是`null`。</span><span class="sxs-lookup"><span data-stu-id="17f64-312">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="17f64-313">如此一來，傳回的值必須檢查`null`應用程式。</span><span class="sxs-lookup"><span data-stu-id="17f64-313">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="17f64-314">isXPS 一致性工具</span><span class="sxs-lookup"><span data-stu-id="17f64-314">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (string jobDescription, ref System.Printing.PrintDocumentImageableArea documentImageableArea, ref System.Windows.Controls.PageRangeSelection pageRangeSelection, ref System.Windows.Controls.PageRange pageRange);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(string jobDescription, class System.Printing.PrintDocumentImageableArea&amp; documentImageableArea, valuetype System.Windows.Controls.PageRangeSelection&amp; pageRangeSelection, valuetype System.Windows.Controls.PageRange&amp; pageRange) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateXpsDocumentWriter (jobDescription As String, ByRef documentImageableArea As PrintDocumentImageableArea, ByRef pageRangeSelection As PageRangeSelection, ByRef pageRange As PageRange) As XpsDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::String ^ jobDescription, System::Printing::PrintDocumentImageableArea ^ % documentImageableArea, System::Windows::Controls::PageRangeSelection % pageRangeSelection, System::Windows::Controls::PageRange % pageRange);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter : string *  *  *  -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Printing.PrintQueue.CreateXpsDocumentWriter (jobDescription, documentImageableArea, pageRangeSelection, pageRange)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobDescription" Type="System.String" />
        <Parameter Name="documentImageableArea" Type="System.Printing.PrintDocumentImageableArea" RefType="ref" />
        <Parameter Name="pageRangeSelection" Type="System.Windows.Controls.PageRangeSelection" RefType="ref" />
        <Parameter Name="pageRange" Type="System.Windows.Controls.PageRange" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="jobDescription"><span data-ttu-id="17f64-315">列印工作的名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-315">A name for the print job.</span></span> <span data-ttu-id="17f64-316">它會顯示在 Windows 列印使用者介面中。</span><span class="sxs-lookup"><span data-stu-id="17f64-316">It appears in the Windows printing user interface.</span></span></param>
        <param name="documentImageableArea"><span data-ttu-id="17f64-317">物件的參考，包含裝置可在其上列印的頁面區域維度。</span><span class="sxs-lookup"><span data-stu-id="17f64-317">A reference to an object that contains the dimensions of the area of the page on which the device can print.</span></span> <span data-ttu-id="17f64-318">由於這個參數的資料型別沒有公用建構函式，因此這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="17f64-318">Since its data type has no public constructor, this parameter is passed uninitialized.</span></span></param>
        <param name="pageRangeSelection"><span data-ttu-id="17f64-319">指定是列印所有頁面還是僅列印使用者指定之範圍的值。</span><span class="sxs-lookup"><span data-stu-id="17f64-319">A value that specifies whether to print all pages or only a range that is specified by the user.</span></span></param>
        <param name="pageRange"><span data-ttu-id="17f64-320">列印的頁面範圍。</span><span class="sxs-lookup"><span data-stu-id="17f64-320">The range of pages that is printed.</span></span></param>
        <summary><span data-ttu-id="17f64-321">建立 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 物件，開啟 Windows 通用列印對話方塊，在對話方塊中輸入頁面範圍，並傳回 <see langword="ref" /> (Visual Basic 中為 <see langword="ByRef" />) 參數，這個參數表示可影像化區域和媒體維度的詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="17f64-321">Creates an <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> object, opens a Windows common print dialog, provides the dialog with a page range, and returns a <see langword="ref" /> (<see langword="ByRef" /> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media.</span></span></summary>
        <returns><span data-ttu-id="17f64-322">將 XPS 資料寫入資料流的 <see cref="T:System.Windows.Xps.XpsDocumentWriter" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-322">An <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> that writes XPS data to a stream.</span></span> <span data-ttu-id="17f64-323">這可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-323">This can be <see langword="null" />.</span></span> <span data-ttu-id="17f64-324">(參數 <paramref name="documentImageableArea" />、<paramref name="pageRangeSelection" /> 和 <paramref name="pageRange" /> 都是使用者初始化並在關閉對話方塊時傳回的 <see langword="ref" /> [Visual Basic 中為 <see langword="ByRef" />] 參數，因此每個參數都代表額外傳回的項目)。</span><span class="sxs-lookup"><span data-stu-id="17f64-324">(The parameters <paramref name="documentImageableArea" />, <paramref name="pageRangeSelection" />, and <paramref name="pageRange" /> are all <see langword="ref" /> [<see langword="ByRef" /> in Visual Basic] parameters that are initialized by the user and returned when the dialog is closed, so each represents an additional returned item.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-325">許多印表機需要英吋為單位沾周圍的空間邊緣的每個頁面至紙張的底框的四分之一，最多，並將它移到印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-325">Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer.</span></span> <span data-ttu-id="17f64-326">否則碳粉可能會破壞紙張流程機制。</span><span class="sxs-lookup"><span data-stu-id="17f64-326">Otherwise toner would foul the paper flow mechanism.</span></span> <span data-ttu-id="17f64-327">可列印的區域是 「 可影像化區域 」。</span><span class="sxs-lookup"><span data-stu-id="17f64-327">The area which can be printed is the "imageable area."</span></span>  
  
 <span data-ttu-id="17f64-328">型別<xref:System.Printing.PrintDocumentImageableArea>沒有公用建構函式。</span><span class="sxs-lookup"><span data-stu-id="17f64-328">The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor.</span></span> <span data-ttu-id="17f64-329">因此，變數`documentImageableArea`必須宣告並指派給`null`和則只會傳遞至方法。</span><span class="sxs-lookup"><span data-stu-id="17f64-329">Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method.</span></span> <span data-ttu-id="17f64-330">這個方法會顯示<xref:System.Windows.Controls.PrintDialog>需要使用者輸入。</span><span class="sxs-lookup"><span data-stu-id="17f64-330">This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user.</span></span> <span data-ttu-id="17f64-331">使用者 （包括選取印表機、 紙張大小、 方向和頁面範圍） 對話方塊上，設定其列印工作。</span><span class="sxs-lookup"><span data-stu-id="17f64-331">The user configures his print job on the dialog (including selecting a printer, paper size, orientation, and page range).</span></span> <span data-ttu-id="17f64-332">關閉對話方塊時，`pageRangeSelection`並`pageRange`有值，和`documentImageableArea`指向實際物件其屬性會初始化。</span><span class="sxs-lookup"><span data-stu-id="17f64-332">When the dialog is closed, `pageRangeSelection` and `pageRange` have values, and `documentImageableArea` points to an actual object whose properties are initialized.</span></span>  
  
 <span data-ttu-id="17f64-333">如果使用者取消，或關閉對話方塊，傳回的值是`null`。</span><span class="sxs-lookup"><span data-stu-id="17f64-333">If the user cancels or closes the dialog, the return value is `null`.</span></span> <span data-ttu-id="17f64-334">如此一來，傳回的值必須檢查`null`應用程式。</span><span class="sxs-lookup"><span data-stu-id="17f64-334">As a consequence, the return value must be checked for `null` by your application.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bfbb433f-7ab6-417a-90f0-71443d76bcb3"><span data-ttu-id="17f64-335">isXPS 一致性工具</span><span class="sxs-lookup"><span data-stu-id="17f64-335">isXPS Conformance Tool</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CurrentJobSettings">
      <MemberSignature Language="C#" Value="public System.Printing.PrintJobSettings CurrentJobSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintJobSettings CurrentJobSettings" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.CurrentJobSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentJobSettings As PrintJobSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintJobSettings ^ CurrentJobSettings { System::Printing::PrintJobSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentJobSettings : System.Printing.PrintJobSettings" Usage="System.Printing.PrintQueue.CurrentJobSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintJobSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-336">取得物件，這個物件包含目前列印工作的組態設定。</span><span class="sxs-lookup"><span data-stu-id="17f64-336">Gets an object that contains the configuration settings for the current print job.</span></span></summary>
        <value><span data-ttu-id="17f64-337"><see cref="T:System.Printing.PrintJobSettings" /> 值，這個值包含目前正在列印之工作的設定。</span><span class="sxs-lookup"><span data-stu-id="17f64-337">A <see cref="T:System.Printing.PrintJobSettings" /> value that holds the settings of the currently printing job.</span></span> <span data-ttu-id="17f64-338">這些設定包括工作描述和工作 <see cref="T:System.Printing.PrintTicket" /> 的參考。</span><span class="sxs-lookup"><span data-stu-id="17f64-338">These settings include a description of the job and a reference to the job's <see cref="T:System.Printing.PrintTicket" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Printing.PrintTicket" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPrintTicket">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintTicket DefaultPrintTicket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintTicket DefaultPrintTicket" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.DefaultPrintTicket" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultPrintTicket As PrintTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintTicket ^ DefaultPrintTicket { System::Printing::PrintTicket ^ get(); void set(System::Printing::PrintTicket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPrintTicket : System.Printing.PrintTicket with get, set" Usage="System.Printing.PrintQueue.DefaultPrintTicket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintTicket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-339">取得或設定與這個 <see cref="T:System.Printing.PrintQueue" /> 關聯的預設印表機選項。</span><span class="sxs-lookup"><span data-stu-id="17f64-339">Gets or sets the default printer options associated with this <see cref="T:System.Printing.PrintQueue" />.</span></span></summary>
        <value><span data-ttu-id="17f64-340">列印佇列的預設 <see cref="T:System.Printing.PrintTicket" />，如果列印佇列中發生錯誤則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-340">The default <see cref="T:System.Printing.PrintTicket" /> for the print queue; or <see langword="null" /> if an error has occurred in the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-341">預設值<xref:System.Printing.PrintTicket>指定列印工作的選項，例如<xref:System.Printing.PrintTicket.CopyCount%2A>， <xref:System.Printing.PrintTicket.PageOrientation%2A>， <xref:System.Printing.PrintTicket.Duplexing%2A>， <xref:System.Printing.PrintTicket.Stapling%2A>，和其他人。</span><span class="sxs-lookup"><span data-stu-id="17f64-341">The default <xref:System.Printing.PrintTicket> specifies print job options such as <xref:System.Printing.PrintTicket.CopyCount%2A>, <xref:System.Printing.PrintTicket.PageOrientation%2A>, <xref:System.Printing.PrintTicket.Duplexing%2A>, <xref:System.Printing.PrintTicket.Stapling%2A>, and others.</span></span>  
  
 <span data-ttu-id="17f64-342">每個<xref:System.Printing.PrintQueue>都會維護它自己<xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>。</span><span class="sxs-lookup"><span data-stu-id="17f64-342">Each <xref:System.Printing.PrintQueue> maintains its own <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>.</span></span>  
  
 <span data-ttu-id="17f64-343">在一般的作業<xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>屬性會傳回<xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="17f64-343">In normal operation the <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> property returns a <xref:System.Printing.PrintTicket>.</span></span>  <span data-ttu-id="17f64-344">如果<xref:System.Printing.PrintQueue>偵測到無效的狀態，<xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="17f64-344">If the <xref:System.Printing.PrintQueue> detects an invalid state, <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> returns `null`.</span></span>  <span data-ttu-id="17f64-345">如果<xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>傳回`null`、 應用程式應該會顯示發生錯誤的告知性的使用者 對話方塊，在此列印佇列和列印工作，應該導向至不同的列印佇列的輸出重新啟動。</span><span class="sxs-lookup"><span data-stu-id="17f64-345">If <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> returns `null`, the application should display an informational user dialog that an error has occurred on this print queue and that the print job should be restarted with the output directed to a different print queue.</span></span>  
  
 <span data-ttu-id="17f64-346">取得或設定<xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>屬性不會驗證<xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="17f64-346">Getting or setting the <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> property does not validate the <xref:System.Printing.PrintTicket>.</span></span>  <span data-ttu-id="17f64-347"><xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>方法可用來驗證<xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="17f64-347">The <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> method can be used to validate a <xref:System.Printing.PrintTicket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-348">下列範例示範如何運用這些測試印表機的功能和設定列印工作時使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="17f64-348">The following example shows how to use this property while testing a printer's capabilities and configuring a print job to take advantage of them.</span></span>  
  
 [!code-cpp[XpsCreate#PrinterCapabilities](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#printercapabilities)]
 [!code-csharp[XpsCreate#PrinterCapabilities](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#printercapabilities)]
 [!code-vb[XpsCreate#PrinterCapabilities](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#printercapabilities)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintQueue.UserPrintTicket" />
        <altmember cref="P:System.Printing.PrintQueue.DefaultPriority" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPriority">
      <MemberSignature Language="C#" Value="public virtual int DefaultPriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultPriority" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.DefaultPriority" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DefaultPriority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPriority : int with get, set" Usage="System.Printing.PrintQueue.DefaultPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-349">取得或設定提供給每個加入佇列之新列印工作的預設優先權。</span><span class="sxs-lookup"><span data-stu-id="17f64-349">Gets or sets the default priority that is given to each new print job added to the queue.</span></span></summary>
        <value><span data-ttu-id="17f64-350">加入佇列之列印工作的預設優先權。</span><span class="sxs-lookup"><span data-stu-id="17f64-350">The default priority for print jobs added to the queue.</span></span> <span data-ttu-id="17f64-351">可能值的範圍為 1 至 99。</span><span class="sxs-lookup"><span data-stu-id="17f64-351">Possible values range from 1 through 99.</span></span> <span data-ttu-id="17f64-352">預設為 1。</span><span class="sxs-lookup"><span data-stu-id="17f64-352">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-353">使用者可以變更列印工作的優先順序之後進入的列印佇列。</span><span class="sxs-lookup"><span data-stu-id="17f64-353">A print job's priority can be changed by users after it enters the print queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Printing.PrintQueue.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-354">取得列印佇列的描述。</span><span class="sxs-lookup"><span data-stu-id="17f64-354">Gets a description of the print queue.</span></span></summary>
        <value><span data-ttu-id="17f64-355">列印佇列的描述。</span><span class="sxs-lookup"><span data-stu-id="17f64-355">A description of the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-356">建立佇列時，描述會預設為佇列名稱、 模型和以逗號分隔的位置所組成的三部分字串。</span><span class="sxs-lookup"><span data-stu-id="17f64-356">When the queue is created, the description defaults to a three part string that consists of the queue name, model, and location separated by commas.</span></span> <span data-ttu-id="17f64-357">對比<xref:System.Printing.PrintQueue.Description%2A>屬性與<xref:System.Printing.PrintQueue.Comment%2A>對通用列印對話方塊和印表機和傳真清單中的使用者可見的屬性。</span><span class="sxs-lookup"><span data-stu-id="17f64-357">Contrast the <xref:System.Printing.PrintQueue.Description%2A> property with the <xref:System.Printing.PrintQueue.Comment%2A> property which is visible to users in the common print dialog and the Printers and Faxes list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Printing.PrintQueue.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-358">取得佇列的完整名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-358">Gets the complete name of the queue.</span></span></summary>
        <value><span data-ttu-id="17f64-359">列印佇列的完整名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-359">The complete name of the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-360">在本機列印伺服器上的列印佇列，這個屬性的值是否完全相同<xref:System.Printing.PrintQueue.Name%2A>，否則它會包含完整的 UNC （通用命名慣例） 名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-360">For print queues on the local print server, this property's value is identical to <xref:System.Printing.PrintQueue.Name%2A>, otherwise it includes the full UNC (Universal Naming Convention) name.</span></span>  
  
 <span data-ttu-id="17f64-361"><xref:System.Printing.PrintQueue>物件也有可寫入<xref:System.Printing.PrintQueue.Name%2A>和<xref:System.Printing.PrintQueue.ShareName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="17f64-361">The <xref:System.Printing.PrintQueue> object also has writeable <xref:System.Printing.PrintQueue.Name%2A> and <xref:System.Printing.PrintQueue.ShareName%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-362">下列範例示範如何合併兩個列印票證時可以使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="17f64-362">The following example shows how to use this property while merging two print tickets.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJob">
      <MemberSignature Language="C#" Value="public System.Printing.PrintSystemJobInfo GetJob (int jobId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintSystemJobInfo GetJob(int32 jobId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetJob(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetJob (jobId As Integer) As PrintSystemJobInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintSystemJobInfo ^ GetJob(int jobId);" />
      <MemberSignature Language="F#" Value="member this.GetJob : int -&gt; System.Printing.PrintSystemJobInfo" Usage="printQueue.GetJob jobId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="jobId"><span data-ttu-id="17f64-363">佇列中的工作數目。</span><span class="sxs-lookup"><span data-stu-id="17f64-363">The number of the job in the queue.</span></span></param>
        <summary><span data-ttu-id="17f64-364">取得具有指定 ID 編號的列印工作。</span><span class="sxs-lookup"><span data-stu-id="17f64-364">Gets the print job with the specified ID number.</span></span></summary>
        <returns><span data-ttu-id="17f64-365">指定工作屬性及其狀態之屬性的 <see cref="T:System.Printing.PrintSystemJobInfo" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-365">A <see cref="T:System.Printing.PrintSystemJobInfo" /> that specifies the properties of the job and its status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-366">您也可以使用<xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=nameWithType>達成相同目的的方法。</span><span class="sxs-lookup"><span data-stu-id="17f64-366">You can also use the <xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=nameWithType> method for the same purpose.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-367">下列範例示範如何診斷問題列印工作時，請使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="17f64-367">The following example shows how to use this method when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Get(System.Printing.PrintQueue,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPrintCapabilities">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17f64-368">取得 <see cref="T:System.Printing.PrintCapabilities" /> 物件，這個物件會識別印表機或裝置的功能，例如，是否可以進行彩色列印或雙面列印。</span><span class="sxs-lookup"><span data-stu-id="17f64-368">Gets a <see cref="T:System.Printing.PrintCapabilities" /> object that identifies the capabilities of the printer or device, such as whether it prints in color or is capable of two-sided printing.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPrintCapabilities">
      <MemberSignature Language="C#" Value="public System.Printing.PrintCapabilities GetPrintCapabilities ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintCapabilities GetPrintCapabilities() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintCapabilities" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrintCapabilities () As PrintCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintCapabilities ^ GetPrintCapabilities();" />
      <MemberSignature Language="F#" Value="member this.GetPrintCapabilities : unit -&gt; System.Printing.PrintCapabilities" Usage="printQueue.GetPrintCapabilities " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintCapabilities</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17f64-369">取得 <see cref="T:System.Printing.PrintCapabilities" /> 物件，這個物件會識別印表機功能。</span><span class="sxs-lookup"><span data-stu-id="17f64-369">Gets a <see cref="T:System.Printing.PrintCapabilities" /> object that identifies the capabilities of the printer.</span></span></summary>
        <returns><span data-ttu-id="17f64-370"><see cref="T:System.Printing.PrintCapabilities" /> 物件，這個物件指定印表機能否執行特定功能，例如，雙面影印或自動裝訂。</span><span class="sxs-lookup"><span data-stu-id="17f64-370">A <see cref="T:System.Printing.PrintCapabilities" /> object that specifies what the printer can and cannot do, such as two-sided coping or automatic stapling.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="17f64-371">下列範例示範如何使用這個方法合併兩個的列印票證。</span><span class="sxs-lookup"><span data-stu-id="17f64-371">The following example shows how to use this method while merging two print tickets.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="17f64-372">無法擷取 <see cref="T:System.Printing.PrintCapabilities" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="17f64-372">The <see cref="T:System.Printing.PrintCapabilities" /> object could not be retrieved.</span></span></exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission"><span data-ttu-id="17f64-373">取得列印功能的權限。</span><span class="sxs-lookup"><span data-stu-id="17f64-373">for permission to get print capabilities.</span></span> <span data-ttu-id="17f64-374">相關聯的列舉型別： <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span><span class="sxs-lookup"><span data-stu-id="17f64-374">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPrintCapabilities">
      <MemberSignature Language="C#" Value="public System.Printing.PrintCapabilities GetPrintCapabilities (System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintCapabilities GetPrintCapabilities(class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintCapabilities(System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintCapabilities ^ GetPrintCapabilities(System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="member this.GetPrintCapabilities : System.Printing.PrintTicket -&gt; System.Printing.PrintCapabilities" Usage="printQueue.GetPrintCapabilities printTicket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintCapabilities</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="printTicket"><span data-ttu-id="17f64-375">為列印功能提供報告基礎的 Print Ticket。</span><span class="sxs-lookup"><span data-stu-id="17f64-375">A print ticket that provides the basis on which the print capabilities are reported.</span></span></param>
        <summary><span data-ttu-id="17f64-376">取得 <see cref="T:System.Printing.PrintCapabilities" /> 物件，這個物件會識別印表機功能。</span><span class="sxs-lookup"><span data-stu-id="17f64-376">Gets a <see cref="T:System.Printing.PrintCapabilities" /> object that identifies the capabilities of the printer.</span></span></summary>
        <returns><span data-ttu-id="17f64-377"><see cref="T:System.Printing.PrintCapabilities" /> 物件，這個物件指定印表機能否執行特定功能，例如，雙面影印或自動裝訂。</span><span class="sxs-lookup"><span data-stu-id="17f64-377">A <see cref="T:System.Printing.PrintCapabilities" /> object that specifies what the printer can and cannot do, such as two-sided coping or automatic stapling.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-378"><xref:System.Printing.PrintTicket>參數作為基礎來建構<xref:System.Printing.PrintCapabilities>物件。</span><span class="sxs-lookup"><span data-stu-id="17f64-378">The <xref:System.Printing.PrintTicket> parameter is used as the basis on which to construct the <xref:System.Printing.PrintCapabilities> object.</span></span> <span data-ttu-id="17f64-379">例如，假設印表機支援的媒體類型 A 和 B 的輸入紙匣 1，而且只支援輸入紙匣 2 的媒體類型 C。</span><span class="sxs-lookup"><span data-stu-id="17f64-379">For example, suppose the printer supported only media types A and B from input bin 1 and it only supported media type C from input bin 2.</span></span> <span data-ttu-id="17f64-380">如果`printTicket`參數指定輸入紙匣 1，則<xref:System.Printing.PrintCapabilities>傳回的物件會包含所有這三個媒體類型，但它會報告類型 C 做為 「 受限於 」。</span><span class="sxs-lookup"><span data-stu-id="17f64-380">If the `printTicket` parameter specified input bin 1, then the <xref:System.Printing.PrintCapabilities> object that is returned would include all three media types, but it would report type C as "constrained."</span></span> <span data-ttu-id="17f64-381">如果`printTicket`參數指定輸入紙匣 2，則<xref:System.Printing.PrintCapabilities>傳回的物件會包含所有這三個媒體類型，但它會報告型別 A 和 B，「 限制 」。</span><span class="sxs-lookup"><span data-stu-id="17f64-381">If the `printTicket` parameter specified input bin 2, then the <xref:System.Printing.PrintCapabilities> object that is returned would include all three media types, but it would report types A and B as "constrained."</span></span> <span data-ttu-id="17f64-382">請參閱[列印結構描述](https://go.microsoft.com/fwlink/?LinkId=186397)如條件約束的詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="17f64-382">See the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) for more information on constraints.</span></span>  
  
 <span data-ttu-id="17f64-383">如果`printTicket`已`null`，則<xref:System.Printing.PrintQueue.UserPrintTicket%2A>用。</span><span class="sxs-lookup"><span data-stu-id="17f64-383">If `printTicket` is `null`, the <xref:System.Printing.PrintQueue.UserPrintTicket%2A> is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="17f64-384">無法擷取 <see cref="T:System.Printing.PrintCapabilities" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="17f64-384">The <see cref="T:System.Printing.PrintCapabilities" /> object could not be retrieved.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17f64-385"><paramref name="printTicket" /> 的語式不正確。</span><span class="sxs-lookup"><span data-stu-id="17f64-385"><paramref name="printTicket" /> is not well-formed.</span></span></exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission"><span data-ttu-id="17f64-386">取得列印功能的權限。</span><span class="sxs-lookup"><span data-stu-id="17f64-386">for permission to get print capabilities.</span></span> <span data-ttu-id="17f64-387">相關聯的列舉型別： <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span><span class="sxs-lookup"><span data-stu-id="17f64-387">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPrintCapabilitiesAsXml">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17f64-388">取得 <see cref="T:System.IO.MemoryStream" /> 物件，其會以符合[列印結構描述](https://go.microsoft.com/fwlink/?LinkId=186397)的 XML 資料流形式指定印表機的功能。</span><span class="sxs-lookup"><span data-stu-id="17f64-388">Gets a <see cref="T:System.IO.MemoryStream" /> object that specifies the printer's capabilities as an XML stream that complies with the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-389">使用 XML 結構描述稱為"PrintCapabilities"的一部分[列印結構描述](https://go.microsoft.com/fwlink/?LinkId=186397)系統。</span><span class="sxs-lookup"><span data-stu-id="17f64-389">The XML schema used is called "PrintCapabilities," a part of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPrintCapabilitiesAsXml">
      <MemberSignature Language="C#" Value="public System.IO.MemoryStream GetPrintCapabilitiesAsXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryStream GetPrintCapabilitiesAsXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintCapabilitiesAsXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrintCapabilitiesAsXml () As MemoryStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryStream ^ GetPrintCapabilitiesAsXml();" />
      <MemberSignature Language="F#" Value="member this.GetPrintCapabilitiesAsXml : unit -&gt; System.IO.MemoryStream" Usage="printQueue.GetPrintCapabilitiesAsXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17f64-390">取得 <see cref="T:System.IO.MemoryStream" /> 物件，其會以符合[列印結構描述](https://go.microsoft.com/fwlink/?LinkId=186397)的 XML 資料流形式指定印表機的功能。</span><span class="sxs-lookup"><span data-stu-id="17f64-390">Gets a <see cref="T:System.IO.MemoryStream" /> object that specifies the printer's capabilities as an XML stream that complies with the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span></summary>
        <returns><span data-ttu-id="17f64-391"><see cref="T:System.IO.MemoryStream" />，它會使用 XML 結構描述 "PrintCapabilities" (其為<see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">列印結構描述</see>系統的一部分)，指定印表機的功能。</span><span class="sxs-lookup"><span data-stu-id="17f64-391">A <see cref="T:System.IO.MemoryStream" /> specifying the printer's capabilities by using the XML schema "PrintCapabilities," a part of the <see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">Print Schema</see> system.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="17f64-392">無法擷取列印功能。</span><span class="sxs-lookup"><span data-stu-id="17f64-392">The print capabilities could not be retrieved.</span></span></exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission"><span data-ttu-id="17f64-393">取得列印功能的權限。</span><span class="sxs-lookup"><span data-stu-id="17f64-393">for permission to get print capabilities.</span></span> <span data-ttu-id="17f64-394">相關聯的列舉型別： <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span><span class="sxs-lookup"><span data-stu-id="17f64-394">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPrintCapabilitiesAsXml">
      <MemberSignature Language="C#" Value="public System.IO.MemoryStream GetPrintCapabilitiesAsXml (System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryStream GetPrintCapabilitiesAsXml(class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryStream ^ GetPrintCapabilitiesAsXml(System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="member this.GetPrintCapabilitiesAsXml : System.Printing.PrintTicket -&gt; System.IO.MemoryStream" Usage="printQueue.GetPrintCapabilitiesAsXml printTicket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="printTicket"><span data-ttu-id="17f64-395">為列印功能提供報告基礎的 Print Ticket。</span><span class="sxs-lookup"><span data-stu-id="17f64-395">A print ticket that provides the basis on which the print capabilities are reported.</span></span></param>
        <summary><span data-ttu-id="17f64-396">取得 <see cref="T:System.IO.MemoryStream" /> 物件，其會以符合[列印結構描述](https://go.microsoft.com/fwlink/?LinkId=186397)的 XML 格式來指定印表機的功能。</span><span class="sxs-lookup"><span data-stu-id="17f64-396">Gets a <see cref="T:System.IO.MemoryStream" /> object that specifies the printer's capabilities in an XML format that complies with the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span></summary>
        <returns><span data-ttu-id="17f64-397"><see cref="T:System.IO.MemoryStream" />，它會使用 XML 結構描述 "PrintCapabilities" (其為<see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">列印結構描述</see>系統的一部分)，指定印表機的功能。</span><span class="sxs-lookup"><span data-stu-id="17f64-397">A <see cref="T:System.IO.MemoryStream" /> specifying the printer's capabilities by using the XML schema "PrintCapabilities," a part of the <see href="https://docs.microsoft.com/windows/desktop/printdocs/printschema">Print Schema</see> system.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-398"><xref:System.Printing.PrintTicket>參數作為要建構 XML 的列印功能的基礎。</span><span class="sxs-lookup"><span data-stu-id="17f64-398">The <xref:System.Printing.PrintTicket> parameter is used as the basis on which to construct the print capabilities XML.</span></span> <span data-ttu-id="17f64-399">例如，假設印表機支援的媒體類型 A 和 B 的輸入紙匣 1，而且只支援輸入紙匣 2 的媒體類型 C。</span><span class="sxs-lookup"><span data-stu-id="17f64-399">For example, suppose the printer supported only media types A and B from input bin 1 and it only supported media type C from input bin 2.</span></span> <span data-ttu-id="17f64-400">如果`printTicket`參數指定輸入紙匣 1，則列印功能就會傳回的 XML 會包含所有這三個媒體類型，但它會報告類型 C 做為 「 受限於 」。</span><span class="sxs-lookup"><span data-stu-id="17f64-400">If the `printTicket` parameter specified input bin 1, then the print capabilities XML that is returned would include all three media types, but it would report type C as "constrained."</span></span> <span data-ttu-id="17f64-401">如果`printTicket`參數指定輸入紙匣 2，然後列印功能就會傳回的 XML 會包含所有這三個媒體類型，但它會報告型別 A 和 B，「 限制 」。</span><span class="sxs-lookup"><span data-stu-id="17f64-401">If the `printTicket` parameter specified input bin 2, then the print capabilities XML that is returned would include all three media types, but it would report types A and B as "constrained."</span></span> <span data-ttu-id="17f64-402">請參閱[列印結構描述](https://go.microsoft.com/fwlink/?LinkId=186397)如條件約束的詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="17f64-402">See the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) for more information on constraints.</span></span>  
  
 <span data-ttu-id="17f64-403">如果`printTicket`已`null`，則<xref:System.Printing.PrintQueue.UserPrintTicket%2A>用。</span><span class="sxs-lookup"><span data-stu-id="17f64-403">If `printTicket` is `null`, the <xref:System.Printing.PrintQueue.UserPrintTicket%2A> is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="17f64-404">無法擷取列印功能。</span><span class="sxs-lookup"><span data-stu-id="17f64-404">The print capabilities could not be retrieved.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17f64-405"><paramref name="printTicket" /> 的語式不正確。</span><span class="sxs-lookup"><span data-stu-id="17f64-405"><paramref name="printTicket" /> is not well-formed.</span></span></exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission"><span data-ttu-id="17f64-406">取得列印功能的權限。</span><span class="sxs-lookup"><span data-stu-id="17f64-406">for permission to get print capabilities.</span></span> <span data-ttu-id="17f64-407">相關聯的列舉型別： <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span><span class="sxs-lookup"><span data-stu-id="17f64-407">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPrintJobInfoCollection">
      <MemberSignature Language="C#" Value="public System.Printing.PrintJobInfoCollection GetPrintJobInfoCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Printing.PrintJobInfoCollection GetPrintJobInfoCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.GetPrintJobInfoCollection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrintJobInfoCollection () As PrintJobInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::PrintJobInfoCollection ^ GetPrintJobInfoCollection();" />
      <MemberSignature Language="F#" Value="member this.GetPrintJobInfoCollection : unit -&gt; System.Printing.PrintJobInfoCollection" Usage="printQueue.GetPrintJobInfoCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintJobInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17f64-408">針對佇列中的每個工作建立包含 <see cref="T:System.Printing.PrintSystemJobInfo" /> 物件的集合。</span><span class="sxs-lookup"><span data-stu-id="17f64-408">Creates a collection that contains a <see cref="T:System.Printing.PrintSystemJobInfo" /> object for each job in the queue.</span></span></summary>
        <returns><span data-ttu-id="17f64-409"><see cref="T:System.Printing.PrintSystemJobInfo" /> 物件的集合。</span><span class="sxs-lookup"><span data-stu-id="17f64-409">A collection of <see cref="T:System.Printing.PrintSystemJobInfo" /> objects.</span></span> <span data-ttu-id="17f64-410">佇列中的每個工作都有一個集合。</span><span class="sxs-lookup"><span data-stu-id="17f64-410">There is one for each job in the queue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="17f64-411">下列範例示範如何在佇列中每個工作上執行相同的動作時，請使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="17f64-411">The following example shows how to use this method when performing the same action on every job in a queue.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPaperProblem">
      <MemberSignature Language="C#" Value="public bool HasPaperProblem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPaperProblem" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.HasPaperProblem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPaperProblem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPaperProblem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasPaperProblem : bool" Usage="System.Printing.PrintQueue.HasPaperProblem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-412">取得值，這個值表示印表機是否有未指定的紙張問題。</span><span class="sxs-lookup"><span data-stu-id="17f64-412">Gets a value that indicates if the printer is having an unspecified paper problem.</span></span></summary>
        <value><span data-ttu-id="17f64-413">如果有未指定的紙張問題則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-413"><see langword="true" /> if there is an unspecified paper problem; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-414">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-414">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 <span data-ttu-id="17f64-415"><xref:System.Printing.PrintQueue>物件還擁有<xref:System.Printing.PrintQueue.IsPaperJammed%2A>和<xref:System.Printing.PrintQueue.IsOutOfPaper%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="17f64-415">The <xref:System.Printing.PrintQueue> object also has <xref:System.Printing.PrintQueue.IsPaperJammed%2A> and <xref:System.Printing.PrintQueue.IsOutOfPaper%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-416">下列範例顯示如何使用此屬性作為調查可能的錯誤狀態的所有印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-416">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasToner">
      <MemberSignature Language="C#" Value="public bool HasToner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasToner" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.HasToner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasToner As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasToner { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasToner : bool" Usage="System.Printing.PrintQueue.HasToner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-417">取得值，這個值表示印表機是否有碳粉。</span><span class="sxs-lookup"><span data-stu-id="17f64-417">Gets a value that indicates if the printer has toner.</span></span></summary>
        <value><span data-ttu-id="17f64-418">如果目前印表機有碳粉則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-418"><see langword="true" /> if the current printer has toner; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-419">某些印表機製造商可能會使用此訊號，來指出碳粉的逸出序列有足夠的可用。</span><span class="sxs-lookup"><span data-stu-id="17f64-419">Some printer manufacturers may use this signal to indicate that toner is not low.</span></span> <span data-ttu-id="17f64-420">其他人可能會使用它來指出碳粉匣使用時，會存在且正確地插入<xref:System.Printing.PrintQueue.IsTonerLow%2A>表示該碳粉不足。</span><span class="sxs-lookup"><span data-stu-id="17f64-420">Others may use it to indicate that the toner cartridge is present and properly inserted while using <xref:System.Printing.PrintQueue.IsTonerLow%2A> to indicate that toner is low.</span></span>  
  
 <span data-ttu-id="17f64-421">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-421">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-422">下列範例顯示如何使用此屬性作為調查可能的錯誤狀態的所有印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-422">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingPrintServer">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintServer HostingPrintServer { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintServer HostingPrintServer" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.HostingPrintServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HostingPrintServer As PrintServer" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property System::Printing::PrintServer ^ HostingPrintServer {  public:&#xA;System::Printing::PrintServer ^ get(); protected:&#xA; void set(System::Printing::PrintServer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostingPrintServer : System.Printing.PrintServer with get, set" Usage="System.Printing.PrintQueue.HostingPrintServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintServer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-423">取得或設定可控制列印佇列之保護 (Protected) 的列印伺服器。</span><span class="sxs-lookup"><span data-stu-id="17f64-423">Gets or sets (protected) the print server that controls the print queue.</span></span></summary>
        <value><span data-ttu-id="17f64-424">裝載列印佇列的 <see cref="T:System.Printing.PrintServer" /> 名稱和其他屬性。</span><span class="sxs-lookup"><span data-stu-id="17f64-424">The name and other properties of the <see cref="T:System.Printing.PrintServer" /> that is hosting the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-425">這個屬性可以設定只會由衍生自類別<xref:System.Printing.PrintQueue>因為是屬性的 setter `protected`。</span><span class="sxs-lookup"><span data-stu-id="17f64-425">This property can be set only by a class that derives from <xref:System.Printing.PrintQueue> because the property's setter is `protected`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InPartialTrust">
      <MemberSignature Language="C#" Value="public bool InPartialTrust { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InPartialTrust" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.InPartialTrust" />
      <MemberSignature Language="VB.NET" Value="Public Property InPartialTrust As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InPartialTrust { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InPartialTrust : bool with get, set" Usage="System.Printing.PrintQueue.InPartialTrust" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-426">取得或設定值，這個值表示佇列是在部分信任的模式這一較高信任層級中操作。</span><span class="sxs-lookup"><span data-stu-id="17f64-426">Gets or sets a value that indicates whether the queue is operating in a partially trusted mode, a higher level of trust.</span></span></summary>
        <value><span data-ttu-id="17f64-427">如果佇列是在部分信任的模式中操作則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-427"><see langword="true" /> if the queue is operating in a partially trusted mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-428">當<xref:System.Printing.PrintQueue.InPartialTrust%2A>屬性是`true`，您的程式無法建立<xref:System.Printing.PrintQueue>物件，表示這個印表機，除非使用者具有完整的印表機的列印權限。</span><span class="sxs-lookup"><span data-stu-id="17f64-428">When the <xref:System.Printing.PrintQueue.InPartialTrust%2A> property is `true`, your program cannot create a <xref:System.Printing.PrintQueue> object that represents this printer unless the user has full printing permissions for the printer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalDispose">
      <MemberSignature Language="C#" Value="protected override sealed void InternalDispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InternalDispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.InternalDispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub InternalDispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InternalDispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.InternalDispose : bool -&gt; unit" Usage="printQueue.InternalDispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="17f64-429"><see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="17f64-429"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="17f64-430">釋放 <see cref="T:System.Printing.PrintQueue" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="17f64-430">Releases the unmanaged resources used by the <see cref="T:System.Printing.PrintQueue" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBidiEnabled">
      <MemberSignature Language="C#" Value="public bool IsBidiEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBidiEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsBidiEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBidiEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBidiEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBidiEnabled : bool" Usage="System.Printing.PrintQueue.IsBidiEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-431">取得值，這個值表示是否啟用與印表機的雙向 (Bidirectional) 通訊。</span><span class="sxs-lookup"><span data-stu-id="17f64-431">Gets a value that indicates whether bidirectional communication with the printer is enabled.</span></span></summary>
        <value><span data-ttu-id="17f64-432">如果啟用與印表機的雙向通訊則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-432"><see langword="true" /> if bidirectional communication with the printer is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.Printing.PrintQueue.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-433">取得值，這個值表示列印裝置是否為忙碌中。</span><span class="sxs-lookup"><span data-stu-id="17f64-433">Gets a value that indicates whether the printing device is busy.</span></span></summary>
        <value><span data-ttu-id="17f64-434">如果裝置忙碌中則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-434"><see langword="true" /> if the device is busy; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-435">忙碌中不一定表示它正在處理列印工作。</span><span class="sxs-lookup"><span data-stu-id="17f64-435">Busy does not necessarily mean that it is processing a print job.</span></span> <span data-ttu-id="17f64-436">如果裝置是結合印表機/傳真/影印機，則它可能是傳真或複製。</span><span class="sxs-lookup"><span data-stu-id="17f64-436">If the device is a combination printer/fax/copier, then it might be faxing or copying.</span></span> <span data-ttu-id="17f64-437">與比較<xref:System.Printing.PrintQueue.IsProcessing%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="17f64-437">Compare with the <xref:System.Printing.PrintQueue.IsProcessing%2A> property.</span></span>  
  
 <span data-ttu-id="17f64-438">如果裝置不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-438">If the device does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDevQueryEnabled">
      <MemberSignature Language="C#" Value="public bool IsDevQueryEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDevQueryEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsDevQueryEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDevQueryEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDevQueryEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDevQueryEnabled : bool" Usage="System.Printing.PrintQueue.IsDevQueryEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-439">取得值，這個值表示當文件與印表機組態不相符時佇列是否保留文件。</span><span class="sxs-lookup"><span data-stu-id="17f64-439">Gets a value that indicates whether the queue holds documents when document and printer configurations do not match.</span></span></summary>
        <value><span data-ttu-id="17f64-440">如果佇列保留不相符的組態則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-440"><see langword="true" /> if the queue holds mismatched configurations; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirect">
      <MemberSignature Language="C#" Value="public bool IsDirect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirect" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsDirect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirect { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirect : bool" Usage="System.Printing.PrintQueue.IsDirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-441">取得值，這個值表示佇列是直接列印至印表機，還是先多工緩衝處理文件再進行列印。</span><span class="sxs-lookup"><span data-stu-id="17f64-441">Gets a value that indicates whether the queue prints directly to the printer or spools documents first and then prints them.</span></span></summary>
        <value><span data-ttu-id="17f64-442">如果佇列直接列印至印表機則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-442"><see langword="true" /> if the queue prints directly to the printer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-443">這個屬性可以設定只能透過 Windows 通用列印對話方塊。</span><span class="sxs-lookup"><span data-stu-id="17f64-443">This property can be set only through the Windows common print dialog.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDoorOpened">
      <MemberSignature Language="C#" Value="public bool IsDoorOpened { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDoorOpened" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsDoorOpened" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDoorOpened As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDoorOpened { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDoorOpened : bool" Usage="System.Printing.PrintQueue.IsDoorOpened" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-444">取得值，這個值表示是否印表機門未關。</span><span class="sxs-lookup"><span data-stu-id="17f64-444">Gets a value that indicates whether a door is open on the printer.</span></span></summary>
        <value><span data-ttu-id="17f64-445">如果門未關則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-445"><see langword="true" /> if a door is open; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-446">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-446">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-447">下列範例顯示如何使用此屬性作為調查可能的錯誤狀態的所有印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-447">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHidden">
      <MemberSignature Language="C#" Value="public bool IsHidden { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHidden" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsHidden" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHidden As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHidden { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHidden : bool" Usage="System.Printing.PrintQueue.IsHidden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-448">取得值，這個值表示列印佇列在應用程式的使用者介面中是否隱藏。</span><span class="sxs-lookup"><span data-stu-id="17f64-448">Gets a value that indicates whether the print queue is hidden in your application's user interface.</span></span></summary>
        <value><span data-ttu-id="17f64-449">如果列印佇列在 Windows 使用者介面中隱藏則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-449"><see langword="true" /> if the print queue is hidden in the Windows user interface; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-450">您不要自動隱藏列印佇列時，您將這個屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="17f64-450">You do not automatically hide the print queue when you set this property to `true`.</span></span> <span data-ttu-id="17f64-451">您的程式仍必須採取步驟，請確定它不會出現在任何程式的介面中的佇列清單。</span><span class="sxs-lookup"><span data-stu-id="17f64-451">Your program still must take steps to make sure it does not appear in any list of queues in the program's interface.</span></span>  
  
 <span data-ttu-id="17f64-452">列印佇列無法隱藏的 Windows 使用者介面，例如印表機和傳真清單中。</span><span class="sxs-lookup"><span data-stu-id="17f64-452">Print queues cannot be hidden in the Windows user interface, such as the Printers and Faxes list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInError">
      <MemberSignature Language="C#" Value="public bool IsInError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInError" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsInError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInError : bool" Usage="System.Printing.PrintQueue.IsInError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-453">取得值，這個值表示印表機或裝置是否發生錯誤狀況。</span><span class="sxs-lookup"><span data-stu-id="17f64-453">Gets a value that indicates whether the printer or device is in an error condition.</span></span></summary>
        <value><span data-ttu-id="17f64-454">如果裝置發生錯誤狀況則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-454"><see langword="true" /> if the device is in an error condition; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-455">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-455">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-456">下列範例顯示如何使用此屬性作為調查可能的錯誤狀態的所有印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-456">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitializing">
      <MemberSignature Language="C#" Value="public bool IsInitializing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitializing" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsInitializing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitializing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitializing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInitializing : bool" Usage="System.Printing.PrintQueue.IsInitializing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-457">取得值，這個值表示印表機是否正在自行初始化。</span><span class="sxs-lookup"><span data-stu-id="17f64-457">Gets a value that indicates whether the printer is initializing itself.</span></span></summary>
        <value><span data-ttu-id="17f64-458">如果印表機正在初始化則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-458"><see langword="true" /> if the printer is initializing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-459">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-459">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIOActive">
      <MemberSignature Language="C#" Value="public bool IsIOActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIOActive" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsIOActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIOActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIOActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsIOActive : bool" Usage="System.Printing.PrintQueue.IsIOActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-460">取得值，這個值表示印表機是否正在接收或傳送資料或信號。</span><span class="sxs-lookup"><span data-stu-id="17f64-460">Gets a value that indicates whether the printer is receiving or sending data or signals.</span></span></summary>
        <value><span data-ttu-id="17f64-461">如果印表機正在接收或傳送信號則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-461"><see langword="true" /> if the printer is receiving or sending; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-462">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-462">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManualFeedRequired">
      <MemberSignature Language="C#" Value="public bool IsManualFeedRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManualFeedRequired" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsManualFeedRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsManualFeedRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManualFeedRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsManualFeedRequired : bool" Usage="System.Printing.PrintQueue.IsManualFeedRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-463">取得值，這個值表示對於目前的列印工作，印表機是否需要手動送紙。</span><span class="sxs-lookup"><span data-stu-id="17f64-463">Gets a value that indicates whether the printer needs to be manually fed paper for the current print job.</span></span></summary>
        <value><span data-ttu-id="17f64-464">如果印表機需要手動送紙則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-464"><see langword="true" /> if the printer needs to be manually fed paper; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-465">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-465">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNotAvailable">
      <MemberSignature Language="C#" Value="public bool IsNotAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNotAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsNotAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNotAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNotAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNotAvailable : bool" Usage="System.Printing.PrintQueue.IsNotAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-466">取得值，這個值表示印表機是否可用。</span><span class="sxs-lookup"><span data-stu-id="17f64-466">Gets a value that indicates whether the printer is available.</span></span></summary>
        <value><span data-ttu-id="17f64-467">如果印表機可用則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-467"><see langword="true" /> if the printer is available; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-468">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-468">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-469">下列範例顯示如何使用此屬性作為調查可能的錯誤狀態的所有印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-469">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffline">
      <MemberSignature Language="C#" Value="public bool IsOffline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffline" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsOffline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOffline : bool" Usage="System.Printing.PrintQueue.IsOffline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-470">取得值，這個值指出印表機是否離線。</span><span class="sxs-lookup"><span data-stu-id="17f64-470">Gets a value that indicates whether the printer is offline.</span></span></summary>
        <value><span data-ttu-id="17f64-471">如果印表機離線則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-471"><see langword="true" /> if the printer is offline; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-472">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-472">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-473">下列範例顯示如何使用此屬性作為調查可能的錯誤狀態的所有印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-473">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutOfMemory">
      <MemberSignature Language="C#" Value="public bool IsOutOfMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOutOfMemory" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsOutOfMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOutOfMemory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOutOfMemory { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOutOfMemory : bool" Usage="System.Printing.PrintQueue.IsOutOfMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-474">取得值，這個值表示印表機是否記憶體不足。</span><span class="sxs-lookup"><span data-stu-id="17f64-474">Gets a value that indicates whether the printer is out of memory.</span></span></summary>
        <value><span data-ttu-id="17f64-475">如果印表機記憶體不足則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-475"><see langword="true" /> if the printer is out of memory; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-476">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-476">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-477">下列範例顯示如何使用此屬性作為調查可能的錯誤狀態的所有印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-477">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutOfPaper">
      <MemberSignature Language="C#" Value="public bool IsOutOfPaper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOutOfPaper" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsOutOfPaper" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOutOfPaper As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOutOfPaper { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOutOfPaper : bool" Usage="System.Printing.PrintQueue.IsOutOfPaper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-478">取得值，這個值表示印表機是否需要重新放入目前工作所需大小的紙張。</span><span class="sxs-lookup"><span data-stu-id="17f64-478">Gets a value that indicates whether the printer needs to be reloaded with paper of the size required for the current job.</span></span></summary>
        <value><span data-ttu-id="17f64-479">如果印表機需要重新放入紙張則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-479"><see langword="true" /> if the printer needs to be reloaded; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-480">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-480">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-481">下列範例顯示如何使用此屬性作為調查可能的錯誤狀態的所有印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-481">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutputBinFull">
      <MemberSignature Language="C#" Value="public bool IsOutputBinFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOutputBinFull" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsOutputBinFull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOutputBinFull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOutputBinFull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOutputBinFull : bool" Usage="System.Printing.PrintQueue.IsOutputBinFull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-482">取得值，這個值表示印表機的輸出區域是否即將溢位。</span><span class="sxs-lookup"><span data-stu-id="17f64-482">Gets a value that indicates whether the output area of the printer is in danger of overflowing.</span></span></summary>
        <value><span data-ttu-id="17f64-483">如果印表機的輸出區域已滿則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-483"><see langword="true" /> if the output area of the printer is full; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-484">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-484">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-485">下列範例顯示如何使用此屬性作為調查可能的錯誤狀態的所有印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-485">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaperJammed">
      <MemberSignature Language="C#" Value="public bool IsPaperJammed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaperJammed" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPaperJammed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaperJammed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaperJammed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPaperJammed : bool" Usage="System.Printing.PrintQueue.IsPaperJammed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-486">取得值，這個值表示目前這張紙是否夾在印表機中。</span><span class="sxs-lookup"><span data-stu-id="17f64-486">Gets a value that indicates whether the current sheet of paper is stuck in the printer.</span></span></summary>
        <value><span data-ttu-id="17f64-487">如果發生夾紙則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-487"><see langword="true" /> if the paper is stuck; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-488">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-488">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-489">下列範例顯示如何使用此屬性作為調查可能的錯誤狀態的所有印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-489">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaused">
      <MemberSignature Language="C#" Value="public bool IsPaused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaused" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPaused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPaused : bool" Usage="System.Printing.PrintQueue.IsPaused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-490">取得值，這個值表示列印佇列是否已暫停。</span><span class="sxs-lookup"><span data-stu-id="17f64-490">Gets a value that indicates whether the print queue has been paused.</span></span></summary>
        <value><span data-ttu-id="17f64-491">如果列印佇列已暫停則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-491"><see langword="true" /> if the print queue has been paused; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-492">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-492">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-493">下列範例顯示如何使用此屬性作為調查可能的錯誤狀態的所有印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-493">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPendingDeletion">
      <MemberSignature Language="C#" Value="public bool IsPendingDeletion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPendingDeletion" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPendingDeletion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPendingDeletion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPendingDeletion { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPendingDeletion : bool" Usage="System.Printing.PrintQueue.IsPendingDeletion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-494">取得值，這個值表示印表機是否正在刪除列印工作。</span><span class="sxs-lookup"><span data-stu-id="17f64-494">Gets a value that indicates whether the printer is in the process of deleting a print job.</span></span></summary>
        <value><span data-ttu-id="17f64-495">如果印表機正在刪除工作則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-495"><see langword="true" /> if the printer is deleting a job; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-496">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-496">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPowerSaveOn">
      <MemberSignature Language="C#" Value="public bool IsPowerSaveOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPowerSaveOn" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPowerSaveOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPowerSaveOn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPowerSaveOn { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPowerSaveOn : bool" Usage="System.Printing.PrintQueue.IsPowerSaveOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-497">取得值，這個值表示印表機是否處於省電模式。</span><span class="sxs-lookup"><span data-stu-id="17f64-497">Gets a value that indicates whether the printer is in power save mode.</span></span></summary>
        <value><span data-ttu-id="17f64-498">如果印表機處於省電模式則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-498"><see langword="true" /> if the printer is in power save mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-499">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-499">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrinting">
      <MemberSignature Language="C#" Value="public bool IsPrinting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrinting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPrinting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrinting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrinting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrinting : bool" Usage="System.Printing.PrintQueue.IsPrinting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-500">取得值，這個值表示是否正在列印工作。</span><span class="sxs-lookup"><span data-stu-id="17f64-500">Gets a value that indicates whether a job is printing.</span></span></summary>
        <value><span data-ttu-id="17f64-501">如果正在列印工作則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-501"><see langword="true" /> if a job is printing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-502">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-502">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProcessing">
      <MemberSignature Language="C#" Value="public bool IsProcessing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsProcessing" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsProcessing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsProcessing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsProcessing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsProcessing : bool" Usage="System.Printing.PrintQueue.IsProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-503">取得值，這個值表示印表機是否正在處理列印工作。</span><span class="sxs-lookup"><span data-stu-id="17f64-503">Gets a value that indicates whether the printer is processing a print job.</span></span></summary>
        <value><span data-ttu-id="17f64-504">如果印表機正在處理列印工作則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-504"><see langword="true" /> if the printer is processing a print job; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-505">某些印表機製造商支援此訊號，而不是小於特定<xref:System.Printing.PrintQueue.IsBusy%2A>。</span><span class="sxs-lookup"><span data-stu-id="17f64-505">Some printer manufacturers support this signal instead of the less specific <xref:System.Printing.PrintQueue.IsBusy%2A>.</span></span>  
  
 <span data-ttu-id="17f64-506">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-506">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublished">
      <MemberSignature Language="C#" Value="public bool IsPublished { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublished" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsPublished" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublished As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublished { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublished : bool" Usage="System.Printing.PrintQueue.IsPublished" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-507">取得值，這個值表示其他網路使用者是否可看到該印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-507">Gets a value that indicates whether the printer is visible to other network users.</span></span></summary>
        <value><span data-ttu-id="17f64-508">如果其他網路使用者可看到該印表機則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-508"><see langword="true" /> if the printer is visible to other network users; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsQueued">
      <MemberSignature Language="C#" Value="public bool IsQueued { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsQueued" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsQueued" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsQueued As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsQueued { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsQueued : bool" Usage="System.Printing.PrintQueue.IsQueued" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-509">取得值，這個值表示印表機是否可支援同時含有多個列印工作的佇列。</span><span class="sxs-lookup"><span data-stu-id="17f64-509">Gets a value that indicates whether the printer can support a queue with more than one print job in it at a time.</span></span></summary>
        <value><span data-ttu-id="17f64-510">如果印表機支援含多個列印工作的佇列則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-510"><see langword="true" /> if the printer can support the queuing of multiple print jobs; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-511">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-511">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRawOnlyEnabled">
      <MemberSignature Language="C#" Value="public bool IsRawOnlyEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRawOnlyEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsRawOnlyEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRawOnlyEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRawOnlyEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRawOnlyEnabled : bool" Usage="System.Printing.PrintQueue.IsRawOnlyEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-512">取得值，這個值表示列印佇列是否可以使用加強型中繼檔 (Enhanced Meta File，EMF)，這種檔案能夠加快從列印應用程式到 Windows 多工緩衝處理程式的資料流程。</span><span class="sxs-lookup"><span data-stu-id="17f64-512">Gets a value that indicates whether the print queue can use EMF (Enhanced Meta File) that enables faster data flow from a printing application to the Windows spooler.</span></span></summary>
        <value><span data-ttu-id="17f64-513">如果印表機無法使用 EMF 列印則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-513"><see langword="true" /> if the printer cannot use EMF printing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServerUnknown">
      <MemberSignature Language="C#" Value="public bool IsServerUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServerUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsServerUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsServerUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsServerUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServerUnknown : bool" Usage="System.Printing.PrintQueue.IsServerUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-514">取得值，這個值表示印表機是否處於錯誤狀態。</span><span class="sxs-lookup"><span data-stu-id="17f64-514">Gets a value that indicates whether the printer is in an error state.</span></span></summary>
        <value><span data-ttu-id="17f64-515">如果印表機處於錯誤狀態則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-515"><see langword="true" /> if in the printer is in an error state; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-516">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-516">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsShared">
      <MemberSignature Language="C#" Value="public bool IsShared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShared" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsShared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsShared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsShared { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsShared : bool" Usage="System.Printing.PrintQueue.IsShared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-517">取得值，這個值表示網路上的其他電腦是否可以使用該印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-517">Gets a value that indicates whether the printer is available for use by other computers on the network.</span></span></summary>
        <value><span data-ttu-id="17f64-518">如果印表機是共用的則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-518"><see langword="true" /> if the printer is shared; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-519">這個屬性只可以設定使用 Windows 通用列印對話方塊。</span><span class="sxs-lookup"><span data-stu-id="17f64-519">This property can only be set with the Windows common print dialog.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTonerLow">
      <MemberSignature Language="C#" Value="public bool IsTonerLow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTonerLow" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsTonerLow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTonerLow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTonerLow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTonerLow : bool" Usage="System.Printing.PrintQueue.IsTonerLow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-520">取得值，這個值表示印表機是否碳粉不足。</span><span class="sxs-lookup"><span data-stu-id="17f64-520">Gets a value that indicates whether the printer is running short of toner.</span></span></summary>
        <value><span data-ttu-id="17f64-521">如果印表機碳粉不足則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-521"><see langword="true" /> if the printer is running short of toner; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-522">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-522">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 <span data-ttu-id="17f64-523"><xref:System.Printing.PrintQueue>物件還擁有<xref:System.Printing.PrintQueue.HasToner%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="17f64-523">The <xref:System.Printing.PrintQueue> object also has a <xref:System.Printing.PrintQueue.HasToner%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-524">下列範例顯示如何使用此屬性作為調查可能的錯誤狀態的所有印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-524">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWaiting">
      <MemberSignature Language="C#" Value="public bool IsWaiting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWaiting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsWaiting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWaiting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWaiting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWaiting : bool" Usage="System.Printing.PrintQueue.IsWaiting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-525">取得值，這個值表示佇列是否正等待加入工作。</span><span class="sxs-lookup"><span data-stu-id="17f64-525">Gets a value that indicates whether the queue is waiting for a job to be added.</span></span></summary>
        <value><span data-ttu-id="17f64-526">如果佇列正等待工作則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-526"><see langword="true" /> if the queue is waiting for a job; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-527">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-527">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWarmingUp">
      <MemberSignature Language="C#" Value="public bool IsWarmingUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWarmingUp" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsWarmingUp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWarmingUp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWarmingUp { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWarmingUp : bool" Usage="System.Printing.PrintQueue.IsWarmingUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-528">取得值，這個值表示印表機是否在準備中。</span><span class="sxs-lookup"><span data-stu-id="17f64-528">Gets a value that indicates whether the printer is warming up.</span></span></summary>
        <value><span data-ttu-id="17f64-529">如果印表機在準備中則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-529"><see langword="true" /> if the printer is warming up; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-530">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-530">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXpsDevice">
      <MemberSignature Language="C#" Value="public bool IsXpsDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXpsDevice" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.IsXpsDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsXpsDevice As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXpsDevice { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsXpsDevice : bool" Usage="System.Printing.PrintQueue.IsXpsDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-531">取得值，以指出印表機驅動程式是否根據[列印概觀](~/docs/framework/wpf/advanced/printing-overview.md)所建置，因而會使用 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] 作為其頁面描述語言。</span><span class="sxs-lookup"><span data-stu-id="17f64-531">Gets a value that indicates whether the printer's driver is built on the [Printing Overview](~/docs/framework/wpf/advanced/printing-overview.md) so it uses [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] as its page description language.</span></span></summary>
        <value><span data-ttu-id="17f64-532"><see langword="true" /> 如果使用印表機[列印概觀](~/docs/framework/wpf/advanced/printing-overview.md); 否則<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-532"><see langword="true" /> if the printer uses the [Printing Overview](~/docs/framework/wpf/advanced/printing-overview.md); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-533">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-533">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepPrintedJobs">
      <MemberSignature Language="C#" Value="public bool KeepPrintedJobs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepPrintedJobs" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.KeepPrintedJobs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepPrintedJobs As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepPrintedJobs { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeepPrintedJobs : bool" Usage="System.Printing.PrintQueue.KeepPrintedJobs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-534">取得值，這個值表示佇列是否要在列印後儲存印表機語言檔案，而不是將其刪除。</span><span class="sxs-lookup"><span data-stu-id="17f64-534">Gets a value that indicates whether the queue is saving the printer language file instead of deleting it following printing.</span></span></summary>
        <value><span data-ttu-id="17f64-535">如果佇列儲存印表機語言檔案則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-535"><see langword="true" /> if the queue is saving the printer language file; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-536">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-536">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public virtual string Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Location { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Location : string with get, set" Usage="System.Printing.PrintQueue.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-537">取得或設定印表機的實體位置。</span><span class="sxs-lookup"><span data-stu-id="17f64-537">Gets or sets the printer's physical location.</span></span></summary>
        <value><span data-ttu-id="17f64-538">印表機的實體位置。</span><span class="sxs-lookup"><span data-stu-id="17f64-538">The printer's physical location.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="17f64-539">下列範例示範如何使用這個屬性來列出可用的列印佇列的子集。</span><span class="sxs-lookup"><span data-stu-id="17f64-539">The following example shows how to use this property to list a subset of available print queues.</span></span>  
  
 [!code-cpp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/CPP/Program.cpp#listsubsetofprintqueues)]
 [!code-csharp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/CSharp/Program.cs#listsubsetofprintqueues)]
 [!code-vb[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/visualbasic/program.vb#listsubsetofprintqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPrintSchemaVersion">
      <MemberSignature Language="C#" Value="public static int MaxPrintSchemaVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxPrintSchemaVersion" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.MaxPrintSchemaVersion" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxPrintSchemaVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxPrintSchemaVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxPrintSchemaVersion : int" Usage="System.Printing.PrintQueue.MaxPrintSchemaVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-540">取得佇列可用的最新可能[列印結構描述](https://go.microsoft.com/fwlink/?LinkId=186397)版本號碼。</span><span class="sxs-lookup"><span data-stu-id="17f64-540">Gets the most recent possible version number of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) that the queue can use.</span></span></summary>
        <value><span data-ttu-id="17f64-541">最新版本號碼[列印結構描述](https://go.microsoft.com/fwlink/?LinkId=186397)，佇列可使用。</span><span class="sxs-lookup"><span data-stu-id="17f64-541">The most recent version number of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) that the queue can use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-542">新版[列印結構描述](https://go.microsoft.com/fwlink/?LinkId=186397)隨著 Windows Vista 發行為 1。</span><span class="sxs-lookup"><span data-stu-id="17f64-542">The version of the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) released with Windows Vista is 1.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=186397"><span data-ttu-id="17f64-543">列印結構描述</span><span class="sxs-lookup"><span data-stu-id="17f64-543">Print Schema</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="MergeAndValidatePrintTicket">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17f64-544">會合併兩個 <see cref="T:System.Printing.PrintTicket" /> 並保證得出有效的 <see cref="T:System.Printing.PrintTicket" />，且不會要求印表機不支援的任何列印功能。</span><span class="sxs-lookup"><span data-stu-id="17f64-544">Merges two <see cref="T:System.Printing.PrintTicket" />s and guarantees that the resulting <see cref="T:System.Printing.PrintTicket" /> is valid and does not ask for any printing functionality that the printer does not support.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MergeAndValidatePrintTicket">
      <MemberSignature Language="C#" Value="public System.Printing.ValidationResult MergeAndValidatePrintTicket (System.Printing.PrintTicket basePrintTicket, System.Printing.PrintTicket deltaPrintTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Printing.ValidationResult MergeAndValidatePrintTicket(class System.Printing.PrintTicket basePrintTicket, class System.Printing.PrintTicket deltaPrintTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Function MergeAndValidatePrintTicket (basePrintTicket As PrintTicket, deltaPrintTicket As PrintTicket) As ValidationResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::ValidationResult MergeAndValidatePrintTicket(System::Printing::PrintTicket ^ basePrintTicket, System::Printing::PrintTicket ^ deltaPrintTicket);" />
      <MemberSignature Language="F#" Value="member this.MergeAndValidatePrintTicket : System.Printing.PrintTicket * System.Printing.PrintTicket -&gt; System.Printing.ValidationResult" Usage="printQueue.MergeAndValidatePrintTicket (basePrintTicket, deltaPrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePrintTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="deltaPrintTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="basePrintTicket"><span data-ttu-id="17f64-545">第一個 Print Ticket。</span><span class="sxs-lookup"><span data-stu-id="17f64-545">The first print ticket.</span></span></param>
        <param name="deltaPrintTicket"><span data-ttu-id="17f64-546">第二個 Print Ticket。</span><span class="sxs-lookup"><span data-stu-id="17f64-546">The second print ticket.</span></span> <span data-ttu-id="17f64-547">這可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-547">This can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="17f64-548">會合併兩個 <see cref="T:System.Printing.PrintTicket" /> 並保證得出有效的 <see cref="T:System.Printing.PrintTicket" />，且不會要求印表機不支援的任何列印功能。</span><span class="sxs-lookup"><span data-stu-id="17f64-548">Merges two <see cref="T:System.Printing.PrintTicket" />s and guarantees that the resulting <see cref="T:System.Printing.PrintTicket" /> is valid and does not ask for any printing functionality that the printer does not support.</span></span></summary>
        <returns><span data-ttu-id="17f64-549"><see cref="T:System.Printing.ValidationResult" />，包含合併的 <see cref="T:System.Printing.PrintTicket" />，以及是否需要變更其任何設定以確保可用性的指示。</span><span class="sxs-lookup"><span data-stu-id="17f64-549">A <see cref="T:System.Printing.ValidationResult" /> that includes the merged <see cref="T:System.Printing.PrintTicket" /> and an indication of whether any of its settings had to be changed to guarantee viability.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-550">方法會產生基本的可行的列印票證;也就是說，不會要求列印功能的票證印表機不支援。</span><span class="sxs-lookup"><span data-stu-id="17f64-550">The method produces a viable print ticket; that is, a ticket that does not request printing features that the printer does not support.</span></span> <span data-ttu-id="17f64-551">方法首先會驗證對兩個輸入 print ticket[列印結構描述](https://go.microsoft.com/fwlink/?LinkId=186397)。</span><span class="sxs-lookup"><span data-stu-id="17f64-551">The method first validates the two input print tickets against the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span> <span data-ttu-id="17f64-552">如果其中一個無效，則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="17f64-552">If either is invalid, an exception is thrown.</span></span>  
  
 <span data-ttu-id="17f64-553">接著會合併兩個的票證。</span><span class="sxs-lookup"><span data-stu-id="17f64-553">The two tickets are then merged.</span></span> <span data-ttu-id="17f64-554">如果它們有不同的值，在特定屬性然後產生的合併的票證一開始會使用值差異票證。</span><span class="sxs-lookup"><span data-stu-id="17f64-554">If they have different values for a particular property then the resulting merged ticket initially uses the value of the delta ticket.</span></span>  
  
 <span data-ttu-id="17f64-555">合併的票證會再檢查印表機的實際功能。</span><span class="sxs-lookup"><span data-stu-id="17f64-555">The merged ticket is then checked against the actual capabilities of the printer.</span></span> <span data-ttu-id="17f64-556">如果有任何在票證中的設定都與印表機的功能不相容，則印表機驅動程式所使用的任何邏輯變更這些設定，它想。</span><span class="sxs-lookup"><span data-stu-id="17f64-556">If any settings in the ticket are incompatible with the printer's capabilities, then the printer driver changes those settings by using whatever logic it wants.</span></span> <span data-ttu-id="17f64-557">一般而言，它會替代設定的使用者或印表機的預設值。</span><span class="sxs-lookup"><span data-stu-id="17f64-557">Typically, it substitutes the user's or printer's default value for the setting.</span></span> <span data-ttu-id="17f64-558">它的驅動程式來源的替代值不是做為相同的票證`basePrintTicket`，則合併的票證可能有一些設定不同於這兩個輸入的票證。</span><span class="sxs-lookup"><span data-stu-id="17f64-558">It the driver's source of substitute values is not the same ticket as `basePrintTicket`, then the merged ticket might have some settings that are different from both of the input tickets.</span></span> <span data-ttu-id="17f64-559">如果印表機驅動程式已變更任何設定，則會回報這項事實<xref:System.Printing.ValidationResult.ConflictStatus%2A>屬性<xref:System.Printing.ValidationResult>。</span><span class="sxs-lookup"><span data-stu-id="17f64-559">If the printer driver has to change any settings then this fact is reported in the <xref:System.Printing.ValidationResult.ConflictStatus%2A> property of the <xref:System.Printing.ValidationResult>.</span></span>  
  
 <span data-ttu-id="17f64-560">合併並驗證為基礎的列印佇列的預設設定，您應該設定`basePrintTicket`要<xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>或<xref:System.Printing.PrintQueue.UserPrintTicket%2A>。</span><span class="sxs-lookup"><span data-stu-id="17f64-560">To merge and validate based on a print queue's default settings, you should set `basePrintTicket` to the <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> or the <xref:System.Printing.PrintQueue.UserPrintTicket%2A>.</span></span>  
  
 <span data-ttu-id="17f64-561">`deltaPrintTicket`參數可以是`null`，在此情況下`basePrintTicket`會進行驗證，檢查可用性，並傳回，可能變更。</span><span class="sxs-lookup"><span data-stu-id="17f64-561">The `deltaPrintTicket` parameter can be `null`, in which case the `basePrintTicket` is validated, checked for viability, and returned, possibly with changes.</span></span>  
  
 <span data-ttu-id="17f64-562">使用的這個多載<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>，這兩個`deltaPrintTicket`並<xref:System.Printing.PrintTicket>中<xref:System.Printing.ValidationResult>傳回具有工作的整個範圍。</span><span class="sxs-lookup"><span data-stu-id="17f64-562">With this overload of <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>, both the `deltaPrintTicket` and the <xref:System.Printing.PrintTicket> in the <xref:System.Printing.ValidationResult> that is returned have job wide scope.</span></span> <span data-ttu-id="17f64-563">若要指定不同的範圍，請使用這個方法的其他多載。</span><span class="sxs-lookup"><span data-stu-id="17f64-563">To specify a different scope use the other overload of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-564">下列範例示範如何使用這個方法來合併兩個列印票證，並回應<xref:System.Printing.ValidationResult>所傳回。</span><span class="sxs-lookup"><span data-stu-id="17f64-564">The following example shows how to use this method to merge two print tickets and respond to the <xref:System.Printing.ValidationResult> that is returned.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17f64-565">至少一個輸入 Print Ticket 無效。</span><span class="sxs-lookup"><span data-stu-id="17f64-565">At least one of the input print tickets is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f64-566"><paramref name="basePrintTicket" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-566">The <paramref name="basePrintTicket" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="17f64-567">驗證、合併和可用性檢查作業失敗。</span><span class="sxs-lookup"><span data-stu-id="17f64-567">The validation, merger, and viability checking operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MergeAndValidatePrintTicket">
      <MemberSignature Language="C#" Value="public System.Printing.ValidationResult MergeAndValidatePrintTicket (System.Printing.PrintTicket basePrintTicket, System.Printing.PrintTicket deltaPrintTicket, System.Printing.PrintTicketScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Printing.ValidationResult MergeAndValidatePrintTicket(class System.Printing.PrintTicket basePrintTicket, class System.Printing.PrintTicket deltaPrintTicket, valuetype System.Printing.PrintTicketScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function MergeAndValidatePrintTicket (basePrintTicket As PrintTicket, deltaPrintTicket As PrintTicket, scope As PrintTicketScope) As ValidationResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Printing::ValidationResult MergeAndValidatePrintTicket(System::Printing::PrintTicket ^ basePrintTicket, System::Printing::PrintTicket ^ deltaPrintTicket, System::Printing::PrintTicketScope scope);" />
      <MemberSignature Language="F#" Value="member this.MergeAndValidatePrintTicket : System.Printing.PrintTicket * System.Printing.PrintTicket * System.Printing.PrintTicketScope -&gt; System.Printing.ValidationResult" Usage="printQueue.MergeAndValidatePrintTicket (basePrintTicket, deltaPrintTicket, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePrintTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="deltaPrintTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="scope" Type="System.Printing.PrintTicketScope" />
      </Parameters>
      <Docs>
        <param name="basePrintTicket"><span data-ttu-id="17f64-568">第一個 Print Ticket。</span><span class="sxs-lookup"><span data-stu-id="17f64-568">The first print ticket.</span></span></param>
        <param name="deltaPrintTicket"><span data-ttu-id="17f64-569">第二個 Print Ticket。</span><span class="sxs-lookup"><span data-stu-id="17f64-569">The second print ticket.</span></span> <span data-ttu-id="17f64-570">這可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-570">This can be <see langword="null" />.</span></span></param>
        <param name="scope"><span data-ttu-id="17f64-571">這個值表示 <paramref name="deltaPrintTicket" /> 範圍和 <see cref="T:System.Printing.ValidationResult" /> 中傳回之 Print Ticket 的範圍是一個頁面、一個文件，還是整個工作。</span><span class="sxs-lookup"><span data-stu-id="17f64-571">A value indicating whether the scope of <paramref name="deltaPrintTicket" />, and the scope of the print ticket returned in the <see cref="T:System.Printing.ValidationResult" />, is a page, a document, or the whole job.</span></span></param>
        <summary><span data-ttu-id="17f64-572">合併兩個 <see cref="T:System.Printing.PrintTicket" /> 並保證得出有效的 <see cref="T:System.Printing.PrintTicket" />，且不會要求印表機不支援的任何列印功能，並限制在指定的範圍內。</span><span class="sxs-lookup"><span data-stu-id="17f64-572">Merges two <see cref="T:System.Printing.PrintTicket" />s and guarantees that the resulting <see cref="T:System.Printing.PrintTicket" /> is valid, does not ask for any printing functionality that the printer does not support, and is limited to the specified scope.</span></span></summary>
        <returns><span data-ttu-id="17f64-573"><see cref="T:System.Printing.ValidationResult" />，包含合併的 <see cref="T:System.Printing.PrintTicket" />，以及是否需要變更其任何設定以確保可用性的指示。</span><span class="sxs-lookup"><span data-stu-id="17f64-573">A <see cref="T:System.Printing.ValidationResult" /> that includes the merged <see cref="T:System.Printing.PrintTicket" /> and an indication of whether any of its settings had to be changed to guarantee viability.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-574">方法會產生基本的可行的列印票證;也就是說，不會要求列印功能的票證印表機不支援。</span><span class="sxs-lookup"><span data-stu-id="17f64-574">The method produces a viable print ticket; that is, a ticket that does not request printing features that the printer does not support.</span></span> <span data-ttu-id="17f64-575">方法首先會驗證對兩個輸入 print ticket[列印結構描述](https://go.microsoft.com/fwlink/?LinkId=186397)。</span><span class="sxs-lookup"><span data-stu-id="17f64-575">The method first validates the two input print tickets against the [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397).</span></span> <span data-ttu-id="17f64-576">如果其中一個無效，則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="17f64-576">If either is invalid, an exception is thrown.</span></span>  
  
 <span data-ttu-id="17f64-577">接著會合併兩個的票證。</span><span class="sxs-lookup"><span data-stu-id="17f64-577">The two tickets are then merged.</span></span> <span data-ttu-id="17f64-578">如果它們有不同的值，在特定屬性然後產生的合併的票證一開始會使用值差異票證。</span><span class="sxs-lookup"><span data-stu-id="17f64-578">If they have different values for a particular property then the resulting merged ticket initially uses the value of the delta ticket.</span></span>  
  
 <span data-ttu-id="17f64-579">合併的票證會再檢查印表機的實際功能。</span><span class="sxs-lookup"><span data-stu-id="17f64-579">The merged ticket is then checked against the actual capabilities of the printer.</span></span> <span data-ttu-id="17f64-580">如果有任何在票證中的設定都與印表機的功能不相容，則印表機驅動程式所使用的任何邏輯變更這些設定，它想。</span><span class="sxs-lookup"><span data-stu-id="17f64-580">If any settings in the ticket are incompatible with the printer's capabilities, then the printer driver changes those settings by using whatever logic it wants.</span></span> <span data-ttu-id="17f64-581">一般而言，它會替代設定的使用者或印表機的預設值。</span><span class="sxs-lookup"><span data-stu-id="17f64-581">Typically, it substitutes the user's or printer's default value for the setting.</span></span> <span data-ttu-id="17f64-582">它的驅動程式來源的替代值不是做為相同的票證`basePrintTicket`，則合併的票證可能有一些設定不同於這兩個輸入的票證。</span><span class="sxs-lookup"><span data-stu-id="17f64-582">It the driver's source of substitute values is not the same ticket as `basePrintTicket`, then the merged ticket might have some settings that are different from both of the input tickets.</span></span> <span data-ttu-id="17f64-583">如果印表機驅動程式已變更任何設定，則會回報這項事實<xref:System.Printing.ValidationResult.ConflictStatus%2A>屬性<xref:System.Printing.ValidationResult>。</span><span class="sxs-lookup"><span data-stu-id="17f64-583">If the printer driver has to change any settings then this fact is reported in the <xref:System.Printing.ValidationResult.ConflictStatus%2A> property of the <xref:System.Printing.ValidationResult>.</span></span>  
  
 <span data-ttu-id="17f64-584">合併並驗證為基礎的列印佇列的預設設定，您應該設定`basePrintTicket`要<xref:System.Printing.PrintQueue.DefaultPrintTicket%2A>或<xref:System.Printing.PrintQueue.UserPrintTicket%2A>。</span><span class="sxs-lookup"><span data-stu-id="17f64-584">To merge and validate based on a print queue's default settings, you should set `basePrintTicket` to the <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> or the <xref:System.Printing.PrintQueue.UserPrintTicket%2A>.</span></span>  
  
 <span data-ttu-id="17f64-585">`deltaPrintTicket`參數可以是`null`，在此情況下`basePrintTicket`會進行驗證，檢查可用性，並傳回，可能變更。</span><span class="sxs-lookup"><span data-stu-id="17f64-585">The `deltaPrintTicket` parameter can be `null`, in which case the `basePrintTicket` is validated, checked for viability, and returned, possibly with changes.</span></span>  
  
 <span data-ttu-id="17f64-586">如果`scope`作業，則傳回之 print ticket<xref:System.Printing.ValidationResult>可以包含[列印結構描述](https://go.microsoft.com/fwlink/?LinkId=186397)作業、 文件和頁面名稱前置詞的參數。</span><span class="sxs-lookup"><span data-stu-id="17f64-586">If the `scope` is a job, then the print ticket returned in the <xref:System.Printing.ValidationResult> can include [Print Schema](https://go.microsoft.com/fwlink/?LinkId=186397) parameters with Job, Document, and Page prefixes.</span></span> <span data-ttu-id="17f64-587">如果`scope`文件，則在每個作業設定`deltaPrintTicket`會被忽略，並傳回的票證可以包含與文件的參數和頁面的前置詞。</span><span class="sxs-lookup"><span data-stu-id="17f64-587">If the `scope` is a document, then per-job settings in `deltaPrintTicket` are ignored, and the returned ticket can include parameters with Document and Page prefixes.</span></span> <span data-ttu-id="17f64-588">如果`scope` 頁面上，則每個作業設定而且中的每個文件設定`deltaPrintTicket`會被忽略，並傳回的票證時，可使用頁面前置詞的參數。</span><span class="sxs-lookup"><span data-stu-id="17f64-588">If the `scope` is a page, then the per-job settings and the per-document settings in `deltaPrintTicket` are ignored, and the returned ticket can include parameters with only the Page prefix.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17f64-589">至少一個輸入 Print Ticket 無效。</span><span class="sxs-lookup"><span data-stu-id="17f64-589">At least one of the input print tickets is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f64-590"><paramref name="basePrintTicket" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-590">The <paramref name="basePrintTicket" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="17f64-591"><paramref name="scope" /> 參數沒有有效的 <see cref="T:System.Printing.PrintTicketScope" /> 值。</span><span class="sxs-lookup"><span data-stu-id="17f64-591">The <paramref name="scope" /> parameter does not have a valid <see cref="T:System.Printing.PrintTicketScope" /> value.</span></span></exception>
        <exception cref="T:System.Printing.PrintQueueException"><span data-ttu-id="17f64-592">驗證、合併和可用性檢查作業失敗。</span><span class="sxs-lookup"><span data-stu-id="17f64-592">The validation, merger, and viability checking operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override sealed string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Printing.PrintQueue.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-593">取得或設定列印佇列的名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-593">Gets or sets the print queue's name.</span></span></summary>
        <value><span data-ttu-id="17f64-594">列印佇列的名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-594">The name of the print queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-595"><xref:System.Printing.PrintQueue>物件也有唯讀<xref:System.Printing.PrintQueue.FullName%2A>屬性，且寫入<xref:System.Printing.PrintQueue.ShareName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="17f64-595">The <xref:System.Printing.PrintQueue> object also has a read only <xref:System.Printing.PrintQueue.FullName%2A> property and a writeable <xref:System.Printing.PrintQueue.ShareName%2A> property.</span></span>  
  
 <span data-ttu-id="17f64-596">在本機列印伺服器上的佇列<xref:System.Printing.PrintQueue.Name%2A>和<xref:System.Printing.PrintQueue.FullName%2A>都相同。</span><span class="sxs-lookup"><span data-stu-id="17f64-596">For queues on the local print server, <xref:System.Printing.PrintQueue.Name%2A> and <xref:System.Printing.PrintQueue.FullName%2A> are the same.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-597">下列範例示範如何使用這個屬性來列出可用的列印佇列的子集。</span><span class="sxs-lookup"><span data-stu-id="17f64-597">The following example shows how to use this property to list a subset of available print queues.</span></span>  
  
 [!code-cpp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/CPP/Program.cpp#listsubsetofprintqueues)]
 [!code-csharp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/CSharp/Program.cs#listsubsetofprintqueues)]
 [!code-vb[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EnumerateSubsetOfPrintQueues/visualbasic/program.vb#listsubsetofprintqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedUserIntervention">
      <MemberSignature Language="C#" Value="public bool NeedUserIntervention { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedUserIntervention" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.NeedUserIntervention" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NeedUserIntervention As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NeedUserIntervention { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NeedUserIntervention : bool" Usage="System.Printing.PrintQueue.NeedUserIntervention" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-598">取得值，這個值表示印表機是否需要使用者互動。</span><span class="sxs-lookup"><span data-stu-id="17f64-598">Gets a value that indicates whether the printer needs the attention of a human being.</span></span></summary>
        <value><span data-ttu-id="17f64-599">如果印表機需要使用者互動則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-599"><see langword="true" /> if the printer needs human attention; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-600">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-600">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-601">下列範例顯示如何使用此屬性作為調查可能的錯誤狀態的所有印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-601">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueproperties)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueproperties)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfJobs">
      <MemberSignature Language="C#" Value="public virtual int NumberOfJobs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfJobs" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.NumberOfJobs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfJobs As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfJobs { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfJobs : int" Usage="System.Printing.PrintQueue.NumberOfJobs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-602">取得列印佇列中排列的工作總數。</span><span class="sxs-lookup"><span data-stu-id="17f64-602">Gets the total number of jobs lined up in the print queue.</span></span></summary>
        <value><span data-ttu-id="17f64-603">佇列中的工作數目。</span><span class="sxs-lookup"><span data-stu-id="17f64-603">The number of jobs in the queue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PagePunt">
      <MemberSignature Language="C#" Value="public bool PagePunt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PagePunt" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.PagePunt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagePunt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PagePunt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.PagePunt : bool" Usage="System.Printing.PrintQueue.PagePunt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-604">取得值，這個值表示是否印表機無法列印目前頁。</span><span class="sxs-lookup"><span data-stu-id="17f64-604">Gets a value that indicates whether the printer is unable to print the current page.</span></span></summary>
        <value><span data-ttu-id="17f64-605">如果印表機無法列印目前頁則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-605"><see langword="true" /> if the printer is unable to print the current page; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-606">如果印表機不支援這個意義，訊號，則屬性一律會是`false`。</span><span class="sxs-lookup"><span data-stu-id="17f64-606">If the printer does not support a signal with this meaning, then the property is always `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public virtual void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Pause();" />
      <MemberSignature Language="F#" Value="abstract member Pause : unit -&gt; unit&#xA;override this.Pause : unit -&gt; unit" Usage="printQueue.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17f64-607">暫停列印佇列。</span><span class="sxs-lookup"><span data-stu-id="17f64-607">Pauses the print queue.</span></span> <span data-ttu-id="17f64-608">它會保持暫停，直到執行 <see cref="M:System.Printing.PrintQueue.Resume" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-608">It remains paused until <see cref="M:System.Printing.PrintQueue.Resume" /> is executed.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="17f64-609">印表機無法暫停。</span><span class="sxs-lookup"><span data-stu-id="17f64-609">The printer cannot be paused.</span></span></exception>
        <altmember cref="M:System.Printing.PrintQueue.Resume" />
      </Docs>
    </Member>
    <Member MemberName="PrintingIsCancelled">
      <MemberSignature Language="C#" Value="public bool PrintingIsCancelled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintingIsCancelled" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.PrintingIsCancelled" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintingIsCancelled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintingIsCancelled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PrintingIsCancelled : bool with get, set" Usage="System.Printing.PrintQueue.PrintingIsCancelled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-610">取得值，這個值表示是否要取消目前的列印工作。</span><span class="sxs-lookup"><span data-stu-id="17f64-610">Gets or sets a value that indicates whether the current print job is being cancelled.</span></span></summary>
        <value><span data-ttu-id="17f64-611">如果要取消列印工作則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-611"><see langword="true" /> if the print job is being cancelled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public virtual int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Priority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : int with get, set" Usage="System.Printing.PrintQueue.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-612">取得或設定此列印佇列相對於其他列印佇列的優先權，其他列印佇列與此佇列裝載於同一列印伺服器上並使用相同的實體印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-612">Gets or sets the priority of the print queue relative to other print queues that are hosted by the same print server and that use the same physical printer.</span></span></summary>
        <value><span data-ttu-id="17f64-613">列印佇列的優先權。</span><span class="sxs-lookup"><span data-stu-id="17f64-613">The priority for the print queue.</span></span> <span data-ttu-id="17f64-614">可能值的範圍為 1 至 99。</span><span class="sxs-lookup"><span data-stu-id="17f64-614">Possible values are from 1 through 99.</span></span> <span data-ttu-id="17f64-615">預設為 1。</span><span class="sxs-lookup"><span data-stu-id="17f64-615">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-616">比較此屬性與<xref:System.Printing.PrintQueue.DefaultPriority%2A>是關於在佇列中的列印工作的相對優先權的屬性。</span><span class="sxs-lookup"><span data-stu-id="17f64-616">Contrast this property with the <xref:System.Printing.PrintQueue.DefaultPriority%2A> property which is about the relative priority of print jobs in the queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="public virtual void Purge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Purge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Purge" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Purge ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Purge();" />
      <MemberSignature Language="F#" Value="abstract member Purge : unit -&gt; unit&#xA;override this.Purge : unit -&gt; unit" Usage="printQueue.Purge " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17f64-617">移除列印佇列中的所有工作。</span><span class="sxs-lookup"><span data-stu-id="17f64-617">Removes all the jobs in the print queue.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="17f64-618">部分列印工作無法從佇列中移除。</span><span class="sxs-lookup"><span data-stu-id="17f64-618">Some print jobs could not be removed from the queue.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QueueAttributes">
      <MemberSignature Language="C#" Value="public System.Printing.PrintQueueAttributes QueueAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Printing.PrintQueueAttributes QueueAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueueAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueueAttributes As PrintQueueAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintQueueAttributes QueueAttributes { System::Printing::PrintQueueAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.QueueAttributes : System.Printing.PrintQueueAttributes" Usage="System.Printing.PrintQueue.QueueAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueueAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-619">取得列印佇列的屬性。</span><span class="sxs-lookup"><span data-stu-id="17f64-619">Gets the properties of the print queue.</span></span></summary>
        <value><span data-ttu-id="17f64-620"><see cref="T:System.Printing.PrintQueueAttributes" /> 列舉值的位元組合。</span><span class="sxs-lookup"><span data-stu-id="17f64-620">A bitwise combination of the <see cref="T:System.Printing.PrintQueueAttributes" /> enumeration values.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueDriver">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintDriver QueueDriver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintDriver QueueDriver" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueueDriver" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QueueDriver As PrintDriver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintDriver ^ QueueDriver { System::Printing::PrintDriver ^ get(); void set(System::Printing::PrintDriver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueueDriver : System.Printing.PrintDriver with get, set" Usage="System.Printing.PrintQueue.QueueDriver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintDriver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-621">取得或設定佇列的印表機驅動程式。</span><span class="sxs-lookup"><span data-stu-id="17f64-621">Gets or sets the printer driver for the queue.</span></span></summary>
        <value><span data-ttu-id="17f64-622">佇列使用的 <see cref="T:System.Printing.PrintDriver" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-622">The <see cref="T:System.Printing.PrintDriver" /> that the queue uses.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueuePort">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintPort QueuePort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintPort QueuePort" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueuePort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QueuePort As PrintPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintPort ^ QueuePort { System::Printing::PrintPort ^ get(); void set(System::Printing::PrintPort ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueuePort : System.Printing.PrintPort with get, set" Usage="System.Printing.PrintQueue.QueuePort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintPort</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-623">取得或設定佇列使用的通訊埠。</span><span class="sxs-lookup"><span data-stu-id="17f64-623">Gets or sets the port that the queue uses.</span></span></summary>
        <value><span data-ttu-id="17f64-624">指派給列印佇列的 <see cref="T:System.Printing.PrintPort" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-624">The <see cref="T:System.Printing.PrintPort" /> that is assigned to the print queue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueuePrintProcessor">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintProcessor QueuePrintProcessor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintProcessor QueuePrintProcessor" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueuePrintProcessor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QueuePrintProcessor As PrintProcessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintProcessor ^ QueuePrintProcessor { System::Printing::PrintProcessor ^ get(); void set(System::Printing::PrintProcessor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueuePrintProcessor : System.Printing.PrintProcessor with get, set" Usage="System.Printing.PrintQueue.QueuePrintProcessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintProcessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-625">取得或設定佇列使用的列印處理器。</span><span class="sxs-lookup"><span data-stu-id="17f64-625">Gets or sets the print processor that the queue uses.</span></span></summary>
        <value><span data-ttu-id="17f64-626">佇列使用的 <see cref="T:System.Printing.PrintProcessor" />，例如 WinPrint 或 ModiPrint。</span><span class="sxs-lookup"><span data-stu-id="17f64-626">The <see cref="T:System.Printing.PrintProcessor" /> that the queue uses, such as WinPrint or ModiPrint.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueStatus">
      <MemberSignature Language="C#" Value="public System.Printing.PrintQueueStatus QueueStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Printing.PrintQueueStatus QueueStatus" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.QueueStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueueStatus As PrintQueueStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintQueueStatus QueueStatus { System::Printing::PrintQueueStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.QueueStatus : System.Printing.PrintQueueStatus" Usage="System.Printing.PrintQueue.QueueStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueueStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-627">取得值，這個值表示印表機的狀態。</span><span class="sxs-lookup"><span data-stu-id="17f64-627">Gets a value that represents the status of the printer.</span></span> <span data-ttu-id="17f64-628">狀態包括「準備中」、「正在初始化」、「正在列印」及其他狀態。</span><span class="sxs-lookup"><span data-stu-id="17f64-628">These include "warming up," "initializing," "printing," and others.</span></span></summary>
        <value><span data-ttu-id="17f64-629">目前的 <see cref="T:System.Printing.PrintQueueStatus" /> 值。</span><span class="sxs-lookup"><span data-stu-id="17f64-629">The current <see cref="T:System.Printing.PrintQueueStatus" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="17f64-630">下列範例顯示如何使用此屬性作為調查可能的錯誤狀態的所有印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-630">The following example shows how to use this property as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#spottroubleusingqueueattributes)]
 [!code-csharp[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#spottroubleusingqueueattributes)]
 [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#spottroubleusingqueueattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberSignature Language="F#" Value="override this.Refresh : unit -&gt; unit" Usage="printQueue.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17f64-631">使用電腦上執行之印表機和列印佇列公用程式的值，更新 <see cref="T:System.Printing.PrintQueue" /> 的屬性。</span><span class="sxs-lookup"><span data-stu-id="17f64-631">Updates the properties of the <see cref="T:System.Printing.PrintQueue" /> object with values from the printer and the print queue utility that runs on the computer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-632">變更您的程式會以<xref:System.Printing.PrintQueue>物件的屬性時，遺失了<xref:System.Printing.PrintQueue.Refresh%2A>執行，除非它們已寫入的印表機和列印佇列<xref:System.Printing.PrintQueue.Commit%2A>。</span><span class="sxs-lookup"><span data-stu-id="17f64-632">Changes your program makes to a <xref:System.Printing.PrintQueue> object's properties are lost when <xref:System.Printing.PrintQueue.Refresh%2A> executes, unless they have been written to the printer and print queue with <xref:System.Printing.PrintQueue.Commit%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-633">下列範例顯示如何使用這個方法來調查可能的錯誤狀態的所有印表機。</span><span class="sxs-lookup"><span data-stu-id="17f64-633">The following example shows how to use this method as part of a survey all printers for possible error status.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#SurveyQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#surveyqueues)]
 [!code-csharp[PrinterStatusSurvey#SurveyQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#surveyqueues)]
 [!code-vb[PrinterStatusSurvey#SurveyQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#surveyqueues)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="17f64-634">部分屬性無法重新整理。</span><span class="sxs-lookup"><span data-stu-id="17f64-634">Some of the properties could not be refreshed.</span></span></exception>
        <altmember cref="M:System.Printing.PrintQueue.Commit" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public virtual void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintQueue.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Resume();" />
      <MemberSignature Language="F#" Value="abstract member Resume : unit -&gt; unit&#xA;override this.Resume : unit -&gt; unit" Usage="printQueue.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17f64-635">重新啟動已暫停的列印佇列。</span><span class="sxs-lookup"><span data-stu-id="17f64-635">Restarts a print queue that was paused.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="17f64-636">下列範例示範如何使用這個方法來繼續暫停的列印佇列。</span><span class="sxs-lookup"><span data-stu-id="17f64-636">The following example shows how to use this method to resume a paused print queue.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#handlepausedjob)]
 [!code-csharp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#handlepausedjob)]
 [!code-vb[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#handlepausedjob)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintSystemException"><span data-ttu-id="17f64-637">印表機無法繼續。</span><span class="sxs-lookup"><span data-stu-id="17f64-637">The printer cannot resume.</span></span></exception>
        <altmember cref="M:System.Printing.PrintQueue.Pause" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleCompletedJobsFirst">
      <MemberSignature Language="C#" Value="public bool ScheduleCompletedJobsFirst { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScheduleCompletedJobsFirst" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.ScheduleCompletedJobsFirst" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScheduleCompletedJobsFirst As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScheduleCompletedJobsFirst { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ScheduleCompletedJobsFirst : bool" Usage="System.Printing.PrintQueue.ScheduleCompletedJobsFirst" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-638">取得值，這個值表示印表機是否先列印已完成多工緩衝處理程序的工作，再列印尚未完成多工緩衝處理的工作，即使後者先進入佇列或具有更高優先權也是如此。</span><span class="sxs-lookup"><span data-stu-id="17f64-638">Gets a value that indicates whether the printer prints jobs that have completed the spooling process before jobs that have not fully spooled even if the latter entered the queue first or have a higher priority.</span></span></summary>
        <value><span data-ttu-id="17f64-639">如果印表機先列印已完成多工緩衝處理程序的工作，再列印尚未完成多工緩衝處理的工作，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-639"><see langword="true" /> if the printer prints jobs that have completed the spooling process before jobs that have not fully spooled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparatorFile">
      <MemberSignature Language="C#" Value="public virtual string SeparatorFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SeparatorFile" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.SeparatorFile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SeparatorFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SeparatorFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorFile : string with get, set" Usage="System.Printing.PrintQueue.SeparatorFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-640">取得或設定要插入每個列印工作開頭之檔案的路徑和檔名。</span><span class="sxs-lookup"><span data-stu-id="17f64-640">Gets or sets the path and file name of a file that is inserted at the beginning of each print job.</span></span></summary>
        <value><span data-ttu-id="17f64-641">分隔檔的路徑和檔名。</span><span class="sxs-lookup"><span data-stu-id="17f64-641">The path and file name of the separator file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-642">這通常是用來輕鬆地分隔不同的列印工作的輸出的單一頁面檔案。</span><span class="sxs-lookup"><span data-stu-id="17f64-642">This is normally a single-page file used to make it easier to separate the output of different print jobs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShareName">
      <MemberSignature Language="C#" Value="public virtual string ShareName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShareName" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.ShareName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShareName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ShareName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShareName : string with get, set" Usage="System.Printing.PrintQueue.ShareName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-643">取得或設定印表機名稱，在網路上共用該印表機時使用者會看到這個名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-643">Gets or sets a name for the printer that is seen by users on the network when it is shared.</span></span></summary>
        <value><span data-ttu-id="17f64-644">共用印表機的公用 (Public) 名稱。</span><span class="sxs-lookup"><span data-stu-id="17f64-644">The public name of a shared printer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-645"><xref:System.Printing.PrintQueue>物件也有唯讀<xref:System.Printing.PrintQueue.FullName%2A>屬性，且寫入<xref:System.Printing.PrintQueue.Name%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="17f64-645">The <xref:System.Printing.PrintQueue> object also has a read only <xref:System.Printing.PrintQueue.FullName%2A> property and a writeable <xref:System.Printing.PrintQueue.Name%2A> property.</span></span> <span data-ttu-id="17f64-646">對於本機列印伺服器上的佇列，這些屬性會有相同的值。</span><span class="sxs-lookup"><span data-stu-id="17f64-646">For queues on the local print server, these properties have the same value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTimeOfDay">
      <MemberSignature Language="C#" Value="public virtual int StartTimeOfDay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartTimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.StartTimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StartTimeOfDay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int StartTimeOfDay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StartTimeOfDay : int with get, set" Usage="System.Printing.PrintQueue.StartTimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-647">取得或設定一天中印表機開始列印工作的最早時間，以午夜 Coordinated Universal Time (UTC，亦稱為格林威治標準時間 (Greenwich Mean Time，GMT)) 之後經過的分鐘數表示。</span><span class="sxs-lookup"><span data-stu-id="17f64-647">Gets or sets the earliest time of day, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the printer will print a job.</span></span></summary>
        <value><span data-ttu-id="17f64-648">一天中印表機可用的最早時間，以午夜 (UTC) 之後經過的分鐘數表示。</span><span class="sxs-lookup"><span data-stu-id="17f64-648">The time of day that the printer first becomes available, expressed as the number of minutes after midnight (UTC).</span></span> <span data-ttu-id="17f64-649">最大值為 1439。</span><span class="sxs-lookup"><span data-stu-id="17f64-649">The maximum value is 1439.</span></span> <span data-ttu-id="17f64-650">當使用 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] [新增印表機精靈] 第一次安裝印表機時，印表機預設為隨時可用，並且此屬性在所有時區均會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="17f64-650">When a printer is first installed by using the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] Add Printer Wizard, the printer defaults to being available all the time, and this property returns 0 in all time zones.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-651">如果您不在 UTC 時區中，您必須加入或減去來設定或取得您的時區的正確時間的 60 的倍數。</span><span class="sxs-lookup"><span data-stu-id="17f64-651">If you are not in the UTC time zone, you must add or subtract multiples of 60 to set or get the correct time for your time zone.</span></span> <span data-ttu-id="17f64-652">例如，如果您是在太平洋時間區域的北美洲與日光節約時間為非作用中，您的當地時間會早於 UTC 的 8 小時。</span><span class="sxs-lookup"><span data-stu-id="17f64-652">For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC.</span></span> <span data-ttu-id="17f64-653">若要設定<xref:System.Printing.PrintQueue.StartTimeOfDay%2A>12 AM 的時區，您將它設定為上午 8 點 UTC，這是的 480 （= 8 \* 60）。</span><span class="sxs-lookup"><span data-stu-id="17f64-653">To set <xref:System.Printing.PrintQueue.StartTimeOfDay%2A> to 12 AM in your time zone, you set it to 8 AM UTC, which is 480 (= 8 \* 60).</span></span> <span data-ttu-id="17f64-654">您也必須記得，時間為 24 小時後的零彙總 (也就是; 1439 分鐘之後)。</span><span class="sxs-lookup"><span data-stu-id="17f64-654">You also must remember that time rolls over to zero after 24 hours (that is; after the 1439th minute).</span></span> <span data-ttu-id="17f64-655">將它設定為 下午 6 點在您的時區中，您將它設定為上午 2 點 UTC，這是的 120 （= 2 \* 60）。</span><span class="sxs-lookup"><span data-stu-id="17f64-655">To set it to 6 PM in your time zone, you set it to 2 AM UTC, which is 120 (= 2 \* 60).</span></span> <span data-ttu-id="17f64-656">請參閱<xref:System.TimeZone>， <xref:System.TimeSpan>，和<xref:System.DateTime>操作方法很有幫助的時區的類別。</span><span class="sxs-lookup"><span data-stu-id="17f64-656">See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> classes for helpful time zone manipulating methods.</span></span>  
  
 <span data-ttu-id="17f64-657">如果永遠可用的印表機，則這個屬性會傳回 0 所有時區的時間。</span><span class="sxs-lookup"><span data-stu-id="17f64-657">If the printer is always available, then this property returns 0 in all time zones.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-658">下列範例示範如何使用這個屬性來判斷印表機是否可在目前的時間。</span><span class="sxs-lookup"><span data-stu-id="17f64-658">The following example shows how to use this property to determine whether a printer is available at the present time.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#usingstartanduntiltimes)]
 [!code-csharp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#usingstartanduntiltimes)]
 [!code-vb[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#usingstartanduntiltimes)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Printing.PrintQueue.UntilTimeOfDay" />
      </Docs>
    </Member>
    <Member MemberName="UntilTimeOfDay">
      <MemberSignature Language="C#" Value="public virtual int UntilTimeOfDay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UntilTimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.UntilTimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UntilTimeOfDay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UntilTimeOfDay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UntilTimeOfDay : int with get, set" Usage="System.Printing.PrintQueue.UntilTimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-659">取得或設定一天中印表機列印工作的最晚時間，以午夜 Coordinated Universal Time (UTC，亦稱為格林威治標準時間 (Greenwich Mean Time，GMT)) 之後經過的分鐘數表示。</span><span class="sxs-lookup"><span data-stu-id="17f64-659">Gets or sets the latest time, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the printer will print a job.</span></span></summary>
        <value><span data-ttu-id="17f64-660">一天中印表機不再可用的時間，以午夜 (UTC) 之後經過的分鐘數表示。</span><span class="sxs-lookup"><span data-stu-id="17f64-660">The time of day that the printer is no longer available, expressed as the number of minutes after midnight (UTC).</span></span> <span data-ttu-id="17f64-661">最大值為 1439。</span><span class="sxs-lookup"><span data-stu-id="17f64-661">The maximum value is 1439.</span></span> <span data-ttu-id="17f64-662">當使用 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] [新增印表機精靈] 第一次安裝印表機時，印表機預設為隨時可用，並且此屬性在所有時區均會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="17f64-662">When a printer is first installed by using the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] Add Printer Wizard, the printer defaults to being available all the time, and this property returns 0 in all time zones.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-663">如果您不在 UTC 時區中，您必須加入或減去來設定或取得您的時區的正確時間的 60 的倍數。</span><span class="sxs-lookup"><span data-stu-id="17f64-663">If you are not in the UTC time zone, you must add or subtract multiples of 60 to set or get the correct time for your time zone.</span></span> <span data-ttu-id="17f64-664">例如，如果您是在太平洋時間區域的北美洲與日光節約時間為非作用中，您的當地時間會早於 UTC 的 8 小時。</span><span class="sxs-lookup"><span data-stu-id="17f64-664">For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC.</span></span> <span data-ttu-id="17f64-665">若要設定<xref:System.Printing.PrintQueue.UntilTimeOfDay%2A>12 AM 的時區，您將它設定為上午 8 點 UTC，這是的 480 （= 8 \* 60）。</span><span class="sxs-lookup"><span data-stu-id="17f64-665">To set <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A> to 12 AM in your time zone, you set it to 8 AM UTC, which is 480 (= 8 \* 60).</span></span> <span data-ttu-id="17f64-666">您也必須記得該時間彙總在第 24 小時 （1439 分鐘） 後的零。</span><span class="sxs-lookup"><span data-stu-id="17f64-666">You also must remember that time rolls over to zero after the 24th hour (the 1439th minute).</span></span> <span data-ttu-id="17f64-667">將它設定為 下午 6 點在您的時區中，您將它設定為上午 2 點 UTC，這是的 120 （= 2 \* 60）。</span><span class="sxs-lookup"><span data-stu-id="17f64-667">To set it to 6 PM in your time zone, you set it to 2 AM UTC, which is 120 (= 2 \* 60).</span></span> <span data-ttu-id="17f64-668">請參閱<xref:System.TimeZone>， <xref:System.TimeSpan>，和<xref:System.DateTime>操作方法很有幫助的時區的類別。</span><span class="sxs-lookup"><span data-stu-id="17f64-668">See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> classes for helpful time zone manipulating methods.</span></span>  
  
 <span data-ttu-id="17f64-669">如果永遠可用的印表機，則這個屬性會傳回 0 所有時區的時間。</span><span class="sxs-lookup"><span data-stu-id="17f64-669">If the printer is always available, then this property returns 0 in all time zones.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-670">下列範例示範如何使用這個屬性來判斷印表機是否可在目前的時間。</span><span class="sxs-lookup"><span data-stu-id="17f64-670">The following example shows how to use this property to determine whether a printer is available at the present time.</span></span>  
  
 [!code-cpp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/cpp/VS_Snippets_Wpf/PrinterStatusSurvey/CPP/Program.cpp#usingstartanduntiltimes)]
 [!code-csharp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/csharp/VS_Snippets_Wpf/PrinterStatusSurvey/CSharp/Program.cs#usingstartanduntiltimes)]
 [!code-vb[PrinterStatusSurvey#UsingStartAndUntilTimes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrinterStatusSurvey/visualbasic/program.vb#usingstartanduntiltimes)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Printing.PrintQueue.StartTimeOfDay" />
      </Docs>
    </Member>
    <Member MemberName="UserPrintTicket">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintTicket UserPrintTicket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintTicket UserPrintTicket" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintQueue.UserPrintTicket" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UserPrintTicket As PrintTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintTicket ^ UserPrintTicket { System::Printing::PrintTicket ^ get(); void set(System::Printing::PrintTicket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserPrintTicket : System.Printing.PrintTicket with get, set" Usage="System.Printing.PrintQueue.UserPrintTicket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintTicket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f64-671">取得或設定目前使用者的預設 <see cref="T:System.Printing.PrintTicket" /> 物件，這個物件包含列印工作的詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="17f64-671">Gets or sets the current user's default <see cref="T:System.Printing.PrintTicket" /> object which contains detailed information about the print job.</span></span></summary>
        <value><span data-ttu-id="17f64-672">目前使用者的 <see cref="T:System.Printing.PrintTicket" />，如果尚未指定使用者 <see cref="T:System.Printing.PrintTicket" /> 則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="17f64-672">The <see cref="T:System.Printing.PrintTicket" /> for the current user, or <see langword="null" /> if a user <see cref="T:System.Printing.PrintTicket" /> has not been specified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f64-673">每個使用者可以有自己的預設<xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="17f64-673">Each user can have his or her own default <xref:System.Printing.PrintTicket>.</span></span>  
  
 <span data-ttu-id="17f64-674">這個屬性可以是 `null`。</span><span class="sxs-lookup"><span data-stu-id="17f64-674">This property can be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f64-675">下列範例示範如何合併兩個列印票證時可以使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="17f64-675">The following example shows how to use this property while merging two print tickets.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintQueue.DefaultPrintTicket" />
      </Docs>
    </Member>
  </Members>
</Type>