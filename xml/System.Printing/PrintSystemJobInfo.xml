<Type Name="PrintSystemJobInfo" FullName="System.Printing.PrintSystemJobInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6700c893e86314a7fa03ca9cb897d358586ea174" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48661682" /></Metadata><TypeSignature Language="C#" Value="public class PrintSystemJobInfo : System.Printing.PrintSystemObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PrintSystemJobInfo extends System.Printing.PrintSystemObject" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PrintSystemJobInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintSystemJobInfo&#xA;Inherits PrintSystemObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintSystemJobInfo : System::Printing::PrintSystemObject" />
  <TypeSignature Language="F#" Value="type PrintSystemJobInfo = class&#xA;    inherit PrintSystemObject" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Printing.PrintSystemObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f2473-101">詳細定義列印工作。</span><span class="sxs-lookup"><span data-stu-id="f2473-101">Defines a print job in detail.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-102">這個類別會有任何公用建構函式。</span><span class="sxs-lookup"><span data-stu-id="f2473-102">This class has no public constructor.</span></span> <span data-ttu-id="f2473-103">若要取得的參考<xref:System.Printing.PrintSystemJobInfo>物件，請使用靜態<xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=nameWithType>方法，或下列其中一種<xref:System.Printing.PrintQueue>執行個體方法： <xref:System.Printing.PrintQueue.GetJob%2A>， <xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A>，或<xref:System.Printing.PrintQueue.AddJob%2A>。</span><span class="sxs-lookup"><span data-stu-id="f2473-103">To get a reference to a <xref:System.Printing.PrintSystemJobInfo> object, use the static <xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=nameWithType> method or one of the following <xref:System.Printing.PrintQueue> instance methods: <xref:System.Printing.PrintQueue.GetJob%2A>, <xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A>, or <xref:System.Printing.PrintQueue.AddJob%2A>.</span></span>  
  
 <span data-ttu-id="f2473-104">許多列印工作屬性，例如某項作業是否完成，必須傳遞從印表機<xref:System.Printing.PrintSystemJobInfo>物件，才能在您的應用程式會讀取對應的屬性 (<xref:System.Printing.PrintSystemJobInfo.IsCompleted%2A>)。</span><span class="sxs-lookup"><span data-stu-id="f2473-104">Many print job properties, such as whether a job is completed, must be passed from the printer to the <xref:System.Printing.PrintSystemJobInfo> object before your application reads the corresponding property (<xref:System.Printing.PrintSystemJobInfo.IsCompleted%2A>).</span></span> <span data-ttu-id="f2473-105"><xref:System.Printing.PrintSystemJobInfo.Refresh%2A>方法提供這項功能。</span><span class="sxs-lookup"><span data-stu-id="f2473-105">The <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> method provides this functionality.</span></span>  
  
 <span data-ttu-id="f2473-106">同樣地，當您的應用程式變更的值時，才<xref:System.Printing.PrintSystemJobInfo.JobName%2A>屬性，變更必須寫入到列印佇列公用程式的電腦上。</span><span class="sxs-lookup"><span data-stu-id="f2473-106">Similarly, when your application changes the value of the <xref:System.Printing.PrintSystemJobInfo.JobName%2A> property, the change must be written to the print queue utility on the computer.</span></span> <span data-ttu-id="f2473-107"><xref:System.Printing.PrintSystemJobInfo.Commit%2A>方法提供這項功能。</span><span class="sxs-lookup"><span data-stu-id="f2473-107">The <xref:System.Printing.PrintSystemJobInfo.Commit%2A> method provides this functionality.</span></span>  
  
 <span data-ttu-id="f2473-108">如果您衍生的類別<xref:System.Printing.PrintSystemJobInfo>具有額外的可寫入屬性，則您必須實作的覆寫<xref:System.Printing.PrintSystemJobInfo.Refresh%2A>和<xref:System.Printing.PrintSystemJobInfo.Commit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f2473-108">If you derive a class from <xref:System.Printing.PrintSystemJobInfo> that has additional writable properties, then you must implement an override of the <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> and <xref:System.Printing.PrintSystemJobInfo.Commit%2A> methods.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f2473-109">類別內<xref:System.Printing>命名空間不支援使用 Windows 服務或 ASP.NET 應用程式或服務中。</span><span class="sxs-lookup"><span data-stu-id="f2473-109">Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service.</span></span> <span data-ttu-id="f2473-110">嘗試使用這些類別內其中一個應用程式類型可能會產生非預期的問題，例如會受到影響服務效能和執行階段例外狀況。</span><span class="sxs-lookup"><span data-stu-id="f2473-110">Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</span></span>  
  
 <span data-ttu-id="f2473-111">如果您想要列印 Windows Form 應用程式，請參閱<xref:System.Drawing.Printing>命名空間。</span><span class="sxs-lookup"><span data-stu-id="f2473-111">If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; unit" Usage="printSystemJobInfo.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2473-112">取消列印工作。</span><span class="sxs-lookup"><span data-stu-id="f2473-112">Cancels the print job.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f2473-113">下列範例示範如何使用這個方法來取消列印工作。</span><span class="sxs-lookup"><span data-stu-id="f2473-113">The following example shows how to use this method to cancel print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#handlepausedjob)]
 [!code-csharp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#handlepausedjob)]
 [!code-vb[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#handlepausedjob)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberSignature Language="F#" Value="override this.Commit : unit -&gt; unit" Usage="printSystemJobInfo.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2473-114">將對 <see cref="T:System.Printing.PrintSystemJobInfo" /> 物件之屬性所做的任何變更寫入至該物件所代表的實際列印工作。</span><span class="sxs-lookup"><span data-stu-id="f2473-114">Writes any changes to the properties of the <see cref="T:System.Printing.PrintSystemJobInfo" /> object to the actual print job that the object represents.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-115">只有<xref:System.Printing.PrintSystemJobInfo.JobName%2A>屬性為可寫入。</span><span class="sxs-lookup"><span data-stu-id="f2473-115">Only the <xref:System.Printing.PrintSystemJobInfo.JobName%2A> property is writable.</span></span> <span data-ttu-id="f2473-116">如果您衍生的類別<xref:System.Printing.PrintSystemJobInfo>其他可寫入的屬性時，您必須覆寫<xref:System.Printing.PrintSystemJobInfo.Commit%2A>和<xref:System.Printing.PrintSystemJobInfo.Refresh%2A>使用您自己的實作方法。</span><span class="sxs-lookup"><span data-stu-id="f2473-116">If you derive a class from <xref:System.Printing.PrintSystemJobInfo> that has additional writable properties, you must override the <xref:System.Printing.PrintSystemJobInfo.Commit%2A> and <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> methods with implementations of your own.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public static System.Printing.PrintSystemJobInfo Get (System.Printing.PrintQueue printQueue, int jobIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Printing.PrintSystemJobInfo Get(class System.Printing.PrintQueue printQueue, int32 jobIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Get(System.Printing.PrintQueue,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Printing::PrintSystemJobInfo ^ Get(System::Printing::PrintQueue ^ printQueue, int jobIdentifier);" />
      <MemberSignature Language="F#" Value="static member Get : System.Printing.PrintQueue * int -&gt; System.Printing.PrintSystemJobInfo" Usage="System.Printing.PrintSystemJobInfo.Get (printQueue, jobIdentifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemJobInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printQueue" Type="System.Printing.PrintQueue" />
        <Parameter Name="jobIdentifier" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="printQueue"><span data-ttu-id="f2473-117">裝載列印工作的列印佇列。</span><span class="sxs-lookup"><span data-stu-id="f2473-117">The print queue hosting the print job.</span></span></param>
        <param name="jobIdentifier"><span data-ttu-id="f2473-118">列印工作的數值 ID。</span><span class="sxs-lookup"><span data-stu-id="f2473-118">A numerical ID for the print job.</span></span></param>
        <summary><span data-ttu-id="f2473-119">取得指定 <see cref="T:System.Printing.PrintSystemJobInfo" /> 中指定工作的 <see cref="T:System.Printing.PrintQueue" />。</span><span class="sxs-lookup"><span data-stu-id="f2473-119">Gets the <see cref="T:System.Printing.PrintSystemJobInfo" /> for the specified job in the specified <see cref="T:System.Printing.PrintQueue" />.</span></span></summary>
        <returns><span data-ttu-id="f2473-120">對應到 <see cref="T:System.Printing.PrintSystemJobInfo" /> 的 <paramref name="jobIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="f2473-120">The <see cref="T:System.Printing.PrintSystemJobInfo" /> that corresponds to the <paramref name="jobIdentifier" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-121">您也可以使用<xref:System.Printing.PrintQueue.GetJob%2A?displayProperty=nameWithType>達成相同目的的方法。</span><span class="sxs-lookup"><span data-stu-id="f2473-121">You can also use the <xref:System.Printing.PrintQueue.GetJob%2A?displayProperty=nameWithType> method for the same purpose.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintQueue.GetJob(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HostingPrintQueue">
      <MemberSignature Language="C#" Value="public System.Printing.PrintQueue HostingPrintQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintQueue HostingPrintQueue" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.HostingPrintQueue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostingPrintQueue As PrintQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintQueue ^ HostingPrintQueue { System::Printing::PrintQueue ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostingPrintQueue : System.Printing.PrintQueue" Usage="System.Printing.PrintSystemJobInfo.HostingPrintQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-122">取得裝載列印工作的列印佇列。</span><span class="sxs-lookup"><span data-stu-id="f2473-122">Gets the print queue that is hosting the print job.</span></span></summary>
        <value><span data-ttu-id="f2473-123"><see cref="T:System.Printing.PrintQueue" /> 值，表示擁有列印工作的列印佇列。</span><span class="sxs-lookup"><span data-stu-id="f2473-123">A <see cref="T:System.Printing.PrintQueue" /> value that represents the print queue that owns the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f2473-124">下列範例示範如何診斷問題列印工作時，請使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="f2473-124">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingPrintServer">
      <MemberSignature Language="C#" Value="public System.Printing.PrintServer HostingPrintServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintServer HostingPrintServer" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.HostingPrintServer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostingPrintServer As PrintServer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintServer ^ HostingPrintServer { System::Printing::PrintServer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostingPrintServer : System.Printing.PrintServer" Usage="System.Printing.PrintSystemJobInfo.HostingPrintServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintServer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-125">取得裝載列印工作之列印佇列的列印伺服器。</span><span class="sxs-lookup"><span data-stu-id="f2473-125">Gets the print server that is hosting the print queue for the print job.</span></span></summary>
        <value><span data-ttu-id="f2473-126"><see cref="T:System.Printing.PrintServer" /> 值，表示擁有列印工作之 <see cref="T:System.Printing.PrintQueue" /> 的裝載列印伺服器 (通常是電腦)。</span><span class="sxs-lookup"><span data-stu-id="f2473-126">A <see cref="T:System.Printing.PrintServer" /> value that represents the hosting print server (usually a computer) for the <see cref="T:System.Printing.PrintQueue" /> that owns the print job.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalDispose">
      <MemberSignature Language="C#" Value="protected override sealed void InternalDispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InternalDispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.InternalDispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub InternalDispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InternalDispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.InternalDispose : bool -&gt; unit" Usage="printSystemJobInfo.InternalDispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="f2473-127"><see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="f2473-127"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="f2473-128">釋放 <see cref="T:System.Printing.PrintSystemJobInfo" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="f2473-128">Releases the unmanaged resources that are used by the <see cref="T:System.Printing.PrintSystemJobInfo" /> and optionally, releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBlocked">
      <MemberSignature Language="C#" Value="public bool IsBlocked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBlocked" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsBlocked" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBlocked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBlocked { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBlocked : bool" Usage="System.Printing.PrintSystemJobInfo.IsBlocked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-129">取得值，這個值指出列印工作是否遭到封鎖，因而未列印。</span><span class="sxs-lookup"><span data-stu-id="f2473-129">Gets a value that indicates whether the print job is blocked and therefore, not printing.</span></span></summary>
        <value><span data-ttu-id="f2473-130">如果要封鎖列印工作，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2473-130"><see langword="true" /> if the print job is blocked; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f2473-131">下列範例示範如何診斷問題列印工作時，請使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="f2473-131">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Printing.PrintSystemJobInfo.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-132">取得值，這個值表示列印工作是否已完成。</span><span class="sxs-lookup"><span data-stu-id="f2473-132">Gets a value that indicates whether the print job is finished.</span></span></summary>
        <value><span data-ttu-id="f2473-133">如果列印工作已完成，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2473-133"><see langword="true" /> if the print job is finished; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f2473-134">下列範例示範如何診斷問題列印工作時，請使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="f2473-134">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeleted">
      <MemberSignature Language="C#" Value="public bool IsDeleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeleted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsDeleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDeleted : bool" Usage="System.Printing.PrintSystemJobInfo.IsDeleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-135">取得值，這個值指出由 <see cref="T:System.Printing.PrintSystemJobInfo" /> 物件表示的列印工作是否從列印佇列中刪除。</span><span class="sxs-lookup"><span data-stu-id="f2473-135">Gets a value that indicates whether the print job, which is represented by the <see cref="T:System.Printing.PrintSystemJobInfo" /> object, was deleted from the print queue.</span></span></summary>
        <value><span data-ttu-id="f2473-136">如果已刪除列印工作，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2473-136"><see langword="true" /> if the print job was deleted; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-137">看起來似乎 paradoxical 在第一個物件可以報告其自身的狀態為已刪除，但請記住<xref:System.Printing.PrintSystemJobInfo>僅適用於物件*代表*實際列印工作。</span><span class="sxs-lookup"><span data-stu-id="f2473-137">It may seem paradoxical at first that an object can report its own status as deleted, but keep in mind that the <xref:System.Printing.PrintSystemJobInfo> object only *represents* a real print job.</span></span> <span data-ttu-id="f2473-138">從列印佇列中刪除 後者不會自動處置<xref:System.Printing.PrintSystemJobInfo>應用程式中的物件。</span><span class="sxs-lookup"><span data-stu-id="f2473-138">Deleting the latter from its print queue does not automatically dispose of the <xref:System.Printing.PrintSystemJobInfo> object in your application.</span></span> <span data-ttu-id="f2473-139">同樣地，如果物件未移除任何<xref:System.Printing.PrintJobInfoCollection>刪除它所代表的列印工作之前所建立。</span><span class="sxs-lookup"><span data-stu-id="f2473-139">Similarly, the object is not removed from any <xref:System.Printing.PrintJobInfoCollection> that was created before the print job it represents was deleted.</span></span> <span data-ttu-id="f2473-140">例如，如果<xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A>方法執行之前已刪除列印工作，則傳回的集合將包含<xref:System.Printing.PrintSystemJobInfo>物件，表示列印工作。</span><span class="sxs-lookup"><span data-stu-id="f2473-140">For example, if the <xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A> method is run before the print job was deleted, the returned collection will include a <xref:System.Printing.PrintSystemJobInfo> object that represents the print job.</span></span> <span data-ttu-id="f2473-141">刪除列印工作時，此物件不會從集合移除。</span><span class="sxs-lookup"><span data-stu-id="f2473-141">This object is not removed from the collection when the print job is deleted.</span></span> <span data-ttu-id="f2473-142">但是如果<xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A>接著會執行一次，傳回集合中會有代表已刪除的列印工作沒有成員。</span><span class="sxs-lookup"><span data-stu-id="f2473-142">But if <xref:System.Printing.PrintQueue.GetPrintJobInfoCollection%2A> is then run again, the returned collection will have no members that represent the deleted print jobs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2473-143">下列範例示範如何診斷問題列印工作時，請使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="f2473-143">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeleting">
      <MemberSignature Language="C#" Value="public bool IsDeleting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeleting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsDeleting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeleting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeleting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDeleting : bool" Usage="System.Printing.PrintSystemJobInfo.IsDeleting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-144">取得值，這個值表示是否要從列印佇列中刪除列印工作。</span><span class="sxs-lookup"><span data-stu-id="f2473-144">Gets a value that indicates whether the print job is being deleted from the print queue.</span></span></summary>
        <value><span data-ttu-id="f2473-145">如果要刪除列印工作，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2473-145"><see langword="true" /> if the print job is being deleted; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f2473-146">下列範例示範如何診斷問題列印工作時，請使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="f2473-146">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInError">
      <MemberSignature Language="C#" Value="public bool IsInError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInError" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsInError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInError : bool" Usage="System.Printing.PrintSystemJobInfo.IsInError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-147">取得值，指出是否有錯誤條件與列印工作關聯。</span><span class="sxs-lookup"><span data-stu-id="f2473-147">Gets a value that indicates whether an error condition is associated with the print job.</span></span></summary>
        <value><span data-ttu-id="f2473-148">如果有錯誤條件與列印工作關聯，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2473-148"><see langword="true" /> if an error condition is associated with the print job; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f2473-149">下列範例示範如何診斷問題列印工作時，請使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="f2473-149">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffline">
      <MemberSignature Language="C#" Value="public bool IsOffline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffline" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsOffline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOffline : bool" Usage="System.Printing.PrintSystemJobInfo.IsOffline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-150">取得值，這個值指出印表機是否離線。</span><span class="sxs-lookup"><span data-stu-id="f2473-150">Gets a value that indicates whether the printer is offline.</span></span></summary>
        <value><span data-ttu-id="f2473-151">如果印表機離線，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2473-151"><see langword="true" /> if the printer is offline; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-152">這個值會傳播至所有<xref:System.Printing.PrintSystemJobInfo>物件從<xref:System.Printing.PrintQueue.IsOffline%2A>屬性的裝載<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="f2473-152">This value is propagated to all the <xref:System.Printing.PrintSystemJobInfo> objects from the <xref:System.Printing.PrintQueue.IsOffline%2A> property of the hosting <xref:System.Printing.PrintQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2473-153">下列範例示範如何診斷問題列印工作時，請使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="f2473-153">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaperOut">
      <MemberSignature Language="C#" Value="public bool IsPaperOut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaperOut" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsPaperOut" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaperOut As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaperOut { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPaperOut : bool" Usage="System.Printing.PrintSystemJobInfo.IsPaperOut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-154">取得值，這個值指出印表機是否已用完列印工作所需的紙張大小和類型。</span><span class="sxs-lookup"><span data-stu-id="f2473-154">Gets a value that indicates whether the printer has run out of the paper size and type that the print job requires.</span></span></summary>
        <value><span data-ttu-id="f2473-155">如果印表機已用完所需的紙張，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2473-155"><see langword="true" /> if the printer has run out of the required paper; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f2473-156">下列範例示範如何診斷問題列印工作時，請使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="f2473-156">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaused">
      <MemberSignature Language="C#" Value="public bool IsPaused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaused" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsPaused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPaused : bool" Usage="System.Printing.PrintSystemJobInfo.IsPaused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-157">取得值，這個值指出列印工作是否暫停。</span><span class="sxs-lookup"><span data-stu-id="f2473-157">Gets a value that indicates whether the print job is paused.</span></span></summary>
        <value><span data-ttu-id="f2473-158">如果已暫停列印工作，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2473-158"><see langword="true" /> if the print job is paused; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-159">您也可以暫停整個列印佇列。</span><span class="sxs-lookup"><span data-stu-id="f2473-159">The entire print queue can also be paused.</span></span> <span data-ttu-id="f2473-160">例如，值<xref:System.Printing.PrintSystemJobInfo.IsPaused%2A?displayProperty=nameWithType>可以是`false`即使值<xref:System.Printing.PrintQueue.IsPaused%2A?displayProperty=nameWithType>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="f2473-160">For example, the value of <xref:System.Printing.PrintSystemJobInfo.IsPaused%2A?displayProperty=nameWithType> can be `false` even when the value of the <xref:System.Printing.PrintQueue.IsPaused%2A?displayProperty=nameWithType> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2473-161">下列範例示範如何診斷問題列印工作時，請使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="f2473-161">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Pause" />
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Resume" />
      </Docs>
    </Member>
    <Member MemberName="IsPrinted">
      <MemberSignature Language="C#" Value="public bool IsPrinted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrinted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsPrinted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrinted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrinted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrinted : bool" Usage="System.Printing.PrintSystemJobInfo.IsPrinted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-162">取得值，這個值指出列印工作是否列印。</span><span class="sxs-lookup"><span data-stu-id="f2473-162">Gets a value that indicates whether the print job printed.</span></span></summary>
        <value><span data-ttu-id="f2473-163">如果已列印列印工作，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2473-163"><see langword="true" /> if the print job has printed; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f2473-164">下列範例示範如何診斷問題列印工作時，請使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="f2473-164">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrinting">
      <MemberSignature Language="C#" Value="public bool IsPrinting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrinting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsPrinting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrinting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrinting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrinting : bool" Usage="System.Printing.PrintSystemJobInfo.IsPrinting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-165">取得值，這個值表示列印工作是否正在列印。</span><span class="sxs-lookup"><span data-stu-id="f2473-165">Gets a value that indicates whether the print job is being printed.</span></span></summary>
        <value><span data-ttu-id="f2473-166">如果印表機正在列印，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2473-166"><see langword="true" /> if the printer is printing; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f2473-167">下列範例示範如何診斷問題列印工作時，請使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="f2473-167">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRestarted">
      <MemberSignature Language="C#" Value="public bool IsRestarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRestarted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsRestarted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRestarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRestarted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRestarted : bool" Usage="System.Printing.PrintSystemJobInfo.IsRestarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-168">取得值，這個值表示列印工作是否已重新啟動。</span><span class="sxs-lookup"><span data-stu-id="f2473-168">Gets a value that indicates whether the print job has been restarted.</span></span></summary>
        <value><span data-ttu-id="f2473-169">如果印表機正在列印，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2473-169"><see langword="true" /> if the printer is printing; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-170">重新啟動作業時，它會列印整個。</span><span class="sxs-lookup"><span data-stu-id="f2473-170">When a job is restarted, it prints in its entirety.</span></span> <span data-ttu-id="f2473-171">使用重新啟動的對比<xref:System.Printing.PrintSystemJobInfo.Resume%2A>方法，它會繼續已暫停之處的工作。</span><span class="sxs-lookup"><span data-stu-id="f2473-171">Contrast restarting with using the <xref:System.Printing.PrintSystemJobInfo.Resume%2A> method, which resumes a job at the point it was paused.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Pause" />
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Resume" />
        <altmember cref="P:System.Printing.PrintSystemJobInfo.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="IsRetained">
      <MemberSignature Language="C#" Value="public bool IsRetained { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRetained" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsRetained" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRetained As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRetained { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRetained : bool" Usage="System.Printing.PrintSystemJobInfo.IsRetained" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-172">取得值，這個值指出是否在完成列印後將列印工作儲存在佇列中。</span><span class="sxs-lookup"><span data-stu-id="f2473-172">Gets a value that indicates whether the print job was saved in the queue after it printed.</span></span></summary>
        <value><span data-ttu-id="f2473-173">如果已儲存列印工作，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2473-173"><see langword="true" /> if the print job was saved; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-174">列印佇列會保留列印的工作，如果<xref:System.Printing.PrintQueue.KeepPrintedJobs%2A>的屬性<xref:System.Printing.PrintQueue>物件設定為`true`，如果佇列的屬性已經以認可<xref:System.Printing.PrintQueue.Commit%2A>方法<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="f2473-174">A print queue retains printed jobs if the <xref:System.Printing.PrintQueue.KeepPrintedJobs%2A> property of the <xref:System.Printing.PrintQueue> object is set to `true` and if the properties of the queue have been committed with the <xref:System.Printing.PrintQueue.Commit%2A> method of the <xref:System.Printing.PrintQueue>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpooling">
      <MemberSignature Language="C#" Value="public bool IsSpooling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpooling" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsSpooling" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpooling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpooling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpooling : bool" Usage="System.Printing.PrintSystemJobInfo.IsSpooling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-175">取得值，這個值表示列印工作是否正在多工緩衝處理。</span><span class="sxs-lookup"><span data-stu-id="f2473-175">Gets a value that indicates whether the print job is being spooled.</span></span></summary>
        <value><span data-ttu-id="f2473-176">如果列印工作正在多工緩衝處理，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2473-176"><see langword="true" /> if the print job is being spooled; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f2473-177">下列範例示範如何診斷問題列印工作時，請使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="f2473-177">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserInterventionRequired">
      <MemberSignature Language="C#" Value="public bool IsUserInterventionRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserInterventionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.IsUserInterventionRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUserInterventionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserInterventionRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUserInterventionRequired : bool" Usage="System.Printing.PrintSystemJobInfo.IsUserInterventionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-178">取得值，這個值表示印表機是否需要使用者介入。</span><span class="sxs-lookup"><span data-stu-id="f2473-178">Gets a value that indicates whether the printer needs user intervention.</span></span></summary>
        <value><span data-ttu-id="f2473-179">如果需要使用者介入，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2473-179"><see langword="true" /> if user intervention is needed; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-180">這個值會傳播至所有<xref:System.Printing.PrintSystemJobInfo>物件從<xref:System.Printing.PrintQueue.NeedUserIntervention%2A>屬性的裝載<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="f2473-180">This value propagates to all <xref:System.Printing.PrintSystemJobInfo> objects from the <xref:System.Printing.PrintQueue.NeedUserIntervention%2A> property of the hosting <xref:System.Printing.PrintQueue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2473-181">下列範例示範如何診斷問題列印工作時，請使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="f2473-181">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobproperties)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobproperties)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JobIdentifier">
      <MemberSignature Language="C#" Value="public int JobIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 JobIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JobIdentifier As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int JobIdentifier { int get(); };" />
      <MemberSignature Language="F#" Value="member this.JobIdentifier : int" Usage="System.Printing.PrintSystemJobInfo.JobIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-182">取得列印工作的識別碼。</span><span class="sxs-lookup"><span data-stu-id="f2473-182">Gets the identification number for the print job.</span></span></summary>
        <value><span data-ttu-id="f2473-183"><see cref="T:System.Int32" />，可識別列印工作。</span><span class="sxs-lookup"><span data-stu-id="f2473-183">An <see cref="T:System.Int32" /> that identifies the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-184">編號系統會決定要使用由作業系統的列印伺服器 」 和 「 列印伺服器是否在電腦或列印伺服器設備。</span><span class="sxs-lookup"><span data-stu-id="f2473-184">Which numbering system is used is determined by the operating system of the print server and whether the print server is a computer or a print server appliance.</span></span> <span data-ttu-id="f2473-185">例如，適用於 Microsoft Windows XP 作業系統會判斷編號的方式： 提交在伺服器上的任何使用者，並到任何佇列的第一個列印工作的列印伺服器開啟時，如果其所有的列印佇列是空的指派識別碼數字 2。</span><span class="sxs-lookup"><span data-stu-id="f2473-185">For example, the operating system for Microsoft Windows XP determines the numbering in this way: when a print server is turned on, if all its print queues are empty, the first print job submitted on the server by any user and to any queue is assigned ID number 2.</span></span> <span data-ttu-id="f2473-186">在伺服器上的每個後續工作指派一個數字大於先前的列印工作，該伺服器上。</span><span class="sxs-lookup"><span data-stu-id="f2473-186">Each subsequent job on the server is assigned a number that is one greater than the previous print job on that server.</span></span>  
  
 <span data-ttu-id="f2473-187">列印工作的列印佇列已不會影響其數字： 若工作順序，傳送至 a，QueueB，a，則 a 有作業 2 與 4，與 QueueB 有 3 的作業。</span><span class="sxs-lookup"><span data-stu-id="f2473-187">The print queue for the print job has no effect on its number: if jobs are sent to QueueA, QueueB, and QueueA, in that order, then QueueA has jobs 2 and 4, and QueueB has job 3.</span></span>  
  
 <span data-ttu-id="f2473-188">作業會指派數字之後，數字永遠不會變更，即使其他作業完成列印，或取消之後，或重新啟動伺服器。</span><span class="sxs-lookup"><span data-stu-id="f2473-188">After a job is assigned a number, the number never changes, even if other jobs finish printing or are canceled, or if the server is restarted.</span></span> <span data-ttu-id="f2473-189">如果已經有工作在一或多個佇列重新啟動伺服器時，第一個新的工作會指派一個數字大於最高編號的工作，當伺服器啟動時，已在佇列中。</span><span class="sxs-lookup"><span data-stu-id="f2473-189">If there are already jobs in one or more queues when the server is restarted, the first new job is assigned a number that is one greater than the highest numbered job that was in the queue when the server started.</span></span> <span data-ttu-id="f2473-190">不過，直到重新啟動時，列印伺服器不會重複使用的數字。</span><span class="sxs-lookup"><span data-stu-id="f2473-190">However, until it restarts, a print server does not reuse a number.</span></span> <span data-ttu-id="f2473-191">即使最高編號的工作已取消在列印之前下, 一個工作將取得較高的數字是其中一個。</span><span class="sxs-lookup"><span data-stu-id="f2473-191">Even if the highest numbered job is canceled before it is printed, the next job gets a number that is one higher.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2473-192">下列範例示範如何診斷問題列印工作時，請使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="f2473-192">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JobName">
      <MemberSignature Language="C#" Value="public string JobName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string JobName" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobName" />
      <MemberSignature Language="VB.NET" Value="Public Property JobName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ JobName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.JobName : string with get, set" Usage="System.Printing.PrintSystemJobInfo.JobName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-193">取得或設定列印工作的名稱。</span><span class="sxs-lookup"><span data-stu-id="f2473-193">Gets or sets a name for the print job.</span></span></summary>
        <value><span data-ttu-id="f2473-194">列印工作的 <see cref="T:System.String" /> 名稱。</span><span class="sxs-lookup"><span data-stu-id="f2473-194">A <see cref="T:System.String" /> name for the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f2473-195">下列範例示範如何診斷問題列印工作時，請使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="f2473-195">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JobSize">
      <MemberSignature Language="C#" Value="public int JobSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 JobSize" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JobSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int JobSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.JobSize : int" Usage="System.Printing.PrintSystemJobInfo.JobSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-196">取得列印工作的大小 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="f2473-196">Get the size, in bytes, of the print job.</span></span></summary>
        <value><span data-ttu-id="f2473-197"><see cref="T:System.Int32" />，陳述列印工作的大小 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="f2473-197">An <see cref="T:System.Int32" /> that states the size, in bytes, of the print job.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JobStatus">
      <MemberSignature Language="C#" Value="public System.Printing.PrintJobStatus JobStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Printing.PrintJobStatus JobStatus" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JobStatus As PrintJobStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintJobStatus JobStatus { System::Printing::PrintJobStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.JobStatus : System.Printing.PrintJobStatus" Usage="System.Printing.PrintSystemJobInfo.JobStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintJobStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-198">取得列印工作的目前狀態。</span><span class="sxs-lookup"><span data-stu-id="f2473-198">Gets the current status of the print job.</span></span></summary>
        <value><span data-ttu-id="f2473-199"><see cref="T:System.Printing.PrintJobStatus" /> 值。</span><span class="sxs-lookup"><span data-stu-id="f2473-199">A <see cref="T:System.Printing.PrintJobStatus" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-200">這個方法會提供方法來避免個別檢查每個狀態的屬性，例如<xref:System.Printing.PrintSystemJobInfo.IsPrinting%2A>和<xref:System.Printing.PrintSystemJobInfo.IsPaused%2A>。</span><span class="sxs-lookup"><span data-stu-id="f2473-200">This method gives you a means to avoid individually checking each of the status properties, such as <xref:System.Printing.PrintSystemJobInfo.IsPrinting%2A> and <xref:System.Printing.PrintSystemJobInfo.IsPaused%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2473-201">下列範例示範如何診斷問題列印工作時，請使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="f2473-201">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobAttributes](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#spottroubleusingjobattributes)]
 [!code-csharp[DiagnoseProblematicPrintJob#SpotTroubleUsingJobAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#spottroubleusingjobattributes)]
 [!code-vb[DiagnoseProblematicPrintJob#SpotTroubleUsingJobAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#spottroubleusingjobattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JobStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream JobStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream JobStream" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.JobStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JobStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ JobStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JobStream : System.IO.Stream" Usage="System.Printing.PrintSystemJobInfo.JobStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-202">取得列印工作 <see cref="T:System.IO.Stream" /> 的參考。</span><span class="sxs-lookup"><span data-stu-id="f2473-202">Gets a reference to the <see cref="T:System.IO.Stream" /> of the print job.</span></span></summary>
        <value><span data-ttu-id="f2473-203">包含列印工作的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="f2473-203">A <see cref="T:System.IO.Stream" /> that contains the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-204">從 Windows 8 和更新版本上的.NET Framework 4.5 開始，寫入此資料流的資料必須是作業系統的 XPS 格式做為封裝資料流。</span><span class="sxs-lookup"><span data-stu-id="f2473-204">Starting with the .NET Framework 4.5 on Windows 8 and later versions of the operating system, data written to this stream must be in XPS format as a package stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfPages">
      <MemberSignature Language="C#" Value="public int NumberOfPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfPages" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.NumberOfPages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberOfPages As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberOfPages { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfPages : int" Usage="System.Printing.PrintSystemJobInfo.NumberOfPages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-205">取得列印工作中的頁面數目。</span><span class="sxs-lookup"><span data-stu-id="f2473-205">Gets the number of pages in the print job.</span></span></summary>
        <value><span data-ttu-id="f2473-206"><see cref="T:System.Int32" />，陳述列印工作中的頁面數目。</span><span class="sxs-lookup"><span data-stu-id="f2473-206">An <see cref="T:System.Int32" /> that states the number of pages in the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-207">頁面為一張紙的紙張或其他列印媒體的一方。</span><span class="sxs-lookup"><span data-stu-id="f2473-207">A page is one side of a sheet of paper or other print media.</span></span>  
  
 <span data-ttu-id="f2473-208">下表說明列印工作是否呼叫雙面列印 （雙面列印）、 是否同時呼叫多個頁面單張，或呼叫這兩個如何影響的值，這個屬性，以及使用的工作表的數量。</span><span class="sxs-lookup"><span data-stu-id="f2473-208">The following table shows how the value of this property, and the number of sheets used, is affected by whether the print job calls for two-sided printing (duplexing), whether it calls for multiple pages-per-sheet, or whether it calls for both.</span></span>  
  
### <a name="how-duplexing-and-multipage-printing-affect-printing"></a><span data-ttu-id="f2473-209">雙面列印和列印多頁如何影響列印</span><span class="sxs-lookup"><span data-stu-id="f2473-209">How duplexing and multipage printing affect printing</span></span>  
  
|<span data-ttu-id="f2473-210">雙面列印</span><span class="sxs-lookup"><span data-stu-id="f2473-210">Duplexing</span></span>|<span data-ttu-id="f2473-211">每張紙包含的頁面</span><span class="sxs-lookup"><span data-stu-id="f2473-211">Pages per sheet</span></span>|<span data-ttu-id="f2473-212">NumberOfPages 的值</span><span class="sxs-lookup"><span data-stu-id="f2473-212">Value of NumberOfPages</span></span>|<span data-ttu-id="f2473-213">實體張紙的數目</span><span class="sxs-lookup"><span data-stu-id="f2473-213">Number of physical sheets of paper</span></span>|  
|---------------|---------------------|----------------------------|----------------------------------------|  
|<span data-ttu-id="f2473-214">否</span><span class="sxs-lookup"><span data-stu-id="f2473-214">No</span></span>|<span data-ttu-id="f2473-215">1</span><span class="sxs-lookup"><span data-stu-id="f2473-215">1</span></span>|<span data-ttu-id="f2473-216">相同的文件中的頁數。</span><span class="sxs-lookup"><span data-stu-id="f2473-216">Identical to the number of pages in the document.</span></span>|<span data-ttu-id="f2473-217">相同的文件中的頁數。</span><span class="sxs-lookup"><span data-stu-id="f2473-217">Identical to the number of pages in the document.</span></span>|  
|<span data-ttu-id="f2473-218">[是]</span><span class="sxs-lookup"><span data-stu-id="f2473-218">Yes</span></span>|<span data-ttu-id="f2473-219">1</span><span class="sxs-lookup"><span data-stu-id="f2473-219">1</span></span>|<span data-ttu-id="f2473-220">相同的文件中的頁數。</span><span class="sxs-lookup"><span data-stu-id="f2473-220">Identical to the number of pages in the document.</span></span>|<span data-ttu-id="f2473-221">文件頁面 ÷ 2 （無條件進位）。</span><span class="sxs-lookup"><span data-stu-id="f2473-221">Document pages ÷ 2 (rounded up).</span></span>|  
|<span data-ttu-id="f2473-222">否</span><span class="sxs-lookup"><span data-stu-id="f2473-222">No</span></span>|<span data-ttu-id="f2473-223">選擇性顯示</span><span class="sxs-lookup"><span data-stu-id="f2473-223">Multiple</span></span>|<span data-ttu-id="f2473-224">文件頁面 ÷ 每一頁 （無條件進位）。</span><span class="sxs-lookup"><span data-stu-id="f2473-224">Document pages ÷ Pages per sheet (rounded up).</span></span>|<span data-ttu-id="f2473-225">文件頁面 ÷ 每一頁 （無條件進位）。</span><span class="sxs-lookup"><span data-stu-id="f2473-225">Document pages ÷ Pages per sheet (rounded up).</span></span>|  
|<span data-ttu-id="f2473-226">[是]</span><span class="sxs-lookup"><span data-stu-id="f2473-226">Yes</span></span>|<span data-ttu-id="f2473-227">選擇性顯示</span><span class="sxs-lookup"><span data-stu-id="f2473-227">Multiple</span></span>|<span data-ttu-id="f2473-228">文件頁面 ÷ 每一頁 （無條件進位）。</span><span class="sxs-lookup"><span data-stu-id="f2473-228">Document pages ÷ Pages per sheet (rounded up).</span></span>|<span data-ttu-id="f2473-229">[文件頁面 ÷ 每張紙的頁數] ÷ 2 （無條件進位）。</span><span class="sxs-lookup"><span data-stu-id="f2473-229">[Document pages ÷ Pages per sheet] ÷ 2 (rounded up).</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintTicket.Duplexing" />
        <altmember cref="P:System.Printing.PrintTicket.PagesPerSheet" />
      </Docs>
    </Member>
    <Member MemberName="NumberOfPagesPrinted">
      <MemberSignature Language="C#" Value="public int NumberOfPagesPrinted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfPagesPrinted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.NumberOfPagesPrinted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberOfPagesPrinted As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberOfPagesPrinted { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfPagesPrinted : int" Usage="System.Printing.PrintSystemJobInfo.NumberOfPagesPrinted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-230">取得已列印的頁面數目。</span><span class="sxs-lookup"><span data-stu-id="f2473-230">Gets the number of pages that have already printed.</span></span></summary>
        <value><span data-ttu-id="f2473-231"><see cref="T:System.Int32" />，陳述已列印的頁面數目。</span><span class="sxs-lookup"><span data-stu-id="f2473-231">An <see cref="T:System.Int32" /> that states the number of pages that have already printed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="printSystemJobInfo.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2473-232">暫止列印工作，直到 <see cref="M:System.Printing.PrintSystemJobInfo.Resume" /> 執行為止。</span><span class="sxs-lookup"><span data-stu-id="f2473-232">Halts printing of the job until <see cref="M:System.Printing.PrintSystemJobInfo.Resume" /> runs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-233">如果另一個工作是在佇列中，當目前的工作已暫停，從開始列印。</span><span class="sxs-lookup"><span data-stu-id="f2473-233">If another job is in the queue, it begins printing when the current job is paused.</span></span>  
  
 <span data-ttu-id="f2473-234">裝載<xref:System.Printing.PrintQueue>還有<xref:System.Printing.PrintQueue.Pause%2A>和<xref:System.Printing.PrintQueue.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f2473-234">The hosting <xref:System.Printing.PrintQueue> also has <xref:System.Printing.PrintQueue.Pause%2A> and <xref:System.Printing.PrintQueue.Resume%2A> methods.</span></span> <span data-ttu-id="f2473-235">如果列印佇列已暫停，繼續個別工作並不會導致該工作繼續列印。</span><span class="sxs-lookup"><span data-stu-id="f2473-235">If the print queue is paused, resuming an individual job does not cause that job to resume printing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintSystemJobInfo.IsPaused" />
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Resume" />
      </Docs>
    </Member>
    <Member MemberName="PositionInPrintQueue">
      <MemberSignature Language="C#" Value="public int PositionInPrintQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PositionInPrintQueue" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.PositionInPrintQueue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PositionInPrintQueue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PositionInPrintQueue { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PositionInPrintQueue : int" Usage="System.Printing.PrintSystemJobInfo.PositionInPrintQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-236">取得列印工作在列印佇列中的位置。</span><span class="sxs-lookup"><span data-stu-id="f2473-236">Gets the print job's place in the print queue.</span></span></summary>
        <value><span data-ttu-id="f2473-237"><see cref="T:System.Int32" />，陳述列印工作在佇列中的位置。</span><span class="sxs-lookup"><span data-stu-id="f2473-237">An <see cref="T:System.Int32" /> that states the print job's place in the queue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Printing.PrintJobPriority Priority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Printing.PrintJobPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.Priority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Priority As PrintJobPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintJobPriority Priority { System::Printing::PrintJobPriority get(); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Printing.PrintJobPriority" Usage="System.Printing.PrintSystemJobInfo.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintJobPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-238">取得非數值運算式，這個運算式表示列印工作相對於列印佇列中其他工作的優先權。</span><span class="sxs-lookup"><span data-stu-id="f2473-238">Gets a non-numerical expression that represents the priority of the print job relative to other jobs in the print queue.</span></span></summary>
        <value><span data-ttu-id="f2473-239"><see cref="T:System.Printing.PrintJobPriority" />，表示列印工作的優先權為 <see cref="F:System.Printing.PrintJobPriority.Maximum" />、<see cref="F:System.Printing.PrintJobPriority.Minimum" />、<see cref="F:System.Printing.PrintJobPriority.Default" /> 或 <see cref="F:System.Printing.PrintJobPriority.None" />。</span><span class="sxs-lookup"><span data-stu-id="f2473-239">A <see cref="T:System.Printing.PrintJobPriority" /> that represents the priority of the print job as <see cref="F:System.Printing.PrintJobPriority.Maximum" />, <see cref="F:System.Printing.PrintJobPriority.Minimum" />, <see cref="F:System.Printing.PrintJobPriority.Default" />, or <see cref="F:System.Printing.PrintJobPriority.None" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberSignature Language="F#" Value="override this.Refresh : unit -&gt; unit" Usage="printSystemJobInfo.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2473-240">更新 <see cref="T:System.Printing.PrintSystemJobInfo" /> 物件的屬性，使其值能符合該物件所代表之實際列印工作的值。</span><span class="sxs-lookup"><span data-stu-id="f2473-240">Updates the properties of the <see cref="T:System.Printing.PrintSystemJobInfo" /> object so that their values match the values of the actual print job that the object represents.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-241">任何您所做變更的屬性<xref:System.Printing.PrintSystemJobInfo>物件必須可寫入的實際列印工作使用<xref:System.Printing.PrintSystemJobInfo.Commit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f2473-241">Any changes that you make to the properties of a <xref:System.Printing.PrintSystemJobInfo> object must be written to the actual print job by using the <xref:System.Printing.PrintSystemJobInfo.Commit%2A> method.</span></span> <span data-ttu-id="f2473-242">您有尚未認可的任何變更時，遺失了<xref:System.Printing.PrintSystemJobInfo.Refresh%2A>方法執行。</span><span class="sxs-lookup"><span data-stu-id="f2473-242">Any changes that you have not committed are lost when the <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> method runs.</span></span>  
  
 <span data-ttu-id="f2473-243">如果您衍生的類別<xref:System.Printing.PrintSystemJobInfo>具有其他屬性，則您必須覆寫<xref:System.Printing.PrintSystemJobInfo.Refresh%2A>與使用您自己的實作方法。</span><span class="sxs-lookup"><span data-stu-id="f2473-243">If you derive a class from <xref:System.Printing.PrintSystemJobInfo> that has additional properties, then you must override the <xref:System.Printing.PrintSystemJobInfo.Refresh%2A> method with an implementation of your own.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Commit" />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restart();" />
      <MemberSignature Language="F#" Value="member this.Restart : unit -&gt; unit" Usage="printSystemJobInfo.Restart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2473-244">重頭開始列印工作。</span><span class="sxs-lookup"><span data-stu-id="f2473-244">Restarts a print job from the beginning.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-245">或者，您可以使用<xref:System.Printing.PrintSystemJobInfo.Resume%2A>方法，這會重新啟動已暫停的列印工作，從已暫停的點開始。</span><span class="sxs-lookup"><span data-stu-id="f2473-245">Optionally, you can use the <xref:System.Printing.PrintSystemJobInfo.Resume%2A> method, which restarts a paused print job, starting at the point it was paused.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemJobInfo.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="printSystemJobInfo.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2473-246">繼續列印已暫停的列印工作。</span><span class="sxs-lookup"><span data-stu-id="f2473-246">Resumes the printing of a paused print job.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-247">裝載<xref:System.Printing.PrintQueue>還有<xref:System.Printing.PrintQueue.Pause%2A>和<xref:System.Printing.PrintQueue.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f2473-247">The hosting <xref:System.Printing.PrintQueue> also has <xref:System.Printing.PrintQueue.Pause%2A> and <xref:System.Printing.PrintQueue.Resume%2A> methods.</span></span> <span data-ttu-id="f2473-248">如果列印佇列已暫停，繼續進行個別的作業不會繼續列印的列印工作。</span><span class="sxs-lookup"><span data-stu-id="f2473-248">If the print queue is paused, resuming an individual job does not resume the printing of the print job.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2473-249">下列範例示範如何使用這個方法來繼續暫停的列印工作。</span><span class="sxs-lookup"><span data-stu-id="f2473-249">The following example shows how to use this method to resume a paused print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#handlepausedjob)]
 [!code-csharp[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#handlepausedjob)]
 [!code-vb[DiagnoseProblematicPrintJob#HandlePausedJob](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#handlepausedjob)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Printing.PrintSystemJobInfo.IsPaused" />
        <altmember cref="M:System.Printing.PrintSystemJobInfo.Pause" />
      </Docs>
    </Member>
    <Member MemberName="StartTimeOfDay">
      <MemberSignature Language="C#" Value="public int StartTimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartTimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.StartTimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartTimeOfDay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StartTimeOfDay { int get(); };" />
      <MemberSignature Language="F#" Value="member this.StartTimeOfDay : int" Usage="System.Printing.PrintSystemJobInfo.StartTimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-250">取得一天中印表機開始列印工作的最早時間，以午夜 Coordinated Universal Time (UTC，亦稱為格林威治標準時間 (Greenwich Mean Time，GMT)) 之後經過的分鐘數表示。</span><span class="sxs-lookup"><span data-stu-id="f2473-250">Gets the earliest time of day, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the print job can begin printing.</span></span></summary>
        <value><span data-ttu-id="f2473-251"><see cref="T:System.Int32" />，指定列印工作最早的可能開始時間，以午夜 (UTC) 之後經過的分鐘數表示。</span><span class="sxs-lookup"><span data-stu-id="f2473-251">An <see cref="T:System.Int32" /> specifying the earliest possible start time for the print job, expressed as the number of minutes after midnight (UTC).</span></span> <span data-ttu-id="f2473-252">最大值為 1439。</span><span class="sxs-lookup"><span data-stu-id="f2473-252">The maximum value is 1439.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-253">這個值會傳播到每個<xref:System.Printing.PrintSystemJobInfo>物件從<xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>屬性的裝載<xref:System.Printing.PrintQueue>時，作業會進入佇列。</span><span class="sxs-lookup"><span data-stu-id="f2473-253">This value is propagated to each <xref:System.Printing.PrintSystemJobInfo> object from the <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> property of the hosting <xref:System.Printing.PrintQueue> at the time the job enters the queue.</span></span> <span data-ttu-id="f2473-254">如果<xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>變更時，則任何<xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A?displayProperty=nameWithType>值早於<xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>的值會變成<xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f2473-254">If <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> is changed, then any <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A?displayProperty=nameWithType> value that is earlier than <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType> is changed to the value of <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f2473-255">作業加入佇列之後，可以指定新<xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A>透過值[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]，前提是未早於<xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f2473-255">After the job is added to the queue, it can be given a new <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A> value through the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], provided that it is not earlier than <xref:System.Printing.PrintQueue.StartTimeOfDay%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f2473-256">如果您不在 UTC 時區中，您必須加入或減去以取得您的時區的正確時間的 60 的倍數。</span><span class="sxs-lookup"><span data-stu-id="f2473-256">If you are not in the UTC time zone, you must add or subtract multiples of 60 to get the correct time for your time zone.</span></span> <span data-ttu-id="f2473-257">例如，如果您是在太平洋時間區域的北美洲與日光節約時間為非作用中，您的當地時間會早於 UTC 的 8 小時。</span><span class="sxs-lookup"><span data-stu-id="f2473-257">For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC.</span></span> <span data-ttu-id="f2473-258">如果<xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A>傳回 960 16:00 （下午 4:00） 以 utc 格式表示 (因為 960/60 = 16)。</span><span class="sxs-lookup"><span data-stu-id="f2473-258">If <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A> returns 960, that means 16:00 (4:00 PM) in UTC (because 960/60 = 16).</span></span> <span data-ttu-id="f2473-259">若要轉換為太平洋時間，您必須減去的 480 （= 8 \* 60） 分鐘的時間。</span><span class="sxs-lookup"><span data-stu-id="f2473-259">To convert this to Pacific Time, you must subtract 480 (= 8 \* 60) minutes.</span></span>  
  
 <span data-ttu-id="f2473-260">您也必須記得，時間為 24 小時後的零彙總 (也就是; 1439 分鐘之後)。</span><span class="sxs-lookup"><span data-stu-id="f2473-260">You also must remember that time rolls over to zero after 24 hours (that is; after the 1439th minute).</span></span> <span data-ttu-id="f2473-261">如果<xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A>傳回 120，這表示 2:00 AM utc。</span><span class="sxs-lookup"><span data-stu-id="f2473-261">If <xref:System.Printing.PrintSystemJobInfo.StartTimeOfDay%2A> returns 120, that means 2:00 AM in UTC.</span></span> <span data-ttu-id="f2473-262">若要轉換為太平洋時間，您必須減去 480 分鐘，這會導致-360。</span><span class="sxs-lookup"><span data-stu-id="f2473-262">To convert this to Pacific Time, you must subtract 480 minutes, which results in -360.</span></span> <span data-ttu-id="f2473-263">若要取得有意義的正值，請先在一天 1440，導致最後 1080 （下午 6:00） 太平洋時間值的總分鐘數中加入的負數。</span><span class="sxs-lookup"><span data-stu-id="f2473-263">To get a positive value that has meaning, add the negative number to the total minutes in a day, 1440, resulting in a final value of 1080 (6:00 PM) Pacific Time.</span></span>  
  
 <span data-ttu-id="f2473-264">請參閱<xref:System.TimeZone>， <xref:System.TimeSpan>，和<xref:System.DateTime>協助進行時區調整的方法。</span><span class="sxs-lookup"><span data-stu-id="f2473-264">See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> for methods that help make time-zone adjustments.</span></span>  
  
 <span data-ttu-id="f2473-265">如果永遠可用的印表機，則這個屬性會傳回 0 所有時區的時間。</span><span class="sxs-lookup"><span data-stu-id="f2473-265">If the printer is always available, then this property returns 0 in all time zones.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2473-266">下列範例示範如何使用此屬性作為診斷問題列印工作的程序的一部分。</span><span class="sxs-lookup"><span data-stu-id="f2473-266">The following example shows how to use this property as part of the process of diagnosing a problematic print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#usingjobstartanduntiltimes)]
 [!code-csharp[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#usingjobstartanduntiltimes)]
 [!code-vb[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#usingjobstartanduntiltimes)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Printing.PrintQueue.StartTimeOfDay" />
        <altmember cref="P:System.Printing.PrintQueue.UntilTimeOfDay" />
        <altmember cref="P:System.Printing.PrintSystemJobInfo.UntilTimeOfDay" />
      </Docs>
    </Member>
    <Member MemberName="Submitter">
      <MemberSignature Language="C#" Value="public string Submitter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Submitter" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.Submitter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Submitter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Submitter { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Submitter : string" Usage="System.Printing.PrintSystemJobInfo.Submitter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-267">取得送出列印工作的使用者名稱。</span><span class="sxs-lookup"><span data-stu-id="f2473-267">Gets the name of the user who submitted the print job.</span></span></summary>
        <value><span data-ttu-id="f2473-268"><see cref="T:System.String" />，可識別送出列印工作的使用者。</span><span class="sxs-lookup"><span data-stu-id="f2473-268">A <see cref="T:System.String" /> that identifies the user who submitted the print job.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f2473-269">下列範例示範如何診斷問題列印工作時，請使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="f2473-269">The following example shows how to use this property when diagnosing a problem with a print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#enumeratejobsinqueues)]
 [!code-csharp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#enumeratejobsinqueues)]
 [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#enumeratejobsinqueues)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeJobSubmitted">
      <MemberSignature Language="C#" Value="public DateTime TimeJobSubmitted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeJobSubmitted" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.TimeJobSubmitted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeJobSubmitted As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeJobSubmitted { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeJobSubmitted : DateTime" Usage="System.Printing.PrintSystemJobInfo.TimeJobSubmitted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-270">取得送出列印工作的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="f2473-270">Gets the date and time that the print job is submitted.</span></span></summary>
        <value><span data-ttu-id="f2473-271"><see cref="T:System.DateTime" /> 物件，這個物件包含送出列印工作的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="f2473-271">A <see cref="T:System.DateTime" /> object containing the date and time that the print job is submitted.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeSinceStartedPrinting">
      <MemberSignature Language="C#" Value="public int TimeSinceStartedPrinting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TimeSinceStartedPrinting" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.TimeSinceStartedPrinting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeSinceStartedPrinting As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TimeSinceStartedPrinting { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeSinceStartedPrinting : int" Usage="System.Printing.PrintSystemJobInfo.TimeSinceStartedPrinting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-272">取得自列印工作開始列印起的時間 (以毫秒為單位)。</span><span class="sxs-lookup"><span data-stu-id="f2473-272">Gets the time, in milliseconds, since the print job started printing.</span></span></summary>
        <value><span data-ttu-id="f2473-273"><see cref="T:System.Int32" />，表示自列印工作開始起的時間 (以毫秒為單位)。</span><span class="sxs-lookup"><span data-stu-id="f2473-273">An <see cref="T:System.Int32" /> that represents the time, in milliseconds, since the print job started.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UntilTimeOfDay">
      <MemberSignature Language="C#" Value="public int UntilTimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UntilTimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemJobInfo.UntilTimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UntilTimeOfDay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UntilTimeOfDay { int get(); };" />
      <MemberSignature Language="F#" Value="member this.UntilTimeOfDay : int" Usage="System.Printing.PrintSystemJobInfo.UntilTimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2473-274">取得一天中印表機開始列印工作的最後時間，以午夜 Coordinated Universal Time (UTC，亦稱為格林威治標準時間 (Greenwich Mean Time，GMT)) 之後經過的分鐘數表示。</span><span class="sxs-lookup"><span data-stu-id="f2473-274">Gets the last time of day, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the print job can begin printing.</span></span></summary>
        <value><span data-ttu-id="f2473-275"><see cref="T:System.Int32" />，指定工作可以列印的最後時間，以午夜 (UTC) 之後經過的分鐘數表示。</span><span class="sxs-lookup"><span data-stu-id="f2473-275">An <see cref="T:System.Int32" /> that specifies the last time that the job can print, expressed as the number of minutes after midnight (UTC).</span></span> <span data-ttu-id="f2473-276">最大值為 1439。</span><span class="sxs-lookup"><span data-stu-id="f2473-276">The maximum value is 1439.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2473-277">這個值會傳播到每個<xref:System.Printing.PrintSystemJobInfo>物件從<xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>屬性的裝載<xref:System.Printing.PrintQueue>時，作業會進入佇列。</span><span class="sxs-lookup"><span data-stu-id="f2473-277">This value is propagated to each <xref:System.Printing.PrintSystemJobInfo> object from the <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> property of the hosting <xref:System.Printing.PrintQueue> at the time the job enters the queue.</span></span> <span data-ttu-id="f2473-278">如果<xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>變更時，則任何<xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A?displayProperty=nameWithType>值晚於<xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>的值會變成<xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f2473-278">If <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> is changed, then any <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A?displayProperty=nameWithType> value that is later than <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType> is changed to the value of <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f2473-279">作業加入佇列之後，可以指定新<xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A>透過值[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]，前提是它不晚於<xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f2473-279">After the job is added to the queue, it can be given a new <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A> value through the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], provided that it is not later than <xref:System.Printing.PrintQueue.UntilTimeOfDay%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f2473-280">如果您不在 UTC 時區中，您必須加入或減去以取得您的時區的正確時間的 60 的倍數。</span><span class="sxs-lookup"><span data-stu-id="f2473-280">If you are not in the UTC time zone, you must add or subtract multiples of 60 to get the correct time for your time zone.</span></span> <span data-ttu-id="f2473-281">例如，如果您是在太平洋時間區域的北美洲與日光節約時間為非作用中，您的當地時間會早於 UTC 的 8 小時。</span><span class="sxs-lookup"><span data-stu-id="f2473-281">For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC.</span></span> <span data-ttu-id="f2473-282">如果<xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A>傳回 960 16:00 （下午 4:00） 以 utc 格式表示 (因為 960/60 = 16)。</span><span class="sxs-lookup"><span data-stu-id="f2473-282">If <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A> returns 960, that means 16:00 (4:00 PM) in UTC (because 960/60 = 16).</span></span> <span data-ttu-id="f2473-283">若要轉換為太平洋時間，您必須減去的 480 （= 8 \* 60） 分鐘的時間。</span><span class="sxs-lookup"><span data-stu-id="f2473-283">To convert this to Pacific Time, you must subtract 480 (= 8 \* 60) minutes.</span></span>  
  
 <span data-ttu-id="f2473-284">您也必須記得，時間為 24 小時後的零彙總 (也就是; 1439 分鐘之後)。</span><span class="sxs-lookup"><span data-stu-id="f2473-284">You also must remember that time rolls over to zero after 24 hours (that is; after the 1439th minute).</span></span> <span data-ttu-id="f2473-285">如果<xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A>傳回 120，這表示 2:00 AM utc。</span><span class="sxs-lookup"><span data-stu-id="f2473-285">If <xref:System.Printing.PrintSystemJobInfo.UntilTimeOfDay%2A> returns 120, that means 2:00 AM in UTC.</span></span> <span data-ttu-id="f2473-286">若要轉換為太平洋時間，您必須減去 480 分鐘，這會導致-360。</span><span class="sxs-lookup"><span data-stu-id="f2473-286">To convert this to Pacific Time, you must subtract 480 minutes, which results in -360.</span></span> <span data-ttu-id="f2473-287">若要取得有意義的正值，請先在一天 1440，導致最後 1080 （下午 6:00） 太平洋時間值的總分鐘數中加入的負數。</span><span class="sxs-lookup"><span data-stu-id="f2473-287">To get a positive value that has meaning, add the negative number to the total minutes in a day, 1440, resulting in a final value of 1080 (6:00 PM) Pacific Time.</span></span>  
  
 <span data-ttu-id="f2473-288">請參閱<xref:System.TimeZone>， <xref:System.TimeSpan>，和<xref:System.DateTime>協助進行時區調整的方法。</span><span class="sxs-lookup"><span data-stu-id="f2473-288">See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> for methods that help make time-zone adjustments.</span></span>  
  
 <span data-ttu-id="f2473-289">如果永遠可用的印表機，則這個屬性會傳回 0 所有時區的時間。</span><span class="sxs-lookup"><span data-stu-id="f2473-289">If the printer is always available, then this property returns 0 in all time zones.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2473-290">下列範例示範如何使用此屬性作為診斷問題列印工作的程序的一部分。</span><span class="sxs-lookup"><span data-stu-id="f2473-290">The following example shows how to use this property as part of the process of diagnosing a problematic print job.</span></span>  
  
 [!code-cpp[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/cpp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CPP/Program.cpp#usingjobstartanduntiltimes)]
 [!code-csharp[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/csharp/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/CSharp/Program.cs#usingjobstartanduntiltimes)]
 [!code-vb[DiagnoseProblematicPrintJob#UsingJobStartAndUntilTimes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DiagnoseProblematicPrintJob/visualbasic/program.vb#usingjobstartanduntiltimes)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Printing.PrintQueue.StartTimeOfDay" />
        <altmember cref="P:System.Printing.PrintQueue.UntilTimeOfDay" />
        <altmember cref="P:System.Printing.PrintSystemJobInfo.StartTimeOfDay" />
      </Docs>
    </Member>
  </Members>
</Type>