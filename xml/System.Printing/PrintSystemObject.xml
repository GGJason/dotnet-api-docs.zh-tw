<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PrintSystemObject.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac551b35a7dda6fd535113870889c578063a0d45951.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">51b35a7dda6fd535113870889c578063a0d45951</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Printing.PrintSystemObject">
          <source>Defines basic properties and methods that are common to the objects of the printing system.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Printing.PrintSystemObject">
          <source>Classes that derive from this class represent such objects as print queues, print servers, and print jobs.</source>
          
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintSystemObject">
          <source>In addition to being the base class for print system objects, this class can be useful for calling methods when your application does not know or does not care what particular type of print system object it is using.</source>
          <target state="translated">除了列印系統物件的基底類別，這個類別非常適合用於您的應用程式不知道或不在意哪些特定的類型，它正在使用的列印系統物件時呼叫的方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintSystemObject">
          <source>For example, you could enumerate through a <ph id="ph1">&lt;xref:System.Printing.PrintSystemObjects&gt;</ph> collection of different object types, calling the <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject.Commit%2A&gt;</ph> method on each of them in turn.</source>
          <target state="translated">例如，您可以透過列舉<ph id="ph1">&lt;xref:System.Printing.PrintSystemObjects&gt;</ph>集合的不同物件型別、 呼叫<ph id="ph2">&lt;xref:System.Printing.PrintSystemObject.Commit%2A&gt;</ph>每個開啟中的方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintSystemObject">
          <source>Classes within the <ph id="ph1">&lt;xref:System.Printing&gt;</ph> namespace are not supported for use within a Windows service or ASP.NET application or service.</source>
          <target state="translated">類別內<ph id="ph1">&lt;xref:System.Printing&gt;</ph>命名空間不支援為 Windows 服務或 ASP.NET 應用程式或服務中使用。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintSystemObject">
          <source>Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</source>
          <target state="translated">嘗試使用這些類別時，這些應用程式類型的其中一個內可能會產生無法預期的問題，例如會受到影響服務的效能和執行階段例外狀況。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintSystemObject">
          <source>If you want to print from a Windows Forms application, see the <ph id="ph1">&lt;xref:System.Drawing.Printing&gt;</ph> namespace.</source>
          <target state="translated">如果您想要從 Windows Form 應用程式列印，請參閱<ph id="ph1">&lt;xref:System.Drawing.Printing&gt;</ph>命名空間。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Printing.PrintSystemObject">
          <source>If you derive a class from <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>, you may want to derive a collection of objects of that class from <ph id="ph2">&lt;see cref="T:System.Printing.PrintSystemObjects" /&gt;</ph>.</source>
          <target state="translated">如果您是衍生自<ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>，您可能想要從該類別的物件集合的衍生<ph id="ph2">&lt;see cref="T:System.Printing.PrintSystemObjects" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Printing.PrintSystemObject">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.#ctor(System.Printing.PrintSystemObjectLoadMode)">
          <source>A value that specifies whether the properties of the object should be initialized when the object is loaded.</source>
          
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.#ctor(System.Printing.PrintSystemObjectLoadMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> class by using the specified <ph id="ph2">&lt;see cref="T:System.Printing.PrintSystemObjectLoadMode" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.BaseAttributeNames">
          <source>Gets the names of the attributes of the derived class.</source>
          
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.BaseAttributeNames">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> values.</source>
          
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.Commit">
          <source>When overridden in a derived class, writes any changes that your program has made to the object's properties to the actual software or hardware component that the object represents.</source>
          
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Commit">
          <source>For example, when overridden by the <ph id="ph1">&lt;xref:System.Printing.PrintServer&gt;</ph> class, <ph id="ph2">&lt;xref:System.Printing.PrintServer.Commit%2A&gt;</ph> will write changes that are made to the <ph id="ph3">&lt;xref:System.Printing.PrintServer&gt;</ph> object's properties to the actual computer that the object represents.</source>
          <target state="translated">例如，當覆寫<ph id="ph1">&lt;xref:System.Printing.PrintServer&gt;</ph>類別<ph id="ph2">&lt;xref:System.Printing.PrintServer.Commit%2A&gt;</ph>寫入所做的變更，將<ph id="ph3">&lt;xref:System.Printing.PrintServer&gt;</ph>實際電腦物件所代表的物件的屬性。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Commit">
          <source>The following example shows how to use this method (called on a <ph id="ph1">&lt;xref:System.Printing.PrintQueue&gt;</ph> object, which overrides the method from <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>) as part of the process of merging print tickets.</source>
          <target state="translated">下列範例示範如何使用這個方法 (在呼叫<ph id="ph1">&lt;xref:System.Printing.PrintQueue&gt;</ph>物件，它會覆寫的方法，從<ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>) 合併列印票證的程序的一部分。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Printing.PrintSystemObject">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph> 使用完畢時，請呼叫 <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph> 方法會將 <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> 保留在無法使用的狀態。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> was occupying.</source>
          <target state="translated">在呼叫<ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph>，您必須釋放所有參考<ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>讓記憶體回收行程可以回收記憶體的<ph id="ph3">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>所佔用。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>實作 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>.</source>
          <target state="translated">在您釋放最後一個 <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Dispose&gt;</ph> 參考之前，請務必呼叫 <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> object's <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> 物件的 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph> and optionally releases the managed resources.</source>
          
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">這個方法會呼叫公用<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the unnamed Boolean parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 叫用受保護<ph id="ph2">`Dispose(Boolean)`</ph>未命名的布林參數設定為具有方法<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with the parameter set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 叫用<ph id="ph2">`Dispose`</ph>參數設為<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>When the Boolean parameter is <ph id="ph1">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph> references.</source>
          <target state="translated">布林值參數時<ph id="ph1">`true`</ph>，這個方法的任何 managed 物件所持有的資源全部釋出這個<ph id="ph2">&lt;xref:System.Printing.PrintSystemObject&gt;</ph>參考。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用每個參考物件的 <ph id="ph1">`Dispose()`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以被其他物件呼叫多次。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">覆寫 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> 時，請小心不要參考到先前已在對 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> 的早期呼叫中被處置 (Dispose) 的物件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需有關如何實作<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>實作 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">如需有關<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>覆寫 Finalize 方法<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.Finalize">
          <source>Releases the resources that are being used by the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Finalize">
          <source>The <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Finalize%2A&gt;</ph> method acts as a safeguard to clean up resources in the event that the <ph id="ph2">&lt;xref:System.Printing.PrintSystemObject.Dispose%2A&gt;</ph> method is not called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Finalize%2A&gt;</ph>方法做為保護措施，以清除資源的<ph id="ph2">&lt;xref:System.Printing.PrintSystemObject.Dispose%2A&gt;</ph>不會呼叫方法。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Finalize">
          <source>You should implement the <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Finalize%2A&gt;</ph> method to clean up only unmanaged resources.</source>
          <target state="translated">您應該實作<ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Finalize%2A&gt;</ph>方法以清理只 unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Finalize">
          <source>You should not implement this method for managed objects, because the garbage collector cleans up managed resources automatically.</source>
          <target state="translated">您不應該實作受管理物件，這個方法，因為記憶體回收行程會自動清除 managed 資源。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.Initialize">
          <source>Initializes the properties of the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.InternalDispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.InternalDispose(System.Boolean)">
          <source>When overridden in a derived class, releases the unmanaged resources that are being used by the <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>, and optionally releases the managed resources that are being used.</source>
          
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintSystemObject.IsDisposed">
          <source>Gets or sets a value that indicates whether the object has been disposed.</source>
          
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintSystemObject.IsDisposed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object has been disposed; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 如果物件已處置。否則<ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintSystemObject.Name">
          <source>Gets the name of the object.</source>
          
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintSystemObject.Name">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents the name of the object.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> ，代表物件的名稱。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintSystemObject.Parent">
          <source>Gets the parent of the object.</source>
          
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintSystemObject.Parent">
          <source>Another <ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>.</source>
          <target state="translated">另一個<ph id="ph1">&lt;see cref="T:System.Printing.PrintSystemObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintSystemObject.Parent">
          <source>For example, the parent of a print queue is the print server that hosts the queue.</source>
          <target state="translated">例如，列印佇列的父系是裝載佇列的列印伺服器。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Printing.PrintSystemObject.PropertiesCollection">
          <source>Gets a collection of attribute and value pairs.</source>
          
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintSystemObject.PropertiesCollection">
          <source>A <ph id="ph1">&lt;see cref="T:System.Printing.IndexedProperties.PrintPropertyDictionary" /&gt;</ph> that contains attribute and value pairs.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Printing.IndexedProperties.PrintPropertyDictionary" /&gt;</ph> ，其中包含屬性和值組。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Printing.PrintSystemObject.PropertiesCollection">
          <source>The following example shows how to use this property to discover at run time the properties, and the types of those properties, of a print system object, without using reflection.</source>
          <target state="translated">下列範例會示範如何使用這個屬性，在執行階段探索的屬性和列印系統物件，這些屬性的類型而不使用反映。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Printing.PrintSystemObject.Refresh">
          <source>When overridden in a derived class, updates the properties of an object of the derived class so that its values match the values of the actual software or hardware component that the object represents.</source>
          
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Refresh">
          <source>Any changes that you have made to the properties of an object of the derived class may be lost when the <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Refresh%2A&gt;</ph> of the derived class executes.</source>
          <target state="translated">您對衍生類別的物件屬性的任何變更可能會遺失時<ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Refresh%2A&gt;</ph>衍生類別的執行。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Printing.PrintSystemObject.Refresh">
          <source>The loss will occur if the changes have not yet been written to the actual software or hardware component, by using the derived class' implementation of <ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Commit%2A&gt;</ph>.</source>
          <target state="translated">如果變更尚未尚未寫入至實際的硬體或軟體元件，藉由使用衍生的類別實作的就會發生遺失<ph id="ph1">&lt;xref:System.Printing.PrintSystemObject.Commit%2A&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>