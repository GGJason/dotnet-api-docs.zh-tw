<Type Name="WorkflowMarkupSerializer" FullName="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e9110aabbc09f88b858e67300350914ea64e5cc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36449115" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowMarkupSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowMarkupSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowMarkupSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowMarkupSerializer" />
  <TypeSignature Language="F#" Value="type WorkflowMarkupSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationProvider))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>在設計階段為工作流程提供 eXtensible Application Markup Language (XAML) 序列化 (Serialization) 服務。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> 會提供方法，可用來將工作流程和 <xref:System.Workflow.ComponentModel.Activity> 類別序列化為 XAML 格式，並將 XAML 內容還原序列化為工作流程和活動類別物件。 這些服務主要是由工作流程設計工具用來保存工作流程設計介面上的類別。  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> 是 <xref:System.Workflow.ComponentModel.Serialization> 命名空間中所有標記序列化程式的基底類別。  
  
 如需詳細資訊，請參閱[序列化](http://msdn.microsoft.com/library/4d1111c0-9447-4231-a997-96a2b74b3453)。  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> 不支援序列化巢狀型別。  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> 的功能與 Windows Workflow Foundation 外面之其他型別的功能相依。 基於這些其他型別的限制，並非所有資料型別都可以透過 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> 進行序列化。 以下是一些不支援的型別的範例清單。  
  
> [!NOTE]
>  這並非不支援型別的完整清單。  
  
 陣列 (只有當屬性 (Property) 不是以 `DesignerSerializationVisibility.Content` 屬性 (Attribute) 值裝飾時，才會支援)  
  
 不含無參數之建構函式的型別  
  
 多維陣列  
  
 泛型型別 (只有當屬性 (Property) 以 `List` 屬性 (Attribute) 值裝飾時，才會支援 `Dictionary` 和 `DesignerSerializationVisibility.Content` 泛型型別)  
  
 `Hashtable`  
  
 `Queue`  
  
 `Stack`  
  
 `XmlDocument`  
  
 `MailMessage`  
  
 `Bitmap`  
  
 列舉陣列  
  
 以 FlagsAttribute 裝飾的列舉型別  
  
 除了這個清單外，`ContentPropertyAttibute` 無法針對同時使用 `DesignerSerializationVisibilityAttribute` 和 `WorkflowMarkupSerializer` 裝飾的任何屬性序列化。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowMarkupSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowMarkupSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何建立 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> 類別的新執行個體。  這個程式碼範例是 Loader.cs 檔案中 OutlookWorkflowWizard SDK 範例的一部分。 如需詳細資訊，請參閱[Outlook 工作流程精靈](http://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408)。  
  
 [!code-csharp[WF_Samples#97](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#97)]
 [!code-vb[WF_Samples#97](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#97)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="protected internal virtual void AddChild (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object parentObject, object childObj);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void AddChild(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object parentObject, object childObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub AddChild (serializationManager As WorkflowMarkupSerializationManager, parentObject As Object, childObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void AddChild(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ parentObject, System::Object ^ childObj);" />
      <MemberSignature Language="F#" Value="abstract member AddChild : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj * obj -&gt; unit&#xA;override this.AddChild : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj * obj -&gt; unit" Usage="workflowMarkupSerializer.AddChild (serializationManager, parentObject, childObj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="parentObject" Type="System.Object" />
        <Parameter Name="childObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">要在此作業中使用的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
        <param name="parentObject">要在其中加入子物件的 <see cref="T:System.Object" />。</param>
        <param name="childObj">要加入的 <see cref="T:System.Object" />。</param>
        <summary>將子物件加入至指定的物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 除了例外狀況 (Exception) 行為，<xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild%2A> 不會提供任何預設行為。 您必須覆寫 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>，才能在繼承序列化程式中為這個方法提供邏輯。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parentObject" /> 或 <paramref name="childObj" /> 包含 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <Member MemberName="CanSerializeToString">
      <MemberSignature Language="C#" Value="protected internal virtual bool CanSerializeToString (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool CanSerializeToString(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CanSerializeToString (serializationManager As WorkflowMarkupSerializationManager, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool CanSerializeToString(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CanSerializeToString : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; bool&#xA;override this.CanSerializeToString : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; bool" Usage="workflowMarkupSerializer.CanSerializeToString (serializationManager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">用來序列化這個物件的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
        <param name="value">指定的 <see cref="T:System.Object" />。</param>
        <summary>傳回布林值 (Boolean)，這個值表示指定的物件是否可以序列化為字串。</summary>
        <returns>
          <see langword="true" /> 表示指定的物件可以序列化為字串，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> 為 null 參考 (<see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearChildren">
      <MemberSignature Language="C#" Value="protected internal virtual void ClearChildren (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ClearChildren(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub ClearChildren (serializationManager As WorkflowMarkupSerializationManager, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void ClearChildren(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member ClearChildren : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit&#xA;override this.ClearChildren : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit" Usage="workflowMarkupSerializer.ClearChildren (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">支援此作業的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
        <param name="obj">要從其中移除所有子物件的 <see cref="T:System.Object" />。</param>
        <summary>從指定的物件移除所有子物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 除了例外狀況 (Exception) 行為，<xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren%2A> 不會提供任何預設行為。 您必須覆寫 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>，才能在繼承序列化程式中為這個方法提供邏輯。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="obj" /> 為 null 參考 (<see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <Member MemberName="ClrNamespacesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ClrNamespacesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ClrNamespacesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClrNamespacesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClrNamespacesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ClrNamespacesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClrNamespacesProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClrNamespacesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示用來定義自訂活動要參考哪個組件的附加 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需有關這個相依性屬性的詳細資訊，請參閱[使用工作流程標記](http://msdn.microsoft.com/library/e2693a12-640b-4ccb-8fb0-db3075e94aa4)。  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual object CreateInstance (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateInstance(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateInstance(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * Type -&gt; obj&#xA;override this.CreateInstance : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * Type -&gt; obj" Usage="workflowMarkupSerializer.CreateInstance (serializationManager, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serializationManager">支援此作業的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
        <param name="type">指定的 <see cref="T:System.Type" /></param>
        <summary>使用指定的 <see cref="T:System.Type" /> 來建立指定之 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> 的執行個體。</summary>
        <returns>指定之 <see cref="T:System.Type" /> 的執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance%2A> 會使用最符合指定之參數的型別建構函式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> 為 null 參考 (<see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>還原序列化指定的 <see cref="T:System.IO.TextReader" /> 中所包含的序列化 eXtensible Application Markup Language (XAML)。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader -&gt; obj" Usage="workflowMarkupSerializer.Deserialize reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">包含工作流程定義的 <see cref="T:System.Xml.XmlReader" />。</param>
        <summary>將工作流程標記還原序列化為 <see cref="T:System.Object" />。</summary>
        <returns>
          <see cref="T:System.Object" />，包含在工作流程標記檔案或資料流中定義的工作流程定義。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需有關工作流程標記的詳細資訊，請參閱[使用工作流程標記](http://msdn.microsoft.com/library/e2693a12-640b-4ccb-8fb0-db3075e94aa4)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager, System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager, class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (serializationManager As IDesignerSerializationManager, reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager, System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.Xml.XmlReader -&gt; obj" Usage="workflowMarkupSerializer.Deserialize (serializationManager, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="serializationManager">實作 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 介面的物件，例如 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />。</param>
        <param name="reader">包含工作流程定義的 <see cref="T:System.Xml.XmlReader" />。</param>
        <summary>使用指定的序列化管理員，將工作流程標記還原序列化為 <see cref="T:System.Object" />。</summary>
        <returns>
          <see cref="T:System.Object" />，包含在工作流程標記檔案或資料流中定義的工作流程定義。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需工作流程標記的詳細資訊，請參閱[使用工作流程標記](http://msdn.microsoft.com/library/e2693a12-640b-4ccb-8fb0-db3075e94aa4)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> 為 null 參考 (<see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeFromString">
      <MemberSignature Language="C#" Value="protected internal virtual object DeserializeFromString (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, Type propertyType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object DeserializeFromString(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, class System.Type propertyType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function DeserializeFromString (serializationManager As WorkflowMarkupSerializationManager, propertyType As Type, value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ DeserializeFromString(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, Type ^ propertyType, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member DeserializeFromString : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * Type * string -&gt; obj&#xA;override this.DeserializeFromString : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * Type * string -&gt; obj" Usage="workflowMarkupSerializer.DeserializeFromString (serializationManager, propertyType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serializationManager">管理還原序列化 (Deserialization) 程序的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
        <param name="propertyType">與要還原序列化的屬性相關聯的 <see cref="T:System.Type" />。</param>
        <param name="value">字串，包含要還原序列化的 XAML。</param>
        <summary>根據要還原序列化之屬性的指定型別，從指定的字串還原序列化 eXtensible Application Markup Language (XAML) 內容。</summary>
        <returns>已還原序列化的 <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `value` 必須符合下列其中一個準則：  
  
-   屬於基本型別 (Primitive Type)、字串、列舉型別或 <xref:System.TimeSpan>。  
  
-   可以從 <xref:System.IConvertible> 介面，或者從 <xref:System.Delegate> 或 <xref:System.Type> 類別指派。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serializationManager" />、<paramref name="propertyType" /> 或 <paramref name="value" /> 包含 null 參考 (Visual Basic 中為 <see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <Member MemberName="EventsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty EventsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty EventsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EventsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ EventsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EventsProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示附加的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />，此物件會定義事件處理常式屬性的名稱。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以程式設計方式使用物件模型 (Object Model) 發出工作流程執行個體時，這個屬性只能在設計階段使用。 它代表參考尚未編譯之事件處理常式的 XAML。 這個屬性包含 `Hashtable`，具有事件名稱和事件處理常式名稱/值組。 編譯後，此事件屬性就會直接與處理常式產生關聯。  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
   
  
## Examples  
 下列範例顯示如何設定 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty> 相依性屬性的值。  
  
```csharp  
CodeActivity code1 = new CodeActivity();  
Hashtable eventsHashtable = new Hashtable();  
eventsHashtable.Add("ExecuteCode", "methodName1");  
code1.SetValue(WorkflowMarkupSerializer.EventsProperty, eventsHashtable);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.IList GetChildren (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.IList GetChildren(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetChildren (serializationManager As WorkflowMarkupSerializationManager, obj As Object) As IList" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Collections::IList ^ GetChildren(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; System.Collections.IList&#xA;override this.GetChildren : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; System.Collections.IList" Usage="workflowMarkupSerializer.GetChildren (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">支援此作業的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
        <param name="obj">要從其中擷取子物件的 <see cref="T:System.Object" />。</param>
        <summary>擷取指定之物件的子物件清單</summary>
        <returns>
          <see cref="T:System.Collections.IList" />，包含 <paramref name="obj" /> 的子物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 除非在繼承自 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren%2A> 的類別中覆寫，否則會永遠傳回 `null` (`Nothing`)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="obj" /> 或 <paramref name="serializationManager" /> 包含 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="protected internal virtual System.Reflection.EventInfo[] GetEvents (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Reflection.EventInfo[] GetEvents(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetEvents (serializationManager As WorkflowMarkupSerializationManager, obj As Object) As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member GetEvents : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; System.Reflection.EventInfo[]&#xA;override this.GetEvents : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; System.Reflection.EventInfo[]" Usage="workflowMarkupSerializer.GetEvents (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">管理還原序列化 (Deserialization) 程序的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
        <param name="obj">要搜尋事件物件的 <see cref="T:System.Object" />。</param>
        <summary>擷取有關所有與特定 <see cref="T:System.Object" /> 相關聯之事件的資訊。</summary>
        <returns>
          <see cref="T:System.Reflection.EventInfo" /> 陣列，其中包含有關與 <paramref name="obj" /> 相關聯之事件的資訊。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serializationManager" /> 或 <paramref name="obj" /> 包含 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="protected internal virtual System.Reflection.PropertyInfo[] GetProperties (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetProperties (serializationManager As WorkflowMarkupSerializationManager, obj As Object) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; System.Reflection.PropertyInfo[]&#xA;override this.GetProperties : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; System.Reflection.PropertyInfo[]" Usage="workflowMarkupSerializer.GetProperties (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">管理序列化處理序的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
        <param name="obj">要搜尋屬性的 <see cref="T:System.Object" />。</param>
        <summary>擷取有關所有與特定物件相關聯之屬性的資訊。</summary>
        <returns>
          <see cref="T:System.Reflection.PropertyInfo" /> 陣列，其中包含有關與 <paramref name="obj" /> 相關聯之屬性的資訊。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serializationManager" /> 或 <paramref name="obj" /> 包含 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnAfterDeserialize">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterDeserialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterDeserialize(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterDeserialize (serializationManager As WorkflowMarkupSerializationManager, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterDeserialize(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterDeserialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit&#xA;override this.OnAfterDeserialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit" Usage="workflowMarkupSerializer.OnAfterDeserialize (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">管理序列化處理序的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
        <param name="obj">還原序列化的 <see cref="T:System.Object" />。</param>
        <summary>被覆寫。 告知 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" />，已還原序列化物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在執行 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize%2A> 方法之後，立即呼叫 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize%2A>。 您可以在繼承 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize%2A> 的類別中覆寫 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>，如此，即可在 `obj` 序列化為 eXtensible Application Markup Language (XAML) 之後執行任何必要的處理。  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize%2A> 不會提供任何預設行為。 您必須在衍生類別中覆寫它，以加入任何處理邏輯。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterSerialize">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterSerialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterSerialize(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterSerialize (serializationManager As WorkflowMarkupSerializationManager, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterSerialize(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterSerialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit&#xA;override this.OnAfterSerialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit" Usage="workflowMarkupSerializer.OnAfterSerialize (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">管理序列化處理序的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
        <param name="obj">序列化的 <see cref="T:System.Object" />。</param>
        <summary>告知 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" />，已序列化物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在執行 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize%2A> 方法之後，立即呼叫 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A>。 您可以在繼承 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize%2A> 的類別中覆寫 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>，如此，即可在 `obj` 序列化為 eXtensible Application Markup Language (XAML) 之後執行任何必要的處理。  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize%2A> 不會提供任何預設行為。 您必須在衍生類別中覆寫它，以加入任何處理邏輯。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeDeserialize">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeDeserialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeDeserialize(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeDeserialize (serializationManager As WorkflowMarkupSerializationManager, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeDeserialize(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeDeserialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit&#xA;override this.OnBeforeDeserialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit" Usage="workflowMarkupSerializer.OnBeforeDeserialize (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">管理還原序列化 (Deserialization) 程序的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
        <param name="obj">還原序列化的 <see cref="T:System.Object" />。</param>
        <summary>被覆寫。 告知 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" />，即將還原序列化物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在執行 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize%2A> 方法之前，立即呼叫 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize%2A>。 您可以在繼承 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize%2A> 的類別中覆寫 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>，如此，即可在 `obj` 序列化為 eXtensible Application Markup Language (XAML) 之前執行任何必要的處理。  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize%2A> 不會提供任何預設行為。 您必須在衍生類別中覆寫它，以加入任何處理邏輯。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeSerialize">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeSerialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeSerialize(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeSerialize (serializationManager As WorkflowMarkupSerializationManager, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeSerialize(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeSerialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit&#xA;override this.OnBeforeSerialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit" Usage="workflowMarkupSerializer.OnBeforeSerialize (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">管理序列化處理序的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
        <param name="obj">要序列化的 <see cref="T:System.Object" />。</param>
        <summary>告知 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" />，即將執行 <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.Xml.XmlWriter,System.Object)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在執行 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize%2A> 方法之前，立即呼叫 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A>。 您可以在繼承 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize%2A> 的類別中覆寫 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>，以便在序列化程序中的 `obj` 步驟開始之前，在 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A> 上執行任何必要的處理。  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize%2A> 不會提供任何預設行為。 您必須在衍生類別中覆寫它，以加入任何處理邏輯。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將 <see cref="T:System.Object" /> 序列化為 eXtensible Application Markup Language (XAML) 格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> 的功能與 Windows Workflow Foundation 外面之其他型別的功能相依。 基於這些其他型別的限制，並非所有資料型別都可以透過 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> 進行序列化。 以下是一些不支援的型別清單。  
  
> [!NOTE]
>  這並非不支援型別的完整清單。  
  
 陣列 (只有當屬性 (Property) 以 `DesignerSerializationVisibility.Content` 屬性 (Attribute) 值裝飾時，才會支援)  
  
 無參數的建構函式  
  
 多維陣列  
  
 泛型型別 (只有當屬性 (Property) 以 `List` 屬性 (Attribute) 值裝飾時，才會支援 `Dictionary` 和 `DesignerSerializationVisibility.Content` 泛型型別)  
  
 `Hashtable`  
  
 `Queue`  
  
 `Stack`  
  
 `XmlDocument`  
  
 `MailMessage`  
  
 `Bitmap`  
  
 列舉陣列  
  
 除了這個清單外，`ContentPropertyAttibute` 無法針對同時使用 `DesignerSerializationVisibilityAttribute` 和 `WorkflowMarkupSerializer` 裝飾的任何屬性序列化。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter writer, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter writer, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (writer As XmlWriter, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ writer, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj -&gt; unit" Usage="workflowMarkupSerializer.Serialize (writer, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Xml.XmlWriter" />，包含序列化時使用的資料流或檔案。</param>
        <param name="obj">要序列化的物件。</param>
        <summary>將指定的 <see cref="T:System.Object" /> 序列化為工作流程標記檔案或資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您必須在以程式設計方式建立的工作流程中序列化工作流程型別的新執行個體或根活動，才能建立可以在 <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> 中用來建立 <xref:System.Workflow.Runtime.WorkflowInstance> 的工作流程標記。  
  
 如需有關工作流程標記的詳細資訊，請參閱[使用工作流程標記](http://msdn.microsoft.com/library/e2693a12-640b-4ccb-8fb0-db3075e94aa4)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="obj" /> 為 null 參考 (<see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager, System.Xml.XmlWriter writer, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager, class System.Xml.XmlWriter writer, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (serializationManager As IDesignerSerializationManager, writer As XmlWriter, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager, System::Xml::XmlWriter ^ writer, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.Xml.XmlWriter * obj -&gt; unit" Usage="workflowMarkupSerializer.Serialize (serializationManager, writer, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">實作 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 介面的物件，例如 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />。</param>
        <param name="writer">
          <see cref="T:System.Xml.XmlWriter" />，包含序列化時使用的資料流或檔案。</param>
        <param name="obj">要序列化的物件。</param>
        <summary>使用指定的序列化管理員，將指定的 <see cref="T:System.Object" /> 序列化為工作流程標記檔案或資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您必須在以程式設計方式建立的工作流程中序列化工作流程型別的新執行個體或根活動，才能建立可以在 <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> 中用來建立 <xref:System.Workflow.Runtime.WorkflowInstance> 的工作流程標記。  
  
 如需工作流程標記的詳細資訊，請參閱[使用工作流程標記](http://msdn.microsoft.com/library/e2693a12-640b-4ccb-8fb0-db3075e94aa4)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="obj" /> 為 null 參考 (<see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <Member MemberName="SerializeToString">
      <MemberSignature Language="C#" Value="protected internal virtual string SerializeToString (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string SerializeToString(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SerializeToString (serializationManager As WorkflowMarkupSerializationManager, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ SerializeToString(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SerializeToString : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; string&#xA;override this.SerializeToString : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; string" Usage="workflowMarkupSerializer.SerializeToString (serializationManager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">管理序列化處理序的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
        <param name="value">要序列化為字串的 <see cref="T:System.Object" />。</param>
        <summary>將指定的 <see cref="T:System.Object" /> 序列化為字串。</summary>
        <returns>字串，包含序列化的 <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Delegate> 執行個體可以從 `value` 指派，則 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString%2A> 會將與 `value` 相關聯的方法名稱寫入字串。 如果 <xref:System.Type> 執行個體可以從 `value` 指派，則 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString%2A> 會將與 `value` 相關聯之型別的完整限定名稱寫入字串。 如果上述情況不存在，則 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString%2A> 會將 `value` 轉換成字串並寫入結果。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serializationManager" /> 或 <paramref name="value" /> 包含 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializeValue (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializeValue(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializeValue (serializationManager As WorkflowMarkupSerializationManager, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializeValue(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeValue : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; bool&#xA;override this.ShouldSerializeValue : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; bool" Usage="workflowMarkupSerializer.ShouldSerializeValue (serializationManager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">管理序列化處理序的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
        <param name="value">要進行檢查的 <see cref="T:System.Object" />。</param>
        <summary>傳回值，這個值表示 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> 是否應該序列化指定的 <see cref="T:System.Object" />。</summary>
        <returns>若要表示應該序列化 <paramref name="value" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue%2A> 是由 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> 在序列化指定的物件之前呼叫的。 如果 `false` 包含 null 參考 (`value`)，或者 `Nothing` 與目前序列化內容的 `value` 相等，則此方法會傳回 <xref:System.ComponentModel.DefaultValueAttribute>。  
  
 您可以覆寫繼承自 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue%2A> 之類別中的 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>，以自訂是否應該序列化指定之物件的判斷方式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serializationManager" /> 包含 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <Member MemberName="XClassProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty XClassProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty XClassProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XClassProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XClassProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ XClassProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable XClassProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XClassProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示附加的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />，此物件會定義會在編譯期間建立的型別名稱。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個值對應到 XAML 中的 `x:Class` 屬性。 如需詳細資訊，請參閱[使用工作流程標記](http://msdn.microsoft.com/library/e2693a12-640b-4ccb-8fb0-db3075e94aa4)。  
  
 這個屬性只在設計階段使用。 編譯後，它就會變成編譯型別的名稱。  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XCodeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty XCodeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty XCodeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XCodeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XCodeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ XCodeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable XCodeProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XCodeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示內嵌於 XAML <see langword="x:Code" /> 項目的程式碼範例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以程式設計方式使用物件模型 (Object Model) 發出工作流程時，這個屬性只能在設計階段使用。 屬性包含填入 `CodeTypeMemberCollection` 項目的 `CodeSnippetTypeMember` 集合。 編譯後，程式碼就會編譯為產生之型別的一部分。  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
   
  
## Examples  
 下列範例是 XAML 程式碼，其中包含可以在工作流程編譯期間編譯的程式碼範例。  
  
```  
<CodeActivity x:Name="codeActivity1" ExecuteCode="methodName1">  
  <x:Code><![CDATA[  
      void methodName1(object sender, EventArgs e)   
      {  
      }  
  ]]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>