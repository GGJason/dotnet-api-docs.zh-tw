<Type Name="PageAdapter" FullName="System.Web.UI.Adapters.PageAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="77c252f39ba8b9b12439d1bf1e6920e8ac38c877" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51938052" /></Metadata><TypeSignature Language="C#" Value="public abstract class PageAdapter : System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageAdapter extends System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Adapters.PageAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageAdapter&#xA;Inherits ControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAdapter abstract : System::Web::UI::Adapters::ControlAdapter" />
  <TypeSignature Language="F#" Value="type PageAdapter = class&#xA;    inherit ControlAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Adapters.ControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>針對特定的瀏覽器來配置網頁，並提供基底類別，而所有頁面配置器都會直接或間接繼承自此基底類別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter>類別是抽象類別，來配置網頁瀏覽器，瀏覽器中使用的標記語言所定義 （例如 HTML 或 XHTML） 特定類別。 大部分的轉譯行為中的靈活度可以封裝在特製化的文字寫入器類別衍生自<xref:System.Web.UI.HtmlTextWriter>類別中，因此它不一定需要提供的頁面配置器。  
  
 從呼叫衍生的頁面配置器的大部分成員<xref:System.Web.UI.Page>類別或從控制項配接器。 首先，<xref:System.Web.UI.Page>類別或控制項的配接器偵測是否有衍生的頁面配置器中，然後呼叫的成員，或如果不存在的頁面配置器提供的功能。  
  
 成員<xref:System.Web.UI.Adapters.PageAdapter>類別提供下列功能：  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A>並<xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams%2A>屬性會定義其他 HTTP 標頭和 HTTP`GET`和`POST`可用來變更快取的參數。 從快取初始化期間呼叫<xref:System.Web.UI.Page>類別。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A>方法會傳回可用來保存頁面的結合的檢視和控制項狀態的物件。 它參考從<xref:System.Web.UI.Page.PageStatePersister%2A>衍生的頁面配置器是否存在的屬性。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A>方法會提供可用來參考指令碼中的表單 DHTML 程式碼片段。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A>如果網頁為回傳，方法會傳回回傳變數的集合。 它由.NET Framework，而不是呼叫<xref:System.Web.UI.Page.DeterminePostBackMode%2A?displayProperty=nameWithType>衍生的頁面配置器是否存在的方法。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>和<xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A>方法控制配接器用來呈現超連結，衍生的頁面配置器是否存在。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A>方法呈現超連結或可以送出表單的回傳的用戶端標記。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A>並<xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A>選項按鈕控制項配接器會使用方法來參考另<xref:System.Web.UI.WebControls.RadioButton>選項按鈕群組中的控制項。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A>屬性提供的結合控制項和檢視狀態的存取權<xref:System.Web.UI.Page>物件，可透過內部`ClientState`屬性<xref:System.Web.UI.Page>類別。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A>控制項配接器會使用方法來執行裝置特定的文字轉換。  
  
   
  
## Examples  
 下列程式碼範例示範如何在衍生類別，名為`CustomPageAdapter`從<xref:System.Web.UI.Adapters.PageAdapter>類別並覆寫<xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>方法。 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>方法會將名為屬性`src`超連結，其中包含目前頁面的參考。 轉譯的頁面中的所有超連結`CustomPageAdapter`連接將會有`src`屬性。  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.Adapters.PageAdapter" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 建構此配接器在內部建立對應時<xref:System.Web.UI.Page>類別或衍生的類別。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByHeaders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByHeaders As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByHeaders { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByHeaders : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得其他 HTTP 標頭的清單，而且會根據此清單為附加此衍生頁面配置器的網頁變更快取。</summary>
        <value><see cref="T:System.Collections.IList" />，包含 HTTP 標頭的清單，否則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在網站上的實體快取的網頁快取多個版本中，根據 HTTP 標頭和其他因素。 例如，版本通常會快取頁面產生的每一種語言，依據`Accept-Language`HTTP 標頭。  
  
 針對特定瀏覽器，可能必須變更該控制獨立於目標的快取的 HTTP 標頭除了標頭快取。 比方說，它可能需要快取不同版本的不同螢幕大小的頁面。  
  
 所傳回的標頭名稱<xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A>標頭的清單中新增屬性上`Vary`傳送到用戶端瀏覽器的 HTTP 標頭。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>當您繼承自<see cref="T:System.Web.UI.Adapters.PageAdapter" />類別，您可以覆寫<see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />屬性以傳回要控制特定目標的快取的其他標頭的清單。 <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />基底屬性會傳回<see langword="null" />。</para></block>
        <altmember cref="T:System.Web.HttpCacheVaryByHeaders" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByHeaders" />
        <altmember cref="T:System.Web.UI.Page" />
        <related type="Article" href="https://msdn.microsoft.com/library/5032122d-221f-4fed-a5a7-90011f5f88fd">如何： 快取的頁面上，根據 HTTP 標頭版本</related>
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByParams">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByParams As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByParams { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByParams : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>從 HTTP GET 和 POST 要求取得其他參數的清單，而且會根據此清單為附加此衍生頁面配置器的網頁變更快取。</summary>
        <value><see cref="T:System.Collections.IList" />，包含 GET 和 POST 參數的清單，否則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在快取的網頁快取多個版本的網站上的實體為基礎，還有其他因素，要求參數。 例如，版本會通常會快取可能會產生頁面的零售連鎖商店中的每個存放區位置根據參數名稱 (例如`StoreID`)。  
  
 針對特定瀏覽器，它可能需要變更快取 get 或 POST 參數，除了參數之外，控制獨立於目標的快取。 比方說，它可能需要不同的行動電話服務提供者的快取不同版本的頁面。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>當您繼承自<see cref="T:System.Web.UI.Adapters.PageAdapter" />類別，您可以覆寫<see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />屬性以傳回一份詳細的 GET 或 POST 參數，以控制特定目標的快取。 <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />基底方法會傳回<see langword="null" />。</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByParams" />
        <related type="Article" href="https://msdn.microsoft.com/library/a504b287-c8d2-4838-9817-3ffee416fec4">如何： 快取的頁面上，根據參數的版本</related>
      </Docs>
    </Member>
    <Member MemberName="ClientState">
      <MemberSignature Language="C#" Value="protected string ClientState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ClientState As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ClientState { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientState : string" Usage="System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得編碼過的字串，其中包含附加此衍生頁面配置器的網頁之檢視和控制項狀態資料。</summary>
        <value>編碼的 <see cref="T:System.String" />，其中包含關聯的 <see cref="T:System.Web.UI.Page" /> 上控制項的結合檢視和控制項狀態。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A>屬性可存取內部`ClientState`屬性<xref:System.Web.UI.Page>類別。  
  
 檢視狀態資料的預存<xref:System.Web.UI.PageStatePersister>在內部的物件`ClientState`屬性<xref:System.Web.UI.Page>將一律會儲存在隱藏的欄位在網頁上。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>當您繼承自<see cref="T:System.Web.UI.Adapters.PageAdapter" />類別，您無法覆寫<see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" />屬性不是因為<see langword="virtual" />。 若要修改的行為<see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" />衍生類別中實作新<see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" />參照屬性<see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" />基底類別的屬性。</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/082c763e-ffe8-4baf-b5e5-a26b2d383187">頁面配置器和檢視狀態</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.NET 狀態管理概觀</related>
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackMode">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackMode () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackMode();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>判斷網頁是否在回傳中，然後傳回回傳變數的名稱/值組合。</summary>
        <returns>回傳變數的 <see cref="T:System.Collections.Specialized.NameValueCollection" /> (如果有的話)，否則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A>方法會傳回其中一個下列集合：  
  
-   如果 HTTP 資料傳輸方法的表單變數是`POST`。  
  
-   如果 HTTP 方法是查詢字串變數`GET`。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>當您繼承自<see cref="T:System.Web.UI.Adapters.PageAdapter" />類別，您可以覆寫<see cref="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" />方法，以提供目標特定處理的回傳變數集合。</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Page.DeterminePostBackMode" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackModeUnvalidated">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackModeUnvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackModeUnvalidated () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackModeUnvalidated();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackModeUnvalidated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回使用 POST 或 GET 命令發佈至網頁中的資料名稱-值集合，但不對要求執行 ASP.NET 要求驗證。</summary>
        <returns>未經驗證的表單資料。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱 <xref:System.Web.UnvalidatedRequestValues> 類別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackFormReference">
      <MemberSignature Language="C#" Value="protected internal virtual string GetPostBackFormReference (string formId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetPostBackFormReference(string formId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetPostBackFormReference (formId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetPostBackFormReference(System::String ^ formId);" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackFormReference : string -&gt; string&#xA;override this.GetPostBackFormReference : string -&gt; string" Usage="pageAdapter.GetPostBackFormReference formId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formId"><see cref="T:System.String" />，其中包含被張貼之表單的用戶端 ID。</param>
        <summary>傳回 DHTML 程式碼片段，用戶端瀏覽器可利用此程式碼片段參考被張貼之頁面上的表單。</summary>
        <returns><see cref="T:System.String" />，包含對被張貼之頁面上的表單之參考。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A>方法提供回傳的表單的 DHTML 參考。 程式碼片段的格式如下：  
  
 `document.forms['` `formID` `']`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>當您繼承自<see cref="T:System.Web.UI.Adapters.PageAdapter" />類別，您可以覆寫<see cref="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" />方法，如果配接器支援的瀏覽器的標記會需要不同的格式回傳的形式參考。 例如，使用 PocketPC 瀏覽器的 HTML 3.2 標準需要以下列格式： 
 <c>文件。</c><paramref name="formID" /></para></block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="GetRadioButtonsByGroup">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection GetRadioButtonsByGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetRadioButtonsByGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRadioButtonsByGroup (groupName As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ICollection ^ GetRadioButtonsByGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="abstract member GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection&#xA;override this.GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection" Usage="pageAdapter.GetRadioButtonsByGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName"><see cref="T:System.String" />，要擷取的 <see cref="T:System.Web.UI.WebControls.RadioButton" /> 群組的名稱。</param>
        <summary>擷取由 <paramref name="groupName" /> 所指定的選項按鈕控制項集合。</summary>
        <returns>組成 <paramref name="groupName" /> 的 <see cref="T:System.Collections.ICollection" /> 控制項之 <see cref="T:System.Web.UI.WebControls.RadioButton" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 選項按鈕控制項配接器使用<xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A>並<xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A>方法，以參考其他<xref:System.Web.UI.WebControls.RadioButton>群組中的控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <Member MemberName="GetStatePersister">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.PageStatePersister GetStatePersister ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.PageStatePersister GetStatePersister() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatePersister () As PageStatePersister" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::PageStatePersister ^ GetStatePersister();" />
      <MemberSignature Language="F#" Value="abstract member GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister&#xA;override this.GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister" Usage="pageAdapter.GetStatePersister " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PageStatePersister</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回網頁所使用的物件，以維護控制項和檢視狀態。</summary>
        <returns>衍生自 <see cref="T:System.Web.UI.PageStatePersister" /> 的物件，可支援 <see cref="T:System.Web.UI.Page" /> 的結合控制項和檢視狀態的建立及擷取作業。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Page.PageStatePersister%2A>屬性使用<xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A>方法來傳回物件，而衍生自<xref:System.Web.UI.PageStatePersister>類別的 forms，並擷取頁面的結合的控制項和檢視狀態。 如果沒有任何衍生的頁面配置器附加至頁面上，<xref:System.Web.UI.HiddenFieldPageStatePersister>物件用來維護 頁面上的隱藏欄位中的狀態。  
  
|連結類型|產生連結|  
|---------------|--------------------|  
|實體參考，cer 的程式碼|<xref:System.Char.ToString%2A>|  
|程式碼實體的參考名稱 cerq|<xref:System.Char.ToString%2A?displayProperty=nameWithType>|  
|實體參考特定，cer 的程式碼|<xref:System.Char.ToString%28System.Char%29>|  
|程式碼實體參考限定特定 cerqs|<xref:System.Char.ToString%28System.Char%29?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>檢視狀態資料的預存<see cref="T:System.Web.UI.PageStatePersister" />在內部的物件<see langword="ClientState" />屬性<see cref="T:System.Web.UI.Page" />將一律會儲存在隱藏的欄位在網頁上。</para></block>
        <block subset="none" type="overrides"><para>當您繼承自<see cref="T:System.Web.UI.Adapters.PageAdapter" />類別，您可以覆寫<see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" />方法來傳回另一個衍生的頁面狀態 persister，如果不可行 （例如，因為有限的資源） 維護的組合的狀態可隱藏欄位中。  
  
<see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" />基底類別傳回<see cref="T:System.Web.UI.HiddenFieldPageStatePersister" />物件。 您可以使用<see cref="T:System.Web.UI.SessionPageStatePersister" />類別，以維持工作階段狀態中的頁面狀態。</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
        <altmember cref="T:System.Web.UI.HiddenFieldPageStatePersister" />
        <altmember cref="T:System.Web.UI.SessionPageStatePersister" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRadioButton">
      <MemberSignature Language="C#" Value="public virtual void RegisterRadioButton (System.Web.UI.WebControls.RadioButton radioButton);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRadioButton(class System.Web.UI.WebControls.RadioButton radioButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterRadioButton(System::Web::UI::WebControls::RadioButton ^ radioButton);" />
      <MemberSignature Language="F#" Value="abstract member RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit&#xA;override this.RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit" Usage="pageAdapter.RegisterRadioButton radioButton" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radioButton" Type="System.Web.UI.WebControls.RadioButton" />
      </Parameters>
      <Docs>
        <param name="radioButton">要加入到集合中的 <see cref="T:System.Web.UI.WebControls.RadioButton" />。</param>
        <summary>將選項按鈕控制項加入指定選項按鈕群組的集合中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter>類別會使用<xref:System.Collections.Specialized.ListDictionary>維護一份選項按鈕群組的物件。 在每個項目<xref:System.Collections.Specialized.ListDictionary>的集合<xref:System.Web.UI.WebControls.RadioButton>選項按鈕群組中的控制項。 <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A>方法會加入<xref:System.Web.UI.WebControls.RadioButton>控制項加入適當的集合，建立集合，如果已經存在，以及建立<xref:System.Collections.Specialized.ListDictionary>如果那里不先前註冊<xref:System.Web.UI.WebControls.RadioButton>控制項。  
  
 選項按鈕控制項配接器使用<xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A>並<xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A>方法，以參考其他<xref:System.Web.UI.WebControls.RadioButton>選項按鈕群組中的控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將開頭的超連結標記呈現至回應資料流中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">包含呈現特定目標輸出方法的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="targetUrl"><see cref="T:System.String" /> 值中有連結的目標 URL。</param>
        <param name="encodeUrl">若為 <see langword="true" />，使用 <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> 為資料流輸出編碼，否則為 <see langword="false" />。</param>
        <param name="softkeyLabel">當做螢幕小鍵盤標籤的 <see cref="T:System.String" /> 值。</param>
        <summary>呈現開頭的超連結標記到回應資料流，其中包含的目標 URL。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>方法寫入開頭的超連結標記。 當`writer`是<xref:System.Web.UI.HtmlTextWriter>，此標籤具有下列格式：  
  
 `<a href="` `targetUrl` `">`  
  
   
  
## Examples  
 下列程式碼範例示範如何在衍生類別，名為`CustomPageAdapter`從<xref:System.Web.UI.Adapters.PageAdapter>類別並覆寫<xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>方法。 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>方法會將名為屬性`src`超連結，其中包含目前頁面的參考。 轉譯的頁面中的所有超連結`CustomPageAdapter`連接將會有`src`屬性。  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>當您繼承自<see cref="T:System.Web.UI.Adapters.PageAdapter" />類別，您可以覆寫<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" />撰寫不同的格式為開頭的超連結標記或撰寫額外的標記屬性的方法。 例如，<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" />基底方法不會寫入屬性<paramref name="softkeyLabel" />。</para></block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">包含呈現特定目標輸出方法的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="targetUrl"><see cref="T:System.String" /> 值中有連結的目標 URL。</param>
        <param name="encodeUrl">若為 <see langword="true" />，使用 <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> 為資料流輸出編碼，否則為 <see langword="false" />。</param>
        <param name="softkeyLabel">當做螢幕小鍵盤標籤的 <see cref="T:System.String" /> 值。</param>
        <param name="accessKey"><see cref="T:System.String" /> 值，要將此值指派到要建立的連結之 <see langword="accessKey" /> 屬性。</param>
        <summary>呈現開頭的超連結標記到回應資料流，其中包含目標 URL 和便捷鍵 (Access Key)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>方法寫入開頭的超連結標記。 當`writer`是<xref:System.Web.UI.HtmlTextWriter>物件，此標記必須以下列格式：  
  
 `<a href="` `targetUrl` `" accessKey="` `accessKey` `">`  
  
   
  
## Examples  
 下列程式碼範例示範如何在衍生類別，名為`CustomPageAdapter`從<xref:System.Web.UI.Adapters.PageAdapter>類別並覆寫<xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>方法。 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> 加入名為屬性`src`超連結，其中包含目前頁面的參考。 轉譯的頁面中的所有超連結`CustomPageAdapter`連接將會有`src`屬性。  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="accessKey" /> 長度超過一個字元。</exception>
        <block subset="none" type="overrides"><para>當您繼承自<see cref="T:System.Web.UI.Adapters.PageAdapter" />類別，您可以覆寫<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" />撰寫不同的格式為開頭的超連結標記或撰寫額外的標記屬性的方法。 例如，<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" />基底方法不會寫入屬性<paramref name="softkeyLabel" />。</para></block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderEndHyperlink (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndHyperlink(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndHyperlink (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndHyperlink(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="pageAdapter.RenderEndHyperlink writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" />，其中包含要呈現特定目標輸出的方法。</param>
        <summary>將結尾的超連結標記呈現至回應資料流中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A>方法寫入結尾超連結標記。 文字寫入器時<xref:System.Web.UI.HtmlTextWriter>物件，此標記必須以下列格式：  
  
 `</a>`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>當您繼承自<see cref="T:System.Web.UI.Adapters.PageAdapter" />類別，您可以覆寫<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />和<see cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />方法不同的格式的超連結時必須進行轉譯。</para></block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderPostBackEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將回傳事件以連結的形式呈現到回應資料流中，其中包含所有必要的引數。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">包含呈現特定目標輸出方法的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="target"><see cref="T:System.String" /> 值中有回傳事件目標名稱。</param>
        <param name="argument"><see cref="T:System.String" /> 值中有要傳遞至回傳目標事件的引數。</param>
        <param name="softkeyLabel">當做螢幕小鍵盤標籤的 <see cref="T:System.String" /> 值。</param>
        <param name="text">顯示成為連結文字的 <see cref="T:System.String" /> 值。</param>
        <summary>將回傳事件以超連結的形式呈現到回應資料流中，其中包含已編碼及可能已加密的檢視狀態，以及事件目標和引數。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A>方法會寫入為 scriptless 超連結的回傳事件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>當您繼承自<see cref="T:System.Web.UI.Adapters.PageAdapter" />類別，您可以覆寫<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />方法如果不同的格式為需要回傳事件的超連結，或瀏覽器具有其他唯一的需求。 例如，某些瀏覽器要求不能為空白的連結是否要呈現的超連結文字。 您也可以覆寫<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />如果有限的資源可讓您防止包括做為 URL 參數的檢視狀態。 <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />基底方法不會寫入屬性<paramref name="softkeyLabel" />。</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">包含呈現特定目標輸出方法的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="target"><see cref="T:System.String" /> 值中有回傳事件目標名稱。</param>
        <param name="argument"><see cref="T:System.String" /> 值中有要傳遞至回傳目標事件的引數。</param>
        <param name="softkeyLabel">當做螢幕小鍵盤標籤的 <see cref="T:System.String" /> 值。</param>
        <param name="text">顯示成為連結文字的 <see cref="T:System.String" /> 值。</param>
        <param name="postUrl"><see cref="T:System.String" /> 值中有回傳 URL 目的網頁。</param>
        <param name="accessKey"><see cref="T:System.String" /> 值，要將此值指派到已建立連結的 <see langword="accessKey" /> 屬性。</param>
        <summary>將回傳事件以超連結的形式呈現到回應資料流中，其中包含已編碼及可能已加密的檢視狀態、事件目標和引數、之前頁面的參數以及便捷鍵。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A>方法會寫入回傳事件以 scriptless 的超連結，包括可能區塊<xref:System.Web.HttpUtility.UrlEncode%2A>檢視狀態`__EVENTTARGET=target`， `__EVENTARGUMENT=argument`，`__PREVIOUSPAGE=currentFilePath`參數，和`accessKey="accessKey"`屬性。  
  
 如果加密的檢視狀態`enableViewStateMac`的屬性[pages 項目 （ASP.NET 設定結構描述）](https://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458)組態項目設為`true`。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>當您繼承自<see cref="T:System.Web.UI.Adapters.PageAdapter" />類別，您可以覆寫<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />方法如果不同的格式為需要回傳事件的超連結，或瀏覽器具有其他唯一的需求。 例如，某些瀏覽器要求不能為空白的連結是否要呈現的超連結文字。 您也可以覆寫<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />如果有限的資源可讓您防止包括做為 URL 參數的檢視狀態。 <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />基底方法不會寫入屬性<paramref name="softkeyLabel" />。</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="protected void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey, bool encode);" />
      <MemberSignature Language="F#" Value="member this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string * bool -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">包含呈現特定目標輸出方法的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="target"><see cref="T:System.String" /> 值中有回傳事件目標名稱。</param>
        <param name="argument"><see cref="T:System.String" /> 值中有要傳遞至回傳目標事件的引數。</param>
        <param name="softkeyLabel">當做螢幕小鍵盤標籤的 <see cref="T:System.String" /> 值。</param>
        <param name="text">顯示成為連結文字的 <see cref="T:System.String" /> 值。</param>
        <param name="postUrl"><see cref="T:System.String" /> 值中有回傳 URL 目的網頁。</param>
        <param name="accessKey"><see cref="T:System.String" /> 值，要將此值指派到已建立連結的 <see langword="accessKey" /> 屬性。</param>
        <param name="encode"><see langword="true" /> 表示使用 <c>&amp;amp;</c> 作為 URL 參數分隔符號；<see langword="false" /> 則是使用 <c>&amp;</c>。</param>
        <summary>將回傳事件以超連結的形式呈現到回應資料流中，其中包含已編碼的檢視狀態、事件目標和引數、之前頁面的參數以及便捷鍵。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A>方法會寫入回傳事件以 scriptless 的超連結，包括可能區塊<xref:System.Web.HttpUtility.UrlEncode%2A>檢視狀態`__EVENTTARGET=target`， `__EVENTARGUMENT=argument`，`__PREVIOUSPAGE=currentFilePath`參數，和`accessKey="accessKey"`屬性。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>當您繼承自<see cref="T:System.Web.UI.Adapters.PageAdapter" />類別，您可以覆寫<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />方法如果不同的格式為需要回傳事件的超連結，或瀏覽器具有其他唯一的需求。 例如，某些瀏覽器要求不能為空白的連結是否要呈現的超連結文字。 您也可以覆寫<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />如果有限的資源造成包括做為 URL 參數的檢視狀態。 <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />基底方法不會寫入屬性<paramref name="softkeyLabel" />。</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="TransformText">
      <MemberSignature Language="C#" Value="public virtual string TransformText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string TransformText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TransformText (text As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ TransformText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member TransformText : string -&gt; string&#xA;override this.TransformText : string -&gt; string" Usage="pageAdapter.TransformText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><see cref="T:System.String" />，為要轉換的文字。</param>
        <summary>轉換目標瀏覽器的文字。</summary>
        <returns><see cref="T:System.String" />，其中包含已轉換的文字。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A>方法可用，例如，轉換定位點字元 (`\t`) 到分行符號 (`\n`)。  
  
 <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A>基底方法會傳回`text`不變。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>當您繼承自<see cref="T:System.Web.UI.Adapters.PageAdapter" />類別，您可以覆寫<see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" />如果特定的標記具有不同的標準 HTML 表單的建構。 例如，如果瀏覽器需要不同的識別項的標記比什麼會在 HTML 中，使用<see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" />可以覆寫方法，以尋找該標記，並將它變更。</para></block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
  </Members>
</Type>