<Type Name="XmlSchemaValidationFlags" FullName="System.Xml.Schema.XmlSchemaValidationFlags">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4ec6cc7e25b108e726f5958c1463b14029fd975d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30719752" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum XmlSchemaValidationFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlSchemaValidationFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaValidationFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum XmlSchemaValidationFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class XmlSchemaValidationFlags" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b1893-101">指定 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 和 <see cref="T:System.Xml.XmlReader" /> 類別 (Class) 所使用的結構描述驗證選項。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b1893-101">Specifies schema validation options used by the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> and <see cref="T:System.Xml.XmlReader" /> classes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1893-102">以下是附註，以使用時，請考慮<xref:System.Xml.Schema.XmlSchemaValidationFlags>值與<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="b1893-102">The following are notes to consider when using <xref:System.Xml.Schema.XmlSchemaValidationFlags> values with the <xref:System.Xml.XmlReader>.</span></span>  
  
-   <span data-ttu-id="b1893-103"><xref:System.Xml.Schema.XmlSchemaValidationFlags> 值會定義結構描述，驗證所使用的驗證選項<xref:System.Xml.XmlReader>若要執行 XML 結構描述驗證。</span><span class="sxs-lookup"><span data-stu-id="b1893-103"><xref:System.Xml.Schema.XmlSchemaValidationFlags> values define validation options used by a schema validating <xref:System.Xml.XmlReader> to perform XML validation against a schema.</span></span> <span data-ttu-id="b1893-104"><xref:System.Xml.Schema.XmlSchemaValidationFlags> 值對其進行驗證<xref:System.Xml.XmlReader>使用指定的<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="b1893-104"><xref:System.Xml.Schema.XmlSchemaValidationFlags> values for a validating <xref:System.Xml.XmlReader> are specified using the <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> property.</span></span>  
  
 <span data-ttu-id="b1893-105">下列是使用 AllowXmlAttributes 值時要考慮的附註。</span><span class="sxs-lookup"><span data-stu-id="b1893-105">The following are notes to consider when using the AllowXmlAttributes value.</span></span>  
  
1.  <span data-ttu-id="b1893-106">當結構描述不會匯入的 Xml 命名空間。</span><span class="sxs-lookup"><span data-stu-id="b1893-106">When a schema doesn’t import the Xml namespace.</span></span>  
  
    1.  <span data-ttu-id="b1893-107">如果設為 AllowXmlAttributes `true` （預設值） 和執行個體文件包含的 Xml 屬性，驗證引擎將會載入預設 Xml 命名空間的結構描述的快照集，並將它用於驗證。</span><span class="sxs-lookup"><span data-stu-id="b1893-107">If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will load a snapshot of the default Xml namespace schema and use it for validation.</span></span> <span data-ttu-id="b1893-108">如果預設結構描述中找不到執行個體文件中使用的 Xml 屬性，將不會驗證文件。</span><span class="sxs-lookup"><span data-stu-id="b1893-108">If Xml attributes used in the instance document are not found in the default schema, the document will not validate.</span></span>  
  
    2.  <span data-ttu-id="b1893-109">如果設為 AllowXmlAttributes`false`和執行個體文件包含的 Xml 屬性、 驗證引擎將會報告錯誤。</span><span class="sxs-lookup"><span data-stu-id="b1893-109">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes, the validation engine will report an error.</span></span>  
  
2.  <span data-ttu-id="b1893-110">當結構描述匯入不含位置的 Xml 命名空間。</span><span class="sxs-lookup"><span data-stu-id="b1893-110">When a schema imports the Xml namespace without a location.</span></span>  
  
    1.  <span data-ttu-id="b1893-111">如果設為 AllowXmlAttributes `true` （預設值） 和執行個體文件包含的 Xml 屬性、 驗證引擎會使用預設 Xml 命名空間的結構描述進行驗證。</span><span class="sxs-lookup"><span data-stu-id="b1893-111">If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will use the default Xml namespace schema for validation.</span></span> <span data-ttu-id="b1893-112">如果預設結構描述中找不到執行個體文件中使用的 Xml 屬性，將不會驗證文件。</span><span class="sxs-lookup"><span data-stu-id="b1893-112">If Xml attributes used in the instance document are not found in the default schema, the document will not validate.</span></span>  
  
    2.  <span data-ttu-id="b1893-113">如果設為 AllowXmlAttributes`false`和執行個體文件包含不明確允許由結構描述驗證引擎將會報告錯誤的 Xml 屬性。</span><span class="sxs-lookup"><span data-stu-id="b1893-113">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.</span></span>  
  
    3.  <span data-ttu-id="b1893-114">如果設為 AllowXmlAttributes`false`和執行個體文件包含明確允許由結構描述驗證引擎將會驗證相同的方式，它會使用預設的 Xml 的其他屬性來驗證屬性的 Xml 屬性命名空間的結構描述。</span><span class="sxs-lookup"><span data-stu-id="b1893-114">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using the default Xml namespace schema.</span></span>  
  
3.  <span data-ttu-id="b1893-115">當結構描述匯入自訂 Xml 命名空間的結構描述與自訂結構描述位置。</span><span class="sxs-lookup"><span data-stu-id="b1893-115">When a schema imports a custom Xml namespace schema with a custom schemaLocation.</span></span>  
  
    1.  <span data-ttu-id="b1893-116">如果設為 AllowXmlAttributes `true` （預設值） 和執行個體文件包含的 Xml 屬性、 驗證引擎會使用自訂的 Xml 命名空間結構描述進行驗證。</span><span class="sxs-lookup"><span data-stu-id="b1893-116">If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will use the custom Xml namespace schema for validation.</span></span> <span data-ttu-id="b1893-117">如果指定的結構描述中找不到執行個體文件中使用的 Xml 屬性，將不會驗證文件。</span><span class="sxs-lookup"><span data-stu-id="b1893-117">If Xml attributes used in the instance document are not found in the specified schema, the document will not validate.</span></span>  
  
    2.  <span data-ttu-id="b1893-118">如果設為 AllowXmlAttributes`false`和執行個體文件包含不明確允許由結構描述驗證引擎將會報告錯誤的 Xml 屬性。</span><span class="sxs-lookup"><span data-stu-id="b1893-118">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.</span></span>  
  
    3.  <span data-ttu-id="b1893-119">如果設為 AllowXmlAttributes`false`和執行個體文件包含明確允許由結構描述驗證引擎將會驗證相同的方式，它會使用指定的 Xml 的其他屬性來驗證屬性的 Xml 屬性命名空間的結構描述。</span><span class="sxs-lookup"><span data-stu-id="b1893-119">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using specified Xml namespace schema.</span></span>  
  
4.  <span data-ttu-id="b1893-120">當結構描述會定義 xml: \* 使用具有屬性 = 「 要求 」。</span><span class="sxs-lookup"><span data-stu-id="b1893-120">When a schema defines an xml:\* attribute with use="required".</span></span>  
  
    1.  <span data-ttu-id="b1893-121">下列適用於當設為 AllowXmlAttributes`true`和`false`。</span><span class="sxs-lookup"><span data-stu-id="b1893-121">The following applies when AllowXmlAttributes is set to `true` and `false`.</span></span> <span data-ttu-id="b1893-122">必要的 xml: \* 屬性應該被視為其他屬性，並使用指定的 Xml 命名空間結構描述進行驗證。</span><span class="sxs-lookup"><span data-stu-id="b1893-122">Required xml:\* attributes should be treated as other attributes and validated using the specified Xml namespace schema.</span></span>  
  
5.  <span data-ttu-id="b1893-123">當結構描述會定義 xml: \* 使用具有屬性 ="prohibited"。</span><span class="sxs-lookup"><span data-stu-id="b1893-123">When a schema defines an xml:\* attribute with use="prohibited".</span></span>  
  
    1.  <span data-ttu-id="b1893-124">下列適用於當設為 AllowXmlAttributes`true`和`false`。</span><span class="sxs-lookup"><span data-stu-id="b1893-124">The following applies when AllowXmlAttributes is set to `true` and `false`.</span></span> <span data-ttu-id="b1893-125">如果執行個體文件包含的 xml: \* 屬性明確禁止的結構描述，驗證引擎將會報告錯誤。</span><span class="sxs-lookup"><span data-stu-id="b1893-125">If an instance document contains xml:\* attributes that are explicitly prohibited by the schema, the validation engine will report an error.</span></span>  
  
6.  <span data-ttu-id="b1893-126">當結構描述指定屬性萬用字元。</span><span class="sxs-lookup"><span data-stu-id="b1893-126">When a schema specifies an attribute wildcard.</span></span>  
  
    1.  <span data-ttu-id="b1893-127">如果執行個體文件包含的 Xml 屬性和結構描述指定使用 processContents 省略或設為"strict 的"的屬性萬用字元，驗證引擎會使用 Xml 命名空間結構描述存在於<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="b1893-127">If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents either omitted or set to "strict", the validation engine will use the Xml namespace schema present in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="b1893-128">如果未不指定任何 Xml 命名空間的結構描述，驗證引擎行為，如下所示。</span><span class="sxs-lookup"><span data-stu-id="b1893-128">If no Xml namespace schema is specified, the validation engine will behave as follows.</span></span>  
  
    2.  <span data-ttu-id="b1893-129">如果設為 AllowXmlAttributes `true`，驗證引擎會使用預設 Xml 命名空間的結構描述來執行驗證。</span><span class="sxs-lookup"><span data-stu-id="b1893-129">If AllowXmlAttributes is set to `true`, the validation engine will use the default Xml namespace schema to perform validation.</span></span>  
  
    3.  <span data-ttu-id="b1893-130">如果設為 AllowXmlAttributes `false`，驗證引擎將會報告錯誤。</span><span class="sxs-lookup"><span data-stu-id="b1893-130">If AllowXmlAttributes is set to `false`, the validation engine will report an error.</span></span>  
  
    4.  <span data-ttu-id="b1893-131">如果執行個體文件包含的 Xml 屬性而且此結構描述指定具有設定為"skip"processContents 屬性萬用字元，驗證引擎將會略過屬性驗證。</span><span class="sxs-lookup"><span data-stu-id="b1893-131">If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to "skip", the validation engine will skip attribute validation.</span></span>  
  
    5.  <span data-ttu-id="b1893-132">如果執行個體文件包含的 Xml 屬性和結構描述指定具有設定為"lax"processContents 屬性萬用字元，驗證引擎會使用 Xml 命名空間結構描述存在於<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="b1893-132">If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to "lax", the validation engine will use the Xml namespace schema present in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="b1893-133">如果未不指定任何 Xml 命名空間的結構描述，驗證引擎行為，如下所示。</span><span class="sxs-lookup"><span data-stu-id="b1893-133">If no Xml namespace schema is specified, the validation engine will behave as follows.</span></span>  
  
    6.  <span data-ttu-id="b1893-134">如果設為 AllowXmlAttributes `true`，驗證引擎會使用預設 Xml 命名空間的結構描述來執行驗證。</span><span class="sxs-lookup"><span data-stu-id="b1893-134">If AllowXmlAttributes is set to `true`, the validation engine will use the default Xml namespace schema to perform validation.</span></span>  
  
    7.  <span data-ttu-id="b1893-135">如果設為 AllowXmlAttributes `false`，不會執行屬性驗證。</span><span class="sxs-lookup"><span data-stu-id="b1893-135">If AllowXmlAttributes is set to `false`, attribute validation will not be performed.</span></span>  
  
7.  <span data-ttu-id="b1893-136">當驗證簡單型別。</span><span class="sxs-lookup"><span data-stu-id="b1893-136">When validating simple types.</span></span>  
  
    1.  <span data-ttu-id="b1893-137">當 AllowXmlAttributes 設`true`（預設值），將簡單類型的項目上允許 Xml 屬性。</span><span class="sxs-lookup"><span data-stu-id="b1893-137">When AllowXmlAttributes is set to `true` (default), Xml attributes will be allowed on elements of simple types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1893-138">如需<xref:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes>類別，請參閱<xref:System.Xml.Schema.XmlSchemaValidator>類別。</span><span class="sxs-lookup"><span data-stu-id="b1893-138">For an example of the <xref:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes> class, see the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Schema.XmlSchemaValidator" />
  </Docs>
  <Members>
    <Member MemberName="AllowXmlAttributes">
      <MemberSignature Language="C#" Value="AllowXmlAttributes" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags AllowXmlAttributes = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" />
      <MemberSignature Language="VB.NET" Value="AllowXmlAttributes" />
      <MemberSignature Language="C++ CLI" Value="AllowXmlAttributes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1893-139">允許 xml:\* 屬性，即使未在結構描述中定義它們也是如此。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1893-139">Allow xml:\* attributes even if they are not defined in the schema.</span>
          </span>
          <span data-ttu-id="b1893-140">對屬性的驗證會依據其資料型別進行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1893-140">The attributes will be validated based on their data type.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1893-141">請勿處理識別條件約束、內嵌結構描述、結構描述位置提示，或報告結構描述驗證警告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1893-141">Do not process identity constraints, inline schemas, schema location hints, or report schema validation warnings.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ProcessIdentityConstraints">
      <MemberSignature Language="C#" Value="ProcessIdentityConstraints" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ProcessIdentityConstraints = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" />
      <MemberSignature Language="VB.NET" Value="ProcessIdentityConstraints" />
      <MemberSignature Language="C++ CLI" Value="ProcessIdentityConstraints" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1893-142">處理驗證期間遇到的識別條件約束 (<c>xs:ID</c>、<c>xs:IDREF</c>、<c>xs:key</c>、<c>xs:keyref</c>、<c>xs:unique</c>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1893-142">Process identity constraints (<c>xs:ID</c>, <c>xs:IDREF</c>, <c>xs:key</c>, <c>xs:keyref</c>, <c>xs:unique</c>) encountered during validation.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ProcessInlineSchema">
      <MemberSignature Language="C#" Value="ProcessInlineSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ProcessInlineSchema = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />
      <MemberSignature Language="VB.NET" Value="ProcessInlineSchema" />
      <MemberSignature Language="C++ CLI" Value="ProcessInlineSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1893-143">處理驗證期間遇到的內嵌結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1893-143">Process inline schemas encountered during validation.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ProcessSchemaLocation">
      <MemberSignature Language="C#" Value="ProcessSchemaLocation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ProcessSchemaLocation = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" />
      <MemberSignature Language="VB.NET" Value="ProcessSchemaLocation" />
      <MemberSignature Language="C++ CLI" Value="ProcessSchemaLocation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1893-144">處理驗證期間遇到的結構描述位置提示 (<c>xsi:schemalocation</c>、<c>xsi:noNamespaceSchemaLocation</c>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1893-144">Process schema location hints (<c>xsi:schemaLocation</c>, <c>xsi:noNamespaceSchemaLocation</c>) encountered during validation.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReportValidationWarnings">
      <MemberSignature Language="C#" Value="ReportValidationWarnings" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ReportValidationWarnings = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" />
      <MemberSignature Language="VB.NET" Value="ReportValidationWarnings" />
      <MemberSignature Language="C++ CLI" Value="ReportValidationWarnings" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1893-145">報告驗證期間遇到的結構描述驗證警告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1893-145">Report schema validation warnings encountered during validation.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>