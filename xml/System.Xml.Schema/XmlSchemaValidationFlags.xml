<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchemaValidationFlags.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54ec6cc7e25b108e726f5958c1463b14029fd975d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ec6cc7e25b108e726f5958c1463b14029fd975d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>Specifies schema validation options used by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> classes.</source>
          <target state="translated">指定 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaValidator" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 類別 (Class) 所使用的結構描述驗證選項。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>The following are notes to consider when using <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</ph> values with the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">以下是附註，以使用時，請考慮<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</ph>值與<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</ph> values define validation options used by a schema validating <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to perform XML validation against a schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</ph> 值會定義結構描述，驗證所使用的驗證選項<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>若要執行 XML 結構描述驗證。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</ph> values for a validating <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> are specified using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings.ValidationFlags%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</ph> 值對其進行驗證<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>使用指定的<ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings.ValidationFlags%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>The following are notes to consider when using the AllowXmlAttributes value.</source>
          <target state="translated">下列是使用 AllowXmlAttributes 值時要考慮的附註。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>When a schema doesn’t import the Xml namespace.</source>
          <target state="translated">當結構描述不會匯入的 Xml 命名空間。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`true`</ph> (default) and the instance document contains Xml attributes, the validation engine will load a snapshot of the default Xml namespace schema and use it for validation.</source>
          <target state="translated">如果設為 AllowXmlAttributes <ph id="ph1">`true`</ph> （預設值） 和執行個體文件包含的 Xml 屬性，驗證引擎將會載入預設 Xml 命名空間的結構描述的快照集，並將它用於驗證。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If Xml attributes used in the instance document are not found in the default schema, the document will not validate.</source>
          <target state="translated">如果預設結構描述中找不到執行個體文件中使用的 Xml 屬性，將不會驗證文件。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`false`</ph> and the instance document contains Xml attributes, the validation engine will report an error.</source>
          <target state="translated">如果設為 AllowXmlAttributes<ph id="ph1">`false`</ph>和執行個體文件包含的 Xml 屬性、 驗證引擎將會報告錯誤。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>When a schema imports the Xml namespace without a location.</source>
          <target state="translated">當結構描述匯入不含位置的 Xml 命名空間。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`true`</ph> (default) and the instance document contains Xml attributes, the validation engine will use the default Xml namespace schema for validation.</source>
          <target state="translated">如果設為 AllowXmlAttributes <ph id="ph1">`true`</ph> （預設值） 和執行個體文件包含的 Xml 屬性、 驗證引擎會使用預設 Xml 命名空間的結構描述進行驗證。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If Xml attributes used in the instance document are not found in the default schema, the document will not validate.</source>
          <target state="translated">如果預設結構描述中找不到執行個體文件中使用的 Xml 屬性，將不會驗證文件。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`false`</ph> and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.</source>
          <target state="translated">如果設為 AllowXmlAttributes<ph id="ph1">`false`</ph>和執行個體文件包含不明確允許由結構描述驗證引擎將會報告錯誤的 Xml 屬性。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`false`</ph> and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using the default Xml namespace schema.</source>
          <target state="translated">如果設為 AllowXmlAttributes<ph id="ph1">`false`</ph>和執行個體文件包含明確允許由結構描述驗證引擎將會驗證相同的方式，它會使用預設的 Xml 的其他屬性來驗證屬性的 Xml 屬性命名空間的結構描述。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>When a schema imports a custom Xml namespace schema with a custom schemaLocation.</source>
          <target state="translated">當結構描述匯入自訂 Xml 命名空間的結構描述與自訂結構描述位置。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`true`</ph> (default) and the instance document contains Xml attributes, the validation engine will use the custom Xml namespace schema for validation.</source>
          <target state="translated">如果設為 AllowXmlAttributes <ph id="ph1">`true`</ph> （預設值） 和執行個體文件包含的 Xml 屬性、 驗證引擎會使用自訂的 Xml 命名空間結構描述進行驗證。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If Xml attributes used in the instance document are not found in the specified schema, the document will not validate.</source>
          <target state="translated">如果指定的結構描述中找不到執行個體文件中使用的 Xml 屬性，將不會驗證文件。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`false`</ph> and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.</source>
          <target state="translated">如果設為 AllowXmlAttributes<ph id="ph1">`false`</ph>和執行個體文件包含不明確允許由結構描述驗證引擎將會報告錯誤的 Xml 屬性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`false`</ph> and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using specified Xml namespace schema.</source>
          <target state="translated">如果設為 AllowXmlAttributes<ph id="ph1">`false`</ph>和執行個體文件包含明確允許由結構描述驗證引擎將會驗證相同的方式，它會使用指定的 Xml 的其他屬性來驗證屬性的 Xml 屬性命名空間的結構描述。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>When a schema defines an xml:* attribute with use="required".</source>
          <target state="translated">當結構描述會定義 xml: * 使用具有屬性 = 「 要求 」。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>The following applies when AllowXmlAttributes is set to <ph id="ph1">`true`</ph> and <ph id="ph2">`false`</ph>.</source>
          <target state="translated">下列適用於當設為 AllowXmlAttributes<ph id="ph1">`true`</ph>和<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>Required xml:* attributes should be treated as other attributes and validated using the specified Xml namespace schema.</source>
          <target state="translated">必要的 xml: * 屬性應該被視為其他屬性，並使用指定的 Xml 命名空間結構描述進行驗證。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>When a schema defines an xml:* attribute with use="prohibited".</source>
          <target state="translated">當結構描述會定義 xml: * 使用具有屬性 ="prohibited"。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>The following applies when AllowXmlAttributes is set to <ph id="ph1">`true`</ph> and <ph id="ph2">`false`</ph>.</source>
          <target state="translated">下列適用於當設為 AllowXmlAttributes<ph id="ph1">`true`</ph>和<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If an instance document contains xml:* attributes that are explicitly prohibited by the schema, the validation engine will report an error.</source>
          <target state="translated">如果執行個體文件包含的 xml: * 屬性明確禁止的結構描述，驗證引擎將會報告錯誤。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>When a schema specifies an attribute wildcard.</source>
          <target state="translated">當結構描述指定屬性萬用字元。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents either omitted or set to "strict", the validation engine will use the Xml namespace schema present in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">如果執行個體文件包含的 Xml 屬性和結構描述指定使用 processContents 省略或設為"strict 的"的屬性萬用字元，驗證引擎會使用 Xml 命名空間結構描述存在於<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If no Xml namespace schema is specified, the validation engine will behave as follows.</source>
          <target state="translated">如果未不指定任何 Xml 命名空間的結構描述，驗證引擎行為，如下所示。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`true`</ph>, the validation engine will use the default Xml namespace schema to perform validation.</source>
          <target state="translated">如果設為 AllowXmlAttributes <ph id="ph1">`true`</ph>，驗證引擎會使用預設 Xml 命名空間的結構描述來執行驗證。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`false`</ph>, the validation engine will report an error.</source>
          <target state="translated">如果設為 AllowXmlAttributes <ph id="ph1">`false`</ph>，驗證引擎將會報告錯誤。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to "skip", the validation engine will skip attribute validation.</source>
          <target state="translated">如果執行個體文件包含的 Xml 屬性而且此結構描述指定具有設定為"skip"processContents 屬性萬用字元，驗證引擎將會略過屬性驗證。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to "lax", the validation engine will use the Xml namespace schema present in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">如果執行個體文件包含的 Xml 屬性和結構描述指定具有設定為"lax"processContents 屬性萬用字元，驗證引擎會使用 Xml 命名空間結構描述存在於<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If no Xml namespace schema is specified, the validation engine will behave as follows.</source>
          <target state="translated">如果未不指定任何 Xml 命名空間的結構描述，驗證引擎行為，如下所示。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`true`</ph>, the validation engine will use the default Xml namespace schema to perform validation.</source>
          <target state="translated">如果設為 AllowXmlAttributes <ph id="ph1">`true`</ph>，驗證引擎會使用預設 Xml 命名空間的結構描述來執行驗證。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`false`</ph>, attribute validation will not be performed.</source>
          <target state="translated">如果設為 AllowXmlAttributes <ph id="ph1">`false`</ph>，不會執行屬性驗證。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>When validating simple types.</source>
          <target state="translated">當驗證簡單型別。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>When AllowXmlAttributes is set to <ph id="ph1">`true`</ph> (default), Xml attributes will be allowed on elements of simple types.</source>
          <target state="translated">當 AllowXmlAttributes 設<ph id="ph1">`true`</ph>（預設值），將簡單類型的項目上允許 Xml 屬性。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaValidationFlags">
          <source>For an example of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes&gt;</ph> class, see the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph> class.</source>
          <target state="translated">如需<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes&gt;</ph>類別，請參閱<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes">
          <source>Allow xml:* attributes even if they are not defined in the schema.</source>
          <target state="translated">允許 xml:* 屬性，即使未在結構描述中定義它們也是如此。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes">
          <source>The attributes will be validated based on their data type.</source>
          <target state="translated">對屬性的驗證會依據其資料型別進行。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="F:System.Xml.Schema.XmlSchemaValidationFlags.None">
          <source>Do not process identity constraints, inline schemas, schema location hints, or report schema validation warnings.</source>
          <target state="translated">請勿處理識別條件約束、內嵌結構描述、結構描述位置提示，或報告結構描述驗證警告。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints">
          <source>Process identity constraints (<bpt id="p1">&lt;c&gt;</bpt>xs:ID<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>xs:IDREF<ept id="p2">&lt;/c&gt;</ept>, <bpt id="p3">&lt;c&gt;</bpt>xs:key<ept id="p3">&lt;/c&gt;</ept>, <bpt id="p4">&lt;c&gt;</bpt>xs:keyref<ept id="p4">&lt;/c&gt;</ept>, <bpt id="p5">&lt;c&gt;</bpt>xs:unique<ept id="p5">&lt;/c&gt;</ept>) encountered during validation.</source>
          <target state="translated">處理驗證期間遇到的識別條件約束 (<bpt id="p1">&lt;c&gt;</bpt>xs:ID<ept id="p1">&lt;/c&gt;</ept>、<bpt id="p2">&lt;c&gt;</bpt>xs:IDREF<ept id="p2">&lt;/c&gt;</ept>、<bpt id="p3">&lt;c&gt;</bpt>xs:key<ept id="p3">&lt;/c&gt;</ept>、<bpt id="p4">&lt;c&gt;</bpt>xs:keyref<ept id="p4">&lt;/c&gt;</ept>、<bpt id="p5">&lt;c&gt;</bpt>xs:unique<ept id="p5">&lt;/c&gt;</ept>)。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema">
          <source>Process inline schemas encountered during validation.</source>
          <target state="translated">處理驗證期間遇到的內嵌結構描述。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation">
          <source>Process schema location hints (<bpt id="p1">&lt;c&gt;</bpt>xsi:schemaLocation<ept id="p1">&lt;/c&gt;</ept>, <bpt id="p2">&lt;c&gt;</bpt>xsi:noNamespaceSchemaLocation<ept id="p2">&lt;/c&gt;</ept>) encountered during validation.</source>
          <target state="translated">處理驗證期間遇到的結構描述位置提示 (<bpt id="p1">&lt;c&gt;</bpt>xsi:schemalocation<ept id="p1">&lt;/c&gt;</ept>、<bpt id="p2">&lt;c&gt;</bpt>xsi:noNamespaceSchemaLocation<ept id="p2">&lt;/c&gt;</ept>)。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings">
          <source>Report schema validation warnings encountered during validation.</source>
          <target state="translated">報告驗證期間遇到的結構描述驗證警告。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>