<Type Name="XmlSchemaDatatype" FullName="System.Xml.Schema.XmlSchemaDatatype">
  <TypeSignature Language="C#" Value="public abstract class XmlSchemaDatatype" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlSchemaDatatype extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaDatatype" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlSchemaDatatype" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaDatatype abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="515eb-101"><see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 類別是抽象類別，用於將 XML 結構描述定義語言 (XSD) 型別對應至 Common Language Runtime (CLR) 型別。</span><span class="sxs-lookup"><span data-stu-id="515eb-101">The <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> class is an abstract class for mapping XML Schema definition language (XSD) types to Common Language Runtime (CLR) types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="515eb-102">下列範例會示範搭配<xref:System.Xml.Schema.XmlSchemaDatatype>類別。</span><span class="sxs-lookup"><span data-stu-id="515eb-102">The following example shows use of the <xref:System.Xml.Schema.XmlSchemaDatatype> class.</span></span>  
  
 [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CPP/datatype.cpp#1)]
 [!code-csharp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CS/datatype.cs#1)]
 [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/VB/datatype.vb#1)]  
  
 <span data-ttu-id="515eb-103">下列 XML 檔案用於先前的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="515eb-103">The following XML file is used for the preceding code example.</span></span>  
  
 [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/XML/example.xsd#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlSchemaDatatype ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlSchemaDatatype();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="515eb-104">初始化 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="515eb-104">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="515eb-105">在衍生的類別建構函式來初始化此類型中的狀態會呼叫這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="515eb-105">This constructor is called by derived class constructors to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangeType">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="515eb-106">將指定的值 (其型別是由 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示之 XML 結構描述型別的其中一個有效 Common Language Runtime (CLR) 表示) 轉換成相同值的其他有效 CLR 表示。</span><span class="sxs-lookup"><span data-stu-id="515eb-106">Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, to another valid CLR representation of the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public virtual object ChangeType (object value, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChangeType (value As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ChangeType(System::Object ^ value, Type ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="515eb-107">要轉換成指定型別的輸入值。</span><span class="sxs-lookup"><span data-stu-id="515eb-107">The input value to convert to the specified type.</span></span></param>
        <param name="targetType"><span data-ttu-id="515eb-108">將輸入值轉換成的目標型別。</span><span class="sxs-lookup"><span data-stu-id="515eb-108">The target type to convert the input value to.</span></span></param>
        <summary><span data-ttu-id="515eb-109">將指定的值 (其型別是由 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示之 XML 結構描述型別的其中一個有效 Common Language Runtime (CLR) 表示) 轉換成指定的 CLR 型別。</span><span class="sxs-lookup"><span data-stu-id="515eb-109">Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, to the CLR type specified.</span></span></summary>
        <returns><span data-ttu-id="515eb-110">已轉換的輸入值。</span><span class="sxs-lookup"><span data-stu-id="515eb-110">The converted input value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="515eb-111">如需有關型別支援<xref:System.Xml?displayProperty=nameWithType>類別與轉換 XML 資料類型，請參閱[System.Xml 類別中的型別支援](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)主題。</span><span class="sxs-lookup"><span data-stu-id="515eb-111">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> classes and conversion of XML data types, see the [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="515eb-112"><see cref="T:System.Object" /> 或 <see cref="T:System.Type" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="515eb-112">The <see cref="T:System.Object" /> or <see cref="T:System.Type" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="515eb-113"><see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示的型別不支援從指定值的型別到指定型別的轉換。</span><span class="sxs-lookup"><span data-stu-id="515eb-113">The type represented by the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> does not support a conversion from type of the value specified to the type specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public virtual object ChangeType (object value, Type targetType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type targetType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChangeType (value As Object, targetType As Type, namespaceResolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ChangeType(System::Object ^ value, Type ^ targetType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="515eb-114">要轉換成指定型別的輸入值。</span><span class="sxs-lookup"><span data-stu-id="515eb-114">The input value to convert to the specified type.</span></span></param>
        <param name="targetType"><span data-ttu-id="515eb-115">將輸入值轉換成的目標型別。</span><span class="sxs-lookup"><span data-stu-id="515eb-115">The target type to convert the input value to.</span></span></param>
        <param name="namespaceResolver"><span data-ttu-id="515eb-116"><see cref="T:System.Xml.IXmlNamespaceResolver" />，用於解析命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="515eb-116">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> used for resolving namespace prefixes.</span></span> <span data-ttu-id="515eb-117">這只在 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示 xs:QName 型別或其衍生的型別時使用。</span><span class="sxs-lookup"><span data-stu-id="515eb-117">This is only of use if the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> represents the xs:QName type or a type derived from it.</span></span></param>
        <summary><span data-ttu-id="515eb-118">將指定的值 (其型別是由 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示之 XML 結構描述型別的其中一個有效 Common Language Runtime (CLR) 表示) 轉換成指定的 CLR 型別，如果 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 表示 xs:QName 型別或其衍生的型別，則使用 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />。</span><span class="sxs-lookup"><span data-stu-id="515eb-118">Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, to the CLR type specified using the <see cref="T:System.Xml.IXmlNamespaceResolver" /> if the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> represents the xs:QName type or a type derived from it.</span></span></summary>
        <returns><span data-ttu-id="515eb-119">已轉換的輸入值。</span><span class="sxs-lookup"><span data-stu-id="515eb-119">The converted input value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="515eb-120">如需有關型別支援<xref:System.Xml?displayProperty=nameWithType>類別與轉換 XML 資料類型，請參閱[System.Xml 類別中的型別支援](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)主題。</span><span class="sxs-lookup"><span data-stu-id="515eb-120">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> classes and conversion of XML data types, see the [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="515eb-121"><see cref="T:System.Object" /> 或 <see cref="T:System.Type" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="515eb-121">The <see cref="T:System.Object" /> or <see cref="T:System.Type" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="515eb-122"><see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示的型別不支援從指定值的型別到指定型別的轉換。</span><span class="sxs-lookup"><span data-stu-id="515eb-122">The type represented by the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> does not support a conversion from type of the value specified to the type specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDerivedFrom">
      <MemberSignature Language="C#" Value="public virtual bool IsDerivedFrom (System.Xml.Schema.XmlSchemaDatatype datatype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDerivedFrom(class System.Xml.Schema.XmlSchemaDatatype datatype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDerivedFrom (datatype As XmlSchemaDatatype) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDerivedFrom(System::Xml::Schema::XmlSchemaDatatype ^ datatype);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datatype" Type="System.Xml.Schema.XmlSchemaDatatype" />
      </Parameters>
      <Docs>
        <param name="datatype"><span data-ttu-id="515eb-123"><see cref="T:System.Xml.Schema.XmlSchemaDatatype" />。</span><span class="sxs-lookup"><span data-stu-id="515eb-123">The <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</span></span></param>
        <summary><span data-ttu-id="515eb-124"><see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> 方法永遠傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="515eb-124">The <see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> method always returns <see langword="false" />.</span></span></summary>
        <returns><span data-ttu-id="515eb-125">一律傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="515eb-125">Always returns <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseValue">
      <MemberSignature Language="C#" Value="public abstract object ParseValue (string s, System.Xml.XmlNameTable nameTable, System.Xml.IXmlNamespaceResolver nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseValue(string s, class System.Xml.XmlNameTable nameTable, class System.Xml.IXmlNamespaceResolver nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ParseValue (s As String, nameTable As XmlNameTable, nsmgr As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ParseValue(System::String ^ s, System::Xml::XmlNameTable ^ nameTable, System::Xml::IXmlNamespaceResolver ^ nsmgr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
        <Parameter Name="nsmgr" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="515eb-126">要對簡單型別驗證的 <see langword="string" />。</span><span class="sxs-lookup"><span data-stu-id="515eb-126">The <see langword="string" /> to validate against the simple type.</span></span></param>
        <param name="nameTable"><span data-ttu-id="515eb-127">如果這個 <see cref="T:System.Xml.XmlNameTable" /> 物件表示 xs:NCName 型別，則為 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />，用於剖析 <see langword="string" /> 時的原子化。</span><span class="sxs-lookup"><span data-stu-id="515eb-127">The <see cref="T:System.Xml.XmlNameTable" /> to use for atomization while parsing the <see langword="string" /> if this <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> object represents the xs:NCName type.</span></span></param>
        <param name="nsmgr"><span data-ttu-id="515eb-128">如果這個 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件表示 xs:QName 型別，則為剖析 <see langword="string" /> 時要使用的 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="515eb-128">The <see cref="T:System.Xml.IXmlNamespaceResolver" /> object to use while parsing the <see langword="string" /> if this <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> object represents the xs:QName type.</span></span></param>
        <summary><span data-ttu-id="515eb-129">在衍生類別中覆寫時，對內建或使用者定義的簡單型別驗證指定的 <see langword="string" />。</span><span class="sxs-lookup"><span data-stu-id="515eb-129">When overridden in a derived class, validates the <see langword="string" /> specified against a built-in or user-defined simple type.</span></span></summary>
        <returns><span data-ttu-id="515eb-130"><see cref="T:System.Object" />，可安全地轉換為 <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" /> 屬性傳回的型別。</span><span class="sxs-lookup"><span data-stu-id="515eb-130">An <see cref="T:System.Object" /> that can be cast safely to the type returned by the <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" /> property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="515eb-131"><xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A>方法會驗證`string`指定針對內建或使用者定義的簡單類型。</span><span class="sxs-lookup"><span data-stu-id="515eb-131">The <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> method validates the `string` specified against a built-in or user-defined simple type.</span></span> <span data-ttu-id="515eb-132">例如，如果此<xref:System.Xml.Schema.XmlSchemaDatatype>代表類型 xs: date，則執行個體<xref:System.DateTime>傳回。</span><span class="sxs-lookup"><span data-stu-id="515eb-132">For example, if this <xref:System.Xml.Schema.XmlSchemaDatatype> represents the type xs:date, then an instance of <xref:System.DateTime> is returned.</span></span>  
  
 <span data-ttu-id="515eb-133">以下是執行期間執行的步驟<xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A>方法的驗證程序。</span><span class="sxs-lookup"><span data-stu-id="515eb-133">The following are the steps performed during the <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> method's validation process.</span></span>  
  
1.  <span data-ttu-id="515eb-134">轉換為指定的值`string`到其對應 Common Language Runtime (CLR) 類型。</span><span class="sxs-lookup"><span data-stu-id="515eb-134">Convert the value specified as a `string` to its corresponding Common Language Runtime (CLR) type.</span></span>  
  
2.  <span data-ttu-id="515eb-135">請確認此值沒有違反任何簡單類型所定義的 facet。</span><span class="sxs-lookup"><span data-stu-id="515eb-135">Verify that the value does not violate any facets defined for the simple type.</span></span>  
  
 <span data-ttu-id="515eb-136">轉換的值則傳回做為<xref:System.Object>，而且可以安全地轉換成所傳回的類型<xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="515eb-136">The converted value is then returned as an <xref:System.Object> and can be cast safely to the type returned by the <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> property.</span></span>  
  
 <span data-ttu-id="515eb-137">當<xref:System.Xml.Schema.XmlSchemaDatatype>物件都代表清單類型、 輸入`string`值會轉換成一或多個物件的清單。</span><span class="sxs-lookup"><span data-stu-id="515eb-137">When the <xref:System.Xml.Schema.XmlSchemaDatatype> object represents a list type, the input `string` value is converted to a list of one or more objects.</span></span> <span data-ttu-id="515eb-138">當<xref:System.Xml.Schema.XmlSchemaDatatype>物件表示清單型別，嘗試將輸入的值剖析為聯集成員型別。</span><span class="sxs-lookup"><span data-stu-id="515eb-138">When the <xref:System.Xml.Schema.XmlSchemaDatatype> object represents a list type, an attempt is made to parse the input value as a member type of the union.</span></span> <span data-ttu-id="515eb-139">如果剖析嘗試失敗，則轉換會嘗試使用下一個聯集成員直到剖析成功，或沒有其他成員類型剖析。</span><span class="sxs-lookup"><span data-stu-id="515eb-139">If the parse attempt fails, then the conversion is attempted with the next member of the union until the parse is successful or there are no other member types to parse.</span></span> <span data-ttu-id="515eb-140">如果剖析成功，則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="515eb-140">If the parse is unsuccessful, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="515eb-141">下列範例會擷取`LotteryNumber`簡單型別從 example.xsd 檔案儲存為<xref:System.Xml.Schema.XmlSchemaSimpleType>然後驗證`string`值`5`使用<xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="515eb-141">The following example retrieves the `LotteryNumber` simple type from the example.xsd file as an <xref:System.Xml.Schema.XmlSchemaSimpleType> and then validates the `string` value of `5` using the <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> method.</span></span>  
  
 [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CPP/datatype.cpp#1)]
 [!code-csharp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CS/datatype.cs#1)]
 [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/VB/datatype.vb#1)]  
  
 <span data-ttu-id="515eb-142">下列 XML 檔案用於先前的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="515eb-142">The following XML file is used for the preceding code example.</span></span>  
  
 [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/XML/example.xsd#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><span data-ttu-id="515eb-143">輸入值不是這個 W3C XML 結構描述型別的有效執行個體。</span><span class="sxs-lookup"><span data-stu-id="515eb-143">The input value is not a valid instance of this W3C XML Schema type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="515eb-144">要剖析的值不能是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="515eb-144">The value to parse cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TokenizedType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlTokenizedType TokenizedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlTokenizedType TokenizedType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TokenizedType As XmlTokenizedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlTokenizedType TokenizedType { System::Xml::XmlTokenizedType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlTokenizedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="515eb-145">在衍生類別中覆寫時，取得如在全球資訊網協會 (W3C) XML 1.0 規格中所指定之 <see langword="string" /> 的型別。</span><span class="sxs-lookup"><span data-stu-id="515eb-145">When overridden in a derived class, gets the type for the <see langword="string" /> as specified in the World Wide Web Consortium (W3C) XML 1.0 specification.</span></span></summary>
        <value><span data-ttu-id="515eb-146"><see langword="string" /> 的 <see cref="T:System.Xml.XmlTokenizedType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="515eb-146">An <see cref="T:System.Xml.XmlTokenizedType" /> value for the <see langword="string" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="515eb-147">可讓`string`必須讀取為特定 XML 類型，例如 CDATA 區段類型。</span><span class="sxs-lookup"><span data-stu-id="515eb-147">Allows the `string` to be read as a particular XML type, for example, a CDATA section type.</span></span>  
  
 <span data-ttu-id="515eb-148">下表顯示的語彙基元的類型。</span><span class="sxs-lookup"><span data-stu-id="515eb-148">The following table shows the token types.</span></span>  
  
|<span data-ttu-id="515eb-149">XmlTokenizedType</span><span class="sxs-lookup"><span data-stu-id="515eb-149">XmlTokenizedType</span></span>|<span data-ttu-id="515eb-150">描述</span><span class="sxs-lookup"><span data-stu-id="515eb-150">Description</span></span>|  
|----------------------|-----------------|  
|`CDATA`|<span data-ttu-id="515eb-151">CDATA 類型</span><span class="sxs-lookup"><span data-stu-id="515eb-151">CDATA type</span></span>|  
|`ID`|<span data-ttu-id="515eb-152">ID 類型</span><span class="sxs-lookup"><span data-stu-id="515eb-152">ID type</span></span>|  
|`IDREF`|<span data-ttu-id="515eb-153">IDREF 類型</span><span class="sxs-lookup"><span data-stu-id="515eb-153">IDREF type</span></span>|  
|`IDREFS`|<span data-ttu-id="515eb-154">IDREFS 類型</span><span class="sxs-lookup"><span data-stu-id="515eb-154">IDREFS type</span></span>|  
|`ENTITY`|<span data-ttu-id="515eb-155">實體類型</span><span class="sxs-lookup"><span data-stu-id="515eb-155">ENTITY type</span></span>|  
|`ENTITIES`|<span data-ttu-id="515eb-156">實體類型</span><span class="sxs-lookup"><span data-stu-id="515eb-156">ENTITIES type</span></span>|  
|`NMTOKEN`|<span data-ttu-id="515eb-157">NMTOKEN 類型</span><span class="sxs-lookup"><span data-stu-id="515eb-157">NMTOKEN type</span></span>|  
|`NMTOKENS`|<span data-ttu-id="515eb-158">NMTOKENS 型別</span><span class="sxs-lookup"><span data-stu-id="515eb-158">NMTOKENS type</span></span>|  
|`NOTATION`|<span data-ttu-id="515eb-159">NOTATION 類型</span><span class="sxs-lookup"><span data-stu-id="515eb-159">NOTATION type</span></span>|  
|`ENUMERATION`|<span data-ttu-id="515eb-160">列舉型別</span><span class="sxs-lookup"><span data-stu-id="515eb-160">ENUMERATION type</span></span>|  
|`QName`|<span data-ttu-id="515eb-161">QName 類型</span><span class="sxs-lookup"><span data-stu-id="515eb-161">QName type</span></span>|  
|`NCName`|<span data-ttu-id="515eb-162">NCName 類型</span><span class="sxs-lookup"><span data-stu-id="515eb-162">NCName type</span></span>|  
|`None`|<span data-ttu-id="515eb-163">沒有型別</span><span class="sxs-lookup"><span data-stu-id="515eb-163">No type</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeCode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.XmlTypeCode TypeCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlTypeCode TypeCode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TypeCode As XmlTypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::XmlTypeCode TypeCode { System::Xml::Schema::XmlTypeCode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlTypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="515eb-164">取得簡單型別的 <see cref="T:System.Xml.Schema.XmlTypeCode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="515eb-164">Gets the <see cref="T:System.Xml.Schema.XmlTypeCode" /> value for the simple type.</span></span></summary>
        <value><span data-ttu-id="515eb-165">簡單型別的 <see cref="T:System.Xml.Schema.XmlTypeCode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="515eb-165">The <see cref="T:System.Xml.Schema.XmlTypeCode" /> value for the simple type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="515eb-166">W3C XML 結構描述清單類型，例如 xs: entities、 xs: nmtokens 和 xs: idrefs 未表示的<xref:System.Xml.Schema.XmlTypeCode>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="515eb-166">W3C XML Schema list types such as xs:ENTITIES, xs:NMTOKENS and xs:IDREFS are not represented by the <xref:System.Xml.Schema.XmlTypeCode> enumeration.</span></span> <span data-ttu-id="515eb-167">相反地，這些原則由<xref:System.Xml.Schema.XmlTypeCode>xs:ENTITY、 xs 和 xs: idref 類型與值<xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A>屬性<xref:System.Xml.Schema.XmlSchemaDatatype>物件設定為<xref:System.Xml.Schema.XmlSchemaDatatypeVariety.List>。</span><span class="sxs-lookup"><span data-stu-id="515eb-167">Instead they are represented by the <xref:System.Xml.Schema.XmlTypeCode> values for the xs:ENTITY, xs:NMTOKEN and xs:IDREF types with the <xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A> property of the <xref:System.Xml.Schema.XmlSchemaDatatype> object set to <xref:System.Xml.Schema.XmlSchemaDatatypeVariety.List>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="515eb-168">Xs:anySimpleType 和 xs: anytype 的型別不由<xref:System.Xml.Schema.XmlTypeCode>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="515eb-168">Both the xs:anySimpleType and xs:anyType types are not represented by <xref:System.Xml.Schema.XmlTypeCode> enumeration.</span></span> <span data-ttu-id="515eb-169">這些顯示在<xref:System.Xml.Schema.XmlSchemaDatatype>物件<xref:System.Xml.Schema.XmlTypeCode>其值是<xref:System.Xml.Schema.XmlTypeCode.UntypedAtomic>如 xs:anySimpleType 或<xref:System.Xml.Schema.XmlTypeCode.Item>如 xs: anytype。</span><span class="sxs-lookup"><span data-stu-id="515eb-169">These are represented in an <xref:System.Xml.Schema.XmlSchemaDatatype> object with an <xref:System.Xml.Schema.XmlTypeCode> whose value is <xref:System.Xml.Schema.XmlTypeCode.UntypedAtomic> for xs:anySimpleType or <xref:System.Xml.Schema.XmlTypeCode.Item> for xs:anyType.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="515eb-170">如需<xref:System.Xml.Schema.XmlSchemaDatatype.TypeCode%2A>屬性，請參閱<xref:System.Xml.Schema.XmlSchemaDatatype>。</span><span class="sxs-lookup"><span data-stu-id="515eb-170">For an example of the <xref:System.Xml.Schema.XmlSchemaDatatype.TypeCode%2A> property, see <xref:System.Xml.Schema.XmlSchemaDatatype>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlTypeCode" />
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public abstract Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ValueType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="515eb-171">在衍生類別中覆寫時，取得項目的 Common Language Runtime (CLR) 型別。</span><span class="sxs-lookup"><span data-stu-id="515eb-171">When overridden in a derived class, gets the Common Language Runtime (CLR) type of the item.</span></span></summary>
        <value><span data-ttu-id="515eb-172">項目的 Common Language Runtime (CLR) 型別。</span><span class="sxs-lookup"><span data-stu-id="515eb-172">The Common Language Runtime (CLR) type of the item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="515eb-173"><xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A>屬性取得的 CLR 類型的項目。</span><span class="sxs-lookup"><span data-stu-id="515eb-173">The <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> property gets the CLR type of the item.</span></span> <span data-ttu-id="515eb-174">例如，類型的元素`xs:int`必須<xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A>的<xref:System.Int32>預設。</span><span class="sxs-lookup"><span data-stu-id="515eb-174">For example, an element of type `xs:int` would have a <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> of <xref:System.Int32> by default.</span></span> <span data-ttu-id="515eb-175">不過，<xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A>可以是任何一種可以對應到有效型別`xs:int`，例如<xref:System.Int16>或<xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="515eb-175">However, the <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> could be any one of the valid types that can be mapped to `xs:int`, such as <xref:System.Int16> or <xref:System.Double>.</span></span>  
  
 <span data-ttu-id="515eb-176">如需有關型別支援<xref:System.Xml?displayProperty=nameWithType>命名空間，請參閱[System.Xml 類別中的型別支援](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="515eb-176">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="515eb-177">如需<xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A>屬性，請參閱<xref:System.Xml.Schema.XmlSchemaDatatype>。</span><span class="sxs-lookup"><span data-stu-id="515eb-177">For an example of the <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> property, see <xref:System.Xml.Schema.XmlSchemaDatatype>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Variety">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.XmlSchemaDatatypeVariety Variety { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaDatatypeVariety Variety" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.Variety" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Variety As XmlSchemaDatatypeVariety" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::XmlSchemaDatatypeVariety Variety { System::Xml::Schema::XmlSchemaDatatypeVariety get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaDatatypeVariety</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="515eb-178">取得簡單型別的 <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> 值。</span><span class="sxs-lookup"><span data-stu-id="515eb-178">Gets the <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> value for the simple type.</span></span></summary>
        <value><span data-ttu-id="515eb-179">簡單型別的 <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> 值。</span><span class="sxs-lookup"><span data-stu-id="515eb-179">The <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> value for the simple type.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" />
      </Docs>
    </Member>
  </Members>
</Type>