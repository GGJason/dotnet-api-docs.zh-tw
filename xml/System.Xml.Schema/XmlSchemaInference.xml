<Type Name="XmlSchemaInference" FullName="System.Xml.Schema.XmlSchemaInference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42dbabff920f5482d6f67fbb43526916a3163a22" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720522" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlSchemaInference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaInference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaInference" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaInference" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaInference sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>從 XML 文件推斷 XML 結構描述定義語言 (XSD) 結構描述。 無法繼承 <see cref="T:System.Xml.Schema.XmlSchemaInference" /> 類別 (Class)。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  -   請勿從未知或未受信任的來源或位置的結構描述。 如此一來，將危害您的程式碼的安全性。  
> -   XML 結構描述 （包括內嵌結構描述） 是本質上容易遭到阻絕服務攻擊。不接受其在受信任的案例。  
> -   結構描述驗證錯誤訊息和例外狀況可能會公開機密資訊的內容模型或結構描述檔案的 URI 路徑。 請小心不要公開給未受信任的呼叫端的這項資訊。  
  
 <xref:System.Xml.Schema.XmlSchemaInference>類別<xref:System.Xml.Schema?displayProperty=nameWithType>命名空間可讓您推斷 XML 結構描述定義語言 (XSD) 結構描述從 XML 文件的結構。 <xref:System.Xml.Schema.XmlSchemaInference> 類別會輸出可驗證 XML 文件的 XML 結構描述。  
  
 <xref:System.Xml.Schema.XmlSchemaInference>類別支援 W3C XML 和 XML 結構描述標準。 它可以用於推斷新的結構描述，或修改現有的結構描述。  
  
   
  
## Examples  
 這個範例做為輸入，將 XML 檔案，並產生可驗證範例 XML 結構描述。  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 以下是輸入的 XML 檔案。  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 以下是從 XML 文件推斷的結構描述。  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaInference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaInference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Schema.XmlSchemaInference" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InferSchema">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從指定的 XML 文件推斷 XML 結構描述定義語言 (XSD) 結構描述。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">
          <see cref="T:System.Xml.XmlReader" /> 物件，包含從其推斷結構描述的 XML 文件。</param>
        <summary>從指定 <see cref="T:System.Xml.XmlReader" /> 物件中包含的 XML 文件，推斷 XML 結構描述定義語言 (XSD) 結構描述。</summary>
        <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 物件，包含推斷的結構描述。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法推斷其中一個或多個 W3C XML 結構描述定義語言 (XSD) 結構描述的 xml 執行個體中包含文件<xref:System.Xml.XmlReader>指定的物件。 如果 XML 文件包含項目和屬性從多個命名空間，則會產生多個結構描述： 一個用於每個文件中所使用的命名空間。 主要的結構描述可以驗證整個 XML 文件的結構描述，而且它的目標命名空間是 XML 文件的文件項目的命名空間相同。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法。  
  
-   <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法會略過任何`xsi:type`， `xsi:schemaLocation`，或`xsi:noNamespaceSchemaLocation`XML 文件中的屬性。  
  
-   如果<xref:System.Xml.XmlReader>物件類型，它包含的型別資訊會被忽略。  
  
-   如果<xref:System.Xml.XmlReader>物件所在的項目不是 XML 文件的根項目，只有該元素推斷的結構描述。 如果<xref:System.Xml.XmlReader>物件不位在項目<xref:System.Xml.XmlReader.Read%2A>上呼叫方法<xref:System.Xml.XmlReader>參數，直到遇到的項目 (例如，當<xref:System.Xml.XmlReader.NodeType%2A>是<xref:System.Xml.XmlNodeType.Element>)。 此時，推斷程序會開始從該項目。 如果沒有任何項目發生之前的文件結尾<xref:System.ArgumentException>就會擲回。  
  
   
  
## Examples  
 這個範例做為輸入，將 XML 檔案，並產生可驗證範例 XML 結構描述。  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 以下是輸入的 XML 檔案。  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 以下是從 XML 文件推斷的結構描述。  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">XML 文件的語式不正確。</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">
          <see cref="T:System.Xml.XmlReader" /> 物件不位於根節點上或項目上。 結構描述推斷處理序期間發生錯誤。</exception>
      </Docs>
    </Member>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument, class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader, schemas As XmlSchemaSet) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument, System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">
          <see cref="T:System.Xml.XmlReader" /> 物件，包含從其推斷結構描述的 XML 文件。</param>
        <param name="schemas">
          <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 物件，包含用於修改推斷之結構描述的現有結構描述。</param>
        <summary>從指定 <see cref="T:System.Xml.XmlReader" /> 物件中包含的 XML 文件，推斷 XML 結構描述定義語言 (XSD) 結構描述，並使用以相同目標命名空間指定之 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 物件中的現有結構描述，修改推斷的結構描述。</summary>
        <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 物件，包含推斷的結構描述。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法推斷其中一個或多個 W3C XML 結構描述定義語言 (XSD) 結構描述的 xml 執行個體中包含文件<xref:System.Xml.XmlReader>指定的物件。 如果 XML 文件包含項目和屬性從多個命名空間，則會產生多個結構描述： 一個用於每個文件中所使用的命名空間。 主要的結構描述可以驗證整個 XML 文件的結構描述，而且它的目標命名空間是 XML 文件的文件項目的命名空間相同。  
  
 以下是使用時要考慮的重要注意事項<xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法。  
  
-   <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法會略過任何`xsi:type`， `xsi:schemaLocation`，或`xsi:noNamespaceSchemaLocation`XML 文件中的屬性。  
  
-   如果<xref:System.Xml.XmlReader>物件類型，它包含的型別資訊會被忽略。  
  
-   如果<xref:System.Xml.XmlReader>物件所在的項目不是 XML 文件的根項目，只有該元素推斷的結構描述。 如果<xref:System.Xml.XmlReader>物件不位在項目<xref:System.Xml.XmlReader.Read%2A>上呼叫方法<xref:System.Xml.XmlReader>參數，直到遇到的項目 (例如，當<xref:System.Xml.XmlReader.NodeType%2A>是<xref:System.Xml.XmlNodeType.Element>)。 此時，推斷程序會開始從該項目。 如果沒有任何項目發生之前的文件結尾<xref:System.ArgumentException>就會擲回。  
  
-   如果<xref:System.Xml.Schema.XmlSchemaSet>物件會傳遞做為參數和賴以元素<xref:System.Xml.XmlReader>物件定位於其中一個在結構描述中定義<xref:System.Xml.Schema.XmlSchemaSet>，推斷的結構描述用來修改現有的結構描述中<xref:System.Xml.Schema.XmlSchemaSet>參數具有相同的目標命名空間;否則，新的結構描述就會推斷為命名空間。  
  
   
  
## Examples  
 下列範例程式碼會採用 XML 文件 1 做為輸入，並產生可驗證 XML 文件 1 的結構描述。 範例程式碼再將 XML 文件 2，並精簡從 XML 文件 1，根據 XML 文件 2 中的變更所產生的結構描述。  
  
 以下是 XML 文件 1。  
  
 [!code-xml[XmlSchemaInferenceExamples#13](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item1.xml#13)]  
  
 以下是 XML 文件 2。  
  
 [!code-xml[XmlSchemaInferenceExamples#14](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item2.xml#14)]  
  
 下列範例程式碼從推斷結構描述中包含的第一個 XML 文件`reader`，然後調整推斷的結構描述中包含的第二個 XML 文件中的變更與`reader1`。 範例程式碼會使用第一個多載<xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>推斷結構描述和第二個方法多載<xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法來修改現有的結構描述中<xref:System.Xml.Schema.XmlSchemaSet>物件。  
  
 [!code-cpp[XmlSchemaInferenceExamples#4](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#4)]
 [!code-csharp[XmlSchemaInferenceExamples#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#4)]
 [!code-vb[XmlSchemaInferenceExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#4)]  
  
 下列結構描述是從 XML 文件 1 推斷的結構描述。  
  
 [!code-xml[XmlSchemaInferenceExamples#15](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema1.xml#15)]  
  
 下列結構描述中是根據 XML 文件 2 上述結構描述的修改的版本。  
  
 [!code-xml[XmlSchemaInferenceExamples#16](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema2.xml#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">XML 文件的語式不正確。</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">
          <see cref="T:System.Xml.XmlReader" /> 物件不位於根節點上或項目上。 結構描述推斷處理序期間發生錯誤。</exception>
      </Docs>
    </Member>
    <Member MemberName="Occurrence">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption Occurrence" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberSignature Language="VB.NET" Value="Public Property Occurrence As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption Occurrence { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> 值，影響從 XML 文件推斷的結構描述符合項目宣告。</summary>
        <value>
          <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>屬性設定為<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>，在 XML 文件中遇到的第一個時間項目，就會推斷的結構描述宣告為`minOccurs="1"`。 當遇到屬性時，推斷的結構描述宣告為`use="required"`。  
  
 如果<xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>屬性設定為<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>，項目結構描述宣告會被推斷為`minOccurs="0"`，和屬性結構描述宣告會被推斷為`use="optional"`。  
  
 預設值<xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>屬性是<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>。  
  
   
  
## Examples  
 此範例說明項目會受到<xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>屬性。 範例程式碼會從 XML 檔案的項目推斷方式有兩種： 寬鬆和限制。 以下是範例 XML 檔案。  
  
 [!code-xml[XmlSchemaInferenceExamples#7](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence1.xml#7)]  
  
 下列範例程式碼會指示<xref:System.Xml.Schema.XmlSchemaInference>寬鬆的方式推斷出現的項目和屬性的類別。  
  
 [!code-cpp[XmlSchemaInferenceExamples#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#2)]
 [!code-csharp[XmlSchemaInferenceExamples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#2)]
 [!code-vb[XmlSchemaInferenceExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#2)]  
  
 因為<xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>屬性設定為<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>，下列結構描述所產生。  
  
 [!code-xml[XmlSchemaInferenceExamples#8](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence2.xml#8)]  
  
 在範例程式碼中，如果<xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>屬性未設定為<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>、<xref:System.Xml.Schema.XmlSchemaInference>類別會具有預設為<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>並產生下列結構描述。  
  
 [!code-xml[XmlSchemaInferenceExamples#9](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence3.xml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInference">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption TypeInference" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInference As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption TypeInference { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> 值，影響從 XML 文件推斷的型別。</summary>
        <value>
          <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>屬性設定為<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>，具有簡單內容的 XML 文件中元素和屬性的推斷的類型永遠是`xs:string`。 如果<xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>屬性設定為<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>，更特定的類型推斷，例如`xs:date`， `xs:decimal`， `xs:unsignedByte`，依此類推。  
  
 預設值<xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>屬性是<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>。  
  
   
  
## Examples  
 此範例說明類型推斷會受到<xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>屬性。 範例程式碼會以兩種不同方式來推斷類型從 XML 檔： 寬鬆和限制。 以下是範例 XML 檔案。  
  
 [!code-xml[XmlSchemaInferenceExamples#10](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference1.xml#10)]  
  
 下列範例程式碼會指示<xref:System.Xml.Schema.XmlSchemaInference>類別推斷`xs:string`項目及屬性具有簡單內容。  
  
 [!code-cpp[XmlSchemaInferenceExamples#3](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#3)]
 [!code-csharp[XmlSchemaInferenceExamples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#3)]
 [!code-vb[XmlSchemaInferenceExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#3)]  
  
 因為<xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>屬性設定為<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>，下列結構描述所產生。  
  
 [!code-xml[XmlSchemaInferenceExamples#11](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference2.xml#11)]  
  
 在範例程式碼中，如果<xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>屬性未設定為<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>、<xref:System.Xml.Schema.XmlSchemaInference>類別會具有預設為<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>並產生下列結構描述。  
  
 [!code-xml[XmlSchemaInferenceExamples#12](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference3.xml#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>