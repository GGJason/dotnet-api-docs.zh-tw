<Type Name="XmlSchemaAny" FullName="System.Xml.Schema.XmlSchemaAny">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e072e8258d902889d36209877640f7c61e175fc3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36442848" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlSchemaAny : System.Xml.Schema.XmlSchemaParticle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSchemaAny extends System.Xml.Schema.XmlSchemaParticle" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaAny" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSchemaAny&#xA;Inherits XmlSchemaParticle" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaAny : System::Xml::Schema::XmlSchemaParticle" />
  <TypeSignature Language="F#" Value="type XmlSchemaAny = class&#xA;    inherit XmlSchemaParticle" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Schema.XmlSchemaParticle</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示全球資訊網協會 (W3C) 的 <see langword="any" /> 項目。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `any`項目可讓來自指定之命名空間或命名空間，才會出現在包含的任何項目`complexType`項目。  
  
   
  
## Examples  
 下列範例會建立`any`項目。  
  
 [!code-cpp[Classic WebData XmlSchemaAny Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlSchemaAny Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlSchemaAny Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlSchemaAny Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlSchemaAny Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlSchemaAny Example/VB/source.vb#1)]  
  
 上述程式碼範例，會產生下列 XML 檔案。  
  
 [!code-xml[Classic WebData XmlSchemaAny Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlSchemaAny Example/XML/source.xml#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaAny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaAny.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaAny();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Schema.XmlSchemaAny" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaAny.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Schema.XmlSchemaAny.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("namespace")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定包含可以使用之項目的命名空間。</summary>
        <value>可以使用之項目的命名空間。 預設值為 <see langword="##any" />。  選擇性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果指定沒有命名空間，則`##any`是預設值。 如果指定的命名空間，則它必須是其中一個值下, 表所示。  
  
|命名空間值|描述|  
|---------------------|-----------------|  
|`##any`|可以表示任何命名空間的項目。|  
|`##other`|不是任何命名空間項目`targetNamespace`的父項目包含`any`項目可以存在。|  
|`##local`|可以表示未以命名空間限定的項目。|  
|`##targetNamespace`|項目從`targetNamespace`的父項目包含`any`項目可以存在。|  
|`List of {URIs, ##targetNamespace, ##local}`|命名空間的空格分隔清單中的項目可以存在。 清單可以包含下列： 命名空間的統一資源識別元 (URI) 參考`##targetNamespace`，和`##local`。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessContents">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaContentProcessing ProcessContents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaContentProcessing ProcessContents" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaAny.ProcessContents" />
      <MemberSignature Language="VB.NET" Value="Public Property ProcessContents As XmlSchemaContentProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaContentProcessing ProcessContents { System::Xml::Schema::XmlSchemaContentProcessing get(); void set(System::Xml::Schema::XmlSchemaContentProcessing value); };" />
      <MemberSignature Language="F#" Value="member this.ProcessContents : System.Xml.Schema.XmlSchemaContentProcessing with get, set" Usage="System.Xml.Schema.XmlSchemaAny.ProcessContents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("processContents")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaContentProcessing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定應用程式或 XML 處理器應如何處理驗證 <see langword="any" /> 項目指定之項目的 XML 文件的相關資訊。</summary>
        <value>其中一個 <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" /> 值。 如果未指定 <see langword="processContents" /> 屬性，會預設值為 <see langword="Strict" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>