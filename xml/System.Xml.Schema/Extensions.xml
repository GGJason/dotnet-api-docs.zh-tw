<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Extensions.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e7e34dcb838e574a5bf90abd34b31950b0d4f6ae.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7e34dcb838e574a5bf90abd34b31950b0d4f6ae</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.Extensions">
          <source>This class contains the LINQ to XML extension methods for XSD validation.</source>
          <target state="translated">這個類別包含 XSD 驗證的 LINQ to XML 擴充方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.Extensions">
          <source>This class also contains methods to get the post-schema-validation infoset (PSVI) of a validated XML node.</source>
          <target state="translated">這個類別也包含方法，以取得已驗證的 XML 節點的後結構描述驗證資訊集 (PSVI)。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.Extensions">
          <source>When you validate an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, or <ph id="ph3">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>, you can also optionally populate the XML tree with the post-schema-validation infoset.</source>
          <target state="translated">當您驗證<ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>， <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>，或<ph id="ph3">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>，您可以也可以選擇性地填入 XML 樹狀結構，使用後結構描述驗證資訊集。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.Extensions">
          <source>PSVI information is added as an annotation of type <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">PSVI 資訊會新增為型別的附註<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaInfo?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.Extensions">
          <source>The XSD in <bpt id="p1">[</bpt>Sample XSD File: Customers and Orders<ept id="p1">](http://msdn.microsoft.com/library/8b05efe3-cc5e-4c7b-b322-892dbda41687)</ept> contains a schema that can be used to validate the XML document in <bpt id="p2">[</bpt>Sample XML File: Customers and Orders (LINQ to XML)<ept id="p2">](http://msdn.microsoft.com/library/26790c41-5976-4558-a096-d0f67bfc4d92)</ept>.</source>
          <target state="translated">在 XSD<bpt id="p1">[</bpt>範例 XSD 檔： 客戶和訂單<ept id="p1">](http://msdn.microsoft.com/library/8b05efe3-cc5e-4c7b-b322-892dbda41687)</ept>包含可以用來驗證 XML 文件中的結構描述<bpt id="p2">[</bpt>範例 XML 檔： 客戶和訂單 (LINQ to XML)<ept id="p2">](http://msdn.microsoft.com/library/26790c41-5976-4558-a096-d0f67bfc4d92)</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.Extensions">
          <source>The following example loads the schema and the document, validates the document, changes the document so that the <ph id="ph1">`xs:key`</ph> and <ph id="ph2">`xs:keyref`</ph> relationship is not valid, and then attempts to validate again.</source>
          <target state="translated">下列範例會載入結構描述和文件，來驗證文件、 文件變更，讓<ph id="ph1">`xs:key`</ph>和<ph id="ph2">`xs:keyref`</ph>關聯性無效，，然後嘗試再次驗證。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.Extensions">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.Extensions">
          <source>Gets the post-schema-validation infoset (PSVI) of a validated node.</source>
          <target state="translated">取得已驗證節點的後結構描述驗證資訊集 (PSVI)。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.Extensions">
          <source>After you have validated an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, you can retrieve the post-schema-validation infoset for an <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> that is contained in the document.</source>
          <target state="translated">您已驗證之後<ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>，您可以擷取的後結構描述驗證 infoset<ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>或<ph id="ph3">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>包含在文件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.Extensions">
          <source>After retrieving the <ph id="ph1">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph> object, you can use the <ph id="ph2">&lt;xref:System.Xml.Schema.IXmlSchemaInfo.SchemaAttribute%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.Schema.IXmlSchemaInfo.SchemaElement%2A&gt;</ph> properties to get a partial validation type (<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph> or <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph>).</source>
          <target state="translated">擷取後<ph id="ph1">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph>物件，您可以使用<ph id="ph2">&lt;xref:System.Xml.Schema.IXmlSchemaInfo.SchemaAttribute%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Xml.Schema.IXmlSchemaInfo.SchemaElement%2A&gt;</ph>屬性來取得部分驗證類型 (<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph>或<ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.Extensions">
          <source>You can use the partial validation types to validate an attribute or a sub-tree.</source>
          <target state="translated">您可以使用的部分驗證類型來驗證屬性或子樹狀結構。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> that has been previously validated.</source>
          <target state="translated">之前已驗證的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
          <source>Gets the post-schema-validation infoset (PSVI) of a validated attribute.</source>
          <target state="translated">取得已驗證屬性的後結構描述驗證資訊集 (PSVI)。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.IXmlSchemaInfo" /&gt;</ph> that contains the post-schema-validation infoset for an <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.IXmlSchemaInfo" /&gt;</ph>，其中包含 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 的後結構描述驗證資訊集。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph> returned by this method to determine certain characteristics of a validated attribute.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph>傳回這個方法來判斷已驗證之屬性的某些特性。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
          <source>For example, you can determine if the attribute came from a default attribute value in an XSD.</source>
          <target state="translated">例如，您可以判斷是否屬性是從 「 XSD 中的預設屬性值。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
          <source>You use the <ph id="ph1">&lt;xref:System.Xml.Schema.IXmlSchemaInfo.SchemaAttribute%2A&gt;</ph> property to get a partial validation type (<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph>).</source>
          <target state="translated">您使用<ph id="ph1">&lt;xref:System.Xml.Schema.IXmlSchemaInfo.SchemaAttribute%2A&gt;</ph>屬性來取得部分驗證類型 (<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
          <source>You can use it to revalidate an attribute without validating an entire document.</source>
          <target state="translated">您可以使用它來重新驗證而不驗證整份文件的屬性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)">
          <source>For an example of this property, see <ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;</ph>.</source>
          <target state="translated">如需這個屬性的範例，請參閱<ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> that has been previously validated.</source>
          <target state="translated">之前已驗證的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
          <source>Gets the post-schema-validation infoset (PSVI) of a validated element.</source>
          <target state="translated">取得已驗證項目的後結構描述驗證資訊集 (PSVI)。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.IXmlSchemaInfo" /&gt;</ph> that contains the post-schema-validation infoset (PSVI) for an <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.IXmlSchemaInfo" /&gt;</ph>，其中包含 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> 的後結構描述驗證資訊集 (PSVI)。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph> returned by this method to determine certain characteristics of a validated element.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph>傳回這個方法來判斷已驗證的項目之某些特性。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
          <source>For example, you can determine the dynamic schema type of the element.</source>
          <target state="translated">例如，您可以判斷動態結構描述項目的型別。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
          <source>You use the <ph id="ph1">&lt;xref:System.Xml.Schema.IXmlSchemaInfo.SchemaElement%2A&gt;</ph> property to get a partial validation type (<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph>).</source>
          <target state="translated">您使用<ph id="ph1">&lt;xref:System.Xml.Schema.IXmlSchemaInfo.SchemaElement%2A&gt;</ph>屬性來取得部分驗證類型 (<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
          <source>You can use it to revalidate a sub-tree with an element at its root without validating an entire document.</source>
          <target state="translated">您可以使用它來重新驗證與在其根項目樹狀子目錄，而不驗證整份文件。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
          <source>For an example of this property, see <ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;</ph>.</source>
          <target state="translated">如需這個屬性的範例，請參閱<ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
          <source>The following example populates the tree with a PSVI.</source>
          <target state="translated">下列範例會填入 PSVI 的樹狀目錄。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
          <source>After validation, it prints all elements and attributes in the tree that are invalid according to the PSVI.</source>
          <target state="translated">驗證之後，它會列印所有項目和屬性在樹狀目錄中，不能根據 PSVI。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.Extensions">
          <source>Validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>, an <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>, or an <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> conforms to an XSD in an <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">驗證 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 是否符合 <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中的 XSD。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.Extensions">
          <source>These methods use an underlying <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to validate the XML tree against an XSD.</source>
          <target state="translated">這些方法會使用基礎<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>XSD 針對 XML 樹狀結構的驗證。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.Extensions">
          <source>Validation error and warning messages are handled using the <ph id="ph1">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph> delegate.</source>
          <target state="translated">驗證錯誤和警告訊息則會使用處理<ph id="ph1">&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;</ph>委派。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.Extensions">
          <source>If no event handler is provided to these methods, validation errors are exposed as an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph>.</source>
          <target state="translated">如果沒有事件處理常式提供給這些方法時，驗證錯誤會公開為<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.Extensions">
          <source>Validation warnings do not cause an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> to be thrown.</source>
          <target state="translated">驗證警告不會導致<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph>擲回。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.Extensions">
          <source>Some of these extension methods optionally allow population of the post-schema-validation infoset (PSVI).</source>
          <target state="translated">這些擴充方法的某些選擇性地允許後結構描述驗證 infoset (PSVI) 填入。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to validate.</source>
          <target state="translated">要驗證的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to validate against.</source>
          <target state="translated">要用來驗證的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> for an event that occurs when the reader encounters validation errors.</source>
          <target state="translated">在讀取器遇到驗證錯誤時發生之事件的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, throws an exception upon validation errors.</source>
          <target state="translated">若為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則於發生驗證錯誤時擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>This method validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> conforms to an XSD in an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">這個方法會驗證 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> 是否符合 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中的 XSD。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>This extension method validates that the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> conforms to the schema content model in <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">這個擴充方法會驗證<ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>符合結構描述內容模型中<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, then validates two <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> objects against the schema set.</source>
          <target state="translated">下列範例會建立 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>，然後針對結構描述設定驗證兩個 <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>One of the documents is valid, the other is not.</source>
          <target state="translated">其中一個文件有效，另一個無效。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>Thrown for XML Schema Definition Language (XSD) validation errors.</source>
          <target state="translated">針對 XML 結構描述定義語言 (XSD) 驗證錯誤而擲回。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to validate.</source>
          <target state="translated">要驗證的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> that specifies the sub-tree to validate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>，指定要驗證的樹狀子目錄。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to validate against.</source>
          <target state="translated">要用來驗證的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> for an event that occurs when the reader encounters validation errors.</source>
          <target state="translated">在讀取器遇到驗證錯誤時發生之事件的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, throws an exception upon validation errors.</source>
          <target state="translated">若為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則於發生驗證錯誤時擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>This method validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> conforms to a specified <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> and an <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">這個方法會驗證 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 是否符合指定的 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>You can use this method to validate that an <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> conforms to a schema.</source>
          <target state="translated">您可以使用這個方法以驗證<ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>符合結構描述。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>You typically use this method when you have modified an attribute, and you want to make sure that it still conforms to its schema.</source>
          <target state="translated">當您已修改屬性，且您想要確定仍符合其結構描述時，通常會使用這個方法。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>You could validate the entire document, but it takes less processing time to validate just the attribute.</source>
          <target state="translated">您也可以驗證整份文件，但所花費處理時間少只驗證屬性。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`validationEventHandler`</ph>, this method raises an exception upon validation errors.</source>
          <target state="translated">如果您要傳入<ph id="ph1">`null`</ph>如<ph id="ph2">`validationEventHandler`</ph>，這個方法會引發例外狀況時驗證錯誤。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>Validation warnings will not raise an exception.</source>
          <target state="translated">驗證警告將不會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>To validate an attribute, you use an instance of <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>.</source>
          <target state="translated">若要驗證的屬性，您可以使用的執行個體<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>You can obtain this instance in various ways.</source>
          <target state="translated">您可以取得此執行個體，以各種方式。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>An easy way is as follows:</source>
          <target state="translated">簡單方法是，如下所示：</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>Validate that a document conforms to a schema.</source>
          <target state="translated">驗證文件符合結構描述。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>Add the post-schema-validation infoset (PSVI) by calling the <ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;</ph> extension method.</source>
          <target state="translated">新增後結構描述驗證 infoset (PSVI)，藉由呼叫<ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;</ph>擴充方法。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>Call the <ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt;</ph> extension method to retrieve an object that implements <ph id="ph2">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph>.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt;</ph>擴充方法來擷取該物件會實作<ph id="ph2">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>From the retrieved object, you can get an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>.</source>
          <target state="translated">您可以從擷取的物件，取得<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>If you get an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> for an <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, the type will be <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph>.</source>
          <target state="translated">如果您收到<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>如<ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>，型別會<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>If you get an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> for an <ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>, the type will be <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph>.</source>
          <target state="translated">如果您收到<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>如<ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>，型別會<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>After you have an instance of an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>, you can use this method to validate an attribute.</source>
          <target state="translated">執行個體之後<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>，您可以使用這個方法來驗證屬性。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>Thrown for XML Schema Definition Language (XSD) validation errors.</source>
          <target state="translated">針對 XML 結構描述定義語言 (XSD) 驗證錯誤而擲回。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to validate.</source>
          <target state="translated">要驗證的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to validate against.</source>
          <target state="translated">要用來驗證的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> for an event that occurs when the reader encounters validation errors.</source>
          <target state="translated">在讀取器遇到驗證錯誤時發生之事件的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, throws an exception upon validation errors.</source>
          <target state="translated">若為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則於發生驗證錯誤時擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> indicating whether to populate the post-schema-validation infoset (PSVI).</source>
          <target state="translated">指出是否要填入 Post-Schema-Validation Infoset (PSVI) 的 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> conforms to an XSD in an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, optionally populating the XML tree with the post-schema-validation infoset (PSVI).</source>
          <target state="translated">驗證 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> 是否符合 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中的 XSD，並選擇性地將後結構描述驗證資訊集 (PSVI) 填入 XML 樹狀目錄。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>This extension method validates that the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> conforms to the schema content model in <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">這個擴充方法會驗證<ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>符合結構描述內容模型中<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>If <ph id="ph1">`addSchemaInfo`</ph> is <ph id="ph2">`true`</ph>, this method populates the XML tree with the post-schema-validation infoset (PSVI).</source>
          <target state="translated">如果<ph id="ph1">`addSchemaInfo`</ph>是<ph id="ph2">`true`</ph>，這個方法會填入 XML 樹狀結構，使用後結構描述驗證 infoset (PSVI)。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>There are two steps to populating the XML tree with the PSVI.</source>
          <target state="translated">有兩個步驟來填入 XML 樹狀結構的 PSVI。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>First, an annotation is added to all nodes in the tree to enable you to call <ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A?displayProperty=nameWithType&gt;</ph> on an element or attribute in the tree.</source>
          <target state="translated">首先，註解加入所有節點在樹狀目錄中，您可以呼叫<ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A?displayProperty=nameWithType&gt;</ph>項目或在樹狀目錄中的屬性。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Second, default elements and attributes defined in the XSD are added to the XML tree.</source>
          <target state="translated">第二，預設項目和屬性在 XSD 中定義，會加入到 XML 樹狀結構中。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>By calling one of the <ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt;</ph> methods, you can determine if a specific element or attribute was added from the XSD as a default element or attribute.</source>
          <target state="translated">透過呼叫其中一個<ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt;</ph>方法，您可以判斷是否特定的項目或屬性已加入從 XSD 做為預設項目或屬性。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>The following example contains an XSD that defines the <ph id="ph1">`Child2`</ph> element with an <ph id="ph2">`Att1`</ph> attribute with a default value.</source>
          <target state="translated">下列範例包含定義 XSD<ph id="ph1">`Child2`</ph>具有項目<ph id="ph2">`Att1`</ph>屬性預設值。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>After successfully validating the document, the attribute with the default value is added to the XML tree.</source>
          <target state="translated">已成功驗證之後文件，具有預設值的屬性加入到 XML 樹狀結構。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Note that the default attribute is not added to <ph id="ph1">`doc2`</ph>, which does not validate against the schema.</source>
          <target state="translated">請注意，沒有預設屬性加入<ph id="ph1">`doc2`</ph>，這不會針對結構描述驗證。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>The following example populates the tree with PSVI.</source>
          <target state="translated">下列範例會填入 PSVI 的樹狀目錄。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>After validation, it prints all elements and attributes in the tree that are invalid according to the PSVI.</source>
          <target state="translated">驗證之後，它會列印所有項目和屬性在樹狀目錄中，不能根據 PSVI。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Thrown for XML Schema Definition Language (XSD) validation errors.</source>
          <target state="translated">針對 XML 結構描述定義語言 (XSD) 驗證錯誤而擲回。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to validate.</source>
          <target state="translated">要驗證的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> that specifies the sub-tree to validate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>，指定要驗證的樹狀子目錄。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to validate against.</source>
          <target state="translated">要用來驗證的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> for an event that occurs when the reader encounters validation errors.</source>
          <target state="translated">在讀取器遇到驗證錯誤時發生之事件的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, throws an exception upon validation errors.</source>
          <target state="translated">若為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則於發生驗證錯誤時擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>This method validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> sub-tree conforms to a specified <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> and an <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">這個方法會驗證 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> 樹狀子目錄是否符合指定的 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>You can use this method to validate that a sub-tree (with an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> at its root) conforms to a schema.</source>
          <target state="translated">您可以使用這個方法以驗證子樹狀目錄 (與<ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>在其根) 符合結構描述。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>You typically use this method when you have modified a sub-tree, and you want to make sure that it still conforms to its schema.</source>
          <target state="translated">當您已修改子樹狀目錄中，且您想要確定仍符合其結構描述時，通常會使用這個方法。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>You could validate the entire document, but it takes less processing time to validate a just a sub-tree.</source>
          <target state="translated">您也可以驗證整份文件，但它需要較少的處理時間只驗證樹狀子目錄。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`validationEventHandler`</ph>, then this method raises an exception upon validation errors.</source>
          <target state="translated">如果您要傳入<ph id="ph1">`null`</ph>如<ph id="ph2">`validationEventHandler`</ph>，則這個方法會引發例外狀況時驗證錯誤。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>Validation warnings will not raise an exception.</source>
          <target state="translated">驗證警告將不會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>To validate a sub-tree, you use an instance of <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>.</source>
          <target state="translated">若要驗證子樹狀目錄中，您可以使用的執行個體<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>You can obtain this instance in various ways.</source>
          <target state="translated">您可以取得此執行個體，以各種方式。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>An easy way is as follows:</source>
          <target state="translated">簡單方法是，如下所示：</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>Validate that a document conforms to a schema.</source>
          <target state="translated">驗證文件符合結構描述。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>Add the post-schema-validation infoset (PSVI) by calling the <ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;</ph> extension method.</source>
          <target state="translated">新增後結構描述驗證 infoset (PSVI)，藉由呼叫<ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;</ph>擴充方法。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>Call the <ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt;</ph> extension method to retrieve an object that implements <ph id="ph2">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph>.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt;</ph>擴充方法來擷取該物件會實作<ph id="ph2">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>From the retrieved object, you can get an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>.</source>
          <target state="translated">您可以從擷取的物件，取得<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>If you get an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> for an <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, the type will be <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph>.</source>
          <target state="translated">如果您收到<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>如<ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>，型別會<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>If you get an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> for an <ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>, the type will be <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph>.</source>
          <target state="translated">如果您收到<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>如<ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>，型別會<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>After you have an instance of an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>, you can use this method to validate an sub-tree.</source>
          <target state="translated">執行個體之後<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>，您可以使用這個方法來驗證樹狀子目錄。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
          <source>Thrown for XML Schema Definition Language (XSD) validation errors.</source>
          <target state="translated">針對 XML 結構描述定義語言 (XSD) 驗證錯誤而擲回。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> to validate.</source>
          <target state="translated">要驗證的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> that specifies the sub-tree to validate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>，指定要驗證的樹狀子目錄。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to validate against.</source>
          <target state="translated">要用來驗證的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> for an event that occurs when the reader encounters validation errors.</source>
          <target state="translated">在讀取器遇到驗證錯誤時發生之事件的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, throws an exception upon validation errors.</source>
          <target state="translated">若為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則於發生驗證錯誤時擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> indicating whether to populate the post-schema-validation infoset (PSVI).</source>
          <target state="translated">指出是否要填入 Post-Schema-Validation Infoset (PSVI) 的 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> conforms to a specified <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> and an <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, optionally populating the XML tree with the post-schema-validation infoset (PSVI).</source>
          <target state="translated">驗證 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XAttribute" /&gt;</ph> 是否符合指定的 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>，並選擇性地將後結構描述驗證資訊集 (PSVI) 填入 XML 樹狀目錄。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>You can use this method to validate that an <ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph> conforms to a schema.</source>
          <target state="translated">您可以使用這個方法以驗證<ph id="ph1">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>符合結構描述。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>You typically use this method when you have modified an attribute, and you want to make sure that it still conforms to its schema.</source>
          <target state="translated">當您已修改屬性，且您想要確定仍符合其結構描述時，通常會使用這個方法。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>You could validate the entire document, but it takes less processing time to validate just the attribute.</source>
          <target state="translated">您也可以驗證整份文件，但所花費處理時間少只驗證屬性。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>If <ph id="ph1">`addSchemaInfo`</ph> is <ph id="ph2">`true`</ph>, this method populates the attribute with the post-schema-validation infoset (PSVI).</source>
          <target state="translated">如果<ph id="ph1">`addSchemaInfo`</ph>是<ph id="ph2">`true`</ph>，這個方法會填入後結構描述驗證 infoset (PSVI) 的屬性。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>After you have populated the XML tree with the PSVI, you can call <ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A?displayProperty=nameWithType&gt;</ph> on the validated attribute.</source>
          <target state="translated">您已填入 XML 樹狀結構與 PSVI 之後，您可以呼叫<ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A?displayProperty=nameWithType&gt;</ph>已驗證之屬性上。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>This is useful if you are writing code that relies on data returned by <ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt;</ph>.</source>
          <target state="translated">如果您要撰寫程式碼依賴所傳回的資料，這非常有用<ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`validationEventHandler`</ph>, then this method raises an exception upon validation errors.</source>
          <target state="translated">如果您要傳入<ph id="ph1">`null`</ph>如<ph id="ph2">`validationEventHandler`</ph>，則這個方法會引發例外狀況時驗證錯誤。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Validation warnings will not raise an exception.</source>
          <target state="translated">驗證警告將不會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>To validate an attribute, you use an instance of <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>.</source>
          <target state="translated">若要驗證的屬性，您可以使用的執行個體<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>You can obtain this instance in various ways.</source>
          <target state="translated">您可以取得此執行個體，以各種方式。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>An easy way is as follows:</source>
          <target state="translated">簡單方法是，如下所示：</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Validate that a document conforms to a schema.</source>
          <target state="translated">驗證文件符合結構描述。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Add the post-schema-validation infoset (PSVI) by calling the <ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;</ph> extension method.</source>
          <target state="translated">新增後結構描述驗證 infoset (PSVI)，藉由呼叫<ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;</ph>擴充方法。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Call the <ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt;</ph> extension method to retrieve an object that implements <ph id="ph2">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph>.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt;</ph>擴充方法來擷取該物件會實作<ph id="ph2">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>From the retrieved object, you can get an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>.</source>
          <target state="translated">您可以從擷取的物件，取得<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>If you get an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> for an <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, the type will be <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph>.</source>
          <target state="translated">如果您收到<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>如<ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>，型別會<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>If you get an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> for an <ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>, the type will be <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph>.</source>
          <target state="translated">如果您收到<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>如<ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>，型別會<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>After you have an instance of an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>, you can use this method to validate an attribute.</source>
          <target state="translated">執行個體之後<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>，您可以使用這個方法來驗證屬性。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Thrown for XML Schema Definition Language (XSD) validation errors.</source>
          <target state="translated">針對 XML 結構描述定義語言 (XSD) 驗證錯誤而擲回。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> to validate.</source>
          <target state="translated">要驗證的 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> that specifies the sub-tree to validate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>，指定要驗證的樹狀子目錄。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to validate against.</source>
          <target state="translated">要用來驗證的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> for an event that occurs when the reader encounters validation errors.</source>
          <target state="translated">在讀取器遇到驗證錯誤時發生之事件的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, throws an exception upon validation errors.</source>
          <target state="translated">若為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則於發生驗證錯誤時擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> indicating whether to populate the post-schema-validation infoset (PSVI).</source>
          <target state="translated">指出是否要填入 Post-Schema-Validation Infoset (PSVI) 的 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Validates that an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> sub-tree conforms to a specified <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> and an <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, optionally populating the XML tree with the post-schema-validation infoset (PSVI).</source>
          <target state="translated">驗證 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> 樹狀子目錄是否符合指定的 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>，並選擇性地將後結構描述驗證資訊集 (PSVI) 填入 XML 樹狀目錄。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>You can use this method to validate that a sub-tree (with an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> at the root of the sub-tree) conforms to a schema.</source>
          <target state="translated">您可以使用這個方法以驗證子樹狀目錄 (與<ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>子樹狀結構的根目錄) 符合結構描述。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>You typically use this method when you have modified a sub-tree, and you want to make sure that it still conforms to its schema.</source>
          <target state="translated">當您已修改子樹狀目錄中，且您想要確定仍符合其結構描述時，通常會使用這個方法。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>You could validate the entire document, but it takes less processing time to validate a just a sub-tree.</source>
          <target state="translated">您也可以驗證整份文件，但它需要較少的處理時間只驗證樹狀子目錄。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>If <ph id="ph1">`addSchemaInfo`</ph> is <ph id="ph2">`true`</ph>, then this method populates the XML tree with the post-schema-validation infoset (PSVI).</source>
          <target state="translated">如果<ph id="ph1">`addSchemaInfo`</ph>是<ph id="ph2">`true`</ph>，則這個方法會填入 XML 樹狀結構，使用後結構描述驗證 infoset (PSVI)。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>There are two aspects of populating the XML tree with the PSVI.</source>
          <target state="translated">有兩個層面的填入 XML 樹狀結構的 PSVI。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>First, an annotation is added to all nodes in the tree such that you can now call <ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt;</ph> on an element or attribute in the tree.</source>
          <target state="translated">首先，附註加入到樹狀結構中的所有節點，您現在可以呼叫<ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt;</ph>項目或在樹狀目錄中的屬性。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Second, default elements and attributes defined in the XSD are added to the XML tree.</source>
          <target state="translated">第二，預設項目和屬性在 XSD 中定義，會加入到 XML 樹狀結構中。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>By calling one of the <ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt;</ph> methods, you can determine if a specific element or attribute was added from the XSD as a default element or attribute.</source>
          <target state="translated">透過呼叫其中一個<ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt;</ph>方法，您可以判斷是否特定的項目或屬性已加入從 XSD 做為預設項目或屬性。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`validationEventHandler`</ph>, then this method raises an exception upon validation errors.</source>
          <target state="translated">如果您要傳入<ph id="ph1">`null`</ph>如<ph id="ph2">`validationEventHandler`</ph>，則這個方法會引發例外狀況時驗證錯誤。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Validation warnings will not raise an exception.</source>
          <target state="translated">驗證警告將不會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>To validate a sub-tree, you use an instance of <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>.</source>
          <target state="translated">若要驗證子樹狀目錄中，您可以使用的執行個體<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>You can obtain this instance in various ways.</source>
          <target state="translated">您可以取得此執行個體，以各種方式。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>An easy way is as follows:</source>
          <target state="translated">簡單方法是，如下所示：</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Validate that a document conforms to a schema.</source>
          <target state="translated">驗證文件符合結構描述。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Add the post-schema-validation infoset (PSVI) by calling the <ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;</ph> extension method.</source>
          <target state="translated">新增後結構描述驗證 infoset (PSVI)，藉由呼叫<ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;</ph>擴充方法。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Call the <ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt;</ph> extension method to retrieve an object that implements <ph id="ph2">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph>.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Xml.Schema.Extensions.GetSchemaInfo%2A&gt;</ph>擴充方法來擷取該物件會實作<ph id="ph2">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>From the retrieved object, you can get an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>.</source>
          <target state="translated">您可以從擷取的物件，取得<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>If you get an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> for an <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, the type will be <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph>.</source>
          <target state="translated">如果您收到<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>如<ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>，型別會<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>If you get an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> for an <ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>, the type will be <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph>.</source>
          <target state="translated">如果您收到<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>如<ph id="ph2">&lt;xref:System.Xml.Linq.XAttribute&gt;</ph>，型別會<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>After you have an instance of an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>, you can use this method to validate a sub-tree..</source>
          <target state="translated">執行個體之後<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>，您可以使用這個方法子樹狀結構的驗證...</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
          <source>Thrown for XML Schema Definition Language (XSD) validation errors.</source>
          <target state="translated">針對 XML 結構描述定義語言 (XSD) 驗證錯誤而擲回。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>