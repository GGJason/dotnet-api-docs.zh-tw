<Type Name="XmlSchemaComplexType" FullName="System.Xml.Schema.XmlSchemaComplexType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e4b6d7d189b4930cc56db67904a5e681baa25713" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720312" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlSchemaComplexType : System.Xml.Schema.XmlSchemaType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi XmlSchemaComplexType extends System.Xml.Schema.XmlSchemaType" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaComplexType" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSchemaComplexType&#xA;Inherits XmlSchemaType" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaComplexType : System::Xml::Schema::XmlSchemaType" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Schema.XmlSchemaType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a6b0b-101">將來自 XML 結構描述的 <see langword="complexType" /> 項目依 World Wide Web Consortium (W3C) 規定表示。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a6b0b-101">Represents the <see langword="complexType" /> element from XML Schema as specified by the World Wide Web Consortium (W3C).</span>
      </span>
      <span data-ttu-id="a6b0b-102">這個類別 (Class) 定義決定元素屬性 (Attribute) 集和內容的複雜類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a6b0b-102">This class defines a complex type that determines the set of attributes and content of an element.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6b0b-103">項目可以宣告具有型別屬性，它是指`complexType`定義結構、 內容和屬性，該元素的項目。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-103">An element can be declared with a type attribute that refers to a `complexType` element that defines the structure, content, and attributes of that element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6b0b-104">下列範例會建立`complexType`項目。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-104">The following example creates a `complexType` element.</span></span>  
  
 [!code-cpp[Classic WebData XmlSchemaComplexType Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic Webdata XmlSchemaComplexType Example/CPP/complextype.cpp#1)]
 [!code-csharp[Classic WebData XmlSchemaComplexType Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic Webdata XmlSchemaComplexType Example/CS/complextype.cs#1)]
 [!code-vb[Classic WebData XmlSchemaComplexType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic Webdata XmlSchemaComplexType Example/VB/complextype.vb#1)]  
  
 <span data-ttu-id="a6b0b-105">下列 XML 檔案用於先前的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-105">The following XML file is used for the preceding code example.</span></span>  
  
 [!code-xml[Classic WebData XmlSchemaComplexType Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic Webdata XmlSchemaComplexType Example/XML/example.xsd#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaComplexType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaComplexType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaComplexType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6b0b-106">初始化 <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-106">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnyAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaAnyAttribute AnyAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaAnyAttribute AnyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaComplexType.AnyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property AnyAttribute As XmlSchemaAnyAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaAnyAttribute ^ AnyAttribute { System::Xml::Schema::XmlSchemaAnyAttribute ^ get(); void set(System::Xml::Schema::XmlSchemaAnyAttribute ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("anyAttribute")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaAnyAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6b0b-107">取得或設定複雜型別的 <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> 元件之值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-107">Gets or sets the value for the <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> component of the complex type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6b0b-108">複雜型別的 <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> 元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-108">The <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> component of the complex type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6b0b-109">如果這個屬性不是 null，複雜類型可以包含任何屬性中指定的命名空間中<xref:System.Xml.Schema.XmlSchemaAnyAttribute>。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-109">If this property is not null, the complex type can contain any attributes from the namespaces specified in the <xref:System.Xml.Schema.XmlSchemaAnyAttribute>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaComplexType.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As XmlSchemaObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectCollection ^ Attributes { System::Xml::Schema::XmlSchemaObjectCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("attribute", typeof(System.Xml.Schema.XmlSchemaAttribute))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("attributeGroup", typeof(System.Xml.Schema.XmlSchemaAttributeGroupRef))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6b0b-110">取得複雜類型的屬性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-110">Gets the collection of attributes for the complex type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6b0b-111">包含 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 和 <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /> 類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-111">Contains <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> and <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /> classes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeUses">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable AttributeUses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable AttributeUses" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeUses As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ AttributeUses { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6b0b-112">取得這個複雜類型及其基底類型 (Base Type) 所有遵守之屬性的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-112">Gets the collection of all the complied attributes of this complex type and its base types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6b0b-113">這個複雜類型及其基本類型中所有屬性的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-113">The collection of all the attributes from this complex type and its base types.</span>
          </span>
          <span data-ttu-id="a6b0b-114">
            <see langword="AttributeUses" /> 屬性的編譯後值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-114">The post-compilation value of the <see langword="AttributeUses" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6b0b-115">例如，從所有屬性的組合`Attributes`從階層中每個類型的屬性。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-115">For example, a combination of all the attributes from the `Attributes` property from each type in the hierarchy.</span></span>  
  
 <span data-ttu-id="a6b0b-116">這個屬性的值為唯讀。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-116">The value of this property is read-only.</span></span> <span data-ttu-id="a6b0b-117">結構描述成功編譯來判斷完成屬性集，允許的執行個體文件之後，這個屬性具有值。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-117">This property has the value after the schema has been successfully compiled to determine the complete attribute set that is allowed in an instance document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeWildcard">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaAnyAttribute AttributeWildcard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaAnyAttribute AttributeWildcard" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeWildcard As XmlSchemaAnyAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaAnyAttribute ^ AttributeWildcard { System::Xml::Schema::XmlSchemaAnyAttribute ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaAnyAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6b0b-118">取得這個複雜型別及其基底型別之 <see langword="anyAttribute" /> 的編譯後值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-118">Gets the post-compilation value for <see langword="anyAttribute" /> for this complex type and its base type(s).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6b0b-119">
            <see langword="anyAttribute" /> 項目的編譯後值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-119">The post-compilation value of the <see langword="anyAttribute" /> element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6b0b-120">這個屬性的值為唯讀。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-120">The value of this property is read-only.</span></span> <span data-ttu-id="a6b0b-121">結構描述成功編譯來判斷完成屬性集的複雜型別之後，此屬性的值。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-121">This property has values after the schema has been successfully compiled to determine the complete attribute set of the complex type.</span></span> <span data-ttu-id="a6b0b-122">例如，它可能是`anyAttribute`基底類型中的項目。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-122">For example, it might be the `anyAttribute` element from one of the base types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaDerivationMethod Block { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaDerivationMethod Block" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaComplexType.Block" />
      <MemberSignature Language="VB.NET" Value="Public Property Block As XmlSchemaDerivationMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaDerivationMethod Block { System::Xml::Schema::XmlSchemaDerivationMethod get(); void set(System::Xml::Schema::XmlSchemaDerivationMethod value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("block")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaDerivationMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6b0b-123">取得或設定 <see langword="block" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-123">Gets or sets the <see langword="block" /> attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6b0b-124">
            <see langword="block" /> 屬性會防止複雜型別用於指定的衍生型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-124">The <see langword="block" /> attribute prevents a complex type from being used in the specified type of derivation.</span>
          </span>
          <span data-ttu-id="a6b0b-125">預設值為 <see langword="XmlSchemaDerivationMethod.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-125">The default is <see langword="XmlSchemaDerivationMethod.None" />.</span>
          </span>
          <span data-ttu-id="a6b0b-126">選擇性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-126">Optional.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6b0b-127">指出衍生的型別。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-127">Indicates the type of derivation.</span></span>  
  
 <span data-ttu-id="a6b0b-128">這個屬性可以包含下列值：</span><span class="sxs-lookup"><span data-stu-id="a6b0b-128">This attribute can contain the following values:</span></span>  
  
|<span data-ttu-id="a6b0b-129">列舉</span><span class="sxs-lookup"><span data-stu-id="a6b0b-129">Enum</span></span>|<span data-ttu-id="a6b0b-130">描述</span><span class="sxs-lookup"><span data-stu-id="a6b0b-130">Description</span></span>|  
|----------|-----------------|  
|`None`|<span data-ttu-id="a6b0b-131">使用所定義的衍生限制`BlockDefault`屬性結構描述，如果存在的話。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-131">Use the derivation restriction defined by the `BlockDefault` property of the schema, if it exists.</span></span>|  
|`Extension`|<span data-ttu-id="a6b0b-132">這個項目不能利用擴充衍生類型所取代。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-132">This element cannot be replaced by a type derived by Extension.</span></span>|  
|`Restriction`|<span data-ttu-id="a6b0b-133">這個項目無法由限制衍生的類型所取代。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-133">This element cannot be replaced by a type derived by Restriction.</span></span>|  
|`All`|<span data-ttu-id="a6b0b-134">`#all`。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-134">`#all`.</span></span> <span data-ttu-id="a6b0b-135">無法取代這個項目，不論衍生方法的任何型別。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-135">This element cannot be replaced by any type regardless of derivation method.</span></span>|  
  
 <span data-ttu-id="a6b0b-136">`Substitution`， `List`，和`Union`衍生方法不支援這個屬性。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-136">The `Substitution`, `List`, and `Union` derivation methods are not supported by this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockResolved">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaDerivationMethod BlockResolved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaDerivationMethod BlockResolved" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlockResolved As XmlSchemaDerivationMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaDerivationMethod BlockResolved { System::Xml::Schema::XmlSchemaDerivationMethod get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaDerivationMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6b0b-137">取得類型編譯為 post-schema-validation 資訊集 (infoset) 之後的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-137">Gets the value after the type has been compiled to the post-schema-validation information set (infoset).</span>
          </span>
          <span data-ttu-id="a6b0b-138">這個值指示在執行個體文件中使用 <see langword="xsi:type" /> 時，如何強制型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-138">This value indicates how the type is enforced when <see langword="xsi:type" /> is used in the instance document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6b0b-139">Post-Schema-Validation Infoset 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-139">The post-schema-validated infoset value.</span>
          </span>
          <span data-ttu-id="a6b0b-140">預設值為 <see langword="BlockDefault" /> 項目上的 <see langword="schema" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-140">The default is <see langword="BlockDefault" /> value on the <see langword="schema" /> element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6b0b-141">這個值會從該類型本身，或如果未定義類型層級，它取自`schema`項目。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-141">This value is taken either from the type itself or, if not defined at the type level, it is taken from the `schema` element.</span></span> <span data-ttu-id="a6b0b-142">例如，如果有限制的值，可以使用特別定義的類型，不是型別衍生自特別定義的型別。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-142">For example, if the value is restricted, only the specifically defined type can be used, not types derived from the specifically defined type.</span></span>  
  
 <span data-ttu-id="a6b0b-143">這個屬性可以包含下列值：</span><span class="sxs-lookup"><span data-stu-id="a6b0b-143">This attribute can contain the following values:</span></span>  
  
|<span data-ttu-id="a6b0b-144">列舉</span><span class="sxs-lookup"><span data-stu-id="a6b0b-144">Enum</span></span>|<span data-ttu-id="a6b0b-145">描述</span><span class="sxs-lookup"><span data-stu-id="a6b0b-145">Description</span></span>|  
|----------|-----------------|  
|`None`|<span data-ttu-id="a6b0b-146">使用所定義的衍生限制`BlockDefault`屬性結構描述，如果存在的話。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-146">Use the derivation restriction defined by the `BlockDefault` property of the schema, if it exists.</span></span>|  
|`Extension`|<span data-ttu-id="a6b0b-147">這個項目不能利用擴充衍生類型所取代。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-147">This element cannot be replaced by a type derived by Extension.</span></span>|  
|`Restriction`|<span data-ttu-id="a6b0b-148">這個項目無法由限制衍生的類型所取代。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-148">This element cannot be replaced by a type derived by Restriction.</span></span>|  
|`All`|<span data-ttu-id="a6b0b-149">`#all`。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-149">`#all`.</span></span> <span data-ttu-id="a6b0b-150">無法取代這個項目，不論衍生方法的任何型別。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-150">This element cannot be replaced by any type regardless of derivation method.</span></span>|  
  
 <span data-ttu-id="a6b0b-151">`Substitution`， `List`，和`Union`衍生方法不支援這個屬性。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-151">The `Substitution`, `List`, and `Union` derivation methods are not supported by this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentModel">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaContentModel ContentModel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaContentModel ContentModel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaComplexType.ContentModel" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentModel As XmlSchemaContentModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaContentModel ^ ContentModel { System::Xml::Schema::XmlSchemaContentModel ^ get(); void set(System::Xml::Schema::XmlSchemaContentModel ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("simpleContent", typeof(System.Xml.Schema.XmlSchemaSimpleContent))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("complexContent", typeof(System.Xml.Schema.XmlSchemaComplexContent))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaContentModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6b0b-152">取得或設定這個複雜型別的編譯後 <see cref="T:System.Xml.Schema.XmlSchemaContentModel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-152">Gets or sets the post-compilation <see cref="T:System.Xml.Schema.XmlSchemaContentModel" /> of this complex type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6b0b-153">屬於其中一個 <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" /> 或 <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" /> 類別的內容模型型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-153">The content model type that is one of the <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" /> or <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" /> classes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6b0b-154">這是與互斥<xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-154">This is mutually exclusive with the <xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaContentType ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaContentType ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As XmlSchemaContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaContentType ContentType { System::Xml::Schema::XmlSchemaContentType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaContentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6b0b-155">取得包含編譯後值之複雜類型的內容模型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-155">Gets the content model of the complex type which holds the post-compilation value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6b0b-156">複雜類型之內容模型的編譯後值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-156">The post-compilation value of the content model for the complex type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6b0b-157">這是中的後結構描述驗證資訊集的內容。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-157">This is the content in the post-schema-validation infoset.</span></span>  
  
 <span data-ttu-id="a6b0b-158">如果`IsMixed`屬性設定為`true`上`ContentModel`具有類型的屬性`XmlSchemaComplexContent`，傳回的值為`Mixed`。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-158">If the `IsMixed` property is set to `true` on the `ContentModel` property that has the type `XmlSchemaComplexContent`, the value returned is `Mixed`.</span></span>  
  
 <span data-ttu-id="a6b0b-159">如果`IsMixed`屬性是`false`，值是`Empty`或`ElementOnly`。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-159">If the `IsMixed` property is `false`, the value is either `Empty` or `ElementOnly`.</span></span>  
  
 <span data-ttu-id="a6b0b-160">如果型別上的`ContentModel`屬性都有類型`XmlSchemaSimpleContent`，則這個值一律是`TextOnly`。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-160">If the type on the `ContentModel` property has the type `XmlSchemaSimpleContent`, then this value is always `TextOnly`.</span></span>  
  
 <span data-ttu-id="a6b0b-161">`ContentType`屬性必須有下表中所顯示的值。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-161">The `ContentType` property must have one of the values shown in the following table.</span></span>  
  
|<span data-ttu-id="a6b0b-162">列舉</span><span class="sxs-lookup"><span data-stu-id="a6b0b-162">Enum</span></span>|<span data-ttu-id="a6b0b-163">描述</span><span class="sxs-lookup"><span data-stu-id="a6b0b-163">Description</span></span>|  
|----------|-----------------|  
|`TextOnly`|<span data-ttu-id="a6b0b-164">純文字內容。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-164">Text-only content.</span></span>|  
|`Empty`|<span data-ttu-id="a6b0b-165">空白內容。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-165">Empty content.</span></span>|  
|`ElementOnly`|<span data-ttu-id="a6b0b-166">純項目內容。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-166">Element-only content.</span></span>|  
|`Mixed`|<span data-ttu-id="a6b0b-167">混合內容模型。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-167">Mixed content model.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTypeParticle">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaParticle ContentTypeParticle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaParticle ContentTypeParticle" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTypeParticle As XmlSchemaParticle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaParticle ^ ContentTypeParticle { System::Xml::Schema::XmlSchemaParticle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaParticle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6b0b-168">取得包含 <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" /> 物件編譯後值的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-168">Gets the particle that holds the post-compilation value of the <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" /> particle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6b0b-169">內容類型的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-169">The particle for the content type.</span>
          </span>
          <span data-ttu-id="a6b0b-170">
            <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" /> 物件的編譯後值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-170">The post-compilation value of the <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" /> particle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6b0b-171">這`ContentTypeParticle`之後最常衍生的型別和基底複雜類型的內容模型已解決，根據 W3C XML 結構描述定義語言 (XSD) 規格中定義的規則決定。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-171">This `ContentTypeParticle` is determined after the content models of the most derived types and the base complex type have been resolved according to the rules defined in the W3C XML Schema definition language (XSD) specification.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAbstract">
      <MemberSignature Language="C#" Value="public bool IsAbstract { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAbstract" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaComplexType.IsAbstract" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAbstract As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAbstract { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("abstract")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6b0b-172">取得或設定資訊，決定是否可在執行個體文件中使用 <see langword="complexType" /> 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-172">Gets or sets the information that determines if the <see langword="complexType" /> element can be used in the instance document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6b0b-173">如果為 <see langword="true" />，項目不能直接使用這個 <see langword="complexType" /> 項目，必須使用從這個 <see langword="complexType" /> 項目衍生的複雜型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-173">If <see langword="true" />, an element cannot use this <see langword="complexType" /> element directly and must use a complex type that is derived from this <see langword="complexType" /> element.</span>
          </span>
          <span data-ttu-id="a6b0b-174">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-174">The default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6b0b-175">選擇性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-175">Optional.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMixed">
      <MemberSignature Language="C#" Value="public override bool IsMixed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMixed" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsMixed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMixed { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("mixed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6b0b-176">取得或設定資訊，決定複雜類型是否具有混合內容模型 (內容中的標記)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-176">Gets or sets information that determines if the complex type has a mixed content model (markup within the content).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6b0b-177">如果這個複雜型別的子項目之間可以出現字元資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-177">
              <see langword="true" />, if character data can appear between child elements of this complex type; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6b0b-178">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-178">The default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6b0b-179">選擇性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-179">Optional.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6b0b-180">指出是否出現字元資料可以之間之子項目的這`complexType`。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-180">Indicates if character data can appear between the child elements of this `complexType`.</span></span> <span data-ttu-id="a6b0b-181">如果`simpleContent`元素為子元素，`mixed`不允許有屬性 (`false`)。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-181">If the `simpleContent` element is a child element, the `mixed` attribute is not allowed (`false`).</span></span> <span data-ttu-id="a6b0b-182">如果`complexContent`元素為子元素，`mixed`屬性可以覆寫`mixed`屬性`complexContent`項目。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-182">If the `complexContent` element is a child element, the `mixed` attribute can be overridden by the `mixed` attribute on the `complexContent` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Particle">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaParticle Particle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaParticle Particle" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaComplexType.Particle" />
      <MemberSignature Language="VB.NET" Value="Public Property Particle As XmlSchemaParticle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaParticle ^ Particle { System::Xml::Schema::XmlSchemaParticle ^ get(); void set(System::Xml::Schema::XmlSchemaParticle ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("group", typeof(System.Xml.Schema.XmlSchemaGroupRef))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("choice", typeof(System.Xml.Schema.XmlSchemaChoice))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("all", typeof(System.Xml.Schema.XmlSchemaAll))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlElement("sequence", typeof(System.Xml.Schema.XmlSchemaSequence))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaParticle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6b0b-183">取得或設定複合項型別為其中一個 <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />、<see cref="T:System.Xml.Schema.XmlSchemaChoice" />、<see cref="T:System.Xml.Schema.XmlSchemaAll" /> 或 <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> 類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-183">Gets or sets the compositor type as one of the <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" />, or <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> classes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6b0b-184">複合項類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6b0b-184">The compositor type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6b0b-185">物件必須是下列合成的其中一個：</span><span class="sxs-lookup"><span data-stu-id="a6b0b-185">Particles must be one of the following compositors:</span></span>  
  
|<span data-ttu-id="a6b0b-186">元素</span><span class="sxs-lookup"><span data-stu-id="a6b0b-186">Element</span></span>|<span data-ttu-id="a6b0b-187">描述</span><span class="sxs-lookup"><span data-stu-id="a6b0b-187">Description</span></span>|  
|-------------|-----------------|  
|`group`|<span data-ttu-id="a6b0b-188">複雜型別包含參考群組中所定義的項目。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-188">The complex type contains the elements defined in the referenced group.</span></span>|  
|`sequence`|<span data-ttu-id="a6b0b-189">複雜型別包含指定順序中所定義的項目。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-189">The complex type contains the elements defined in the specified sequence.</span></span>|  
|`choice`|<span data-ttu-id="a6b0b-190">複雜型別不允許在指定的項目`choice`項目。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-190">The complex type allows one of the elements specified in the `choice` element.</span></span>|  
|`all`|<span data-ttu-id="a6b0b-191">複雜型別允許的所有項目中指定`all`元素出現一次或完全無法執行。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-191">The complex type allows all of the elements specified in the `all` element to appear once or not at all.</span></span>|  
  
 <span data-ttu-id="a6b0b-192">這是與互斥<xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a6b0b-192">This is mutually exclusive with the <xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>