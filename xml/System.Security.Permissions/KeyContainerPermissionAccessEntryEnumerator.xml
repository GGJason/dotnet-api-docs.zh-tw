<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="KeyContainerPermissionAccessEntryEnumerator.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac566f862bbfa6c0776208bb1fde780133d2c230622.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66f862bbfa6c0776208bb1fde780133d2c230622</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>Represents the enumerator for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /&gt;</ph> objects in a <ph id="ph2">&lt;see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" /&gt;</ph>.</source>
          <target state="translated">表示 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /&gt;</ph> 中 <ph id="ph2">&lt;see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" /&gt;</ph> 物件的列舉值。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>Enumerators allow only reading the data in the collection.</source>
          <target state="translated">列舉值只允許讀取集合中的資料。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>Enumerators cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉值無法用於修改基礎集合。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph>方法也會列舉值帶回至這個位置。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>At this position, calling the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property throws an exception.</source>
          <target state="translated">在這個位置上，呼叫<ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph>屬性會擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">因此，您必須呼叫<ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph>方法，以將列舉值前進到第一個項目，再讀取的值集合的<ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> 會傳回相同的物件直到呼叫 <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> 或 <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> 會將 <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> 設定為下一個項目。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">在超過集合的末端後，列舉值會放置在集合最後一個元素之後，並且呼叫 <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> 會傳回 <ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">如果最後一個呼叫<ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>，則呼叫<ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph>擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>To reset <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> to the first element of the collection, call <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> followed by a call to <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">若要重設<ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph>集合的第一個元素，呼叫<ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph>後面呼叫<ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph>會擲回<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>If the collection is modified between calling <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> returns the element to which it is currently set, even if the enumerator is already invalidated.</source>
          <target state="translated">如果呼叫之間修改集合<ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph>，<ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph>傳回項目，它目前設定的即使列舉值已經無效。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>Gets the current entry in the collection.</source>
          <target state="translated">取得集合中的目前項目。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /&gt;</ph> object in the collection.</source>
          <target state="translated">集合中目前的 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>When the enumerator is created, it does not point to an object, so the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property is not valid and will throw an exception if it is accessed.</source>
          <target state="translated">建立列舉值時，它並未指向一個物件，所以<ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph>屬性有效，且會在存取將會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>You must first call the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> method to position the cursor at the first object in the collection.</source>
          <target state="translated">您必須先呼叫<ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph>方法，以將游標放在集合中的第一個物件。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>Getting the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property multiple times with no intervening calls to <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> will return the same <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph> object each time.</source>
          <target state="translated">取得<ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph>屬性使用沒有中介呼叫多次<ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph>傳回相同<ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph>每次物件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /&gt;</ph> property is accessed before first calling the <ph id="ph2">&lt;see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /&gt;</ph> method.</source>
          <target state="translated">第一次呼叫 <ph id="ph1">&lt;see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /&gt;</ph> 方法之前，存取了 <ph id="ph2">&lt;see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>The cursor is located before the first object in the collection.</source>
          <target state="translated">資料指標 (Cursor) 位於集合中第一個物件之前。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /&gt;</ph> property is accessed after a call to the <ph id="ph2">&lt;see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="false" /&gt;</ph>, which indicates that the cursor is located after the last object in the collection.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /&gt;</ph> 方法呼叫傳回 <ph id="ph3">&lt;see langword="false" /&gt;</ph> 之後，存取 <ph id="ph2">&lt;see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /&gt;</ph> 屬性，這表示資料指標位於集合中的最後一個物件之後。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source>Moves to the next element in the collection.</source>
          <target state="translated">移至集合中的下一個項目。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated">如果列舉值成功前移至下一個項目，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果列舉值超過集合的結尾，則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> method returns <ph id="ph2">`false`</ph> immediately if there are no objects in the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph>方法會傳回<ph id="ph2">`false`</ph>立即如果集合中沒有任何物件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`true`</ph> until it has reached the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> 傳回<ph id="ph2">`true`</ph>直到它到達集合結尾。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source>It then returns <ph id="ph1">`false`</ph> for each successive call.</source>
          <target state="translated">然後它會傳回<ph id="ph1">`false`</ph>針對每個後續的呼叫。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source>However, once <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> has returned <ph id="ph2">`false`</ph>, accessing the <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property throws an exception.</source>
          <target state="translated">不過，一旦<ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>、 存取<ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph>屬性會擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
          <source>Upon creation, an enumerator is positioned before the first <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph> object in the collection, and the first call to <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> positions the enumerator to the first object in the collection.</source>
          <target state="translated">在建立列舉程式位在第一個<ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph>物件在集合中，且第一個呼叫<ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph>第一個物件列舉值置於集合中。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
          <source>Resets the enumerator to the beginning of the collection.</source>
          <target state="translated">將列舉值重設為集合的開頭。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
          <source>An enumerator moves in a forward-only direction.</source>
          <target state="translated">列舉值會順向的方向移動。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
          <source>Use this method to return to the beginning of the collection.</source>
          <target state="translated">使用此方法傳回集合的開頭。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> method positions the cursor at the first object in the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph>方法會將游標放在集合中的第一個物件。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
          <source>After calling <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph>, you do not need to call <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> to move the cursor forward to the first object.</source>
          <target state="translated">在呼叫<ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph>，您不需要呼叫<ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph>將游標向前移至第一個物件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current">
          <source>Gets the current object in the collection.</source>
          <target state="translated">取得集合中目前的物件。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current">
          <source>The current object in the collection.</source>
          <target state="translated">集合中的目前物件。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current">
          <source>Do not call this method; use the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property instead.</source>
          <target state="translated">請勿呼叫這個方法。使用<ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph>屬性改為。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>