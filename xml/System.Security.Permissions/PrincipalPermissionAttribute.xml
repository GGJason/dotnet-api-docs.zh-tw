<Type Name="PrincipalPermissionAttribute" FullName="System.Security.Permissions.PrincipalPermissionAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e215642594cebce12038e77e981b5c7ada5c5e8e" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52365348" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PrincipalPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PrincipalPermissionAttribute extends System.Security.Permissions.CodeAccessSecurityAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.PrincipalPermissionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PrincipalPermissionAttribute&#xA;Inherits CodeAccessSecurityAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrincipalPermissionAttribute sealed : System::Security::Permissions::CodeAccessSecurityAttribute" />
  <TypeSignature Language="F#" Value="type PrincipalPermissionAttribute = class&#xA;    inherit CodeAccessSecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.CodeAccessSecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="21e51-101">允許將 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。</span>
      <span class="sxs-lookup">
        <span data-stu-id="21e51-101">Allows security actions for <see cref="T:System.Security.Permissions.PrincipalPermission" /> to be applied to code using declarative security.</span>
      </span>
      <span data-ttu-id="21e51-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="21e51-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21e51-103"><xref:System.Security.Permissions.PrincipalPermissionAttribute> 可用來以宣告方式要求執行程式碼的使用者屬於指定的角色，或已經過驗證。</span><span class="sxs-lookup"><span data-stu-id="21e51-103"><xref:System.Security.Permissions.PrincipalPermissionAttribute> can be used to declaratively demand that users running your code belong to a specified role or have been authenticated.</span></span> <span data-ttu-id="21e51-104">使用<xref:System.Security.Permissions.PermissionState.Unrestricted>建立<xref:System.Security.Permissions.PrincipalPermission>與<xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A>設為`true`並<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A>並<xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A>設為`null`。</span><span class="sxs-lookup"><span data-stu-id="21e51-104">Use of <xref:System.Security.Permissions.PermissionState.Unrestricted> creates a <xref:System.Security.Permissions.PrincipalPermission> with <xref:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated%2A> set to `true` and <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> and <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> set to `null`.</span></span>  
  
 <span data-ttu-id="21e51-105">允許宣告的範圍取決於<xref:System.Security.Permissions.SecurityAction>用。</span><span class="sxs-lookup"><span data-stu-id="21e51-105">The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.</span></span> <span data-ttu-id="21e51-106"><xref:System.Security.Permissions.PrincipalPermissionAttribute> 無法在組件層級套用。</span><span class="sxs-lookup"><span data-stu-id="21e51-106"><xref:System.Security.Permissions.PrincipalPermissionAttribute> cannot be applied at the assembly level.</span></span>  
  
 <span data-ttu-id="21e51-107">安全性屬性所宣告的安全性資訊會儲存屬性目標的中繼資料，並在執行階段存取系統。</span><span class="sxs-lookup"><span data-stu-id="21e51-107">The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.</span></span> <span data-ttu-id="21e51-108">安全性屬性僅用於宣告式安全性。</span><span class="sxs-lookup"><span data-stu-id="21e51-108">Security attributes are used only for declarative security.</span></span> <span data-ttu-id="21e51-109">命令式安全性，使用對應的權限類別。</span><span class="sxs-lookup"><span data-stu-id="21e51-109">For imperative security, use the corresponding permission class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="21e51-110">使用這個類別，以要求主體的權限之前，您必須將目前的應用程式定義域的主要原則列舉值<xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="21e51-110">Before you use this class to demand principal permission, you must set the current application domain's principal policy to the enumeration value <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>.</span></span> <span data-ttu-id="21e51-111">根據預設，主體的原則設定為<xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="21e51-111">By default, the principal policy is set to <xref:System.Security.Principal.PrincipalPolicy.UnauthenticatedPrincipal>.</span></span> <span data-ttu-id="21e51-112">如果您沒有設定主體的原則<xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>，主體的權限的要求將會失敗。</span><span class="sxs-lookup"><span data-stu-id="21e51-112">If you do not set the principal policy to <xref:System.Security.Principal.PrincipalPolicy.WindowsPrincipal>, a demand for principal permission will fail.</span></span> <span data-ttu-id="21e51-113">應該執行下列程式碼，然後再要求主體的權限： `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`</span><span class="sxs-lookup"><span data-stu-id="21e51-113">The following code should be executed before the principal permission is demanded: `AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21e51-114">下列範例示範如何<xref:System.Security.Permissions.PrincipalPermissionAttribute>類別以宣告方式用來要求目前使用者是系統管理員。</span><span class="sxs-lookup"><span data-stu-id="21e51-114">The following example demonstrates how the <xref:System.Security.Permissions.PrincipalPermissionAttribute> class is used declaratively to demand that the current user be an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21e51-115">在 Windows Vista 中，使用者帳戶控制 (UAC) 會判斷使用者的權限。</span><span class="sxs-lookup"><span data-stu-id="21e51-115">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="21e51-116">如果您是內建 Administrators 群組的成員，系統會將兩個執行階段存取語彙基元 (Token) 指派給您：標準使用者存取語彙基元及管理員存取語彙基元。</span><span class="sxs-lookup"><span data-stu-id="21e51-116">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="21e51-117">根據預設，您會屬於標準使用者角色。</span><span class="sxs-lookup"><span data-stu-id="21e51-117">By default, you are in the standard user role.</span></span> <span data-ttu-id="21e51-118">若要執行需要您是系統管理員的程式碼，您必須先將權限從標準使用者提高為系統管理員。</span><span class="sxs-lookup"><span data-stu-id="21e51-118">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="21e51-119">您可以在啟動應用程式時，以滑鼠右鍵按一下應用程式圖示，並指出您想要以系統管理員身分執行，藉此提高為系統管理員權限。</span><span class="sxs-lookup"><span data-stu-id="21e51-119">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.PrincipalPermission" />
    <related type="Article" href="~/docs/standard/attributes/index.md">
      <span data-ttu-id="21e51-120">使用屬性擴充中繼資料</span>
      <span class="sxs-lookup">
        <span data-stu-id="21e51-120">Extending Metadata Using Attributes</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalPermissionAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As SecurityAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalPermissionAttribute(System::Security::Permissions::SecurityAction action);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.PrincipalPermissionAttribute : System.Security.Permissions.SecurityAction -&gt; System.Security.Permissions.PrincipalPermissionAttribute" Usage="new System.Security.Permissions.PrincipalPermissionAttribute action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="21e51-121">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21e51-121">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="21e51-122">使用指定的 <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21e51-122">Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21e51-123">`Demand``InheritanceDemand`，並`LinkDemand`唯一的值，<xref:System.Security.Permissions.SecurityAction>具有此屬性的意義。</span><span class="sxs-lookup"><span data-stu-id="21e51-123">`Demand`, `InheritanceDemand`, and `LinkDemand` are the only values of <xref:System.Security.Permissions.SecurityAction> that have meaning for this attribute.</span></span> <span data-ttu-id="21e51-124">其他動作不適用於不是程式碼存取權限的權限。</span><span class="sxs-lookup"><span data-stu-id="21e51-124">Other actions do not apply to permissions that are not code access permissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21e51-125">下列範例示範如何使用<xref:System.Security.Permissions.PrincipalPermissionAttribute.%23ctor%2A>建構函式來要求目前使用者是系統管理員。</span><span class="sxs-lookup"><span data-stu-id="21e51-125">The following example demonstrates how to use the <xref:System.Security.Permissions.PrincipalPermissionAttribute.%23ctor%2A> constructor to demand that the current user be an administrator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21e51-126">在 Windows Vista 中，使用者帳戶控制 (UAC) 會判斷使用者的權限。</span><span class="sxs-lookup"><span data-stu-id="21e51-126">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="21e51-127">如果您是內建 Administrators 群組的成員，系統會將兩個執行階段存取語彙基元 (Token) 指派給您：標準使用者存取語彙基元及管理員存取語彙基元。</span><span class="sxs-lookup"><span data-stu-id="21e51-127">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="21e51-128">根據預設，您會屬於標準使用者角色。</span><span class="sxs-lookup"><span data-stu-id="21e51-128">By default, you are in the standard user role.</span></span> <span data-ttu-id="21e51-129">若要執行需要您是系統管理員的程式碼，您必須先將權限從標準使用者提高為系統管理員。</span><span class="sxs-lookup"><span data-stu-id="21e51-129">To execute the code that requires you to be an administrator, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="21e51-130">您可以在啟動應用程式時，以滑鼠右鍵按一下應用程式圖示，並指出您想要以系統管理員身分執行，藉此提高為系統管理員權限。</span><span class="sxs-lookup"><span data-stu-id="21e51-130">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 [!code-cpp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic PrincipalPermissionAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PrincipalPermissionAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticated">
      <MemberSignature Language="C#" Value="public bool Authenticated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Authenticated : bool with get, set" Usage="System.Security.Permissions.PrincipalPermissionAttribute.Authenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21e51-131">取得或設定值，這個值指出目前的主體是否已由角色型的基礎安全性提供者驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21e51-131">Gets or sets a value indicating whether the current principal has been authenticated by the underlying role-based security provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21e51-132">如果目前的主體已經過驗證，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21e51-132">
              <see langword="true" /> if the current principal has been authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePermission">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission CreatePermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission CreatePermission() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.PrincipalPermissionAttribute.CreatePermission" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePermission () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ CreatePermission();" />
      <MemberSignature Language="F#" Value="override this.CreatePermission : unit -&gt; System.Security.IPermission" Usage="principalPermissionAttribute.CreatePermission " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="21e51-133">建立及傳回新的 <see cref="T:System.Security.Permissions.PrincipalPermission" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21e51-133">Creates and returns a new <see cref="T:System.Security.Permissions.PrincipalPermission" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="21e51-134">
            <see cref="T:System.Security.Permissions.PrincipalPermission" />，會對應至這個屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21e51-134">A <see cref="T:System.Security.Permissions.PrincipalPermission" /> that corresponds to this attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21e51-135">這個方法只應該由安全性系統中，永遠不會由應用程式程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="21e51-135">This method should only be called by the security system, never by application code.</span></span>  
  
 <span data-ttu-id="21e51-136">在編譯時期，屬性會將安全性宣告轉換為中繼資料的序列化形式。</span><span class="sxs-lookup"><span data-stu-id="21e51-136">At compile time, attributes convert security declarations to a serialized form in metadata.</span></span> <span data-ttu-id="21e51-137">在中繼資料中的宣告式安全性資料時建立的權限，此方法會傳回對應至這個屬性。</span><span class="sxs-lookup"><span data-stu-id="21e51-137">Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Security.Permissions.PrincipalPermissionAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21e51-138">取得或設定與目前主體關聯的識別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21e51-138">Gets or sets the name of the identity associated with the current principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21e51-139">要與基礎角色型安全性提供者所提供的名稱進行比對的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21e51-139">A name to match against that provided by the underlying role-based security provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21e51-140">如果驗證提供者是 Windows NT<xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A>等同於使用者的 Windows NT 登入名稱 （以"domainname\username 形式"的形式）。</span><span class="sxs-lookup"><span data-stu-id="21e51-140">If the authentication provider is Windows NT, <xref:System.Security.Permissions.PrincipalPermissionAttribute.Name%2A> is the same as the user's Windows NT login name (in the form "DomainName\UserName").</span></span> <span data-ttu-id="21e51-141">請檢查您的主機，來判斷它所使用的驗證提供者，以及它如何判斷目前的主體的身分識別的文件。</span><span class="sxs-lookup"><span data-stu-id="21e51-141">Check the documentation of your host to determine which authentication provider it uses and how it determines the identity of the current principal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public string Role { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Role" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.PrincipalPermissionAttribute.Role" />
      <MemberSignature Language="VB.NET" Value="Public Property Role As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Role { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Role : string with get, set" Usage="System.Security.Permissions.PrincipalPermissionAttribute.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21e51-142">取得或設定在指定的安全性角色的成員資格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21e51-142">Gets or sets membership in a specified security role.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21e51-143">角色型基礎安全性提供者的角色名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="21e51-143">The name of a role from the underlying role-based security provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21e51-144">可用的角色會根據主機所使用的驗證提供者而有所不同。</span><span class="sxs-lookup"><span data-stu-id="21e51-144">The available roles will differ based on the authentication provider in use by the host.</span></span> <span data-ttu-id="21e51-145">如果 Windows NT 驗證提供者，角色將是 Windows NT 使用者群組 （以"DomainName\GroupName 」 的形式）。</span><span class="sxs-lookup"><span data-stu-id="21e51-145">If the authentication provider is Windows NT, roles are Windows NT user groups (in the form "DomainName\GroupName").</span></span> <span data-ttu-id="21e51-146">請檢查您的主機，以判斷它所使用的驗證提供者，而且可以隸屬的角色使用者的文件。</span><span class="sxs-lookup"><span data-stu-id="21e51-146">Check the documentation of your host to determine which authentication provider it uses and what roles users can belong to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>