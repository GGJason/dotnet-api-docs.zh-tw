<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IContributeServerContextSink.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50b8c5bbf007713f6b69762b5024f02282b2ef2dc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b8c5bbf007713f6b69762b5024f02282b2ef2dc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Remoting.Contexts.IContributeServerContextSink">
          <source>Contributes an interception sink at the context boundary on the server end of a remoting call.</source>
          <target state="translated">在遠端呼叫之伺服器端的內容界限處提供攔截接收。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Contexts.IContributeServerContextSink">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink&gt;</ph> interface is implemented by context properties in a <ph id="ph2">&lt;xref:System.Runtime.Remoting.Contexts.Context&gt;</ph> class that want to contribute an interception sink at the context boundary on the server end of a remoting call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink&gt;</ph>介面由內容屬性中實作<ph id="ph2">&lt;xref:System.Runtime.Remoting.Contexts.Context&gt;</ph>想要參與攔截接收內容界限在伺服器端的遠端呼叫的類別。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Contexts.IContributeServerContextSink">
          <source>The server context chain is composed from those properties in the server context that implement <ph id="ph1">&lt;xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink&gt;</ph> and which contribute a sink by using the <ph id="ph2">&lt;xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink%2A&gt;</ph> method call.</source>
          <target state="translated">伺服器內容鏈結由實作這些屬性的伺服器內容<ph id="ph1">&lt;xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink&gt;</ph>及其中使用提供接收和<ph id="ph2">&lt;xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink%2A&gt;</ph>方法呼叫。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Contexts.IContributeServerContextSink">
          <source>Serialization is an example of such a context property.</source>
          <target state="translated">序列化是這類內容屬性的範例。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Remoting.Contexts.IContributeServerContextSink">
          <source>In this case, the message sink would involve taking a synchronization primitive lock before processing a call any further.</source>
          <target state="translated">在此情況下，訊息接收器會包含在處理之前呼叫任何進一步取得同步處理基本鎖定。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)">
          <source>The chain of sinks composed so far.</source>
          <target state="translated">到目前為止所撰寫的接收鏈結。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)">
          <source>Takes the first sink in the chain of sinks composed so far, and then chains its message sink in front of the chain already formed.</source>
          <target state="translated">取得目前已撰寫之接收鏈結中的第一個接收，然後將它的訊息接收鏈結到已經形成的鏈結前面。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)">
          <source>The composite sink chain.</source>
          <target state="translated">複合接收鏈結。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>