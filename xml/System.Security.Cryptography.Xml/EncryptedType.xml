<Type Name="EncryptedType" FullName="System.Security.Cryptography.Xml.EncryptedType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="483bc6a8a6303b5a7c9073f3dedec0b8f09b0383" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36626286" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncryptedType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncryptedType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncryptedType" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedType abstract" />
  <TypeSignature Language="F#" Value="type EncryptedType = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示類別 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 和 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 藉以衍生的抽象基底類別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.EncryptedType>類別表示的抽象基底類別的類別<xref:System.Security.Cryptography.Xml.EncryptedData>和<xref:System.Security.Cryptography.Xml.EncryptedKey>衍生。 這兩個類別會包含實際的加密的資料或 XML 加密的金鑰資訊。 若要符合 XML 加密標準，您應該使用這兩個衍生的類別。  
  
 如需 XML 加密標準的詳細資訊，請參閱[XML 加密語法和處理 1.1 版](https://www.w3.org/TR/xmlenc-core/)。  
  
   
  
## Examples  
 下列程式碼範例示範如何加密和解密 XML 項目使用<xref:System.Security.Cryptography.Xml.EncryptedData>類別衍生自<xref:System.Security.Cryptography.Xml.EncryptedType>類別。  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncryptedType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncryptedType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式建立的新執行個體<xref:System.Security.Cryptography.Xml.EncryptedType>類別。 此類別代表抽象基底類別的類別<xref:System.Security.Cryptography.Xml.EncryptedData>和<xref:System.Security.Cryptography.Xml.EncryptedKey>衍生。 若要符合 XML 加密標準，您應該使用兩個衍生的類別。 如需 XML 加密標準的詳細資訊，請參閱[XML 加密語法和處理 1.1 版](https://www.w3.org/TR/xmlenc-core/)。  
  
   
  
## Examples  
 下列程式碼範例示範如何加密和解密 XML 項目使用<xref:System.Security.Cryptography.Xml.EncryptedData>類別衍生自<xref:System.Security.Cryptography.Xml.EncryptedType>類別。  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public void AddProperty (System.Security.Cryptography.Xml.EncryptionProperty ep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddProperty(class System.Security.Cryptography.Xml.EncryptionProperty ep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddProperty (ep As EncryptionProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddProperty(System::Security::Cryptography::Xml::EncryptionProperty ^ ep);" />
      <MemberSignature Language="F#" Value="member this.AddProperty : System.Security.Cryptography.Xml.EncryptionProperty -&gt; unit" Usage="encryptedType.AddProperty ep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ep" Type="System.Security.Cryptography.Xml.EncryptionProperty" />
      </Parameters>
      <Docs>
        <param name="ep">
          <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 物件。</param>
        <summary>在 XML 加密的目前 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 物件中，將 <see langword="&lt;EncryptionProperty&gt;" /> 子項目新增至 <see langword="&lt;EncryptedProperties&gt;" /> 項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可用來新增`<EncryptionProperty>`子項目`<EncryptedProperties>`項目。 `<EncryptedProperties>`項目提供其他資訊`<EncryptedType>`項目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CipherData">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.CipherData CipherData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.CipherData CipherData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CipherData As CipherData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::CipherData ^ CipherData { System::Security::Cryptography::Xml::CipherData ^ get(); void set(System::Security::Cryptography::Xml::CipherData ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CipherData : System.Security.Cryptography.Xml.CipherData with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.CipherData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.CipherData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> 類別執行個體的 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 值。</summary>
        <value>
          <see cref="T:System.Security.Cryptography.Xml.CipherData" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<CipherData>`項目是中提供的加密的資料的 XML 加密的必要的元素。 它必須包含做為 base64 編碼的文字已加密的八位元序列<xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>屬性，或提供包含加密的八位元序列使用外部位置的參考<xref:System.Security.Cryptography.Xml.CipherData.CipherReference%2A>屬性。  
  
 如需此元素的詳細資訊，請參閱<xref:System.Security.Cryptography.Xml.CipherData>。  
  
   
  
## Examples  
 下列程式碼範例示範如何加密和解密 XML 項目使用<xref:System.Security.Cryptography.Xml.EncryptedData>類別衍生自<xref:System.Security.Cryptography.Xml.EncryptedType>類別。  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" /> 屬性被設定為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public virtual string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Encoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Encoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 XML 加密中 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 執行個體的 <see langword="Encoding" /> 屬性。</summary>
        <value>描述加密資料編碼方式的字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會描述加密資料的編碼方式。 例如，如果已加密的資料是 base64 編碼的 PNG 的編碼方式無法指定為http://www.w3.org/2000/09/xmldsig#base64'。  
  
   
  
## Examples  
 下列程式碼範例示範如何加密和解密 XML 項目使用<xref:System.Security.Cryptography.Xml.EncryptedData>類別衍生自<xref:System.Security.Cryptography.Xml.EncryptedType>類別。 此範例接著會顯示的各種屬性<xref:System.Security.Cryptography.Xml.EncryptedData>類別到主控台。  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionMethod">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EncryptionMethod As EncryptionMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::EncryptionMethod ^ EncryptionMethod { System::Security::Cryptography::Xml::EncryptionMethod ^ get(); void set(System::Security::Cryptography::Xml::EncryptionMethod ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionMethod : System.Security.Cryptography.Xml.EncryptionMethod with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptionMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 XML 加密中的 <see langword="&lt;EncryptionMethod&gt;" /> 項目。</summary>
        <value>表示 <see langword="&lt;EncryptionMethod&gt;" /> 項目的 <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<EncryptionMethod>`是描述套用至加密資料的加密演算法的選擇性元素。 如果項目不存在，必須已知收件者的加密演算法或解密會失敗。  
  
   
  
## Examples  
 下列程式碼範例示範如何加密和解密 XML 項目使用<xref:System.Security.Cryptography.Xml.EncryptedData>類別衍生自<xref:System.Security.Cryptography.Xml.EncryptedType>類別。  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionProperties">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EncryptionProperties As EncryptionPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::EncryptionPropertyCollection ^ EncryptionProperties { System::Security::Cryptography::Xml::EncryptionPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionProperties : System.Security.Cryptography.Xml.EncryptionPropertyCollection" Usage="System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptionPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 XML 加密中的 <see langword="&lt;EncryptionProperties&gt;" /> 項目。</summary>
        <value>
          <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<EncryptionProperties>`項目可以包含其他資訊建立<xref:System.Security.Cryptography.Xml.EncryptedType>執行個體，例如日期和時間戳記或加密時所使用的密碼編譯硬體序號。  
  
   
  
## Examples  
 下列程式碼範例示範如何加密和解密 XML 項目使用<xref:System.Security.Cryptography.Xml.EncryptedData>類別衍生自<xref:System.Security.Cryptography.Xml.EncryptedType>類別。 此範例接著會顯示的各種屬性<xref:System.Security.Cryptography.Xml.EncryptedData>類別到主控台。  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="abstract member GetXml : unit -&gt; System.Xml.XmlElement" Usage="encryptedType.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 物件的 XML 表示。</summary>
        <returns>
          <see cref="T:System.Xml.XmlElement" /> 物件，表示 XML 加密中的 <see langword="&lt;EncryptedType&gt;" /> 項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個方法來輸出`<EncryptedType>`中 XML 項目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 XML 加密中 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 執行個體的 <see langword="Id" /> 屬性。</summary>
        <value>
          <see langword="Id" /> 項目的 <see langword="&lt;EncryptedType&gt;" /> 屬性字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Id`屬性是選擇性屬性`<EncryptedType>`項目，提供標準的方法，來將字串識別項指派給 XML 文件中的項目。  
  
   
  
## Examples  
 下列程式碼範例示範如何加密和解密 XML 項目使用<xref:System.Security.Cryptography.Xml.EncryptedData>類別衍生自<xref:System.Security.Cryptography.Xml.EncryptedType>類別。 此範例接著會顯示的各種屬性<xref:System.Security.Cryptography.Xml.EncryptedData>類別到主控台。  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.KeyInfo KeyInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfo As KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::KeyInfo ^ KeyInfo { System::Security::Cryptography::Xml::KeyInfo ^ get(); void set(System::Security::Cryptography::Xml::KeyInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyInfo : System.Security.Cryptography.Xml.KeyInfo with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.KeyInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.KeyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 XML 加密中的 <see langword="&lt;KeyInfo&gt;" /> 項目。</summary>
        <value>
          <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<KeyInfo>`項目是選擇性項目，其中包含用來加密資料的金鑰資訊。  
  
   
  
## Examples  
 下列程式碼範例示範如何加密和解密 XML 項目使用<xref:System.Security.Cryptography.Xml.EncryptedData>類別衍生自<xref:System.Security.Cryptography.Xml.EncryptedType>類別。 此範例接著會顯示的各種屬性<xref:System.Security.Cryptography.Xml.EncryptedData>類別到主控台。  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public abstract void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LoadXml : System.Xml.XmlElement -&gt; unit" Usage="encryptedType.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Xml.XmlElement" /> 物件，表示要用於 <see langword="&lt;EncryptedType&gt;" /> 項目中的 XML 項目。</param>
        <summary>將 XML 資訊載入 XML 加密的 <see langword="&lt;EncryptedType&gt;" /> 項目中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個方法來載入到現有的 XML 項目<xref:System.Security.Cryptography.Xml.EncryptedType>物件。  
  
   
  
## Examples  
 下列程式碼範例示範如何加密和解密 XML 項目使用<xref:System.Security.Cryptography.Xml.EncryptedData>類別衍生自<xref:System.Security.Cryptography.Xml.EncryptedType>類別。  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">所提供的 <paramref name="value" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="MimeType">
      <MemberSignature Language="C#" Value="public virtual string MimeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MimeType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.MimeType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MimeType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MimeType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MimeType : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.MimeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 XML 加密中 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 執行個體的 <see langword="MimeType" /> 屬性。</summary>
        <value>描述加密資料之媒體類型的字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `MimeType`屬性是描述加密資料的媒體類型的選擇性屬性。 這個屬性的值是包含所定義的值的字串[RFC 2045： 多用途網際網路郵件延伸標準 (MIME) 第一部分： 網際網路訊息本文格式](https://www.ietf.org/rfc/rfc2045.txt)。 例如，如果已加密的資料是 base64 編碼的 PNG、`Encoding`屬性會是 'http://www.w3.org/2000/09/xmldsig#base64' 和`MimeType`會是 ' image/png '。 這個屬性是選擇性的任何驗證`MimeType`還需要的資訊。 屬性不會指出加密應用程式必須額外處理。 請注意這項資訊可能不需要它是否已經繫結至中的識別項`Type`屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何加密和解密 XML 項目使用<xref:System.Security.Cryptography.Xml.EncryptedData>類別衍生自<xref:System.Security.Cryptography.Xml.EncryptedType>類別。 此範例接著會顯示的各種屬性<xref:System.Security.Cryptography.Xml.EncryptedData>類別到主控台。  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public virtual string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 XML 加密中 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 執行個體的 <see langword="Type" /> 屬性。</summary>
        <value>描述加密資料之文字形式的字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Type`屬性是選擇性屬性，識別之文字形式的加密內容的類型資訊。 雖然是選擇性的這是重要的屬性，用在強制處理中所述[規則處理： 解密](https://www.w3.org/TR/xmlenc-core/)（區段 4.2） 的 XML 加密語法和處理規格 (https://www.w3.org/TR/xmlenc-core/)。 如果`<EncryptedData>`元素包含型別的資料`'element'`或項目`'content'`，並取代，在 XML 文件中的資料，強烈建議`Type`提供屬性。 如果沒有此資訊，嘗試解密資訊的應用程式將無法自動還原成其原始的文字形式的 XML 文件。  
  
   
  
## Examples  
 下列程式碼範例示範如何加密和解密 XML 項目使用<xref:System.Security.Cryptography.Xml.EncryptedData>類別衍生自<xref:System.Security.Cryptography.Xml.EncryptedType>類別。  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>