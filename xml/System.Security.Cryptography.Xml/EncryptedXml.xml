<Type Name="EncryptedXml" FullName="System.Security.Cryptography.Xml.EncryptedXml">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36f657edc5bb8101946425b390f59294f491be56" /><Meta Name="ms.sourcegitcommit" Value="84230e7a361e71d9f5259c4fb54d708d0c84a65d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/19/2018" /><Meta Name="ms.locfileid" Value="53615126" /></Metadata><TypeSignature Language="C#" Value="public class EncryptedXml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedXml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedXml" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedXml" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedXml" />
  <TypeSignature Language="F#" Value="type EncryptedXml = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="eb2c0-101">代表實作 XML 加密的處理序模型。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-101">Represents the process model for implementing XML encryption.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-102"><xref:System.Security.Cryptography.Xml.EncryptedXml>類別是.NET Framework 中的 XML 加密所使用的主要類別。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-102">The <xref:System.Security.Cryptography.Xml.EncryptedXml> class is the main class used for XML encryption in the .NET Framework.</span></span> <span data-ttu-id="eb2c0-103">XML 加密是標準為基礎、 可互通的方式，來加密所有或部分 XML 文件或任何任意的資料。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-103">XML Encryption is a standards-based, interoperable way to encrypt all or part of an XML document or any arbitrary data.</span></span> <span data-ttu-id="eb2c0-104">.NET Framework XML 加密類別實作全球資訊網協會 (W3C) 規格，XML 加密位於http://www.w3.org/TR/xmlenc-core/。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-104">The .NET Framework XML encryption classes implement the World Wide Web Consortium (W3C) specification for XML encryption located at http://www.w3.org/TR/xmlenc-core/.</span></span>  
  
 <span data-ttu-id="eb2c0-105">使用<xref:System.Security.Cryptography.Xml.EncryptedXml>類別，每當您需要標準的方式來共用應用程式或組織之間的加密的 XML 資料。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-105">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml> class whenever you need to share encrypted XML data between applications or organizations in a standard way.</span></span> <span data-ttu-id="eb2c0-106">任何使用這個類別加密的資料可以解密的 XML 加密的 W3C 規格的任何實作。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-106">Any data encrypted using this class can be decrypted by any implementation of the W3C specification for XML encryption.</span></span>  
  
 <span data-ttu-id="eb2c0-107">XML 加密會取代任何純文字 XML 項目或文件`<EncryptedData>`元素，其包含已加密 （或加密文字） 的純文字 XML 表示法或任意資料。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-107">XML encryption replaces any plain text XML element or document with the `<EncryptedData>` element, which contains an encrypted (or cipher text) representation of plain text XML or any arbitrary data.</span></span> <span data-ttu-id="eb2c0-108">`<EncryptedData>`元素可以選擇性地包含有關在哪裡尋找將會解密加密文字，金鑰和密碼編譯演算法來加密純文字。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-108">The `<EncryptedData>` element can optionally contain information about where to find a key that will decrypt the cipher text, and which cryptographic algorithm was used to encrypt the plain text.</span></span>  
  
 <span data-ttu-id="eb2c0-109">`<EncryptedKey>`項目是類似`<EncryptedData>`風格及使用，但它可讓您將值解密的金鑰加密中的項目`<EncryptedData>`項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-109">The `<EncryptedKey>` element is similar to the `<EncryptedData>` element in style and usage, except that it allows you to encrypt a key that will decrypt the value of the `<EncryptedData>` element.</span></span> <span data-ttu-id="eb2c0-110">請注意，`<EncryptedKey>`項目和`<EncryptedData>`元素絕不會包含未加密的金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-110">Note that the `<EncryptedKey>` element and the `<EncryptedData>` element will never contain an unencrypted key.</span></span>  
  
 <span data-ttu-id="eb2c0-111">您可以使用下列方法之一來交換金鑰資訊：</span><span class="sxs-lookup"><span data-stu-id="eb2c0-111">Use one of the following methods to exchange key information:</span></span>  
  
-   <span data-ttu-id="eb2c0-112">不包含任何索引鍵資訊。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-112">Do not include any key information.</span></span> <span data-ttu-id="eb2c0-113">如果您選擇此選項，則這兩個合作對象必須先同意的演算法和金鑰，才能交換加密的資料。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-113">If you choose this option, both parties must agree on an algorithm and key before they exchange encrypted data.</span></span>  
  
-   <span data-ttu-id="eb2c0-114">統一資源識別元 (URI) 屬性中包含金鑰的位置`<RetrievalMethod>`項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-114">Include the location of the key in the Uniform Resource Identifier (URI) attribute of the `<RetrievalMethod>` element.</span></span> <span data-ttu-id="eb2c0-115">這兩個合作對象必須同意事先金鑰的位置，此位置必須保持機密。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-115">Both parties must agree on the key location ahead of time and this location must be kept secret.</span></span>  
  
-   <span data-ttu-id="eb2c0-116">包含對應至中的索引鍵的字串名稱`<KeyName>`項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-116">Include a string name that maps to a key in the `<KeyName>` element.</span></span> <span data-ttu-id="eb2c0-117">這兩個合作對象必須同意索引鍵名稱對應，然後再交換加密的資料，而且這種對應必須保存祕密。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-117">Both parties must agree on the key name mapping before they exchange encrypted data and this mapping must be kept secret.</span></span>  
  
-   <span data-ttu-id="eb2c0-118">包含已加密的金鑰，在`<EncryptedKey>`項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-118">Include an encrypted key in the `<EncryptedKey>` element.</span></span> <span data-ttu-id="eb2c0-119">這兩個合作對象必須同意的金鑰，解密已加密的金鑰，才能交換加密的資料。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-119">Both parties must agree on the key that decrypts the encrypted key before they exchange encrypted data.</span></span> <span data-ttu-id="eb2c0-120">您可以選擇性地包含名稱或位置，將會解密中的索引鍵之索引鍵`<EncryptedKey>`項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-120">You can optionally include a name or location of the key that will decrypt the key in the `<EncryptedKey>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-121">下列程式碼範例示範如何建立簡單的公用程式類別，使用<xref:System.Security.Cryptography.TripleDES>演算法來加密 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-121">The following code example demonstrates how to create a simple utility class that uses the <xref:System.Security.Cryptography.TripleDES> algorithm to encrypt an XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/VB/sample.vb#1)]  
  
 <span data-ttu-id="eb2c0-122">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-122">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-123">此範例不包含任何金鑰資訊加密的 XML 文件中。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-123">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="eb2c0-124">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-124">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-125">此範例會解密方法用來尋找適當的解密金鑰加密 XML 文件中內嵌索引鍵的名稱。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-125">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="eb2c0-126">下列程式碼範例示範如何加密使用非對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-126">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="eb2c0-127">此範例會建立對稱工作階段金鑰來加密文件，並再將 XML 文件中內嵌的工作階段金鑰的加密的版本會使用非對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-127">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="eb2c0-128">下列程式碼範例示範如何加密 XML 文件使用 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-128">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="eb2c0-129">此範例會建立對稱工作階段金鑰來加密文件，並再將 XML 文件中內嵌的工作階段金鑰的加密的版本會使用 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-129">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb2c0-130">初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-130">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb2c0-131">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-131">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-132">此範例不包含任何金鑰資訊加密的 XML 文件中。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-132">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="eb2c0-133">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-133">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-134">此範例會解密方法用來尋找適當的解密金鑰加密 XML 文件中內嵌索引鍵的名稱。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-134">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="eb2c0-135">下列程式碼範例示範如何加密使用非對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-135">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="eb2c0-136">此範例會建立對稱工作階段金鑰來加密文件，並再將 XML 文件中內嵌的工作階段金鑰的加密的版本會使用非對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-136">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="eb2c0-137">下列程式碼範例示範如何加密 XML 文件使用 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-137">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="eb2c0-138">此範例會建立對稱工作階段金鑰來加密文件，並再將 XML 文件中內嵌的工作階段金鑰的加密的版本會使用 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-138">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb2c0-139">初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-139">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-140">這是.NET Framework 中的 XML 加密的主要類別的預設建構函式。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-140">This is the default constructor for the main class for XML encryption in the .NET Framework.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-141">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-141">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-142">此範例不包含任何金鑰資訊加密的 XML 文件中。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-142">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="eb2c0-143">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-143">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-144">此範例會解密方法用來尋找適當的解密金鑰加密 XML 文件中內嵌索引鍵的名稱。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-144">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="eb2c0-145">下列程式碼範例示範如何加密使用非對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-145">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="eb2c0-146">此範例會建立對稱工作階段金鑰來加密文件，並再將 XML 文件中內嵌的工作階段金鑰的加密的版本會使用非對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-146">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="eb2c0-147">下列程式碼範例示範如何加密 XML 文件使用 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-147">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="eb2c0-148">此範例會建立對稱工作階段金鑰來加密文件，並再將 XML 文件中內嵌的工作階段金鑰的加密的版本會使用 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-148">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml (System.Xml.XmlDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (document As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml(System::Xml::XmlDocument ^ document);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.EncryptedXml : System.Xml.XmlDocument -&gt; System.Security.Cryptography.Xml.EncryptedXml" Usage="new System.Security.Cryptography.Xml.EncryptedXml document" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="eb2c0-149">用來初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 物件的 <see cref="T:System.Xml.XmlDocument" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-149">An <see cref="T:System.Xml.XmlDocument" /> object used to initialize the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object.</span></span></param>
        <summary><span data-ttu-id="eb2c0-150">使用指定的 XML 文件，初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-150">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class using the specified XML document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-151">使用這個建構函式來建立<xref:System.Security.Cryptography.Xml.EncryptedXml>物件時您想要指定要加密的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-151">Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt.</span></span>  <span data-ttu-id="eb2c0-152">`document`參數包含稍後形成加密的 XML 的 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-152">The `document` parameter comprises the XML elements that later form the encrypted XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-153">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-153">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-154">此範例會解密方法用來尋找適當的解密金鑰加密 XML 文件中內嵌索引鍵的名稱。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-154">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="eb2c0-155">下列程式碼範例示範如何加密使用非對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-155">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="eb2c0-156">此範例會建立對稱工作階段金鑰來加密文件，並再將 XML 文件中內嵌的工作階段金鑰的加密的版本會使用非對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-156">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml (System.Xml.XmlDocument document, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml(System::Xml::XmlDocument ^ document, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.EncryptedXml : System.Xml.XmlDocument * System.Security.Policy.Evidence -&gt; System.Security.Cryptography.Xml.EncryptedXml" Usage="new System.Security.Cryptography.Xml.EncryptedXml (document, evidence)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="eb2c0-157">用來初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 物件的 <see cref="T:System.Xml.XmlDocument" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-157">An <see cref="T:System.Xml.XmlDocument" /> object used to initialize the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object.</span></span></param>
        <param name="evidence"><span data-ttu-id="eb2c0-158">與 <see cref="T:System.Xml.XmlDocument" /> 物件相關聯的 <see cref="T:System.Security.Policy.Evidence" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-158">An <see cref="T:System.Security.Policy.Evidence" /> object associated with the <see cref="T:System.Xml.XmlDocument" /> object.</span></span></param>
        <summary><span data-ttu-id="eb2c0-159">使用指定的 XML 文件和辨識項，初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-159">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class using the specified XML document and evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-160">使用這個建構函式來建立<xref:System.Security.Cryptography.Xml.EncryptedXml>物件時您想要指定加密，並提供安全性辨識項的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-160">Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt and provide security evidence.</span></span> <span data-ttu-id="eb2c0-161">`document`參數包含稍後形成加密的 XML 的 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-161">The `document` parameter comprises the XML elements that later form the encrypted XML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyNameMapping">
      <MemberSignature Language="C#" Value="public void AddKeyNameMapping (string keyName, object keyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddKeyNameMapping(string keyName, object keyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddKeyNameMapping (keyName As String, keyObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddKeyNameMapping(System::String ^ keyName, System::Object ^ keyObject);" />
      <MemberSignature Language="F#" Value="member this.AddKeyNameMapping : string * obj -&gt; unit" Usage="encryptedXml.AddKeyNameMapping (keyName, keyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="keyObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName"><span data-ttu-id="eb2c0-162">要對應至 <paramref name="keyObject" /> 的名稱。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-162">The name to map to <paramref name="keyObject" />.</span></span></param>
        <param name="keyObject"><span data-ttu-id="eb2c0-163">要對應至 <paramref name="keyName" /> 的對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-163">The symmetric key to map to <paramref name="keyName" />.</span></span></param>
        <summary><span data-ttu-id="eb2c0-164">定義金鑰名稱和對稱金鑰或非對稱金鑰之間的對應。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-164">Defines a mapping between a key name and a symmetric key or an asymmetric key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-165"><xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A>方法可讓您將對稱金鑰或非對稱金鑰對應至字串名稱。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-165">The <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> method allows you to map a symmetric key or an asymmetric key to a string name.</span></span> <span data-ttu-id="eb2c0-166">這個方法的值相加`keyName`和`keyObject`參數的有效索引鍵資料表名稱對應。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-166">This method adds the values of the `keyName` and `keyObject` parameters to a table of valid key name mappings.</span></span>  
  
 <span data-ttu-id="eb2c0-167">使用<xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A>方法，以清除索引鍵名稱對應資料表。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-167">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A> method to clear the key name mappings table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-168">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-168">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-169">此範例會解密方法用來尋找適當的解密金鑰加密 XML 文件中內嵌索引鍵的名稱。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-169">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb2c0-170"><paramref name="keyName" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-170">The value of the <paramref name="keyName" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb2c0-171">-或-</span><span class="sxs-lookup"><span data-stu-id="eb2c0-171">-or-</span></span> 
<span data-ttu-id="eb2c0-172"><paramref name="keyObject" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-172">The value of the <paramref name="keyObject" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="eb2c0-173"><paramref name="keyObject" /> 參數的值不是 RSA 演算法或對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-173">The value of the <paramref name="keyObject" /> parameter is not an RSA algorithm or a symmetric key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClearKeyNameMappings">
      <MemberSignature Language="C#" Value="public void ClearKeyNameMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearKeyNameMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearKeyNameMappings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearKeyNameMappings();" />
      <MemberSignature Language="F#" Value="member this.ClearKeyNameMappings : unit -&gt; unit" Usage="encryptedXml.ClearKeyNameMappings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb2c0-174">重設所有金鑰名稱對應。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-174">Resets all key name mapping.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-175">使用這個方法來清除您已設定使用的所有索引鍵名稱對應<xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-175">Use this method to clear all key name mapping that you have set using the <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptData">
      <MemberSignature Language="C#" Value="public byte[] DecryptData (System.Security.Cryptography.Xml.EncryptedData encryptedData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DecryptData(class System.Security.Cryptography.Xml.EncryptedData encryptedData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DecryptData(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public byte[] DecryptData (System.Security.Cryptography.Xml.EncryptedData encryptedData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DecryptData(class System.Security.Cryptography.Xml.EncryptedData encryptedData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DecryptData(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.DecryptData : System.Security.Cryptography.Xml.EncryptedData * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="encryptedXml.DecryptData (encryptedData, symAlg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData"><span data-ttu-id="eb2c0-176">要解密的資料。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-176">The data to decrypt.</span></span></param>
        <param name="symmetricAlgorithm"><span data-ttu-id="eb2c0-177">用來解密 <paramref name="encryptedData" /> 的對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-177">The symmetric key used to decrypt <paramref name="encryptedData" />.</span></span></param>
        <param name="symAlg"><span data-ttu-id="eb2c0-178">用來解密 <paramref name="encryptedData" /> 的對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-178">The symmetric key used to decrypt <paramref name="encryptedData" />.</span></span></param>
        <summary><span data-ttu-id="eb2c0-179">使用指定的對稱演算法，解密 <see langword="&lt;EncryptedData&gt;" /> 項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-179">Decrypts an <see langword="&lt;EncryptedData&gt;" /> element using the specified symmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="eb2c0-180">包含原始解密純文字的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-180">A byte array that contains the raw decrypted plain text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-181">使用<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A>方法來解密<xref:System.Security.Cryptography.Xml.EncryptedData>使用對稱金鑰的項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-181">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method to decrypt an <xref:System.Security.Cryptography.Xml.EncryptedData> element using a symmetric key.</span></span>  
  
 <span data-ttu-id="eb2c0-182">請注意，<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A>方法才會解密最上層 <`EncryptedData`> 標記。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-182">Note that the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method only decrypts top-level <`EncryptedData`> tags.</span></span>  <span data-ttu-id="eb2c0-183">萬一其中一個或多個 <`EncryptedData`> 標記已加密，而且包含在較高的層級 <`EncryptedData`> 標記，您可以呼叫<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>分別為每個方法。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-183">In cases where one or more <`EncryptedData`> tags have been encrypted and are contained within higher level <`EncryptedData`> tags, you can call the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method separately for each one.</span></span>  <span data-ttu-id="eb2c0-184">請參閱<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>程式碼範例的方法。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-184">See the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method for a code example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-185">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-185">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-186">此範例不包含任何金鑰資訊加密的 XML 文件中。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-186">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb2c0-187"><paramref name="encryptedData" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-187">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb2c0-188">-或-</span><span class="sxs-lookup"><span data-stu-id="eb2c0-188">-or-</span></span> 
<span data-ttu-id="eb2c0-189"><paramref name="symmetricAlgorithm" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-189">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptDocument">
      <MemberSignature Language="C#" Value="public void DecryptDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DecryptDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument" />
      <MemberSignature Language="VB.NET" Value="Public Sub DecryptDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DecryptDocument();" />
      <MemberSignature Language="F#" Value="member this.DecryptDocument : unit -&gt; unit" Usage="encryptedXml.DecryptDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb2c0-190">解密 XML 文件的所有 <see langword="&lt;EncryptedData&gt;" /> 項目，這些項目在初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 類別時指定。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-190">Decrypts all <see langword="&lt;EncryptedData&gt;" /> elements of the XML document that were specified during initialization of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-191"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>方法會解密所有`<EncryptedData>`在初始化期間載入的 XML 文件的項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-191">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts all `<EncryptedData>` elements of the XML document loaded during initialization.</span></span> <span data-ttu-id="eb2c0-192">呼叫此方法中之後, 所有`<EncryptedData>`文件中的項目會取代純文字版本。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-192">After you call this method, all `<EncryptedData>` elements in the document are replaced with plain text versions.</span></span>  
  
 <span data-ttu-id="eb2c0-193"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>方法會解密只有最上層`<EncryptedData>`項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-193">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts only top-level `<EncryptedData>` elements.</span></span>  <span data-ttu-id="eb2c0-194">如果您需要解密的進階加密的文件 （一次加密文件），您必須呼叫<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>重複直到所有的方法`<EncryptedData>`項目已解密。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-194">If you need to decrypt a super-encrypted document (a document that is encrypted more than once), you must call the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method repeatedly until all the `<EncryptedData>` elements have been decrypted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb2c0-195"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>方法會解密只有有效的 XML 資料。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-195">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts only valid XML data.</span></span> <span data-ttu-id="eb2c0-196">若要解密的任意資料，請使用<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-196">To decrypt arbitrary data, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method.</span></span>  
  
 <span data-ttu-id="eb2c0-197">若要使用 XML 加密使用 X.509 憑證，您必須有 Microsoft Enhanced Cryptographic Provider 安裝和 X.509 憑證必須使用增強的提供者。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-197">To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider.</span></span> <span data-ttu-id="eb2c0-198">如果您沒有 Microsoft Enhanced Cryptographic Provider 安裝或 X.509 憑證不會使用增強的提供者， <xref:System.Security.Cryptography.CryptographicException> 「 未知的錯誤 」 就會擲回時解密 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-198">If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an "Unknown Error" will be thrown when you decrypt an XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-199">下列程式碼範例示範如何加密使用非對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-199">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="eb2c0-200">此範例會建立對稱工作階段金鑰來加密文件，並再將 XML 文件中內嵌的工作階段金鑰的加密的版本會使用非對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-200">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="eb2c0-201">下列程式碼範例示範如何加密 XML 文件使用 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-201">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="eb2c0-202">此範例會建立對稱工作階段金鑰來加密文件，並再將 XML 文件中內嵌的工作階段金鑰的加密的版本會使用 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-202">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 <span data-ttu-id="eb2c0-203">下列程式碼範例示範如何解密高的層級 <`EncryptedData`> 標籤，其中包含加密的另一個 <`EncryptedData`> 標記。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-203">The following code example demonstrates how to decrypt a high level <`EncryptedData`> tag that contains another encrypted <`EncryptedData`> tag.</span></span>  
  
 [!code-csharp[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/samples/snippets/csharp/VS_Snippets_Misc/Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="eb2c0-204">找不到用來解密文件的密碼編譯金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-204">The cryptographic key used to decrypt the document was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptEncryptedKey">
      <MemberSignature Language="C#" Value="public virtual byte[] DecryptEncryptedKey (System.Security.Cryptography.Xml.EncryptedKey encryptedKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DecryptEncryptedKey(class System.Security.Cryptography.Xml.EncryptedKey encryptedKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(System.Security.Cryptography.Xml.EncryptedKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ DecryptEncryptedKey(System::Security::Cryptography::Xml::EncryptedKey ^ encryptedKey);" />
      <MemberSignature Language="F#" Value="abstract member DecryptEncryptedKey : System.Security.Cryptography.Xml.EncryptedKey -&gt; byte[]&#xA;override this.DecryptEncryptedKey : System.Security.Cryptography.Xml.EncryptedKey -&gt; byte[]" Usage="encryptedXml.DecryptEncryptedKey encryptedKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Security.Cryptography.Xml.EncryptedKey" />
      </Parameters>
      <Docs>
        <param name="encryptedKey"><span data-ttu-id="eb2c0-205"><see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 物件，包含要擷取的金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-205">The <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> object that contains the key to retrieve.</span></span></param>
        <summary><span data-ttu-id="eb2c0-206">判斷 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 項目所代表的金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-206">Determines the key represented by the <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> element.</span></span></summary>
        <returns><span data-ttu-id="eb2c0-207">包含金鑰的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-207">A byte array that contains the key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-208"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey%2A>方法會解密已加密的金鑰，內含`<EncryptedKey>`XML 文件的項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-208">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span>  
  
 <span data-ttu-id="eb2c0-209">這個遞迴方法找到所表示的索引鍵<xref:System.Security.Cryptography.Xml.EncryptedKey>物件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-209">This recursive method finds the key represented by the <xref:System.Security.Cryptography.Xml.EncryptedKey> object.</span></span> <span data-ttu-id="eb2c0-210">請注意，<xref:System.Security.Cryptography.Xml.EncryptedKey>物件可包含另一個<xref:System.Security.Cryptography.Xml.EncryptedKey>物件，指定其<xref:System.Security.Cryptography.Xml.KeyInfo>值。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-210">Note that an <xref:System.Security.Cryptography.Xml.EncryptedKey> object can contain another <xref:System.Security.Cryptography.Xml.EncryptedKey> object that specifies its <xref:System.Security.Cryptography.Xml.KeyInfo> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb2c0-211"><paramref name="encryptedKey" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-211">The value of the <paramref name="encryptedKey" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="eb2c0-212"><paramref name="encryptedKey" /> 參數的值不是三重 DES Key Wrap 演算法或 Advanced Encryption Standard (AES) Key Wrap 演算法 (也稱為 Rijndael)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-212">The value of the <paramref name="encryptedKey" /> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DecryptKey">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb2c0-213">解密 <see langword="&lt;EncryptedKey&gt;" /> 項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-213">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-214">使用<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A>方法來解密`<EncryptedKey>`項目，並擷取用來解密該元素的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-214">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method to decrypt an `<EncryptedKey>` element and retrieve the key used to decrypt that element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member DecryptKey : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.DecryptKey (keyData, symAlg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="eb2c0-215">代表加密 <see langword="&lt;EncryptedKey&gt;" /> 項目的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-215">An array of bytes that represents an encrypted <see langword="&lt;EncryptedKey&gt;" /> element.</span></span></param>
        <param name="symmetricAlgorithm"><span data-ttu-id="eb2c0-216">用來解密 <paramref name="keyData" /> 的對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-216">The symmetric key used to decrypt <paramref name="keyData" />.</span></span></param>
        <param name="symAlg"><span data-ttu-id="eb2c0-217">用來解密 <paramref name="keyData" /> 的對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-217">The symmetric key used to decrypt <paramref name="keyData" />.</span></span></param>
        <summary><span data-ttu-id="eb2c0-218">使用對稱演算法，解密 <see langword="&lt;EncryptedKey&gt;" /> 項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-218">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element using a symmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="eb2c0-219">包含純文字金鑰的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-219">A byte array that contains the plain text key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-220"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A>方法會解密已加密的金鑰，內含`<EncryptedKey>`XML 文件的項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-220">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span> <span data-ttu-id="eb2c0-221">這個方法可接受的值`symmetricAlgorithm`參數，代表三重 DES 演算法或 AES 金鑰包裝演算法 （也稱為 Rijndael）。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-221">This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb2c0-222"><paramref name="keyData" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-222">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb2c0-223">-或-</span><span class="sxs-lookup"><span data-stu-id="eb2c0-223">-or-</span></span> 
<span data-ttu-id="eb2c0-224"><paramref name="symmetricAlgorithm" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-224">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="eb2c0-225"><paramref name="symmetricAlgorithm" /> 項目的值不是三重 DES Key Wrap 演算法或 Advanced Encryption Standard (AES) Key Wrap 演算法 (也稱為 Rijndael)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-225">The value of the <paramref name="symmetricAlgorithm" /> element is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool useOAEP) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool fOAEP) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member DecryptKey : byte[] * System.Security.Cryptography.RSA * bool -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.DecryptKey (keyData, rsa, fOAEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="rsa" Type="System.Security.Cryptography.RSA" Index="1" />
        <Parameter Name="useOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="fOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="eb2c0-226">代表加密 <see langword="&lt;EncryptedKey&gt;" /> 項目的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-226">An array of bytes that represents an encrypted <see langword="&lt;EncryptedKey&gt;" /> element.</span></span></param>
        <param name="rsa"><span data-ttu-id="eb2c0-227">用來解密 <paramref name="keyData" /> 的非對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-227">The asymmetric key used to decrypt <paramref name="keyData" />.</span></span></param>
        <param name="useOAEP"><span data-ttu-id="eb2c0-228">指定是否使用 Optimal Asymmetric Encryption Padding (OAEP) 的值。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-228">A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).</span></span></param>
        <param name="fOAEP"><span data-ttu-id="eb2c0-229">指定是否使用 Optimal Asymmetric Encryption Padding (OAEP) 的值。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-229">A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).</span></span></param>
        <summary><span data-ttu-id="eb2c0-230">使用非對稱演算法，解密 <see langword="&lt;EncryptedKey&gt;" /> 項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-230">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element using an asymmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="eb2c0-231">包含純文字金鑰的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-231">A byte array that contains the plain text key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-232"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A>方法會解密已加密的金鑰，內含`<EncryptedKey>`XML 文件的項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-232">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span> <span data-ttu-id="eb2c0-233">這個方法可接受的值`rsa`表示 RSA PKCS #1 類型 2 演算法 （也稱為 OAEP 填補） 或 RSA PKCS #1 v1.5 演算法的參數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-233">This method accepts a value for the `rsa` parameter that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP padding).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb2c0-234"><paramref name="keyData" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-234">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb2c0-235">-或-</span><span class="sxs-lookup"><span data-stu-id="eb2c0-235">-or-</span></span> 
<span data-ttu-id="eb2c0-236"><paramref name="rsa" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-236">The value of the <paramref name="rsa" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DocumentEvidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence DocumentEvidence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence DocumentEvidence" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentEvidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ DocumentEvidence { System::Security::Policy::Evidence ^ get(); void set(System::Security::Policy::Evidence ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentEvidence : System.Security.Policy.Evidence with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-237">取得或設定 <see cref="T:System.Xml.XmlDocument" /> 物件的辨識項，這是建構 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 物件的來源物件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-237">Gets or sets the evidence of the <see cref="T:System.Xml.XmlDocument" /> object from which the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object is constructed.</span></span></summary>
        <value><span data-ttu-id="eb2c0-238"><see cref="T:System.Security.Policy.Evidence" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-238">An <see cref="T:System.Security.Policy.Evidence" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-239">如果 XML 文件來建立<xref:System.Security.Cryptography.Xml.EncryptedXml>物件有任何安全性辨識項，您應該新增的辨識項<xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-239">If the XML document used to create the <xref:System.Security.Cryptography.Xml.EncryptedXml> object has any security evidence, you should add the evidence to the <xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A> property.</span></span>  <span data-ttu-id="eb2c0-240">如果您未設定這個屬性，所有相關聯<xref:System.Security.Cryptography.Xml.CipherReference>物件將不會取值，因為它們未被授與必要的權限集。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-240">If you do not set this property, any associated <xref:System.Security.Cryptography.Xml.CipherReference> objects will not be dereferenced because they will not be granted the required permission set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-241">取得或設定 XML 加密所使用的編碼。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-241">Gets or sets the encoding used for XML encryption.</span></span></summary>
        <value><span data-ttu-id="eb2c0-242"><see cref="T:System.Text.Encoding" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-242">An <see cref="T:System.Text.Encoding" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-243">XML 加密編碼預設值是 utf-8 編碼。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-243">UTF-8 encoding is the default encoding for XML encryption.</span></span> <span data-ttu-id="eb2c0-244">您可以使用這個屬性來指定其他類型的編碼方式從<xref:System.Text.Encoding>類別，例如 utf-16 或 ASCII。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-244">You can use this property to specify other types of encoding from the <xref:System.Text.Encoding> class, such as UTF-16 or ASCII.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Encrypt">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb2c0-245">使用指定的憑證或金鑰對應表中的指定金鑰，加密項目的外部 XML。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-245">Encrypts the outer XML of an element using the specified certificate or key in the key mapping table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb2c0-246">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-246">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 <span data-ttu-id="eb2c0-247">下列程式碼範例示範如何加密 XML 文件使用 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-247">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="eb2c0-248">此範例會建立對稱工作階段金鑰來加密文件，並再將 XML 文件中內嵌的工作階段金鑰的加密的版本會使用 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-248">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Xml.EncryptedData Encrypt(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (inputElement As XmlElement, certificate As X509Certificate2) As EncryptedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Xml::EncryptedData ^ Encrypt(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : System.Xml.XmlElement * System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.Security.Cryptography.Xml.EncryptedData" Usage="encryptedXml.Encrypt (inputElement, certificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="inputElement"><span data-ttu-id="eb2c0-249">要加密的 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-249">The XML element to encrypt.</span></span></param>
        <param name="certificate"><span data-ttu-id="eb2c0-250">用來加密的 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-250">The X.509 certificate to use for encryption.</span></span></param>
        <summary><span data-ttu-id="eb2c0-251">使用指定的 X.509 憑證，加密項目的外部 XML。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-251">Encrypts the outer XML of an element using the specified X.509 certificate.</span></span></summary>
        <returns><span data-ttu-id="eb2c0-252">代表加密 XML 資料的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-252">An <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> element that represents the encrypted XML data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-253"><xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A>方法是便利的方式來加密使用的憑證項目的外部 XML。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-253">The <xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> method is a convenient way to encrypt the outer XML of an element using a certificate.</span></span> <span data-ttu-id="eb2c0-254">這個方法會產生 256 位元進階加密標準 (AES) 工作階段金鑰來加密 XML 項目然後會加密並簽署 AES 金鑰使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>物件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-254">This method generates a 256-bit Advanced Encryption Standard (AES) session key to encrypt an XML element and then encrypts and signs the AES key using the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object.</span></span> <span data-ttu-id="eb2c0-255"><xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A>方法接著會傳回所產生的 XML，做為<xref:System.Security.Cryptography.Xml.EncryptedData>項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-255">The <xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> method then returns the resulting XML as an <xref:System.Security.Cryptography.Xml.EncryptedData> element.</span></span>  
  
 <span data-ttu-id="eb2c0-256">如果您需要更充分掌控加密，因此您可以將放入加密的資訊`<CipherReference>`項目，或指定是否應為整個 XML 項目或只是它的內容加密，使用<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-256">If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads.</span></span>  
  
 <span data-ttu-id="eb2c0-257">若要使用 XML 加密使用 X.509 憑證，您必須有 Microsoft Enhanced Cryptographic Provider 安裝和 X.509 憑證必須使用增強的提供者。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-257">To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider.</span></span> <span data-ttu-id="eb2c0-258">如果您沒有 Microsoft Enhanced Cryptographic Provider 安裝或 X.509 憑證不會使用增強的提供者， <xref:System.Security.Cryptography.CryptographicException> 「 未知的錯誤 」 就會擲回時解密 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-258">If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an "Unknown Error" will be thrown when you decrypt an XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-259">下列程式碼範例示範如何加密 XML 文件使用 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-259">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="eb2c0-260">此範例會建立對稱工作階段金鑰來加密文件，並再將 XML 文件中內嵌的工作階段金鑰的加密的版本會使用 X.509 憑證。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-260">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb2c0-261"><paramref name="inputElement" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-261">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb2c0-262">-或-</span><span class="sxs-lookup"><span data-stu-id="eb2c0-262">-or-</span></span> 
<span data-ttu-id="eb2c0-263"><paramref name="certificate" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-263">The value of the <paramref name="certificate" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="eb2c0-264"><paramref name="certificate" /> 參數的值不表示 RSA 金鑰演算法。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-264">The value of the <paramref name="certificate" /> parameter does not represent an RSA key algorithm.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, string keyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Xml.EncryptedData Encrypt(class System.Xml.XmlElement inputElement, string keyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (inputElement As XmlElement, keyName As String) As EncryptedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Xml::EncryptedData ^ Encrypt(System::Xml::XmlElement ^ inputElement, System::String ^ keyName);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : System.Xml.XmlElement * string -&gt; System.Security.Cryptography.Xml.EncryptedData" Usage="encryptedXml.Encrypt (inputElement, keyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="keyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputElement"><span data-ttu-id="eb2c0-265">要加密的 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-265">The XML element to encrypt.</span></span></param>
        <param name="keyName"><span data-ttu-id="eb2c0-266">可以在金鑰對應表中找到的金鑰名稱。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-266">A key name that can be found in the key mapping table.</span></span></param>
        <summary><span data-ttu-id="eb2c0-267">使用金鑰對應表中的指定金鑰，加密項目的外部 XML。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-267">Encrypts the outer XML of an element using the specified key in the key mapping table.</span></span></summary>
        <returns><span data-ttu-id="eb2c0-268">代表加密 XML 資料的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-268">An <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that represents the encrypted XML data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-269">這個方法是便利的方式來加密外部 XML，使用索引鍵名稱的項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-269">This method is a convenient way to encrypt the outer XML of an element using a key name.</span></span> <span data-ttu-id="eb2c0-270">如果您需要更充分掌控加密，因此您可以將放入加密的資訊`<CipherReference>`項目，或指定是否應為整個 XML 項目或只是它的內容加密，使用<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-270">If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads.</span></span>  
  
 <span data-ttu-id="eb2c0-271">如需所有支援的演算法的清單，請參閱常數相關聯的欄位清單<xref:System.Security.Cryptography.Xml.EncryptedXml>類別。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-271">For a list of all supported algorithms, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-272">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-272">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb2c0-273"><paramref name="inputElement" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-273">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb2c0-274">-或-</span><span class="sxs-lookup"><span data-stu-id="eb2c0-274">-or-</span></span> 
<span data-ttu-id="eb2c0-275"><paramref name="keyName" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-275">The value of the <paramref name="keyName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="eb2c0-276"><paramref name="keyName" /> 參數的值不符合註冊的金鑰名稱組。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-276">The value of the <paramref name="keyName" /> parameter does not match a registered key name pair.</span></span>  
  
<span data-ttu-id="eb2c0-277">-或-</span><span class="sxs-lookup"><span data-stu-id="eb2c0-277">-or-</span></span> 
<span data-ttu-id="eb2c0-278">不支援 <paramref name="keyName" /> 參數所描述的密碼編譯金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-278">The cryptographic key described by the <paramref name="keyName" /> parameter is not supported.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptData">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb2c0-279">使用對稱演算法，加密 XML 資料。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-279">Encrypts XML data using a symmetric algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb2c0-280">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-280">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-281">此範例不包含任何金鑰資訊加密的 XML 文件中。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-281">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="eb2c0-282">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-282">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-283">此範例會解密方法用來尋找適當的解密金鑰加密 XML 文件中內嵌索引鍵的名稱。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-283">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="eb2c0-284">下列程式碼範例示範如何加密使用非對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-284">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="eb2c0-285">此範例會建立對稱工作階段金鑰來加密文件，並再將 XML 文件中內嵌的工作階段金鑰的加密的版本會使用非對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-285">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptData">
      <MemberSignature Language="C#" Value="public byte[] EncryptData (byte[] plaintext, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(unsigned int8[] plaintext, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(cli::array &lt;System::Byte&gt; ^ plaintext, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public byte[] EncryptData (byte[] plainText, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(unsigned int8[] plainText, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (plainText As Byte(), symAlg As SymmetricAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(cli::array &lt;System::Byte&gt; ^ plainText, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EncryptData : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="encryptedXml.EncryptData (plainText, symAlg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plaintext" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="plainText" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="plaintext"><span data-ttu-id="eb2c0-286">要加密的資料。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-286">The data to encrypt.</span></span></param>
        <param name="plainText"><span data-ttu-id="eb2c0-287">要加密的資料。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-287">The data to encrypt.</span></span></param>
        <param name="symmetricAlgorithm"><span data-ttu-id="eb2c0-288">用來加密的對稱演算法。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-288">The symmetric algorithm to use for encryption.</span></span></param>
        <param name="symAlg"><span data-ttu-id="eb2c0-289">用來加密的對稱演算法。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-289">The symmetric algorithm to use for encryption.</span></span></param>
        <summary><span data-ttu-id="eb2c0-290">使用指定的對稱演算法，加密指定位元組陣列中的資料。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-290">Encrypts data in the specified byte array using the specified symmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="eb2c0-291">加密資料的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-291">A byte array of encrypted data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-292">傳回的位元組陣列可以放入`<CipherValue>`項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-292">The returned byte array can be placed into a `<CipherValue>` element.</span></span> <span data-ttu-id="eb2c0-293">這個方法會採用的資料指定於`plaintext`參數是包含 XML 資料的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-293">This method assumes that the data specified in the `plaintext` parameter is a byte array that contains XML data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-294">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-294">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-295">此範例不包含任何金鑰資訊加密的 XML 文件中。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-295">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="eb2c0-296">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-296">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-297">此範例會解密方法用來尋找適當的解密金鑰加密 XML 文件中內嵌索引鍵的名稱。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-297">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="eb2c0-298">下列程式碼範例示範如何加密使用非對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-298">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="eb2c0-299">此範例會建立對稱工作階段金鑰來加密文件，並再將 XML 文件中內嵌的工作階段金鑰的加密的版本會使用非對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-299">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb2c0-300"><paramref name="plaintext" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-300">The value of the <paramref name="plaintext" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb2c0-301">-或-</span><span class="sxs-lookup"><span data-stu-id="eb2c0-301">-or-</span></span> 
<span data-ttu-id="eb2c0-302"><paramref name="symmetricAlgorithm" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-302">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="eb2c0-303">無法使用指定的參數，加密資料。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-303">The data could not be encrypted using the specified parameters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptData">
      <MemberSignature Language="C#" Value="public byte[] EncryptData (System.Xml.XmlElement inputElement, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm, bool content);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm, bool content) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm, bool content);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public byte[] EncryptData (System.Xml.XmlElement inputElement, System.Security.Cryptography.SymmetricAlgorithm symAlg, bool content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.SymmetricAlgorithm symAlg, bool content) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (inputElement As XmlElement, symAlg As SymmetricAlgorithm, content As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg, bool content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EncryptData : System.Xml.XmlElement * System.Security.Cryptography.SymmetricAlgorithm * bool -&gt; byte[]" Usage="encryptedXml.EncryptData (inputElement, symAlg, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="content" Type="System.Boolean" Index="2" />
      </Parameters>
      <Docs>
        <param name="inputElement"><span data-ttu-id="eb2c0-304">要加密的項目或其內容。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-304">The element or its contents to encrypt.</span></span></param>
        <param name="symmetricAlgorithm"><span data-ttu-id="eb2c0-305">用來加密的對稱演算法。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-305">The symmetric algorithm to use for encryption.</span></span></param>
        <param name="symAlg"><span data-ttu-id="eb2c0-306">用來加密的對稱演算法。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-306">The symmetric algorithm to use for encryption.</span></span></param>
        <param name="content"><span data-ttu-id="eb2c0-307"><see langword="true" /> 表示只加密項目的內容，<see langword="false" /> 表示加密整個項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-307"><see langword="true" /> to encrypt only the contents of the element; <see langword="false" /> to encrypt the entire element.</span></span></param>
        <summary><span data-ttu-id="eb2c0-308">使用指定的對稱演算法，加密指定的項目或其內容。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-308">Encrypts the specified element or its contents using the specified symmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="eb2c0-309">包含加密資料的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-309">A byte array that contains the encrypted data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-310">傳回的位元組陣列資料是值`<CipherValue>`項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-310">The returned byte array data is the value of the `<CipherValue>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-311">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-311">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-312">此範例不包含任何金鑰資訊加密的 XML 文件中。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-312">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb2c0-313"><paramref name="inputElement" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-313">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb2c0-314">-或-</span><span class="sxs-lookup"><span data-stu-id="eb2c0-314">-or-</span></span> 
<span data-ttu-id="eb2c0-315"><paramref name="symmetricAlgorithm" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-315">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptKey">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb2c0-316">加密收件者用來解密 <see langword="&lt;EncryptedData&gt;" /> 項目的金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-316">Encrypts the key that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-317">使用<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A>方法來加密收件者用來解密金鑰`<EncryptedData>`項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-317">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="eb2c0-318">這個方法會將內的加密的金鑰`<EncryptedKey>`項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-318">This method places the encrypted key within an `<EncryptedKey>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-319">下列程式碼範例示範如何加密使用非對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-319">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="eb2c0-320">此範例會建立對稱工作階段金鑰來加密文件，並再將 XML 文件中內嵌的工作階段金鑰的加密的版本會使用非對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-320">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member EncryptKey : byte[] * System.Security.Cryptography.SymmetricAlgorithm -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.EncryptKey (keyData, symAlg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="eb2c0-321">要加密的金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-321">The key to encrypt.</span></span></param>
        <param name="symmetricAlgorithm"><span data-ttu-id="eb2c0-322">用來加密 <paramref name="keyData" /> 的對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-322">The symmetric key used to encrypt <paramref name="keyData" />.</span></span></param>
        <param name="symAlg"><span data-ttu-id="eb2c0-323">用來加密 <paramref name="keyData" /> 的對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-323">The symmetric key used to encrypt <paramref name="keyData" />.</span></span></param>
        <summary><span data-ttu-id="eb2c0-324">使用對稱演算法，加密收件者用來解密 <see langword="&lt;EncryptedData&gt;" /> 項目的金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-324">Encrypts a key using a symmetric algorithm that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span></span></summary>
        <returns><span data-ttu-id="eb2c0-325">位元組陣列，代表 <paramref name="keyData" /> 參數的加密值。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-325">A byte array that represents the encrypted value of the <paramref name="keyData" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-326">使用<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A>方法來加密收件者用來解密金鑰`<EncryptedData>`項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-326">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="eb2c0-327">這個方法可接受的值`symmetricAlgorithm`參數，代表三重 DES 演算法或 AES 金鑰包裝演算法 （也稱為 Rijndael）。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-327">This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).</span></span>  
  
 <span data-ttu-id="eb2c0-328">請注意，這個方法會自動並不會在加密的金鑰`<EncryptedKey>`項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-328">Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element.</span></span>  <span data-ttu-id="eb2c0-329">您必須手動建立`<EncryptedKey>`文件內的項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-329">You must manually create the `<EncryptedKey>` element within your document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb2c0-330"><paramref name="keyData" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-330">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb2c0-331">-或-</span><span class="sxs-lookup"><span data-stu-id="eb2c0-331">-or-</span></span> 
<span data-ttu-id="eb2c0-332"><paramref name="symmetricAlgorithm" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-332">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="eb2c0-333"><paramref name="symmetricAlgorithm" /> 參數的值不是三重 DES Key Wrap 演算法或 Advanced Encryption Standard (AES) Key Wrap 演算法 (也稱為 Rijndael)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-333">The value of the <paramref name="symmetricAlgorithm" /> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool useOAEP) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool fOAEP) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member EncryptKey : byte[] * System.Security.Cryptography.RSA * bool -&gt; byte[]" Usage="System.Security.Cryptography.Xml.EncryptedXml.EncryptKey (keyData, rsa, fOAEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="rsa" Type="System.Security.Cryptography.RSA" Index="1" />
        <Parameter Name="useOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="fOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="eb2c0-334">要加密的金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-334">The key to encrypt.</span></span></param>
        <param name="rsa"><span data-ttu-id="eb2c0-335">用來加密 <paramref name="keyData" /> 的非對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-335">The asymmetric key used to encrypt <paramref name="keyData" />.</span></span></param>
        <param name="useOAEP"><span data-ttu-id="eb2c0-336">指定是否使用 Optimal Asymmetric Encryption Padding (OAEP) 的值。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-336">A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).</span></span></param>
        <param name="fOAEP"><span data-ttu-id="eb2c0-337">指定是否使用 Optimal Asymmetric Encryption Padding (OAEP) 的值。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-337">A value that specifies whether to use Optimal Asymmetric Encryption Padding (OAEP).</span></span></param>
        <summary><span data-ttu-id="eb2c0-338">加密收件者用來解密 <see langword="&lt;EncryptedData&gt;" /> 項目的金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-338">Encrypts the key that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span></span></summary>
        <returns><span data-ttu-id="eb2c0-339">位元組陣列，代表 <paramref name="keyData" /> 參數的加密值。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-339">A byte array that represents the encrypted value of the <paramref name="keyData" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-340">使用<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A>方法來加密收件者用來解密金鑰`<EncryptedData>`項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-340">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="eb2c0-341">這個方法可接受的值`rsa`表示 RSA PKCS #1 v1.5 演算法或 RSA PKCS #1 類型 2 演算法 （也稱為 OAEP）。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-341">This method accepts a value for `rsa` that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP).</span></span>  
  
 <span data-ttu-id="eb2c0-342">請注意，這個方法會自動並不會在加密的金鑰`<EncryptedKey>`項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-342">Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element.</span></span>  <span data-ttu-id="eb2c0-343">您必須手動建立`<EncryptedKey>`文件內的項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-343">You must manually create the `<EncryptedKey>` element within your document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-344">下列程式碼範例示範如何加密使用非對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-344">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="eb2c0-345">此範例會建立對稱工作階段金鑰來加密文件，並再將 XML 文件中內嵌的工作階段金鑰的加密的版本會使用非對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-345">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb2c0-346"><paramref name="keyData" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-346">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb2c0-347">-或-</span><span class="sxs-lookup"><span data-stu-id="eb2c0-347">-or-</span></span> 
<span data-ttu-id="eb2c0-348"><paramref name="rsa" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-348">The value of the <paramref name="rsa" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionIV">
      <MemberSignature Language="C#" Value="public virtual byte[] GetDecryptionIV (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDecryptionIV(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDecryptionIV(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public virtual byte[] GetDecryptionIV (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDecryptionIV(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDecryptionIV(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionIV : System.Security.Cryptography.Xml.EncryptedData * string -&gt; byte[]&#xA;override this.GetDecryptionIV : System.Security.Cryptography.Xml.EncryptedData * string -&gt; byte[]" Usage="encryptedXml.GetDecryptionIV (encryptedData, symAlgUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithmUri" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="symAlgUri" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData"><span data-ttu-id="eb2c0-349"><see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 物件，包含要擷取的初始化向量 (IV)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-349">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that contains the initialization vector (IV) to retrieve.</span></span></param>
        <param name="symmetricAlgorithmUri"><span data-ttu-id="eb2c0-350">統一資源識別元 (URI)，描述與 <paramref name="encryptedData" /> 值相關聯的密碼編譯演算法。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-350">The Uniform Resource Identifier (URI) that describes the cryptographic algorithm associated with the <paramref name="encryptedData" /> value.</span></span></param>
        <param name="symAlgUri"><span data-ttu-id="eb2c0-351">統一資源識別元 (URI)，描述與 <paramref name="encryptedData" /> 值相關聯的密碼編譯演算法。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-351">The Uniform Resource Identifier (URI) that describes the cryptographic algorithm associated with the <paramref name="encryptedData" /> value.</span></span></param>
        <summary><span data-ttu-id="eb2c0-352">從 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 物件擷取解密初始化向量 (IV)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-352">Retrieves the decryption initialization vector (IV) from an <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span></span></summary>
        <returns><span data-ttu-id="eb2c0-353">包含解密初始化向量 (IV) 的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-353">A byte array that contains the decryption initialization vector (IV).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-354">指定<xref:System.Security.Cryptography.Xml.EncryptedData>物件，這個方法會擷取解密初始化向量 (IV)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-354">Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method retrieves the decryption initialization vector (IV).</span></span> <span data-ttu-id="eb2c0-355">預設行為，IV 擷取的第一個位元組當做<xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-355">The default behavior retrieves the IV as the first bytes of the <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> byte array.</span></span>  
  
 <span data-ttu-id="eb2c0-356">如需所支援的統一資源識別元 (URI) 值的清單`symmetricAlgorithmUri`參數，與相關聯的常數欄位清單，請參閱<xref:System.Security.Cryptography.Xml.EncryptedXml>類別。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-356">For a list of Uniform Resource Identifier (URI) values supported by the `symmetricAlgorithmUri` parameter, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb2c0-357"><paramref name="encryptedData" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-357">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="eb2c0-358"><paramref name="encryptedData" /> 參數值有為 null 的 <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-358">The value of the <paramref name="encryptedData" /> parameter has an <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> property that is null.</span></span>  
  
<span data-ttu-id="eb2c0-359">-或-</span><span class="sxs-lookup"><span data-stu-id="eb2c0-359">-or-</span></span> 
<span data-ttu-id="eb2c0-360"><paramref name="symmetricAlgorithmUrisymAlgUri" /> 參數的值為不支援的演算法。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-360">The value of the <paramref name="symmetricAlgorithmUrisymAlgUri" /> parameter is not a supported algorithm.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionKey">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::SymmetricAlgorithm ^ GetDecryptionKey(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::SymmetricAlgorithm ^ GetDecryptionKey(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionKey : System.Security.Cryptography.Xml.EncryptedData * string -&gt; System.Security.Cryptography.SymmetricAlgorithm&#xA;override this.GetDecryptionKey : System.Security.Cryptography.Xml.EncryptedData * string -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="encryptedXml.GetDecryptionKey (encryptedData, symAlgUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithmUri" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="symAlgUri" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData"><span data-ttu-id="eb2c0-361"><see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 物件，包含要擷取的解密金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-361">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that contains the decryption key to retrieve.</span></span></param>
        <param name="symmetricAlgorithmUri"><span data-ttu-id="eb2c0-362">要擷取的解密金鑰大小。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-362">The size of the decryption key to retrieve.</span></span></param>
        <param name="symAlgUri"><span data-ttu-id="eb2c0-363">要擷取的解密金鑰大小。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-363">The size of the decryption key to retrieve.</span></span></param>
        <summary><span data-ttu-id="eb2c0-364">從指定的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 物件擷取解密金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-364">Retrieves the decryption key from the specified <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span></span></summary>
        <returns><span data-ttu-id="eb2c0-365">與解密金鑰相關聯的 <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-365">A <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> object associated with the decryption key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-366">指定<xref:System.Security.Cryptography.Xml.EncryptedData>物件，這個方法會尋找解密金鑰，可用來擷取純文字資料。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-366">Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method looks for the decryption key that can be used to retrieve the plain text data.</span></span> <span data-ttu-id="eb2c0-367">如果指定的索引鍵的名稱，則方法會尋找與相關聯的索引鍵名稱的索引鍵名稱對應中所定義的非對稱演算法的對稱演算法。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-367">If a key name is specified, the method looks for the symmetric algorithm or asymmetric algorithm that is associated with the key name as defined in the key name mapping.</span></span> <span data-ttu-id="eb2c0-368">否則，如果擷取方法或<xref:System.Security.Cryptography.Xml.EncryptedKey>指定的物件，此方法會載入<xref:System.Security.Cryptography.Xml.EncryptedKey>物件並呼叫<xref:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-368">Otherwise, if a retrieval method or an <xref:System.Security.Cryptography.Xml.EncryptedKey> object is specified, the method loads the <xref:System.Security.Cryptography.Xml.EncryptedKey> object and calls the <xref:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb2c0-369"><paramref name="encryptedData" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-369">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="eb2c0-370">encryptedData 參數有 null 的 <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-370">The encryptedData parameter has an <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> property that is null.</span></span>  
  
<span data-ttu-id="eb2c0-371">-或-</span><span class="sxs-lookup"><span data-stu-id="eb2c0-371">-or-</span></span> 
<span data-ttu-id="eb2c0-372">無法使用指定的參數，擷取加密金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-372">The encrypted key cannot be retrieved using the specified parameters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIdElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetIdElement(class System.Xml.XmlDocument document, string idValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(System.Xml.XmlDocument,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdElement (document As XmlDocument, idValue As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetIdElement(System::Xml::XmlDocument ^ document, System::String ^ idValue);" />
      <MemberSignature Language="F#" Value="abstract member GetIdElement : System.Xml.XmlDocument * string -&gt; System.Xml.XmlElement&#xA;override this.GetIdElement : System.Xml.XmlDocument * string -&gt; System.Xml.XmlElement" Usage="encryptedXml.GetIdElement (document, idValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="idValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="eb2c0-373"><see cref="T:System.Xml.XmlDocument" /> 物件，包含具有 ID 值的項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-373">An <see cref="T:System.Xml.XmlDocument" /> object that contains an element with an ID value.</span></span></param>
        <param name="idValue"><span data-ttu-id="eb2c0-374">代表 ID 值的字串。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-374">A string that represents the ID value.</span></span></param>
        <summary><span data-ttu-id="eb2c0-375">判斷如何解析內部統一資源識別元 (URI) 參考。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-375">Determines how to resolve internal Uniform Resource Identifier (URI) references.</span></span></summary>
        <returns><span data-ttu-id="eb2c0-376">包含 ID 的 <see cref="T:System.Xml.XmlElement" /> 物件，這個 ID 表示如何解析內部統一資源識別元 (URI)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-376">An <see cref="T:System.Xml.XmlElement" /> object that contains an ID indicating how internal Uniform Resource Identifiers (URIs) are to be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-377"><xref:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement%2A>方法判斷如何解析內部統一資源識別元 (Uri)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-377">The <xref:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement%2A> method determines how to resolve internal Uniform Resource Identifiers (URIs).</span></span> <span data-ttu-id="eb2c0-378">它會尋找具有指定值的項目或項目的 ID 屬性，其指定的值。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-378">It looks for elements with a specified value or for elements with an ID attribute that has a specified value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CipherMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CipherMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As CipherMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CipherMode Mode { System::Security::Cryptography::CipherMode get(); void set(System::Security::Cryptography::CipherMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Security.Cryptography.CipherMode with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-379">取得或設定 XML 加密所使用的 Cipher 模式。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-379">Gets or sets the cipher mode used for XML encryption.</span></span></summary>
        <value><span data-ttu-id="eb2c0-380">其中一個 <see cref="T:System.Security.Cryptography.CipherMode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-380">One of the <see cref="T:System.Security.Cryptography.CipherMode" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-381">Cipher 區塊鏈結 (CBC) 模式是預設的 XML 加密的加密模式。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-381">Cipher Block Chaining (CBC) mode is the default cipher mode for XML encryption.</span></span> <span data-ttu-id="eb2c0-382">您可以使用這個屬性指定的其他編碼器模式<xref:System.Security.Cryptography.CipherMode>列舉型別，例如加密的意見反應 (CFB) 模式。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-382">You can use this property to specify other cipher modes of the <xref:System.Security.Cryptography.CipherMode> enumeration, such as Cipher Feedback (CFB) mode.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Security.Cryptography.PaddingMode with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-383">取得或設定 XML 加密所使用的填補模式。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-383">Gets or sets the padding mode used for XML encryption.</span></span></summary>
        <value><span data-ttu-id="eb2c0-384">其中一個 <see cref="T:System.Security.Cryptography.PaddingMode" /> 值，指定加密所使用的填補類型。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-384">One of the <see cref="T:System.Security.Cryptography.PaddingMode" /> values that specifies the type of padding used for encryption.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-385">ISO 10126 填補為 XML 加密的預設填補模式。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-385">ISO-10126 padding is the default padding mode for XML encryption.</span></span> <span data-ttu-id="eb2c0-386">您可以使用這個屬性來指定其他的填補模式的<xref:System.Security.Cryptography.PaddingMode>列舉型別，例如 ANSI X9.23 或 PKCS #5。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-386">You can use this property to specify other padding modes of the <xref:System.Security.Cryptography.PaddingMode> enumeration, such as ANSI X9.23 or PKCS#5.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recipient">
      <MemberSignature Language="C#" Value="public string Recipient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Recipient" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Recipient" />
      <MemberSignature Language="VB.NET" Value="Public Property Recipient As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Recipient { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Recipient : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Recipient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-387">取得或設定加密金鑰資訊的收件者。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-387">Gets or sets the recipient of the encrypted key information.</span></span></summary>
        <value><span data-ttu-id="eb2c0-388">加密金鑰資訊的收件者。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-388">The recipient of the encrypted key information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-389">您可以存取<xref:System.Security.Cryptography.Xml.EncryptedXml>藉由檢查索引鍵名稱所參考的物件<xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-389">You can access the <xref:System.Security.Cryptography.Xml.EncryptedXml> object referenced by a key name by examining the <xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A> property.</span></span>  
  
 <span data-ttu-id="eb2c0-390">使用<xref:System.Security.Cryptography.Xml.EncryptedXml.Recipient%2A>屬性來識別<xref:System.Security.Cryptography.Xml.EncryptedXml>目前收件者可以擷取解密金鑰來解密的項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-390">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.Recipient%2A> property to identify the <xref:System.Security.Cryptography.Xml.EncryptedXml> element that the current recipient can decrypt to retrieve a decryption key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceData">
      <MemberSignature Language="C#" Value="public void ReplaceData (System.Xml.XmlElement inputElement, byte[] decryptedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReplaceData(class System.Xml.XmlElement inputElement, unsigned int8[] decryptedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(System.Xml.XmlElement,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceData (inputElement As XmlElement, decryptedData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplaceData(System::Xml::XmlElement ^ inputElement, cli::array &lt;System::Byte&gt; ^ decryptedData);" />
      <MemberSignature Language="F#" Value="member this.ReplaceData : System.Xml.XmlElement * byte[] -&gt; unit" Usage="encryptedXml.ReplaceData (inputElement, decryptedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="decryptedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="inputElement"><span data-ttu-id="eb2c0-391">要取代的 <see langword="&lt;EncryptedData&gt;" /> 項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-391">The <see langword="&lt;EncryptedData&gt;" /> element to replace.</span></span></param>
        <param name="decryptedData"><span data-ttu-id="eb2c0-392">用來取代 <paramref name="inputElement" /> 的解密資料。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-392">The decrypted data to replace <paramref name="inputElement" /> with.</span></span></param>
        <summary><span data-ttu-id="eb2c0-393">以指定的解密位元組序列，取代 <see langword="&lt;EncryptedData&gt;" /> 項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-393">Replaces an <see langword="&lt;EncryptedData&gt;" /> element with a specified decrypted sequence of bytes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-394"><xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData%2A>方法取代`<EncryptedData>`的值的項目`decryptedData`參數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-394">The <xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData%2A> method replaces an `<EncryptedData>` element with the value of the `decryptedData` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-395">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-395">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-396">此範例不包含任何金鑰資訊加密的 XML 文件中。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-396">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb2c0-397"><paramref name="inputElement" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-397">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb2c0-398">-或-</span><span class="sxs-lookup"><span data-stu-id="eb2c0-398">-or-</span></span> 
<span data-ttu-id="eb2c0-399"><paramref name="decryptedData" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-399">The value of the <paramref name="decryptedData" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceElement">
      <MemberSignature Language="C#" Value="public static void ReplaceElement (System.Xml.XmlElement inputElement, System.Security.Cryptography.Xml.EncryptedData encryptedData, bool content);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReplaceElement(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.Xml.EncryptedData encryptedData, bool content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(System.Xml.XmlElement,System.Security.Cryptography.Xml.EncryptedData,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReplaceElement(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, bool content);" />
      <MemberSignature Language="F#" Value="static member ReplaceElement : System.Xml.XmlElement * System.Security.Cryptography.Xml.EncryptedData * bool -&gt; unit" Usage="System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement (inputElement, encryptedData, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" />
        <Parameter Name="content" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputElement"><span data-ttu-id="eb2c0-400">要以 <see langword="&lt;EncryptedData&gt;" /> 項目取代的項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-400">The element to replace with an <see langword="&lt;EncryptedData&gt;" /> element.</span></span></param>
        <param name="encryptedData"><span data-ttu-id="eb2c0-401">要用來取代 <paramref name="inputElement" /> 參數的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-401">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object to replace the <paramref name="inputElement" /> parameter with.</span></span></param>
        <param name="content"><span data-ttu-id="eb2c0-402"><see langword="true" /> 表示只取代項目的內容，<see langword="false" /> 表示取代整個項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-402"><see langword="true" /> to replace only the contents of the element; <see langword="false" /> to replace the entire element.</span></span></param>
        <summary><span data-ttu-id="eb2c0-403">以指定的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 物件，取代指定的項目。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-403">Replaces the specified element with the specified <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-404"><xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement%2A>方法取代`inputElement`參數所指定的值與`encryptedData`參數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-404">The <xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement%2A> method replaces the `inputElement` parameter with the value specified by the `encryptedData` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-405">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-405">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-406">此範例不包含任何金鑰資訊加密的 XML 文件中。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-406">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb2c0-407"><paramref name="inputElement" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-407">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb2c0-408">-或-</span><span class="sxs-lookup"><span data-stu-id="eb2c0-408">-or-</span></span> 
<span data-ttu-id="eb2c0-409"><paramref name="encryptedData" /> 參數的值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-409">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver Resolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver Resolver" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public Property Resolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ Resolver { System::Xml::XmlResolver ^ get(); void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resolver : System.Xml.XmlResolver with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.Resolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-410">取得或設定 <see cref="T:System.Xml.XmlResolver" /> 物件，文件物件模型 (DOM) 使用這個物件來解析外部 XML 參考。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-410">Gets or sets the <see cref="T:System.Xml.XmlResolver" /> object used by the Document Object Model (DOM) to resolve external XML references.</span></span></summary>
        <value><span data-ttu-id="eb2c0-411"><see cref="T:System.Xml.XmlResolver" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-411">An <see cref="T:System.Xml.XmlResolver" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-412">此屬性包含<xref:System.Xml.XmlResolver>用來解析外部 XML 資源，例如實體、 文件類型定義 (Dtd) 或結構描述的物件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-412">This property contains an <xref:System.Xml.XmlResolver> object used to resolve external XML resources such as entities, document type definitions (DTDs), or schemas.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDSigSearchDepth">
      <MemberSignature Language="C#" Value="public int XmlDSigSearchDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 XmlDSigSearchDepth" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDSigSearchDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int XmlDSigSearchDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDSigSearchDepth : int with get, set" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-413">取得或設定 XML 數位簽章的遞迴深度，以防止無限遞迴和堆疊溢位。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-413">Gets or sets the XML digital signature recursion depth to prevent infinite recursion and stack overflow.</span></span> <span data-ttu-id="eb2c0-414">如果 XML 數位簽章包含回頭指向原始 XML 的 URI，就可能發生這種狀況。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-414">This might happen if the digital signature XML contains the URI which then points back to the original XML.</span></span></summary>
        <value><span data-ttu-id="eb2c0-415">傳回 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-415">Returns <see cref="T:System.Int32" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES128KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES128KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES128KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES128KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES128KeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES128KeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-416">代表 128 位元進階加密標準 (AES) 金鑰包裝演算法 (又稱為 Rijndael 金鑰包裝演算法) 的命名空間統一資源識別元 (URI)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-416">Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span></span> <span data-ttu-id="eb2c0-417">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-417">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-418">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl>欄位是 「http://www.w3.org/2001/04/xmlenc#kw-aes128"。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-418">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-aes128".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES128Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES128Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES128Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES128Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES128Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES128Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-419">代表 128 位元進階加密標準 (AES) 演算法 (又稱為 Rijndael 演算法) 的命名空間統一資源識別元 (URI)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-419">Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span></span> <span data-ttu-id="eb2c0-420">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-420">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-421">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url>欄位是 「http://www.w3.org/2001/04/xmlenc#aes128-cbc"。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-421">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url> field is "http://www.w3.org/2001/04/xmlenc#aes128-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-422">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-422">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-423">此範例不包含任何金鑰資訊加密的 XML 文件中。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-423">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES192KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES192KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES192KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES192KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES192KeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES192KeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-424">代表 192 位元進階加密標準 (AES) 金鑰包裝演算法 (又稱為 Rijndael 金鑰包裝演算法) 的命名空間統一資源識別元 (URI)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-424">Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span></span> <span data-ttu-id="eb2c0-425">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-425">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-426">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl>欄位是 「http://www.w3.org/2001/04/xmlenc#kw-aes192"。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-426">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-aes192".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES192Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES192Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES192Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES192Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES192Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES192Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-427">代表 192 位元進階加密標準 (AES) 演算法 (又稱為 Rijndael 演算法) 的命名空間統一資源識別元 (URI)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-427">Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span></span> <span data-ttu-id="eb2c0-428">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-428">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-429">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url>欄位是 「http://www.w3.org/2001/04/xmlenc#aes192-cbc"。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-429">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url> field is "http://www.w3.org/2001/04/xmlenc#aes192-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-430">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-430">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-431">此範例不包含任何金鑰資訊加密的 XML 文件中。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-431">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES256KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES256KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES256KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES256KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES256KeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES256KeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-432">代表 256 位元進階加密標準 (AES) 金鑰包裝演算法 (又稱為 Rijndael 金鑰包裝演算法) 的命名空間統一資源識別元 (URI)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-432">Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span></span> <span data-ttu-id="eb2c0-433">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-433">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-434">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl>欄位是 「http://www.w3.org/2001/04/xmlenc#kw-aes256"。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-434">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-aes256".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES256Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES256Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncAES256Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-435">代表 256 位元進階加密標準 (AES) 演算法 (又稱為 Rijndael 演算法) 的命名空間統一資源識別元 (URI)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-435">Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span></span> <span data-ttu-id="eb2c0-436">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-436">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-437">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url>欄位是 「http://www.w3.org/2001/04/xmlenc#aes256-cbc"。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-437">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url> field is "http://www.w3.org/2001/04/xmlenc#aes256-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-438">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-438">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-439">此範例不包含任何金鑰資訊加密的 XML 文件中。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-439">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncDESUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncDESUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncDESUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncDESUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncDESUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncDESUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-440">代表數位加密標準 (DES) 演算法的命名空間統一資源識別元 (URI)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-440">Represents the namespace Uniform Resource Identifier (URI) for the Digital Encryption Standard (DES) algorithm.</span></span> <span data-ttu-id="eb2c0-441">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-441">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-442">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl>欄位是 「http://www.w3.org/2001/04/xmlenc#des-cbc"。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-442">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl> field is "http://www.w3.org/2001/04/xmlenc#des-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-443">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-443">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-444">此範例不包含任何金鑰資訊加密的 XML 文件中。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-444">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncElementContentUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncElementContentUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncElementContentUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncElementContentUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncElementContentUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncElementContentUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-445">代表 XML 加密項目內容的命名空間統一資源識別元 (URI)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-445">Represents the namespace Uniform Resource Identifier (URI) for XML encryption element content.</span></span> <span data-ttu-id="eb2c0-446">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-446">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-447">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl>欄位是 「http://www.w3.org/2001/04/xmlenc#Content"。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-447">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl> field is "http://www.w3.org/2001/04/xmlenc#Content".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncElementUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncElementUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncElementUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncElementUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncElementUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncElementUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-448">代表 XML 加密項目的命名空間統一資源識別元 (URI)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-448">Represents the namespace Uniform Resource Identifier (URI) for an XML encryption element.</span></span> <span data-ttu-id="eb2c0-449">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-449">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-450">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl>欄位是 「http://www.w3.org/2001/04/xmlenc#Element"。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-450">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl> field is "http://www.w3.org/2001/04/xmlenc#Element".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-451">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-451">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-452">此範例不包含任何金鑰資訊加密的 XML 文件中。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-452">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncEncryptedKeyUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncEncryptedKeyUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncEncryptedKeyUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncEncryptedKeyUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncEncryptedKeyUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncEncryptedKeyUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-453">代表 XML 加密 <see langword="&lt;EncryptedKey&gt;" /> 項目的命名空間統一資源識別元 (URI)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-453">Represents the namespace Uniform Resource Identifier (URI) for the XML encryption <see langword="&lt;EncryptedKey&gt;" /> element.</span></span> <span data-ttu-id="eb2c0-454">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-454">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-455">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl>欄位是 「http://www.w3.org/2001/04/xmlenc#EncryptedKey"。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-455">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl> field is "http://www.w3.org/2001/04/xmlenc#EncryptedKey".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncNamespaceUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncNamespaceUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncNamespaceUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncNamespaceUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncNamespaceUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncNamespaceUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-456">代表 XML 加密語法和處理的命名空間統一資源識別元 (URI)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-456">Represents the namespace Uniform Resource Identifier (URI) for XML encryption syntax and processing.</span></span> <span data-ttu-id="eb2c0-457">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-457">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-458">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl>欄位是 「http://www.w3.org/2001/04/xmlenc#"。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-458">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl> field is "http://www.w3.org/2001/04/xmlenc#".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncRSA15Url">
      <MemberSignature Language="C#" Value="public const string XmlEncRSA15Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncRSA15Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncRSA15Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncRSA15Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncRSA15Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-459">代表 RSA Public Key Cryptography Standard (PKCS) 1.5 版演算法的命名空間統一資源識別元 (URI)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-459">Represents the namespace Uniform Resource Identifier (URI) for the RSA Public Key Cryptography Standard (PKCS) Version 1.5 algorithm.</span></span> <span data-ttu-id="eb2c0-460">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-460">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-461">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>欄位是 「http://www.w3.org/2001/04/xmlenc#rsa-1_5"。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-461">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> field is "http://www.w3.org/2001/04/xmlenc#rsa-1_5".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-462">下列程式碼範例示範如何加密使用非對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-462">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="eb2c0-463">此範例會建立對稱工作階段金鑰來加密文件，並再將 XML 文件中內嵌的工作階段金鑰的加密的版本會使用非對稱金鑰。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-463">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncRSAOAEPUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncRSAOAEPUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncRSAOAEPUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncRSAOAEPUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncRSAOAEPUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncRSAOAEPUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-464">代表 RSA Optimal Asymmetric Encryption Padding (OAEP) 加密演算法的命名空間統一資源識別元 (URI)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-464">Represents the namespace Uniform Resource Identifier (URI) for the RSA Optimal Asymmetric Encryption Padding (OAEP) encryption algorithm.</span></span> <span data-ttu-id="eb2c0-465">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-465">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-466">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>欄位是 「http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p"。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-466">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> field is "http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncSHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlEncSHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncSHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncSHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncSHA256Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncSHA256Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-467">代表 SHA-256 演算法的命名空間統一資源識別元 (URI)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-467">Represents the namespace Uniform Resource Identifier (URI) for the SHA-256 algorithm.</span></span> <span data-ttu-id="eb2c0-468">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-468">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-469">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url>欄位是 「http://www.w3.org/2001/04/xmlenc#sha256"。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-469">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url> field is "http://www.w3.org/2001/04/xmlenc#sha256".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncSHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlEncSHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncSHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncSHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncSHA512Url;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncSHA512Url : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-470">代表 SHA-512 演算法的命名空間統一資源識別元 (URI)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-470">Represents the namespace Uniform Resource Identifier (URI) for the SHA-512 algorithm.</span></span> <span data-ttu-id="eb2c0-471">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-471">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-472">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url>欄位是 「http://www.w3.org/2001/04/xmlenc#sha512"。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-472">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url> field is "http://www.w3.org/2001/04/xmlenc#sha512".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncTripleDESKeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncTripleDESKeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncTripleDESKeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncTripleDESKeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncTripleDESKeyWrapUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncTripleDESKeyWrapUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-473">代表 TRIPLEDES 金鑰包裝演算法的命名空間統一資源識別元 (URI)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-473">Represents the namespace Uniform Resource Identifier (URI) for the TRIPLEDES key wrap algorithm.</span></span> <span data-ttu-id="eb2c0-474">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-474">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-475">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl>欄位是 「http://www.w3.org/2001/04/xmlenc#kw-tripledes"。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-475">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-tripledes".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncTripleDESUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncTripleDESUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncTripleDESUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncTripleDESUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncTripleDESUrl;" />
      <MemberSignature Language="F#" Value="val mutable XmlEncTripleDESUrl : string" Usage="System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb2c0-476">代表三重 DES 演算法的命名空間統一資源識別元 (URI)。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-476">Represents the namespace Uniform Resource Identifier (URI) for the Triple DES algorithm.</span></span> <span data-ttu-id="eb2c0-477">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-477">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb2c0-478">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl>欄位是 「http://www.w3.org/2001/04/xmlenc#tripledes-cbc"。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-478">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl> field is "http://www.w3.org/2001/04/xmlenc#tripledes-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb2c0-479">下列程式碼範例示範如何加密使用對稱金鑰的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-479">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="eb2c0-480">此範例不包含任何金鑰資訊加密的 XML 文件中。</span><span class="sxs-lookup"><span data-stu-id="eb2c0-480">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>