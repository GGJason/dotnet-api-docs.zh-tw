<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlLicenseTransform.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac536b3cef52db5c23dd1d8ffbfc2acc8bbe2e63459.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36b3cef52db5c23dd1d8ffbfc2acc8bbe2e63459</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
          <source>Represents the license transform algorithm used to normalize XrML licenses for signatures.</source>
          <target state="translated">表示用來正規化簽章 XrML 授權的授權轉換演算法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class represents the license transform algorithm as defined in the MPEG Rights Extension Language (MPEG REL).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph>類別代表授權轉換演算法 MPEG 權限延伸模組 (MPEG REL) 語言中所定義。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class to transform XrML licenses for signatures.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph>轉換 XrML 授權簽章的類別。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
          <source>The Uniform Resource Identifier (URI) that describes the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class is defined by the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl&gt;</ph> field.</source>
          <target state="translated">描述統一資源識別元 (URI)<ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph>類別由定義<ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl&gt;</ph>欄位。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
          <source>The following code example shows how to validate an XML digital signature using the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class.</source>
          <target state="translated">下列程式碼範例示範如何驗證 XML 數位簽章使用<ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph>介面和<ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor">
          <source>Gets or sets the decryptor of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">取得或設定目前 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 的解密子。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor">
          <source>The decryptor of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 物件的解密子。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> object uses an <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph> interface to decrypt <ph id="ph3">`&lt;encryptedGrant&gt;`</ph> elements from the current <ph id="ph4">`&lt;license&gt;`</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph>物件會使用<ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph>介面，以解密<ph id="ph3">`&lt;encryptedGrant&gt;`</ph>從目前的項目<ph id="ph4">`&lt;license&gt;`</ph>項目。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor">
          <source>The following code example shows how to validate an XML digital signature using the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class.</source>
          <target state="translated">下列程式碼範例示範如何驗證 XML 數位簽章使用<ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.IRelDecryptor&gt;</ph>介面和<ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml">
          <source>Returns an XML representation of the parameters of an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object that are suitable to be included as subelements of an XMLDSIG <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 物件參數的 XML 表示，此物件適合納入為 XMLDSIG <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> 項目的子項目。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml">
          <source>A list of the XML nodes that represent the transform-specific content needed to describe the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object in an XMLDSIG <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">XML 節點的清單，代表 XMLDSIG <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> 項目中描述目前 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 物件所需要的轉換特定內容。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
          <source>Returns the output of an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 物件的輸出。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput">
          <source>Returns the output of an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 物件的輸出。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput">
          <source>The output of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 物件的輸出。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput">
          <source>The type of the returned object must be <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</source>
          <target state="translated">傳回物件的類型必須是<ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)">
          <source>The type of the output to return.</source>
          <target state="translated">要傳回的輸出型別。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)">
          <source><ph id="ph1">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph> is the only valid type for this parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph> 是這個參數唯一有效的型別。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)">
          <source>Returns the output of an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 物件的輸出。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)">
          <source>The output of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 物件的輸出。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter is not an <ph id="ph2">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 參數不是 <ph id="ph2">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes">
          <source>Gets an array of types that are valid inputs to the <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> method of the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">取得型別陣列，其為目前 <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> 物件之 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 方法的有效輸入。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes">
          <source>An array of types that are valid inputs to the <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> method of the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object; you can pass only objects of one of these types to the <ph id="ph3">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> method of the current <ph id="ph4">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> 物件的 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 方法之有效輸入型別陣列；您可以只將其中一種型別的物件傳遞到目前 <ph id="ph3">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> 物件的 <ph id="ph4">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes">
          <source>The only valid input type to the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class is <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</source>
          <target state="translated">唯一有效的輸入型別至<ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph>類別是<ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> object that encapsulates the transform to load into the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">封裝要載入至目前 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> 物件的<ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)">
          <source>Parses the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> object as transform-specific content of a <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> element; this method is not supported because the <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object has no inner XML elements.</source>
          <target state="translated">將指定的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> 物件剖析為 <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> 項目的轉換特定內容；這個方法不受支援，因為 <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 物件並沒有內部的 XML 項目。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>The input to load into the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">要載入至目前 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 物件的輸入。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>The type of the input object must be <ph id="ph1">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph>.</source>
          <target state="translated">輸入物件的型別必須是 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDocument" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>Loads the specified input into the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">將指定的輸入載入目前的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>The context was not set before this transform was invoked.</source>
          <target state="translated">在叫用此轉換之前，並不會設定內容。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>The <ph id="ph1">&lt;see langword="&amp;lt;issuer&amp;gt;" /&gt;</ph> element was not set before this transform was invoked.</source>
          <target state="translated">在叫用此轉換之前，並不會設定 <ph id="ph1">&lt;see langword="&amp;lt;issuer&amp;gt;" /&gt;</ph> 項目。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>The <ph id="ph1">&lt;see langword="&amp;lt;license&amp;gt;" /&gt;</ph> element was not set before this transform was invoked.</source>
          <target state="translated">在叫用此轉換之前，並不會設定 <ph id="ph1">&lt;see langword="&amp;lt;license&amp;gt;" /&gt;</ph> 項目。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" /&gt;</ph> property was not set before this transform was invoked.</source>
          <target state="translated">在叫用此轉換之前，並不會設定 <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes">
          <source>Gets an array of types that are valid outputs from the <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> method of the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">取得可以從目前 <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /&gt;</ph> 物件的 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 方法有效輸出的型別陣列。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes">
          <source>An array of valid output types for the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object; only objects of one of these types are returned from the <ph id="ph2">&lt;see cref="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput" /&gt;</ph> methods of the current <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> object.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 物件的有效輸出型別陣列；只有其中一種型別的物件會從目前 <ph id="ph2">&lt;see cref="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput" /&gt;</ph> 物件的 <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /&gt;</ph> 方法傳回。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes">
          <source>The only valid output type to the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class is <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</source>
          <target state="translated">唯一有效的輸出類型<ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph>類別是<ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>