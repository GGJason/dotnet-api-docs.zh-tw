<Type Name="Transform" FullName="System.Security.Cryptography.Xml.Transform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6de7a5dfee0217f1935526e863bc8e0acf12e65c" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39976491" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Transform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Transform" />
  <TypeSignature Language="C++ CLI" Value="public ref class Transform abstract" />
  <TypeSignature Language="F#" Value="type Transform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示抽象基底類別，可用於 XML 數位簽章的所有 <see langword="&lt;Transform&gt;" /> 項目都是自其衍生。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當執行 XML 簽署和驗證，<`Transform`> 元素會描述如何簽署者轉換已簽署的資料物件。  文件檢查器接著會使用 <`Transform`> 項目相同的方式轉換的帶正負號的資料。  如果驗證器無法轉換的帶正負號的資料相同的方式，就無法驗證文件。  
  
 使用衍生自類別<xref:System.Security.Cryptography.Xml.Transform>類別，每當您需要將一或多個轉換物件新增加密的 XML 文件或帶正負號的 XML 文件。  
  
 如需詳細資訊`<Transform>`項目，請參閱 XMLDSIG 規格，也就是可從在 www.w3.org/TR/xmldsig-core/ World Wide Web Consortium (W3C) 或可從位於 www.w3.org W3C XML 加密規格/ TR/xmlenc-core /。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Transform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public string Algorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.Algorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property Algorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Algorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Algorithm : string with get, set" Usage="System.Security.Cryptography.Xml.Transform.Algorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定統一資源識別元 (URI)，它識別了目前轉換所執行的演算法。</summary>
        <value>URL，辨識目前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件所執行的演算法。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性會對應至<xref:System.Security.Cryptography.Xml.Transform.Algorithm%2A>屬性的`<Transform>`XMLDSIG 簽章中的項目。 比方說，此演算法的 URI Base64 解碼的轉換定義為http://www.w3.org/2000/09/xmldsig#base64XMLDSIG 規格 （章節 6.6.2） 中。  
  
 為了方便起見，您可以設定此值使用其中一個相關聯的靜態欄位<xref:System.Security.Cryptography.Xml.SignedXml>類別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Context" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlElement ^ Context { System::Xml::XmlElement ^ get(); void set(System::Xml::XmlElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Xml.XmlElement with get, set" Usage="System.Security.Cryptography.Xml.Transform.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Xml.XmlElement" /> 物件，表示目前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件在其下執行的文件內容。</summary>
        <value>
          <see cref="T:System.Xml.XmlElement" /> 物件，表示目前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件在其下執行的文件內容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當簽署文件、<xref:System.Security.Cryptography.Xml.Transform.Context%2A>屬性表示的值傳遞至<xref:System.Security.Cryptography.Xml.SignedXml>建構函式。  驗證文件時<xref:System.Security.Cryptography.Xml.Transform.Context%2A>屬性表示<xref:System.Security.Cryptography.Xml.Signature>物件。  
  
 <xref:System.Security.Cryptography.Xml.Transform.Context%2A>期間簽章計算和檢查，但在叫用轉換之前，會自動設定 「 屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigestedOutput">
      <MemberSignature Language="C#" Value="public virtual byte[] GetDigestedOutput (System.Security.Cryptography.HashAlgorithm hash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDigestedOutput(class System.Security.Cryptography.HashAlgorithm hash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDigestedOutput (hash As HashAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDigestedOutput(System::Security::Cryptography::HashAlgorithm ^ hash);" />
      <MemberSignature Language="F#" Value="abstract member GetDigestedOutput : System.Security.Cryptography.HashAlgorithm -&gt; byte[]&#xA;override this.GetDigestedOutput : System.Security.Cryptography.HashAlgorithm -&gt; byte[]" Usage="transform.GetDigestedOutput hash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Security.Cryptography.HashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="hash">用來建立摘要的 <see cref="T:System.Security.Cryptography.HashAlgorithm" /> 物件。</param>
        <summary>在衍生類別中覆寫時，傳回與 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件關聯的摘要。</summary>
        <returns>與 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件關聯的摘要。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected abstract System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetInnerXml" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetInnerXml () As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Xml::XmlNodeList ^ GetInnerXml();" />
      <MemberSignature Language="F#" Value="abstract member GetInnerXml : unit -&gt; System.Xml.XmlNodeList" Usage="transform.GetInnerXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，則傳回 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件 (適合納入為 XMLDSIG <see langword="&lt;Transform&gt;" /> 項目的子項目) 參數的 XML 表示。</summary>
        <returns>XML 節點的清單，代表 XMLDSIG <see langword="&lt;Transform&gt;" /> 項目中描述目前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件所需要的轉換特定內容。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 如果<xref:System.Security.Cryptography.Xml.Transform>物件代表使用 XPath 運算式的 XPath 轉換`self::text()`，呼叫<xref:System.Security.Cryptography.Xml.Transform.GetInnerXml%2A>導致<xref:System.Xml.XmlNodeList>物件，表示下列的 XML 項目：  
  
```  
<XPath>   
  self::text()   
</XPath>  
```  
  
 這個項目對應至轉換特定內容的`<Transform>`區段 4.3.3.4 XMLDSIG 規格中所定義的項目。 上述的 XPath 轉換整個`<Transform>`項目如下所示：  
  
```  
<Transform Algorithm="http://www.w3.org/TR/1999/REC-xpath-19991116">   
  <XPath>   
    self::text()   
  </XPath>   
</Transform>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOutput">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回目前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件的輸出。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public abstract object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetOutput" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetOutput () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetOutput();" />
      <MemberSignature Language="F#" Value="abstract member GetOutput : unit -&gt; obj" Usage="transform.GetOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，傳回目前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件的輸出。</summary>
        <returns>目前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件的輸出。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public abstract object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetOutput(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetOutput : Type -&gt; obj" Usage="transform.GetOutput type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要傳回的輸出型別。 這必須是 <see cref="P:System.Security.Cryptography.Xml.Transform.OutputTypes" /> 屬性的其中一個型別。</param>
        <summary>在衍生類別中覆寫時，傳回目前特定型別 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件的輸出。</summary>
        <returns>做為指定型別之物件的目前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件輸出。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.Transform.GetOutput%2A>方法會傳回目前轉換的輸出，執行先前的呼叫所設定的值之後<xref:System.Security.Cryptography.Xml.Transform.LoadInput%2A>方法。  
  
 傳回物件的類型必須是其中一項中的型別物件<xref:System.Security.Cryptography.Xml.Transform.OutputTypes%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="member this.GetXml : unit -&gt; System.Xml.XmlElement" Usage="transform.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回目前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件的 XML 表示。</summary>
        <returns>目前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件的 XML 表示。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlElement>這個方法所傳回的物件符合 XML 結構描述，如`<Transform>`區段 4.3.3.4 XMLDSIG 規格中定義的項目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public abstract Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.InputTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property InputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property cli::array &lt;Type ^&gt; ^ InputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputTypes : Type[]" Usage="System.Security.Cryptography.Xml.Transform.InputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，取得型別的陣列，這些型別是目前 <see cref="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)" /> 物件 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 方法的有效輸入。</summary>
        <value>目前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件的有效輸入型別陣列；您可以只將其中一種型別的物件傳遞到目前 <see cref="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)" /> 物件的 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 方法。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所傳回的陣列<xref:System.Security.Cryptography.Xml.Transform.InputTypes%2A>屬性必須包含至少一個項目，因為每個<xref:System.Security.Cryptography.Xml.Transform>物件必須接受做為有效的輸入至少一個類型。  
  
 A<xref:System.Security.Cryptography.Xml.Transform>物件通常會接受一或多個下列類型做為輸入： <xref:System.IO.Stream>， <xref:System.Xml.XmlDocument>，或<xref:System.Xml.XmlNodeList>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public abstract void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub LoadInnerXml (nodeList As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LoadInnerXml(System::Xml::XmlNodeList ^ nodeList);" />
      <MemberSignature Language="F#" Value="abstract member LoadInnerXml : System.Xml.XmlNodeList -&gt; unit" Usage="transform.LoadInnerXml nodeList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">
          <see cref="T:System.Xml.XmlNodeList" /> 物件，會指定目前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件的轉換特定內容。</param>
        <summary>在衍生類別中覆寫時，將指定的 <see cref="T:System.Xml.XmlNodeList" /> 物件剖析為 <see langword="&lt;Transform&gt;" /> 項目的轉換特定內容，並將目前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件的內部狀態設定成與 <see langword="&lt;Transform&gt;" /> 項目相符。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法用來處理的子元素`<Transform>`項目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public abstract void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub LoadInput (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LoadInput(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member LoadInput : obj -&gt; unit" Usage="transform.LoadInput obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要載入至目前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件的輸入。</param>
        <summary>在衍生類別中覆寫時，將指定輸入載入目前的 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 輸入物件的類型必須是其中一項中的型別<xref:System.Security.Cryptography.Xml.Transform.InputTypes%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public abstract Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.OutputTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OutputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property cli::array &lt;Type ^&gt; ^ OutputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputTypes : Type[]" Usage="System.Security.Cryptography.Xml.Transform.OutputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，取得型別的陣列，這些型別為目前 <see cref="M:System.Security.Cryptography.Xml.Transform.GetOutput" /> 之 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 方法的可能輸出。</summary>
        <value>目前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 物件的有效輸出型別陣列；只有其中一種型別的物件會從目前 <see cref="M:System.Security.Cryptography.Xml.Transform.GetOutput" /> 物件的 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 方法傳回。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所傳回的陣列<xref:System.Security.Cryptography.Xml.Transform.OutputTypes%2A>屬性必須包含至少一個項目，因為每個轉換必須產生做為輸出的至少一個類型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropagatedNamespaces">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable PropagatedNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable PropagatedNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropagatedNamespaces As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Hashtable ^ PropagatedNamespaces { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropagatedNamespaces : System.Collections.Hashtable" Usage="System.Security.Cryptography.Xml.Transform.PropagatedNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Collections.Hashtable" /> 物件，內含傳送至簽章的命名空間。</summary>
        <value>
          <see cref="T:System.Collections.Hashtable" /> 物件，內含傳送至簽章的命名空間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML 命名空間用來區分不同文件中具有相同名稱的不同元素。  
  
 <xref:System.Collections.Hashtable>的索引鍵<xref:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces%2A>屬性是命名空間前置詞和<xref:System.Collections.Hashtable>的值為命名空間統一資源識別元 (Uri)。  
  
 <xref:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces%2A>期間簽章計算和檢查，但在叫用轉換之前，會自動設定 「 屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces" /> 屬性被設定為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver Resolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver Resolver" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public Property Resolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ Resolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resolver : System.Xml.XmlResolver" Usage="System.Security.Cryptography.Xml.Transform.Resolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>設定目前的 <see cref="T:System.Xml.XmlResolver" /> 物件。</summary>
        <value>目前的 <see cref="T:System.Xml.XmlResolver" /> 物件。 這個屬性預設值為 <see cref="T:System.Xml.XmlSecureResolver" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlResolver>類別會解析外部 XML 資源，名為的統一資源識別元 (URI)。 如果您不信任的來源 XML 檔案，您可能不想允許 XML 檔，以存取由 URI 命名的電腦資源。 <xref:System.Security.Cryptography.Xml.Transform.Resolver%2A>屬性可讓您控制的電腦資源已藉由指定不同的 XML 檔案的存取層級<xref:System.Xml.XmlResolver>物件。 如果您不想允許任何存取權，您可以設定此屬性`null`(`Nothing` Visual Basic 中)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>