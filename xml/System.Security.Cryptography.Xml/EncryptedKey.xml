<Type Name="EncryptedKey" FullName="System.Security.Cryptography.Xml.EncryptedKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a6a29223e15fa319777a417ce2690c66b7e8d4cf" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="40449640" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EncryptedKey : System.Security.Cryptography.Xml.EncryptedType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncryptedKey extends System.Security.Cryptography.Xml.EncryptedType" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncryptedKey&#xA;Inherits EncryptedType" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedKey sealed : System::Security::Cryptography::Xml::EncryptedType" />
  <TypeSignature Language="F#" Value="type EncryptedKey = class&#xA;    inherit EncryptedType" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.EncryptedType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 XML 加密中的 <see langword="&lt;EncryptedKey&gt;" /> 項目。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此類別代表`<EncryptedKey>`XML 加密中的項目。 `<EncryptedKey>`項目用來傳送加密金鑰。 它可以建立獨立的 XML 文件中、 位於應用程式的文件，或在內`<EncryptedData>`的子系的項目`<KeyInfo>`項目。 索引鍵的值一律會加密的收件者。 當`<EncryptedKey>`是解密，產生的索引鍵會提供給`<EncryptionMethod>`演算法不需要任何額外的處理。  
  
 `<EncryptedKey>`項目是類似`<EncryptedData>`項目<xref:System.Security.Cryptography.Xml.EncryptedData>類別不同之處在於加密的資料一律是金鑰的值。  
  
   
  
## Examples  
 下列範例說明如何加密和解密 XML 項目使用<xref:System.Security.Cryptography.Xml.EncryptedKey>類別。 此範例接著會顯示的各種屬性的值<xref:System.Security.Cryptography.Xml.EncryptedKey>類別到主控台。  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式建立的新執行個體<xref:System.Security.Cryptography.Xml.EncryptedKey>類別。 如需有關 XML 加密標準的詳細資訊，請參閱 XML 加密語法和處理文件，在http://www.w3.org/TR/xmlenc-core/。  
  
   
  
## Examples  
 下列範例說明如何加密和解密 XML 項目使用<xref:System.Security.Cryptography.Xml.EncryptedKey>類別。 此範例接著會顯示的各種屬性的值<xref:System.Security.Cryptography.Xml.EncryptedKey>類別到主控台。  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddReference">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>新增參考元素到 <see langword="&amp;lt;ReferenceList&amp;gt;" /> 元素。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddReference">
      <MemberSignature Language="C#" Value="public void AddReference (System.Security.Cryptography.Xml.DataReference dataReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReference(class System.Security.Cryptography.Xml.DataReference dataReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddReference(System::Security::Cryptography::Xml::DataReference ^ dataReference);" />
      <MemberSignature Language="F#" Value="member this.AddReference : System.Security.Cryptography.Xml.DataReference -&gt; unit" Usage="encryptedKey.AddReference dataReference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataReference" Type="System.Security.Cryptography.Xml.DataReference" />
      </Parameters>
      <Docs>
        <param name="dataReference">要新增至 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 屬性的 <see cref="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" /> 物件。</param>
        <summary>將 <see langword="&lt;DataReference&gt;" /> 項目新增至 <see langword="&lt;ReferenceList&gt;" /> 項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會加入<xref:System.Security.Cryptography.Xml.DataReference>物件至<xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A>屬性<xref:System.Security.Cryptography.Xml.EncryptedKey>物件。 `<DataReference>`項目指向使用中指定的金鑰加密的加密資料`<EncryptedKey>`項目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddReference">
      <MemberSignature Language="C#" Value="public void AddReference (System.Security.Cryptography.Xml.KeyReference keyReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReference(class System.Security.Cryptography.Xml.KeyReference keyReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddReference(System::Security::Cryptography::Xml::KeyReference ^ keyReference);" />
      <MemberSignature Language="F#" Value="member this.AddReference : System.Security.Cryptography.Xml.KeyReference -&gt; unit" Usage="encryptedKey.AddReference keyReference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyReference" Type="System.Security.Cryptography.Xml.KeyReference" />
      </Parameters>
      <Docs>
        <param name="keyReference">要新增至 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 屬性的 <see cref="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" /> 物件。</param>
        <summary>將 <see langword="&lt;KeyReference&gt;" /> 項目新增至 <see langword="&lt;ReferenceList&gt;" /> 項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法會將 A<xref:System.Security.Cryptography.Xml.KeyReference>物件至<xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A>屬性<xref:System.Security.Cryptography.Xml.EncryptedKey>物件。 `<KeyReference>`項目會指向使用中指定的金鑰加密的加密金鑰`<EncryptedKey>`項目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CarriedKeyName">
      <MemberSignature Language="C#" Value="public string CarriedKeyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CarriedKeyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName" />
      <MemberSignature Language="VB.NET" Value="Public Property CarriedKeyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CarriedKeyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CarriedKeyName : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 XML 加密中選擇性的 <see langword="&lt;CarriedKeyName&gt;" /> 項目。</summary>
        <value>表示機碼值名稱的字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<CarriedKeyName>`項目是選擇性的項目關聯的使用者可讀名稱與金鑰值。 這個名稱可以再用來參考索引鍵使用`<KeyName>`內的項目`<KeyInfo>`項目。 相同`<CarriedKeyName>`識別碼值，不同的項目值可以單一文件中出現多次。 索引鍵的值必須是相同的所有`<EncryptedKey>`具有相同識別的項目`<CarriedKeyName>`XML 文件的名稱。 請注意，因為空白字元中佔有相當大的值`<KeyName>`項目，空白字元也是重要的值中`<CarriedKeyName>`項目。  
  
   
  
## Examples  
 下列範例說明如何加密和解密 XML 項目使用<xref:System.Security.Cryptography.Xml.EncryptedKey>類別。 此範例接著會顯示的各種屬性的值<xref:System.Security.Cryptography.Xml.EncryptedKey>類別到主控台。  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="override this.GetXml : unit -&gt; System.Xml.XmlElement" Usage="encryptedKey.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 物件的 XML 表示。</summary>
        <returns>
          <see cref="T:System.Xml.XmlElement" />，表示 XML 加密中的 <see langword="&lt;EncryptedKey&gt;" /> 項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個方法，輸出`<EncryptedKey>`XML 中的項目。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 值為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public override void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="override this.LoadXml : System.Xml.XmlElement -&gt; unit" Usage="encryptedKey.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Xml.XmlElement" />，代表要做為 <see langword="&lt;EncryptedKey&gt;" /> 項目使用的 XML 項目。</param>
        <summary>將指定的 XML 資訊載入 XML 加密的 <see langword="&lt;EncryptedKey&gt;" /> 項目中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法來載入至現有的 XML 項目`<EncryptedKey>`項目來表示<xref:System.Security.Cryptography.Xml.EncryptedData>物件。  
  
   
  
## Examples  
 下列範例說明如何加密和解密 XML 項目使用<xref:System.Security.Cryptography.Xml.EncryptedKey>類別。 此範例接著會顯示的各種屬性的值<xref:System.Security.Cryptography.Xml.EncryptedKey>類別到主控台。  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> 參數為 <see langword="null" />。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="value" /> 參數不包含 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> 項目。</exception>
      </Docs>
    </Member>
    <Member MemberName="Recipient">
      <MemberSignature Language="C#" Value="public string Recipient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Recipient" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedKey.Recipient" />
      <MemberSignature Language="VB.NET" Value="Public Property Recipient As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Recipient { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Recipient : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedKey.Recipient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 XML 加密中的選擇性 <see langword="Recipient" /> 屬性。</summary>
        <value>字串，表示 <see langword="Recipient" /> 屬性的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<Recipient>`屬性是選擇性屬性，其中包含這個加密的金鑰值適用於讓收件者的相關資訊。 其內容是相依的應用程式。  
  
   
  
## Examples  
 下列範例說明如何加密和解密 XML 項目使用<xref:System.Security.Cryptography.Xml.EncryptedKey>類別。 此範例接著會顯示的各種屬性的值<xref:System.Security.Cryptography.Xml.EncryptedKey>類別到主控台。  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceList">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.ReferenceList ReferenceList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.ReferenceList ReferenceList" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferenceList As ReferenceList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::ReferenceList ^ ReferenceList { System::Security::Cryptography::Xml::ReferenceList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferenceList : System.Security.Cryptography.Xml.ReferenceList" Usage="System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.ReferenceList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 XML 加密中的 <see langword="&lt;ReferenceList&gt;" /> 項目。</summary>
        <value>
          <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<ReferenceList>`項目是選擇性的項目，其中包含資料和使用此金鑰來加密金鑰的指標。 參考清單可以包含多個參考`<EncryptedKey>`並`<EncryptedData>`使用的項目`<KeyReference>`和`<DataReference>`元素分別。  
  
   
  
## Examples  
 下列範例說明如何加密和解密 XML 項目使用<xref:System.Security.Cryptography.Xml.EncryptedKey>類別。 此範例接著會顯示的各種屬性的值<xref:System.Security.Cryptography.Xml.EncryptedKey>類別到主控台。  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>