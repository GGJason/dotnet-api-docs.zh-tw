<Type Name="XmlDsigExcC14NTransform" FullName="System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
  <TypeSignature Language="C#" Value="public class XmlDsigExcC14NTransform : System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDsigExcC14NTransform extends System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDsigExcC14NTransform&#xA;Inherits Transform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDsigExcC14NTransform : System::Security::Cryptography::Xml::Transform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="792ea-101">表示數位簽章的獨佔 C14N XML 規範化轉換 (不包含註解)，如全球資訊網協會 (W3C) 所定義。</span><span class="sxs-lookup"><span data-stu-id="792ea-101">Represents the exclusive C14N XML canonicalization transform for a digital signature as defined by the World Wide Web Consortium (W3C), without comments.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="792ea-102"><xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>類別代表獨佔 C14N XML 規範化轉換沒有註解。</span><span class="sxs-lookup"><span data-stu-id="792ea-102">The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class represents the exclusive C14N XML canonicalization transform without comments.</span></span>  <span data-ttu-id="792ea-103">這個類別是類似於<xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>類別，允許以建立使用 XML 文件的標準格式摘要簽署。</span><span class="sxs-lookup"><span data-stu-id="792ea-103">This class is similar to the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class, which allows a signer to create a digest using the canonical form of an XML document.</span></span>  <span data-ttu-id="792ea-104">不過，<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>類別的祖系內容排除正式的子文件。</span><span class="sxs-lookup"><span data-stu-id="792ea-104">However, the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class excludes ancestor context from a canonicalized subdocument.</span></span>  
  
 <span data-ttu-id="792ea-105">使用<xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>類別，當您需要進行規範化 XML 子文件，使其獨立於其 XML 內容。</span><span class="sxs-lookup"><span data-stu-id="792ea-105">Use the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class when you need to canonicalize an XML subdocument so that it is independent from its XML context.</span></span> <span data-ttu-id="792ea-106">例如，應用程式如使用的 Web 服務簽署的 XML 中複雜的通訊協定通常需要 XML 規範化以這種方式。</span><span class="sxs-lookup"><span data-stu-id="792ea-106">For example, applications such as Web services that use signed XML within complex communication protocols often need to canonicalize XML in this manner.</span></span>  <span data-ttu-id="792ea-107">這類應用程式通常會將 XML 信封內各種動態建構的項目可以大幅變更文件，且會造成 XML 簽章驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="792ea-107">Such applications often envelop XML within various dynamically constructed elements, which can substantially change the document and cause XML signature verification to fail.</span></span>  <span data-ttu-id="792ea-108"><xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>類別來排除這類的上階內容從標準的子文件，以解決這個問題。</span><span class="sxs-lookup"><span data-stu-id="792ea-108">The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class solves this problem by excluding such ancestor context from the canonical subdocument.</span></span>  
  
 <span data-ttu-id="792ea-109">一般而言，您不會建立規範化轉換類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="792ea-109">Typically, you do not create a new instance of a canonicalization transform class.</span></span> <span data-ttu-id="792ea-110">若要指定規範化轉換，將說明要轉換的統一資源識別元 (URI)<xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A>屬性，這是從存取<xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="792ea-110">To specify a canonicalization transform, pass the Uniform Resource Identifier (URI) that describes a transform to the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A> property, which is accessible from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.</span></span> <span data-ttu-id="792ea-111">若要取得規範化轉換的參考，請使用<xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A>屬性，這是從存取<xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="792ea-111">To acquire a reference to the canonicalization transform, use the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A> property, which is accessible from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.</span></span>  
  
 <span data-ttu-id="792ea-112">您建立所需的規範化轉換類別的新執行個體時，才手動雜湊的 XML 文件，或使用您自己的標準化演算法。</span><span class="sxs-lookup"><span data-stu-id="792ea-112">You are required to create a new instance of a canonicalization transform class only when you want to manually hash an XML document or use your own canonicalization algorithm.</span></span>  
  
 <span data-ttu-id="792ea-113">描述 URI<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>類別由定義<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl>欄位。</span><span class="sxs-lookup"><span data-stu-id="792ea-113">The URI that describes the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> field.</span></span>  
  
 <span data-ttu-id="792ea-114">描述 URI<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>類別由定義<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl>欄位。</span><span class="sxs-lookup"><span data-stu-id="792ea-114">The URI that describes the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> field.</span></span>  
  
 <span data-ttu-id="792ea-115">如需獨佔 C14N 轉換的詳細資訊，請參閱 XMLDSIG 規格，可從在 www.w3.org/TR/xmldsig-core/ World Wide Web Consortium (W3C)。</span><span class="sxs-lookup"><span data-stu-id="792ea-115">For more information about the exclusive C14N transform, see the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/.</span></span> <span data-ttu-id="792ea-116">標準化演算法被定義在 W3C 標準 XML 規格中，將會位於 www.w3.org/2001/10/xml-exc-c14n。</span><span class="sxs-lookup"><span data-stu-id="792ea-116">The canonicalization algorithm is defined in the W3C Canonical XML specification, which is available at www.w3.org/2001/10/xml-exc-c14n.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="792ea-117">下列程式碼範例示範如何簽署 XML 文件與<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>類別使用信封簽章。</span><span class="sxs-lookup"><span data-stu-id="792ea-117">The following code example shows how to sign an XML document with the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class using an envelope signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.XmlDsigExcC14NTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.XML.XmlDsigExcC14NTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CS/example.cs#1)]
 [!code-vb[Cryptography.XML.XmlDsigExcC14NTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/VB/example.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="792ea-118">初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="792ea-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigExcC14NTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigExcC14NTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="792ea-119">初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="792ea-119">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigExcC14NTransform (bool includeComments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool includeComments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (includeComments As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigExcC14NTransform(bool includeComments);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="includeComments" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeComments">
          <span data-ttu-id="792ea-120">若要包含註解，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="792ea-120"><see langword="true" /> to include comments; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="792ea-121">初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 類別的新執行個體，此類別指定了用來判斷是否要包括註解的值。</span><span class="sxs-lookup"><span data-stu-id="792ea-121">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> class specifying a value that determines whether to include comments.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigExcC14NTransform (string inclusiveNamespacesPrefixList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string inclusiveNamespacesPrefixList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (inclusiveNamespacesPrefixList As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigExcC14NTransform(System::String ^ inclusiveNamespacesPrefixList);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inclusiveNamespacesPrefixList" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inclusiveNamespacesPrefixList"><span data-ttu-id="792ea-122">使用標準規範化演算法進行規範化的命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="792ea-122">The namespace prefixes to canonicalize using the standard canonicalization algorithm.</span></span></param>
        <summary><span data-ttu-id="792ea-123">初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 類別的新執行個體，此類別指定了命名空間前置詞清單，使用標準規範化演算法進行規範化。</span><span class="sxs-lookup"><span data-stu-id="792ea-123">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> class specifying a list of namespace prefixes to canonicalize using the standard canonicalization algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="792ea-124">`inclusiveNamespacesPrefixList`參數會包含以空白字元分隔的可規範化使用標準的標準化演算法，而不是獨佔標準化演算法的命名空間前置詞清單。</span><span class="sxs-lookup"><span data-stu-id="792ea-124">The `inclusiveNamespacesPrefixList` parameter contains a whitespace-delimited list of namespace prefixes to canonicalize using the standard canonicalization algorithm rather than the exclusive canonicalization algorithm.</span></span>  <span data-ttu-id="792ea-125">若要指定預設命名空間，並沒有前置詞，會傳遞指定之前置詞"#default"。</span><span class="sxs-lookup"><span data-stu-id="792ea-125">To specify the default namespace, which does not have a prefix, pass the special prefix "#default".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigExcC14NTransform (bool includeComments, string inclusiveNamespacesPrefixList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool includeComments, string inclusiveNamespacesPrefixList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (includeComments As Boolean, inclusiveNamespacesPrefixList As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigExcC14NTransform(bool includeComments, System::String ^ inclusiveNamespacesPrefixList);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="includeComments" Type="System.Boolean" />
        <Parameter Name="inclusiveNamespacesPrefixList" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="includeComments">
          <span data-ttu-id="792ea-126">若要包含註解，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="792ea-126"><see langword="true" /> to include comments; otherwise, <see langword="false" />.</span></span></param>
        <param name="inclusiveNamespacesPrefixList"><span data-ttu-id="792ea-127">使用標準規範化演算法進行規範化的命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="792ea-127">The namespace prefixes to canonicalize using the standard canonicalization algorithm.</span></span></param>
        <summary><span data-ttu-id="792ea-128">初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 類別的新執行個體，此類別指定是否要包括註解，並指定命名空間前置詞的清單。</span><span class="sxs-lookup"><span data-stu-id="792ea-128">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> class specifying whether to include comments, and specifying a list of namespace prefixes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="792ea-129">`inclusiveNamespacesPrefixList`參數會包含以空白字元分隔的可規範化使用標準的標準化演算法，而不是獨佔標準化演算法的命名空間前置詞清單。</span><span class="sxs-lookup"><span data-stu-id="792ea-129">The `inclusiveNamespacesPrefixList` parameter contains a whitespace-delimited list of namespace prefixes to canonicalize using the standard canonicalization algorithm rather than the exclusive canonicalization algorithm.</span></span>  <span data-ttu-id="792ea-130">若要指定預設命名空間，並沒有前置詞，會傳遞指定之前置詞"#default"。</span><span class="sxs-lookup"><span data-stu-id="792ea-130">To specify the default namespace, which does not have a prefix, pass the special prefix "#default".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigestedOutput">
      <MemberSignature Language="C#" Value="public override byte[] GetDigestedOutput (System.Security.Cryptography.HashAlgorithm hash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetDigestedOutput(class System.Security.Cryptography.HashAlgorithm hash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDigestedOutput (hash As HashAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetDigestedOutput(System::Security::Cryptography::HashAlgorithm ^ hash);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Security.Cryptography.HashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="792ea-131">用來建立摘要的 <see cref="T:System.Security.Cryptography.HashAlgorithm" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="792ea-131">The <see cref="T:System.Security.Cryptography.HashAlgorithm" /> object used to create a digest.</span></span></param>
        <summary><span data-ttu-id="792ea-132">傳回與 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件關聯的摘要。</span><span class="sxs-lookup"><span data-stu-id="792ea-132">Returns the digest associated with a <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span></span></summary>
        <returns><span data-ttu-id="792ea-133">與 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件關聯的摘要。</span><span class="sxs-lookup"><span data-stu-id="792ea-133">The digest associated with a <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected override System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetInnerXml" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetInnerXml () As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xml::XmlNodeList ^ GetInnerXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="792ea-134">傳回 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件參數的 XML 表示，此物件適合納入為 XMLDSIG <see langword="&lt;Transform&gt;" /> 項目的子項目。</span><span class="sxs-lookup"><span data-stu-id="792ea-134">Returns an XML representation of the parameters of a <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object that are suitable to be included as subelements of an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</span></span></summary>
        <returns><span data-ttu-id="792ea-135">XML 節點的清單，代表 XMLDSIG <see langword="&lt;Transform&gt;" /> 項目中描述目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件所需要的轉換特定內容。</span><span class="sxs-lookup"><span data-stu-id="792ea-135">A list of the XML nodes that represent the transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object in an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOutput">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="792ea-136">傳回目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件的輸出。</span><span class="sxs-lookup"><span data-stu-id="792ea-136">Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOutput () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="792ea-137">傳回目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件的輸出。</span><span class="sxs-lookup"><span data-stu-id="792ea-137">Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object</span></span></summary>
        <returns><span data-ttu-id="792ea-138">目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件的輸出。</span><span class="sxs-lookup"><span data-stu-id="792ea-138">The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="792ea-139">要傳回的輸出型別。</span><span class="sxs-lookup"><span data-stu-id="792ea-139">The type of the output to return.</span></span> <span data-ttu-id="792ea-140">這必須是 <see cref="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes" /> 屬性的其中一個型別。</span><span class="sxs-lookup"><span data-stu-id="792ea-140">This must be one of the types in the <see cref="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes" /> property.</span></span></param>
        <summary><span data-ttu-id="792ea-141">傳回目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件的輸出，做為指定型別的物件。</span><span class="sxs-lookup"><span data-stu-id="792ea-141">Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object as an object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="792ea-142">做為指定型別之物件的目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件輸出。</span><span class="sxs-lookup"><span data-stu-id="792ea-142">The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object as an object of the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="792ea-143"><xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput%2A>執行先前的呼叫所設定的值之後，方法會傳回目前的轉換輸出<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="792ea-143">The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput%2A> method returns the output of the current transform after it is run on the value previously set by a call to the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput%2A> method.</span></span>  
  
 <span data-ttu-id="792ea-144">傳回物件的類型必須是其中一個型別物件中<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="792ea-144">The type of the returned object must be one of the type objects in the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="792ea-145"><paramref name="type" /> 參數不是 <see cref="T:System.IO.Stream" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="792ea-145">The <paramref name="type" /> parameter is not a <see cref="T:System.IO.Stream" /> object.</span></span>  
  
 <span data-ttu-id="792ea-146">-或-</span><span class="sxs-lookup"><span data-stu-id="792ea-146">-or-</span></span>  
  
 <span data-ttu-id="792ea-147"><paramref name="type" /> 參數不會從 <see cref="T:System.IO.Stream" /> 物件衍生。</span><span class="sxs-lookup"><span data-stu-id="792ea-147">The <paramref name="type" /> parameter does not derive from a <see cref="T:System.IO.Stream" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InclusiveNamespacesPrefixList">
      <MemberSignature Language="C#" Value="public string InclusiveNamespacesPrefixList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InclusiveNamespacesPrefixList" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList" />
      <MemberSignature Language="VB.NET" Value="Public Property InclusiveNamespacesPrefixList As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InclusiveNamespacesPrefixList { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="792ea-148">取得或設定含有命名空間前置詞的字串，以便使用標準規範化演算法進行規範化。</span><span class="sxs-lookup"><span data-stu-id="792ea-148">Gets or sets a string that contains namespace prefixes to canonicalize using the standard canonicalization algorithm.</span></span></summary>
        <value><span data-ttu-id="792ea-149">含有命名空間前置詞的字串，以便使用標準規範化演算法進行規範化。</span><span class="sxs-lookup"><span data-stu-id="792ea-149">A string that contains namespace prefixes to canonicalize using the standard canonicalization algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="792ea-150"><xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList%2A>屬性包含以空白字元分隔的可規範化使用標準的標準化演算法，而不是獨佔標準化演算法的命名空間前置詞清單。</span><span class="sxs-lookup"><span data-stu-id="792ea-150">The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList%2A> property contains a whitespace-delimited list of namespace prefixes to canonicalize using the standard canonicalization algorithm rather than the exclusive canonicalization algorithm.</span></span>  <span data-ttu-id="792ea-151">若要指定預設命名空間，並沒有前置詞，會傳遞指定之前置詞"#default"。</span><span class="sxs-lookup"><span data-stu-id="792ea-151">To specify the default namespace, which does not have a prefix, pass the special prefix "#default".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="792ea-152">下列程式碼範例示範如何簽署 XML 文件與<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>類別使用信封簽章。</span><span class="sxs-lookup"><span data-stu-id="792ea-152">The following code example shows how to sign an XML document with the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class using an envelope signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.XmlDsigExcC14NTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.XML.XmlDsigExcC14NTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CS/example.cs#1)]
 [!code-vb[Cryptography.XML.XmlDsigExcC14NTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public override Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property InputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ InputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="792ea-153">取得型別陣列，其為目前 <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" /> 物件之 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 方法的有效輸入。</span><span class="sxs-lookup"><span data-stu-id="792ea-153">Gets an array of types that are valid inputs to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span></span></summary>
        <value><span data-ttu-id="792ea-154">目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件的有效輸入型別陣列；您可以只將其中一種型別的物件傳遞到目前 <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" /> 物件的 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="792ea-154">An array of valid input types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object; you can pass only objects of one of these types to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="792ea-155">所傳回的陣列<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes%2A>屬性必須包含至少一個項目，因為每個<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>物件必須接受做為有效的輸入至少一個型別。</span><span class="sxs-lookup"><span data-stu-id="792ea-155">The array returned by the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes%2A> property must contain at least one element because every <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> object must accept at least one type as valid input.</span></span>  
  
 <span data-ttu-id="792ea-156">A<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>物件通常會接受一或多個下列類型做為輸入： <xref:System.IO.Stream>， <xref:System.Xml.XmlDocument>，或<xref:System.Xml.XmlNodeList>。</span><span class="sxs-lookup"><span data-stu-id="792ea-156">A <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> object typically accepts one or more of the following types as input: <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, or <xref:System.Xml.XmlNodeList>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInnerXml (nodeList As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInnerXml(System::Xml::XmlNodeList ^ nodeList);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList"><span data-ttu-id="792ea-157"><see cref="T:System.Xml.XmlNodeList" /> 物件，會指定目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件的轉換特定內容。</span><span class="sxs-lookup"><span data-stu-id="792ea-157">An <see cref="T:System.Xml.XmlNodeList" /> object that specifies transform-specific content for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span></span></param>
        <summary><span data-ttu-id="792ea-158">將指定的 <see cref="T:System.Xml.XmlNodeList" /> 物件剖析為 <see langword="&lt;Transform&gt;" /> 項目的轉換特定內容，並將目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件的內部狀態設定成與 <see langword="&lt;Transform&gt;" /> 項目相符。</span><span class="sxs-lookup"><span data-stu-id="792ea-158">Parses the specified <see cref="T:System.Xml.XmlNodeList" /> object as transform-specific content of a <see langword="&lt;Transform&gt;" /> element and configures the internal state of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object to match the <see langword="&lt;Transform&gt;" /> element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="792ea-159">這個方法用來處理元素的子元素`<Transform>`項目。</span><span class="sxs-lookup"><span data-stu-id="792ea-159">This method is used to process subelements of a `<Transform>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public override void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInput (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInput(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="792ea-160">要載入至目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件的輸入。</span><span class="sxs-lookup"><span data-stu-id="792ea-160">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span></span></param>
        <summary><span data-ttu-id="792ea-161">在衍生類別中覆寫時，將指定輸入載入目前的 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="792ea-161">When overridden in a derived class, loads the specified input into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="792ea-162">輸入物件的類型必須是其中一個類型中<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="792ea-162">The type of the input object must be one of the types in the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="792ea-163"><paramref name="obj" /> 參數不是 <see cref="T:System.IO.Stream" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="792ea-163">The <paramref name="obj" /> parameter is not a <see cref="T:System.IO.Stream" /> object.</span></span>  
  
 <span data-ttu-id="792ea-164">-或-</span><span class="sxs-lookup"><span data-stu-id="792ea-164">-or-</span></span>  
  
 <span data-ttu-id="792ea-165"><paramref name="obj" /> 參數不是 <see cref="T:System.Xml.XmlDocument" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="792ea-165">The <paramref name="obj" /> parameter is not an <see cref="T:System.Xml.XmlDocument" /> object.</span></span>  
  
 <span data-ttu-id="792ea-166">-或-</span><span class="sxs-lookup"><span data-stu-id="792ea-166">-or-</span></span>  
  
 <span data-ttu-id="792ea-167"><paramref name="obj" /> 參數不是 <see cref="T:System.Xml.XmlNodeList" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="792ea-167">The <paramref name="obj" /> parameter is not an <see cref="T:System.Xml.XmlNodeList" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public override Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OutputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ OutputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="792ea-168">取得可以從目前 <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" /> 物件的 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 方法輸出的型別陣列。</span><span class="sxs-lookup"><span data-stu-id="792ea-168">Gets an array of types that are possible outputs from the <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span></span></summary>
        <value><span data-ttu-id="792ea-169">目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件的有效輸出型別陣列；目前 <see cref="Overload:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" /> 物件的 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 方法只會傳回其中一種型別的物件。</span><span class="sxs-lookup"><span data-stu-id="792ea-169">An array of valid output types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object; the <see cref="Overload:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object return only objects of one of these types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="792ea-170">所傳回的陣列<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes%2A>屬性必須包含至少一個項目，因為每個轉換必須產生做為輸出的至少一個型別。</span><span class="sxs-lookup"><span data-stu-id="792ea-170">The array returned by the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes%2A> property must contain at least one element because every transform must generate at least one type as output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>