<Type Name="XmlDsigExcC14NTransform" FullName="System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="987e1cf6ee446e64740d5bc7e7ade6f532b46dc9" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49130246" /></Metadata><TypeSignature Language="C#" Value="public class XmlDsigExcC14NTransform : System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDsigExcC14NTransform extends System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDsigExcC14NTransform&#xA;Inherits Transform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDsigExcC14NTransform : System::Security::Cryptography::Xml::Transform" />
  <TypeSignature Language="F#" Value="type XmlDsigExcC14NTransform = class&#xA;    inherit Transform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示數位簽章的獨佔 C14N XML 規範化轉換 (不包含註解)，如全球資訊網協會 (W3C) 所定義。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>類別代表不含註解的獨佔 C14N XML 規範化轉換。  這個類別是類似於<xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>類別，可讓以建立摘要，使用標準形式的 XML 文件的簽署人。  不過，<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>類別會排除正式的子文件中的上階的內容。  
  
 使用<xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>類別，當您需要進行規範化 XML 子文件，使其獨立於其的 XML 內容。 例如，應用程式等使用的 Web 服務簽署的 XML 中複雜的通訊協定通常需要進行規範化 XML 以這種方式。  這類應用程式通常會將 XML 信封內各種動態建構的項目可以大幅變更文件，且會造成 XML 簽章驗證失敗。  <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>類別從標準的子文件中排除這類上階內容以解決這個問題。  
  
 一般而言，您不會建立規範化轉換類別的新執行個體。 若要指定規範化轉換，將傳遞描述要轉換的統一資源識別元 (URI)<xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A>屬性，因此可從<xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A>屬性。 若要取得規範化轉換的參考，請使用<xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A>屬性，因此可從<xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A>屬性。  
  
 您已建立規範化轉換類別的新執行個體，只有在您想要以手動方式雜湊的 XML 文件，或使用您自己的標準化演算法時，才需要。  
  
 描述 URI<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>類別由定義<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl>欄位。  
  
 描述 URI<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>類別由定義<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl>欄位。  
  
 如需詳細的獨佔 C14N 轉換的詳細資訊，請參閱 XMLDSIG 規格，可從在 www.w3.org/TR/xmldsig-core/ World Wide Web Consortium (W3C)。 規範化演算法被定義在 W3C 標準 XML 規格中，將會位於 www.w3.org/2001/10/xml-exc-c14n。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用 XML 文件<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>類別使用包裹簽章。  
  
 [!code-cpp[Cryptography.XML.XmlDsigExcC14NTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.XML.XmlDsigExcC14NTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CS/example.cs#1)]
 [!code-vb[Cryptography.XML.XmlDsigExcC14NTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/VB/example.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigExcC14NTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigExcC14NTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigExcC14NTransform (bool includeComments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool includeComments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (includeComments As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigExcC14NTransform(bool includeComments);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.XmlDsigExcC14NTransform : bool -&gt; System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" Usage="new System.Security.Cryptography.Xml.XmlDsigExcC14NTransform includeComments" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="includeComments" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeComments">若要包含註解，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 類別的新執行個體，此類別指定了用來判斷是否要包括註解的值。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigExcC14NTransform (string inclusiveNamespacesPrefixList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string inclusiveNamespacesPrefixList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (inclusiveNamespacesPrefixList As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigExcC14NTransform(System::String ^ inclusiveNamespacesPrefixList);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.XmlDsigExcC14NTransform : string -&gt; System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" Usage="new System.Security.Cryptography.Xml.XmlDsigExcC14NTransform inclusiveNamespacesPrefixList" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inclusiveNamespacesPrefixList" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inclusiveNamespacesPrefixList">使用標準規範化演算法進行規範化的命名空間前置詞。</param>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 類別的新執行個體，此類別指定了命名空間前置詞清單，使用標準規範化演算法進行規範化。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `inclusiveNamespacesPrefixList`參數包含泛空白字元分隔的清單，以便使用標準規範化演算法，而不是獨佔標準化演算法進行規範化的命名空間前置詞。  若要指定預設命名空間，其中不含前置詞，會傳遞指定之前置詞"#default 」。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigExcC14NTransform (bool includeComments, string inclusiveNamespacesPrefixList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool includeComments, string inclusiveNamespacesPrefixList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (includeComments As Boolean, inclusiveNamespacesPrefixList As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigExcC14NTransform(bool includeComments, System::String ^ inclusiveNamespacesPrefixList);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.XmlDsigExcC14NTransform : bool * string -&gt; System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" Usage="new System.Security.Cryptography.Xml.XmlDsigExcC14NTransform (includeComments, inclusiveNamespacesPrefixList)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="includeComments" Type="System.Boolean" />
        <Parameter Name="inclusiveNamespacesPrefixList" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="includeComments">若要包含註解，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="inclusiveNamespacesPrefixList">使用標準規範化演算法進行規範化的命名空間前置詞。</param>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 類別的新執行個體，此類別指定是否要包括註解，並指定命名空間前置詞的清單。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `inclusiveNamespacesPrefixList`參數包含泛空白字元分隔的清單，以便使用標準規範化演算法，而不是獨佔標準化演算法進行規範化的命名空間前置詞。  若要指定預設命名空間，其中不含前置詞，會傳遞指定之前置詞"#default 」。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigestedOutput">
      <MemberSignature Language="C#" Value="public override byte[] GetDigestedOutput (System.Security.Cryptography.HashAlgorithm hash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetDigestedOutput(class System.Security.Cryptography.HashAlgorithm hash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDigestedOutput (hash As HashAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetDigestedOutput(System::Security::Cryptography::HashAlgorithm ^ hash);" />
      <MemberSignature Language="F#" Value="override this.GetDigestedOutput : System.Security.Cryptography.HashAlgorithm -&gt; byte[]" Usage="xmlDsigExcC14NTransform.GetDigestedOutput hash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Security.Cryptography.HashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="hash">用來建立摘要的 <see cref="T:System.Security.Cryptography.HashAlgorithm" /> 物件。</param>
        <summary>傳回與 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件關聯的摘要。</summary>
        <returns>與 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件關聯的摘要。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected override System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetInnerXml" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetInnerXml () As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xml::XmlNodeList ^ GetInnerXml();" />
      <MemberSignature Language="F#" Value="override this.GetInnerXml : unit -&gt; System.Xml.XmlNodeList" Usage="xmlDsigExcC14NTransform.GetInnerXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件參數的 XML 表示，此物件適合納入為 XMLDSIG <see langword="&lt;Transform&gt;" /> 項目的子項目。</summary>
        <returns>XML 節點的清單，代表 XMLDSIG <see langword="&lt;Transform&gt;" /> 項目中描述目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件所需要的轉換特定內容。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOutput">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件的輸出。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOutput () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput();" />
      <MemberSignature Language="F#" Value="override this.GetOutput : unit -&gt; obj" Usage="xmlDsigExcC14NTransform.GetOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件的輸出。</summary>
        <returns>目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件的輸出。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.GetOutput : Type -&gt; obj" Usage="xmlDsigExcC14NTransform.GetOutput type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要傳回的輸出型別。 這必須是 <see cref="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes" /> 屬性的其中一個型別。</param>
        <summary>傳回目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件的輸出，做為指定型別的物件。</summary>
        <returns>做為指定型別之物件的目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件輸出。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput%2A>方法會傳回目前轉換的輸出，執行先前的呼叫所設定的值之後<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput%2A>方法。  
  
 傳回物件的類型必須是其中一項中的型別物件<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="type" /> 參數不是 <see cref="T:System.IO.Stream" /> 物件。  
  
-或- 
<paramref name="type" /> 參數不會從 <see cref="T:System.IO.Stream" /> 物件衍生。</exception>
      </Docs>
    </Member>
    <Member MemberName="InclusiveNamespacesPrefixList">
      <MemberSignature Language="C#" Value="public string InclusiveNamespacesPrefixList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InclusiveNamespacesPrefixList" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList" />
      <MemberSignature Language="VB.NET" Value="Public Property InclusiveNamespacesPrefixList As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InclusiveNamespacesPrefixList { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InclusiveNamespacesPrefixList : string with get, set" Usage="System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定含有命名空間前置詞的字串，以便使用標準規範化演算法進行規範化。</summary>
        <value>含有命名空間前置詞的字串，以便使用標準規範化演算法進行規範化。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList%2A>屬性包含泛空白字元分隔的清單，以便使用標準規範化演算法，而不是獨佔標準化演算法進行規範化的命名空間前置詞。  若要指定預設命名空間，其中不含前置詞，會傳遞指定之前置詞"#default 」。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用 XML 文件<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>類別使用包裹簽章。  
  
 [!code-cpp[Cryptography.XML.XmlDsigExcC14NTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.XML.XmlDsigExcC14NTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CS/example.cs#1)]
 [!code-vb[Cryptography.XML.XmlDsigExcC14NTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public override Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property InputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ InputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputTypes : Type[]" Usage="System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得型別陣列，其為目前 <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" /> 物件之 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 方法的有效輸入。</summary>
        <value>目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件的有效輸入型別陣列；您可以只將其中一種型別的物件傳遞到目前 <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" /> 物件的 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 方法。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所傳回的陣列<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes%2A>屬性必須包含至少一個項目，因為每個<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>物件必須接受做為有效的輸入至少一個類型。  
  
 A<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>物件通常會接受一或多個下列類型做為輸入： <xref:System.IO.Stream>， <xref:System.Xml.XmlDocument>，或<xref:System.Xml.XmlNodeList>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInnerXml (nodeList As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInnerXml(System::Xml::XmlNodeList ^ nodeList);" />
      <MemberSignature Language="F#" Value="override this.LoadInnerXml : System.Xml.XmlNodeList -&gt; unit" Usage="xmlDsigExcC14NTransform.LoadInnerXml nodeList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList"><see cref="T:System.Xml.XmlNodeList" /> 物件，會指定目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件的轉換特定內容。</param>
        <summary>將指定的 <see cref="T:System.Xml.XmlNodeList" /> 物件剖析為 <see langword="&lt;Transform&gt;" /> 項目的轉換特定內容，並將目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件的內部狀態設定成與 <see langword="&lt;Transform&gt;" /> 項目相符。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法用來處理的子元素`<Transform>`項目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public override void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInput (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInput(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.LoadInput : obj -&gt; unit" Usage="xmlDsigExcC14NTransform.LoadInput obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要載入至目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件的輸入。</param>
        <summary>在衍生類別中覆寫時，將指定輸入載入目前的 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 輸入物件的類型必須是其中一項中的型別<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="obj" /> 參數不是 <see cref="T:System.IO.Stream" /> 物件。  
  
-或- 
<paramref name="obj" /> 參數不是 <see cref="T:System.Xml.XmlDocument" /> 物件。  
  
-或- 
<paramref name="obj" /> 參數不是 <see cref="T:System.Xml.XmlNodeList" /> 物件。</exception>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public override Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OutputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ OutputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputTypes : Type[]" Usage="System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得可以從目前 <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" /> 物件的 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 方法輸出的型別陣列。</summary>
        <value>目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 物件的有效輸出型別陣列；目前 <see cref="Overload:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" /> 物件的 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 方法只會傳回其中一種型別的物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所傳回的陣列<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes%2A>屬性必須包含至少一個項目，因為每個轉換必須產生做為輸出的至少一個類型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>