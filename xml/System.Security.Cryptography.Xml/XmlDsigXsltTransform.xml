<Type Name="XmlDsigXsltTransform" FullName="System.Security.Cryptography.Xml.XmlDsigXsltTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f526aeca63aa2b1d59d5edec852d7c729c8fa61c" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49141205" /></Metadata><TypeSignature Language="C#" Value="public class XmlDsigXsltTransform : System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDsigXsltTransform extends System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDsigXsltTransform&#xA;Inherits Transform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDsigXsltTransform : System::Security::Cryptography::Xml::Transform" />
  <TypeSignature Language="F#" Value="type XmlDsigXsltTransform = class&#xA;    inherit Transform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示根據 W3C 所定義之數位簽章的 XSLT 轉換。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform>類別可讓您解決使用 XSLT 轉換 XML 文件。  這個類別會使用 XSLT 來轉換成其他您想要簽署或加密的 XML 節點的 XML 節點。  
  
 使用<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>來簽署或加密使用 XSLT 轉換 XML 文件的特定部分的類別。  
  
 描述統一資源識別元 (URI)<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>類別由定義<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl>欄位。  
  
 如需詳細的 XSLT 轉換的詳細資訊，請參閱章節 6.6.5 版 XMLDSIG 規格，可從在 www.w3.org/TR/xmldsig-core/ W3C。  
  
   
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何簽署和驗證 XML 文件使用<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>與包裹簽章的類別。  第二個程式碼範例示範如何使用成員<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>類別。  
  
 **範例 #1**  
  
 [!code-cpp[Cryptography.Xml.XmlDsigXsltTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXsltTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigXsltTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXsltTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigXsltTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigXsltTransform/VB/sample.vb#1)]  
  
 **範例 #2**  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigXsltTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigXsltTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何簽署和驗證 XML 文件使用<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>與包裹簽章的類別。  
  
 [!code-cpp[Cryptography.Xml.XmlDsigXsltTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXsltTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigXsltTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXsltTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigXsltTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigXsltTransform/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigXsltTransform (bool includeComments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool includeComments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (includeComments As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigXsltTransform(bool includeComments);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.XmlDsigXsltTransform : bool -&gt; System.Security.Cryptography.Xml.XmlDsigXsltTransform" Usage="new System.Security.Cryptography.Xml.XmlDsigXsltTransform includeComments" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="includeComments" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeComments">若要包含註解，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>使用註解 (如果已指定)，初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected override System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetInnerXml" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetInnerXml () As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xml::XmlNodeList ^ GetInnerXml();" />
      <MemberSignature Language="F#" Value="override this.GetInnerXml : unit -&gt; System.Xml.XmlNodeList" Usage="xmlDsigXsltTransform.GetInnerXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 物件的參數之 XML 表示，此物件適合納入為 XMLDSIG <see langword="&lt;Transform&gt;" /> 項目的子項目。</summary>
        <returns>XML 節點的清單，代表 XMLDSIG <see langword="&lt;Transform&gt;" /> 項目中描述目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 物件所需要的轉換特定內容。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOutput">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 物件的輸出。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOutput () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput();" />
      <MemberSignature Language="F#" Value="override this.GetOutput : unit -&gt; obj" Usage="xmlDsigXsltTransform.GetOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 物件的輸出。</summary>
        <returns>目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 物件的輸出。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回物件的類型必須是<xref:System.IO.Stream>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput%2A>方法來擷取目前的輸出<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>物件。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>類別。  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#8)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#8)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.GetOutput : Type -&gt; obj" Usage="xmlDsigXsltTransform.GetOutput type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要傳回的輸出型別。 <see cref="T:System.IO.Stream" /> 是這個參數唯一有效的型別。</param>
        <summary>傳回型別為 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 之目前 <see cref="T:System.IO.Stream" /> 物件的輸出。</summary>
        <returns>型別為 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 之目前 <see cref="T:System.IO.Stream" /> 物件的輸出。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回物件的類型必須是<xref:System.IO.Stream>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput%2A>方法來擷取目前的輸出<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>物件。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>類別。  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#7)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#7)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="type" /> 參數不是 <see cref="T:System.IO.Stream" /> 物件。</exception>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public override Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property InputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ InputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputTypes : Type[]" Usage="System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得型別陣列，其為目前 <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" /> 物件之 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 方法的有效輸入。</summary>
        <value>目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 物件的有效輸入型別陣列；您可以只將其中一種型別的物件傳遞到目前 <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" /> 物件的 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 方法。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有效的輸入類型，來<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>都<xref:System.IO.Stream>， <xref:System.Xml.XmlDocument>，和<xref:System.Xml.XmlNodeList>。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes%2A>屬性來擷取目前轉換的有效輸入型別。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>類別。  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#4)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#4)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInnerXml (nodeList As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInnerXml(System::Xml::XmlNodeList ^ nodeList);" />
      <MemberSignature Language="F#" Value="override this.LoadInnerXml : System.Xml.XmlNodeList -&gt; unit" Usage="xmlDsigXsltTransform.LoadInnerXml nodeList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList"><see cref="T:System.Xml.XmlNodeList" /> 物件，封裝要載入至目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 物件中的 XSLT 樣式表。 這個樣式表被套用至 <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" /> 方法所載入的文件。</param>
        <summary>將指定的 <see cref="T:System.Xml.XmlNodeList" /> 物件剖析為 <see langword="&lt;Transform&gt;" /> 項目的轉換特定內容，並將目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 物件的內部狀態設定成與 <see langword="&lt;Transform&gt;" /> 項目相符。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法用來處理的子元素`<Transform>`項目。  
  
   
  
## Examples  
 下列程式碼範例示範如何簽署和驗證 XML 文件使用<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>與包裹簽章的類別。  
  
 [!code-cpp[Cryptography.Xml.XmlDsigXsltTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXsltTransform/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.Xml.XmlDsigXsltTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigXsltTransform/CS/sample.cs#1)]
 [!code-vb[Cryptography.Xml.XmlDsigXsltTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigXsltTransform/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="nodeList" /> 參數為 <see langword="null" />。  
  
-或- 
<paramref name="nodeList" /> 參數不包含 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 物件。</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public override void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInput (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInput(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.LoadInput : obj -&gt; unit" Usage="xmlDsigXsltTransform.LoadInput obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要載入至目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 物件的輸入。</param>
        <summary>將指定的輸入載入目前的 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 輸入物件的類型必須是其中一項中的型別<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes%2A>屬性。 有效的輸入類型，來<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>都<xref:System.IO.Stream>， <xref:System.Xml.XmlDocument>，和<xref:System.Xml.XmlNodeList>。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput%2A>方法使用指定<xref:System.Xml.XmlDocument>物件做為輸入。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>類別。  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#11)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#11)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public override Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.OutputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OutputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ OutputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputTypes : Type[]" Usage="System.Security.Cryptography.Xml.XmlDsigXsltTransform.OutputTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得可以從目前 <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput" /> 物件的 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 方法輸出的型別陣列。</summary>
        <value>目前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 物件的有效輸出型別陣列；只有其中一種型別的物件會從目前 <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput" /> 物件的 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 方法傳回。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Stream> 是唯一有效的輸出類型<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.OutputTypes%2A>屬性來擷取目前轉換的有效輸出型別。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>類別。  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#5)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#5)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>