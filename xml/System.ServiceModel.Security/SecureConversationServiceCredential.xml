<Type Name="SecureConversationServiceCredential" FullName="System.ServiceModel.Security.SecureConversationServiceCredential">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b507ff86d3d28a0198880442d73a284a2a76dd60" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39810631" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecureConversationServiceCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecureConversationServiceCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.SecureConversationServiceCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecureConversationServiceCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureConversationServiceCredential sealed" />
  <TypeSignature Language="F#" Value="type SecureConversationServiceCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="81d34-101">提供安全對話服務的認證設定。</span>
      <span class="sxs-lookup">
        <span data-stu-id="81d34-101">Provides credential settings for a secure conversation service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d34-102">安全對話包含交換多個訊息，而且會使用「安全性內容權杖」(Security Context Token，SCT) 來確保安全性。</span><span class="sxs-lookup"><span data-stu-id="81d34-102">Secure conversations involve the exchange of multiple messages and use a Security Context Token (SCT) to ensure security.</span></span> <span data-ttu-id="81d34-103">在通訊工作階段的存留期間，通訊方之間共用此 SCT。</span><span class="sxs-lookup"><span data-stu-id="81d34-103">The SCT is shared among the communicating parties for the lifetime of a communications session.</span></span> <span data-ttu-id="81d34-104">服務可以發行兩種不同的 SCT：</span><span class="sxs-lookup"><span data-stu-id="81d34-104">A service can issue two different kinds of SCTs:</span></span>  
  
-   <span data-ttu-id="81d34-105">第一種是包含唯一識別碼的工作階段架構 SCT。訊息只包含此識別碼，而服務會維護在 SCT 識別碼和內容 (例如宣告、安全性金鑰等內容) 之間進行對應的狀態對應快取。</span><span class="sxs-lookup"><span data-stu-id="81d34-105">The first is a session-based SCT that contains a unique id. Messages carry only the id, and the service maintains a state-mapping cache that maps between the SCT ids and contents (such as claims, security keys, and so on).</span></span> <span data-ttu-id="81d34-106">正常執行的用戶端必須傳送 SCT 取消，以協助服務最佳化該快取資源。</span><span class="sxs-lookup"><span data-stu-id="81d34-106">A well-behaved client must send an SCT cancellation to help the service optimize the cache resources.</span></span> <span data-ttu-id="81d34-107">如果您產生這個類別的方式，是在配合 <xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A> 參數等於 `requireCancellation` 情況下呼叫 `true`，這時就會以這種方式發出此 SCT。</span><span class="sxs-lookup"><span data-stu-id="81d34-107">If you instantiate this class by calling <xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A> with the `requireCancellation` parameter equal to `true`, the SCT is issued in this manner.</span></span>  
  
-   <span data-ttu-id="81d34-108">第二種是位於用戶端之 Cookie 內的獨立 (Self-Contained) SCT。</span><span class="sxs-lookup"><span data-stu-id="81d34-108">The second is a self-contained SCT that resides in a cookie on the client.</span></span> <span data-ttu-id="81d34-109">這種 SCT 包含完整的狀態資訊，因此不需要從服務進行狀態管理，也不需要從用戶端進行 SCT 取消。</span><span class="sxs-lookup"><span data-stu-id="81d34-109">This SCT contains the entire state information, so requires neither state management from the service nor SCT cancellation from the client.</span></span> <span data-ttu-id="81d34-110">這種 SCT 有時稱為「Cookie 模式」的 SCT。</span><span class="sxs-lookup"><span data-stu-id="81d34-110">This is sometimes called a "cookie-mode" SCT.</span></span> <span data-ttu-id="81d34-111">由於 SCT 包含完整的狀態資訊，因此其大小大於工作階段架構 SCT 的大小。</span><span class="sxs-lookup"><span data-stu-id="81d34-111">Because the SCT contains the entire state information, its size is larger than in the session-based case.</span></span> <span data-ttu-id="81d34-112">使用工作階段架構 SCT 時，服務會儲存大部分的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="81d34-112">With session-based SCTs, the service stores much of the state information.</span></span> <span data-ttu-id="81d34-113">然而，因為具有獨立性質，因此它可用於整個服務存留期間，並可在服務關閉到重新啟動整個期間持續。</span><span class="sxs-lookup"><span data-stu-id="81d34-113">However, because it is self-contained, it can be used across service lifetime and persists across service shutdown and restart.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SecurityContextClaimTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Type&gt; SecurityContextClaimTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Type&gt; SecurityContextClaimTypes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityContextClaimTypes As Collection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;Type ^&gt; ^ SecurityContextClaimTypes { System::Collections::ObjectModel::Collection&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityContextClaimTypes : System.Collections.ObjectModel.Collection&lt;Type&gt;" Usage="System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d34-114">取得用於 Cookie 序列化之 <see cref="T:System.Type" /> 宣告的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d34-114">Gets a collection of the <see cref="T:System.Type" /> claims for cookie serialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d34-115">用於 Cookie 序列化之 <see cref="T:System.Type" /> 宣告的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d34-115">A collection of the <see cref="T:System.Type" /> claims for cookie serialization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d34-116">若要將宣告序列化到 SCT cookie 中，Windows Communication Foundation (WCF) 會使用<xref:System.Runtime.Serialization.DataContractSerializer>為預設值。</span><span class="sxs-lookup"><span data-stu-id="81d34-116">To serialize claims into SCT cookies, Windows Communication Foundation (WCF) uses <xref:System.Runtime.Serialization.DataContractSerializer> as the default.</span></span> <span data-ttu-id="81d34-117">由於宣告資源是可延伸，WCF 可讓您提供已知的資源類型的清單。</span><span class="sxs-lookup"><span data-stu-id="81d34-117">Because the Claim resource is extensible, WCF allows you to provide a list of known resource types.</span></span> <span data-ttu-id="81d34-118">這點可在 Cookie 內宣告還原序列化期間協助 <xref:System.Runtime.Serialization.DataContractSerializer>，使其可以傳回原始的強型別物件。</span><span class="sxs-lookup"><span data-stu-id="81d34-118">This assists the <xref:System.Runtime.Serialization.DataContractSerializer> during deserialization of the claims in the cookie so that it can return the original strongly-typed objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81d34-119">下列程式碼會示範如何取得這個屬性。</span><span class="sxs-lookup"><span data-stu-id="81d34-119">The following code shows how to get this property.</span></span>  
  
 [!code-csharp[S_UE_SecureConversationServiceCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_secureconversationservicecredential/cs/source.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityStateEncoder">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.SecurityStateEncoder SecurityStateEncoder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.SecurityStateEncoder SecurityStateEncoder" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityStateEncoder As SecurityStateEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::SecurityStateEncoder ^ SecurityStateEncoder { System::ServiceModel::Security::SecurityStateEncoder ^ get(); void set(System::ServiceModel::Security::SecurityStateEncoder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityStateEncoder : System.ServiceModel.Security.SecurityStateEncoder with get, set" Usage="System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityStateEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d34-120">取得或設定自訂的 <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />，此編碼器會用於編碼和解碼 Cookie 序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d34-120">Gets or sets a customized <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> for encoding and decoding cookie serialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d34-121">
            <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> 物件，它是自訂的 <see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d34-121">A <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> object, which is a customization of <see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d34-122">在「Cookie 模式」中，服務會以用戶端之 Cookie 的形式來向用戶端發出安全性內容權杖 (SCT)，讓用戶端不必維護任何安全性狀態。</span><span class="sxs-lookup"><span data-stu-id="81d34-122">In "cookie mode", a service issues the client a security context token (SCT) in the form of a cookie to the client so that it does not have to maintain any security state.</span></span> <span data-ttu-id="81d34-123">用戶端會透過要求訊息來傳回該 Cookie，以便服務知道如何取消保護及確認該要求訊息。</span><span class="sxs-lookup"><span data-stu-id="81d34-123">The client sends the cookie back in the request message so that the service knows how to unprotect and verify the request message.</span></span> <span data-ttu-id="81d34-124">由於 SCT 經常是在非安全網路上進行傳輸，因此它必須受到保護。</span><span class="sxs-lookup"><span data-stu-id="81d34-124">Because the SCT is often transmitted over a non-secure network, it must be protected.</span></span>  
  
 <span data-ttu-id="81d34-125">根據預設，Windows Communication Foundation (WCF) 會使用<xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder>類別，以保護資料保護 API (DPAPI) cookie。</span><span class="sxs-lookup"><span data-stu-id="81d34-125">By default, Windows Communication Foundation (WCF) uses the <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder> class to protect the cookie using the Data Protection API (DPAPI).</span></span> <span data-ttu-id="81d34-126">如果要讓 DPAPI 可在 Web 伺服陣列環境中運作，所有的後端服務都必須由相同網域使用者帳戶執行。</span><span class="sxs-lookup"><span data-stu-id="81d34-126">For DPAPI to work in a Web farm environment, all the backend services must run as the same domain user account.</span></span> <span data-ttu-id="81d34-127">換句話說，如果服務屬於 Web 主控，則網際網路資訊服務 (IIS) 背景工作處理序必須設定成由網域使用者執行。</span><span class="sxs-lookup"><span data-stu-id="81d34-127">In other words, if the service is Web hosted, then the Internet Information Services (IIS) worker process must be configured to run as a domain user.</span></span>  
  
 <span data-ttu-id="81d34-128">這個屬性可讓您使用自訂的 <xref:System.ServiceModel.Security.SecurityStateEncoder> 來加密和解密 Cookie，而不要依賴 DPAPI。</span><span class="sxs-lookup"><span data-stu-id="81d34-128">This property enables you to use a customized <xref:System.ServiceModel.Security.SecurityStateEncoder> to encrypt and decrypt the cookie and not depend on DPAPI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81d34-129">下列程式碼將示範如何設定這個屬性。</span><span class="sxs-lookup"><span data-stu-id="81d34-129">The following code shows how to set this property.</span></span>  
  
 [!code-csharp[S_UE_SecureConversationServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_secureconversationservicecredential/cs/source.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>