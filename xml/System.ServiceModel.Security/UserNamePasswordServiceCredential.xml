<Type Name="UserNamePasswordServiceCredential" FullName="System.ServiceModel.Security.UserNamePasswordServiceCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02b9bc7c53dafeb720e50be2ae10d0c9ebea5154" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39758341" /></Metadata><TypeSignature Language="C#" Value="public sealed class UserNamePasswordServiceCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UserNamePasswordServiceCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UserNamePasswordServiceCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class UserNamePasswordServiceCredential sealed" />
  <TypeSignature Language="F#" Value="type UserNamePasswordServiceCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示類別，這個類別用於設定服務如何驗證採用使用者名稱/密碼驗證的使用者，以及設定登入權杖的快取。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果服務使用的繫結中沒有任何一個是針對使用者名稱/密碼驗證設定的，就會忽略這個類別的相關屬性。 這些屬性包括 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator%2A>、<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups%2A>、<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 和 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> 屬性。  
  
 如果服務使用的繫結中沒有任何一個是設定成針對使用者名稱/密碼使用 Windows 驗證，就會忽略與登錄權杖快取相關的設定。 這些設定包括 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime%2A>、<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A> 和 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens%2A> 屬性。  
  
   
  
## Examples  
 下列範例會列印服務的 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential> 屬性值。  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CachedLogonTokenLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan CachedLogonTokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CachedLogonTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property CachedLogonTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CachedLogonTokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.CachedLogonTokenLifetime : TimeSpan with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定對權杖進行快取的最大時間長度。</summary>
        <value>A<see cref="T:System.TimeSpan" />表示的權杖進行快取的時間長度上限。 預設值為 15 分鐘。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>。  
  
   
  
## Examples  
 下列範例會取得這個屬性的值。  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheLogonTokens">
      <MemberSignature Language="C#" Value="public bool CacheLogonTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CacheLogonTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheLogonTokens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CacheLogonTokens { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CacheLogonTokens : bool with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值會指出是否要快取登入權杖。</summary>
        <value>如果要快取登入權杖，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，WCF 安全性會要求 Windows 安全性子系統，來建立每個連入的使用者名稱/密碼安全性權杖的登入權杖，如果使用者名稱對應至 Windows 帳戶。 您可以設定 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> 屬性來變更這種行為。  
  
 在 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Windows> 模式中，服務會使用 Win32 的 `LogonUser` 函式來進行使用者名稱/密碼驗證。 如果 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A> 設定為 `true`，產生的 Windows 權杖就會存放在快取中，並且重複使用於同一對使用者名稱/密碼。 快取的有效期限為 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime%2A>。 快取的最大數目限定為 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens%2A>。  
  
   
  
## Examples  
 下列範例會取得這個屬性的值。  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomUserNamePasswordValidator">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.UserNamePasswordValidator CustomUserNamePasswordValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.UserNamePasswordValidator CustomUserNamePasswordValidator" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomUserNamePasswordValidator As UserNamePasswordValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Selectors::UserNamePasswordValidator ^ CustomUserNamePasswordValidator { System::IdentityModel::Selectors::UserNamePasswordValidator ^ get(); void set(System::IdentityModel::Selectors::UserNamePasswordValidator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomUserNamePasswordValidator : System.IdentityModel.Selectors.UserNamePasswordValidator with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.UserNamePasswordValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定自訂使用者名稱和密碼驗證程式。</summary>
        <value>自訂的使用者名稱和密碼驗證程式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> 屬性必須設定為 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider>，<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 才會有作用。 當<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A>屬性設定而<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A>屬性不是，WCF 會使用 Windows 驗證，並忽略值<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A>屬性。  
  
 在 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom> 模式中，服務會呼叫 <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> 方法，以使用 <xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A> 進行使用者名稱/密碼驗證。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeWindowsGroups">
      <MemberSignature Language="C#" Value="public bool IncludeWindowsGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeWindowsGroups" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeWindowsGroups As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeWindowsGroups { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeWindowsGroups : bool with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值會指出 Windows 群組是否包含在安全性內容中。</summary>
        <value>如果 Windows 群組包含在安全性內容中，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在大部分驗證 Windows 使用者名稱和密碼的案例中，使用者所屬的 Windows 群組可以為授權決策提供有用的資訊。 然而，如果 Windows 群組不是必要的，將這個屬性設定為 `false` 即可避免進行全群組的宣告擴展，進而改善效能。  
  
   
  
## Examples  
 下列範例會取得這個屬性的值。  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCachedLogonTokens">
      <MemberSignature Language="C#" Value="public int MaxCachedLogonTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCachedLogonTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCachedLogonTokens As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxCachedLogonTokens { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCachedLogonTokens : int with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要快取之登入權杖的最大數目。</summary>
        <value>要快取之登入權杖的最大數目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設值為 128。 如需詳細資訊，請參閱<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>。  
  
   
  
## Examples  
 下列範例會取得這個屬性的值。  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MembershipProvider">
      <MemberSignature Language="C#" Value="public System.Web.Security.MembershipProvider MembershipProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.MembershipProvider MembershipProvider" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property MembershipProvider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::MembershipProvider ^ MembershipProvider { System::Web::Security::MembershipProvider ^ get(); void set(System::Web::Security::MembershipProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MembershipProvider : System.Web.Security.MembershipProvider with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定成員資格提供者。</summary>
        <value>這項服務的 <see cref="T:System.Web.Security.MembershipProvider" />。 預設為 <see cref="T:System.Web.Security.SqlMembershipProvider" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider> 模式中，服務會呼叫 <xref:System.Web.Security.MembershipProvider> 方法，以使用 <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> 進行使用者名稱/密碼驗證。  
  
> [!NOTE]
>  <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> 屬性必須設定為 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider>，<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 才會有作用。 當<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A>屬性設定而<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A>屬性不是，WCF 會使用 Windows 驗證，並忽略值<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A>屬性。  
  
 如果 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode> 屬性已設定為 `MembershipProvider`，但卻未設定 `MembershipProvider` 屬性的值，則預設為 <xref:System.Web.Security.SqlMembershipProvider> 類別。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">已在認證為唯讀時嘗試設定這個屬性。</exception>
      </Docs>
    </Member>
    <Member MemberName="UserNamePasswordValidationMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.UserNamePasswordValidationMode UserNamePasswordValidationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Security.UserNamePasswordValidationMode UserNamePasswordValidationMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UserNamePasswordValidationMode As UserNamePasswordValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::UserNamePasswordValidationMode UserNamePasswordValidationMode { System::ServiceModel::Security::UserNamePasswordValidationMode get(); void set(System::ServiceModel::Security::UserNamePasswordValidationMode value); };" />
      <MemberSignature Language="F#" Value="member this.UserNamePasswordValidationMode : System.ServiceModel.Security.UserNamePasswordValidationMode with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.UserNamePasswordValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定驗證使用者名稱和密碼的方法。</summary>
        <value>來自 <see cref="T:System.ServiceModel.Security.UserNamePasswordValidationMode" /> 中列舉的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可能的值為：  
  
-   <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom>  
  
-   <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider>  
  
-   <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Windows>  
  
 如果這個屬性設定為 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom>，服務就會使用 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator%2A> 傳回的物件來驗證傳入訊息中的使用者名稱和密碼。  
  
> [!NOTE]
>  當 WCF 服務裝載在網際網路資訊服務 (IIS) 使用傳輸層級安全性和<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A>屬性設定為<xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom>，自訂驗證配置會使用 Windows 驗證的子集。 這是因為在此案例中，IIS 會執行 Windows 驗證，才能叫用自訂驗證器的 WCF。  
  
 如果這個屬性值設定為 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider>，請設定 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 屬性以指定成員資格提供者，這樣一來，由 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 屬性所指定的成員資格提供者執行個體就會被用來驗證傳入訊息中的使用者名稱和密碼。  
  
   
  
## Examples  
 下列範例會取得這個屬性的值。  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>