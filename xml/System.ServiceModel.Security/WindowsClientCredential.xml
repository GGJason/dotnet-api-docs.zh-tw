<Type Name="WindowsClientCredential" FullName="System.ServiceModel.Security.WindowsClientCredential">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4a2056f10cff9ccd080ccda242e8b4a8325fc2df" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WindowsClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WindowsClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.WindowsClientCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WindowsClientCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsClientCredential sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="cc470-101">允許您指定與要用於代表用戶端之 Windows 認證有關的屬性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="cc470-101">Allows you to specify properties related to Windows credentials to be used to represent the client.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc470-102"><xref:System.ServiceModel.Security.WindowsClientCredential> 可以設定在與服務通訊時所使用的 Windows 用戶端屬性。</span><span class="sxs-lookup"><span data-stu-id="cc470-102">The <xref:System.ServiceModel.Security.WindowsClientCredential> enables the setting of Windows client properties used when communicating with a service.</span></span> <span data-ttu-id="cc470-103"><xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> 會設定服務在模擬用戶端時可以假定的模擬等級。</span><span class="sxs-lookup"><span data-stu-id="cc470-103">The <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> sets the level of impersonation the service can assume when impersonating the client.</span></span> <span data-ttu-id="cc470-104"><xref:System.ServiceModel.Security.WindowsClientCredential.ClientCredential%2A> 可讓用戶端以使用者名稱和密碼向服務進行驗證。</span><span class="sxs-lookup"><span data-stu-id="cc470-104">The <xref:System.ServiceModel.Security.WindowsClientCredential.ClientCredential%2A> enables a client to authenticate with username and password to the service.</span></span> <span data-ttu-id="cc470-105"><xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A> 會決定在未使用 Kerberos 時，是否可以使用 NTLM 來驗證用戶端。</span><span class="sxs-lookup"><span data-stu-id="cc470-105">The <xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A> determines whether NTLM can be used to authenticate the client if Kerberos is not used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc470-106">下列範例將建立用戶端，並取得 <xref:System.ServiceModel.Security.WindowsClientCredential> 的參考。</span><span class="sxs-lookup"><span data-stu-id="cc470-106">The following example creates a client and gets a reference to the <xref:System.ServiceModel.Security.WindowsClientCredential>.</span></span> <span data-ttu-id="cc470-107">然後此段程式碼會將 <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> 變更為新值。</span><span class="sxs-lookup"><span data-stu-id="cc470-107">The code then changes the <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> to a new value.</span></span>  
  
 [!code-csharp[WindowsClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#1)]
 [!code-vb[WindowsClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/windowsclientcredential/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowedImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowedImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel AllowedImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc470-108">取得或設定允許的模擬等級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc470-108">Gets or sets the allowed impersonation level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc470-109">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc470-109">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc470-110">當使用 Windows SSPI Negotiate 驗證時，這個屬性會對伺服器指定由用戶端所授與的模擬等級。</span><span class="sxs-lookup"><span data-stu-id="cc470-110">This property specifies the impersonation level granted by the client to the server when using Windows SSPI Negotiate authentication.</span></span> <span data-ttu-id="cc470-111">請注意，伺服器在其模擬用戶端權杖時所取得的模擬等級不單只是這個設定的功能。</span><span class="sxs-lookup"><span data-stu-id="cc470-111">Note that the impersonation level obtained by the server when it impersonates the client token is not solely a function of this setting.</span></span> <span data-ttu-id="cc470-112">它也是用來執行服務之帳戶的相關權限和網域設定的功能。</span><span class="sxs-lookup"><span data-stu-id="cc470-112">It is also a function of the associated privileges and domain settings for the account in which the service is running.</span></span>  
  
 <span data-ttu-id="cc470-113">用戶端必須使用這個屬性明確設定所允許的模擬等級。</span><span class="sxs-lookup"><span data-stu-id="cc470-113">The client must explicitly set the allowed impersonation level using this property.</span></span>  
  
 <span data-ttu-id="cc470-114">當用戶端指定匿名模擬時，即使服務上沒有執行任何模擬，用戶端仍然永遠會以匿名模式來驗證服務。</span><span class="sxs-lookup"><span data-stu-id="cc470-114">When the client specifies anonymous impersonation the client always authenticates to the service as anonymous even when no impersonation is performed on the service.</span></span> <span data-ttu-id="cc470-115">這是因為基礎 Windows 作業系統行為所致。</span><span class="sxs-lookup"><span data-stu-id="cc470-115">This is due to underlying Windows operating system behavior.</span></span>  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="cc470-116"> Windows 模擬，請移至[模擬和還原](http://go.microsoft.com/fwlink/?LinkId=96178)。</span><span class="sxs-lookup"><span data-stu-id="cc470-116"> Windows impersonation, go to [Impersonating and Reverting](http://go.microsoft.com/fwlink/?LinkId=96178).</span></span> [!INCLUDE[crabout](~/includes/crabout-md.md)]<span data-ttu-id="cc470-117"> 使用模擬[!INCLUDE[indigo1](~/includes/indigo1-md.md)]，請參閱[委派和模擬](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md)。</span><span class="sxs-lookup"><span data-stu-id="cc470-117"> impersonation using [!INCLUDE[indigo1](~/includes/indigo1-md.md)], see [Delegation and Impersonation](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc470-118">下列範例將示範如何設定這個屬性。</span><span class="sxs-lookup"><span data-stu-id="cc470-118">The following example shows how to set this property.</span></span>  
  
 [!code-csharp[WindowsClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#1)]
 [!code-vb[WindowsClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/windowsclientcredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowNtlm">
      <MemberSignature Language="C#" Value="public bool AllowNtlm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNtlm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowNtlm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowNtlm { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc470-119">取得或設定值，這個值表示是否應允許 NTLM 驗證做為 Windows SSPI Negotiate 驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc470-119">Gets or sets a value that indicates whether NTLM authentication should be allowed as Windows SSPI Negotiate authentication.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc470-120">如果應允許 NTLM 驗證做為 Windows SSPI Negotiate 驗證，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc470-120">
              <see langword="true" /> if NTLM authentication should be allowed as Windows SSPI Negotiate authentication, <see langword="false" /> otherwise.</span>
          </span>
          <span data-ttu-id="cc470-121">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc470-121">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc470-122">將這個屬性設定為 `true` 時，如果 Kerberos 無法使用，會允許驗證降級為 NTLM。</span><span class="sxs-lookup"><span data-stu-id="cc470-122">Setting this property to `true` allows authentication to downgrade to NTLM if Kerberos is not available.</span></span>  
  
 <span data-ttu-id="cc470-123">將這個屬性設定為 `false`，可以讓 [!INCLUDE[indigo1](~/includes/indigo1-md.md)] 在使用 NTLM 時能夠盡力擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="cc470-123">Setting this property to `false` causes [!INCLUDE[indigo1](~/includes/indigo1-md.md)] to make a best-effort to throw an exception if NTLM is used.</span></span> <span data-ttu-id="cc470-124">請注意，將此屬性設為 `false`，不一定能夠禁止 NTLM 認證透過網路傳送。</span><span class="sxs-lookup"><span data-stu-id="cc470-124">Note that setting this property to `false` may not prevent NTLM credentials from being sent over the wire.</span></span>  
  
 <span data-ttu-id="cc470-125">包括工作群組和本機帳戶等特定部署都需要 NTLM 驗證。</span><span class="sxs-lookup"><span data-stu-id="cc470-125">Certain deployments such as workgroups and local accounts require NTLM authentication.</span></span> <span data-ttu-id="cc470-126">當使用 `false` 時，在此類部署中將這個旗標設定為 [!INCLUDE[indigo2](~/includes/indigo2-md.md)] 會造成驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="cc470-126">Setting this flag to `false` in such deployments result in authentication failures when using [!INCLUDE[indigo2](~/includes/indigo2-md.md)].</span></span> <span data-ttu-id="cc470-127">在需要相互驗證的部署中 (只有 Kerberos 才支援)，請將這個旗標設定為 `false`。</span><span class="sxs-lookup"><span data-stu-id="cc470-127">In a deployment that requires mutual authentication (only supported by Kerberos), set this flag to `false`.</span></span>  
  
 <span data-ttu-id="cc470-128">NTLM (Windows NT LAN Manager) 是使用獨立的系統和網路包括執行 Windows NT 作業系統的系統上的驗證通訊協定。</span><span class="sxs-lookup"><span data-stu-id="cc470-128">NTLM (Windows NT LAN Manager) is the authentication protocol used on networks that include systems running the Windows NT operating system, and on stand-alone systems.</span></span>  
  
 <span data-ttu-id="cc470-129">比起 NTLM，Microsoft Kerberos 安全性套件可為網路上的系統提供更高的安全性。</span><span class="sxs-lookup"><span data-stu-id="cc470-129">The Microsoft Kerberos security package adds greater security than NTLM to systems on a network.</span></span> <span data-ttu-id="cc470-130">雖然 Microsoft Kerberos 是選擇的通訊協定，仍然支援 NTLM，和必須用於網路驗證，如果網路包含執行 Windows NT 4.0 及更早版本，版本系統和獨立系統上使用。</span><span class="sxs-lookup"><span data-stu-id="cc470-130">Although Microsoft Kerberos is the protocol of choice, NTLM is still supported and must be used for network authentication if the network includes systems running versions of Windows NT 4.0 and earlier, and on stand-alone systems.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential ClientCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential ClientCredential" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCredential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkCredential ^ ClientCredential { System::Net::NetworkCredential ^ get(); void set(System::Net::NetworkCredential ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cc470-131">取得或設定 Windows 用戶端認證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc470-131">Gets or sets the Windows client credential.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cc470-132">用戶端的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cc470-132">The <see cref="T:System.Net.NetworkCredential" /> for the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc470-133">根據預設，目前執行緒的認證是由 [!INCLUDE[indigo2](~/includes/indigo2-md.md)] 用於執行 Windows SSPI Negotiate 驗證。</span><span class="sxs-lookup"><span data-stu-id="cc470-133">By default, the current thread's credentials are used by [!INCLUDE[indigo2](~/includes/indigo2-md.md)] for doing Windows SSPI Negotiate authentication.</span></span>  
  
 <span data-ttu-id="cc470-134">如果要將用戶端驗證成另一個主體，請變更由這個屬性傳回之 <xref:System.Net.NetworkCredential> 類別執行個體的屬性。</span><span class="sxs-lookup"><span data-stu-id="cc470-134">To authenticate the client as another principal, change the properties of the instance of the <xref:System.Net.NetworkCredential> class that is returned by this property.</span></span> <span data-ttu-id="cc470-135">或者，建立 <xref:System.Net.NetworkCredential> 類別的新執行個體，並將它指派給這個屬性。</span><span class="sxs-lookup"><span data-stu-id="cc470-135">Alternatively, create a new instance of the <xref:System.Net.NetworkCredential> class and assign it to this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc470-136">下列程式碼範例將示範如何將用戶端當做不同的主體進行驗證。</span><span class="sxs-lookup"><span data-stu-id="cc470-136">The following code examples show how to authenticate the client as a different principal.</span></span>  
  
 <span data-ttu-id="cc470-137">這是在說明如何變更由這個屬性所傳回 <xref:System.Net.NetworkCredential> 類別之執行個體的屬性。</span><span class="sxs-lookup"><span data-stu-id="cc470-137">This is how to change the properties of the instance of the <xref:System.Net.NetworkCredential> class that is returned by this property.</span></span>  
  
 [!code-csharp[WindowsClientCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#2)]  
  
 <span data-ttu-id="cc470-138">這是在說明如何建立 <xref:System.Net.NetworkCredential> 類別的新執行個體，並將它指派給這個屬性。</span><span class="sxs-lookup"><span data-stu-id="cc470-138">This is how to create a new instance of the <xref:System.Net.NetworkCredential> class and assign it to this property.</span></span>  
  
 [!code-csharp[WindowsClientCredential#3](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>