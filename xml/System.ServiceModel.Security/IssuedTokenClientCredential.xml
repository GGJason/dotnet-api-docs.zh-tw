<Type Name="IssuedTokenClientCredential" FullName="System.ServiceModel.Security.IssuedTokenClientCredential">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34a406b20cad9773c6970d4c57ec7851747f7e5b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36613013" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class IssuedTokenClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IssuedTokenClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.IssuedTokenClientCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IssuedTokenClientCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class IssuedTokenClientCredential sealed" />
  <TypeSignature Language="F#" Value="type IssuedTokenClientCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示用來從安全性權杖服務取得核發之權杖的資訊。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 這段程式碼示範用來建立此物件之執行個體的一種方法。  
  
 [!code-csharp[c_CreateSTS#30](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#30)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CacheIssuedTokens">
      <MemberSignature Language="C#" Value="public bool CacheIssuedTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CacheIssuedTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.IssuedTokenClientCredential.CacheIssuedTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheIssuedTokens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CacheIssuedTokens { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CacheIssuedTokens : bool with get, set" Usage="System.ServiceModel.Security.IssuedTokenClientCredential.CacheIssuedTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定布林值 (Boolean)，這個值會指定核發的權杖是否要由通道進行快取。</summary>
        <value>如果要快取權杖，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">嘗試設定唯讀的認證。<see langword="set" /></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultKeyEntropyMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.SecurityKeyEntropyMode DefaultKeyEntropyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Security.SecurityKeyEntropyMode DefaultKeyEntropyMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.IssuedTokenClientCredential.DefaultKeyEntropyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultKeyEntropyMode As SecurityKeyEntropyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::SecurityKeyEntropyMode DefaultKeyEntropyMode { System::ServiceModel::Security::SecurityKeyEntropyMode get(); void set(System::ServiceModel::Security::SecurityKeyEntropyMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultKeyEntropyMode : System.ServiceModel.Security.SecurityKeyEntropyMode with get, set" Usage="System.ServiceModel.Security.IssuedTokenClientCredential.DefaultKeyEntropyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityKeyEntropyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.ServiceModel.Security.SecurityKeyEntropyMode" /> 的預設值。</summary>
        <value>
          <see cref="T:System.ServiceModel.Security.SecurityKeyEntropyMode" /> 的值。 預設值為 <see cref="F:System.ServiceModel.Security.SecurityKeyEntropyMode.CombinedEntropy" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當用戶端與安全性權杖服務進行 WS-Trust 交換以取得核發的權杖時，有時必須與安全性權杖服務交換金鑰 Entropy，才能達成共用的對稱金鑰。 安全性權杖服務通常會指定要在其繫結中使用的 Entropy 交換機制。 如果未在安全性權杖服務的繫結中指定這樣的機制，則會使用 `DefaultKeyEntropyMode` 值來與安全性權杖服務交換 Entropy。  
  
   
  
## Examples  
 這段程式碼將示範如何設定這個屬性。  
  
 [!code-csharp[c_CreateSTS#17](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#17)]
 [!code-vb[c_CreateSTS#17](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">已嘗試設定 (<see langword="set" />) 唯讀的認證。</exception>
      </Docs>
    </Member>
    <Member MemberName="IssuedTokenRenewalThresholdPercentage">
      <MemberSignature Language="C#" Value="public int IssuedTokenRenewalThresholdPercentage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IssuedTokenRenewalThresholdPercentage" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.IssuedTokenClientCredential.IssuedTokenRenewalThresholdPercentage" />
      <MemberSignature Language="VB.NET" Value="Public Property IssuedTokenRenewalThresholdPercentage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IssuedTokenRenewalThresholdPercentage { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IssuedTokenRenewalThresholdPercentage : int with get, set" Usage="System.ServiceModel.Security.IssuedTokenClientCredential.IssuedTokenRenewalThresholdPercentage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定發行之權杖的更新臨界值百分比。</summary>
        <value>發行之權杖的更新臨界值百分比。 預設值為 60。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用戶端會快取核發的權杖，而且當快取的已核發權杖快要過期時，用戶端會自動從安全性權杖服務取得新核發的權杖。 這個屬性的值會決定已快取之已核發權杖的有效期間必須已超過多少百分比，才可以取得新核發的權杖。  
  
 例如，如果這個屬性的值為 60，而用戶端取得有效期為 100 分鐘的核發權杖，這時用戶端會重複使用該快取的已核發權杖，待過了 60 分鐘之後，再從安全性權杖服務取得新核發的權杖。  
  
   
  
## Examples  
 這段程式碼將示範如何設定這個屬性。  
  
 [!code-csharp[c_CreateSTS#16](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#16)]
 [!code-vb[c_CreateSTS#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">已嘗試設定 (<see langword="set" />) 唯讀的認證。</exception>
      </Docs>
    </Member>
    <Member MemberName="IssuerChannelBehaviors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;Uri,System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IEndpointBehavior&gt;&gt; IssuerChannelBehaviors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Uri, class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IEndpointBehavior&gt;&gt; IssuerChannelBehaviors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.IssuedTokenClientCredential.IssuerChannelBehaviors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssuerChannelBehaviors As Dictionary(Of Uri, KeyedByTypeCollection(Of IEndpointBehavior))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;Uri ^, System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IEndpointBehavior ^&gt; ^&gt; ^ IssuerChannelBehaviors { System::Collections::Generic::Dictionary&lt;Uri ^, System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IEndpointBehavior ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IssuerChannelBehaviors : System.Collections.Generic.Dictionary&lt;Uri, System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IEndpointBehavior&gt;&gt;" Usage="System.ServiceModel.Security.IssuedTokenClientCredential.IssuerChannelBehaviors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Uri,System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IEndpointBehavior&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得簽發者通道行為的集合。</summary>
        <value>
          <see cref="T:System.Collections.Generic.Dictionary`2" /> 的 <see cref="T:System.ServiceModel.Description.IEndpointBehavior" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 字典索引鍵是用戶端要與其通訊之安全性權杖服務的 URI。 每個 URI 的項目<xref:System.Collections.Generic.KeyedByTypeCollection%601>的應用程式使用由 WCF 所建立的通道中，從安全性權杖服務取得核發的權杖端點行為。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalIssuerAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress LocalIssuerAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress LocalIssuerAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property LocalIssuerAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ LocalIssuerAddress { System::ServiceModel::EndpointAddress ^ get(); void set(System::ServiceModel::EndpointAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LocalIssuerAddress : System.ServiceModel.EndpointAddress with get, set" Usage="System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定本機簽發者的位址。</summary>
        <value>本機簽發者的 <see cref="T:System.ServiceModel.EndpointAddress" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 從安全性權杖服務取得核發的權杖時，用戶端應用程式必須以安全性權杖服務的位址加以設定。 這項資訊可以由目標服務在其安全性原則中加以指定。 如果目標服務未在其安全性原則中指定這項資訊，會使用用戶端的 WCF 通道`LocalIssuerAddress`為安全性權杖服務取得核發之權杖的位址。  
  
   
  
## Examples  
 這段程式碼將示範如何設定這個屬性。  
  
 [!code-csharp[c_CreateSTS#31](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">已嘗試設定 (<see langword="set" />) 唯讀的認證。</exception>
      </Docs>
    </Member>
    <Member MemberName="LocalIssuerBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding LocalIssuerBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding LocalIssuerBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property LocalIssuerBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ LocalIssuerBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LocalIssuerBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定本機簽發者的繫結。</summary>
        <value>本機簽發者的 <see cref="T:System.ServiceModel.Channels.Binding" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 從安全性權杖服務取得核發的權杖時，用戶端應用程式必須透過繫結設定為與安全性權杖服務進行通訊。 目標服務不會在其安全性原則中指定安全性權杖服務的相關資訊，用戶端的 WCF 通道使用 localissuerbinding 做為繫結使用的安全性權杖服務進行通訊。  
  
   
  
## Examples  
 這段程式碼將示範如何設定這個屬性。  
  
 [!code-csharp[c_CreateSTS#13](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#13)]
 [!code-vb[c_CreateSTS#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">已嘗試設定 (<see langword="set" />) 唯讀的認證。</exception>
      </Docs>
    </Member>
    <Member MemberName="LocalIssuerChannelBehaviors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IEndpointBehavior&gt; LocalIssuerChannelBehaviors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IEndpointBehavior&gt; LocalIssuerChannelBehaviors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerChannelBehaviors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalIssuerChannelBehaviors As KeyedByTypeCollection(Of IEndpointBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IEndpointBehavior ^&gt; ^ LocalIssuerChannelBehaviors { System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IEndpointBehavior ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalIssuerChannelBehaviors : System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IEndpointBehavior&gt;" Usage="System.ServiceModel.Security.IssuedTokenClientCredential.LocalIssuerChannelBehaviors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IEndpointBehavior&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得本機簽發者通道行為的集合。</summary>
        <value>
          <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> 的 <see cref="T:System.ServiceModel.Description.IEndpointBehavior" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這是<xref:System.Collections.Generic.KeyedByTypeCollection%601>的應用程式使用由 WCF 所建立的通道中，從本機安全性權杖服務取得核發的權杖端點行為。  
  
   
  
## Examples  
 這段程式碼將示範如何設定這個屬性。  
  
 [!code-csharp[c_CreateSTS#32](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIssuedTokenCachingTime">
      <MemberSignature Language="C#" Value="public TimeSpan MaxIssuedTokenCachingTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxIssuedTokenCachingTime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.IssuedTokenClientCredential.MaxIssuedTokenCachingTime" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIssuedTokenCachingTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaxIssuedTokenCachingTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.MaxIssuedTokenCachingTime : TimeSpan with get, set" Usage="System.ServiceModel.Security.IssuedTokenClientCredential.MaxIssuedTokenCachingTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定發行之權杖的最大快取時間。</summary>
        <value>
          <see cref="T:System.TimeSpan" />，表示發行之權杖的最大快取時間。 預設值是 <see cref="F:System.TimeSpan.MaxValue" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，從安全性權杖服務取得核發的權杖會由 WCF 用戶端通道快取。 這個屬性可讓應用程式指定通道快取已核發之權杖的最長時間。  
  
   
  
## Examples  
 這段程式碼將示範如何設定這個屬性。  
  
 [!code-csharp[c_CreateSTS#15](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#15)]
 [!code-vb[c_CreateSTS#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">設定的值小於零。<see langword="set" /></exception>
        <exception cref="T:System.InvalidOperationException">已嘗試設定 (<see langword="set" />) 唯讀的認證。</exception>
      </Docs>
    </Member>
  </Members>
</Type>