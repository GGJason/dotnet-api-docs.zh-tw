<Type Name="IdentityVerifier" FullName="System.ServiceModel.Security.IdentityVerifier">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4f479eecb4b45fb5a13f2f14489be8f625c71e38" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51907255" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class IdentityVerifier" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IdentityVerifier extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.IdentityVerifier" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IdentityVerifier" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdentityVerifier abstract" />
  <TypeSignature Language="F#" Value="type IdentityVerifier = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="87dc7-101">
        <see langword="abstract" /> 基底類別，這個基底類別可在實作之後，用來向代表遠端端點的授權內容驗證預期的身分識別，或是從端點位址建立身分識別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="87dc7-101">An <see langword="abstract" /> base class that can be implemented to verify an expected identity against an authorization context that represents a remote endpoint, or to create an identity from an endpoint address.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87dc7-102">WCF 基礎結構呼叫<xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A>方法第一次，以從訊息擷取服務的身分識別。</span><span class="sxs-lookup"><span data-stu-id="87dc7-102">The WCF infrastructure calls the <xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A> method first to retrieve the service's identity from the message.</span></span> <span data-ttu-id="87dc7-103">接著，基礎結構會呼叫 <xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A> 方法，並傳回 <xref:System.ServiceModel.EndpointIdentity> 和 <xref:System.IdentityModel.Policy.AuthorizationContext>。</span><span class="sxs-lookup"><span data-stu-id="87dc7-103">Next, the infrastructure calls the <xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A> method with the returned <xref:System.ServiceModel.EndpointIdentity> and <xref:System.IdentityModel.Policy.AuthorizationContext>.</span></span>  
  
 <span data-ttu-id="87dc7-104">如需有關實作類別的詳細資訊，請參閱[如何： 建立自訂用戶端身分識別驗證器](~/docs/framework/wcf/extending/how-to-create-a-custom-client-identity-verifier.md)。</span><span class="sxs-lookup"><span data-stu-id="87dc7-104">For more information about implementing the class, see [How to: Create a Custom Client Identity Verifier](~/docs/framework/wcf/extending/how-to-create-a-custom-client-identity-verifier.md).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f2d34e43-fa8b-46d2-91cf-d2960e13e16b">
      <span data-ttu-id="87dc7-105">如何： 建立自訂用戶端身分識別驗證器</span>
      <span class="sxs-lookup">
        <span data-stu-id="87dc7-105">How To: Create a Custom Client Identity Verifier</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/a4c8f52c-5b30-45c4-a545-63244aba82be">
      <span data-ttu-id="87dc7-106">指定的識別服務，以進行驗證</span>
      <span class="sxs-lookup">
        <span data-stu-id="87dc7-106">Specifying the Identity of a Service for Authentication</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IdentityVerifier ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IdentityVerifier();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="87dc7-107">建立此類別的例項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87dc7-107">Creates an instance of this class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public abstract bool CheckAccess (System.ServiceModel.EndpointIdentity identity, System.IdentityModel.Policy.AuthorizationContext authContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckAccess(class System.ServiceModel.EndpointIdentity identity, class System.IdentityModel.Policy.AuthorizationContext authContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CheckAccess (identity As EndpointIdentity, authContext As AuthorizationContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CheckAccess(System::ServiceModel::EndpointIdentity ^ identity, System::IdentityModel::Policy::AuthorizationContext ^ authContext);" />
      <MemberSignature Language="F#" Value="abstract member CheckAccess : System.ServiceModel.EndpointIdentity * System.IdentityModel.Policy.AuthorizationContext -&gt; bool" Usage="identityVerifier.CheckAccess (identity, authContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity" />
        <Parameter Name="authContext" Type="System.IdentityModel.Policy.AuthorizationContext" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="87dc7-108">要驗證的 <see cref="T:System.ServiceModel.EndpointIdentity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87dc7-108">The <see cref="T:System.ServiceModel.EndpointIdentity" /> to verify.</span>
          </span>
        </param>
        <param name="authContext">
          <span data-ttu-id="87dc7-109">要測試 <c>identity</c> 的 <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87dc7-109">The <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> to test the <c>identity</c> against.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87dc7-110">實作方法以驗證身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87dc7-110">Implements a method to verify an identity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87dc7-111">如果身分識別通過驗證，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87dc7-111">
              <see langword="true" /> if the identity is verified; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="87dc7-112">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87dc7-112">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefault">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.IdentityVerifier CreateDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Security.IdentityVerifier CreateDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.CreateDefault" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefault () As IdentityVerifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Security::IdentityVerifier ^ CreateDefault();" />
      <MemberSignature Language="F#" Value="static member CreateDefault : unit -&gt; System.ServiceModel.Security.IdentityVerifier" Usage="System.ServiceModel.Security.IdentityVerifier.CreateDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.IdentityVerifier</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="87dc7-113">建立這個類別的預設執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87dc7-113">Creates a default instance of this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87dc7-114">
            <see cref="T:System.ServiceModel.Security.IdentityVerifier" /> 的預設執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87dc7-114">A default instance of <see cref="T:System.ServiceModel.Security.IdentityVerifier" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetIdentity">
      <MemberSignature Language="C#" Value="public abstract bool TryGetIdentity (System.ServiceModel.EndpointAddress reference, out System.ServiceModel.EndpointIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetIdentity(class System.ServiceModel.EndpointAddress reference, [out] class System.ServiceModel.EndpointIdentity&amp; identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryGetIdentity (reference As EndpointAddress, ByRef identity As EndpointIdentity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryGetIdentity(System::ServiceModel::EndpointAddress ^ reference, [Runtime::InteropServices::Out] System::ServiceModel::EndpointIdentity ^ % identity);" />
      <MemberSignature Language="F#" Value="abstract member TryGetIdentity : System.ServiceModel.EndpointAddress *  -&gt; bool" Usage="identityVerifier.TryGetIdentity (reference, identity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reference">
          <span data-ttu-id="87dc7-115">要用於建立身分識別的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87dc7-115">The <see cref="T:System.ServiceModel.EndpointAddress" /> to use for creating the identity.</span>
          </span>
        </param>
        <param name="identity">
          <span data-ttu-id="87dc7-116">傳回的 <see cref="T:System.ServiceModel.EndpointIdentity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87dc7-116">The <see cref="T:System.ServiceModel.EndpointIdentity" /> that is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87dc7-117">嘗試從端點建立身分識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87dc7-117">Tries to create an identity from an endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87dc7-118">如果傳回身分識別，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87dc7-118">
              <see langword="true" /> if the identity is returned; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="87dc7-119">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87dc7-119">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87dc7-120">如果未將明確的 <xref:System.ServiceModel.Security.IdentityVerifier> 指定為 <xref:System.ServiceModel.DnsEndpointIdentity> 的部分，預設的 <xref:System.ServiceModel.EndpointAddress.Uri%2A> 會根據 <xref:System.ServiceModel.EndpointIdentity> 的主機名稱部分建立 <xref:System.ServiceModel.EndpointAddress>。</span><span class="sxs-lookup"><span data-stu-id="87dc7-120">The default <xref:System.ServiceModel.Security.IdentityVerifier> creates a <xref:System.ServiceModel.DnsEndpointIdentity> based on the hostname portion of <xref:System.ServiceModel.EndpointAddress.Uri%2A> if an explicit <xref:System.ServiceModel.EndpointIdentity> has not been specified as part of the <xref:System.ServiceModel.EndpointAddress>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>