<Type Name="ServiceCredentialsSecurityTokenManager" FullName="System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager">
  <TypeSignature Language="C#" Value="public class ServiceCredentialsSecurityTokenManager : System.IdentityModel.Selectors.SecurityTokenManager, System.ServiceModel.Security.IEndpointIdentityProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceCredentialsSecurityTokenManager extends System.IdentityModel.Selectors.SecurityTokenManager implements class System.ServiceModel.Security.IEndpointIdentityProvider" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceCredentialsSecurityTokenManager&#xA;Inherits SecurityTokenManager&#xA;Implements IEndpointIdentityProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceCredentialsSecurityTokenManager : System::IdentityModel::Selectors::SecurityTokenManager, System::ServiceModel::Security::IEndpointIdentityProvider" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenManager</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Security.IEndpointIdentityProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f3fd0-101">表示 <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" /> 實作，這個實作會根據服務上設定的 <see cref="T:System.ServiceModel.Description.ServiceCredentials" />，提供安全性權杖序列化程式。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-101">Represents a <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" /> implementation that provides security token serializers based on the <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> configured on the service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fd0-102">這個類別會建立 <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-102">This class creates instances of the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class.</span></span> <span data-ttu-id="f3fd0-103">每個服務通道接聽程式 (Listener) 各有一個這個類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-103">There is one instance of this class for each service channel listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3fd0-104">下列程式碼將示範如何覆寫這個類別來建立自訂的服務認證權杖管理員。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-104">The following code shows how to override this class to create a customized Service Credentials Token Manager.</span></span>  
  
 [!code-csharp[c_CustomCredentials#5](~/samples/snippets/csharp/VS_Snippets_CFX/c_customcredentials/cs/source.cs#5)]
 [!code-vb[c_CustomCredentials#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customcredentials/vb/service/service.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceCredentialsSecurityTokenManager (System.ServiceModel.Description.ServiceCredentials parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ServiceCredentials parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As ServiceCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceCredentialsSecurityTokenManager(System::ServiceModel::Description::ServiceCredentials ^ parent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.ServiceModel.Description.ServiceCredentials" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="f3fd0-105">服務認證。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-105">The service credentials.</span></span></param>
        <summary><span data-ttu-id="f3fd0-106">根據傳入的 <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" />，初始化 <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" /> class based on the <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> passed in.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecureConversationTokenAuthenticator">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecureConversationTokenAuthenticator (System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement recipientRequirement, bool preserveBootstrapTokens, out System.IdentityModel.Selectors.SecurityTokenResolver sctResolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecureConversationTokenAuthenticator(class System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement recipientRequirement, bool preserveBootstrapTokens, [out] class System.IdentityModel.Selectors.SecurityTokenResolver&amp; sctResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateSecureConversationTokenAuthenticator (recipientRequirement As RecipientServiceModelSecurityTokenRequirement, preserveBootstrapTokens As Boolean, ByRef sctResolver As SecurityTokenResolver) As SecurityTokenAuthenticator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IdentityModel::Selectors::SecurityTokenAuthenticator ^ CreateSecureConversationTokenAuthenticator(System::ServiceModel::Security::Tokens::RecipientServiceModelSecurityTokenRequirement ^ recipientRequirement, bool preserveBootstrapTokens, [Runtime::InteropServices::Out] System::IdentityModel::Selectors::SecurityTokenResolver ^ % sctResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenAuthenticator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipientRequirement" Type="System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement" />
        <Parameter Name="preserveBootstrapTokens" Type="System.Boolean" />
        <Parameter Name="sctResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="recipientRequirement"><span data-ttu-id="f3fd0-107">表示指定接聽程式的安全性屬性需求。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-107">Represents security property requirements specific to the listener.</span></span></param>
        <param name="preserveBootstrapTokens">
          <span data-ttu-id="f3fd0-108">如果應保留啟動安裝權杖，則為 <see langword="true" />，否則為 <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="f3fd0-108"><see langword="true" /> if the bootstrap tokens should be preserved; Otherwise <see langword="false" />.</span></span></param>
        <param name="sctResolver"><span data-ttu-id="f3fd0-109">安全性權杖解析器物件可以在您有金鑰識別碼或金鑰識別碼子句時，擷取安全性權杖或金鑰。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-109">A security token resolver object that can retrieve security tokens or keys when you have a key identifier or key identifier clause.</span></span></param>
        <summary><span data-ttu-id="f3fd0-110">根據傳入的屬性需求，建立安全對話權杖驗證器。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-110">Creates a secure conversation token authenticator based on the property requirements passed in.</span></span></summary>
        <returns><span data-ttu-id="f3fd0-111">安全性權杖驗證器。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-111">A security token authenticator.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenAuthenticator">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator(class System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, [out] class System.IdentityModel.Selectors.SecurityTokenResolver&amp; outOfBandTokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenAuthenticator (tokenRequirement As SecurityTokenRequirement, ByRef outOfBandTokenResolver As SecurityTokenResolver) As SecurityTokenAuthenticator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenAuthenticator ^ CreateSecurityTokenAuthenticator(System::IdentityModel::Selectors::SecurityTokenRequirement ^ tokenRequirement, [Runtime::InteropServices::Out] System::IdentityModel::Selectors::SecurityTokenResolver ^ % outOfBandTokenResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenAuthenticator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenRequirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
        <Parameter Name="outOfBandTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="tokenRequirement"><span data-ttu-id="f3fd0-112">安全性權杖的需求。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-112">The security token requirement.</span></span></param>
        <param name="outOfBandTokenResolver"><span data-ttu-id="f3fd0-113">當這個方法傳回時，會包含 <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-113">When this method returns, contains a <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />.</span></span> <span data-ttu-id="f3fd0-114">這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-114">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="f3fd0-115">根據 <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />，建立安全性權杖驗證程式。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-115">Creates a security token authenticator based on the <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</span></span></summary>
        <returns><span data-ttu-id="f3fd0-116">安全性權杖驗證器</span><span class="sxs-lookup"><span data-stu-id="f3fd0-116">The security token authenticator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fd0-117">`outOfBand`語彙基元解析程式可以選擇性地傳回方法，WCF 安全性處理器用來解析語彙基元不在 SOAP 訊息時處理安全性。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-117">An `outOfBand` token resolver can optionally be returned by the method, which is used by the WCF security processor to resolve tokens that are not in the SOAP message when processing security.</span></span> <span data-ttu-id="f3fd0-118">此方法傳回的 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> 會驗證權杖，並擷取宣告。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-118">The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> that is returned by this method validates tokens and extracts claims.</span></span> <span data-ttu-id="f3fd0-119">每個衍生自 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> 的類別都各有一個為其建立的 <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-119">One <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> is created for each class derived from <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3fd0-120">下列程式碼是說明如何覆寫這個方法的範例。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-120">The following code is an example of how to override this method.</span></span>  
  
 [!code-csharp[c_CustomTokenAuthenticator#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_customtokenauthenticator/cs/source.cs#2)]
 [!code-vb[c_CustomTokenAuthenticator#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customtokenauthenticator/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3fd0-121"><paramref name="tokenRequirement" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-121"><paramref name="tokenRequirement" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f3fd0-122">無法為傳入的<paramref name="tokenRequirement" /> 建立安全性權杖驗證器。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-122">A security token authenticator cannot be created for the <paramref name="tokenRequirement" /> that was passed in.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenProvider">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenProvider (requirement As SecurityTokenRequirement) As SecurityTokenProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenProvider ^ CreateSecurityTokenProvider(System::IdentityModel::Selectors::SecurityTokenRequirement ^ requirement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement"><span data-ttu-id="f3fd0-123">安全性權杖的需求。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-123">The security token requirement.</span></span></param>
        <summary><span data-ttu-id="f3fd0-124">根據 <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />，建立安全性權杖提供者。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-124">Creates a security token provider based on the <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</span></span></summary>
        <returns><span data-ttu-id="f3fd0-125">安全性權杖提供者。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-125">The security token provider.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fd0-126"><xref:System.IdentityModel.Selectors.SecurityTokenProvider> 類別會負責取得指定之 <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement> 的權杖。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-126">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class is responsible for obtaining tokens for a given <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.</span></span> <span data-ttu-id="f3fd0-127">此外，權杖提供者也可以支援更新和取消權杖。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-127">Optionally, token providers can support renewing and canceling tokens as well.</span></span> <span data-ttu-id="f3fd0-128">權杖提供者可以快取權杖 (如果設定這樣做的話)。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-128">The token provider can cache tokens if it is configured to do so.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3fd0-129">下列程式碼將示範如何覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-129">The following code shows how to override this method.</span></span>  
  
 [!code-csharp[ClientCredentialsSecurityTokenManager#4](~/samples/snippets/csharp/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/cs/source.cs#4)]
 [!code-vb[ClientCredentialsSecurityTokenManager#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3fd0-130"><paramref name="requirement" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-130"><paramref name="requirement" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f3fd0-131">無法為傳入的 <paramref name="requirement" /> 建立安全性權杖提供者。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-131">A security token provider cannot be created for the <paramref name="requirement" /> that was passed in.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenSerializer">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer(class System.IdentityModel.Selectors.SecurityTokenVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenSerializer (version As SecurityTokenVersion) As SecurityTokenSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenSerializer ^ CreateSecurityTokenSerializer(System::IdentityModel::Selectors::SecurityTokenVersion ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.IdentityModel.Selectors.SecurityTokenVersion" />
      </Parameters>
      <Docs>
        <param name="version"><span data-ttu-id="f3fd0-132">安全性權杖的版本。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-132">The version of the security token.</span></span></param>
        <summary><span data-ttu-id="f3fd0-133">根據傳入的安全性權杖版本，建立安全性權杖序列化程式。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-133">Creates a security token serializer based on the security token version passed in.</span></span></summary>
        <returns><span data-ttu-id="f3fd0-134">安全性權杖序列化程式。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-134">The security token serializer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fd0-135"><xref:System.IdentityModel.Selectors.SecurityTokenSerializer> 會用於寫入和讀取安全性權杖和安全性權杖參考。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-135">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used for writing and reading security tokens and security token references.</span></span> <span data-ttu-id="f3fd0-136">從 XML 還原序列化權杖時，傳回的權杖必須能夠執行密碼編譯作業。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-136">When deserializing the token from XML, the returned token must be able to perform cryptographic operations.</span></span> <span data-ttu-id="f3fd0-137">權杖序列化程式必須能夠執行充足的驗證，確保權杖可以執行密碼編譯作業 (Kerberos 票證處理、X.509 解碼、SAML 解碼和其他作業)，而且必須將應用程式信任決策順延給驗證程式處理。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-137">The token serializer must be able to do enough validation to ensure that the token can do cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding, and so on) but should defer application trust decisions to the authenticator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f3fd0-138">無法為傳入的 <paramref name="version" /> 建立安全性權杖序列化程式。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-138">A security token serializer cannot be created for the  <paramref name="version" /> that was passed in.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIdentityOfSelf">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.EndpointIdentity GetIdentityOfSelf (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.EndpointIdentity GetIdentityOfSelf(class System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdentityOfSelf (tokenRequirement As SecurityTokenRequirement) As EndpointIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::EndpointIdentity ^ GetIdentityOfSelf(System::IdentityModel::Selectors::SecurityTokenRequirement ^ tokenRequirement);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IEndpointIdentityProvider.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenRequirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="tokenRequirement"><span data-ttu-id="f3fd0-139">安全性權杖的需求。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-139">The security token requirement.</span></span></param>
        <summary><span data-ttu-id="f3fd0-140">根據安全性權杖需求，取得 <see cref="T:System.ServiceModel.EndpointIdentity" />。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-140">Gets the <see cref="T:System.ServiceModel.EndpointIdentity" /> based on the security token requirement.</span></span></summary>
        <returns><span data-ttu-id="f3fd0-141">對應至 <paramref name="tokenRequirement" /> 的端點身分識別。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-141">The endpoint identity that corresponds to the <paramref name="tokenRequirement" />.</span></span> <span data-ttu-id="f3fd0-142">如果無法從 <paramref name="tokenRequirement" /> 建立身分識別，則會傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-142"><see langword="null" /> is returned if an identity cannot be created from the <paramref name="tokenRequirement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fd0-143">這個方法會呼叫 WCF 基礎結構，以取得<xref:System.ServiceModel.EndpointIdentity>對應至服務端點。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-143">This method is called by the WCF infrastructure to obtain the <xref:System.ServiceModel.EndpointIdentity> that corresponds to a service endpoint.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3fd0-144"><paramref name="tokenRequirement" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-144"><paramref name="tokenRequirement" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsIssuedSecurityTokenRequirement">
      <MemberSignature Language="C#" Value="protected bool IsIssuedSecurityTokenRequirement (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsIssuedSecurityTokenRequirement(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsIssuedSecurityTokenRequirement (requirement As SecurityTokenRequirement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsIssuedSecurityTokenRequirement(System::IdentityModel::Selectors::SecurityTokenRequirement ^ requirement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement"><span data-ttu-id="f3fd0-145">安全性權杖的需求。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-145">The security token requirement.</span></span></param>
        <summary><span data-ttu-id="f3fd0-146">判斷安全性權杖需求是否針對已核發的權杖。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-146">Determines whether the security token requirement is for an issued token.</span></span></summary>
        <returns>
          <span data-ttu-id="f3fd0-147">如果安全性權杖需求是針對已核發的權杖，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-147"><see langword="true" /> if the security token requirement is for an issued token; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceCredentials">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceCredentials ServiceCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ServiceCredentials ServiceCredentials" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceCredentials As ServiceCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::ServiceCredentials ^ ServiceCredentials { System::ServiceModel::Description::ServiceCredentials ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f3fd0-148">取得用來建構這個類別執行個體的服務認證。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-148">Gets the service credentials used to construct this instance of this class.</span></span></summary>
        <value><span data-ttu-id="f3fd0-149">服務認證。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-149">The service credentials.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3fd0-150"><xref:System.ServiceModel.Description.ServiceCredentials> 物件可以用來設定服務認證以及服務認證驗證設定。</span><span class="sxs-lookup"><span data-stu-id="f3fd0-150">The <xref:System.ServiceModel.Description.ServiceCredentials> object enables you to configure service credentials as well as service credential authentication settings.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>