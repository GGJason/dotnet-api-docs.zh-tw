<Type Name="X509CertificateInitiatorServiceCredential" FullName="System.ServiceModel.Security.X509CertificateInitiatorServiceCredential">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e1e0ccdee0d10dbccd6f216e8008d9f878787a0d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36413183" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class X509CertificateInitiatorServiceCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509CertificateInitiatorServiceCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class X509CertificateInitiatorServiceCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509CertificateInitiatorServiceCredential sealed" />
  <TypeSignature Language="F#" Value="type X509CertificateInitiatorServiceCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="79199-101">表示服務用來驗證用戶端所提供之憑證的設定。</span>
      <span class="sxs-lookup">
        <span data-stu-id="79199-101">Represents the settings used by the service to validate the certificate presented by the clients.</span>
      </span>
      <span data-ttu-id="79199-102">它另外包含的憑證，可讓服務在使用 <see langword="MutualCertificateDuplex" /> 訊息安全性驗證模式時用於加密用戶端的回應或回呼 (Callback)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="79199-102">It also contains a certificate for the service to use for encrypting responses or callbacks for clients when <see langword="MutualCertificateDuplex" /> message security authentication mode is used.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79199-103">設定在這個類別中的憑證，只能在繫結是以 `MutualCertificateDuplex` 訊息安全性驗證模式所設定的情況下，才可用來加密傳送給用戶端的訊息。</span><span class="sxs-lookup"><span data-stu-id="79199-103">The certificate set in this class is used to encrypt messages to the client only for bindings that are configured with `MutualCertificateDuplex` message security authentication mode.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.Description.ServiceCredentials.ClientCertificate" />
  </Docs>
  <Members>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ClientCertificateAuthentication Authentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ClientCertificateAuthentication Authentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authentication As X509ClientCertificateAuthentication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509ClientCertificateAuthentication ^ Authentication { System::ServiceModel::Security::X509ClientCertificateAuthentication ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authentication : System.ServiceModel.Security.X509ClientCertificateAuthentication" Usage="System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ClientCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79199-104">取得驗證期間用來驗證用戶端提供之憑證的設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79199-104">Gets the settings used to validate the certificate presented by the client during authentication.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79199-105">驗證期間用來驗證用戶端提供之憑證的設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79199-105">The settings used to validate the certificate presented by the client during authentication.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="79199-106">下列程式碼將示範如何使用這個屬性來設定憑證驗證內容。</span><span class="sxs-lookup"><span data-stu-id="79199-106">The following code shows how to use this property to set the certificate authentication properties.</span></span>  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public Property Certificate As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ Certificate { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); void set(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Certificate : System.Security.Cryptography.X509Certificates.X509Certificate2 with get, set" Usage="System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79199-107">取得或設定要在 <see langword="MutualCertificateDuplex" /> 訊息安全性驗證模式中使用的憑證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79199-107">Gets or sets the certificate to use in <see langword="MutualCertificateDuplex" /> message security authentication mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79199-108">
            <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />，它可以在使用 <see langword="MutualCertificateDuplex" /> 訊息安全性驗證模式情況下，用來對處於非關聯雙工傳輸條件中之服務傳送給用戶端的訊息進行加密。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79199-108">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> to use to encrypt messages sent to the client by the service in the uncorrelated duplex transport case if the <see langword="MutualCertificateDuplex" /> message security authentication mode is used.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79199-109">這個屬性會在使用 `MutualCertificateDuplex` 訊息安全性驗證模式時，用於設定為訊息安全性模式的繫結。</span><span class="sxs-lookup"><span data-stu-id="79199-109">This property is used for bindings that are configured to message security mode when `MutualCertificateDuplex` message security authentication mode is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79199-110">下列程式碼範例會示範如何使用這個屬性來取得憑證。</span><span class="sxs-lookup"><span data-stu-id="79199-110">The following code shows how to use this property to get the certificate.</span></span>  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79199-111">已嘗試設定唯讀的認證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79199-111">An attempt was made to set a read-only credential.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79199-112">設定要用來加密服務傳送給用戶端之訊息的憑證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79199-112">Sets the certificate to use to encrypt messages sent to the client by the service.</span>
          </span>
          <span data-ttu-id="79199-113">只有以 <see langword="MutualCertificateDuplex" /> 訊息安全性驗證模式設定的繫結才會使用這個設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79199-113">This setting is used only by bindings that are configured with the <see langword="MutualCertificateDuplex" /> message security authentication mode.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCertificate">
      <MemberSignature Language="C#" Value="public void SetCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCertificate(System::String ^ subjectName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName);" />
      <MemberSignature Language="F#" Value="member this.SetCertificate : string * System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName -&gt; unit" Usage="x509CertificateInitiatorServiceCredential.SetCertificate (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
      </Parameters>
      <Docs>
        <param name="subjectName">
          <span data-ttu-id="79199-114">主體辨別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79199-114">The subject distinguished name.</span>
          </span>
        </param>
        <param name="storeLocation">
          <span data-ttu-id="79199-115">服務會用來取得憑證之憑證存放區的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79199-115">The location of the certificate store that the service uses to obtain the certificate.</span>
          </span>
        </param>
        <param name="storeName">
          <span data-ttu-id="79199-116">要開啟的 X.509 憑證存放區名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79199-116">The name of the X.509 certificate store to open.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79199-117">可讓您藉由指定主體辨別名稱來指定要用來加密用戶端之訊息的憑證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79199-117">Enables you to specify the certificate to use for encrypting messages for the client by specifying the subject distinguished name.</span>
          </span>
          <span data-ttu-id="79199-118">只有以 <see langword="MutualCertificateDuplex" /> 訊息安全性驗證模式設定的繫結才會使用這個設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79199-118">This setting is used only by bindings that are configured with the <see langword="MutualCertificateDuplex" /> message security authentication mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79199-119">如需有關 `subjectName` 參數的詳細資訊，請參閱<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>。</span><span class="sxs-lookup"><span data-stu-id="79199-119">For more information about the `subjectName` parameter, see <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>.</span></span>  
  
 <span data-ttu-id="79199-120">`storeLocation` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreLocation> 列舉型別中：</span><span class="sxs-lookup"><span data-stu-id="79199-120">Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:</span></span>  
  
-   <span data-ttu-id="79199-121"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>：指派給本機電腦的憑證存放區 (預設值)。</span><span class="sxs-lookup"><span data-stu-id="79199-121"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine (default).</span></span>  
  
-   <span data-ttu-id="79199-122"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>：目前使用者所使用的憑證存放區。</span><span class="sxs-lookup"><span data-stu-id="79199-122"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user.</span></span>  
  
 <span data-ttu-id="79199-123">如果用戶端應用程式是在系統帳戶下執行，則憑證通常位於 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>。</span><span class="sxs-lookup"><span data-stu-id="79199-123">If the client application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>.</span></span> <span data-ttu-id="79199-124">如果用戶端應用程式是在使用者帳戶下執行，則憑證通常位於 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>。</span><span class="sxs-lookup"><span data-stu-id="79199-124">If the client application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.</span></span>  
  
 <span data-ttu-id="79199-125">`storeName` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreName> 列舉型別中。</span><span class="sxs-lookup"><span data-stu-id="79199-125">Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79199-126">下列程式碼將示範如何使用這個方法來設定憑證。</span><span class="sxs-lookup"><span data-stu-id="79199-126">The following code shows how to use this method to set the certificate.</span></span>  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCertificate">
      <MemberSignature Language="C#" Value="public void SetCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCertificate(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="member this.SetCertificate : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj -&gt; unit" Usage="x509CertificateInitiatorServiceCredential.SetCertificate (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">
          <span data-ttu-id="79199-127">服務會用來取得憑證之憑證存放區的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79199-127">The location of the certificate store that the service uses to obtain the certificate.</span>
          </span>
        </param>
        <param name="storeName">
          <span data-ttu-id="79199-128">要開啟的 X.509 憑證存放區名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79199-128">The name of the X.509 certificate store to open.</span>
          </span>
        </param>
        <param name="findType">
          <span data-ttu-id="79199-129">要執行之 X.509 搜尋的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79199-129">The type of X.509 search to be executed.</span>
          </span>
        </param>
        <param name="findValue">
          <span data-ttu-id="79199-130">要在 X.509 憑證存放區內搜尋的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79199-130">The value to search for in the X.509 certificate store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79199-131">指定要用來加密用戶端之訊息的憑證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79199-131">Specifies the certificate to use for encrypting messages for the client.</span>
          </span>
          <span data-ttu-id="79199-132">只有以 <see langword="MutualCertificateDuplex" /> 訊息安全性驗證模式設定的繫結才會使用這個設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79199-132">This setting is used only by bindings that are configured with the <see langword="MutualCertificateDuplex" /> message security authentication mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79199-133">`storeLocation` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreLocation> 列舉型別中：</span><span class="sxs-lookup"><span data-stu-id="79199-133">Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:</span></span>  
  
-   <span data-ttu-id="79199-134"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>：指派給本機電腦的憑證存放區 (預設值)。</span><span class="sxs-lookup"><span data-stu-id="79199-134"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine (default).</span></span>  
  
-   <span data-ttu-id="79199-135"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>：目前使用者所使用的憑證存放區。</span><span class="sxs-lookup"><span data-stu-id="79199-135"><xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user.</span></span>  
  
 <span data-ttu-id="79199-136">如果應用程式是在系統帳戶下執行，則憑證通常位於 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>。</span><span class="sxs-lookup"><span data-stu-id="79199-136">If the application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>.</span></span> <span data-ttu-id="79199-137">如果應用程式是在使用者帳戶下執行，則憑證通常位於 <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>。</span><span class="sxs-lookup"><span data-stu-id="79199-137">If the application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.</span></span>  
  
 <span data-ttu-id="79199-138">`storeName` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.StoreName> 列舉型別中。</span><span class="sxs-lookup"><span data-stu-id="79199-138">Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.</span></span>  
  
 <span data-ttu-id="79199-139">`findType` 的值包含在 <xref:System.Security.Cryptography.X509Certificates.X509FindType> 列舉型別中。</span><span class="sxs-lookup"><span data-stu-id="79199-139">Values for `findType` are included in the <xref:System.Security.Cryptography.X509Certificates.X509FindType> enumeration.</span></span>  
  
 <span data-ttu-id="79199-140">最常用的列舉型別 (Enumeration) 是 <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>，它會針對指定之存放區內憑證的主體名稱進行不區分大小寫的搜尋。</span><span class="sxs-lookup"><span data-stu-id="79199-140">The most commonly used enumeration is <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, which does a case-insensitive search on the subject name of certificates in the specified store.</span></span> <span data-ttu-id="79199-141">這可以是不精確的搜尋。</span><span class="sxs-lookup"><span data-stu-id="79199-141">This can be an imprecise search.</span></span> <span data-ttu-id="79199-142">如果找不到憑證，或找到多個符合準則的憑證，將會擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="79199-142">If no certificates or multiple certificates that match the criteria are found, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79199-143">下列程式碼將示範如何使用這個方法來設定憑證。</span><span class="sxs-lookup"><span data-stu-id="79199-143">The following code shows how to use this method to set the certificate.</span></span>  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>