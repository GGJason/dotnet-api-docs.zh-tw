<Type Name="HttpDigestClientCredential" FullName="System.ServiceModel.Security.HttpDigestClientCredential">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6764b67cdd9a5b4bc4a4a53da015485d4a704e19" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49152970" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpDigestClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpDigestClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.HttpDigestClientCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpDigestClientCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpDigestClientCredential sealed" />
  <TypeSignature Language="F#" Value="type HttpDigestClientCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8ab41-101">用於 HTTP 用戶端的摘要式驗證。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8ab41-101">Used for digest authentication of HTTP clients.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ab41-102">摘要式驗證會確認通訊雙方都知道一個共用秘密 (密碼)。</span><span class="sxs-lookup"><span data-stu-id="8ab41-102">Digest authentication verifies that both parties to a communication know a shared secret (a password).</span></span> <span data-ttu-id="8ab41-103">驗證會在不以明文傳送密碼的情況下完成。</span><span class="sxs-lookup"><span data-stu-id="8ab41-103">Authentication is done without sending the password in the clear.</span></span> <span data-ttu-id="8ab41-104">摘要式驗證是以挑戰/回應架構為基礎。</span><span class="sxs-lookup"><span data-stu-id="8ab41-104">Digest authentication is based on a challenge-response paradigm.</span></span> <span data-ttu-id="8ab41-105">摘要配置會使用 Nonce (「只使用一次的數字」) 值來進行挑戰。</span><span class="sxs-lookup"><span data-stu-id="8ab41-105">The Digest scheme challenges using a nonce ("number used once") value.</span></span> <span data-ttu-id="8ab41-106">回應必須包含使用者名稱、密碼、Nonce 值、HTTP 方法和所要求 URI 的總和檢查碼 (Checksum)。</span><span class="sxs-lookup"><span data-stu-id="8ab41-106">The response must contain a checksum of the user name, the password, the nonce value, the HTTP method, and the requested URI.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowedImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowedImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel AllowedImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.AllowedImpersonationLevel : System.Security.Principal.TokenImpersonationLevel with get, set" Usage="System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ab41-107">取得或設定用戶端允許以提供之用戶端認證進行模擬的層級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ab41-107">Gets or sets the level of impersonation that the client allows with the client credential provided.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ab41-108">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" />，這是用戶端在 HTTP 摘要式驗證中授與伺服器的一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ab41-108">The <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> that the client grants the server as part of HTTP digest authentication.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ab41-109">允許的值包括：</span><span class="sxs-lookup"><span data-stu-id="8ab41-109">Allowable values include:</span></span>  
  
 <span data-ttu-id="8ab41-110"><xref:System.Security.Principal.TokenImpersonationLevel.Delegation>,</span><span class="sxs-lookup"><span data-stu-id="8ab41-110"><xref:System.Security.Principal.TokenImpersonationLevel.Delegation>,</span></span>  
  
 <span data-ttu-id="8ab41-111"><xref:System.Security.Principal.TokenImpersonationLevel.Identification>，及</span><span class="sxs-lookup"><span data-stu-id="8ab41-111"><xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and</span></span>  
  
 <span data-ttu-id="8ab41-112"><xref:System.Security.Principal.TokenImpersonationLevel.Impersonation>.</span><span class="sxs-lookup"><span data-stu-id="8ab41-112"><xref:System.Security.Principal.TokenImpersonationLevel.Impersonation>.</span></span>  
  
 <span data-ttu-id="8ab41-113">由於摘要式驗證的限制，當用戶端使用非預設的認證時，只允許其使用 `Impersonation` 和 `Delegation` 層級。</span><span class="sxs-lookup"><span data-stu-id="8ab41-113">Due to the limitations of Digest authentication, when the client is using non-default credentials, only `Impersonation` and `Delegation` levels are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ab41-114">下列範例將示範如何設定這個屬性。</span><span class="sxs-lookup"><span data-stu-id="8ab41-114">The following example shows how to set this property.</span></span>  
  
 [!code-csharp[S_UE_HttpDigestClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpdigestclientcredential/cs/source.cs#1)]
 [!code-vb[S_UE_HttpDigestClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_httpdigestclientcredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential ClientCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential ClientCredential" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCredential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkCredential ^ ClientCredential { System::Net::NetworkCredential ^ get(); void set(System::Net::NetworkCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCredential : System.Net.NetworkCredential with get, set" Usage="System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ab41-115">取得或設定要用於摘要式驗證的網路認證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ab41-115">Gets or sets the network credential to be used for digest-based authentication.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ab41-116">要用於摘要式驗證的 <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ab41-116">The <see cref="T:System.Net.NetworkCredential" /> to be used for digest-based authentication.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ab41-117">如果未指定，則會使用預設的執行緒認證。</span><span class="sxs-lookup"><span data-stu-id="8ab41-117">If not specified, the default thread credential will be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ab41-118">下列程式碼範例將示範如何將用戶端當做不同的主體進行驗證。</span><span class="sxs-lookup"><span data-stu-id="8ab41-118">The following code examples show how to authenticate the client as a different principal.</span></span>  
  
 <span data-ttu-id="8ab41-119">這是在說明如何變更由這個屬性所傳回 <xref:System.Net.NetworkCredential> 類別之執行個體的屬性。</span><span class="sxs-lookup"><span data-stu-id="8ab41-119">This is how to change the properties of the instance of the <xref:System.Net.NetworkCredential> class that is returned by this property.</span></span>  
  
 [!code-csharp[S_UE_HttpDigestClientCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpdigestclientcredential/cs/source.cs#2)]  
  
 <span data-ttu-id="8ab41-120">而以下則說明如何建立 <xref:System.Net.NetworkCredential> 類別的新執行個體，並將它指派給這個屬性。</span><span class="sxs-lookup"><span data-stu-id="8ab41-120">And here is how to create a new instance of the <xref:System.Net.NetworkCredential> class and assign it to this property.</span></span>  
  
 [!code-csharp[S_UE_HttpDigestClientCredential#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpdigestclientcredential/cs/source.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>