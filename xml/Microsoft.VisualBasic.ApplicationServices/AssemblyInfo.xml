<Type Name="AssemblyInfo" FullName="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="679fcea51efbb18c748ec970509d0f9fd92e5aa1" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46607905" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AssemblyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi AssemblyInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyInfo" />
  <TypeSignature Language="F#" Value="type AssemblyInfo = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供取得應用程式相關資訊的屬性，例如版本號碼、描述、已載入組件等。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所公開之屬性的一些`My.Application.Info`物件傳回應用程式的組件資訊。 若要將應用程式的組件中的資訊，您必須使用**組件資訊** 對話方塊中，從可存取**應用程式**窗格**專案設計工具**.  
  
 `My.Application.Info`物件會提供類似的功能<xref:System.Diagnostics.FileVersionInfo>類別，但是範圍提供快速的存取權的最常見的屬性。  
  
 其他屬性，例如`LoadedAssemblies`，提供應用程式的目前狀態存取。  
  
   
  
## Examples  
 這個範例會使用`My.Application.Info.Version`屬性來顯示應用程式的版本。  
  
 [!code-vb[VbVbalrMyApplication#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#30)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
    <altmember cref="T:System.Diagnostics.FileVersionInfo" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyInfo (System.Reflection.Assembly currentAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.Reflection.Assembly currentAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (currentAssembly As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyInfo(System::Reflection::Assembly ^ currentAssembly);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.ApplicationServices.AssemblyInfo : System.Reflection.Assembly -&gt; Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" Usage="new Microsoft.VisualBasic.ApplicationServices.AssemblyInfo currentAssembly" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="currentAssembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="currentAssembly">
          <see cref="T:System.Reflection.Assembly" />。 要為其取得資訊的組件。</param>
        <summary>使用指定的組件資訊，初始化 <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得應用程式之組件檔案的名稱 (不包括副檔名)。</summary>
        <value>
          <see langword="String" />，包含檔案名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.AssemblyName`屬性會取得包含資訊清單檔案的名稱。  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|------------------|---------------|  
|Windows Forms 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows Form 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Application.Info.AssemblyName`屬性來顯示應用程式的名稱。  
  
 [!code-vb[VbVbalrMyApplication#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制存取檔案和資料夾的能力。 關聯的列舉型別：<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="CompanyName">
      <MemberSignature Language="C#" Value="public string CompanyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompanyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompanyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompanyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompanyName : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與應用程式關聯的公司名稱。</summary>
        <value>
          <see langword="String" />，包含與應用程式相關聯的公司名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.CompanyName`屬性會取得應用程式相關聯的公司名稱。  
  
 您可以變更的值來變更公司名稱**公司**中**組件資訊**對話方塊中，從可存取**應用程式**窗格**專案設計工具**。  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|------------------|---------------|  
|Windows Forms 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows Form 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Application.Info.CompanyName`屬性來顯示應用程式相關聯的公司名稱。  
  
 [!code-vb[VbVbalrMyApplication#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">組件沒有 <see cref="T:System.Reflection.AssemblyCompanyAttribute" /> 屬性。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Copyright">
      <MemberSignature Language="C#" Value="public string Copyright { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Copyright" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Copyright As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Copyright { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Copyright : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與應用程式相關聯的著作權注意事項。</summary>
        <value>
          <see langword="String" />，包含與應用程式相關聯的著作權注意事項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Copyright`屬性會取得應用程式相關聯的著作權注意事項。  
  
 您可以藉由變更的值變更的著作權注意事項**著作權**中**組件資訊**對話方塊中，從可存取**應用程式**窗格**專案設計工具**。  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|------------------|---------------|  
|Windows Forms 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows Form 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Application.Info.Copyright`屬性來顯示應用程式相關聯的公司名稱。  
  
 [!code-vb[VbVbalrMyApplication#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">組件沒有 <see cref="T:System.Reflection.AssemblyCopyrightAttribute" /> 屬性。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與應用程式相關聯的描述。</summary>
        <value>
          <see langword="String" />，包含與應用程式相關聯的描述。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Description`屬性會取得與應用程式相關聯的描述。  
  
 您可以藉由變更的值變更的描述**描述**中**組件資訊**對話方塊中，從可存取**應用程式**窗格**專案設計工具**。  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|------------------|---------------|  
|Windows Forms 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows Form 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Application.Info.Description`屬性來顯示應用程式相關聯的描述。  
  
 [!code-vb[VbVbalrMyApplication#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">組件沒有 <see cref="T:System.Reflection.AssemblyDescriptionAttribute" /> 屬性。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="DirectoryPath">
      <MemberSignature Language="C#" Value="public string DirectoryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryPath : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得儲存應用程式的目錄。</summary>
        <value>
          <see langword="String" />，包含儲存應用程式的目錄。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.DirectoryPath`屬性會取得儲存應用程式的目錄。  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|------------------|---------------|  
|Windows Forms 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows Form 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Application.Info.DirectoryPath`屬性來顯示應用程式儲存所在的目錄路徑。  
  
 [!code-vb[VbVbalrMyApplication#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#24)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制存取檔案和資料夾的能力。 關聯的列舉型別：<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="LoadedAssemblies">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.Assembly&gt; LoadedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Reflection.Assembly&gt; LoadedAssemblies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadedAssemblies As ReadOnlyCollection(Of Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Reflection::Assembly ^&gt; ^ LoadedAssemblies { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Reflection::Assembly ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadedAssemblies : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.Assembly&gt;" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得應用程式所載入之所有組件的集合。</summary>
        <value>
          <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的 <see cref="T:System.Reflection.Assembly" />，包含應用程式所載入之所有組件的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.LoadedAssemblies`屬性是類似於<xref:System.AppDomain.GetAssemblies%2A>方法。  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|------------------|---------------|  
|Windows Forms 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows Form 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Application.Info.LoadedAssemblies`屬性來顯示組件載入應用程式。  
  
 [!code-vb[VbVbalrMyApplication#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#25)]  
  
 這個範例需要您的 Windows Forms 應用程式已<xref:System.Windows.Forms.ListBox>控制項，名為`ListBox1`。  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None." />
        <exception cref="T:System.AppDomainUnloadedException">未載入應用程式定義域。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <altmember cref="T:System.Reflection.Assembly" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ProductName">
      <MemberSignature Language="C#" Value="public string ProductName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductName : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與該應用程式相關聯的產品名稱。</summary>
        <value>
          <see langword="String" />，包含與該應用程式相關聯的產品名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.ProductName`屬性取得應用程式相關聯的產品名稱。  
  
 您可以藉由變更的值變更的產品名稱**產品**中**組件資訊**對話方塊中，從可存取**應用程式**窗格**專案設計工具**。  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|------------------|---------------|  
|Windows Forms 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows Form 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Application.Info.ProductName`屬性來顯示應用程式相關聯的產品名稱。  
  
 [!code-vb[VbVbalrMyApplication#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">組件沒有 <see cref="T:System.Reflection.AssemblyProductAttribute" /> 屬性。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StackTrace : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前的堆疊追蹤資訊。</summary>
        <value>
          <see langword="String" />，包含目前堆疊追蹤資訊。 傳回值可以是 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.StackTrace`屬性清單的方法呼叫，以倒時順序 — 也就是第一，它會描述最新的方法呼叫，並列出每個方法呼叫，在個別行上的堆疊上。 不過，`My.Application.Info.StackTrace`屬性可能不會報告如預期般運作，因為發生在最佳化期間的程式碼轉換的多個方法呼叫。  
  
 一般而言，堆疊追蹤資訊會用於偵錯應用程式。  
  
 每個方法呼叫的堆疊追蹤資訊的格式如下：  
  
 「 在*FullClassName*。*MethodName*(*MethodParams*) 中*FileName*： 列*LineNumber* "  
  
 "At"常值前方會有三個空格，而"in"的常值和 「: 列 「 無法使用偵錯符號時，會省略。 預留位置`FullClassName`， `MethodName`， `MethodParams`， `FileName`，和`LineNumber`定義，如下所示的實際值取代：  
  
|組件|描述|  
|----------|-----------------|  
|*FullClassName*|類別，包括命名空間的完整名稱。|  
|*方法名稱*|方法的名稱。|  
|*MethodParams*|參數類型/名稱組的清單。 每個配對會以逗號 （，） 分隔。 如果，則會忽略這項資訊*MethodName*採用零參數。|  
|*FileName*|名稱的來源檔案的位置*MethodName*方法宣告。 如果無法使用的偵錯符號，則會忽略這項資訊。|  
|*LineNumber*|在行號*檔名*包含從原始程式碼*MethodName*呼叫堆疊上的指示。 如果無法使用的偵錯符號，則會忽略這項資訊。|  
  
 `My.Applicaiton.Info.StackTrace`屬性會提供類似的功能<xref:System.Environment.StackTrace%2A>屬性。  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|------------------|---------------|  
|Windows Forms 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows Form 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Application.Info.StackTrace`屬性來顯示從點執行的程式碼應用程式的堆疊追蹤。  
  
 [!code-vb[VbVbalrMyApplication#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">要求的堆疊追蹤資訊超出範圍。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制能夠存取的檔案路徑中的資訊。 關聯的列舉型別：<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:System.Environment.StackTrace" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Title : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與應用程式相關聯的標題。</summary>
        <value>
          <see langword="String" />，包含與應用程式相關聯的 <see cref="T:System.Reflection.AssemblyTitleAttribute" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Title`屬性會取得與應用程式相關聯的標題。  
  
 您可以藉由變更的值變更標題**標題**中**組件資訊**對話方塊中，從可存取**應用程式**窗格**專案設計工具**。  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|------------------|---------------|  
|Windows Forms 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows Form 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Application.Info.Title`屬性來顯示應用程式相關聯的標題。  
  
 [!code-vb[VbVbalrMyApplication#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">組件沒有 <see cref="T:System.Reflection.AssemblyTitleAttribute" /> 屬性。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Trademark">
      <MemberSignature Language="C#" Value="public string Trademark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Trademark" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Trademark As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Trademark { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Trademark : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與應用程式相關聯的商標注意事項。</summary>
        <value>
          <see langword="String" />，包含與應用程式相關聯的商標注意事項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Trademark`屬性會取得應用程式相關聯的商標注意事項。  
  
 您可以藉由變更的值變更的商標注意事項**商標**中**組件資訊**對話方塊中，從可存取**應用程式**窗格**專案設計工具**。  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|------------------|---------------|  
|Windows Forms 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows Form 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Application.Info.Trademark`屬性來顯示應用程式相關聯的商標資訊。  
  
 [!code-vb[VbVbalrMyApplication#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">組件沒有 <see cref="T:System.Reflection.AssemblyTrademarkAttribute" /> 屬性。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得應用程式的版本號碼。</summary>
        <value>
          <see cref="T:System.Version" /> 物件，包含應用程式的版本號碼。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Version`屬性會取得<xref:System.Version>物件，其中包含應用程式的版本號碼。 您可以使用<xref:System.Version.Major%2A>， <xref:System.Version.Minor%2A>， <xref:System.Version.Build%2A>，以及<xref:System.Version.Revision%2A>的屬性<xref:System.Version>來存取應用程式相關的特定版本資訊的物件。  
  
 ClickOnce 部署應用程式應該改用<xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>屬性<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment%2A>屬性。  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|------------------|---------------|  
|Windows Forms 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows Form 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Application.Info.Version`屬性來顯示應用程式的版本。  
  
 [!code-vb[VbVbalrMyApplication#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">應用程式沒有足夠的使用權限可以存取組件版本。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">控制存取檔案和資料夾的能力。 關聯的列舉型別：<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment" />
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
        <altmember cref="T:System.Version" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WorkingSet">
      <MemberSignature Language="C#" Value="public long WorkingSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 WorkingSet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkingSet As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long WorkingSet { long get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkingSet : int64" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得對應至處理程序內容的實體記憶體數量。</summary>
        <value>
          <see langword="Long" />，包含對應至處理序內容之實體記憶體的位元組數目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.WorkingSet`屬性具有相同的行為<xref:System.Environment.WorkingSet%2A>屬性。  
  
> [!NOTE]
>  這個屬性一律會傳回零 Windows 98 和 Windows Millennium Edition。  
  
## <a name="availability-by-project-type"></a>專案類型的可用性  
  
|專案類型|可用|  
|------------------|---------------|  
|Windows Forms 應用程式|**是**|  
|類別庫|**是**|  
|主控台應用程式|**是**|  
|Windows Form 控制項程式庫|**是**|  
|Web 控制項程式庫|否|  
|Windows 服務|**是**|  
|網站|否|  
  
   
  
## Examples  
 這個範例會使用`My.Application.Info.WorkingSet`屬性以顯示對應至應用程式的實體記憶體的位元組數目。  
  
 [!code-vb[VbVbalrMyApplication#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">發生部分信任以及使用者缺少必要權限的狀況。</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">控制能夠存取所有的環境變數。 關聯的列舉型別：<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:System.Environment.WorkingSet" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>