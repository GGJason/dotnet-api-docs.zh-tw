<Type Name="SecurityContext" FullName="System.Security.SecurityContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4f448e689f964c78687f8f82f8b189dd6345dd70" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49141270" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecurityContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecurityContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SecurityContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="356ac-101">封裝並散佈跨執行緒傳送之執行內容的所有安全性相關資料。</span><span class="sxs-lookup"><span data-stu-id="356ac-101">Encapsulates and propagates all security-related data for execution contexts transferred across threads.</span></span> <span data-ttu-id="356ac-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="356ac-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="356ac-103">A<xref:System.Security.SecurityContext>物件會擷取所有安全性相關的資訊，對於邏輯執行緒，包括在中所包含的資訊<xref:System.Security.Principal.WindowsIdentity>和<xref:System.Threading.CompressedStack>物件。</span><span class="sxs-lookup"><span data-stu-id="356ac-103">A <xref:System.Security.SecurityContext> object captures all security-related information for a logical thread, including the information contained in the <xref:System.Security.Principal.WindowsIdentity> and <xref:System.Threading.CompressedStack> objects.</span></span>  <span data-ttu-id="356ac-104">此組態允許自動傳播時，堆疊上的 Windows 身分識別和安全性項目<xref:System.Security.SecurityContext>會複製，並在非同步執行緒之間傳輸。</span><span class="sxs-lookup"><span data-stu-id="356ac-104">This configuration allows the Windows identity and the security elements on the stack to be propagated automatically when the <xref:System.Security.SecurityContext> is copied and transferred across asynchronous threads.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="356ac-105">Common language runtime (CLR) 並知道使用 managed 程式碼，不是模擬外部 managed 程式碼，例如執行透過平台執行的作業叫用 unmanaged 程式碼，或透過直接呼叫 Win32 函式的模擬。</span><span class="sxs-lookup"><span data-stu-id="356ac-105">The common language runtime (CLR) is aware of impersonation operations performed using only managed code, not of impersonation performed outside of managed code, such as through platform invoke to unmanaged code or through direct calls to Win32 functions.</span></span> <span data-ttu-id="356ac-106">只有受控<xref:System.Security.Principal.WindowsIdentity>物件可以流經非同步點，除非`alwaysFlowImpersonationPolicy`項目已設定為`true`(`<alwaysFlowImpersonationPolicy enabled="true"/>`)。</span><span class="sxs-lookup"><span data-stu-id="356ac-106">Only managed <xref:System.Security.Principal.WindowsIdentity> objects can flow across asynchronous points, unless the `alwaysFlowImpersonationPolicy` element has been set to `true` (`<alwaysFlowImpersonationPolicy enabled="true"/>`).</span></span> <span data-ttu-id="356ac-107">設定`alwaysFlowImpersonationPolicy`項目`true`指定 Windows 識別一律流經非同步點，不論模擬的執行方式。</span><span class="sxs-lookup"><span data-stu-id="356ac-107">Setting the `alwaysFlowImpersonationPolicy` element to `true` specifies that the Windows identity always flows across asynchronous points, regardless of how impersonation was performed.</span></span> <span data-ttu-id="356ac-108">如需詳細資訊流動 unmanaged 模擬跨非同步點，請參閱 < [ &lt;alwaysFlowImpersonationPolicy&gt;項目](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md)。</span><span class="sxs-lookup"><span data-stu-id="356ac-108">For more information about flowing unmanaged impersonation across asynchronous points, see [&lt;alwaysFlowImpersonationPolicy&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md).</span></span>  
  
 <span data-ttu-id="356ac-109"><xref:System.Security.SecurityContext>是較大的一部分<xref:System.Threading.ExecutionContext>和流動或移轉時<xref:System.Threading.ExecutionContext>流動或移轉。</span><span class="sxs-lookup"><span data-stu-id="356ac-109">The <xref:System.Security.SecurityContext> is part of the larger <xref:System.Threading.ExecutionContext> and flows or migrates when the <xref:System.Threading.ExecutionContext> flows or migrates.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="356ac-110">此類型會實作<xref:System.IDisposable>介面。</span><span class="sxs-lookup"><span data-stu-id="356ac-110">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="356ac-111">當您完成使用型別時，您應該處置它直接或間接。</span><span class="sxs-lookup"><span data-stu-id="356ac-111">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="356ac-112">若要直接處置型別，呼叫其<xref:System.IDisposable.Dispose%2A>方法中的`try` / `catch`區塊。</span><span class="sxs-lookup"><span data-stu-id="356ac-112">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="356ac-113">若要處置它間接，使用的語言建構這類`using`（在 C# 中) 或`Using`（在 Visual Basic)。</span><span class="sxs-lookup"><span data-stu-id="356ac-113">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="356ac-114">如需詳細資訊，請參閱 「 使用物件，實作 IDisposable 」 一節<xref:System.IDisposable>介面 > 主題。</span><span class="sxs-lookup"><span data-stu-id="356ac-114">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityContext Capture ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityContext Capture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.Capture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture () As SecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityContext ^ Capture();" />
      <MemberSignature Language="F#" Value="static member Capture : unit -&gt; System.Security.SecurityContext" Usage="System.Security.SecurityContext.Capture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="356ac-115">擷取目前執行緒的安全性內容。</span><span class="sxs-lookup"><span data-stu-id="356ac-115">Captures the security context for the current thread.</span></span></summary>
        <returns><span data-ttu-id="356ac-116">目前執行緒的安全性內容。</span><span class="sxs-lookup"><span data-stu-id="356ac-116">The security context for the current thread.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="356ac-117">擷取的安全性內容可以套用至另一個執行緒。</span><span class="sxs-lookup"><span data-stu-id="356ac-117">The captured security context can be applied to another thread.</span></span> <span data-ttu-id="356ac-118"><xref:System.Security.SecurityContext>組成<xref:System.Threading.CompressedStack>而<xref:System.Security.Principal.WindowsIdentity>執行的執行緒。</span><span class="sxs-lookup"><span data-stu-id="356ac-118">The <xref:System.Security.SecurityContext> consists of the <xref:System.Threading.CompressedStack> and the <xref:System.Security.Principal.WindowsIdentity> for the executing thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCopy () As SecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityContext ^ CreateCopy();" />
      <MemberSignature Language="F#" Value="member this.CreateCopy : unit -&gt; System.Security.SecurityContext" Usage="securityContext.CreateCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="356ac-119">建立目前安全性內容的複本。</span><span class="sxs-lookup"><span data-stu-id="356ac-119">Creates a copy of the current security context.</span></span></summary>
        <returns><span data-ttu-id="356ac-120">目前執行緒的安全性內容。</span><span class="sxs-lookup"><span data-stu-id="356ac-120">The security context for the current thread.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="356ac-121">目前的內容必須取得透過擷取或複製作業。</span><span class="sxs-lookup"><span data-stu-id="356ac-121">The current context must have been acquired through a capture or a copy operation.</span></span> <span data-ttu-id="356ac-122">這個方法可用於套用擷取<xref:System.Security.SecurityContext>多個執行緒。</span><span class="sxs-lookup"><span data-stu-id="356ac-122">This method is useful for applying a captured <xref:System.Security.SecurityContext> to multiple threads.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="356ac-123">目前的安全性內容是先前已用過、已在應用程式定義域之間封送處理，或者不是透過 <see cref="M:System.Security.SecurityContext.Capture" /> 方法所取得。</span><span class="sxs-lookup"><span data-stu-id="356ac-123">The current security context has been previously used, was marshaled across application domains, or was not acquired through the <see cref="M:System.Security.SecurityContext.Capture" /> method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="securityContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="356ac-124">釋放 <see cref="T:System.Security.SecurityContext" /> 類別目前的執行個體所使用的全部資源。</span><span class="sxs-lookup"><span data-stu-id="356ac-124">Releases all resources used by the current instance of the <see cref="T:System.Security.SecurityContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="356ac-125">`Dispose` 使用完畢時，請呼叫 <xref:System.Security.SecurityContext>。</span><span class="sxs-lookup"><span data-stu-id="356ac-125">Call `Dispose` when you are finished using the <xref:System.Security.SecurityContext>.</span></span> <span data-ttu-id="356ac-126">`Dispose` 方法會將 <xref:System.Security.SecurityContext> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="356ac-126">The `Dispose` method leaves the <xref:System.Security.SecurityContext> in an unusable state.</span></span> <span data-ttu-id="356ac-127">之後呼叫`Dispose`，您必須釋放所有的參考<xref:System.Security.SecurityContext>讓記憶體回收行程可以回收記憶體，<xref:System.Security.SecurityContext>所佔用。</span><span class="sxs-lookup"><span data-stu-id="356ac-127">After calling `Dispose`, you must release all references to the <xref:System.Security.SecurityContext> so the garbage collector can reclaim the memory that the <xref:System.Security.SecurityContext> was occupying.</span></span>  
  
 <span data-ttu-id="356ac-128">如需詳細資訊，請參閱 <<c0> [ 清除 Unmanaged 資源向上](~/docs/standard/garbage-collection/unmanaged.md)並[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="356ac-128">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="356ac-129">在您釋放最後一個 `Dispose` 參考之前，請務必呼叫 <xref:System.Security.SecurityContext>。</span><span class="sxs-lookup"><span data-stu-id="356ac-129">Always call `Dispose` before you release your last reference to the <xref:System.Security.SecurityContext>.</span></span> <span data-ttu-id="356ac-130">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.Security.SecurityContext> 物件的 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="356ac-130">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.SecurityContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlowSuppressed">
      <MemberSignature Language="C#" Value="public static bool IsFlowSuppressed ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFlowSuppressed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.IsFlowSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFlowSuppressed () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFlowSuppressed();" />
      <MemberSignature Language="F#" Value="static member IsFlowSuppressed : unit -&gt; bool" Usage="System.Security.SecurityContext.IsFlowSuppressed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="356ac-131">決定安全性內容的流量是否已經抑制。</span><span class="sxs-lookup"><span data-stu-id="356ac-131">Determines whether the flow of the security context has been suppressed.</span></span></summary>
        <returns><span data-ttu-id="356ac-132">如果已經抑制流量則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="356ac-132"><see langword="true" /> if the flow has been suppressed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="356ac-133"><xref:System.Security.SecurityContext.IsFlowSuppressed%2A>基礎結構元件會使用方法來判斷是否要傳送<xref:System.Security.SecurityContext>非同步作業期間的資訊。</span><span class="sxs-lookup"><span data-stu-id="356ac-133">The <xref:System.Security.SecurityContext.IsFlowSuppressed%2A> method is used by infrastructure components to determine whether to transfer the <xref:System.Security.SecurityContext> information during asynchronous operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWindowsIdentityFlowSuppressed">
      <MemberSignature Language="C#" Value="public static bool IsWindowsIdentityFlowSuppressed ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWindowsIdentityFlowSuppressed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWindowsIdentityFlowSuppressed () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWindowsIdentityFlowSuppressed();" />
      <MemberSignature Language="F#" Value="static member IsWindowsIdentityFlowSuppressed : unit -&gt; bool" Usage="System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="356ac-134">決定目前安全性內容中 Windows 識別部分的流量是否已抑制。</span><span class="sxs-lookup"><span data-stu-id="356ac-134">Determines whether the flow of the Windows identity portion of the current security context has been suppressed.</span></span></summary>
        <returns><span data-ttu-id="356ac-135">如果已經抑制流量則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="356ac-135"><see langword="true" /> if the flow has been suppressed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="356ac-136"><xref:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed%2A>基礎結構元件會使用方法來判斷是否要傳送的 Windows 身分識別資訊時<xref:System.Security.SecurityContext>可在非同步作業期間移轉。</span><span class="sxs-lookup"><span data-stu-id="356ac-136">The <xref:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed%2A> method is used by infrastructure components to determine whether to transfer the Windows identity information when the <xref:System.Security.SecurityContext> migrates during asynchronous operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreFlow">
      <MemberSignature Language="C#" Value="public static void RestoreFlow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreFlow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.RestoreFlow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RestoreFlow ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RestoreFlow();" />
      <MemberSignature Language="F#" Value="static member RestoreFlow : unit -&gt; unit" Usage="System.Security.SecurityContext.RestoreFlow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="356ac-137">還原安全性內容在非同步執行緒之間的流量。</span><span class="sxs-lookup"><span data-stu-id="356ac-137">Restores the flow of the security context across asynchronous threads.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="356ac-138"><xref:System.Security.SecurityContext.RestoreFlow%2A>方法會呼叫<xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=nameWithType>方法，以先前的效果<xref:System.Security.SecurityContext.SuppressFlow%2A>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="356ac-138">The <xref:System.Security.SecurityContext.RestoreFlow%2A> method is called by the <xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=nameWithType> method to reverse the effect of a prior <xref:System.Security.SecurityContext.SuppressFlow%2A> method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="356ac-139">安全性內容為 <see langword="null" /> 或空字串。</span><span class="sxs-lookup"><span data-stu-id="356ac-139">The security context is <see langword="null" /> or an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.Security.SecurityContext securityContext, System.Threading.ContextCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.Security.SecurityContext securityContext, class System.Threading.ContextCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(System::Security::SecurityContext ^ securityContext, System::Threading::ContextCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member Run : System.Security.SecurityContext * System.Threading.ContextCallback * obj -&gt; unit" Usage="System.Security.SecurityContext.Run (securityContext, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityContext" Type="System.Security.SecurityContext" />
        <Parameter Name="callback" Type="System.Threading.ContextCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="securityContext"><span data-ttu-id="356ac-140">要設定的安全性內容。</span><span class="sxs-lookup"><span data-stu-id="356ac-140">The security context to set.</span></span></param>
        <param name="callback"><span data-ttu-id="356ac-141">委派，表示要在指定的安全性內容中執行的方法。</span><span class="sxs-lookup"><span data-stu-id="356ac-141">The delegate that represents the method to run in the specified security context.</span></span></param>
        <param name="state"><span data-ttu-id="356ac-142">要傳遞至回呼 (Callback) 方法的物件。</span><span class="sxs-lookup"><span data-stu-id="356ac-142">The object to pass to the callback method.</span></span></param>
        <summary><span data-ttu-id="356ac-143">在目前執行緒上的指定安全性內容中執行指定的方法。</span><span class="sxs-lookup"><span data-stu-id="356ac-143">Runs the specified method in the specified security context on the current thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="356ac-144">方法呼叫完成時，目前執行緒的安全性內容會傳回其先前的狀態。</span><span class="sxs-lookup"><span data-stu-id="356ac-144">The security context for the current thread is returned to its previous state when the method call is complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="356ac-145">下列程式碼範例示範如何使用<xref:System.Security.SecurityContext.Run%2A>方法，以指定的安全性內容中執行的方法。</span><span class="sxs-lookup"><span data-stu-id="356ac-145">The following code example shows how to use the <xref:System.Security.SecurityContext.Run%2A> method to execute a method in a specified security context.</span></span>  
  
 [!code-csharp[System.Security.SecurityContext.Run#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecurityContext.Run/CS/form1.cs#1)]
 [!code-vb[System.Security.SecurityContext.Run#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecurityContext.Run/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="356ac-146"><paramref name="securityContext" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="356ac-146"><paramref name="securityContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="356ac-147">-或-</span><span class="sxs-lookup"><span data-stu-id="356ac-147">-or-</span></span> 
 <span data-ttu-id="356ac-148"><paramref name="securityContext" /> 不是透過擷取作業取得。</span><span class="sxs-lookup"><span data-stu-id="356ac-148"><paramref name="securityContext" /> was not acquired through a capture operation.</span></span>  
  
<span data-ttu-id="356ac-149">-或-</span><span class="sxs-lookup"><span data-stu-id="356ac-149">-or-</span></span> 
 <span data-ttu-id="356ac-150">已經將 <paramref name="securityContext" /> 做為 <see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" /> 方法呼叫的引數使用。</span><span class="sxs-lookup"><span data-stu-id="356ac-150"><paramref name="securityContext" /> has already been used as the argument to a <see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" /> method call.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="356ac-151">需要完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="356ac-151">requires full trust for the immediate caller.</span></span> <span data-ttu-id="356ac-152">此成員不能由部分信任或不透明的程式碼。</span><span class="sxs-lookup"><span data-stu-id="356ac-152">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SuppressFlow">
      <MemberSignature Language="C#" Value="public static System.Threading.AsyncFlowControl SuppressFlow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.AsyncFlowControl SuppressFlow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.SuppressFlow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SuppressFlow () As AsyncFlowControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::AsyncFlowControl SuppressFlow();" />
      <MemberSignature Language="F#" Value="static member SuppressFlow : unit -&gt; System.Threading.AsyncFlowControl" Usage="System.Security.SecurityContext.SuppressFlow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.AsyncFlowControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="356ac-153">抑制安全性內容在非同步執行緒之間的流量。</span><span class="sxs-lookup"><span data-stu-id="356ac-153">Suppresses the flow of the security context across asynchronous threads.</span></span></summary>
        <returns><span data-ttu-id="356ac-154">還原流量的 <see cref="T:System.Threading.AsyncFlowControl" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="356ac-154">An <see cref="T:System.Threading.AsyncFlowControl" /> structure for restoring the flow.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="356ac-155">使用這個方法來隱藏的流程<xref:System.Security.SecurityContext>非同步作業的目前執行緒的詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="356ac-155">Use this method to suppress the flow of <xref:System.Security.SecurityContext> information on the current thread for asynchronous operations.</span></span>  
  
 <span data-ttu-id="356ac-156">Common language runtime (CLR) 只會知道會使用 managed 程式碼執行的模擬作業。</span><span class="sxs-lookup"><span data-stu-id="356ac-156">The common language runtime (CLR) is only aware of the impersonation operations performed using managed code.</span></span> <span data-ttu-id="356ac-157">CLR 具有 managed 程式碼，外部執行的模擬不知道，例如平台叫用 unmanaged 程式碼進行模擬，或透過呼叫 Win32 函式。</span><span class="sxs-lookup"><span data-stu-id="356ac-157">The CLR has no knowledge of impersonation performed outside of managed code, such as platform invokes to unmanaged code that does the impersonation, or through calls to Win32 functions.</span></span> <span data-ttu-id="356ac-158">流程跨非同步點，您必須使用受管理的身分識別<xref:System.Security.Principal.WindowsIdentity>和<xref:System.Security.Principal.WindowsImpersonationContext>方法。</span><span class="sxs-lookup"><span data-stu-id="356ac-158">To flow identity across asynchronous points you must use the managed <xref:System.Security.Principal.WindowsIdentity> and <xref:System.Security.Principal.WindowsImpersonationContext> methods.</span></span>  
  
 <span data-ttu-id="356ac-159">使用<xref:System.Threading.AsyncFlowControl.Undo%2A>方法傳回<xref:System.Threading.AsyncFlowControl>結構，以傳回<xref:System.Security.SecurityContext>至其先前狀態的物件。</span><span class="sxs-lookup"><span data-stu-id="356ac-159">Use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method on the returned <xref:System.Threading.AsyncFlowControl> structure to return the <xref:System.Security.SecurityContext> object to its previous state.</span></span>  
  
 <span data-ttu-id="356ac-160">這個方法受到<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>針對<xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType>權限。</span><span class="sxs-lookup"><span data-stu-id="356ac-160">This method is protected with a <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> for <xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType> permission.</span></span> <span data-ttu-id="356ac-161">完全受信任的元件可以呼叫這個方法，以隱藏的流程<xref:System.Security.SecurityContext>非同步呼叫期間的資訊。</span><span class="sxs-lookup"><span data-stu-id="356ac-161">A fully trusted component can call this method to suppress the flow of the <xref:System.Security.SecurityContext> information during asynchronous calls.</span></span> <span data-ttu-id="356ac-162">當隱藏流程時，<xref:System.Security.SecurityContext.Capture%2A>方法會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="356ac-162">When the flow is suppressed, the <xref:System.Security.SecurityContext.Capture%2A> method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="356ac-163">需要完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="356ac-163">requires full trust for the immediate caller.</span></span> <span data-ttu-id="356ac-164">此成員不能由部分信任或不透明的程式碼。</span><span class="sxs-lookup"><span data-stu-id="356ac-164">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SuppressFlowWindowsIdentity">
      <MemberSignature Language="C#" Value="public static System.Threading.AsyncFlowControl SuppressFlowWindowsIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.AsyncFlowControl SuppressFlowWindowsIdentity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SuppressFlowWindowsIdentity () As AsyncFlowControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::AsyncFlowControl SuppressFlowWindowsIdentity();" />
      <MemberSignature Language="F#" Value="static member SuppressFlowWindowsIdentity : unit -&gt; System.Threading.AsyncFlowControl" Usage="System.Security.SecurityContext.SuppressFlowWindowsIdentity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.AsyncFlowControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="356ac-165">抑制目前安全性內容中 Windows 識別部分在非同步執行緒之間的流量。</span><span class="sxs-lookup"><span data-stu-id="356ac-165">Suppresses the flow of the Windows identity portion of the current security context across asynchronous threads.</span></span></summary>
        <returns><span data-ttu-id="356ac-166">用於還原流量的結構。</span><span class="sxs-lookup"><span data-stu-id="356ac-166">A structure for restoring the flow.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="356ac-167">若要隱藏的 Windows 身分識別流程中使用這個方法時<xref:System.Security.SecurityContext>在非同步執行緒之間移轉。</span><span class="sxs-lookup"><span data-stu-id="356ac-167">Use this method to suppress the flow of the Windows identity when the <xref:System.Security.SecurityContext> migrates across asynchronous threads.</span></span>  
  
 <span data-ttu-id="356ac-168">使用<xref:System.Threading.AsyncFlowControl.Undo%2A>方法傳回<xref:System.Threading.AsyncFlowControl>結構，以傳回<xref:System.Security.SecurityContext>至其先前狀態的物件。</span><span class="sxs-lookup"><span data-stu-id="356ac-168">Use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method on the returned <xref:System.Threading.AsyncFlowControl> structure to return the <xref:System.Security.SecurityContext> object to its previous state.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="356ac-169">Common language runtime (CLR) 並知道使用 managed 程式碼，不是模擬外部 managed 程式碼，例如執行透過平台執行的作業叫用 unmanaged 程式碼，或透過直接呼叫 Win32 函式的模擬。</span><span class="sxs-lookup"><span data-stu-id="356ac-169">The common language runtime (CLR) is aware of impersonation operations performed using only managed code, not of impersonation performed outside of managed code, such as through platform invoke to unmanaged code or through direct calls to Win32 functions.</span></span> <span data-ttu-id="356ac-170">只有受控<xref:System.Security.Principal.WindowsIdentity>物件可以流經非同步點，除非`alwaysFlowImpersonationPolicy`項目已設定為`true`(`<alwaysFlowImpersonationPolicy enabled="true"/>`)。</span><span class="sxs-lookup"><span data-stu-id="356ac-170">Only managed <xref:System.Security.Principal.WindowsIdentity> objects can flow across asynchronous points, unless the `alwaysFlowImpersonationPolicy` element has been set to `true` (`<alwaysFlowImpersonationPolicy enabled="true"/>`).</span></span> <span data-ttu-id="356ac-171">設定`alwaysFlowImpersonationPolicy`項目`true`指定 Windows 識別一律流經非同步點，不論模擬的執行方式。</span><span class="sxs-lookup"><span data-stu-id="356ac-171">Setting the `alwaysFlowImpersonationPolicy` element to `true` specifies that the Windows identity always flows across asynchronous points, regardless of how impersonation was performed.</span></span> <span data-ttu-id="356ac-172">如需詳細資訊流動 unmanaged 模擬跨非同步點，請參閱 < [ \<alwaysFlowImpersonationPolicy > 項目](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md)。</span><span class="sxs-lookup"><span data-stu-id="356ac-172">For more information about flowing unmanaged impersonation across asynchronous points, see [\<alwaysFlowImpersonationPolicy> Element](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="356ac-173">需要完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="356ac-173">requires full trust for the immediate caller.</span></span> <span data-ttu-id="356ac-174">此成員不能由部分信任或不透明的程式碼。</span><span class="sxs-lookup"><span data-stu-id="356ac-174">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>