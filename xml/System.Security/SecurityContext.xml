<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecurityContext.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac519deaf58cc4ef80ad473aaa036612750728c0284.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19deaf58cc4ef80ad473aaa036612750728c0284</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.SecurityContext">
          <source>Encapsulates and propagates all security-related data for execution contexts transferred across threads.</source>
          <target state="translated">封裝並散佈跨執行緒傳送之執行內容的所有安全性相關資料。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.SecurityContext">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityContext">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityContext&gt;</ph> object captures all security-related information for a logical thread, including the information contained in the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> and <ph id="ph3">&lt;xref:System.Threading.CompressedStack&gt;</ph> objects.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Security.SecurityContext&gt;</ph>物件擷取所有安全性相關的資訊，包括資訊中包含的邏輯執行緒<ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>和<ph id="ph3">&lt;xref:System.Threading.CompressedStack&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityContext">
          <source>This configuration allows the Windows identity and the security elements on the stack to be propagated automatically when the <ph id="ph1">&lt;xref:System.Security.SecurityContext&gt;</ph> is copied and transferred across asynchronous threads.</source>
          <target state="translated">此設定允許的 Windows 身分識別和安全性項目可自動傳播時堆疊上<ph id="ph1">&lt;xref:System.Security.SecurityContext&gt;</ph>會複製，並在非同步執行緒之間傳輸。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityContext">
          <source>The common language runtime (CLR) is aware of impersonation operations performed using only managed code, not of impersonation performed outside of managed code, such as through platform invoke to unmanaged code or through direct calls to Win32 functions.</source>
          <target state="translated">Common language runtime (CLR) 並知道模擬使用 managed 程式碼，不是模擬以外 managed 程式碼，例如執行可透過平台執行的作業叫用 unmanaged 程式碼或透過直接呼叫 Win32 函式。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityContext">
          <source>Only managed <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> objects can flow across asynchronous points, unless the <ph id="ph2">`alwaysFlowImpersonationPolicy`</ph> element has been set to <ph id="ph3">`true`</ph> (<ph id="ph4">`&lt;alwaysFlowImpersonationPolicy enabled="true"/&gt;`</ph>).</source>
          <target state="translated">只能管理<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>物件流向可跨非同步的點，除非<ph id="ph2">`alwaysFlowImpersonationPolicy`</ph>項目已設定為<ph id="ph3">`true`</ph>(<ph id="ph4">`&lt;alwaysFlowImpersonationPolicy enabled="true"/&gt;`</ph>)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityContext">
          <source>Setting the <ph id="ph1">`alwaysFlowImpersonationPolicy`</ph> element to <ph id="ph2">`true`</ph> specifies that the Windows identity always flows across asynchronous points, regardless of how impersonation was performed.</source>
          <target state="translated">設定<ph id="ph1">`alwaysFlowImpersonationPolicy`</ph>元素<ph id="ph2">`true`</ph>指定 Windows 身分識別一律流動到非同步的點，無論模擬執行的方式。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityContext">
          <source>For more information about flowing unmanaged impersonation across asynchronous points, see <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>alwaysFlowImpersonationPolicy<ph id="ph2">&amp;gt;</ph> Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md)</ept>.</source>
          <target state="translated">如需詳細資訊傳送到非同步點 unmanaged 模擬，請參閱<bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>alwaysFlowImpersonationPolicy<ph id="ph2">&amp;gt;</ph>元素<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md)</ept>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityContext">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecurityContext&gt;</ph> is part of the larger <ph id="ph2">&lt;xref:System.Threading.ExecutionContext&gt;</ph> and flows or migrates when the <ph id="ph3">&lt;xref:System.Threading.ExecutionContext&gt;</ph> flows or migrates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecurityContext&gt;</ph>是較大的一部分<ph id="ph2">&lt;xref:System.Threading.ExecutionContext&gt;</ph>流程及移轉時<ph id="ph3">&lt;xref:System.Threading.ExecutionContext&gt;</ph>流動或移轉。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityContext">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">此類型會實作<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityContext">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">當您完成使用類型時，您應該會處置它直接或間接。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityContext">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">若要直接處置的類型，呼叫其<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>方法中的<ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>區塊。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityContext">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">若要為其配置間接，使用語言建構例如<ph id="ph1">`using`</ph>（C# 中） 或<ph id="ph2">`Using`</ph>（在 Visual Basic)。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityContext">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">如需詳細資訊，請參閱中的 「 使用物件的實作 IDisposable 」 一節<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>介面 &gt; 主題。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.Capture">
          <source>Captures the security context for the current thread.</source>
          <target state="translated">擷取目前執行緒的安全性內容。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.Capture">
          <source>The security context for the current thread.</source>
          <target state="translated">目前執行緒的安全性內容。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.Capture">
          <source>The captured security context can be applied to another thread.</source>
          <target state="translated">擷取的安全性內容可以套用至另一個執行緒。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.Capture">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecurityContext&gt;</ph> consists of the <ph id="ph2">&lt;xref:System.Threading.CompressedStack&gt;</ph> and the <ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> for the executing thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecurityContext&gt;</ph>組成<ph id="ph2">&lt;xref:System.Threading.CompressedStack&gt;</ph>和<ph id="ph3">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>執行的執行緒。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.CreateCopy">
          <source>Creates a copy of the current security context.</source>
          <target state="translated">建立目前安全性內容的複本。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.CreateCopy">
          <source>The security context for the current thread.</source>
          <target state="translated">目前執行緒的安全性內容。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.CreateCopy">
          <source>The current context must have been acquired through a capture or a copy operation.</source>
          <target state="translated">必須已透過擷取或複製作業取得目前的內容。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.CreateCopy">
          <source>This method is useful for applying a captured <ph id="ph1">&lt;xref:System.Security.SecurityContext&gt;</ph> to multiple threads.</source>
          <target state="translated">這個方法可用於套用擷取<ph id="ph1">&lt;xref:System.Security.SecurityContext&gt;</ph>至多個執行緒。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.CreateCopy">
          <source>The current security context has been previously used, was marshaled across application domains, or was not acquired through the <ph id="ph1">&lt;see cref="M:System.Security.SecurityContext.Capture" /&gt;</ph> method.</source>
          <target state="translated">目前的安全性內容是先前已用過、已在應用程式定義域之間封送處理，或者不是透過 <ph id="ph1">&lt;see cref="M:System.Security.SecurityContext.Capture" /&gt;</ph> 方法所取得。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecurityContext" /&gt;</ph> class.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Security.SecurityContext" /&gt;</ph> 類別目前的執行個體所使用的資源全部釋出。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Security.SecurityContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 使用完畢時，請呼叫 <ph id="ph2">&lt;xref:System.Security.SecurityContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Security.SecurityContext&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 方法會將 <ph id="ph2">&lt;xref:System.Security.SecurityContext&gt;</ph> 保留在無法使用的狀態。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Security.SecurityContext&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Security.SecurityContext&gt;</ph> was occupying.</source>
          <target state="translated">在呼叫<ph id="ph1">`Dispose`</ph>，您必須釋放所有參考<ph id="ph2">&lt;xref:System.Security.SecurityContext&gt;</ph>讓記憶體回收行程可以回收記憶體的<ph id="ph3">&lt;xref:System.Security.SecurityContext&gt;</ph>所佔用。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>實作 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Security.SecurityContext&gt;</ph>.</source>
          <target state="translated">在您釋放最後一個 <ph id="ph1">`Dispose`</ph> 參考之前，請務必呼叫 <ph id="ph2">&lt;xref:System.Security.SecurityContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Security.SecurityContext&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <ph id="ph1">&lt;xref:System.Security.SecurityContext&gt;</ph> 物件的 <ph id="ph2">`Finalize`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.IsFlowSuppressed">
          <source>Determines whether the flow of the security context has been suppressed.</source>
          <target state="translated">決定安全性內容的流量是否已經抑制。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.IsFlowSuppressed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the flow has been suppressed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已經抑制流量則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.IsFlowSuppressed">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecurityContext.IsFlowSuppressed%2A&gt;</ph> method is used by infrastructure components to determine whether to transfer the <ph id="ph2">&lt;xref:System.Security.SecurityContext&gt;</ph> information during asynchronous operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecurityContext.IsFlowSuppressed%2A&gt;</ph>基礎結構元件會使用方法來判斷是否要傳送<ph id="ph2">&lt;xref:System.Security.SecurityContext&gt;</ph>非同步作業期間的資訊。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed">
          <source>Determines whether the flow of the Windows identity portion of the current security context has been suppressed.</source>
          <target state="translated">決定目前安全性內容中 Windows 識別部分的流量是否已抑制。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the flow has been suppressed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已經抑制流量則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed%2A&gt;</ph> method is used by infrastructure components to determine whether to transfer the Windows identity information when the <ph id="ph2">&lt;xref:System.Security.SecurityContext&gt;</ph> migrates during asynchronous operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed%2A&gt;</ph>基礎結構元件會使用方法來判斷是否要傳送的 Windows 身分識別資訊時<ph id="ph2">&lt;xref:System.Security.SecurityContext&gt;</ph>移轉期間的非同步作業。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.RestoreFlow">
          <source>Restores the flow of the security context across asynchronous threads.</source>
          <target state="translated">還原安全性內容在非同步執行緒之間的流量。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.RestoreFlow">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecurityContext.RestoreFlow%2A&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=nameWithType&gt;</ph> method to reverse the effect of a prior <ph id="ph3">&lt;xref:System.Security.SecurityContext.SuppressFlow%2A&gt;</ph> method call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecurityContext.RestoreFlow%2A&gt;</ph>方法透過呼叫<ph id="ph2">&lt;xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=nameWithType&gt;</ph>方法來反轉先前的效果<ph id="ph3">&lt;xref:System.Security.SecurityContext.SuppressFlow%2A&gt;</ph>方法呼叫。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.RestoreFlow">
          <source>The security context is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated">安全性內容為 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 或空字串。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
          <source>The security context to set.</source>
          <target state="translated">要設定的安全性內容。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
          <source>The delegate that represents the method to run in the specified security context.</source>
          <target state="translated">委派，表示要在指定的安全性內容中執行的方法。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
          <source>The object to pass to the callback method.</source>
          <target state="translated">要傳遞至回呼 (Callback) 方法的物件。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
          <source>Runs the specified method in the specified security context on the current thread.</source>
          <target state="translated">在目前執行緒上的指定安全性內容中執行指定的方法。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
          <source>The security context for the current thread is returned to its previous state when the method call is complete.</source>
          <target state="translated">方法呼叫完成時，目前執行緒的安全性內容會回到先前的狀態。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Security.SecurityContext.Run%2A&gt;</ph> method to execute a method in a specified security context.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Security.SecurityContext.Run%2A&gt;</ph>方法，以指定的安全性內容中執行的方法。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="securityContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityContext" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="securityContext" /&gt;</ph> was not acquired through a capture operation.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityContext" /&gt;</ph> 不是透過擷取作業取得。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="securityContext" /&gt;</ph> has already been used as the argument to a <ph id="ph2">&lt;see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" /&gt;</ph> method call.</source>
          <target state="translated">已經將 <ph id="ph1">&lt;paramref name="securityContext" /&gt;</ph> 做為 <ph id="ph2">&lt;see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" /&gt;</ph> 方法呼叫的引數使用。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.SuppressFlow">
          <source>Suppresses the flow of the security context across asynchronous threads.</source>
          <target state="translated">抑制安全性內容在非同步執行緒之間的流量。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.SuppressFlow">
          <source>An <ph id="ph1">&lt;see cref="T:System.Threading.AsyncFlowControl" /&gt;</ph> structure for restoring the flow.</source>
          <target state="translated">還原流量的 <ph id="ph1">&lt;see cref="T:System.Threading.AsyncFlowControl" /&gt;</ph> 結構。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.SuppressFlow">
          <source>Use this method to suppress the flow of <ph id="ph1">&lt;xref:System.Security.SecurityContext&gt;</ph> information on the current thread for asynchronous operations.</source>
          <target state="translated">使用這個方法來隱藏的流程<ph id="ph1">&lt;xref:System.Security.SecurityContext&gt;</ph>目前執行緒上非同步作業的資訊。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.SuppressFlow">
          <source>The common language runtime (CLR) is only aware of the impersonation operations performed using managed code.</source>
          <target state="translated">只有知道執行使用 managed 程式碼的模擬作業的 common language runtime (CLR)。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.SuppressFlow">
          <source>The CLR has no knowledge of impersonation performed outside of managed code, such as platform invokes to unmanaged code that does the impersonation, or through calls to Win32 functions.</source>
          <target state="translated">CLR 不了解模擬執行外部 managed 程式碼，例如平台叫用 unmanaged 程式碼會執行模擬，或是透過呼叫 Win32 函式。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.SuppressFlow">
          <source>To flow identity across asynchronous points you must use the managed <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph> methods.</source>
          <target state="translated">跨非同步的點，您必須使用受管理的流量識別<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>和<ph id="ph2">&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.SuppressFlow">
          <source>Use the <ph id="ph1">&lt;xref:System.Threading.AsyncFlowControl.Undo%2A&gt;</ph> method on the returned <ph id="ph2">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph> structure to return the <ph id="ph3">&lt;xref:System.Security.SecurityContext&gt;</ph> object to its previous state.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Threading.AsyncFlowControl.Undo%2A&gt;</ph>方法在傳回<ph id="ph2">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph>結構，以傳回<ph id="ph3">&lt;xref:System.Security.SecurityContext&gt;</ph>物件到先前的狀態。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.SuppressFlow">
          <source>This method is protected with a <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType&gt;</ph> permission.</source>
          <target state="translated">這個方法受到<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType&gt;</ph>如<ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType&gt;</ph>權限。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.SuppressFlow">
          <source>A fully trusted component can call this method to suppress the flow of the <ph id="ph1">&lt;xref:System.Security.SecurityContext&gt;</ph> information during asynchronous calls.</source>
          <target state="translated">完全信任的元件可以呼叫這個方法，以隱藏的流程<ph id="ph1">&lt;xref:System.Security.SecurityContext&gt;</ph>非同步呼叫期間的資訊。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.SuppressFlow">
          <source>When the flow is suppressed, the <ph id="ph1">&lt;xref:System.Security.SecurityContext.Capture%2A&gt;</ph> method returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">當隱藏流程時，<ph id="ph1">&lt;xref:System.Security.SecurityContext.Capture%2A&gt;</ph>方法會傳回<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.SuppressFlow">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.SuppressFlow">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity">
          <source>Suppresses the flow of the Windows identity portion of the current security context across asynchronous threads.</source>
          <target state="translated">抑制目前安全性內容中 Windows 識別部分在非同步執行緒之間的流量。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity">
          <source>A structure for restoring the flow.</source>
          <target state="translated">用於還原流量的結構。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity">
          <source>Use this method to suppress the flow of the Windows identity when the <ph id="ph1">&lt;xref:System.Security.SecurityContext&gt;</ph> migrates across asynchronous threads.</source>
          <target state="translated">若要隱藏的 Windows 身分識別流程中使用這個方法時<ph id="ph1">&lt;xref:System.Security.SecurityContext&gt;</ph>在非同步執行緒之間移轉。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity">
          <source>Use the <ph id="ph1">&lt;xref:System.Threading.AsyncFlowControl.Undo%2A&gt;</ph> method on the returned <ph id="ph2">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph> structure to return the <ph id="ph3">&lt;xref:System.Security.SecurityContext&gt;</ph> object to its previous state.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Threading.AsyncFlowControl.Undo%2A&gt;</ph>方法在傳回<ph id="ph2">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph>結構，以傳回<ph id="ph3">&lt;xref:System.Security.SecurityContext&gt;</ph>物件到先前的狀態。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity">
          <source>The common language runtime (CLR) is aware of impersonation operations performed using only managed code, not of impersonation performed outside of managed code, such as through platform invoke to unmanaged code or through direct calls to Win32 functions.</source>
          <target state="translated">Common language runtime (CLR) 並知道模擬使用 managed 程式碼，不是模擬以外 managed 程式碼，例如執行可透過平台執行的作業叫用 unmanaged 程式碼或透過直接呼叫 Win32 函式。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity">
          <source>Only managed <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> objects can flow across asynchronous points, unless the <ph id="ph2">`alwaysFlowImpersonationPolicy`</ph> element has been set to <ph id="ph3">`true`</ph> (<ph id="ph4">`&lt;alwaysFlowImpersonationPolicy enabled="true"/&gt;`</ph>).</source>
          <target state="translated">只能管理<ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph>物件流向可跨非同步的點，除非<ph id="ph2">`alwaysFlowImpersonationPolicy`</ph>項目已設定為<ph id="ph3">`true`</ph>(<ph id="ph4">`&lt;alwaysFlowImpersonationPolicy enabled="true"/&gt;`</ph>)。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity">
          <source>Setting the <ph id="ph1">`alwaysFlowImpersonationPolicy`</ph> element to <ph id="ph2">`true`</ph> specifies that the Windows identity always flows across asynchronous points, regardless of how impersonation was performed.</source>
          <target state="translated">設定<ph id="ph1">`alwaysFlowImpersonationPolicy`</ph>元素<ph id="ph2">`true`</ph>指定 Windows 身分識別一律流動到非同步的點，無論模擬執行的方式。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity">
          <source>For more information about flowing unmanaged impersonation across asynchronous points, see <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>alwaysFlowImpersonationPolicy&gt; Element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md)</ept>.</source>
          <target state="translated">如需詳細資訊傳送到非同步點 unmanaged 模擬，請參閱<bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>alwaysFlowImpersonationPolicy &gt; 項目<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/alwaysflowimpersonationpolicy-element.md)</ept>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>