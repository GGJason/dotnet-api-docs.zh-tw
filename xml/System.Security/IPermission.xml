<Type Name="IPermission" FullName="System.Security.IPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="115a9c114d05e21e1ea17f7b691c3d3824c7f961" /><Meta Name="ms.sourcegitcommit" Value="3f21796619d6e69ad383c958cc013ce44c0678de" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/11/2019" /><Meta Name="ms.locfileid" Value="56071125" /></Metadata><TypeSignature Language="C#" Value="public interface IPermission : System.Security.ISecurityEncodable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPermission implements class System.Security.ISecurityEncodable" />
  <TypeSignature Language="DocId" Value="T:System.Security.IPermission" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPermission&#xA;Implements ISecurityEncodable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPermission : System::Security::ISecurityEncodable" />
  <TypeSignature Language="F#" Value="type IPermission = interface&#xA;    interface ISecurityEncodable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b16ce-101">定義由使用權限類型實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b16ce-101">Defines methods implemented by permission types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b16ce-102">Common language runtime 中的權限是描述可以受到指定資源的作業集的物件。</span><span class="sxs-lookup"><span data-stu-id="b16ce-102">Permissions in the common language runtime are objects that describe sets of operations that can be secured for specified resources.</span></span> <span data-ttu-id="b16ce-103">使用權限物件，描述操作或安全性控制，受限於的存取它不代表存取或執行作業的權限。</span><span class="sxs-lookup"><span data-stu-id="b16ce-103">A permission object describes operations or access that is subject to security control; it does not represent access or a right to perform operations.</span></span> <span data-ttu-id="b16ce-104">權限中透過下列方式使用之應用程式程式碼和.NET Framework 安全性系統。</span><span class="sxs-lookup"><span data-stu-id="b16ce-104">Permissions are used by both application code and the .NET Framework security system in the following ways.</span></span>  
  
-   <span data-ttu-id="b16ce-105">程式碼要求它才能執行所需的權限。</span><span class="sxs-lookup"><span data-stu-id="b16ce-105">Code requests the permissions it needs in order to run.</span></span>  
  
-   <span data-ttu-id="b16ce-106">安全性系統原則授與權限，才能執行的程式碼。</span><span class="sxs-lookup"><span data-stu-id="b16ce-106">The security system policy grants permissions to code in order for it to run.</span></span>  
  
-   <span data-ttu-id="b16ce-107">程式碼會要求該呼叫的程式碼擁有權限。</span><span class="sxs-lookup"><span data-stu-id="b16ce-107">Code demands that calling code has a permission.</span></span>  
  
-   <span data-ttu-id="b16ce-108">程式碼會覆寫使用判斷提示/拒絕 /-只允許安全性堆疊。</span><span class="sxs-lookup"><span data-stu-id="b16ce-108">Code overrides the security stack using assert/deny/permit-only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b16ce-109">如果您撰寫新的權限，您必須在類別中實作這個介面。</span><span class="sxs-lookup"><span data-stu-id="b16ce-109">If you write a new permission, you must implement this interface in your class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b16ce-110">權限可以存取多個執行緒。</span><span class="sxs-lookup"><span data-stu-id="b16ce-110">A permission can be accessed by multiple threads.</span></span> <span data-ttu-id="b16ce-111">實作這個介面時，您必須保證<xref:System.Security.IPermission.IsSubsetOf%2A>， <xref:System.Security.IPermission.Intersect%2A>， <xref:System.Security.IPermission.Union%2A>，和<xref:System.Security.IPermission.Copy%2A>方法實作都是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="b16ce-111">When implementing this interface, you must guarantee that the <xref:System.Security.IPermission.IsSubsetOf%2A>, <xref:System.Security.IPermission.Intersect%2A>, <xref:System.Security.IPermission.Union%2A>, and <xref:System.Security.IPermission.Copy%2A> method implementations are thread safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b16ce-112">此範例示範如何定義程式碼存取安全性權限類別使用。</span><span class="sxs-lookup"><span data-stu-id="b16ce-112">This example shows how to define a permission class for use with code access security.</span></span> <span data-ttu-id="b16ce-113">會實作所有必要的權限的介面。</span><span class="sxs-lookup"><span data-stu-id="b16ce-113">All of the necessary permission interfaces are implemented.</span></span>  
  
 [!code-cpp[Permission#1](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#1)]
 [!code-csharp[Permission#1](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#1)]
 [!code-vb[Permission#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission" Usage="iPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b16ce-114">建立並傳回目前權限的相同複本。</span><span class="sxs-lookup"><span data-stu-id="b16ce-114">Creates and returns an identical copy of the current permission.</span></span></summary>
        <returns><span data-ttu-id="b16ce-115">目前權限的複本。</span><span class="sxs-lookup"><span data-stu-id="b16ce-115">A copy of the current permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b16ce-116">一份權限表示與原始的權限資源相同的存取權。</span><span class="sxs-lookup"><span data-stu-id="b16ce-116">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b16ce-117">下列程式碼範例示範如何實作<xref:System.Security.IPermission.Copy%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b16ce-117">The following code example demonstrates implementing the <xref:System.Security.IPermission.Copy%2A> method.</span></span> <span data-ttu-id="b16ce-118">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.IPermission>類別。</span><span class="sxs-lookup"><span data-stu-id="b16ce-118">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#4](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#4)]
 [!code-csharp[Permission#4](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#4)]
 [!code-vb[Permission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit" Usage="iPermission.Demand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b16ce-119">如果不符合安全性要求，在 Run Time 時會擲回 <see cref="T:System.Security.SecurityException" />。</span><span class="sxs-lookup"><span data-stu-id="b16ce-119">Throws a <see cref="T:System.Security.SecurityException" /> at run time if the security requirement is not met.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b16ce-120">安全程式庫通常會使用這個方法以確保呼叫端擁有存取資源的權限。</span><span class="sxs-lookup"><span data-stu-id="b16ce-120">This method is typically used by secure libraries to ensure that callers have permission to access a resource.</span></span> <span data-ttu-id="b16ce-121">安全類別庫中的檔案類別的呼叫，例如<xref:System.Security.CodeAccessPermission.Demand%2A>的必要<xref:System.Security.Permissions.FileIOPermission>之前執行檔案作業要求的呼叫端。</span><span class="sxs-lookup"><span data-stu-id="b16ce-121">For example, a file class in a secure class library calls <xref:System.Security.CodeAccessPermission.Demand%2A> for the necessary <xref:System.Security.Permissions.FileIOPermission> before performing a file operation requested by the caller.</span></span>  
  
 <span data-ttu-id="b16ce-122">雖然大部分的類別可實作這個介面方法會滿足安全性準則執行完整堆疊查核行程，不一定會執行堆疊查核行程。</span><span class="sxs-lookup"><span data-stu-id="b16ce-122">Although the majority of the classes that implement this interface method satisfy the security criteria by performing a full stack walk, a stack walk is not necessarily performed.</span></span> <span data-ttu-id="b16ce-123">舉例來說，不會執行堆疊查核行程實作<xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="b16ce-123">An example of an implementation that does not perform a stack walk is <xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b16ce-124">執行堆疊查核行程時，就不會檢查呼叫這個方法的程式碼的權限;檢查立即呼叫端程式碼從開始，並繼續向上堆疊。</span><span class="sxs-lookup"><span data-stu-id="b16ce-124">When a stack walk is performed, the permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="b16ce-125">通常，向下成長，來表示呼叫堆疊，使方法呼叫堆疊中較高層呼叫方法較低的呼叫堆疊中。</span><span class="sxs-lookup"><span data-stu-id="b16ce-125">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="b16ce-126"><xref:System.Security.CodeAccessPermission.Demand%2A> 只有當沒有成功<xref:System.Security.SecurityException>，就會引發。</span><span class="sxs-lookup"><span data-stu-id="b16ce-126"><xref:System.Security.CodeAccessPermission.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="iPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="b16ce-127">與目前使用權限交集的使用權限。</span><span class="sxs-lookup"><span data-stu-id="b16ce-127">A permission to intersect with the current permission.</span></span> <span data-ttu-id="b16ce-128">必須與目前權限屬於相同的類型。</span><span class="sxs-lookup"><span data-stu-id="b16ce-128">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="b16ce-129">建立並傳回目前使用權限和指定之使用權限交集的使用權限。</span><span class="sxs-lookup"><span data-stu-id="b16ce-129">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="b16ce-130">新使用權限，表示目前使用權限和指定使用權限的交集。</span><span class="sxs-lookup"><span data-stu-id="b16ce-130">A new permission that represents the intersection of the current permission and the specified permission.</span></span> <span data-ttu-id="b16ce-131">如果交集是空的，這個新使用權限為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b16ce-131">This new permission is <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b16ce-132">兩個權限的交集會說明兩者所共同描述的作業集合的權限。</span><span class="sxs-lookup"><span data-stu-id="b16ce-132">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="b16ce-133">只有通過這兩個原始的使用權限的需求將會通過交集。</span><span class="sxs-lookup"><span data-stu-id="b16ce-133">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="b16ce-134">下列陳述式必須是適用於所有實作<xref:System.Security.IPermission.Intersect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b16ce-134">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.Intersect%2A> method.</span></span> <span data-ttu-id="b16ce-135">`X` 並`Y`代表<xref:System.Security.IPermission>不是物件參考`null`。</span><span class="sxs-lookup"><span data-stu-id="b16ce-135">`X` and `Y` represent <xref:System.Security.IPermission> object references that are not `null`.</span></span>  
  
-   <span data-ttu-id="b16ce-136">`X`.Intersect (`X`) 傳回值等於`X`。</span><span class="sxs-lookup"><span data-stu-id="b16ce-136">`X`.Intersect(`X`) returns a value equal to `X`.</span></span>  
  
-   <span data-ttu-id="b16ce-137">`X`.Intersect (`Y`) 傳回相同的值為`Y`。Intersect (`X`)。</span><span class="sxs-lookup"><span data-stu-id="b16ce-137">`X`.Intersect(`Y`) returns the same value as `Y`.Intersect(`X`).</span></span>  
  
-   <span data-ttu-id="b16ce-138">`X`.Intersect (`null`) 傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="b16ce-138">`X`.Intersect(`null`) returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b16ce-139">下列程式碼範例示範如何實作<xref:System.Security.IPermission.Intersect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b16ce-139">The following code example demonstrates implementing the <xref:System.Security.IPermission.Intersect%2A> method.</span></span> <span data-ttu-id="b16ce-140">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.IPermission>類別。</span><span class="sxs-lookup"><span data-stu-id="b16ce-140">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#2](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#2)]
 [!code-csharp[Permission#2](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#2)]
 [!code-vb[Permission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b16ce-141"><paramref name="target" /> 參數不是 <see langword="null" />，並且不是與目前使用權限相同類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="b16ce-141">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="iPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="b16ce-142">使用權限，要測試與子集關聯性。</span><span class="sxs-lookup"><span data-stu-id="b16ce-142">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="b16ce-143">這個使用權限必須與目前的使用權限為相同的型別。</span><span class="sxs-lookup"><span data-stu-id="b16ce-143">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="b16ce-144">判斷目前使用權限是否為指定之使用權限的子集。</span><span class="sxs-lookup"><span data-stu-id="b16ce-144">Determines whether the current permission is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="b16ce-145">如果目前的使用權限是指定之使用權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b16ce-145"><see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b16ce-146">如果目前的使用權限會指定一組完全包含在指定的權限的作業，目前的使用權限是指定的權限的子集。</span><span class="sxs-lookup"><span data-stu-id="b16ce-146">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="b16ce-147">例如，表示 C:\example.txt 的存取權限是 c： 表示存取權限的子集\\。</span><span class="sxs-lookup"><span data-stu-id="b16ce-147">For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:\\.</span></span> <span data-ttu-id="b16ce-148">如果此方法傳回`true`，目前的權限，表示沒有存取受保護的資源比指定的權限。</span><span class="sxs-lookup"><span data-stu-id="b16ce-148">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="b16ce-149">下列陳述式必須是適用於所有實作<xref:System.Security.IPermission.IsSubsetOf%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b16ce-149">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="b16ce-150">`X``Y`，並`Z`代表<xref:System.Security.IPermission>不是物件`null`。</span><span class="sxs-lookup"><span data-stu-id="b16ce-150">`X`, `Y`, and `Z` represent <xref:System.Security.IPermission> objects that are not `null`.</span></span>  
  
-   <span data-ttu-id="b16ce-151">`X`.IsSubsetOf (`X`) 傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="b16ce-151">`X`.IsSubsetOf(`X`) returns `true`.</span></span>  
  
-   <span data-ttu-id="b16ce-152">`X`.IsSubsetOf (`Y`) 傳回相同的值為`Y`。IsSubsetOf (`X`)，才`X`和`Y`代表相同的權限集。</span><span class="sxs-lookup"><span data-stu-id="b16ce-152">`X`.IsSubsetOf(`Y`) returns the same value as `Y`.IsSubsetOf(`X`) if and only if `X` and `Y` represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="b16ce-153">如果`X`。IsSubsetOf (`Y`) 和`Y`。IsSubsetOf (`Z`)，傳回`true`， `X`。IsSubsetOf (`Z`) 傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="b16ce-153">If `X`.IsSubsetOf(`Y`) and `Y`.IsSubsetOf(`Z`) both return `true`, `X`.IsSubsetOf(`Z`) returns `true`.</span></span>  
  
 <span data-ttu-id="b16ce-154">如果`X`表示空<xref:System.Security.IPermission>具有權限狀態的物件<xref:System.Security.Permissions.PermissionState.None>並`Y`代表<xref:System.Security.IPermission>物件`null`， `X`。IsSubsetOf (`Y`) 傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="b16ce-154">If `X` represents an empty <xref:System.Security.IPermission> object with a permission state of <xref:System.Security.Permissions.PermissionState.None> and `Y` represents an <xref:System.Security.IPermission> object that is `null`, `X`.IsSubsetOf(`Y`) returns `true`.</span></span> <span data-ttu-id="b16ce-155">如果`Z`也是空的權限，複合的設定作業`X`。Union(Z)。也會傳回 IsSubsetOf(Y)`true`因為兩個空的權限的聯集是空的權限。</span><span class="sxs-lookup"><span data-stu-id="b16ce-155">If `Z` is also an empty permission, the compound set operation `X`.Union(Z).IsSubsetOf(Y) also returns `true` because the union of two empty permissions is an empty permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b16ce-156">下列程式碼範例示範如何實作<xref:System.Security.IPermission.IsSubsetOf%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b16ce-156">The following code example demonstrates implementing the <xref:System.Security.IPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="b16ce-157">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.IPermission>類別。</span><span class="sxs-lookup"><span data-stu-id="b16ce-157">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#3](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#3)]
 [!code-csharp[Permission#3](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#3)]
 [!code-vb[Permission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b16ce-158"><paramref name="target" /> 參數不是 <see langword="null" />，而且與目前使用權限不是相同的型別。</span><span class="sxs-lookup"><span data-stu-id="b16ce-158">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="iPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="b16ce-159">要與目前權限結合的權限，</span><span class="sxs-lookup"><span data-stu-id="b16ce-159">A permission to combine with the current permission.</span></span> <span data-ttu-id="b16ce-160">必須與目前權限屬於相同的類型。</span><span class="sxs-lookup"><span data-stu-id="b16ce-160">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="b16ce-161">建立目前權限與指定權限聯集的權限。</span><span class="sxs-lookup"><span data-stu-id="b16ce-161">Creates a permission that is the union of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="b16ce-162">代表目前權限與指定權限聯集的新權限。</span><span class="sxs-lookup"><span data-stu-id="b16ce-162">A new permission that represents the union of the current permission and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b16ce-163">若要呼叫的結果<xref:System.Security.IPermission.Union%2A>是代表的權限表示的所有作業的目前權限和指定的權限。</span><span class="sxs-lookup"><span data-stu-id="b16ce-163">The result of a call to <xref:System.Security.IPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="b16ce-164">任何通過其中之一權限的需求會傳遞它們的聯集。</span><span class="sxs-lookup"><span data-stu-id="b16ce-164">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="b16ce-165">下列陳述式必須是適用於所有實作<xref:System.Security.IPermission.Union%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b16ce-165">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.Union%2A> method.</span></span> <span data-ttu-id="b16ce-166">`X` 並`Y`代表<xref:System.Security.IPermission>不是物件`null`。</span><span class="sxs-lookup"><span data-stu-id="b16ce-166">`X` and `Y` represent <xref:System.Security.IPermission> objects that are not `null`.</span></span>  
  
-   <span data-ttu-id="b16ce-167">`X`.聯集 (`X`) 傳回的物件具有相同的值`X`。</span><span class="sxs-lookup"><span data-stu-id="b16ce-167">`X`.Union(`X`) returns an object that has the same value as `X`.</span></span>  
  
-   <span data-ttu-id="b16ce-168">`X`.聯集 (`Y`) 傳回的物件具有相同的值所傳回的物件`Y`。等位 (`X`)。</span><span class="sxs-lookup"><span data-stu-id="b16ce-168">`X`.Union(`Y`) returns an object that has the same value as the object returned by `Y`.Union(`X`).</span></span>  
  
-   <span data-ttu-id="b16ce-169">`X`.聯集 (`null`) 傳回的物件具有相同的值`X`。</span><span class="sxs-lookup"><span data-stu-id="b16ce-169">`X`.Union(`null`) returns an object that has the same value as `X`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b16ce-170">下列程式碼範例示範如何實作<xref:System.Security.IPermission.Union%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b16ce-170">The following code example demonstrates implementing the <xref:System.Security.IPermission.Union%2A> method.</span></span> <span data-ttu-id="b16ce-171">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.IPermission>類別。</span><span class="sxs-lookup"><span data-stu-id="b16ce-171">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#5](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#5)]
 [!code-csharp[Permission#5](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#5)]
 [!code-vb[Permission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#5)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b16ce-172"><paramref name="target" /> 參數不是 <see langword="null" />，而且與目前使用權限不是相同的型別。</span><span class="sxs-lookup"><span data-stu-id="b16ce-172">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>