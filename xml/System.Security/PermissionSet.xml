<Type Name="PermissionSet" FullName="System.Security.PermissionSet">
  <TypeSignature Language="C#" Value="public class PermissionSet : System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Security.ISecurityEncodable, System.Security.IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PermissionSet extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Runtime.Serialization.IDeserializationCallback, class System.Security.ISecurityEncodable, class System.Security.IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.PermissionSet" />
  <TypeSignature Language="VB.NET" Value="Public Class PermissionSet&#xA;Implements ICollection, IDeserializationCallback, ISecurityEncodable, IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public ref class PermissionSet : System::Collections::ICollection, System::Runtime::Serialization::IDeserializationCallback, System::Security::ISecurityEncodable, System::Security::IStackWalk" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.IStackWalk</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fbd54-101">代表可以包含許多不同類型權限的集合。</span><span class="sxs-lookup"><span data-stu-id="fbd54-101">Represents a collection that can contain many different types of permissions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-102">您可以使用<xref:System.Security.PermissionSet>當做群組執行數個不同的權限的作業。</span><span class="sxs-lookup"><span data-stu-id="fbd54-102">You can use <xref:System.Security.PermissionSet> to perform operations on several different permissions as a group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd54-103">下列程式碼範例示範如何使用<xref:System.Security.PermissionSet>類別和成員。</span><span class="sxs-lookup"><span data-stu-id="fbd54-103">The following code example demonstrates the use of the <xref:System.Security.PermissionSet> class and members.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#1)]
 [!code-csharp[System.Security.PermissionSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#1)]
 [!code-vb[System.Security.PermissionSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="fbd54-104">針對繼承者都完全受信任，或與 Microsoft 簽署的組件中<see cref="T:System.Security.Policy.StrongName" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-104">for inheritors to be fully trusted, or in an assembly that is signed with the Microsoft <see cref="T:System.Security.Policy.StrongName" />.</span></span></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fbd54-105">初始化 <see cref="T:System.Security.PermissionSet" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="fbd54-105">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PermissionSet (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PermissionSet(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="fbd54-106">其中一個列舉值，可指定權限集的資源存取。</span><span class="sxs-lookup"><span data-stu-id="fbd54-106">One of the enumeration values that specifies the permission set's access to resources.</span></span></param>
        <summary><span data-ttu-id="fbd54-107">使用指定的 <see cref="T:System.Security.PermissionSet" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="fbd54-107">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-108">`Unrestricted`狀態可讓實作的所有權限<xref:System.Security.Permissions.IUnrestrictedPermission>介面，而`None`可讓任何權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-108">The `Unrestricted` state allows all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface, while `None` allows no permissions.</span></span>  
  
 <span data-ttu-id="fbd54-109">使用<xref:System.Security.PermissionSet.AddPermission%2A>上空<xref:System.Security.PermissionSet>至更詳細地定義集合。</span><span class="sxs-lookup"><span data-stu-id="fbd54-109">Use <xref:System.Security.PermissionSet.AddPermission%2A> on an empty <xref:System.Security.PermissionSet> to define the set in greater detail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd54-110">下列程式碼範例示範使用<xref:System.Security.PermissionSet.%23ctor%2A>建構函式來建立權限集的權限狀態<xref:System.Security.Permissions.PermissionState.None>。</span><span class="sxs-lookup"><span data-stu-id="fbd54-110">The following code example shows the use of the <xref:System.Security.PermissionSet.%23ctor%2A> constructor to create a permission set with a permission state of <xref:System.Security.Permissions.PermissionState.None>.</span></span> <span data-ttu-id="fbd54-111">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-111">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#2)]
 [!code-csharp[System.Security.PermissionSet#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#2)]
 [!code-vb[System.Security.PermissionSet#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fbd54-112"><paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-112">The <paramref name="state" /> parameter is not a valid <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PermissionSet (System.Security.PermissionSet permSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.PermissionSet permSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (permSet As PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PermissionSet(System::Security::PermissionSet ^ permSet);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="permSet" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="permSet"><span data-ttu-id="fbd54-113">要從中取出新 <see cref="T:System.Security.PermissionSet" /> 值的集合，或是 <see langword="null" />，表示建立空的 <see cref="T:System.Security.PermissionSet" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-113">The set from which to take the value of the new <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> to create an empty <see cref="T:System.Security.PermissionSet" />.</span></span></param>
        <summary><span data-ttu-id="fbd54-114">使用取自 <paramref name="permSet" /> 參數的初始值，初始化 <see cref="T:System.Security.PermissionSet" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="fbd54-114">Initializes a new instance of the <see cref="T:System.Security.PermissionSet" /> class with initial values taken from the <paramref name="permSet" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-115">新<xref:System.Security.PermissionSet>包含包含在指定的權限的複本<xref:System.Security.PermissionSet>。</span><span class="sxs-lookup"><span data-stu-id="fbd54-115">The new <xref:System.Security.PermissionSet> contains copies of the permissions contained in the specified <xref:System.Security.PermissionSet>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fbd54-116">這相當於<xref:System.Security.PermissionSet.Copy%2A>時`permSet`參數不是`null`。</span><span class="sxs-lookup"><span data-stu-id="fbd54-116">This is equivalent to <xref:System.Security.PermissionSet.Copy%2A> when the `permSet` parameter is not `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission AddPermission (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission AddPermission(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPermission (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ AddPermission(System::Security::IPermission ^ perm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm"><span data-ttu-id="fbd54-117">要加入的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-117">The permission to add.</span></span></param>
        <summary><span data-ttu-id="fbd54-118">加入指定使用權限至 <see cref="T:System.Security.PermissionSet" /> 中。</span><span class="sxs-lookup"><span data-stu-id="fbd54-118">Adds a specified permission to the <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="fbd54-119">加入的使用權限和已存在於 <see cref="T:System.Security.PermissionSet" /> 的任何相同類型使用權限的聯集。</span><span class="sxs-lookup"><span data-stu-id="fbd54-119">The union of the permission added and any permission of the same type that already exists in the <see cref="T:System.Security.PermissionSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-120">如果加入的權限已經與相同類型的權限會存在於<xref:System.Security.PermissionSet>，新的權限是現有的權限物件和指定的權限物件的聯集。</span><span class="sxs-lookup"><span data-stu-id="fbd54-120">If a permission of the same type as the added permission already exists in the <xref:System.Security.PermissionSet>, the new permission is the union of the existing permission object and the specified permission object.</span></span> <span data-ttu-id="fbd54-121">例如，如果實作的權限<xref:System.Security.Permissions.IUnrestrictedPermission>加入至<xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Security.PermissionSet>，產生的等位是原始`Unrestricted` <xref:System.Security.PermissionSet>。</span><span class="sxs-lookup"><span data-stu-id="fbd54-121">For example, if a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is added to an <xref:System.Security.Permissions.PermissionState.Unrestricted><xref:System.Security.PermissionSet>, the resulting union is the original `Unrestricted`<xref:System.Security.PermissionSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd54-122">下列程式碼範例示範使用<xref:System.Security.PermissionSet.AddPermission%2A>方法來加入權限集合的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-122">The following code example shows the use of the <xref:System.Security.PermissionSet.AddPermission%2A> method to add a permission to a permission set.</span></span> <span data-ttu-id="fbd54-123">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-123">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#3)]
 [!code-csharp[System.Security.PermissionSet#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#3)]
 [!code-vb[System.Security.PermissionSet#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd54-124">此方法是從 <see cref="T:System.Security.ReadOnlyPermissionSet" /> 呼叫。</span><span class="sxs-lookup"><span data-stu-id="fbd54-124">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="fbd54-125">當您繼承自<see cref="T:System.Security.PermissionSet" />，您可以變更的行為<see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" />藉由覆寫方法<see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" />方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-125">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)" /> method by overriding the <see cref="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AddPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission AddPermissionImpl (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission AddPermissionImpl(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddPermissionImpl (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ AddPermissionImpl(System::Security::IPermission ^ perm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm"><span data-ttu-id="fbd54-126">要加入的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-126">The permission to add.</span></span></param>
        <summary><span data-ttu-id="fbd54-127">加入指定使用權限至 <see cref="T:System.Security.PermissionSet" /> 中。</span><span class="sxs-lookup"><span data-stu-id="fbd54-127">Adds a specified permission to the <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="fbd54-128">加入的使用權限與已存在 <see cref="T:System.Security.PermissionSet" /> 中的任何相同類型使用權限的聯集；如果 <paramref name="perm" /> 為 <see langword="null" />，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-128">The union of the permission added and any permission of the same type that already exists in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if <paramref name="perm" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-129"><xref:System.Security.PermissionSet.AddPermissionImpl%2A>方法是實作<xref:System.Security.PermissionSet.AddPermission%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-129">The <xref:System.Security.PermissionSet.AddPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.AddPermission%2A> method.</span></span>  
  
 <span data-ttu-id="fbd54-130">如果加入的權限已經與相同類型的權限會存在於<xref:System.Security.PermissionSet>，新的權限是現有的權限物件和指定的權限物件的聯集。</span><span class="sxs-lookup"><span data-stu-id="fbd54-130">If a permission of the same type as the added permission already exists in the <xref:System.Security.PermissionSet>, the new permission is the union of the existing permission object and the specified permission object.</span></span> <span data-ttu-id="fbd54-131">例如，如果實作的權限<xref:System.Security.Permissions.IUnrestrictedPermission>加入至<xref:System.Security.Permissions.PermissionState.Unrestricted> <xref:System.Security.PermissionSet>，產生的等位是原始`Unrestricted` <xref:System.Security.PermissionSet>。</span><span class="sxs-lookup"><span data-stu-id="fbd54-131">For example, if a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is added to an <xref:System.Security.Permissions.PermissionState.Unrestricted><xref:System.Security.PermissionSet>, the resulting union is the original `Unrestricted`<xref:System.Security.PermissionSet>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd54-132">此方法是從 <see cref="T:System.Security.ReadOnlyPermissionSet" /> 呼叫。</span><span class="sxs-lookup"><span data-stu-id="fbd54-132">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Assert();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Assert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbd54-133">宣告即使堆疊中較高層的呼叫端未獲得資源存取權限，呼叫程式碼仍可透過呼叫這個方法的程式碼要求權限，來存取受保護的資源。</span><span class="sxs-lookup"><span data-stu-id="fbd54-133">Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</span></span> <span data-ttu-id="fbd54-134">使用 <see cref="M:System.Security.PermissionSet.Assert" /> 會造成安全性弱點。</span><span class="sxs-lookup"><span data-stu-id="fbd54-134">Using <see cref="M:System.Security.PermissionSet.Assert" /> can create security vulnerabilities.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-135">這是唯一能在相同的時間範圍內宣告多個權限，因為只有一個<xref:System.Security.PermissionSet.Assert%2A>作用中的框架。</span><span class="sxs-lookup"><span data-stu-id="fbd54-135">This is the only way to assert multiple permissions at the same time within a frame because only one <xref:System.Security.PermissionSet.Assert%2A> can be active on a frame.</span></span> <span data-ttu-id="fbd54-136"><xref:System.Security.PermissionSet.Assert%2A> 僅適用於授與權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-136"><xref:System.Security.PermissionSet.Assert%2A> is only effective for granted permissions.</span></span> <span data-ttu-id="fbd54-137">呼叫<xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType>或<xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType>方法來取消作用中<xref:System.Security.PermissionSet.Assert%2A>。</span><span class="sxs-lookup"><span data-stu-id="fbd54-137">Call the <xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=nameWithType> or <xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=nameWithType> method to cancel an active <xref:System.Security.PermissionSet.Assert%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="fbd54-138">因為呼叫<xref:System.Security.PermissionSet.Assert%2A>方法移除所有程式碼呼叫鏈結中的需求必須被授與權限可以存取指定的資源，如果使用不正確或不當，它可以開啟個安全性弱點。</span><span class="sxs-lookup"><span data-stu-id="fbd54-138">Because calling the <xref:System.Security.PermissionSet.Assert%2A> method removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</span></span> <span data-ttu-id="fbd54-139">因此，應該使用小心謹慎。</span><span class="sxs-lookup"><span data-stu-id="fbd54-139">Therefore, it should be used with great caution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fbd54-140">已判斷提示的 <see cref="T:System.Security.PermissionSet" /> 執行個體未獲得判斷提示程式碼。</span><span class="sxs-lookup"><span data-stu-id="fbd54-140">The <see cref="T:System.Security.PermissionSet" /> instance asserted has not been granted to the asserting code.</span></span>  
  
 <span data-ttu-id="fbd54-141">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd54-141">-or-</span></span>  
  
 <span data-ttu-id="fbd54-142">目前的框架已有作用中的 <see cref="M:System.Security.PermissionSet.Assert" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-142">There is already an active <see cref="M:System.Security.PermissionSet.Assert" /> for the current frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsNonCodeAccessPermissions">
      <MemberSignature Language="C#" Value="public bool ContainsNonCodeAccessPermissions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsNonCodeAccessPermissions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsNonCodeAccessPermissions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsNonCodeAccessPermissions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbd54-143">取得值，指出 <see cref="T:System.Security.PermissionSet" /> 是否包含不是衍生自 <see cref="T:System.Security.CodeAccessPermission" /> 的使用權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-143">Gets a value indicating whether the <see cref="T:System.Security.PermissionSet" /> contains permissions that are not derived from <see cref="T:System.Security.CodeAccessPermission" />.</span></span></summary>
        <returns>
          <span data-ttu-id="fbd54-144">如果 <see cref="T:System.Security.PermissionSet" /> 包含不是衍生自 <see cref="T:System.Security.CodeAccessPermission" /> 的使用權限，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-144"><see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> contains permissions that are not derived from <see cref="T:System.Security.CodeAccessPermission" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbd54-145">下列程式碼範例示範使用<xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-145">The following code example shows the use of the <xref:System.Security.PermissionSet.ContainsNonCodeAccessPermissions%2A> method.</span></span> <span data-ttu-id="fbd54-146">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-146">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#9)]
 [!code-csharp[System.Security.PermissionSet#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#9)]
 [!code-vb[System.Security.PermissionSet#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertPermissionSet">
      <MemberSignature Language="C#" Value="public static byte[] ConvertPermissionSet (string inFormat, byte[] inData, string outFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] ConvertPermissionSet(string inFormat, unsigned int8[] inData, string outFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertPermissionSet (inFormat As String, inData As Byte(), outFormat As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ ConvertPermissionSet(System::String ^ inFormat, cli::array &lt;System::Byte&gt; ^ inData, System::String ^ outFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inFormat" Type="System.String" />
        <Parameter Name="inData" Type="System.Byte[]" />
        <Parameter Name="outFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inFormat"><span data-ttu-id="fbd54-147">以下列一種編碼格式表示的字串：ASCII、Unicode 或二進位。</span><span class="sxs-lookup"><span data-stu-id="fbd54-147">A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</span></span> <span data-ttu-id="fbd54-148">可能的值為 "XMLASCII" 或 "XML"、"XMLUNICODE" 和 "BINARY"。</span><span class="sxs-lookup"><span data-stu-id="fbd54-148">Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</span></span></param>
        <param name="inData"><span data-ttu-id="fbd54-149">XML 編碼的權限集合。</span><span class="sxs-lookup"><span data-stu-id="fbd54-149">An XML-encoded permission set.</span></span></param>
        <param name="outFormat"><span data-ttu-id="fbd54-150">以下列一種編碼格式表示的字串：ASCII、Unicode 或二進位。</span><span class="sxs-lookup"><span data-stu-id="fbd54-150">A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</span></span> <span data-ttu-id="fbd54-151">可能的值為 "XMLASCII" 或 "XML"、"XMLUNICODE" 和 "BINARY"。</span><span class="sxs-lookup"><span data-stu-id="fbd54-151">Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</span></span></param>
        <summary><span data-ttu-id="fbd54-152">將編碼的 <see cref="T:System.Security.PermissionSet" /> 從某種 XML 編碼格式轉換為另一種 XML 編碼格式。</span><span class="sxs-lookup"><span data-stu-id="fbd54-152">Converts an encoded <see cref="T:System.Security.PermissionSet" /> from one XML encoding format to another XML encoding format.</span></span></summary>
        <returns><span data-ttu-id="fbd54-153">使用指定輸出格式設定的加密權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-153">An encrypted permission set with the specified output format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-154">請勿使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-154">Do not use this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="fbd54-155">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="fbd54-155">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public virtual System.Security.PermissionSet Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.PermissionSet Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Copy () As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::PermissionSet ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbd54-156">建立 <see cref="T:System.Security.PermissionSet" /> 的複本。</span><span class="sxs-lookup"><span data-stu-id="fbd54-156">Creates a copy of the <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="fbd54-157"><see cref="T:System.Security.PermissionSet" /> 的複本。</span><span class="sxs-lookup"><span data-stu-id="fbd54-157">A copy of the <see cref="T:System.Security.PermissionSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-158">一份<xref:System.Security.PermissionSet>表示資源的存取為原始物件。</span><span class="sxs-lookup"><span data-stu-id="fbd54-158">A copy of a <xref:System.Security.PermissionSet> represents the same access to resources as the original object.</span></span> <span data-ttu-id="fbd54-159">複製所做的變更不會影響原始的權限集。</span><span class="sxs-lookup"><span data-stu-id="fbd54-159">Changes made to the copy do not affect the original permission set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd54-160">下列程式碼範例示範使用<xref:System.Security.PermissionSet.Copy%2A>方法來建立權限集的複本。</span><span class="sxs-lookup"><span data-stu-id="fbd54-160">The following code example shows the use of the <xref:System.Security.PermissionSet.Copy%2A> method to create a copy of a permission set.</span></span> <span data-ttu-id="fbd54-161">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-161">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#20)]
 [!code-csharp[System.Security.PermissionSet#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#20)]
 [!code-vb[System.Security.PermissionSet#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="fbd54-162">要複製到其中的目標陣列。</span><span class="sxs-lookup"><span data-stu-id="fbd54-162">The target array to which to copy.</span></span></param>
        <param name="index"><span data-ttu-id="fbd54-163">陣列中要開始複製的起始位置 (以零起始)。</span><span class="sxs-lookup"><span data-stu-id="fbd54-163">The starting position in the array to begin copying (zero based).</span></span></param>
        <summary><span data-ttu-id="fbd54-164">將集合的使用權限物件複製到 <see cref="T:System.Array" /> 中的指示位置。</span><span class="sxs-lookup"><span data-stu-id="fbd54-164">Copies the permission objects of the set to the indicated location in an <see cref="T:System.Array" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fbd54-165"><paramref name="array" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-165">The <paramref name="array" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fbd54-166"><paramref name="array" /> 參數具有一個以上的維度 (Dimension)。</span><span class="sxs-lookup"><span data-stu-id="fbd54-166">The <paramref name="array" /> parameter has more than one dimension.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="fbd54-167"><paramref name="index" /> 參數超出 <paramref name="array" /> 參數的範圍。</span><span class="sxs-lookup"><span data-stu-id="fbd54-167">The <paramref name="index" /> parameter is out of the range of the <paramref name="array" /> parameter.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd54-168">取得權限集合所包含的權限物件數目。</span><span class="sxs-lookup"><span data-stu-id="fbd54-168">Gets the number of permission objects contained in the permission set.</span></span></summary>
        <value><span data-ttu-id="fbd54-169"><see cref="T:System.Security.PermissionSet" /> 包含的權限物件數目。</span><span class="sxs-lookup"><span data-stu-id="fbd54-169">The number of permission objects contained in the <see cref="T:System.Security.PermissionSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-170">在`None`或`Unrestricted`狀態這會傳回零，因為沒有實際的權限的物件執行個體所使用。</span><span class="sxs-lookup"><span data-stu-id="fbd54-170">In the `None` or `Unrestricted` state this returns zero, because no actual permission object instances are used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd54-171">下列程式碼範例示範使用<xref:System.Security.PermissionSet.Count%2A>屬性權限集合中取得的權限物件數目。</span><span class="sxs-lookup"><span data-stu-id="fbd54-171">The following code example shows the use of the <xref:System.Security.PermissionSet.Count%2A> property to get the number of permission objects in a permission set.</span></span> <span data-ttu-id="fbd54-172">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-172">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#5)]
 [!code-csharp[System.Security.PermissionSet#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#5)]
 [!code-vb[System.Security.PermissionSet#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Demand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbd54-173">如果在呼叫堆疊中較高的所有呼叫端都尚未被授與由目前執行個體所指定之權限，則會在執行階段強制執行 <see cref="T:System.Security.SecurityException" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-173">Forces a <see cref="T:System.Security.SecurityException" /> at run time if all callers higher in the call stack have not been granted the permissions specified by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-174">使用<xref:System.Security.PermissionSet.Demand%2A>上<xref:System.Security.PermissionSet>以確保所有呼叫端擁有的所有權限，只有一個作業集合中。</span><span class="sxs-lookup"><span data-stu-id="fbd54-174">Use <xref:System.Security.PermissionSet.Demand%2A> on a <xref:System.Security.PermissionSet> to ensure that all callers have all permissions in the set with one operation.</span></span>  
  
 <span data-ttu-id="fbd54-175">不會檢查呼叫這個方法的程式碼的權限;檢查該程式碼的立即呼叫端從開始，然後進行堆疊。</span><span class="sxs-lookup"><span data-stu-id="fbd54-175">The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="fbd54-176">呼叫堆疊通常會表示向下成長，使方法呼叫堆疊中較高層呼叫的方法較低的呼叫堆疊中。</span><span class="sxs-lookup"><span data-stu-id="fbd54-176">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="fbd54-177"><xref:System.Security.PermissionSet.Demand%2A> 只有當沒有成功<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="fbd54-177"><xref:System.Security.PermissionSet.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is thrown.</span></span>  
  
 <span data-ttu-id="fbd54-178">如果<xref:System.Security.PermissionSet>包含權限，不會繼承自<xref:System.Security.CodeAccessPermission>、`Demand`以及呼叫的方法，這些權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-178">If the <xref:System.Security.PermissionSet> contains permissions that do not inherit from <xref:System.Security.CodeAccessPermission>, the `Demand` methods of those permissions are called as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd54-179">下列程式碼範例示範使用<xref:System.Security.PermissionSet.Demand%2A>方法來要求權限集合中的所有權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-179">The following code example shows the use of the <xref:System.Security.PermissionSet.Demand%2A> method to demand all the permissions in a permission set.</span></span> <span data-ttu-id="fbd54-180">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-180">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#4)]
 [!code-csharp[System.Security.PermissionSet#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#4)]
 [!code-vb[System.Security.PermissionSet#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fbd54-181">呼叫鏈結中的呼叫端沒有要求的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-181">A caller in the call chain does not have the permission demanded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Deny();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.Deny</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbd54-182">會讓任何通過權限呼叫程式碼的 <see cref="M:System.Security.PermissionSet.Demand" /> 失敗，該權限與目前 <see cref="T:System.Security.PermissionSet" /> 中包含的權限類型有交集。</span><span class="sxs-lookup"><span data-stu-id="fbd54-182">Causes any <see cref="M:System.Security.PermissionSet.Demand" /> that passes through the calling code for a permission that has an intersection with a permission of a type contained in the current <see cref="T:System.Security.PermissionSet" /> to fail.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-183">這個方法會防止呼叫堆疊中較高層的呼叫端程式碼呼叫此方法，透過存取受保護的資源，即使這些呼叫端必須被授與存取權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-183">This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</span></span> <span data-ttu-id="fbd54-184">呼叫堆疊通常會表示向下成長，使方法呼叫堆疊中較高層呼叫的方法較低的呼叫堆疊中。</span><span class="sxs-lookup"><span data-stu-id="fbd54-184">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 <span data-ttu-id="fbd54-185"><xref:System.Security.PermissionSet.Deny%2A> 可以限制程式設計人員的責任或協助防止意外安全性漏洞，因為它可協助避免呼叫此方法<xref:System.Security.PermissionSet.Deny%2A>從用來存取拒絕的權限所保護的資源。</span><span class="sxs-lookup"><span data-stu-id="fbd54-185"><xref:System.Security.PermissionSet.Deny%2A> can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls <xref:System.Security.PermissionSet.Deny%2A> from being used to access the resource protected by the denied permission.</span></span> <span data-ttu-id="fbd54-186">如果方法呼叫<xref:System.Security.PermissionSet.Deny%2A>權限，而且如果<xref:System.Security.PermissionSet.Demand%2A>的呼叫堆疊中較低的呼叫端所叫用該權限時，該安全性檢查失敗時達到<xref:System.Security.PermissionSet.Deny%2A>。</span><span class="sxs-lookup"><span data-stu-id="fbd54-186">If a method calls <xref:System.Security.PermissionSet.Deny%2A> on a permission, and if a <xref:System.Security.PermissionSet.Demand%2A> for that permission is invoked by a caller lower in the call stack, that security check fails when it reaches the <xref:System.Security.PermissionSet.Deny%2A>.</span></span>  
  
 <span data-ttu-id="fbd54-187"><xref:System.Security.PermissionSet.Deny%2A> 會忽略該權限的要求不成功，因為未授與的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-187"><xref:System.Security.PermissionSet.Deny%2A> is ignored for a permission that is not granted because a demand for that permission cannot succeed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fbd54-188">先前呼叫 <see cref="M:System.Security.PermissionSet.Deny" /> 已限制目前堆疊框架的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-188">A previous call to <see cref="M:System.Security.PermissionSet.Deny" /> has already restricted the permissions for the current stack frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Equals(System.Object)" FrameworkAlternate="netframework-4.5;netcore-2.0;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="fbd54-189">要與目前 <see cref="T:System.Security.PermissionSet" /> 比較的物件。</span><span class="sxs-lookup"><span data-stu-id="fbd54-189">The object to compare with the current <see cref="T:System.Security.PermissionSet" />.</span></span></param>
        <param name="obj">To be added.</param>
        <summary><span data-ttu-id="fbd54-190">判斷指定的 <see cref="T:System.Security.PermissionSet" /> 或 <see cref="T:System.Security.NamedPermissionSet" /> 物件是否等於目前的 <see cref="T:System.Security.PermissionSet" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-190">Determines whether the specified <see cref="T:System.Security.PermissionSet" /> or <see cref="T:System.Security.NamedPermissionSet" /> object is equal to the current <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns>
          <span data-ttu-id="fbd54-191">如果指定的物件等於目前的 <see langword="true" /> 物件，則為 <see cref="T:System.Security.PermissionSet" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-191"><see langword="true" /> if the specified object is equal to the current <see cref="T:System.Security.PermissionSet" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-192">設定所指定的權限中所包含的權限來判斷是否相等`obj`。</span><span class="sxs-lookup"><span data-stu-id="fbd54-192">Equality is determined by the permissions contained in the permission set specified by `obj`.</span></span> <span data-ttu-id="fbd54-193">`obj` 可以是<xref:System.Security.PermissionSet>物件或<xref:System.Security.NamedPermissionSet>物件。</span><span class="sxs-lookup"><span data-stu-id="fbd54-193">`obj` can be either a <xref:System.Security.PermissionSet> object or a <xref:System.Security.NamedPermissionSet> object.</span></span> <span data-ttu-id="fbd54-194">如果`obj`是<xref:System.Security.NamedPermissionSet>，名稱和描述會被忽略。</span><span class="sxs-lookup"><span data-stu-id="fbd54-194">If `obj` is a <xref:System.Security.NamedPermissionSet>, the name and description are ignored.</span></span>  
  
 <span data-ttu-id="fbd54-195">如需詳細資訊，請參閱<xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="fbd54-195">For more information, see <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public virtual void FromXml (System.Security.SecurityElement et);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement et) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FromXml (et As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXml(System::Security::SecurityElement ^ et);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="et" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="et"><span data-ttu-id="fbd54-196">用來重新建構安全性物件的 XML 編碼。</span><span class="sxs-lookup"><span data-stu-id="fbd54-196">The XML encoding to use to reconstruct the security object.</span></span></param>
        <summary><span data-ttu-id="fbd54-197">透過 XML 編碼，重新建構具有指定狀態的安全性物件。</span><span class="sxs-lookup"><span data-stu-id="fbd54-197">Reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbd54-198">下列程式碼範例示範使用<xref:System.Security.PermissionSet.FromXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-198">The following code example shows the use of the <xref:System.Security.PermissionSet.FromXml%2A> method.</span></span> <span data-ttu-id="fbd54-199">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-199">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#17)]
 [!code-csharp[System.Security.PermissionSet#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#17)]
 [!code-vb[System.Security.PermissionSet#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fbd54-200"><paramref name="et" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-200">The <paramref name="et" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fbd54-201"><paramref name="et" /> 參數不是有效的使用權限項目。</span><span class="sxs-lookup"><span data-stu-id="fbd54-201">The <paramref name="et" /> parameter is not a valid permission element.</span></span>  
  
 <span data-ttu-id="fbd54-202">-或-</span><span class="sxs-lookup"><span data-stu-id="fbd54-202">-or-</span></span>  
  
 <span data-ttu-id="fbd54-203"><paramref name="et" /> 參數的版本號碼不受支援。</span><span class="sxs-lookup"><span data-stu-id="fbd54-203">The <paramref name="et" /> parameter's version number is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbd54-204">傳回此集合權限的列舉值。</span><span class="sxs-lookup"><span data-stu-id="fbd54-204">Returns an enumerator for the permissions of the set.</span></span></summary>
        <returns><span data-ttu-id="fbd54-205">此集合權限的列舉值物件。</span><span class="sxs-lookup"><span data-stu-id="fbd54-205">An enumerator object for the permissions of the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-206">使用做為索引的列舉值，來存取個別的權限集合中的物件。</span><span class="sxs-lookup"><span data-stu-id="fbd54-206">Use the enumerator as an index to access individual permission objects in the set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd54-207">下列程式碼範例示範使用<xref:System.Security.PermissionSet.GetEnumerator%2A>方法來列出權限集合中的所有權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-207">The following code example shows the use of the <xref:System.Security.PermissionSet.GetEnumerator%2A> method to list all the permissions in a permission set.</span></span> <span data-ttu-id="fbd54-208">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-208">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#18)]
 [!code-csharp[System.Security.PermissionSet#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#18)]
 [!code-vb[System.Security.PermissionSet#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#18)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="fbd54-209">當您繼承自<see cref="T:System.Security.PermissionSet" />，您可以變更的行為<see cref="M:System.Security.PermissionSet.GetEnumerator" />藉由覆寫方法<see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" />方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-209">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.GetEnumerator" /> method by overriding the <see cref="M:System.Security.PermissionSet.GetEnumeratorImpl" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IEnumerator GetEnumeratorImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumeratorImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetEnumeratorImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetEnumeratorImpl () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::IEnumerator ^ GetEnumeratorImpl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbd54-210">傳回此集合權限的列舉值。</span><span class="sxs-lookup"><span data-stu-id="fbd54-210">Returns an enumerator for the permissions of the set.</span></span></summary>
        <returns><span data-ttu-id="fbd54-211">此集合權限的列舉值物件。</span><span class="sxs-lookup"><span data-stu-id="fbd54-211">An enumerator object for the permissions of the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-212"><xref:System.Security.PermissionSet.GetEnumeratorImpl%2A>方法是實作<xref:System.Security.PermissionSet.GetEnumerator%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-212">The <xref:System.Security.PermissionSet.GetEnumeratorImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbd54-213">取得 <see cref="T:System.Security.PermissionSet" /> 物件的雜湊碼，其適合用於雜湊表這類的雜湊演算法和資料結構。</span><span class="sxs-lookup"><span data-stu-id="fbd54-213">Gets a hash code for the <see cref="T:System.Security.PermissionSet" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="fbd54-214">目前 <see cref="T:System.Security.PermissionSet" /> 物件的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="fbd54-214">A hash code for the current <see cref="T:System.Security.PermissionSet" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-215">兩個相同的權限集合執行個體的雜湊程式碼可能會不同，所以不會使用雜湊程式碼比較兩個<xref:System.Security.PermissionSet>物件。</span><span class="sxs-lookup"><span data-stu-id="fbd54-215">The hash code for two instances of the same permission set might be different, so a hash code should not be used to compare two <xref:System.Security.PermissionSet> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission GetPermission (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission GetPermission(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetPermission(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPermission (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ GetPermission(Type ^ permClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass"><span data-ttu-id="fbd54-216">所需權限物件的類型。</span><span class="sxs-lookup"><span data-stu-id="fbd54-216">The type of the desired permission object.</span></span></param>
        <summary><span data-ttu-id="fbd54-217">如果它存在此集合中，則取得指定類型的使用權限物件。</span><span class="sxs-lookup"><span data-stu-id="fbd54-217">Gets a permission object of the specified type, if it exists in the set.</span></span></summary>
        <returns><span data-ttu-id="fbd54-218">包含在 <see cref="T:System.Security.PermissionSet" /> 中的 <paramref name="permClass" /> 參數所指定型別的使用權限物件複本，或者為 <see langword="null" />，如果一個都不存在。</span><span class="sxs-lookup"><span data-stu-id="fbd54-218">A copy of the permission object of the type specified by the <paramref name="permClass" /> parameter contained in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if none exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-219">方法會傳回`null`如`Unrestricted` <xref:System.Security.PermissionSet>。</span><span class="sxs-lookup"><span data-stu-id="fbd54-219">The method returns `null` for an `Unrestricted`<xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="fbd54-220">雖然`Unrestricted`<xref:System.Security.PermissionSet>有效地包含所有的權限，它並沒有任何要傳回的實際執行個體。</span><span class="sxs-lookup"><span data-stu-id="fbd54-220">Although an `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions, it does not have any actual instances to return.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="fbd54-221">當您繼承自<see cref="T:System.Security.PermissionSet" />，您可以變更的行為<see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" />藉由覆寫方法<see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" />方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-221">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.GetPermission(System.Type)" /> method by overriding the <see cref="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission GetPermissionImpl (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission GetPermissionImpl(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPermissionImpl (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ GetPermissionImpl(Type ^ permClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass"><span data-ttu-id="fbd54-222">權限物件的類型。</span><span class="sxs-lookup"><span data-stu-id="fbd54-222">The type of the permission object.</span></span></param>
        <summary><span data-ttu-id="fbd54-223">如果它存在此集合中，則取得指定類型的使用權限物件。</span><span class="sxs-lookup"><span data-stu-id="fbd54-223">Gets a permission object of the specified type, if it exists in the set.</span></span></summary>
        <returns><span data-ttu-id="fbd54-224">包含在 <see cref="T:System.Security.PermissionSet" /> 中，為 <paramref name="permClass" /> 參數所指定型別的使用權限物件複本；如果一個都沒有則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-224">A copy of the permission object, of the type specified by the <paramref name="permClass" /> parameter, contained in the <see cref="T:System.Security.PermissionSet" />, or <see langword="null" /> if none exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-225"><xref:System.Security.PermissionSet.GetPermissionImpl%2A>方法是實作<xref:System.Security.PermissionSet.GetPermission%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-225">The <xref:System.Security.PermissionSet.GetPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.GetPermission%2A> method.</span></span>  
  
 <span data-ttu-id="fbd54-226">方法會傳回`null`如`Unrestricted` <xref:System.Security.PermissionSet>。</span><span class="sxs-lookup"><span data-stu-id="fbd54-226">The method returns `null` for an `Unrestricted`<xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="fbd54-227">雖然`Unrestricted`<xref:System.Security.PermissionSet>有效地包含所有的權限，它並沒有任何要傳回的實際執行個體。</span><span class="sxs-lookup"><span data-stu-id="fbd54-227">Although an `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions, it does not have any actual instances to return.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.PermissionSet Intersect (System.Security.PermissionSet other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.PermissionSet Intersect(class System.Security.PermissionSet other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (other As PermissionSet) As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::PermissionSet ^ Intersect(System::Security::PermissionSet ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="fbd54-228">與目前 <see cref="T:System.Security.PermissionSet" /> 交集的使用權限集合。</span><span class="sxs-lookup"><span data-stu-id="fbd54-228">A permission set to intersect with the current <see cref="T:System.Security.PermissionSet" />.</span></span></param>
        <summary><span data-ttu-id="fbd54-229">建立並傳回是目前 <see cref="T:System.Security.PermissionSet" /> 和指定之 <see cref="T:System.Security.PermissionSet" /> 交集的使用權限集合。</span><span class="sxs-lookup"><span data-stu-id="fbd54-229">Creates and returns a permission set that is the intersection of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="fbd54-230">新的使用權限集合，表示目前 <see cref="T:System.Security.PermissionSet" /> 與指定之目標的交集。</span><span class="sxs-lookup"><span data-stu-id="fbd54-230">A new permission set that represents the intersection of the current <see cref="T:System.Security.PermissionSet" /> and the specified target.</span></span> <span data-ttu-id="fbd54-231">如果交集是空的，則這個物件是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-231">This object is <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-232">兩個權限集合的交集會描述一組共同兩者描述的作業的權限集合。</span><span class="sxs-lookup"><span data-stu-id="fbd54-232">The intersection of two permission sets is a permission set that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="fbd54-233">具體來說，它代表最小權限，會傳遞兩個權限的任何要求中將設定也會傳遞其交集。</span><span class="sxs-lookup"><span data-stu-id="fbd54-233">Specifically, it represents the minimum permissions such that any demand that passes both permission sets also passes their intersection.</span></span>  
  
 <span data-ttu-id="fbd54-234">針對存在於這兩個集合中的權限的每個類型，兩個執行個體，這些權限會交集使用的權限`Intersect`方法產生的權限會包含在產生<xref:System.Security.PermissionSet>。</span><span class="sxs-lookup"><span data-stu-id="fbd54-234">For each type of permission that is present in both sets, the two instances of those permissions are intersected using the permission's `Intersect` method; the resulting permission is included in the resulting <xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="fbd54-235">只有其中一個兩個集合中存在的權限類型會從結果集中排除。</span><span class="sxs-lookup"><span data-stu-id="fbd54-235">Permission types that exist in only one of the two sets are excluded from the resulting set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd54-236">下列程式碼範例示範使用<xref:System.Security.PermissionSet.Intersect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-236">The following code example shows the use of the <xref:System.Security.PermissionSet.Intersect%2A> method.</span></span> <span data-ttu-id="fbd54-237">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-237">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#12)]
 [!code-csharp[System.Security.PermissionSet#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#12)]
 [!code-vb[System.Security.PermissionSet#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEmpty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbd54-238">取得值，指出 <see cref="T:System.Security.PermissionSet" /> 是否為空的。</span><span class="sxs-lookup"><span data-stu-id="fbd54-238">Gets a value indicating whether the <see cref="T:System.Security.PermissionSet" /> is empty.</span></span></summary>
        <returns>
          <span data-ttu-id="fbd54-239">如果 <see langword="true" /> 是空的，則為 <see cref="T:System.Security.PermissionSet" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-239"><see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> is empty; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-240">A<xref:System.Security.PermissionSet>為空白，且尚未包含執行個體的權限，這些權限是否在完全受限制的狀態。</span><span class="sxs-lookup"><span data-stu-id="fbd54-240">A <xref:System.Security.PermissionSet> can be empty and yet contain instances of permissions if those permissions are in the fully-restricted state.</span></span> <span data-ttu-id="fbd54-241">權限就會處於完全限制如果其`IsSubsetOf`方法會傳回`true`時`null`傳遞做為參數。</span><span class="sxs-lookup"><span data-stu-id="fbd54-241">Permissions are in a fully restricted state if their `IsSubsetOf` methods return `true` when `null` is passed as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd54-242">取得值，表示集合是否為唯讀。</span><span class="sxs-lookup"><span data-stu-id="fbd54-242">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="fbd54-243">一定是 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-243">Always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-244">A<xref:System.Security.PermissionSet>不可為唯讀，因此這個屬性永遠都是`false`。</span><span class="sxs-lookup"><span data-stu-id="fbd54-244">A <xref:System.Security.PermissionSet> cannot be read-only, so this property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd54-245">下列程式碼範例顯示傳回的值<xref:System.Security.PermissionSet.IsReadOnly%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd54-245">The following code example shows the value returned by the <xref:System.Security.PermissionSet.IsReadOnly%2A> property.</span></span> <span data-ttu-id="fbd54-246">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-246">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#7)]
 [!code-csharp[System.Security.PermissionSet#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#7)]
 [!code-vb[System.Security.PermissionSet#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.PermissionSet target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSubsetOf(class System.Security.PermissionSet target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As PermissionSet) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(System::Security::PermissionSet ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="fbd54-247">要測試子集關聯性的權限集。</span><span class="sxs-lookup"><span data-stu-id="fbd54-247">The permission set to test for the subset relationship.</span></span> <span data-ttu-id="fbd54-248">這必須是 <see cref="T:System.Security.PermissionSet" /> 或 <see cref="T:System.Security.NamedPermissionSet" /> 兩者的其中一個。</span><span class="sxs-lookup"><span data-stu-id="fbd54-248">This must be either a <see cref="T:System.Security.PermissionSet" /> or a <see cref="T:System.Security.NamedPermissionSet" />.</span></span></param>
        <summary><span data-ttu-id="fbd54-249">判斷目前 <see cref="T:System.Security.PermissionSet" /> 是否為指定 <see cref="T:System.Security.PermissionSet" /> 的子集。</span><span class="sxs-lookup"><span data-stu-id="fbd54-249">Determines whether the current <see cref="T:System.Security.PermissionSet" /> is a subset of the specified <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns>
          <span data-ttu-id="fbd54-250">如果目前的 <see cref="T:System.Security.PermissionSet" /> 是 <paramref name="target" /> 參數的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-250"><see langword="true" /> if the current <see cref="T:System.Security.PermissionSet" /> is a subset of the <paramref name="target" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-251">A<xref:System.Security.PermissionSet>為目標的子集<xref:System.Security.PermissionSet>如果所有要求，都成功的<xref:System.Security.PermissionSet>的目標也能夠順利都執行。</span><span class="sxs-lookup"><span data-stu-id="fbd54-251">A <xref:System.Security.PermissionSet> is a subset of the target <xref:System.Security.PermissionSet> if all demands that succeed for the <xref:System.Security.PermissionSet> also succeed for the target.</span></span> <span data-ttu-id="fbd54-252">也就是目標至少包含的子集中所包含的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-252">That is, the target contains at least the permissions contained in the subset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd54-253">下列程式碼範例示範使用<xref:System.Security.PermissionSet.IsSubsetOf%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-253">The following code example shows the use of the <xref:System.Security.PermissionSet.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="fbd54-254">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-254">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#11)]
 [!code-csharp[System.Security.PermissionSet#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#11)]
 [!code-vb[System.Security.PermissionSet#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd54-255">取得值，指出是否保證集合為安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="fbd54-255">Gets a value indicating whether the collection is guaranteed to be thread safe.</span></span></summary>
        <value><span data-ttu-id="fbd54-256">一定是 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-256">Always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-257"><xref:System.Security.PermissionSet> 不會自動處理執行緒安全，因此這個屬性永遠都是`false`。</span><span class="sxs-lookup"><span data-stu-id="fbd54-257"><xref:System.Security.PermissionSet> does not automatically handle thread safety, so this property is always `false`.</span></span>  
  
 <span data-ttu-id="fbd54-258">此方法才能支援<xref:System.Collections.ICollection>。</span><span class="sxs-lookup"><span data-stu-id="fbd54-258">This method is required to support <xref:System.Collections.ICollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd54-259">下列程式碼範例顯示傳回的值<xref:System.Security.PermissionSet.IsSynchronized%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd54-259">The following code example shows the value returned by the <xref:System.Security.PermissionSet.IsSynchronized%2A> property.</span></span> <span data-ttu-id="fbd54-260">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-260">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#6)]
 [!code-csharp[System.Security.PermissionSet#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#6)]
 [!code-vb[System.Security.PermissionSet#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUnrestricted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbd54-261">判斷 <see cref="T:System.Security.PermissionSet" /> 是否為 <see langword="Unrestricted" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-261">Determines whether the <see cref="T:System.Security.PermissionSet" /> is <see langword="Unrestricted" />.</span></span></summary>
        <returns>
          <span data-ttu-id="fbd54-262">如果 <see cref="T:System.Security.PermissionSet" /> 為 <see langword="true" />，則為 <see langword="Unrestricted" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-262"><see langword="true" /> if the <see cref="T:System.Security.PermissionSet" /> is <see langword="Unrestricted" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-263">`Unrestricted` <xref:System.Security.PermissionSet>有效地包含所有實作的權限<xref:System.Security.Permissions.IUnrestrictedPermission>介面。</span><span class="sxs-lookup"><span data-stu-id="fbd54-263">An `Unrestricted`<xref:System.Security.PermissionSet> effectively contains all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd54-264">下列程式碼範例示範使用<xref:System.Security.PermissionSet.IsUnrestricted%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-264">The following code example shows the use of the <xref:System.Security.PermissionSet.IsUnrestricted%2A> method.</span></span> <span data-ttu-id="fbd54-265">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-265">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#19)]
 [!code-csharp[System.Security.PermissionSet#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#19)]
 [!code-vb[System.Security.PermissionSet#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PermitOnly();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.IStackWalk.PermitOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbd54-266">導致透過任何 <see cref="M:System.Security.PermissionSet.Demand" /> (不是目前 <see cref="T:System.Security.PermissionSet" /> 的子集) 的呼叫程式碼來傳遞的任何 <see cref="T:System.Security.PermissionSet" /> 產生失敗。</span><span class="sxs-lookup"><span data-stu-id="fbd54-266">Causes any <see cref="M:System.Security.PermissionSet.Demand" /> that passes through the calling code for any <see cref="T:System.Security.PermissionSet" /> that is not a subset of the current <see cref="T:System.Security.PermissionSet" /> to fail.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-267"><xref:System.Security.PermissionSet.PermitOnly%2A> 類似於<xref:System.Security.PermissionSet.Deny%2A>，在於兩者會導致堆疊查核行程符合則成功時失敗。</span><span class="sxs-lookup"><span data-stu-id="fbd54-267"><xref:System.Security.PermissionSet.PermitOnly%2A> is similar to <xref:System.Security.PermissionSet.Deny%2A>, in that both cause stack walks to fail when they would otherwise succeed.</span></span> <span data-ttu-id="fbd54-268">其差異在於，<xref:System.Security.PermissionSet.Deny%2A>指定權限，會導致堆疊查核行程失敗，但<xref:System.Security.PermissionSet.PermitOnly%2A>指定不會導致堆疊查核行程失敗的唯一權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-268">The difference is that <xref:System.Security.PermissionSet.Deny%2A> specifies permissions that will cause the stack walk to fail, but <xref:System.Security.PermissionSet.PermitOnly%2A> specifies the only permissions that do not cause the stack walk to fail.</span></span> <span data-ttu-id="fbd54-269">呼叫此方法，以確保您的程式碼，可用來存取指定的資源。</span><span class="sxs-lookup"><span data-stu-id="fbd54-269">Call this method to ensure that your code can be used to access only the specified resources.</span></span>  
  
 <span data-ttu-id="fbd54-270"><xref:System.Security.PermissionSet.PermitOnly%2A> 會忽略該權限的要求不成功，因為未授與的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-270"><xref:System.Security.PermissionSet.PermitOnly%2A> is ignored for a permission not granted because a demand for that permission cannot succeed.</span></span> <span data-ttu-id="fbd54-271">不過，如果程式碼呼叫較低堆疊稍後呼叫<xref:System.Security.PermissionSet.Demand%2A>該權限，<xref:System.Security.SecurityException>堆疊查核行程到達嘗試呼叫的程式碼時，會擲回<xref:System.Security.PermissionSet.PermitOnly%2A>。</span><span class="sxs-lookup"><span data-stu-id="fbd54-271">However, if code lower on the call stack later calls <xref:System.Security.PermissionSet.Demand%2A> for that permission, a <xref:System.Security.SecurityException> is thrown when the stack walk reaches the code that tried to call <xref:System.Security.PermissionSet.PermitOnly%2A>.</span></span> <span data-ttu-id="fbd54-272">這是因為程式碼呼叫<xref:System.Security.PermissionSet.PermitOnly%2A>未被授與權限，即使它呼叫<xref:System.Security.PermissionSet.PermitOnly%2A>該權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-272">This is because the code that called <xref:System.Security.PermissionSet.PermitOnly%2A> has not been granted the permission, even though it called <xref:System.Security.PermissionSet.PermitOnly%2A> for that permission.</span></span> <span data-ttu-id="fbd54-273">呼叫堆疊通常會表示向下成長，使方法呼叫堆疊中較高層呼叫的方法較低的呼叫堆疊中。</span><span class="sxs-lookup"><span data-stu-id="fbd54-273">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission RemovePermission (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission RemovePermission(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RemovePermission(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemovePermission (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ RemovePermission(Type ^ permClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass"><span data-ttu-id="fbd54-274">要刪除之權限的類型。</span><span class="sxs-lookup"><span data-stu-id="fbd54-274">The type of permission to delete.</span></span></param>
        <summary><span data-ttu-id="fbd54-275">從集合中移除特定類型的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-275">Removes a permission of a certain type from the set.</span></span></summary>
        <returns><span data-ttu-id="fbd54-276">從集合中移除的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-276">The permission removed from the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="fbd54-277">您無法移除不受限制的權限集合的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-277">You cannot remove permissions from an unrestricted permission set.</span></span> <span data-ttu-id="fbd54-278">權限設定會維持為無限制之後嘗試移除權限，而不會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="fbd54-278">The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</span></span>  
  
 <span data-ttu-id="fbd54-279">下列 C# 程式碼會嘗試移除<xref:System.Security.Permissions.FileIOPermission>從`FullTrust`設定權限，但未移除的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-279">The following C# code attempts to remove the <xref:System.Security.Permissions.FileIOPermission> from the `FullTrust` permission set, but the permission is not removed.</span></span>  
  
```  
PolicyLevel myPol = PolicyLevel.CreateAppDomainLevel();  
PermissionSet myPermSet = myPol.GetNamedPermissionSet("FullTrust");  
myPermSet.RemovePermission(typeof(FileIOPermission));  
```  
  
   
  
## Examples  
 <span data-ttu-id="fbd54-280">下列程式碼範例示範使用<xref:System.Security.PermissionSet.RemovePermission%2A>方法移除<xref:System.Security.Permissions.FileIOPermission>從權限集。</span><span class="sxs-lookup"><span data-stu-id="fbd54-280">The following code example shows the use of the <xref:System.Security.PermissionSet.RemovePermission%2A> method to remove a <xref:System.Security.Permissions.FileIOPermission> from a permission set.</span></span> <span data-ttu-id="fbd54-281">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-281">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#15)]
 [!code-csharp[System.Security.PermissionSet#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#15)]
 [!code-vb[System.Security.PermissionSet#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd54-282">此方法是從 <see cref="T:System.Security.ReadOnlyPermissionSet" /> 呼叫。</span><span class="sxs-lookup"><span data-stu-id="fbd54-282">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="fbd54-283">當您繼承自<see cref="T:System.Security.PermissionSet" />，您可以變更的行為<see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" />藉由覆寫方法<see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" />方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-283">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.RemovePermission(System.Type)" /> method by overriding the <see cref="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemovePermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission RemovePermissionImpl (Type permClass);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission RemovePermissionImpl(class System.Type permClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RemovePermissionImpl (permClass As Type) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ RemovePermissionImpl(Type ^ permClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="permClass"><span data-ttu-id="fbd54-284">要移除權限的類型。</span><span class="sxs-lookup"><span data-stu-id="fbd54-284">The type of the permission to remove.</span></span></param>
        <summary><span data-ttu-id="fbd54-285">從集合中移除特定類型的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-285">Removes a permission of a certain type from the set.</span></span></summary>
        <returns><span data-ttu-id="fbd54-286">從集合中移除的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-286">The permission removed from the set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-287"><xref:System.Security.PermissionSet.RemovePermissionImpl%2A>方法是實作<xref:System.Security.PermissionSet.RemovePermission%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-287">The <xref:System.Security.PermissionSet.RemovePermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.RemovePermission%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fbd54-288">您無法移除不受限制的權限集合的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-288">You cannot remove permissions from an unrestricted permission set.</span></span> <span data-ttu-id="fbd54-289">權限設定會維持為無限制之後嘗試移除權限，而不會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="fbd54-289">The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd54-290">此方法是從 <see cref="T:System.Security.ReadOnlyPermissionSet" /> 呼叫。</span><span class="sxs-lookup"><span data-stu-id="fbd54-290">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RevertAssert">
      <MemberSignature Language="C#" Value="public static void RevertAssert ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RevertAssert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.RevertAssert" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RevertAssert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RevertAssert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbd54-291">造成目前框架之任何先前的 <see cref="M:System.Security.CodeAccessPermission.Assert" /> 將移除並且不再有效。</span><span class="sxs-lookup"><span data-stu-id="fbd54-291">Causes any previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame to be removed and no longer be in effect.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-292">如果沒有任何<xref:System.Security.CodeAccessPermission.Assert%2A>目前的框架，<xref:System.ExecutionEngineException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="fbd54-292">If there is no <xref:System.Security.CodeAccessPermission.Assert%2A> for the current frame, an <xref:System.ExecutionEngineException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd54-293">沒有目前框架先前的 <see cref="M:System.Security.CodeAccessPermission.Assert" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-293">There is no previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetPermission">
      <MemberSignature Language="C#" Value="public System.Security.IPermission SetPermission (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.IPermission SetPermission(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPermission (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ SetPermission(System::Security::IPermission ^ perm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm"><span data-ttu-id="fbd54-294">要設定的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-294">The permission to set.</span></span></param>
        <summary><span data-ttu-id="fbd54-295">將使用權限設定為 <see cref="T:System.Security.PermissionSet" />，以取代任何相同類型的現有使用權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-295">Sets a permission to the <see cref="T:System.Security.PermissionSet" />, replacing any existing permission of the same type.</span></span></summary>
        <returns><span data-ttu-id="fbd54-296">已設定的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-296">The set permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-297">這個方法會移除任何現有的權限物件從相同型別的<xref:System.Security.PermissionSet>取代，它與`perm`參數。</span><span class="sxs-lookup"><span data-stu-id="fbd54-297">This method removes any existing permission object of the same type from the <xref:System.Security.PermissionSet> and replaces it with the `perm` parameter.</span></span> <span data-ttu-id="fbd54-298">如果實作的權限<xref:System.Security.Permissions.IUnrestrictedPermission>上設定<xref:System.Security.PermissionSet>也就是<xref:System.Security.Permissions.PermissionState.Unrestricted>，產生<xref:System.Security.PermissionSet>不再`Unrestricted`。</span><span class="sxs-lookup"><span data-stu-id="fbd54-298">If a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is set on a <xref:System.Security.PermissionSet> that is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the resulting <xref:System.Security.PermissionSet> is no longer `Unrestricted`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd54-299">下列程式碼範例示範使用<xref:System.Security.PermissionSet.SetPermission%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-299">The following code example shows the use of the <xref:System.Security.PermissionSet.SetPermission%2A> method.</span></span> <span data-ttu-id="fbd54-300">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-300">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#16)]
 [!code-csharp[System.Security.PermissionSet#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#16)]
 [!code-vb[System.Security.PermissionSet#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd54-301">此方法是從 <see cref="T:System.Security.ReadOnlyPermissionSet" /> 呼叫。</span><span class="sxs-lookup"><span data-stu-id="fbd54-301">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="fbd54-302">當您繼承自<see cref="T:System.Security.PermissionSet" />，您可以變更的行為<see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" />藉由覆寫方法<see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" />方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-302">When you inherit from <see cref="T:System.Security.PermissionSet" />, you can change the behavior of the <see cref="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)" /> method by overriding the <see cref="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetPermissionImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Security.IPermission SetPermissionImpl (System.Security.IPermission perm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.IPermission SetPermissionImpl(class System.Security.IPermission perm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetPermissionImpl (perm As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::IPermission ^ SetPermissionImpl(System::Security::IPermission ^ perm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="perm" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="perm"><span data-ttu-id="fbd54-303">要設定的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-303">The permission to set.</span></span></param>
        <summary><span data-ttu-id="fbd54-304">將使用權限設定為 <see cref="T:System.Security.PermissionSet" />，以取代任何相同類型的現有使用權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-304">Sets a permission to the <see cref="T:System.Security.PermissionSet" />, replacing any existing permission of the same type.</span></span></summary>
        <returns><span data-ttu-id="fbd54-305">已設定的權限。</span><span class="sxs-lookup"><span data-stu-id="fbd54-305">The set permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-306"><xref:System.Security.PermissionSet.SetPermissionImpl%2A>方法是實作<xref:System.Security.PermissionSet.SetPermission%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-306">The <xref:System.Security.PermissionSet.SetPermissionImpl%2A> method is the implementation for the <xref:System.Security.PermissionSet.SetPermission%2A> method.</span></span>  
  
 <span data-ttu-id="fbd54-307">這個方法會移除任何現有的權限物件從相同型別的<xref:System.Security.PermissionSet>取代，它與`perm`參數。</span><span class="sxs-lookup"><span data-stu-id="fbd54-307">This method removes any existing permission object of the same type from the <xref:System.Security.PermissionSet> and replaces it with the `perm` parameter.</span></span> <span data-ttu-id="fbd54-308">如果實作的權限<xref:System.Security.Permissions.IUnrestrictedPermission>上設定<xref:System.Security.PermissionSet>也就是<xref:System.Security.Permissions.PermissionState.Unrestricted>，產生<xref:System.Security.PermissionSet>不再`Unrestricted`。</span><span class="sxs-lookup"><span data-stu-id="fbd54-308">If a permission that implements <xref:System.Security.Permissions.IUnrestrictedPermission> is set on a <xref:System.Security.PermissionSet> that is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the resulting <xref:System.Security.PermissionSet> is no longer `Unrestricted`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fbd54-309">此方法是從 <see cref="T:System.Security.ReadOnlyPermissionSet" /> 呼叫。</span><span class="sxs-lookup"><span data-stu-id="fbd54-309">The method is called from a <see cref="T:System.Security.ReadOnlyPermissionSet" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Security.PermissionSet.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd54-310">取得目前集合的根物件。</span><span class="sxs-lookup"><span data-stu-id="fbd54-310">Gets the root object of the current collection.</span></span></summary>
        <value><span data-ttu-id="fbd54-311">目前集合的根物件。</span><span class="sxs-lookup"><span data-stu-id="fbd54-311">The root object of the current collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-312">此方法才能支援<xref:System.Collections.ICollection>。</span><span class="sxs-lookup"><span data-stu-id="fbd54-312">This method is required to support <xref:System.Collections.ICollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd54-313">下列程式碼範例示範使用<xref:System.Security.PermissionSet.SyncRoot%2A>来取得根物件，則目前集合的屬性。</span><span class="sxs-lookup"><span data-stu-id="fbd54-313">The following code example shows the use of <xref:System.Security.PermissionSet.SyncRoot%2A> property to get the root object of the current collection.</span></span> <span data-ttu-id="fbd54-314">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-314">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#8)]
 [!code-csharp[System.Security.PermissionSet#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#8)]
 [!code-vb[System.Security.PermissionSet#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="fbd54-315">初始化回呼 (Callback) 的物件。</span><span class="sxs-lookup"><span data-stu-id="fbd54-315">The object that initiated the callback.</span></span> <span data-ttu-id="fbd54-316">這個參數的功能目前未實作。</span><span class="sxs-lookup"><span data-stu-id="fbd54-316">The functionality for this parameter is not currently implemented.</span></span></param>
        <summary><span data-ttu-id="fbd54-317">執行於整個物件 Graph 已經還原序列化時。</span><span class="sxs-lookup"><span data-stu-id="fbd54-317">Runs when the entire object graph has been deserialized.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbd54-318">傳回 <see cref="T:System.Security.PermissionSet" /> 的字串表示法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-318">Returns a string representation of the <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="fbd54-319"><see cref="T:System.Security.PermissionSet" /> 的表示。</span><span class="sxs-lookup"><span data-stu-id="fbd54-319">A representation of the <see cref="T:System.Security.PermissionSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-320">字串表示適用於偵錯以查看狀態<xref:System.Security.PermissionSet>。</span><span class="sxs-lookup"><span data-stu-id="fbd54-320">The string representation is useful in debugging to see the state of a <xref:System.Security.PermissionSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd54-321">下列程式碼範例示範使用<xref:System.Security.PermissionSet.ToString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-321">The following code example shows the use of the <xref:System.Security.PermissionSet.ToString%2A> method.</span></span> <span data-ttu-id="fbd54-322">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-322">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#10)]
 [!code-csharp[System.Security.PermissionSet#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#10)]
 [!code-vb[System.Security.PermissionSet#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public virtual System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.ISecurityEncodable.ToXml</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbd54-323">建立安全物件及其目前狀態的 XML 編碼方式。</span><span class="sxs-lookup"><span data-stu-id="fbd54-323">Creates an XML encoding of the security object and its current state.</span></span></summary>
        <returns><span data-ttu-id="fbd54-324">安全物件的 XML 編碼方式，包含所有狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="fbd54-324">An XML encoding of the security object, including any state information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbd54-325">下列程式碼範例示範使用<xref:System.Security.PermissionSet.ToXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-325">The following code example shows the use of the <xref:System.Security.PermissionSet.ToXml%2A> method.</span></span> <span data-ttu-id="fbd54-326">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-326">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#17)]
 [!code-csharp[System.Security.PermissionSet#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#17)]
 [!code-vb[System.Security.PermissionSet#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.PermissionSet Union (System.Security.PermissionSet other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.PermissionSet Union(class System.Security.PermissionSet other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (other As PermissionSet) As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::PermissionSet ^ Union(System::Security::PermissionSet ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="fbd54-327">與目前 <see cref="T:System.Security.PermissionSet" /> 形成聯集的使用權限集合。</span><span class="sxs-lookup"><span data-stu-id="fbd54-327">The permission set to form the union with the current <see cref="T:System.Security.PermissionSet" />.</span></span></param>
        <summary><span data-ttu-id="fbd54-328">建立是目前 <see cref="T:System.Security.PermissionSet" /> 和指定 <see cref="T:System.Security.PermissionSet" /> 聯集的 <see cref="T:System.Security.PermissionSet" />。</span><span class="sxs-lookup"><span data-stu-id="fbd54-328">Creates a <see cref="T:System.Security.PermissionSet" /> that is the union of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span></span></summary>
        <returns><span data-ttu-id="fbd54-329">新的使用權限集合，表示目前 <see cref="T:System.Security.PermissionSet" /> 與指定之 <see cref="T:System.Security.PermissionSet" /> 的聯集。</span><span class="sxs-lookup"><span data-stu-id="fbd54-329">A new permission set that represents the union of the current <see cref="T:System.Security.PermissionSet" /> and the specified <see cref="T:System.Security.PermissionSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd54-330">若要呼叫的結果<xref:System.Security.PermissionSet.Union%2A>是<xref:System.Security.PermissionSet>，代表由目前的所有作業<xref:System.Security.PermissionSet>以及由指定的所有作業<xref:System.Security.PermissionSet>。</span><span class="sxs-lookup"><span data-stu-id="fbd54-330">The result of a call to <xref:System.Security.PermissionSet.Union%2A> is a <xref:System.Security.PermissionSet> that represents all the operations represented by the current <xref:System.Security.PermissionSet> as well as all the operations represented by the specified <xref:System.Security.PermissionSet>.</span></span> <span data-ttu-id="fbd54-331">如果設定為`Unrestricted`，等位是`Unrestricted`以及。</span><span class="sxs-lookup"><span data-stu-id="fbd54-331">If either set is `Unrestricted`, the union is `Unrestricted` as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd54-332">下列程式碼範例示範使用<xref:System.Security.PermissionSet.Union%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fbd54-332">The following code example shows the use of the <xref:System.Security.PermissionSet.Union%2A> method.</span></span> <span data-ttu-id="fbd54-333">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.PermissionSet>類別。</span><span class="sxs-lookup"><span data-stu-id="fbd54-333">This code example is part of a larger example provided for the <xref:System.Security.PermissionSet> class.</span></span>  
  
 [!code-cpp[System.Security.PermissionSet#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.PermissionSet/CPP/permissionset.cpp#13)]
 [!code-csharp[System.Security.PermissionSet#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.PermissionSet/CS/permissionset.cs#13)]
 [!code-vb[System.Security.PermissionSet#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.PermissionSet/VB/permissionset.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>