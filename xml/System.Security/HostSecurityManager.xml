<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HostSecurityManager.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ff48fa5df967caba5aed9ae2ba2fef1a119992f4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff48fa5df967caba5aed9ae2ba2fef1a119992f4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.HostSecurityManager">
          <source>Allows the control and customization of security behavior for application domains.</source>
          <target state="translated">允許控制及自訂應用程式定義域的安全性行為。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>When you create a new <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>, the common language runtime queries the <ph id="ph2">&lt;xref:System.AppDomainManager&gt;</ph> for the presence of a <ph id="ph3">&lt;xref:System.Security.HostSecurityManager&gt;</ph>, which participates in making security decisions for the <ph id="ph4">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated">當您建立新<ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>，通用語言執行階段查詢<ph id="ph2">&lt;xref:System.AppDomainManager&gt;</ph>是否存在<ph id="ph3">&lt;xref:System.Security.HostSecurityManager&gt;</ph>，其參與安全性決策<ph id="ph4">&lt;xref:System.AppDomain&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>Host providers should implement a host security manager that inherits from the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class.</source>
          <target state="translated">主機提供者應實作繼承自主機安全性管理員<ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>The following example shows a very simple implementation of a <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph>.</source>
          <target state="translated">下列範例示範的簡單實作<ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>This class cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個類別無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>for full trust for inheritors.</source>
          <target state="translated">針對繼承者完全信任。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">這個類別無法被繼承，部分信任程式碼。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>Some members of a <ph id="ph1">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph> are called whenever an assembly is loaded, either implicitly or explicitly.</source>
          <target state="translated">某些成員<ph id="ph1">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph>組件已載入，以隱含或明確時被呼叫。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>The <ph id="ph1">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" /&gt;</ph> methods must not load any assemblies, because doing so will result in the members of the <ph id="ph3">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph> being recursively called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" /&gt;</ph>方法必須載入任何組件，因為這樣會導致成員<ph id="ph3">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph>進行遞迴呼叫。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.HostSecurityManager">
          <source>To avoid circular references, you should create new instances of classes that can cause assemblies to be loaded, either implicitly or explicitly, in the constructor of a class that derives from <ph id="ph1">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph>.</source>
          <target state="translated">若要避免循環參考，您應該建立可能會導致要載入組件，以隱含或明確，衍生自類別的建構函式中的類別的新執行個體<ph id="ph1">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.HostSecurityManager" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>for full trust for inheritors.</source>
          <target state="translated">針對繼承者完全信任。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">這個成員無法繼承由部分信任程式碼。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>Create instances of classes that can cause assemblies to be loaded, either explicitly or implicitly, in this constructor.</source>
          <target state="translated">建立會導致這個建構函式組件載入，明確或隱含的類別的執行個體。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.#ctor">
          <source>The get accessor for the <ph id="ph1">&lt;see cref="P:System.Security.HostSecurityManager.DomainPolicy" /&gt;</ph> property and the <ph id="ph2">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" /&gt;</ph> and <ph id="ph3">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" /&gt;</ph> methods are called whenever an assembly is loaded, and their subsequent loading of assemblies will cause circular references.</source>
          <target state="translated">Get 存取子的<ph id="ph1">&lt;see cref="P:System.Security.HostSecurityManager.DomainPolicy" /&gt;</ph>屬性和<ph id="ph2">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" /&gt;</ph>和<ph id="ph3">&lt;see cref="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" /&gt;</ph>每當組件已載入，而且其後續載入的組件會造成循環參考時，會呼叫方法。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The evidence for the application to be activated.</source>
          <target state="translated">要啟動之應用程式的辨識項。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>Optionally, the evidence for the activating application domain.</source>
          <target state="translated">或者，啟動中應用程式定義域的辨識項。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The trust context.</source>
          <target state="translated">信任內容。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>Determines whether an application should be executed.</source>
          <target state="translated">決定是否應該執行應用程式。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>An object that contains trust information about the application.</source>
          <target state="translated">包含應用程式相關信任資訊的物件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">在衍生類別可以覆寫這個方法。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The base implementation calls the application security manager to determine if the application should be executed.</source>
          <target state="translated">基底實作會呼叫應用程式安全性管理員，以便判斷是否應該執行的應用程式。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The base implementation does not use the activator evidence.</source>
          <target state="translated">基底實作不會使用啟動項辨識項。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>However, an overridden implementation could use the activator evidence to determine the security evidence for the application domain attempting to activate the application.</source>
          <target state="translated">不過，覆寫的實作無法使用啟動項辨識項來決定嘗試啟動應用程式的應用程式定義域的安全性辨識項。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A&gt;</ph> method for a custom host security manager.</source>
          <target state="translated">下列範例示範如何覆寫<ph id="ph1">&lt;xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A&gt;</ph>自訂主機安全性管理員的方法。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class.</source>
          <target state="translated">這個範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source><ph id="ph1">&lt;paramref name="applicationEvidence" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="applicationEvidence" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Runtime.Hosting.ActivationArguments" /&gt;</ph> object could not be found in the application evidence.</source>
          <target state="translated">在應用程式辨識項中找不到 <ph id="ph1">&lt;see cref="T:System.Runtime.Hosting.ActivationArguments" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" /&gt;</ph> property in the activation arguments is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">啟動引數的 <ph id="ph1">&lt;see cref="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" /&gt;</ph> 屬性是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Policy.ApplicationTrust" /&gt;</ph> grant set does not contain the minimum request set specified by the <ph id="ph2">&lt;see cref="T:System.ActivationContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Policy.ApplicationTrust" /&gt;</ph> 授權集不包含 <ph id="ph2">&lt;see cref="T:System.ActivationContext" /&gt;</ph> 所指定的最小要求集。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>When overridden in a derived class, gets the security policy for the current application domain.</source>
          <target state="translated">在衍生類別中覆寫時，取得目前應用程式定義域的安全性原則。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>The security policy for the current application domain.</source>
          <target state="translated">目前應用程式定義域的安全性原則。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>This property can be overridden in a derived class.</source>
          <target state="translated">這個屬性可以在衍生類別中被覆寫。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>The base implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">這個基底實作一定會傳回 <ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>This property is called at <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> creation time.</source>
          <target state="translated">這個屬性會在呼叫<ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>建立時間。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>It allows a host to supply a policy for the current <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated">它可讓主機提供的原則，目前<ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>A policy level consists of the following:</source>
          <target state="translated">原則層級是由下列項目所組成：</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>A set of code groups organized into a single rooted tree.</source>
          <target state="translated">一組程式碼群組會組織成單一的根樹狀結構。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>A set of named permission sets that are referenced by the code groups to specify permissions to be granted to code belonging to the code group.</source>
          <target state="translated">一組具名使用權限集合所參考的指定權限授與程式碼群組所屬的程式碼的程式碼群組。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>A list of fully trusted assemblies.</source>
          <target state="translated">完全信任組件清單。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>See the Notes to Inheritors for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class for critical implementation information.</source>
          <target state="translated">請參閱的繼承者注意事項<ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph>重要實作資訊的類別。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>This method uses code access security (CAS) policy, which is obsolete in the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
          <target state="translated">此方法使用在 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> 中已過時的程式碼存取安全性 (CAS) 原則。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Security.HostSecurityManager.DomainPolicy">
          <source>To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>legacyCasPolicy<ph id="ph2">&amp;gt;</ph> element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.</source>
          <target state="translated">若要啟用 CAS 原則對舊版 .NET Framework 的相容性，請使用 <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>legacyCasPolicy<ph id="ph2">&amp;gt;</ph> 項目<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Security.HostSecurityManager.Flags">
          <source>Gets the flag representing the security policy components of concern to the host.</source>
          <target state="translated">取得旗標，表示主機的重要安全性原則元件。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>One of the enumeration values that specifies security policy components.</source>
          <target state="translated">其中一個列舉值，指定安全性原則元件。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Security.HostSecurityManagerOptions.AllFlags" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see cref="F:System.Security.HostSecurityManagerOptions.AllFlags" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>This property can be overridden in a derived class.</source>
          <target state="translated">這個屬性可以在衍生類別中被覆寫。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>The base implementation always returns <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.AllFlags&gt;</ph>.</source>
          <target state="translated">這個基底實作一定會傳回 <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.AllFlags&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>The derived host can change the value of this property when only a subset of the <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions&gt;</ph> is of interest.</source>
          <target state="translated">在衍生的主應用程式可以變更的值，這個屬性的子集時<ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions&gt;</ph>感興趣。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>The possible subsets include none, the refused set, the policy level, and assembly evidence.</source>
          <target state="translated">可能的子集包括 none、 拒絕的集合，原則層級和組件辨識項。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> property for a custom host security manager.</source>
          <target state="translated">下列範例示範如何覆寫<ph id="ph1">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph>自訂主機安全性管理員的屬性。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.HostSecurityManager.Flags">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class.</source>
          <target state="translated">這個範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The evidence type.</source>
          <target state="translated">辨識項型別。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>Requests a specific evidence type for the application domain.</source>
          <target state="translated">針對應用程式定義域要求特定辨識項型別。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The requested application domain evidence.</source>
          <target state="translated">要求的應用程式定義域辨識項。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">在衍生類別可以覆寫這個方法。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">基底實作會傳回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The common language runtime calls this method when evidence of the specified type is needed for the current <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>.</source>
          <target state="translated">Common language runtime 時呼叫這個方法需要指定類型的辨識項目前<ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The returned value is used as host-supplied evidence, and is stored in the <ph id="ph1">&lt;xref:System.AppDomain.Evidence%2A&gt;</ph> collection of the <ph id="ph2">&lt;xref:System.AppDomain.CurrentDomain%2A&gt;</ph> property.</source>
          <target state="translated">傳回的值做為主機提供的辨識項，而且會儲存在<ph id="ph1">&lt;xref:System.AppDomain.Evidence%2A&gt;</ph>集合<ph id="ph2">&lt;xref:System.AppDomain.CurrentDomain%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=nameWithType&gt;</ph> method to obtain the generated evidence from the collection.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=nameWithType&gt;</ph>方法，以從集合中取得所產生的辨識項。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>To get a callback to this method, hosts must specify the <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence&gt;</ph> flag in the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> property.</source>
          <target state="translated">若要取得這個方法的回呼，主機必須指定<ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence&gt;</ph>加上旗標<ph id="ph2">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>This method of generating evidence allows hosts to delay evidence generation for an <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> until the evidence is needed.</source>
          <target state="translated">產生的辨識項的這個方法可讓主機的辨識項產生延遲<ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>之前需要辨識項。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>In the .NET Framework version 3.5 and earlier versions, it was necessary to provide <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> evidence at load time by overriding the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> method.</source>
          <target state="translated">在.NET Framework 3.5 版和更早版本中，是為了提供<ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>在載入時間，藉由覆寫的辨識項<ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>We recommend that you use <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> to provide evidence instead of overriding <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph>.</source>
          <target state="translated">我們建議您改用<ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph>提供辨識項，而不是覆寫<ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> method is called back into only for types of evidence that the host has specified in the override of the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph>方法會回撥到只會針對類型的主機具有指定的覆寫中的辨識項<ph id="ph2">&lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>A return value of <ph id="ph1">`null`</ph> indicates that the host cannot generate evidence of this specific type.</source>
          <target state="translated">傳回值為<ph id="ph1">`null`</ph>指出主機無法產生此特定類型的辨識項。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> method for a custom host security manager.</source>
          <target state="translated">下列範例示範如何覆寫<ph id="ph1">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph>自訂主機安全性管理員的方法。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class.</source>
          <target state="translated">這個範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The evidence type.</source>
          <target state="translated">辨識項型別。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The target assembly.</source>
          <target state="translated">目標組件。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>Requests a specific evidence type for the assembly.</source>
          <target state="translated">針對組件要求特定辨識項型別。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The requested assembly evidence.</source>
          <target state="translated">要求的組件辨識項。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">在衍生類別可以覆寫這個方法。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">基底實作會傳回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The common language runtime calls this method when evidence of the specified type is needed for the current assembly.</source>
          <target state="translated">指定類型的辨識項需要目前組件時，common language runtime 會呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The returned value is used as host-supplied evidence, and is stored in the <ph id="ph1">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph> property.</source>
          <target state="translated">傳回的值做為主機提供的辨識項，而且會儲存在<ph id="ph1">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=nameWithType&gt;</ph> method to obtain the generated evidence from the <ph id="ph2">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph> property.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=nameWithType&gt;</ph>方法，以取得產生的辨識項的<ph id="ph2">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>To get a callback to this method, hosts must specify the <ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence&gt;</ph> flag in the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph> property.</source>
          <target state="translated">若要取得這個方法的回呼，主機必須指定<ph id="ph1">&lt;xref:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence&gt;</ph>加上旗標<ph id="ph2">&lt;xref:System.Security.HostSecurityManager.Flags%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>This method of generating evidence allows hosts to delay evidence generation for an <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> until the evidence is needed.</source>
          <target state="translated">產生的辨識項的這個方法可讓主機的辨識項產生延遲<ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>之前需要辨識項。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>In the .NET Framework 3.5 and earlier versions, it was necessary to provide <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> evidence at load time by overriding the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph> method.</source>
          <target state="translated">在.NET Framework 3.5 和舊版中，是為了提供<ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>在載入時間，藉由覆寫的辨識項<ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>We recommend that you use <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> to provide evidence instead of overriding <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A&gt;</ph>.</source>
          <target state="translated">我們建議您改用<ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph>提供辨識項，而不是覆寫<ph id="ph2">&lt;xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>The <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> method is called back into only for types of evidence that the host has specified in the override of the <ph id="ph2">&lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph>方法會回撥到只會針對類型的主機具有指定的覆寫中的辨識項<ph id="ph2">&lt;xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
          <source>A return value of <ph id="ph1">`null`</ph> indicates that the host cannot generate evidence of this specific type.</source>
          <target state="translated">傳回值為<ph id="ph1">`null`</ph>指出主機無法產生此特定類型的辨識項。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>Determines which evidence types the host can supply for the application domain, if requested.</source>
          <target state="translated">判斷主機可為應用程式定義域提供的辨識項型別 (如有要求的話)。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>An array of evidence types.</source>
          <target state="translated">辨識項型別的陣列。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">在衍生類別可以覆寫這個方法。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">基底實作會傳回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>The types returned by this method determine whether the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph> method is called back into.</source>
          <target state="translated">這個方法所傳回的型別決定是否<ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A&gt;</ph>到回呼叫方法。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to.</source>
          <target state="translated">這份清單中的類型存在並不表示主機必須要能夠產生此辨識項型別，但它可能是能夠。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
          <source>For that reason, it is best to over-specify rather than under-specify the types in this list.</source>
          <target state="translated">基於這個原因，所以最好先過度指定，而不是在-指定這個清單中的類型。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>The target assembly.</source>
          <target state="translated">目標組件。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>Determines which evidence types the host can supply for the assembly, if requested.</source>
          <target state="translated">判斷主機可為組件提供的辨識項型別 (如有要求的話)。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>An array of evidence types.</source>
          <target state="translated">辨識項型別的陣列。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">在衍生類別可以覆寫這個方法。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>The base implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">基底實作會傳回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>The types returned by this method determine whether the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph> method is called back into.</source>
          <target state="translated">這個方法所傳回的型別決定是否<ph id="ph1">&lt;xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A&gt;</ph>到回呼叫方法。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>The presence of a type in this list does not mean that the host must be able to generate this evidence type, but that it may be able to.</source>
          <target state="translated">這份清單中的類型存在並不表示主機必須要能夠產生此辨識項型別，但它可能是能夠。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
          <source>For that reason, it is best to over-specify rather than under-specify the types in this list.</source>
          <target state="translated">基於這個原因，所以最好先過度指定，而不是在-指定這個清單中的類型。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>Additional evidence to add to the <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph> evidence.</source>
          <target state="translated">要加入至 <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph> 辨識項的其他辨識項。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>Provides the application domain evidence for an assembly being loaded.</source>
          <target state="translated">提供要載入之組件的應用程式定義域辨識項。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>The evidence to be used for the <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</source>
          <target state="translated">要用於 <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph> 的辨識項。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>This method can be overridden in a derived class.</source>
          <target state="translated">這個方法可以在衍生類別中被覆寫。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>This method is called whenever an <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> object is created.</source>
          <target state="translated">這個方法會呼叫每當<ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>建立物件。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>The <ph id="ph1">`inputEvidence`</ph> parameter is the computed evidence from the common language runtime.</source>
          <target state="translated"><ph id="ph1">`inputEvidence`</ph>參數是從通用語言執行平台計算的辨識項。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>The host implementation can choose to extend or reduce the evidence.</source>
          <target state="translated">主應用程式實作可以選擇擴充或縮減辨識項。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>The return value is the evidence to be used for the application domain.</source>
          <target state="translated">傳回值是要用於應用程式定義域的辨識項。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>The base implementation always returns the evidence object passed in as the <ph id="ph1">`inputEvidence`</ph> parameter.</source>
          <target state="translated">基底實作一律會傳回做為傳遞的辨識項物件<ph id="ph1">`inputEvidence`</ph>參數。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
          <source>See the Notes to Inheritors for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class for critical implementation information.</source>
          <target state="translated">請參閱的繼承者注意事項<ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph>重要實作資訊的類別。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The loaded assembly.</source>
          <target state="translated">載入的組件。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>Additional evidence to add to the assembly evidence.</source>
          <target state="translated">要加入至組件辨識項的其他辨識項。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>Provides the assembly evidence for an assembly being loaded.</source>
          <target state="translated">提供要載入之組件的組件辨識項。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The evidence to be used for the assembly.</source>
          <target state="translated">要用於組件的辨識項。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>This method can be overridden in a derived class.</source>
          <target state="translated">這個方法可以在衍生類別中被覆寫。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>This method is called whenever an assembly is loaded, either implicitly or explicitly.</source>
          <target state="translated">每當組件已載入，以隱含或明確方式，就會呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The passed in parameters are the assembly being loaded, and the computed evidence from the common language runtime.</source>
          <target state="translated">傳入的參數是正在載入的組件和計算的辨識項，從 common language runtime。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The host implementation can choose to extend or reduce the evidence.</source>
          <target state="translated">主應用程式實作可以選擇擴充或縮減辨識項。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The return value is the evidence to be used for the assembly.</source>
          <target state="translated">傳回值是要用於組件的辨識項。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The base implementation always returns the evidence object passed in as the <ph id="ph1">`inputEvidence`</ph> parameter.</source>
          <target state="translated">基底實作一律會傳回做為傳遞的辨識項物件<ph id="ph1">`inputEvidence`</ph>參數。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>See the Notes to Inheritors for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class for critical implementation information.</source>
          <target state="translated">請參閱的繼承者注意事項<ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph>重要實作資訊的類別。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A&gt;</ph> method for a custom host security manager.</source>
          <target state="translated">下列範例示範如何覆寫<ph id="ph1">&lt;xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A&gt;</ph>自訂主機安全性管理員的方法。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph> class.</source>
          <target state="translated">這個範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.HostSecurityManager&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
          <source>The evidence set used to evaluate policy.</source>
          <target state="translated">用來評估原則的辨識項集合。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
          <source>Determines what permissions to grant to code based on the specified evidence.</source>
          <target state="translated">根據指定的辨識項，判斷授與程式碼的權限。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
          <source>The permission set that can be granted by the security system.</source>
          <target state="translated">可由安全性系統授與的使用權限集合。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
          <source>This method invokes the security policy engine, providing it with the specified evidence.</source>
          <target state="translated">這個方法會叫用的安全性原則引擎，提供指定的辨識項。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
          <source>The result is determined by the security policy.</source>
          <target state="translated">安全性原則會決定結果。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
          <source><ph id="ph1">&lt;paramref name="evidence" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="evidence" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>