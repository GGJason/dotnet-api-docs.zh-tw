<Type Name="SecureString" FullName="System.Security.SecureString">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9fda23bb9367acfaae27d1e2a79059f8d711cad1" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52739561" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecureString : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SecureString extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecureString" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecureString&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureString sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SecureString = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.SecureString</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a3d1b-101">代表應該將文字保密，例如於不再使用時將它從電腦記憶體刪除。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-101">Represents text that should be kept confidential, such as by deleting it from computer memory when no longer needed.</span></span> <span data-ttu-id="a3d1b-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
>  <span data-ttu-id="a3d1b-103">我們不建議您改用`SecureString`開發新的類別。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-103">We don't recommend that you use the `SecureString` class for new development.</span></span> <span data-ttu-id="a3d1b-104">如需詳細資訊，請參閱 <<c0> [ 不應使用 SecureString](https://github.com/dotnet/platform-compat/blob/master/docs/DE0001.md) GitHub 上。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-104">For more information, see [SecureString shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0001.md) on GitHub.</span></span>

 <span data-ttu-id="a3d1b-105"><xref:System.Security.SecureString> 是字串類型，提供一層安全性。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-105"><xref:System.Security.SecureString> is a string type that provides a measure of security.</span></span> <span data-ttu-id="a3d1b-106">它會試著避免潛在的敏感的字串儲存在以純文字格式的程序記憶體。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-106">It tries to avoid storing potentially sensitive strings in process memory as plain text.</span></span>  <span data-ttu-id="a3d1b-107">(如需限制，不過，請參閱[安全是 SecureString？](#HowSecure)一節。)執行個體的值<xref:System.Security.SecureString>自動保護使用初始化的執行個體時，或修改值時，基礎的平台所支援的機制。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-107">(For limitations, however, see the [How secure is SecureString?](#HowSecure) section.) The value of an instance of <xref:System.Security.SecureString> is automatically protected using a mechanism supported by the underlying platform when the instance is initialized or when the value is modified.</span></span> <span data-ttu-id="a3d1b-108">您的應用程式可以呈現執行個體的不可變，並避免其他修改叫用<xref:System.Security.SecureString.MakeReadOnly%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-108">Your application can render the instance immutable and prevent further modification by invoking the <xref:System.Security.SecureString.MakeReadOnly%2A> method.</span></span>  
  
 <span data-ttu-id="a3d1b-109">最大長度<xref:System.Security.SecureString>執行個體為 65,536 個字元。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-109">The maximum length of a <xref:System.Security.SecureString> instance is 65,536 characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a3d1b-110">此類型會實作<xref:System.IDisposable>介面。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-110">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="a3d1b-111">當您完成使用型別的執行個體時，您應該處置它直接或間接。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-111">When you have finished using an instance of the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="a3d1b-112">若要直接處置型別，呼叫其<xref:System.IDisposable.Dispose%2A>方法中的`try` / `catch`區塊。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-112">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="a3d1b-113">若要處置它間接，使用的語言建構這類`using`（在 C# 中) 或`Using`（在 Visual Basic)。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-113">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="a3d1b-114">如需詳細資訊，請參閱 「 使用物件，實作 IDisposable 」 一節<xref:System.IDisposable>介面 > 主題。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-114">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="a3d1b-115"><xref:System.Security.SecureString>類別和其成員都看不到 com。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-115">The <xref:System.Security.SecureString> class and its members are not visible to COM.</span></span> <span data-ttu-id="a3d1b-116">如需詳細資訊，請參閱<xref:System.Runtime.InteropServices.ComVisibleAttribute>。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-116">For more information, see <xref:System.Runtime.InteropServices.ComVisibleAttribute>.</span></span>  
  
 <span data-ttu-id="a3d1b-117">本節內容：</span><span class="sxs-lookup"><span data-stu-id="a3d1b-117">In this section:</span></span>  
  
 <span data-ttu-id="a3d1b-118">[Vs 的字串。SecureString](#vsString) </span><span class="sxs-lookup"><span data-stu-id="a3d1b-118">[String vs. SecureString](#vsString) </span></span>  
 <span data-ttu-id="a3d1b-119">[SecureString 作業](#Ops) </span><span class="sxs-lookup"><span data-stu-id="a3d1b-119">[SecureString operations](#Ops) </span></span>  
 <span data-ttu-id="a3d1b-120">[SecureString 和 interop](#interop) </span><span class="sxs-lookup"><span data-stu-id="a3d1b-120">[SecureString and interop](#interop) </span></span>  
 [<span data-ttu-id="a3d1b-121">如何安全是 SecureString？</span><span class="sxs-lookup"><span data-stu-id="a3d1b-121">How secure is  SecureString?</span></span>](#HowSecure)  
  
<a name="vsString"></a>   
## <a name="string-versus-securestring"></a><span data-ttu-id="a3d1b-122">與 SecureString 的字串</span><span class="sxs-lookup"><span data-stu-id="a3d1b-122">String versus SecureString</span></span>  
 <span data-ttu-id="a3d1b-123">執行個體<xref:System.String?displayProperty=nameWithType>類別會是不變，而且不再需要時，無法以程式設計方式排定進行記憶體回收; 亦即，執行個體是唯讀後建立，並不可能預測何時可以在執行個體從電腦記憶體刪除。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-123">An instance of the <xref:System.String?displayProperty=nameWithType> class is both immutable and, when no longer needed, cannot be programmatically scheduled for garbage collection; that is, the instance is read-only after it is created, and it is not possible to predict when the instance will be deleted from computer memory.</span></span> <span data-ttu-id="a3d1b-124">因為<xref:System.String?displayProperty=nameWithType>執行個體是固定不變，看似會修改現有的執行個體的作業實際上會建立一份它來操作。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-124">Because <xref:System.String?displayProperty=nameWithType> instances are immutable, operations that appear to modify an existing instance  actually create a copy of it to manipulate.</span></span> <span data-ttu-id="a3d1b-125">因此，如果<xref:System.String>物件包含機密資訊，例如密碼、 信用卡號碼或個人資料，會有的風險，因為您的應用程式無法從電腦記憶體中刪除資料之後，可能會洩漏資訊.</span><span class="sxs-lookup"><span data-stu-id="a3d1b-125">Consequently, if a <xref:System.String> object contains sensitive information such as a password, credit card number, or personal data, there is a risk the information could be revealed after it is used because your application cannot delete the data from computer memory.</span></span>  
  
 <span data-ttu-id="a3d1b-126">A<xref:System.Security.SecureString>物件是類似於<xref:System.String>物件，它也具有一個文字值。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-126">A <xref:System.Security.SecureString> object is similar to a <xref:System.String> object in that it has a text value.</span></span> <span data-ttu-id="a3d1b-127">不過，值<xref:System.Security.SecureString>物件在記憶體中 pin，可能會使用保護機制，例如可以修改基礎作業系統，提供的加密，直到您的應用程式會將其標示為唯讀的而且可以從電腦記憶體刪除以您的應用程式呼叫<xref:System.Security.SecureString.Dispose%2A>方法或.NET Framework 記憶體回收行程。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-127">However, the value of a <xref:System.Security.SecureString> object is pinned in memory, may use a protection mechanism, such as encryption, provided by the underlying operating system, can be modified until your application marks it as read-only, and can be deleted from computer memory either by your application calling the <xref:System.Security.SecureString.Dispose%2A> method  or by the .NET Framework garbage collector.</span></span>  
  
 <span data-ttu-id="a3d1b-128">如需限制的討論<xref:System.Security.SecureString>類別，請參閱[安全是 SecureString？](#HowSecure)一節。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-128">For a discussion of the limitations of the <xref:System.Security.SecureString> class, see the [How secure is  SecureString?](#HowSecure) section.</span></span>  
  
 [<span data-ttu-id="a3d1b-129">回到頁首</span><span class="sxs-lookup"><span data-stu-id="a3d1b-129">Back to top</span></span>](#top)  
  
<a name="Ops"></a>   
## <a name="securestring-operations"></a><span data-ttu-id="a3d1b-130">SecureString 作業</span><span class="sxs-lookup"><span data-stu-id="a3d1b-130">SecureString operations</span></span>  
 <span data-ttu-id="a3d1b-131"><xref:System.Security.SecureString>類別包含的成員，可讓您執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="a3d1b-131">The <xref:System.Security.SecureString> class includes members that allow you to do the following:</span></span>  
  
 <span data-ttu-id="a3d1b-132">具現化<xref:System.Security.SecureString>物件</span><span class="sxs-lookup"><span data-stu-id="a3d1b-132">Instantiate a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="a3d1b-133">您具現化<xref:System.Security.SecureString>藉由呼叫其無參數建構函式的物件。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-133">You instantiate a <xref:System.Security.SecureString> object by calling its parameterless constructor.</span></span>  
  
 <span data-ttu-id="a3d1b-134">新增字元<xref:System.Security.SecureString>物件</span><span class="sxs-lookup"><span data-stu-id="a3d1b-134">Add characters to a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="a3d1b-135">您可以新增單一字元，一次<xref:System.Security.SecureString>物件，藉由呼叫其<xref:System.Security.SecureString.AppendChar%2A>或<xref:System.Security.SecureString.InsertAt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-135">You can add a single character at a time to a <xref:System.Security.SecureString> object  by calling its <xref:System.Security.SecureString.AppendChar%2A> or <xref:System.Security.SecureString.InsertAt%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a3d1b-136">A<xref:System.Security.SecureString>物件應該永遠不會從建構<xref:System.String>，因為敏感性資料已是受限於記憶體持續性的後果的不可變<xref:System.String>類別。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-136">A <xref:System.Security.SecureString> object should never be constructed from a <xref:System.String>, because the sensitive data is already subject to the memory persistence consequences of the immutable <xref:System.String> class.</span></span> <span data-ttu-id="a3d1b-137">若要建構，最好<xref:System.Security.SecureString>物件是從字元-一次未受管理的來源，例如<xref:System.Console.ReadKey%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-137">The best way to construct a <xref:System.Security.SecureString> object is from a character-at-a-time unmanaged source, such as the <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a3d1b-138">移除字元<xref:System.Security.SecureString>物件</span><span class="sxs-lookup"><span data-stu-id="a3d1b-138">Remove characters from a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="a3d1b-139">您可以藉由呼叫來取代個別字元<xref:System.Security.SecureString.SetAt%2A>方法，移除個別字元，藉由呼叫<xref:System.Security.SecureString.RemoveAt%2A>方法或移除所有字元從<xref:System.Security.SecureString>藉由呼叫的執行個體<xref:System.Security.SecureString.Clear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-139">You can replace an individual character by calling the <xref:System.Security.SecureString.SetAt%2A> method, remove an individual character by calling the <xref:System.Security.SecureString.RemoveAt%2A> method, or remove all characters from the <xref:System.Security.SecureString> instance by calling the  <xref:System.Security.SecureString.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="a3d1b-140">請<xref:System.Security.SecureString>唯讀狀態的物件</span><span class="sxs-lookup"><span data-stu-id="a3d1b-140">Make the <xref:System.Security.SecureString> object read-only</span></span>  
 <span data-ttu-id="a3d1b-141">一旦您已定義的字串，<xref:System.Security.SecureString>物件表示，則您呼叫其<xref:System.Security.SecureString.MakeReadOnly%2A>以唯讀模式，讓字串的方法。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-141">Once you have defined the string that the <xref:System.Security.SecureString> object represents, you call its  <xref:System.Security.SecureString.MakeReadOnly%2A> method to make the string read-only.</span></span>  
  
 <span data-ttu-id="a3d1b-142">深入了解<xref:System.Security.SecureString>物件</span><span class="sxs-lookup"><span data-stu-id="a3d1b-142">Get information about the <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="a3d1b-143"><xref:System.Security.SecureString>類別具有提供字串的相關資訊的只有兩個成員： 其<xref:System.Security.SecureString.Length%2A>屬性，指出字串; 中的 UTF16 編碼字碼單位數和<xref:System.Security.SecureString.IsReadOnly%2A>，方法，指出執行個體唯讀的。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-143">The <xref:System.Security.SecureString> class has only two members that provide information about the string: its <xref:System.Security.SecureString.Length%2A> property, which indicates the number of UTF16-encoded code units in the string; and the <xref:System.Security.SecureString.IsReadOnly%2A>, method, which indicates whether the instance is read-only.</span></span>  
  
 <span data-ttu-id="a3d1b-144">釋出配置給記憶體<xref:System.Security.SecureString>執行個體</span><span class="sxs-lookup"><span data-stu-id="a3d1b-144">Release the memory allocated to the <xref:System.Security.SecureString> instance</span></span>  
 <span data-ttu-id="a3d1b-145">因為<xref:System.Security.SecureString>會實作<xref:System.IDisposable>介面，您藉由呼叫釋放其記憶體<xref:System.Security.SecureString.Dispose%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-145">Because <xref:System.Security.SecureString> implements the <xref:System.IDisposable> interface, you release its memory by calling the <xref:System.Security.SecureString.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="a3d1b-146"><xref:System.Security.SecureString>類別沒有任何成員，檢查、 比較，或將值轉換成<xref:System.Security.SecureString>。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-146">The <xref:System.Security.SecureString> class has no members that inspect, compare, or convert the value of a <xref:System.Security.SecureString>.</span></span> <span data-ttu-id="a3d1b-147">這類成員不存在，有助於防止意外或惡意公開的執行個體的值。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-147">The absence of such members helps protect the value of the instance from accidental or malicious exposure.</span></span> <span data-ttu-id="a3d1b-148">使用適當的成員<xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType>類別，例如<xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A>方法，來操作的值<xref:System.Security.SecureString>物件。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-148">Use appropriate members of the <xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType> class, such as the <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> method, to manipulate the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 <span data-ttu-id="a3d1b-149">通常會使用.NET Framework 類別庫<xref:System.Security.SecureString>中透過下列方式執行個體：</span><span class="sxs-lookup"><span data-stu-id="a3d1b-149">The .NET Framework Class Library commonly uses <xref:System.Security.SecureString> instances in the following ways:</span></span>  
  
-   <span data-ttu-id="a3d1b-150">使用提供的密碼資訊至處理序<xref:System.Diagnostics.ProcessStartInfo>結構，或藉由呼叫的多載<xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType>具有類型參數的方法<xref:System.Security.SecureString>。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-150">To provide password information to a process by using the <xref:System.Diagnostics.ProcessStartInfo> structure or by calling an overload of the <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType> method that has a parameter of type <xref:System.Security.SecureString>.</span></span>  
  
-   <span data-ttu-id="a3d1b-151">藉由呼叫提供網路密碼資訊<xref:System.Net.NetworkCredential>類別建構函式具有類型的參數<xref:System.Security.SecureString>或使用<xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-151">To provide network password information by calling a <xref:System.Net.NetworkCredential> class constructor that has a parameter of type <xref:System.Security.SecureString> or by using the <xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="a3d1b-152">藉由呼叫提供 SQL Server 驗證的密碼資訊<xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType>建構函式，或擷取的值<xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-152">To provide password information for SQL Server Authentication by calling the <xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType> constructor or retrieving the value of the <xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="a3d1b-153">若要將字串傳遞至 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-153">To pass a string to unmanaged code.</span></span> <span data-ttu-id="a3d1b-154">如需詳細資訊，請參閱 < [SecureString 和 interop](#interop)一節。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-154">For more information, see the [SecureString and interop](#interop) section.</span></span>  
  
 [<span data-ttu-id="a3d1b-155">回到頁首</span><span class="sxs-lookup"><span data-stu-id="a3d1b-155">Back to top</span></span>](#top)  
  
<a name="interop"></a>   
## <a name="securestring-and-interop"></a><span data-ttu-id="a3d1b-156">SecureString 和 interop</span><span class="sxs-lookup"><span data-stu-id="a3d1b-156">SecureString and interop</span></span>  
 <span data-ttu-id="a3d1b-157">因為作業系統不直接支援<xref:System.Security.SecureString>，您必須將值轉換成<xref:System.Security.SecureString>成必要的字串類型，再傳遞字串給原生方法的物件。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-157">Because the operating system does not  directly support <xref:System.Security.SecureString>, you must convert the value of the <xref:System.Security.SecureString> object to the required string type before passing the string to a native method.</span></span>  <span data-ttu-id="a3d1b-158"><xref:System.Runtime.InteropServices.Marshal>類別有五種執行這項操作的方法：</span><span class="sxs-lookup"><span data-stu-id="a3d1b-158">The <xref:System.Runtime.InteropServices.Marshal> class has five methods that do this:</span></span>  
  
-   <span data-ttu-id="a3d1b-159"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>將<xref:System.Security.SecureString>字串到 COM 所辨識的二進位字串 (BSTR) 的值</span><span class="sxs-lookup"><span data-stu-id="a3d1b-159"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>, which converts the <xref:System.Security.SecureString> string value to a binary string (BSTR) recognized by COM.</span></span>  
  
-   <span data-ttu-id="a3d1b-160"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType> 並<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>，複製<xref:System.Security.SecureString>字串至 unmanaged 記憶體中的 ANSI 字串值。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-160"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>, which copy the <xref:System.Security.SecureString> string value to an ANSI string in unmanaged memory.</span></span>  
  
-   <span data-ttu-id="a3d1b-161"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType> 並<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>，複製<xref:System.Security.SecureString>字串至 unmanaged 記憶體中的 Unicode 字串的值。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-161"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>, which copy the <xref:System.Security.SecureString> string value to a Unicode string in unmanaged memory.</span></span>  
  
 <span data-ttu-id="a3d1b-162">每一種方法是在 unmanaged 記憶體中建立純文字字串。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-162">Each of these methods creates a clear-text string in unmanaged memory.</span></span> <span data-ttu-id="a3d1b-163">它是會全面清除並釋放該記憶體，只要它不再需要開發人員的責任。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-163">It is the responsibility of the developer to zero out and free that memory as soon as it is no longer needed.</span></span> <span data-ttu-id="a3d1b-164">每個字串轉換和記憶體配置方法都有對應的方法，將會全面清除並釋放配置的記憶體：</span><span class="sxs-lookup"><span data-stu-id="a3d1b-164">Each of the string conversion and memory allocation methods has a corresponding method to zero out and free the allocated memory:</span></span>  
  
|<span data-ttu-id="a3d1b-165">配置和轉換方法</span><span class="sxs-lookup"><span data-stu-id="a3d1b-165">Allocation and conversion method</span></span>|<span data-ttu-id="a3d1b-166">零和 free 方法</span><span class="sxs-lookup"><span data-stu-id="a3d1b-166">Zero and free method</span></span>|  
|--------------------------------------|--------------------------|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A?displayProperty=nameWithType>|  
  
 [<span data-ttu-id="a3d1b-167">回到頁首</span><span class="sxs-lookup"><span data-stu-id="a3d1b-167">Back to top</span></span>](#top)  
  
<a name="HowSecure"></a>   
## <a name="how-secure-is-securestring"></a><span data-ttu-id="a3d1b-168">如何安全是 SecureString？</span><span class="sxs-lookup"><span data-stu-id="a3d1b-168">How secure is SecureString?</span></span>  
 <span data-ttu-id="a3d1b-169">正常運作，在建立時<xref:System.Security.SecureString>執行個體提供更多的資料保護<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-169">When created properly, a <xref:System.Security.SecureString> instance provides more data protection than a <xref:System.String>.</span></span> <span data-ttu-id="a3d1b-170">當來源的字元-一次，建立字串<xref:System.String>在記憶體中，會建立多個中繼，而<xref:System.Security.SecureString>建立只是單一執行個體。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-170">When creating a string from a character-at-a-time source, <xref:System.String> creates multiple intermediate in memory, whereas  <xref:System.Security.SecureString> creates just a single instance.</span></span>  <span data-ttu-id="a3d1b-171">記憶體回收<xref:System.String>物件是不具決定性。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-171">Garbage collection of <xref:System.String> objects  is non-deterministic.</span></span> <span data-ttu-id="a3d1b-172">此外，因為其記憶體未釘選，記憶體回收行程會製作額外複本<xref:System.String>值時移動和壓縮記憶體。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-172">In addition, because its memory is not pinned, the garbage collector will make additional copies of <xref:System.String> values when moving and compacting memory.</span></span> <span data-ttu-id="a3d1b-173">相反地，若要配置的記憶體<xref:System.Security.SecureString>物件已釘選，，而且可以釋放該記憶體，藉由呼叫<xref:System.Security.SecureString.Dispose%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-173">In contrast, the memory allocated to a <xref:System.Security.SecureString> object is pinned,  and that memory can be freed by calling the <xref:System.Security.SecureString.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="a3d1b-174">雖然資料儲存在<xref:System.Security.SecureString>執行個體是儲存在資料比更安全<xref:System.String>執行個體，有安全上的諸多限制<xref:System.Security.SecureString>執行個體。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-174">Although data stored in a <xref:System.Security.SecureString> instance is more secure than data stored in a <xref:System.String> instance, there are significant limitations on how secure a <xref:System.Security.SecureString> instance is.</span></span> <span data-ttu-id="a3d1b-175">它們包括：</span><span class="sxs-lookup"><span data-stu-id="a3d1b-175">These include:</span></span>  
  
 <span data-ttu-id="a3d1b-176">Platform</span><span class="sxs-lookup"><span data-stu-id="a3d1b-176">Platform</span></span>  
 <span data-ttu-id="a3d1b-177">在 Windows 作業系統的內容上<xref:System.Security.SecureString>加密執行個體的內部的字元陣列。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-177">On the Windows operating system, the contents of a <xref:System.Security.SecureString> instance's internal character array are encrypted.</span></span> <span data-ttu-id="a3d1b-178">不過，是否因為遺漏 Api 或金鑰管理問題，加密並不適用於所有平台。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-178">However, whether because of missing APIs or key management issues,  encryption is not available on all platforms.</span></span> <span data-ttu-id="a3d1b-179">此平台相依性，因為<xref:System.Security.SecureString>不會加密在非 Windows 平台上的內部儲存體。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-179">Because of this platform dependency, <xref:System.Security.SecureString> does not encrypt the internal storage on non-Windows platform.</span></span> <span data-ttu-id="a3d1b-180">在這些平台上使用其他技術來提供額外的保護。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-180">Other techniques are used on those platforms to provide additional protection.</span></span>
  
 <span data-ttu-id="a3d1b-181">持續期間</span><span class="sxs-lookup"><span data-stu-id="a3d1b-181">Duration</span></span>  
 <span data-ttu-id="a3d1b-182">即使<xref:System.Security.SecureString>實作可利用加密、 純文字指派給<xref:System.Security.SecureString>執行個體可能會公開在不同時間：</span><span class="sxs-lookup"><span data-stu-id="a3d1b-182">Even if the <xref:System.Security.SecureString> implementation is able to take advantage of encryption, the plain text assigned to the <xref:System.Security.SecureString> instance may be exposed at various times:</span></span>  
  
-   <span data-ttu-id="a3d1b-183">因為 Windows 不會提供作業系統層級的安全字串實作，.NET Framework 仍然會有將轉換成其純文字格式表示的安全字串值，才能使用它。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-183">Because Windows doesn't offer a secure string implementation at the operating system level, the .NET Framework still has to convert the secure string value to its plain text representation in order to use it.</span></span>  
  
-   <span data-ttu-id="a3d1b-184">每當安全字串的值修改方法這類<xref:System.Security.SecureString.AppendChar%2A>或<xref:System.Security.SecureString.RemoveAt%2A>，它必須解密 （也就，轉換回純文字），修改，並再加密一次。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-184">Whenever the value of the secure string is modified by methods such as <xref:System.Security.SecureString.AppendChar%2A> or <xref:System.Security.SecureString.RemoveAt%2A>, it must be decrypted (that is, converted back to plain text), modified, and then encrypted again.</span></span>  
  
-   <span data-ttu-id="a3d1b-185">如果使用的 interop 呼叫的安全字串時，它必須轉換成 ANSI 字串、 Unicode 字串或二進位字串 (BSTR)。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-185">If the secure string is used in an interop call, it must be converted to an ANSI string, a Unicode string, or a binary string (BSTR).</span></span> <span data-ttu-id="a3d1b-186">如需詳細資訊，請參閱 < [SecureString 和 interop](#interop)一節。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-186">For more information, see the [SecureString and interop](#interop) section.</span></span>  
  
 <span data-ttu-id="a3d1b-187">其中的時間間隔<xref:System.Security.SecureString>公開執行個體的值只是已縮短相為<xref:System.String>類別。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-187">The time interval for which the <xref:System.Security.SecureString> instance's value is exposed  is merely shortened in comparison to the <xref:System.String> class.</span></span>  
  
 <span data-ttu-id="a3d1b-188">與使用方式的儲存體</span><span class="sxs-lookup"><span data-stu-id="a3d1b-188">Storage versus usage</span></span>  
 <span data-ttu-id="a3d1b-189">更廣泛地<xref:System.Security.SecureString>類別定義應該受保護或保密的字串值的儲存體機制。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-189">More generally, the <xref:System.Security.SecureString> class defines a storage mechanism for string values that should be protected or kept confidential.</span></span> <span data-ttu-id="a3d1b-190">不過，.NET Framework 本身以外沒有使用量機制支援<xref:System.Security.SecureString>。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-190">However, outside of the .NET Framework itself, no usage mechanism supports <xref:System.Security.SecureString>.</span></span> <span data-ttu-id="a3d1b-191">這表示安全字串，必須轉換成可用的格式 （通常是純文字形式），其目標，可以辨識和解密和轉換必須存在於使用者空間。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-191">This means that the secure string must be converted to a usable form (typically a clear text form) that can be recognized by its target, and     that decryption and conversion must occur in user space.</span></span>  
  
 <span data-ttu-id="a3d1b-192">整體而言，<xref:System.Security.SecureString>比更安全<xref:System.String>因為它會限制公開機密的字串資料。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-192">Overall, <xref:System.Security.SecureString> is more secure than <xref:System.String> because it limits the exposure of sensitive string data.</span></span> <span data-ttu-id="a3d1b-193">不過，這些字串可能仍會暴露任何程序或可存取未經處理的記憶體，例如惡意處理序主機電腦、 處理序傾印或使用者可檢視的分頁檔上執行的作業。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-193">However, those strings may still be exposed to any process or operation that has access to raw memory, such as a malicious process running on the host computer, a process dump, or a user-viewable swap file.</span></span> <span data-ttu-id="a3d1b-194">而不是使用<xref:System.Security.SecureString>若要保護的密碼，建議的替代做法是使用不透明的控制代碼儲存在外部處理序的認證。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-194">Instead of using <xref:System.Security.SecureString> to protect passwords, the recommended alternative is to use an opaque handle to credentials that are stored outside of the process.</span></span>  
  
 [<span data-ttu-id="a3d1b-195">回到頁首</span><span class="sxs-lookup"><span data-stu-id="a3d1b-195">Back to top</span></span>](#top)  
  
   
  
## Examples  
 <span data-ttu-id="a3d1b-196">下列範例示範如何使用<xref:System.Security.SecureString>來保護使用者的密碼作為認證，以開始新的處理序。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-196">The following example demonstrates how to use a <xref:System.Security.SecureString> to secure a user's password for use as a credential to start a new process.</span></span>  
  
 [!code-csharp[System.Security.SecureString.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/ctor4.cs#4)]
 [!code-vb[System.Security.SecureString.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/ctor4.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />
    <altmember cref="T:System.Runtime.InteropServices.Marshal" />
    <altmember cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" />
    <altmember cref="T:System.IDisposable" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3d1b-197">初始化 <see cref="T:System.Security.SecureString" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-197">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureString();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3d1b-198">初始化 <see cref="T:System.Security.SecureString" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-198">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a3d1b-199">下列範例會使用預設值 （或無參數） 建構函式來具現化新<xref:System.Security.SecureString>物件。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-199">The following example uses the default (or parameterless) constructor to instantiate a new <xref:System.Security.SecureString> object.</span></span> <span data-ttu-id="a3d1b-200">然後它會呼叫<xref:System.Security.SecureString.AppendChar%2A>對其新增為字元陣列的方法。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-200">It then calls the <xref:System.Security.SecureString.AppendChar%2A> method to add an array of characters to it.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cpp/Ctor2.cpp#2)]
 [!code-csharp[System.Security.SecureString.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/Ctor2.cs#2)]
 [!code-vb[System.Security.SecureString.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/ctor2.vb#2)]  
  
 <span data-ttu-id="a3d1b-201">下列範例會建立<xref:System.Security.SecureString>物件的值從<xref:System.String>物件。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-201">The following example creates a <xref:System.Security.SecureString> object from the value of a <xref:System.String> object.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cpp/Ctor3.cpp#3)]
 [!code-csharp[System.Security.SecureString.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/Ctor3.cs#3)]
 [!code-vb[System.Security.SecureString.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/Ctor3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a3d1b-202">保護或解除保護這個執行個體的值時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-202">An error occurred while protecting or unprotecting the value of this instance.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a3d1b-203">這個平台上不支援這項作業。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-203">This operation is not supported on this platform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureString (char* value, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char* value, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureString(char* value, int length);" />
      <MemberSignature Language="F#" Value="new System.Security.SecureString : nativeptr&lt;char&gt; * int -&gt; System.Security.SecureString" Usage="new System.Security.SecureString (value, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Char*" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a3d1b-204"><see cref="T:System.Char" /> 物件陣列的指標。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-204">A pointer to an array of <see cref="T:System.Char" /> objects.</span></span></param>
        <param name="length"><span data-ttu-id="a3d1b-205">要包含在新執行個體中之 <paramref name="value" /> 的項目數。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-205">The number of elements of <paramref name="value" /> to include in the new instance.</span></span></param>
        <summary><span data-ttu-id="a3d1b-206">從 <see cref="T:System.Char" /> 物件的子陣列，初始化 <see cref="T:System.Security.SecureString" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-206">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class from a subarray of <see cref="T:System.Char" /> objects.</span></span>  
  
<span data-ttu-id="a3d1b-207">這個建構函式不符合 CLS 標準。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-207">This constructor is not CLS-compliant.</span></span> <span data-ttu-id="a3d1b-208">符合 CLS 標準的替代項目為 <see cref="M:System.Security.SecureString.#ctor" />。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-208">The CLS-compliant alternative is <see cref="M:System.Security.SecureString.#ctor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d1b-209">這個建構函式初始化的新<xref:System.Security.SecureString>中的字元數的物件`value`所指定`length`; 執行個體的值會加密。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-209">This constructor initializes the new <xref:System.Security.SecureString> object to the number of characters in `value` specified by `length`; the value of the instance is then encrypted.</span></span>  
  
 <span data-ttu-id="a3d1b-210">在 C# 中，這個建構函式定義只能在不安全的程式碼的內容中。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-210">In C#, this constructor is defined only in the context of unsafe code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3d1b-211">下列範例會具現化新<xref:System.Security.SecureString>藉由將其建構函式指標傳遞到字元陣列的物件。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-211">The following example instantiates a new <xref:System.Security.SecureString> object by passing its constructor a pointer to a character array.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securestring.ctor2/cpp/ctor1.cpp#1)]
 [!code-csharp[System.Security.SecureString.Ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securestring.ctor2/cs/ctor1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3d1b-212"><paramref name="value" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-212"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a3d1b-213"><paramref name="length" /> 小於零或大於 65,536。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-213"><paramref name="length" /> is less than zero or greater than 65,536.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a3d1b-214">保護或解除保護這個安全字串的值時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-214">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a3d1b-215">這個平台上不支援這項作業。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-215">This operation is not supported on this platform.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="a3d1b-216">需要完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-216">requires full trust for the immediate caller.</span></span> <span data-ttu-id="a3d1b-217">此成員不能由部分信任或不透明的程式碼。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-217">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AppendChar">
      <MemberSignature Language="C#" Value="public void AppendChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.AppendChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChar (c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendChar(char c);" />
      <MemberSignature Language="F#" Value="member this.AppendChar : char -&gt; unit" Usage="secureString.AppendChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="a3d1b-218">附加至這個安全字串的字元。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-218">A character to append to this secure string.</span></span></param>
        <summary><span data-ttu-id="a3d1b-219">將字元附加至目前安全字串的結尾。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-219">Appends a character to the end of the current secure string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d1b-220">如果實作會使用的保護機制，例如加密、 如果有的話，這個安全字串的值不受保護的;`c`附加; 然後將安全字串的新值並在重新保護。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-220">If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; `c` is appended; then the new value of the secure string is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3d1b-221">下列範例示範如何<xref:System.Security.SecureString.AppendChar%2A>， <xref:System.Security.SecureString.InsertAt%2A>， <xref:System.Security.SecureString.RemoveAt%2A>， <xref:System.Security.SecureString.SetAt%2A>，並<xref:System.Security.SecureString.Clear%2A>方法會影響值<xref:System.Security.SecureString>物件。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-221">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 <span data-ttu-id="a3d1b-222">下列範例示範如何<xref:System.Security.SecureString.AppendChar%2A>和<xref:System.Security.SecureString.RemoveAt%2A>方法可用來收集密碼中的字元。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-222">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a3d1b-223">這個安全字串已經過處置。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-223">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a3d1b-224">這個安全字串是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-224">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a3d1b-225">執行這項作業會使這個安全字串的長度大於 65,536 個字元。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-225">Performing this operation would make the length of this secure string greater than 65,536 characters.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a3d1b-226">保護或解除保護這個安全字串的值時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-226">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="secureString.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3d1b-227">刪除目前安全字串的值。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-227">Deletes the value of the current secure string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d1b-228">電腦記憶體，其中包含這個安全字串的值為 0，則這個安全字串的值的長度設定為零。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-228">The computer memory that contains the value of this secure string is zeroed, then the length of the value of this secure string is set to zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3d1b-229">下列範例示範如何<xref:System.Security.SecureString.AppendChar%2A>， <xref:System.Security.SecureString.InsertAt%2A>， <xref:System.Security.SecureString.RemoveAt%2A>， <xref:System.Security.SecureString.SetAt%2A>，並<xref:System.Security.SecureString.Clear%2A>方法會影響值<xref:System.Security.SecureString>物件。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-229">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a3d1b-230">這個安全字串已經過處置。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-230">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a3d1b-231">這個安全字串是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-231">This secure string is read-only.</span></span></exception>
        <altmember cref="P:System.Security.SecureString.Length" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecureString Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecureString Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecureString ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Security.SecureString" Usage="secureString.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3d1b-232">建立目前安全字串的複本。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-232">Creates a copy of the current secure string.</span></span></summary>
        <returns><span data-ttu-id="a3d1b-233">這個安全字串的複本。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-233">A duplicate of this secure string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d1b-234">如果執行個體<xref:System.Security.SecureString>是標示為唯讀，該執行個體的複本將不處於唯讀模式。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-234">If an instance of a <xref:System.Security.SecureString> is marked read-only, the copy of that instance will not be read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a3d1b-235">這個安全字串已經過處置。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-235">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a3d1b-236">保護或解除保護這個安全字串的值時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-236">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
        <altmember cref="M:System.Security.SecureString.MakeReadOnly" />
        <altmember cref="M:System.Security.SecureString.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="secureString.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3d1b-237">釋放由 <see cref="T:System.Security.SecureString" /> 物件使用的所有資源。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-237">Releases all resources used by the current <see cref="T:System.Security.SecureString" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d1b-238"><xref:System.Security.SecureString.Dispose%2A>方法會寫入至配置的記憶體，其中包含這個值的二進位零<xref:System.Security.SecureString>物件，然後釋放配置的記憶體。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-238">The <xref:System.Security.SecureString.Dispose%2A> method writes binary zeroes to the allocated memory that contains the value of this <xref:System.Security.SecureString> object, then frees the allocated memory.</span></span>  
  
 <span data-ttu-id="a3d1b-239">如需詳細資訊，請參閱 <<c0> [ 回收](~/docs/standard/garbage-collection/index.md)。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-239">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public void InsertAt (int index, char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertAt(int32 index, char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAt (index As Integer, c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAt(int index, char c);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : int * char -&gt; unit" Usage="secureString.InsertAt (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a3d1b-240">插入參數 <paramref name="c" /> 的索引位置。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-240">The index position where parameter <paramref name="c" /> is inserted.</span></span></param>
        <param name="c"><span data-ttu-id="a3d1b-241">要插入的字元。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-241">The character to insert.</span></span></param>
        <summary><span data-ttu-id="a3d1b-242">將這個安全字串中的字元插入指定索引位置。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-242">Inserts a character in this secure string at the specified index position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d1b-243">索引以零為起始的;這個安全字串中的第一個字元位於索引位置為零。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-243">The index is zero-based; the first character in this secure string is at index position zero.</span></span>  
  
 <span data-ttu-id="a3d1b-244">如果實作會使用的保護機制，例如加密、 安全的字串，如果有的話，值不受保護的;`c`插入指定的索引位置，則新值並在重新保護。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-244">If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; `c` is inserted at the specified index position; then the new value is re-protected.</span></span> <span data-ttu-id="a3d1b-245"><xref:System.Security.SecureString.InsertAt%2A>方法會產生與相同的結果<xref:System.Security.SecureString.AppendChar%2A>方法，將安全字串的結尾插入字元，如果`index`參數<xref:System.Security.SecureString.InsertAt%2A>設為這個執行個體的長度。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-245">The <xref:System.Security.SecureString.InsertAt%2A> method yields the same results as the <xref:System.Security.SecureString.AppendChar%2A> method, which inserts a character at the end of a secure string, if the `index` parameter of <xref:System.Security.SecureString.InsertAt%2A> is set to the length of this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3d1b-246">下列範例示範如何<xref:System.Security.SecureString.AppendChar%2A>， <xref:System.Security.SecureString.InsertAt%2A>， <xref:System.Security.SecureString.RemoveAt%2A>， <xref:System.Security.SecureString.SetAt%2A>，並<xref:System.Security.SecureString.Clear%2A>方法會影響值<xref:System.Security.SecureString>物件。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-246">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a3d1b-247">這個安全字串已經過處置。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-247">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a3d1b-248">這個安全字串是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-248">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a3d1b-249"><paramref name="index" /> 小於零，或大於這個安全字串的長度。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-249"><paramref name="index" /> is less than zero, or greater than the length of this secure string.</span></span>  
  
<span data-ttu-id="a3d1b-250">-或-</span><span class="sxs-lookup"><span data-stu-id="a3d1b-250">-or-</span></span> 
<span data-ttu-id="a3d1b-251">執行這項作業會使這個安全字串的長度大於 65,536 個字元。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-251">Performing this operation would make the length of this secure string greater than 65,536 characters.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a3d1b-252">保護或解除保護這個安全字串的值時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-252">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function IsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsReadOnly();" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : unit -&gt; bool" Usage="secureString.IsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3d1b-253">指示這個安全字串是否標示為唯讀。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-253">Indicates whether this secure string is marked read-only.</span></span></summary>
        <returns><span data-ttu-id="a3d1b-254">如果這個安全字串標示為唯讀則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-254"><see langword="true" /> if this secure string is marked read-only; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d1b-255">執行個體後面<xref:System.Security.SecureString>標示為唯讀<xref:System.Security.SecureString.MakeReadOnly%2A>方法，任何嘗試修改的執行個體則會擲回值<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-255">After an instance of <xref:System.Security.SecureString> is marked read-only by the <xref:System.Security.SecureString.MakeReadOnly%2A> method, any attempt to modify the value of the instance throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="a3d1b-256">使用<xref:System.Security.SecureString.IsReadOnly%2A>方法來測試是否<xref:System.Security.SecureString>處於唯讀狀態，然後再嘗試加以修改。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-256">Use the <xref:System.Security.SecureString.IsReadOnly%2A> method to test whether a <xref:System.Security.SecureString> is read-only before attempting to modify it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a3d1b-257">這個安全字串已經過處置。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-257">This secure string has already been disposed.</span></span></exception>
        <altmember cref="M:System.Security.SecureString.MakeReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecureString.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Security.SecureString.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3d1b-258">取得目前安全字串中的字元數。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-258">Gets the number of characters in the current secure string.</span></span></summary>
        <value><span data-ttu-id="a3d1b-259">這個安全字串中 <see cref="T:System.Char" /> 物件的數目。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-259">The number of <see cref="T:System.Char" /> objects in this secure string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d1b-260"><xref:System.Security.SecureString.Length%2A>屬性傳回的數目<xref:System.Char>這個執行個體中的物件，不是 Unicode 字元的數目。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-260">The <xref:System.Security.SecureString.Length%2A> property returns the number of <xref:System.Char> objects in this instance, not the number of Unicode characters.</span></span> <span data-ttu-id="a3d1b-261">Unicode 字元可能會表示由多個<xref:System.Char>物件。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-261">A Unicode character might be represented by more than one <xref:System.Char> object.</span></span>  
  
 <span data-ttu-id="a3d1b-262">最大長度<xref:System.Security.SecureString>執行個體為 65,536 個字元。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-262">The maximum length of a <xref:System.Security.SecureString> instance is 65,536 characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a3d1b-263">這個安全字串已經過處置。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-263">This secure string has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.MakeReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeReadOnly();" />
      <MemberSignature Language="F#" Value="member this.MakeReadOnly : unit -&gt; unit" Usage="secureString.MakeReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3d1b-264">使這個安全字串的文字值成為唯讀。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-264">Makes the text value of this secure string read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d1b-265">初始化的執行個體的文字值<xref:System.Security.SecureString>類別<xref:System.Security.SecureString.%23ctor%2A>建構函式，並修改使用值<xref:System.Security.SecureString.Clear%2A>， <xref:System.Security.SecureString.RemoveAt%2A>， <xref:System.Security.SecureString.SetAt%2A>， <xref:System.Security.SecureString.InsertAt%2A>，和<xref:System.Security.SecureString.AppendChar%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-265">Initialize the text value of an instance of the <xref:System.Security.SecureString> class with the <xref:System.Security.SecureString.%23ctor%2A> constructors, and modify the value with the <xref:System.Security.SecureString.Clear%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, <xref:System.Security.SecureString.InsertAt%2A>, and <xref:System.Security.SecureString.AppendChar%2A> methods.</span></span>  
  
 <span data-ttu-id="a3d1b-266">您最終的修改之後，使用<xref:System.Security.SecureString.MakeReadOnly%2A>方法，讓執行個體的值不可變 （唯讀）。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-266">After you have made your final modifications, use the <xref:System.Security.SecureString.MakeReadOnly%2A> method to make the value of the instance immutable (read-only).</span></span> <span data-ttu-id="a3d1b-267">值標示為唯讀之後，任何進一步嘗試修改它會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-267">After the value is marked as read-only, any further attempt to modify it throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="a3d1b-268">叫用的效果<xref:System.Security.SecureString.MakeReadOnly%2A>這是永久性因為<xref:System.Security.SecureString>類別會提供任何方法來進行的安全字串可修改一次。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-268">The effect of invoking <xref:System.Security.SecureString.MakeReadOnly%2A> is permanent because the <xref:System.Security.SecureString> class provides no means to make the secure string modifiable again.</span></span> <span data-ttu-id="a3d1b-269">使用<xref:System.Security.SecureString.IsReadOnly%2A>方法來測試的執行個體是否<xref:System.Security.SecureString>處於唯讀狀態。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-269">Use the <xref:System.Security.SecureString.IsReadOnly%2A> method to test whether an instance of <xref:System.Security.SecureString> is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3d1b-270">下列範例示範如何<xref:System.Security.SecureString.AppendChar%2A>和<xref:System.Security.SecureString.RemoveAt%2A>方法可用來收集密碼中的字元。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-270">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span> <span data-ttu-id="a3d1b-271">收集密碼之後，它會變成唯讀狀態。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-271">After the password is collected, it is made read-only.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a3d1b-272">這個安全字串已經過處置。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-272">This secure string has already been disposed.</span></span></exception>
        <altmember cref="M:System.Security.SecureString.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="secureString.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a3d1b-273">這個安全字串中字元的索引位置。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-273">The index position of a character in this secure string.</span></span></param>
        <summary><span data-ttu-id="a3d1b-274">從這個安全字串移除位在指定索引位置的字元。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-274">Removes the character at the specified index position from this secure string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d1b-275">索引以零為起始的;這個執行個體中的第一個字元位於索引位置為零。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-275">The index is zero-based; the first character in this instance is at index position zero.</span></span>  
  
 <span data-ttu-id="a3d1b-276">如果實作會使用的保護機制，例如加密、 如果有的話，這個安全字串的值不受保護的;已移除指定的索引位置處的字元;則重新保護新的值。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-276">If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; the character at the specified index position is removed; then the new value is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3d1b-277">下列範例示範如何<xref:System.Security.SecureString.AppendChar%2A>， <xref:System.Security.SecureString.InsertAt%2A>， <xref:System.Security.SecureString.RemoveAt%2A>， <xref:System.Security.SecureString.SetAt%2A>，並<xref:System.Security.SecureString.Clear%2A>方法會影響值<xref:System.Security.SecureString>物件。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-277">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 <span data-ttu-id="a3d1b-278">下列範例示範如何<xref:System.Security.SecureString.AppendChar%2A>和<xref:System.Security.SecureString.RemoveAt%2A>方法可用來收集密碼中的字元。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-278">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a3d1b-279">這個安全字串已經過處置。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-279">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a3d1b-280">這個安全字串是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-280">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a3d1b-281"><paramref name="index" /> 小於零，或是大於或等於這個安全字串的長度。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-281"><paramref name="index" /> is less than zero, or greater than or equal to the length of this secure string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a3d1b-282">保護或解除保護這個安全字串的值時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-282">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAt">
      <MemberSignature Language="C#" Value="public void SetAt (int index, char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAt(int32 index, char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.SetAt(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAt (index As Integer, c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAt(int index, char c);" />
      <MemberSignature Language="F#" Value="member this.SetAt : int * char -&gt; unit" Usage="secureString.SetAt (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a3d1b-283">這個安全字串中現有字元的索引位置。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-283">The index position of an existing character in this secure string</span></span></param>
        <param name="c"><span data-ttu-id="a3d1b-284">取代現有字元的字元。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-284">A character that replaces the existing character.</span></span></param>
        <summary><span data-ttu-id="a3d1b-285">使用另一個字元，取代位在指定索引位置的現有字元。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-285">Replaces the existing character at the specified index position with another character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3d1b-286">索引以零為起始的;這個執行個體中的第一個字元位於索引位置為零。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-286">The index is zero-based; the first character in this instance is at index position zero.</span></span>  
  
 <span data-ttu-id="a3d1b-287">如果實作會使用的保護機制，例如加密、 安全的字串，如果有的話，值不受保護的;`c`指派給指定的索引位置，則新值並在重新保護。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-287">If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; `c` is assigned to the specified index position; then the new value is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3d1b-288">下列範例示範如何<xref:System.Security.SecureString.AppendChar%2A>， <xref:System.Security.SecureString.InsertAt%2A>， <xref:System.Security.SecureString.RemoveAt%2A>， <xref:System.Security.SecureString.SetAt%2A>，並<xref:System.Security.SecureString.Clear%2A>方法會影響值<xref:System.Security.SecureString>物件。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-288">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a3d1b-289">這個安全字串已經過處置。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-289">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a3d1b-290">這個安全字串是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-290">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a3d1b-291"><paramref name="index" /> 小於零，或是大於或等於這個安全字串的長度。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-291"><paramref name="index" /> is less than zero, or greater than or equal to the length of this secure string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a3d1b-292">保護或解除保護這個安全字串的值時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="a3d1b-292">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>