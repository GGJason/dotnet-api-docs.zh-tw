<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecurityState.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59b18ca92d9595b1878bca9db0b0a0effd82153c6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b18ca92d9595b1878bca9db0b0a0effd82153c6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.SecurityState">
          <source>Provides a base class for requesting the security status of an action from the <ph id="ph1">&lt;see cref="T:System.AppDomainManager" /&gt;</ph> object.</source>
          <target state="translated">提供基底類別，目前是要向 <ph id="ph1">&lt;see cref="T:System.AppDomainManager" /&gt;</ph> 物件要求動作的安全性狀態。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityState">
          <source>You must inherit from this class to provide a class that includes a property that specifies the security-sensitive action to be performed.</source>
          <target state="translated">您必須繼承自這個類別提供類別，其中包含此屬性，指定要執行安全性敏感動作。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityState">
          <source>The <ph id="ph1">&lt;xref:System.Security.SecurityState&gt;</ph> object that is instantiated from the derived class is passed to the <ph id="ph2">&lt;xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=nameWithType&gt;</ph> method to determine whether the host allows that action to be performed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecurityState&gt;</ph>具現化衍生類別中的物件會傳遞至<ph id="ph2">&lt;xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=nameWithType&gt;</ph>方法來判斷主機是否允許執行該動作。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityState">
          <source>The default implementation of the <ph id="ph1">&lt;xref:System.AppDomainManager.CheckSecuritySettings%2A&gt;</ph> method always returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">預設實作<ph id="ph1">&lt;xref:System.AppDomainManager.CheckSecuritySettings%2A&gt;</ph>方法一律會傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityState">
          <source>The method must be overridden to detect the actions that are allowed.</source>
          <target state="translated">必須覆寫方法，來偵測所允許的動作。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityState">
          <source>For example, if you want to access a Web camera in your library code, you would create a <ph id="ph1">`WebcamSecurityState`</ph> object and call the <ph id="ph2">&lt;xref:System.Security.SecurityState.EnsureState%2A&gt;</ph> method to determine whether the host allows Web camera access, as shown in the following example.</source>
          <target state="translated">例如，如果您想要存取網路攝影機程式庫程式碼中的，您會建立<ph id="ph1">`WebcamSecurityState`</ph>物件並呼叫<ph id="ph2">&lt;xref:System.Security.SecurityState.EnsureState%2A&gt;</ph>方法來判斷主機是否可讓 Web 相機的存取權，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityState">
          <source>(You can find the code for <ph id="ph1">`WebcamSecurityState`</ph> in the "Example" section.)</source>
          <target state="translated">(您可以找到的程式碼<ph id="ph1">`WebcamSecurityState`</ph>&lt; 範例 &gt; 一節。)</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityState">
          <source>To process the call the <ph id="ph1">&lt;xref:System.AppDomainManager&gt;</ph> must be made aware of <ph id="ph2">`WebcamSecurityState`</ph> through an override of the <ph id="ph3">&lt;xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=nameWithType&gt;</ph> method, as shown in the following example.</source>
          <target state="translated">若要處理呼叫<ph id="ph1">&lt;xref:System.AppDomainManager&gt;</ph>必須察覺的<ph id="ph2">`WebcamSecurityState`</ph>的覆寫透過<ph id="ph3">&lt;xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=nameWithType&gt;</ph>方法，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityState">
          <source>The following example shows how to override the <ph id="ph1">&lt;xref:System.Security.SecurityState&gt;</ph> class.</source>
          <target state="translated">下列範例示範如何覆寫<ph id="ph1">&lt;xref:System.Security.SecurityState&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityState">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityState">
          <source>This class cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個類別無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityState">
          <source>for full trust for inheritors.</source>
          <target state="translated">針對繼承者完全信任。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityState">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">這個類別無法被繼承，部分信任程式碼。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityState.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecurityState" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.SecurityState" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityState.#ctor">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityState.#ctor">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityState.EnsureState">
          <source>When overridden in a derived class, ensures that the state that is represented by <ph id="ph1">&lt;see cref="T:System.Security.SecurityState" /&gt;</ph> is available on the host.</source>
          <target state="translated">在衍生類別中覆寫時，確保可以在主機上使用由 <ph id="ph1">&lt;see cref="T:System.Security.SecurityState" /&gt;</ph> 表示的狀態。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityState.EnsureState">
          <source>The implementation of this method should be similar to the following example.</source>
          <target state="translated">這個方法的實作應該類似下列的範例。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityState.IsStateAvailable">
          <source>Gets a value that indicates whether the state for this implementation of the <ph id="ph1">&lt;see cref="T:System.Security.SecurityState" /&gt;</ph> class is available on the current host.</source>
          <target state="translated">取得值，指出 <ph id="ph1">&lt;see cref="T:System.Security.SecurityState" /&gt;</ph> 類別這個實作的狀態，在目前主機上是否可用。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityState.IsStateAvailable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the state is available; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果狀態為可用，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityState.IsStateAvailable">
          <source><ph id="ph1">&lt;xref:System.Security.SecurityState.IsStateAvailable%2A&gt;</ph> calls the <ph id="ph2">&lt;xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=nameWithType&gt;</ph> method to determine whether the state that is represented by this class is available on the host.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.SecurityState.IsStateAvailable%2A&gt;</ph> 呼叫<ph id="ph2">&lt;xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=nameWithType&gt;</ph>方法，以判斷是否在主機上使用這個類別所表示的狀態。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityState.IsStateAvailable">
          <source>See the <ph id="ph1">&lt;xref:System.Security.SecurityState&gt;</ph> class for an example implementation of the <ph id="ph2">&lt;xref:System.AppDomainManager.CheckSecuritySettings%2A&gt;</ph> method.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Security.SecurityState&gt;</ph>類別的實作範例<ph id="ph2">&lt;xref:System.AppDomainManager.CheckSecuritySettings%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityState.IsStateAvailable">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityState.IsStateAvailable">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>