<Type Name="SecureStringMarshal" FullName="System.Security.SecureStringMarshal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa404f34b52e186ed81c47a94d6441196fc531e1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30498842" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class SecureStringMarshal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SecureStringMarshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecureStringMarshal" />
  <TypeSignature Language="VB.NET" Value="Public Class SecureStringMarshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureStringMarshal abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Security.SecureString</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="de50a-101">提供配置 Unmanaged 記憶體和複製 Unmanaged 記憶體區塊的方法集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="de50a-101">Provides a collection of methods for allocating unmanaged memory and copying unmanaged memory blocks.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SecureStringToCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemAnsi(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="de50a-102">要複製的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-102">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de50a-103">將 Managed <see cref="T:System.Security.SecureString" /> 物件的內容複製到從 Unmanaged COM 工作配置器配置的記憶體區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-103">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de50a-104">Unmanaged 記憶體中複製 <paramref name="s" /> 參數的目的位址；如果提供 Null 物件，則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-104">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de50a-105"><xref:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi%2A>方法可用於自訂封送處理，或當混合 managed 和 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="de50a-105">The <xref:System.Security.SecureStringMarshal.SecureStringToCoTaskMemAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="de50a-106">因為這個方法配置 unmanaged 的記憶體所需的字串，一律以釋放記憶體呼叫<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>。</span><span class="sxs-lookup"><span data-stu-id="de50a-106">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>.</span></span> <span data-ttu-id="de50a-107">字串的字元複製為 ANSI 字元。</span><span class="sxs-lookup"><span data-stu-id="de50a-107">The characters of the string are copied as ANSI characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de50a-108">
            <paramref name="s" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-108">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de50a-109">目前的電腦未執行 Windows 2000 Service Pack 3 或更新版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-109">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de50a-110">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-110">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="de50a-111">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-111">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="de50a-112">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-112">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="de50a-113">這個方法是執行 Windows 2000 Service Pack 3 的電腦上才支援或更新版本。</span>
            <span class="sxs-lookup">
              <span data-stu-id="de50a-113">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToCoTaskMemUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemUnicode(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="de50a-114">要複製的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-114">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de50a-115">將 Managed <see cref="T:System.Security.SecureString" /> 物件的內容複製到從 Unmanaged COM 工作配置器配置的記憶體區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-115">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de50a-116">Unmanaged 記憶體中複製 <paramref name="s" /> 參數的目的位址；如果提供 Null 物件，則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-116">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de50a-117"><xref:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode%2A>方法可用於自訂封送處理，或當混合 managed 和 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="de50a-117">The <xref:System.Security.SecureStringMarshal.SecureStringToCoTaskMemUnicode%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="de50a-118">因為這個方法配置 unmanaged 的記憶體所需的字串，一律以釋放記憶體呼叫<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="de50a-118">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method.</span></span> <span data-ttu-id="de50a-119">字串的字元複製為 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="de50a-119">The characters of the string are copied as Unicode characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de50a-120">
            <paramref name="s" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-120">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de50a-121">目前的電腦未執行 Windows 2000 Service Pack 3 或更新版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-121">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de50a-122">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-122">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="de50a-123">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-123">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="de50a-124">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-124">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="de50a-125">這個方法是執行 Windows 2000 Service Pack 3 的電腦上才支援或更新版本。</span>
            <span class="sxs-lookup">
              <span data-stu-id="de50a-125">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocAnsi(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="de50a-126">要複製的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-126">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de50a-127">將 Managed <see cref="T:System.Security.SecureString" /> 的內容複製到 Unmanaged 記憶體中，並在它複製時轉換成 ANSI 格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-127">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> into unmanaged memory, converting into ANSI format as it copies.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de50a-128">Unmanaged 記憶體中複製 <paramref name="s" /> 參數的目標位址；如果提供 Null 物件，則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-128">The address, in unmanaged memory, to where the <paramref name="s" /> parameter was copied, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de50a-129"><xref:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi%2A>方法可用於自訂封送處理，或當混合 managed 和 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="de50a-129">The <xref:System.Security.SecureStringMarshal.SecureStringToGlobalAllocAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="de50a-130">因為這個方法配置 unmanaged 的記憶體所需的字串，一律以釋放記憶體呼叫<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="de50a-130">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de50a-131">
            <paramref name="s" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-131">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de50a-132">目前的電腦未執行 Windows 2000 Service Pack 3 或更新版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-132">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de50a-133">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-133">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="de50a-134">需要完全信任立即呼叫者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-134">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="de50a-135">這個成員無法供部分信任或安全性透明程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-135">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="de50a-136">這個方法是執行 Windows 2000 Service Pack 3 的電腦上才支援或更新版本。</span>
            <span class="sxs-lookup">
              <span data-stu-id="de50a-136">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureStringMarshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocUnicode(System::Security::SecureString ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="de50a-137">要複製的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-137">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de50a-138">將 Managed <see cref="T:System.Security.SecureString" /> 物件的內容複製到 Unmanaged 記憶體中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-138">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de50a-139">Unmanaged 記憶體中複製 <paramref name="s" /> 的目標位址；如果 <paramref name="s" /> 是長度為 0 的 <see cref="T:System.Security.SecureString" /> 物件，則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-139">The address, in unmanaged memory, where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is a <see cref="T:System.Security.SecureString" /> object whose length is 0.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de50a-140">
            <paramref name="s" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-140">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de50a-141">目前的電腦未執行 Windows 2000 Service Pack 3 或更新版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-141">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="de50a-142">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de50a-142">There is insufficient memory available.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>