<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecurityElement.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86c818d504196f12b9c0fb2d709edba0ae29cba89d4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">818d504196f12b9c0fb2d709edba0ae29cba89d4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.SecurityElement">
          <source>Represents the XML object model for encoding security objects.</source>
          <target state="translated">代表用於編碼安全性物件的 XML 物件模型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.SecurityElement">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</source>
          <target state="translated">這個類別被要簡單的 XML 物件模型用於安全性系統，而不做為一般的 XML 物件模型的輕量型實作。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>This documentation assumes a basic knowledge of XML.</source>
          <target state="translated">這份文件會假設 XML 的基本知識。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The simple XML object model for an element consists of the following parts:</source>
          <target state="translated">簡單的 XML 物件模型的項目是由下列部分所組成：</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The tag is the element name.</source>
          <target state="translated">標記是項目名稱。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The attributes are zero or more name/value attribute pairs on the element.</source>
          <target state="translated">屬性就會在項目上的零或多個名稱/值屬性組。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The children are zero or more elements nested within <ph id="ph1">`&lt;tag&gt;`</ph> and <ph id="ph2">`&lt;/tag&gt;`</ph>.</source>
          <target state="translated">子系是零或多個項目巢狀<ph id="ph1">`&lt;tag&gt;`</ph>和<ph id="ph2">`&lt;/tag&gt;`</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>It is strongly suggested that attribute based XML representation is used to express security elements and their values.</source>
          <target state="translated">強烈建議屬性型 XML 表示法用來表示安全性項目和其值。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>This means properties of an element are expressed as attributes and property values are expressed as attribute values.</source>
          <target state="translated">這表示項目的屬性會表示為屬性和屬性值會表示為屬性值。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>Avoid nesting text within tags.</source>
          <target state="translated">避免使用巢狀標記內的文字。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>For any <ph id="ph1">`&lt;tag&gt;text&lt;/tag&gt;`</ph> representation a representation of type <ph id="ph2">`&lt;tag value="text"/&gt;`</ph> is usually available.</source>
          <target state="translated">針對任何<ph id="ph1">`&lt;tag&gt;text&lt;/tag&gt;`</ph>表示的類型表示法<ph id="ph2">`&lt;tag value="text"/&gt;`</ph>通常使用。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</source>
          <target state="translated">使用此屬性為基礎的 XML 表示法會增加可讀性，並可讓您輕鬆的 WMI 可攜性產生的 XML 序列化。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>An attribute name must be one character or longer, and cannot be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">屬性名稱必須是其中一個字元或更長，且不能<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>If element-based value representation is used, elements with a text string that is <ph id="ph1">`null`</ph> are represented in the <ph id="ph2">`&lt;tag/&gt;`</ph> form; otherwise, text is delimited by the <ph id="ph3">`&lt;tag&gt;`</ph> and <ph id="ph4">`&lt;/tag&gt;`</ph> tokens.</source>
          <target state="translated">如果項目為基礎的值表示，項目文字字串<ph id="ph1">`null`</ph>表示<ph id="ph2">`&lt;tag/&gt;`</ph>形成; 否則會以分隔文字<ph id="ph3">`&lt;tag&gt;`</ph>和<ph id="ph4">`&lt;/tag&gt;`</ph>語彙基元。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>Both forms can be combined with attributes, which are shown if present.</source>
          <target state="translated">這兩種形式可以結合屬性，會顯示這些如果有的話。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The tags, attributes, and text of elements, if present, are always case-sensitive.</source>
          <target state="translated">標記、 屬性和文字的項目，如果有的話，會一律區分大小寫。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The XML form contains quotations and escapes where necessary.</source>
          <target state="translated">XML 格式包含引號，並在需要時來逸出。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>String values that include characters invalid for use in XML result in an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">在 XML 中包含使用無效的字元的字串值會導致<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>These rules apply to all properties and methods.</source>
          <target state="translated">這些規則適用於所有屬性和方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</source>
          <target state="translated">基於效能考量，項目會編碼為 XML 文字格式，而不是在每個集合的屬性或方法時，只會檢查字元的有效性。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>Static methods allow explicit checking where needed.</source>
          <target state="translated">可讓明確檢查所需的靜態方法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.SecurityElement">
          <source>The following example shows the use of members of the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">下列範例示範如何使用成員的<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="T:System.Security.SecurityElement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The tag name of an XML element.</source>
          <target state="translated">XML 項目的標記名稱。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> class with the specified tag.</source>
          <target state="translated">使用指定的標記，初始化 <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The <ph id="ph1">`tag`</ph> parameter must consist of a valid XML tag name.</source>
          <target state="translated"><ph id="ph1">`tag`</ph>參數必須包含有效的 XML 標記名稱。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph>從字串中移除無效的字元。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The following code shows the use of  the <ph id="ph1">&lt;xref:System.Security.SecurityElement.%23ctor%2A&gt;</ph> constructor to create a new <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph> object.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.%23ctor%2A&gt;</ph>建構函式來建立新<ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter is invalid in XML.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> 參數在 XML 中是無效的。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>The tag name of the XML element.</source>
          <target state="translated">XML 項目的標記名稱。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>The text content within the element.</source>
          <target state="translated">項目內的文字內容。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> class with the specified tag and text.</source>
          <target state="translated">使用指定的標記和文字來初始化 <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>If the <ph id="ph1">`text`</ph> parameter is <ph id="ph2">`null`</ph> this constructor produces an element identical to the default constructor.</source>
          <target state="translated">如果<ph id="ph1">`text`</ph>參數是<ph id="ph2">`null`</ph>這個建構函式會產生預設建構函式相同的項目。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter or <ph id="ph2">&lt;paramref name="text" /&gt;</ph> parameter is invalid in XML.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> 參數或 <ph id="ph2">&lt;paramref name="text" /&gt;</ph> 參數在 XML 中是無效的。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The name of the attribute.</source>
          <target state="translated">屬性的名稱。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The value of the attribute.</source>
          <target state="translated">屬性的值。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>Adds a name/value attribute to an XML element.</source>
          <target state="translated">加入名稱/值屬性至 XML 項目。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>Names and values in attributes should only contain valid XML attribute characters.</source>
          <target state="translated">名稱和屬性中的值應該只包含有效的 XML 屬性字元。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>XML attribute names must be unique.</source>
          <target state="translated">XML 屬性名稱必須是唯一的。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph>從字串中移除無效的字元。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</source>
          <target state="translated">沒有引號的字串，支援讓名稱/值組的字串應包含引號或其他需要用引號括住的字元。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.AddAttribute%2A&gt;</ph> method to add a name/value attribute to an XML element.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.AddAttribute%2A&gt;</ph>方法，將名稱/值屬性的 XML 項目。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 參數或 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 參數為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is invalid in XML.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 參數或 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 參數在 XML 中是無效的。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
          <source>An attribute with the name specified by the <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter already exists.</source>
          <target state="translated">由 <ph id="ph1">&lt;paramref name="name" /&gt;</ph> 參數所指定名稱的屬性已經存在。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>The child element to add.</source>
          <target state="translated">要加入的子項目。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>Adds a child element to the XML element.</source>
          <target state="translated">加入子項目至 XML 項目。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>The child element is added following any previously existing child elements.</source>
          <target state="translated">子元素會加入下列任何先前已存在的子元素。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.AddChild%2A&gt;</ph> method to add a child element to the XML element.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.AddChild%2A&gt;</ph>方法，將子元素加入至 XML 項目。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="child" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="child" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>The name of the attribute for which to search.</source>
          <target state="translated">要搜尋的屬性名稱。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>Finds an attribute by name in an XML element.</source>
          <target state="translated">依名稱尋找 XML 項目中的屬性。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>The value associated with the named attribute, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no attribute with <ph id="ph2">&lt;paramref name="name" /&gt;</ph> exists.</source>
          <target state="translated">與具名屬性相關的數值，或如果具有 <ph id="ph2">&lt;paramref name="name" /&gt;</ph> 的屬性不存在，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>With XML as follows, <ph id="ph1">`Attribute("B")`</ph> would return "456".</source>
          <target state="translated">使用 XML，如下所示，<ph id="ph1">`Attribute("B")`</ph>會傳回"456"。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Attribute%2A&gt;</ph> method to find an attribute by name.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.Attribute%2A&gt;</ph>方法依名稱尋找屬性。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Attribute(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Attributes">
          <source>Gets or sets the attributes of an XML element as name/value pairs.</source>
          <target state="translated">取得或設定 XML 項目的屬性當做名稱/值組。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> object for the attribute values of the XML element.</source>
          <target state="translated">XML 項目屬性值的 <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>Each attribute is stored in the <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> as a name/value pair.</source>
          <target state="translated">每個屬性儲存在<ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph>做為名稱/值組。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>Names and values in attributes should contain only valid XML attribute characters.</source>
          <target state="translated">名稱與屬性中的值應該包含有效 XML 屬性的字元。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph>從字串中移除無效的字元。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</source>
          <target state="translated">沒有引號的字串，支援讓名稱/值組的字串應包含引號或其他需要用引號括住的字元。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Attributes%2A&gt;</ph> property to get an attribute of an XML element.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.Attributes%2A&gt;</ph>屬性來取得 XML 項目的屬性。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Attributes">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Attributes">
          <source>The name or value of the <ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> object is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Hashtable" /&gt;</ph> 物件的名稱或數值是無效的。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Attributes">
          <source>The name is not a valid XML attribute name.</source>
          <target state="translated">名稱不是有效的 XML 屬性名稱。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Children">
          <source>Gets or sets the array of child elements of the XML element.</source>
          <target state="translated">取得或設定 XML 項目的子項目陣列。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Children">
          <source>The ordered child elements of the XML element as security elements.</source>
          <target state="translated">XML 項目的已排序的子項目，做為安全項目。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Children">
          <source>If a <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> contains both <ph id="ph2">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> will appear first.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>同時包含<ph id="ph2">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph>，<ph id="ph4">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph>會先出現。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Children">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph> property to get the array of child elements of the XML element.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph>屬性來取得 XML 元素的子元素的陣列。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Children">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Children">
          <source>A child of the XML parent node is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">XML 父節點的子系為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Copy">
          <source>Creates and returns an identical copy of the current <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> object.</source>
          <target state="translated">建立並傳回目前 <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> 物件的相同複本。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Copy">
          <source>A copy of the current <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> object.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> 的複本。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Copy">
          <source>The copy includes both the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.SecurityElement.Attributes%2A&gt;</ph> properties.</source>
          <target state="translated">同時複製包含<ph id="ph1">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Security.SecurityElement.Attributes%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>An XML element object to which to compare the current XML element object.</source>
          <target state="translated">要與目前 XML 項目物件比較的 XML 項目物件。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>Compares two XML element objects for equality.</source>
          <target state="translated">比較兩個 XML 項目物件是否相等。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <ph id="ph2">&lt;paramref name="other" /&gt;</ph> parameter; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果標記、屬性名稱與數值、子項目和目前 XML 項目中的欄位與 <ph id="ph2">&lt;paramref name="other" /&gt;</ph> 參數中的對應部分相同，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>If there are child elements, comparison extends recursively to them.</source>
          <target state="translated">如果有子項目，比較將遞迴地展開。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>There is no support for comparing different XML representations of the same characters.</source>
          <target state="translated">沒有支援比較不同的 XML 表示的相同字元。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Equal%2A&gt;</ph> method to compare two XML elements.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.Equal%2A&gt;</ph>方法來比較兩個 XML 項目。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>The string within which to escape invalid characters.</source>
          <target state="translated">要逸出無效字元的字串。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>Replaces invalid XML characters in a string with their valid XML equivalent.</source>
          <target state="translated">將字串中無效的 XML 字元以它們的相等有效 XML 字元來取代。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>The input string with invalid characters replaced.</source>
          <target state="translated">無效字元被取代後的輸入字串。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>Use this method to replace invalid characters in a string before using the string in a <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>.</source>
          <target state="translated">使用這個方法來取代無效的字元在字串中使用中的字串之前<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>If invalid characters are used in a <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> without being escaped, an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">如果使用無效的字元<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>沒有逸出，<ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>The following table shows the invalid XML characters and their escaped equivalents.</source>
          <target state="translated">下表顯示不正確的 XML 字元，以及其對等的逸出。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>Invalid XML character</source>
          <target state="translated">無效的 XML 字元</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>Replaced with</source>
          <target state="translated">取代為</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> method to replace invalid XML characters in a string with their valid XML equivalent.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph>方法來取代無效的 XML 字元在字串中使用其有效的 XML 對等。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.Escape(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>The XML-encoded string from which to create the security element.</source>
          <target state="translated">用來建立安全性項目的 XML 編碼字串。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>Creates a security element from an XML-encoded string.</source>
          <target state="translated">從 XML 編碼字串建立安全性項目。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> created from the XML.</source>
          <target state="translated">從 XML 建立的 <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</source>
          <target state="translated">請勿使用單引號中的 XML 字串。請改用逸出的雙引號。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>For example, instead of "<ph id="ph1">`&lt;value name='Company'&gt;Microsoft&lt;/value&gt;"`</ph> use "<ph id="ph2">`&lt;value name=\"Company\"&gt;Microsoft&lt;/value&gt;"`</ph>.</source>
          <target state="translated">例如，而不是"<ph id="ph1">`&lt;value name='Company'&gt;Microsoft&lt;/value&gt;"`</ph>使用"<ph id="ph2">`&lt;value name=\"Company\"&gt;Microsoft&lt;/value&gt;"`</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source>Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</source>
          <target state="translated">使用單引號可能會造成例外狀況擲回，或在某些情況下，將單引號字串中以文字方式來處理。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> contains one or more single quotation mark characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> 包含一或多個單引號字元。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.FromString(System.String)">
          <source><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>The attribute name to test for validity.</source>
          <target state="translated">要測試有效性的屬性名稱。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>Determines whether a string is a valid attribute name.</source>
          <target state="translated">判斷字串是否為有效的屬性名稱。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="name" /&gt;</ph> parameter is a valid XML attribute name; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="name" /&gt;</ph> 參數是有效的 XML 屬性名稱，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>This method can be used to test an attribute before adding it to a security element.</source>
          <target state="translated">這個方法可用來測試屬性，才能將它新增到安全性項目。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidAttributeName%2A&gt;</ph> method to determine whether a string is a valid attribute name.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidAttributeName%2A&gt;</ph>方法，以判斷字串是否為有效的屬性名稱。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>The attribute value to test for validity.</source>
          <target state="translated">要測試有效性的屬性值。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>Determines whether a string is a valid attribute value.</source>
          <target state="translated">判斷字串是否為有效的屬性值。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is a valid XML attribute value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 參數是有效的 XML 屬性值，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>This method can be used to test an attribute before adding it to a security element.</source>
          <target state="translated">這個方法可用來測試屬性，才能將它新增到安全性項目。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidAttributeValue%2A&gt;</ph> method to determine whether a string is a valid attribute value.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidAttributeValue%2A&gt;</ph>方法，以判斷字串是否為有效的屬性值。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>The tag to test for validity.</source>
          <target state="translated">要測試有效性的標記。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>Determines whether a string is a valid tag.</source>
          <target state="translated">判斷字串是否為有效的標記。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="tag" /&gt;</ph> parameter is a valid XML tag; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="tag" /&gt;</ph> 參數是有效的 XML 標記，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>This can be used to test a <ph id="ph1">&lt;xref:System.Security.SecurityElement.Tag%2A&gt;</ph> before setting it.</source>
          <target state="translated">這可用來測試<ph id="ph1">&lt;xref:System.Security.SecurityElement.Tag%2A&gt;</ph>再將它設定。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidTag%2A&gt;</ph> method to determine whether a string is a valid attribute tag.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidTag%2A&gt;</ph>方法，以判斷字串是否為有效的屬性標記。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidTag(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>The text to test for validity.</source>
          <target state="translated">要測試有效性的文字。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>Determines whether a string is valid as text within an XML element.</source>
          <target state="translated">判斷字串是否可做為 XML 項目內的有效文字。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="text" /&gt;</ph> parameter is a valid XML text element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="text" /&gt;</ph> 參數為有效的 XML 文字項目，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>This method can be used to test <ph id="ph1">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> before setting it.</source>
          <target state="translated">這個方法可用來測試<ph id="ph1">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph>再將它設定。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidText%2A&gt;</ph> method to determine whether a string is valid as XML element text.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.IsValidText%2A&gt;</ph>方法，以判斷字串是否為 XML 項目文字。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.IsValidText(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>The tag for which to search in child elements.</source>
          <target state="translated">要在子項目中搜尋的標記。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>Finds a child by its tag name.</source>
          <target state="translated">依它的標記名稱搜尋子項目。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>The first child XML element with the specified tag value, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no child element with <ph id="ph2">&lt;paramref name="tag" /&gt;</ph> exists.</source>
          <target state="translated">第一個具有指定標記數值的子 XML 項目，或如果具有 <ph id="ph2">&lt;paramref name="tag" /&gt;</ph> 的子項目不存在，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>With XML as follows, <ph id="ph1">`SearchForChildByTag("second")`</ph> would return the child element <ph id="ph2">`&lt;second&gt;`</ph>.</source>
          <target state="translated">使用 XML，如下所示，<ph id="ph1">`SearchForChildByTag("second")`</ph>子元素將會傳回<ph id="ph2">`&lt;second&gt;`</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.SearchForChildByTag%2A&gt;</ph> method to find a child by its tag name.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.SearchForChildByTag%2A&gt;</ph>方法來尋找標籤名稱的子系。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="tag" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>The tag for which to search in child elements.</source>
          <target state="translated">要在子項目中搜尋的標記。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>Finds a child by its tag name and returns the contained text.</source>
          <target state="translated">依它的標記名稱尋找子項目，並傳回所包含的文字。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>The text contents of the first child element with the specified tag value.</source>
          <target state="translated">第一個子項目的文字內容，這個子項目具有指定標記值。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>This method is equivalent to the following:</source>
          <target state="translated">這個方法相當於下列：</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>With XML as follows, <ph id="ph1">`SearchForTextOfTag("second")`</ph> would return "text2".</source>
          <target state="translated">使用 XML，如下所示，<ph id="ph1">`SearchForTextOfTag("second")`</ph>會傳回"文字 2"。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.SearchForTextOfTag%2A&gt;</ph> method to find a child by its tag name and return the contained text.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.SearchForTextOfTag%2A&gt;</ph>方法來尋找的子標籤名稱，並傳回所包含的文字。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
          <source><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tag" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Tag">
          <source>Gets or sets the tag name of an XML element.</source>
          <target state="translated">取得或設定 XML 項目的標記名稱。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>The tag name of an XML element.</source>
          <target state="translated">XML 項目的標記名稱。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>In XML, the tag appears in the script as appears below:</source>
          <target state="translated">在 XML 中，標記會出現在下面顯示的指令碼：</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>If this element has child elements, the children will replace <ph id="ph1">`text`</ph>.</source>
          <target state="translated">如果這個項目具有子項目，將會取代子系<ph id="ph1">`text`</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>Assign only valid XML tag strings to this property.</source>
          <target state="translated">指定這個屬性才有效的 XML 標記字串。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph>從字串中移除無效的字元。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Tag%2A&gt;</ph> property to get the tag name of an XML element.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.Tag%2A&gt;</ph>屬性來取得 XML 項目的標記名稱。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Tag">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Tag">
          <source>The tag is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">標記為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Tag">
          <source>The tag is not valid in XML.</source>
          <target state="translated">標記在 XML 中是無效的。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Text">
          <source>Gets or sets the text within an XML element.</source>
          <target state="translated">取得或設定 XML 項目中的文字。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>The value of the text within an XML element.</source>
          <target state="translated">XML 項目中的文字值。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>The text should not contain XML special characters.</source>
          <target state="translated">文字不應該包含 XML 特殊字元。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>Use <ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph> to remove invalid characters from the string.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.Escape%2A&gt;</ph>從字串中移除無效的字元。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>If a <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> contains both <ph id="ph2">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> will appear first.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>同時包含<ph id="ph2">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Security.SecurityElement.Children%2A&gt;</ph>，<ph id="ph4">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph>會先出現。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>The following code shows the use of the <ph id="ph1">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph> property to get the text of an XML element.</source>
          <target state="translated">下列程式碼將示範如何使用<ph id="ph1">&lt;xref:System.Security.SecurityElement.Text%2A&gt;</ph>屬性來取得 XML 項目的文字。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.SecurityElement.Text">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.SecurityElement&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Security.SecurityElement.Text">
          <source>The text is not valid in XML.</source>
          <target state="translated">文字在 XML 中是無效的。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.ToString">
          <source>Produces a string representation of an XML element and its constituent attributes, child elements, and text.</source>
          <target state="translated">產生 XML 項目的字串表示以及它的構成屬性、子項目和文字。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Security.SecurityElement.ToString">
          <source>The XML element and its contents.</source>
          <target state="translated">XML 項目和其內容。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.SecurityElement.ToString">
          <source>This method is useful in debugging to see the XML representation of the element.</source>
          <target state="translated">這個方法適用於偵錯以查看元素的 XML 表示法。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>