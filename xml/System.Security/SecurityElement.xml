<Type Name="SecurityElement" FullName="System.Security.SecurityElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ec7af69e8387feb777d27fd236565f8d063b8341" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36527505" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecurityElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SecurityElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityElement sealed" />
  <TypeSignature Language="F#" Value="type SecurityElement = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0352c-101">Represents the XML object model for encoding security objects.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0352c-101">Represents the XML object model for encoding security objects.</span>
      </span>
      <span data-ttu-id="0352c-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0352c-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-103">這個類別被要簡單的 XML 物件模型用於安全性系統，而不做為一般的 XML 物件模型的輕量型實作。</span><span class="sxs-lookup"><span data-stu-id="0352c-103">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span> <span data-ttu-id="0352c-104">這份文件會假設 XML 的基本知識。</span><span class="sxs-lookup"><span data-stu-id="0352c-104">This documentation assumes a basic knowledge of XML.</span></span>  
  
 <span data-ttu-id="0352c-105">簡單的 XML 物件模型的項目是由下列部分所組成：</span><span class="sxs-lookup"><span data-stu-id="0352c-105">The simple XML object model for an element consists of the following parts:</span></span>  
  
-   <span data-ttu-id="0352c-106">標記是項目名稱。</span><span class="sxs-lookup"><span data-stu-id="0352c-106">The tag is the element name.</span></span>  
  
-   <span data-ttu-id="0352c-107">屬性就會在項目上的零或多個名稱/值屬性組。</span><span class="sxs-lookup"><span data-stu-id="0352c-107">The attributes are zero or more name/value attribute pairs on the element.</span></span>  
  
-   <span data-ttu-id="0352c-108">子系是零或多個項目巢狀`<tag>`和`</tag>`。</span><span class="sxs-lookup"><span data-stu-id="0352c-108">The children are zero or more elements nested within `<tag>` and `</tag>`.</span></span>  
  
 <span data-ttu-id="0352c-109">強烈建議屬性型 XML 表示法用來表示安全性項目和其值。</span><span class="sxs-lookup"><span data-stu-id="0352c-109">It is strongly suggested that attribute based XML representation is used to express security elements and their values.</span></span> <span data-ttu-id="0352c-110">這表示項目的屬性會表示為屬性和屬性值會表示為屬性值。</span><span class="sxs-lookup"><span data-stu-id="0352c-110">This means properties of an element are expressed as attributes and property values are expressed as attribute values.</span></span> <span data-ttu-id="0352c-111">避免使用巢狀標記內的文字。</span><span class="sxs-lookup"><span data-stu-id="0352c-111">Avoid nesting text within tags.</span></span> <span data-ttu-id="0352c-112">針對任何`<tag>text</tag>`表示的類型表示法`<tag value="text"/>`通常使用。</span><span class="sxs-lookup"><span data-stu-id="0352c-112">For any `<tag>text</tag>` representation a representation of type `<tag value="text"/>` is usually available.</span></span> <span data-ttu-id="0352c-113">使用此屬性為基礎的 XML 表示法會增加可讀性，並可讓您輕鬆的 WMI 可攜性產生的 XML 序列化。</span><span class="sxs-lookup"><span data-stu-id="0352c-113">Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</span></span>  
  
 <span data-ttu-id="0352c-114">屬性名稱必須是其中一個字元或更長，且不能`null`。</span><span class="sxs-lookup"><span data-stu-id="0352c-114">An attribute name must be one character or longer, and cannot be `null`.</span></span> <span data-ttu-id="0352c-115">如果項目為基礎的值表示，項目文字字串`null`表示`<tag/>`形成; 否則會以分隔文字`<tag>`和`</tag>`語彙基元。</span><span class="sxs-lookup"><span data-stu-id="0352c-115">If element-based value representation is used, elements with a text string that is `null` are represented in the `<tag/>` form; otherwise, text is delimited by the `<tag>` and `</tag>` tokens.</span></span> <span data-ttu-id="0352c-116">這兩種形式可以結合屬性，會顯示這些如果有的話。</span><span class="sxs-lookup"><span data-stu-id="0352c-116">Both forms can be combined with attributes, which are shown if present.</span></span>  
  
 <span data-ttu-id="0352c-117">標記、 屬性和文字的項目，如果有的話，會一律區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="0352c-117">The tags, attributes, and text of elements, if present, are always case-sensitive.</span></span> <span data-ttu-id="0352c-118">XML 格式包含引號，並在需要時來逸出。</span><span class="sxs-lookup"><span data-stu-id="0352c-118">The XML form contains quotations and escapes where necessary.</span></span> <span data-ttu-id="0352c-119">在 XML 中包含使用無效的字元的字串值會導致<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="0352c-119">String values that include characters invalid for use in XML result in an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="0352c-120">這些規則適用於所有屬性和方法。</span><span class="sxs-lookup"><span data-stu-id="0352c-120">These rules apply to all properties and methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0352c-121">基於效能考量，項目會編碼為 XML 文字格式，而不是在每個集合的屬性或方法時，只會檢查字元的有效性。</span><span class="sxs-lookup"><span data-stu-id="0352c-121">For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</span></span> <span data-ttu-id="0352c-122">可讓明確檢查所需的靜態方法。</span><span class="sxs-lookup"><span data-stu-id="0352c-122">Static methods allow explicit checking where needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0352c-123">下列範例示範如何使用成員的<xref:System.Security.SecurityElement>類別。</span><span class="sxs-lookup"><span data-stu-id="0352c-123">The following example shows the use of members of the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#1)]
 [!code-csharp[SecurityElementMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#1)]
 [!code-vb[SecurityElementMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0352c-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="0352c-125">The tag name of an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-125">The tag name of an XML element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0352c-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-127">`tag`參數必須包含有效的 XML 標記名稱。</span><span class="sxs-lookup"><span data-stu-id="0352c-127">The `tag` parameter must consist of a valid XML tag name.</span></span> <span data-ttu-id="0352c-128">使用<xref:System.Security.SecurityElement.Escape%2A>從字串中移除無效的字元。</span><span class="sxs-lookup"><span data-stu-id="0352c-128">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0352c-129">下列程式碼將示範如何使用<xref:System.Security.SecurityElement.%23ctor%2A>建構函式來建立新<xref:System.Security.SecurityElement>物件。</span><span class="sxs-lookup"><span data-stu-id="0352c-129">The following code shows the use of  the <xref:System.Security.SecurityElement.%23ctor%2A> constructor to create a new <xref:System.Security.SecurityElement> object.</span></span>  <span data-ttu-id="0352c-130">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.SecurityElement>類別。</span><span class="sxs-lookup"><span data-stu-id="0352c-130">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#2)]
 [!code-csharp[SecurityElementMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#2)]
 [!code-vb[SecurityElementMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0352c-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0352c-132">The <paramref name="tag" /> parameter is invalid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-132">The <paramref name="tag" /> parameter is invalid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag, System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string * string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement (tag, text)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="0352c-133">The tag name of the XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-133">The tag name of the XML element.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="0352c-134">The text content within the element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-134">The text content within the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0352c-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-136">如果`text`參數是`null`這個建構函式會產生預設建構函式相同的項目。</span><span class="sxs-lookup"><span data-stu-id="0352c-136">If the `text` parameter is `null` this constructor produces an element identical to the default constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0352c-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0352c-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : string * string -&gt; unit" Usage="securityElement.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0352c-139">The name of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-139">The name of the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0352c-140">The value of the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-140">The value of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0352c-141">Adds a name/value attribute to an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-141">Adds a name/value attribute to an XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-142">名稱和屬性中的值應該只包含有效的 XML 屬性字元。</span><span class="sxs-lookup"><span data-stu-id="0352c-142">Names and values in attributes should only contain valid XML attribute characters.</span></span> <span data-ttu-id="0352c-143">XML 屬性名稱必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="0352c-143">XML attribute names must be unique.</span></span> <span data-ttu-id="0352c-144">使用<xref:System.Security.SecurityElement.Escape%2A>從字串中移除無效的字元。</span><span class="sxs-lookup"><span data-stu-id="0352c-144">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="0352c-145">沒有引號的字串，支援讓名稱/值組的字串應包含引號或其他需要用引號括住的字元。</span><span class="sxs-lookup"><span data-stu-id="0352c-145">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0352c-146">下列程式碼將示範如何使用<xref:System.Security.SecurityElement.AddAttribute%2A>方法，將名稱/值屬性的 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="0352c-146">The following code shows the use of the <xref:System.Security.SecurityElement.AddAttribute%2A> method to add a name/value attribute to an XML element.</span></span> <span data-ttu-id="0352c-147">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.SecurityElement>類別。</span><span class="sxs-lookup"><span data-stu-id="0352c-147">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#4)]
 [!code-csharp[SecurityElementMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#4)]
 [!code-vb[SecurityElementMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0352c-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0352c-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span>
          </span>
          <span data-ttu-id="0352c-150">-or-  An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-150">-or-  An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Security.SecurityElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Security.SecurityElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Security::SecurityElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddChild : System.Security.SecurityElement -&gt; unit" Usage="securityElement.AddChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="0352c-151">The child element to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-151">The child element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0352c-152">Adds a child element to the XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-152">Adds a child element to the XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-153">子元素會加入下列任何先前已存在的子元素。</span><span class="sxs-lookup"><span data-stu-id="0352c-153">The child element is added following any previously existing child elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0352c-154">下列程式碼將示範如何使用<xref:System.Security.SecurityElement.AddChild%2A>方法，將子元素加入至 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="0352c-154">The following code shows the use of the <xref:System.Security.SecurityElement.AddChild%2A> method to add a child element to the XML element.</span></span>  <span data-ttu-id="0352c-155">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.SecurityElement>類別。</span><span class="sxs-lookup"><span data-stu-id="0352c-155">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#5](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#5)]
 [!code-csharp[SecurityElementMembers#5](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#5)]
 [!code-vb[SecurityElementMembers#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0352c-156">The <paramref name="child" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-156">The <paramref name="child" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attribute">
      <MemberSignature Language="C#" Value="public string Attribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Attribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Attribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Attribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Attribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Attribute : string -&gt; string" Usage="securityElement.Attribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0352c-157">The name of the attribute for which to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-157">The name of the attribute for which to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0352c-158">Finds an attribute by name in an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-158">Finds an attribute by name in an XML element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0352c-159">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-159">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-160">使用 XML，如下所示，`Attribute("B")`會傳回"456"。</span><span class="sxs-lookup"><span data-stu-id="0352c-160">With XML as follows, `Attribute("B")` would return "456".</span></span>  
  
```  
<thetag A="123" B="456" C="789">text</thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="0352c-161">下列程式碼將示範如何使用<xref:System.Security.SecurityElement.Attribute%2A>方法依名稱尋找屬性。</span><span class="sxs-lookup"><span data-stu-id="0352c-161">The following code shows the use of the <xref:System.Security.SecurityElement.Attribute%2A> method to find an attribute by name.</span></span> <span data-ttu-id="0352c-162">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.SecurityElement>類別。</span><span class="sxs-lookup"><span data-stu-id="0352c-162">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#13)]
 [!code-csharp[SecurityElementMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#13)]
 [!code-vb[SecurityElementMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0352c-163">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-163">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Property Attributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Hashtable ^ Attributes { System::Collections::Hashtable ^ get(); void set(System::Collections::Hashtable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Hashtable with get, set" Usage="System.Security.SecurityElement.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0352c-164">Gets or sets the attributes of an XML element as name/value pairs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-164">Gets or sets the attributes of an XML element as name/value pairs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0352c-165">
            <see cref="T:System.Collections.Hashtable" /> XML 元素的屬性值的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-165">The <see cref="T:System.Collections.Hashtable" /> object for the attribute values of the XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-166">每個屬性儲存在<xref:System.Collections.Hashtable>做為名稱/值組。</span><span class="sxs-lookup"><span data-stu-id="0352c-166">Each attribute is stored in the <xref:System.Collections.Hashtable> as a name/value pair.</span></span>  
  
 <span data-ttu-id="0352c-167">名稱與屬性中的值應該包含有效 XML 屬性的字元。</span><span class="sxs-lookup"><span data-stu-id="0352c-167">Names and values in attributes should contain only valid XML attribute characters.</span></span> <span data-ttu-id="0352c-168">使用<xref:System.Security.SecurityElement.Escape%2A>從字串中移除無效的字元。</span><span class="sxs-lookup"><span data-stu-id="0352c-168">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="0352c-169">沒有引號的字串，支援讓名稱/值組的字串應包含引號或其他需要用引號括住的字元。</span><span class="sxs-lookup"><span data-stu-id="0352c-169">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0352c-170">下列程式碼將示範如何使用<xref:System.Security.SecurityElement.Attributes%2A>屬性來取得 XML 項目的屬性。</span><span class="sxs-lookup"><span data-stu-id="0352c-170">The following code shows the use of the <xref:System.Security.SecurityElement.Attributes%2A> property to get an attribute of an XML element.</span></span> <span data-ttu-id="0352c-171">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.SecurityElement>類別。</span><span class="sxs-lookup"><span data-stu-id="0352c-171">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#15)]
 [!code-csharp[SecurityElementMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#15)]
 [!code-vb[SecurityElementMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0352c-172">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-172">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0352c-173">The name is not a valid XML attribute name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-173">The name is not a valid XML attribute name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Children { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Children" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Children" />
      <MemberSignature Language="VB.NET" Value="Public Property Children As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Children { System::Collections::ArrayList ^ get(); void set(System::Collections::ArrayList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.ArrayList with get, set" Usage="System.Security.SecurityElement.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0352c-174">Gets or sets the array of child elements of the XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-174">Gets or sets the array of child elements of the XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0352c-175">做為安全性項目 XML 項目的已排序的子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-175">The ordered child elements of the XML element as security elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-176">如果<xref:System.Security.SecurityElement>同時包含<xref:System.Security.SecurityElement.Text%2A>和<xref:System.Security.SecurityElement.Children%2A>，<xref:System.Security.SecurityElement.Text%2A>會先出現。</span><span class="sxs-lookup"><span data-stu-id="0352c-176">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0352c-177">下列程式碼將示範如何使用<xref:System.Security.SecurityElement.Children%2A>屬性來取得 XML 元素的子元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="0352c-177">The following code shows the use of the <xref:System.Security.SecurityElement.Children%2A> property to get the array of child elements of the XML element.</span></span> <span data-ttu-id="0352c-178">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.SecurityElement>類別。</span><span class="sxs-lookup"><span data-stu-id="0352c-178">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#14)]
 [!code-csharp[SecurityElementMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#14)]
 [!code-vb[SecurityElementMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0352c-179">A child of the XML parent node is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-179">A child of the XML parent node is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Security.SecurityElement" Usage="securityElement.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0352c-180">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-180">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0352c-181">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-181">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-182">同時複製包含<xref:System.Security.SecurityElement.Children%2A>和<xref:System.Security.SecurityElement.Attributes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0352c-182">The copy includes both the <xref:System.Security.SecurityElement.Children%2A> and <xref:System.Security.SecurityElement.Attributes%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public bool Equal (System.Security.SecurityElement other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equal(class System.Security.SecurityElement other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equal (other As SecurityElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equal(System::Security::SecurityElement ^ other);" />
      <MemberSignature Language="F#" Value="member this.Equal : System.Security.SecurityElement -&gt; bool" Usage="securityElement.Equal other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="0352c-183">An XML element object to which to compare the current XML element object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-183">An XML element object to which to compare the current XML element object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0352c-184">Compares two XML element objects for equality.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-184">Compares two XML element objects for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0352c-185">
            <see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-185">
              <see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-186">如果有子項目，比較將遞迴地展開。</span><span class="sxs-lookup"><span data-stu-id="0352c-186">If there are child elements, comparison extends recursively to them.</span></span>  
  
 <span data-ttu-id="0352c-187">沒有支援比較不同的 XML 表示的相同字元。</span><span class="sxs-lookup"><span data-stu-id="0352c-187">There is no support for comparing different XML representations of the same characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0352c-188">下列程式碼將示範如何使用<xref:System.Security.SecurityElement.Equal%2A>方法來比較兩個 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="0352c-188">The following code shows the use of the <xref:System.Security.SecurityElement.Equal%2A> method to compare two XML elements.</span></span> <span data-ttu-id="0352c-189">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.SecurityElement>類別。</span><span class="sxs-lookup"><span data-stu-id="0352c-189">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#22](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#22)]
 [!code-csharp[SecurityElementMembers#22](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#22)]
 [!code-vb[SecurityElementMembers#22](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public static string Escape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Escape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Escape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Escape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Escape(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Escape : string -&gt; string" Usage="System.Security.SecurityElement.Escape str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="0352c-190">The string within which to escape invalid characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-190">The string within which to escape invalid characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0352c-191">Replaces invalid XML characters in a string with their valid XML equivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-191">Replaces invalid XML characters in a string with their valid XML equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0352c-192">The input string with invalid characters replaced.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-192">The input string with invalid characters replaced.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-193">使用這個方法來取代無效的字元在字串中使用中的字串之前<xref:System.Security.SecurityElement>。</span><span class="sxs-lookup"><span data-stu-id="0352c-193">Use this method to replace invalid characters in a string before using the string in a <xref:System.Security.SecurityElement>.</span></span> <span data-ttu-id="0352c-194">如果使用無效的字元<xref:System.Security.SecurityElement>沒有逸出，<xref:System.ArgumentException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="0352c-194">If invalid characters are used in a <xref:System.Security.SecurityElement> without being escaped, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="0352c-195">下表顯示不正確的 XML 字元，以及其對等的逸出。</span><span class="sxs-lookup"><span data-stu-id="0352c-195">The following table shows the invalid XML characters and their escaped equivalents.</span></span>  

| <span data-ttu-id="0352c-196">無效的 XML 字元</span><span class="sxs-lookup"><span data-stu-id="0352c-196">Invalid XML character</span></span> | <span data-ttu-id="0352c-197">取代為</span><span class="sxs-lookup"><span data-stu-id="0352c-197">Replaced with</span></span> |
|-----------------------|---------------|
| `<`                   | `&lt;`        |
| `>`                   | `&gt;`        |
| `"`                   | `&quot;`      |
| `'`                   | `&apos;`      |
| `&`                   | `&amp;`       |   

## Examples  
 <span data-ttu-id="0352c-198">下列程式碼將示範如何使用<xref:System.Security.SecurityElement.Escape%2A>方法來取代無效的 XML 字元在字串中使用其有效的 XML 對等。</span><span class="sxs-lookup"><span data-stu-id="0352c-198">The following code shows the use of the <xref:System.Security.SecurityElement.Escape%2A> method to replace invalid XML characters in a string with their valid XML equivalent.</span></span> <span data-ttu-id="0352c-199">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.SecurityElement>類別。</span><span class="sxs-lookup"><span data-stu-id="0352c-199">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#19](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#19)]
 [!code-csharp[SecurityElementMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#19)]
 [!code-vb[SecurityElementMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromString">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityElement FromString (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityElement FromString(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.FromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromString (xml As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityElement ^ FromString(System::String ^ xml);" />
      <MemberSignature Language="F#" Value="static member FromString : string -&gt; System.Security.SecurityElement" Usage="System.Security.SecurityElement.FromString xml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml">
          <span data-ttu-id="0352c-200">The XML-encoded string from which to create the security element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-200">The XML-encoded string from which to create the security element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0352c-201">Creates a security element from an XML-encoded string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-201">Creates a security element from an XML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0352c-202">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-202">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-203">請勿使用單引號中的 XML 字串。請改用逸出的雙引號。</span><span class="sxs-lookup"><span data-stu-id="0352c-203">Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</span></span> <span data-ttu-id="0352c-204">例如，而不是"`<value name='Company'>Microsoft</value>"`使用"`<value name=\"Company\">Microsoft</value>"`。</span><span class="sxs-lookup"><span data-stu-id="0352c-204">For example, instead of "`<value name='Company'>Microsoft</value>"` use "`<value name=\"Company\">Microsoft</value>"`.</span></span>  
  
 <span data-ttu-id="0352c-205">使用單引號可能會造成例外狀況擲回，或在某些情況下，將單引號字串中以文字方式來處理。</span><span class="sxs-lookup"><span data-stu-id="0352c-205">Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.XmlSyntaxException">
          <span data-ttu-id="0352c-206">
            <paramref name="xml" /> contains one or more single quotation mark characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-206">
              <paramref name="xml" /> contains one or more single quotation mark characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0352c-207">
            <paramref name="xml" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-207">
              <paramref name="xml" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeName">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeName : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0352c-208">The attribute name to test for validity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-208">The attribute name to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0352c-209">Determines whether a string is a valid attribute name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-209">Determines whether a string is a valid attribute name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0352c-210">
            <see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-210">
              <see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-211">這個方法可用來測試屬性，才能將它新增到安全性項目。</span><span class="sxs-lookup"><span data-stu-id="0352c-211">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0352c-212">下列程式碼將示範如何使用<xref:System.Security.SecurityElement.IsValidAttributeName%2A>方法，以判斷字串是否為有效的屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="0352c-212">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeName%2A> method to determine whether a string is a valid attribute name.</span></span> <span data-ttu-id="0352c-213">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.SecurityElement>類別。</span><span class="sxs-lookup"><span data-stu-id="0352c-213">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#6)]
 [!code-csharp[SecurityElementMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#6)]
 [!code-vb[SecurityElementMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeValue">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeValue (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeValue : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0352c-214">The attribute value to test for validity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-214">The attribute value to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0352c-215">Determines whether a string is a valid attribute value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-215">Determines whether a string is a valid attribute value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0352c-216">
            <see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-216">
              <see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-217">這個方法可用來測試屬性，才能將它新增到安全性項目。</span><span class="sxs-lookup"><span data-stu-id="0352c-217">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0352c-218">下列程式碼將示範如何使用<xref:System.Security.SecurityElement.IsValidAttributeValue%2A>方法，以判斷字串是否為有效的屬性值。</span><span class="sxs-lookup"><span data-stu-id="0352c-218">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> method to determine whether a string is a valid attribute value.</span></span> <span data-ttu-id="0352c-219">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.SecurityElement>類別。</span><span class="sxs-lookup"><span data-stu-id="0352c-219">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#7)]
 [!code-csharp[SecurityElementMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#7)]
 [!code-vb[SecurityElementMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidTag">
      <MemberSignature Language="C#" Value="public static bool IsValidTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidTag (tag As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="static member IsValidTag : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="0352c-220">The tag to test for validity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-220">The tag to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0352c-221">Determines whether a string is a valid tag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-221">Determines whether a string is a valid tag.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0352c-222">
            <see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-222">
              <see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-223">這可用來測試<xref:System.Security.SecurityElement.Tag%2A>再將它設定。</span><span class="sxs-lookup"><span data-stu-id="0352c-223">This can be used to test a <xref:System.Security.SecurityElement.Tag%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0352c-224">下列程式碼將示範如何使用<xref:System.Security.SecurityElement.IsValidTag%2A>方法，以判斷字串是否為有效的屬性標記。</span><span class="sxs-lookup"><span data-stu-id="0352c-224">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidTag%2A> method to determine whether a string is a valid attribute tag.</span></span> <span data-ttu-id="0352c-225">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.SecurityElement>類別。</span><span class="sxs-lookup"><span data-stu-id="0352c-225">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#10](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#10)]
 [!code-csharp[SecurityElementMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#10)]
 [!code-vb[SecurityElementMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidText">
      <MemberSignature Language="C#" Value="public static bool IsValidText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidText (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsValidText : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="0352c-226">The text to test for validity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-226">The text to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0352c-227">Determines whether a string is valid as text within an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-227">Determines whether a string is valid as text within an XML element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0352c-228">
            <see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-228">
              <see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-229">這個方法可用來測試<xref:System.Security.SecurityElement.Text%2A>再將它設定。</span><span class="sxs-lookup"><span data-stu-id="0352c-229">This method can be used to test <xref:System.Security.SecurityElement.Text%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0352c-230">下列程式碼將示範如何使用<xref:System.Security.SecurityElement.IsValidText%2A>方法，以判斷字串是否為 XML 項目文字。</span><span class="sxs-lookup"><span data-stu-id="0352c-230">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidText%2A> method to determine whether a string is valid as XML element text.</span></span> <span data-ttu-id="0352c-231">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.SecurityElement>類別。</span><span class="sxs-lookup"><span data-stu-id="0352c-231">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#9)]
 [!code-csharp[SecurityElementMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#9)]
 [!code-vb[SecurityElementMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForChildByTag">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement SearchForChildByTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement SearchForChildByTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForChildByTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForChildByTag (tag As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ SearchForChildByTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForChildByTag : string -&gt; System.Security.SecurityElement" Usage="securityElement.SearchForChildByTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="0352c-232">The tag for which to search in child elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-232">The tag for which to search in child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0352c-233">Finds a child by its tag name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-233">Finds a child by its tag name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0352c-234">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-234">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-235">使用 XML，如下所示，`SearchForChildByTag("second")`子元素將會傳回`<second>`。</span><span class="sxs-lookup"><span data-stu-id="0352c-235">With XML as follows, `SearchForChildByTag("second")` would return the child element `<second>`.</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
       <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="0352c-236">下列程式碼將示範如何使用<xref:System.Security.SecurityElement.SearchForChildByTag%2A>方法來尋找標籤名稱的子系。</span><span class="sxs-lookup"><span data-stu-id="0352c-236">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForChildByTag%2A> method to find a child by its tag name.</span></span> <span data-ttu-id="0352c-237">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.SecurityElement>類別。</span><span class="sxs-lookup"><span data-stu-id="0352c-237">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#17)]
 [!code-csharp[SecurityElementMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#17)]
 [!code-vb[SecurityElementMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0352c-238">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-238">The <paramref name="tag" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SearchForTextOfTag">
      <MemberSignature Language="C#" Value="public string SearchForTextOfTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SearchForTextOfTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForTextOfTag (tag As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SearchForTextOfTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForTextOfTag : string -&gt; string" Usage="securityElement.SearchForTextOfTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">
          <span data-ttu-id="0352c-239">The tag for which to search in child elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-239">The tag for which to search in child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0352c-240">Finds a child by its tag name and returns the contained text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-240">Finds a child by its tag name and returns the contained text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0352c-241">The text contents of the first child element with the specified tag value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-241">The text contents of the first child element with the specified tag value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-242">這個方法相當於下列：</span><span class="sxs-lookup"><span data-stu-id="0352c-242">This method is equivalent to the following:</span></span>  
  
 [!code-cpp[System.Security.SecurityElement#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securityelement/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.SecurityElement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securityelement/cs/remarks.cs#1)]
 [!code-vb[System.Security.SecurityElement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.securityelement/vb/remarks.vb#1)]  
  
 <span data-ttu-id="0352c-243">使用 XML，如下所示，`SearchForTextOfTag("second")`會傳回"文字 2"。</span><span class="sxs-lookup"><span data-stu-id="0352c-243">With XML as follows, `SearchForTextOfTag("second")` would return "text2".</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
    <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="0352c-244">下列程式碼將示範如何使用<xref:System.Security.SecurityElement.SearchForTextOfTag%2A>方法來尋找的子標籤名稱，並傳回所包含的文字。</span><span class="sxs-lookup"><span data-stu-id="0352c-244">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> method to find a child by its tag name and return the contained text.</span></span> <span data-ttu-id="0352c-245">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.SecurityElement>類別。</span><span class="sxs-lookup"><span data-stu-id="0352c-245">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#18](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#18)]
 [!code-csharp[SecurityElementMembers#18](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#18)]
 [!code-vb[SecurityElementMembers#18](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0352c-246">
            <paramref name="tag" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-246">
              <paramref name="tag" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : string with get, set" Usage="System.Security.SecurityElement.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0352c-247">Gets or sets the tag name of an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-247">Gets or sets the tag name of an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0352c-248">XML 項目的標記名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-248">The tag name of an XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-249">在 XML 中，標記會出現在下面顯示的指令碼：</span><span class="sxs-lookup"><span data-stu-id="0352c-249">In XML, the tag appears in the script as appears below:</span></span>  
  
```  
<tag attributes>text</tag>  
```  
  
 <span data-ttu-id="0352c-250">如果這個項目具有子項目，將會取代子系`text`。</span><span class="sxs-lookup"><span data-stu-id="0352c-250">If this element has child elements, the children will replace `text`.</span></span>  
  
 <span data-ttu-id="0352c-251">指定這個屬性才有效的 XML 標記字串。</span><span class="sxs-lookup"><span data-stu-id="0352c-251">Assign only valid XML tag strings to this property.</span></span> <span data-ttu-id="0352c-252">使用<xref:System.Security.SecurityElement.Escape%2A>從字串中移除無效的字元。</span><span class="sxs-lookup"><span data-stu-id="0352c-252">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0352c-253">下列程式碼將示範如何使用<xref:System.Security.SecurityElement.Tag%2A>屬性來取得 XML 項目的標記名稱。</span><span class="sxs-lookup"><span data-stu-id="0352c-253">The following code shows the use of the <xref:System.Security.SecurityElement.Tag%2A> property to get the tag name of an XML element.</span></span> <span data-ttu-id="0352c-254">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.SecurityElement>類別。</span><span class="sxs-lookup"><span data-stu-id="0352c-254">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#11)]
 [!code-csharp[SecurityElementMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#11)]
 [!code-vb[SecurityElementMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0352c-255">The tag is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-255">The tag is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0352c-256">The tag is not valid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-256">The tag is not valid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Security.SecurityElement.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0352c-257">Gets or sets the text within an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-257">Gets or sets the text within an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0352c-258">XML 項目內文字的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-258">The value of the text within an XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-259">文字不應該包含 XML 特殊字元。</span><span class="sxs-lookup"><span data-stu-id="0352c-259">The text should not contain XML special characters.</span></span> <span data-ttu-id="0352c-260">使用<xref:System.Security.SecurityElement.Escape%2A>從字串中移除無效的字元。</span><span class="sxs-lookup"><span data-stu-id="0352c-260">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="0352c-261">如果<xref:System.Security.SecurityElement>同時包含<xref:System.Security.SecurityElement.Text%2A>和<xref:System.Security.SecurityElement.Children%2A>，<xref:System.Security.SecurityElement.Text%2A>會先出現。</span><span class="sxs-lookup"><span data-stu-id="0352c-261">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0352c-262">下列程式碼將示範如何使用<xref:System.Security.SecurityElement.Text%2A>屬性來取得 XML 項目的文字。</span><span class="sxs-lookup"><span data-stu-id="0352c-262">The following code shows the use of the <xref:System.Security.SecurityElement.Text%2A> property to get the text of an XML element.</span></span> <span data-ttu-id="0352c-263">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.SecurityElement>類別。</span><span class="sxs-lookup"><span data-stu-id="0352c-263">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#12)]
 [!code-csharp[SecurityElementMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#12)]
 [!code-vb[SecurityElementMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0352c-264">The text is not valid in XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-264">The text is not valid in XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="securityElement.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0352c-265">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-265">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0352c-266">The XML element and its contents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0352c-266">The XML element and its contents.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0352c-267">這個方法適用於偵錯以查看元素的 XML 表示法。</span><span class="sxs-lookup"><span data-stu-id="0352c-267">This method is useful in debugging to see the XML representation of the element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>