<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CustomReflectionContext.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52cb0994464985332742e76a283814be590106a9b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2cb0994464985332742e76a283814be590106a9b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Represents a customizable reflection context.</source>
          <target state="translated">表示可自訂的反射內容。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source><ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> provides a way for you to add or remove custom attributes from reflection objects, or add dummy properties to those objects, without re-implementing the complete reflection model.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> 可讓您新增或移除反映物件中的自訂屬性或新增虛設屬性給那些物件，而不必重新實作完整反映模型。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>The default <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> simply wraps reflection objects without making any changes, but by subclassing and overriding the relevant methods, you can add, remove, or change the attributes that apply to any reflected parameter or member, or add new properties to a reflected type.</source>
          <target state="translated">預設值<ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph>只包裝反映物件而不進行任何變更，但子類別化並覆寫相關的方法，您可以新增、 移除或變更屬性套用至任何反映的參數或成員，或加入新的屬性以反映型別。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>For example, suppose that your code follows the convention of applying a particular attribute to factory methods, but you are now required to work with third-party code that lacks attributes.</source>
          <target state="translated">例如，假設您的程式碼會遵循的慣例套用特定的屬性，這些 factory 方法，但現在您必須使用缺少屬性的協力廠商程式碼。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>You can use <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> to specify a rule for identifying the objects that should have attributes and to supply the objects with those attributes when they are viewed from your code.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph>指定識別的物件具有屬性的規則，並提供具有這些屬性的物件，來檢視您的程式碼。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>To use <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> effectively, the code that uses the reflected objects must support the notion of specifying a reflection context, instead of assuming that all reflected objects are associated with the runtime reflection context.</source>
          <target state="translated">若要使用<ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph>有效地使用反映的物件的程式碼必須支援的反映內容，而不是假設所有反映物件與相關聯的執行階段反映內容所指定之概念。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Many reflection methods in the .NET Framework provide a <ph id="ph1">&lt;xref:System.Reflection.ReflectionContext&gt;</ph> parameter for this purpose.</source>
          <target state="translated">.NET Framework 中的許多反映方法提供<ph id="ph1">&lt;xref:System.Reflection.ReflectionContext&gt;</ph>針對此用途的參數。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>To modify the attributes that are applied to a reflected parameter or member, override the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt;</ph> method.</source>
          <target state="translated">若要修改套用至反映的參數或成員的屬性，覆寫<ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt;</ph>或<ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>These methods take the reflected object and the list of attributes under its current reflection context, and return the list of attributes it should have under the custom reflection context.</source>
          <target state="translated">這些方法會採用反映的物件和其目前的反映內容，在屬性清單，並傳回的屬性則不能有自訂的反映內容下的清單。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source><ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> methods should not access the list of attributes of a reflected object or method directly by calling the <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method on the provided <ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph> or <ph id="ph4">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> instance, but should instead use the <ph id="ph5">`declaredAttributes`</ph> list, which is passed as a parameter to the <ph id="ph6">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A&gt;</ph> method overloads.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> 方法不應該呼叫來直接存取的反映的物件或方法的屬性清單<ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph>至所提供的方法<ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph>或<ph id="ph4">&lt;xref:System.Reflection.ParameterInfo&gt;</ph>執行個體，但是應該改用<ph id="ph5">`declaredAttributes`</ph>清單，做為參數傳遞若要<ph id="ph6">&lt;xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A&gt;</ph>方法多載。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>To add properties to a reflected type, override the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> method.</source>
          <target state="translated">若要將屬性加入至反映型別，覆寫<ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>The method accepts a parameter that specifies the reflected type, and returns a list of additional properties.</source>
          <target state="translated">方法會接受參數，以指定反映型別，並傳回清單的其他屬性。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>You should use the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt;</ph> method to create property objects to return.</source>
          <target state="translated">您應該使用<ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt;</ph>方法來建立要傳回的屬性物件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>You can specify delegates when creating the property that will serve as the property accessor, and you can omit one of the accessors to create a read-only or write-only property.</source>
          <target state="translated">當建立屬性做為屬性存取子，而且您可以省略其中一個來建立唯讀或唯寫屬性存取子時，您可以指定委派。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Note that such dummy properties have no metadata or Common Intermediate Language (CIL) backing.</source>
          <target state="translated">請注意，這類虛設屬性沒有中繼資料或通用中繼語言 (CIL) 支援。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Be cautious about equality among reflected objects when you work with reflection contexts, because objects may represent the same reflected object in multiple contexts.</source>
          <target state="translated">小心反映物件之間的等號比較當您使用反映的內容，因為物件可能代表相同的反映的物件中多個內容。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>You can use the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.MapType%2A&gt;</ph> method to obtain a particular reflection context's version of a reflected object.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.MapType%2A&gt;</ph>方法，以取得特定的反映內容之版本的反映物件。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>A <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> object alters the attributes returned by a particular reflection object, such as those obtained by the <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph>物件更改屬性反映特定物件，例如所得到的傳回<ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>It does not alter the custom attribute data returned by the <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A&gt;</ph> method, and these two lists will not match when you use a custom reflection context.</source>
          <target state="translated">它並不會改變所傳回的自訂屬性資料<ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A&gt;</ph>方法，而且這兩個清單不會符合您使用自訂的反映內容時。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>The following example demonstrates how to subclass  <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph> to add a custom attribute to all the members of a given type whose names begin with "To".</source>
          <target state="translated">下列範例會示範如何以子類別<ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext&gt;</ph>將自訂屬性新增至指定的型別名稱開頭為"To"的所有成員。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>To run this code, paste it into an empty console project, and make sure to include a reference to System.Reflection.Context.dll.</source>
          <target state="translated">若要執行此程式碼，將它貼到空白主控台中的專案，並確定包含 System.Reflection.Context.dll 的參考。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)">
          <source>The reflection context to use as a base.</source>
          <target state="translated">要作為基礎的反射內容。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> class with the specified reflection context as a base.</source>
          <target state="translated">使用指定的反映內容為基底，初始化 <ph id="ph1">&lt;see cref="T:System.Reflection.Context.CustomReflectionContext" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>The type to add properties to.</source>
          <target state="translated">要在其中加入屬性的類型。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.</source>
          <target state="translated">在衍生類別中覆寫時，為指定的類型提供額外屬性集合，如這個反射內容所表示。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>A collection of additional properties for the specified type.</source>
          <target state="translated">所指定類型的其他屬性集合。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>Override this method to specify which properties should be added to a given type.</source>
          <target state="translated">覆寫這個方法，以指定哪些屬性應加入至指定的型別。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)">
          <source>To create the properties, use the <ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt;</ph> method.</source>
          <target state="translated">若要建立屬性，請使用<ph id="ph1">&lt;xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>Creates an object that represents a property to be added to a type, as specified by the <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">建立表示要加入至 <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> 方法所指定型別之屬性的物件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>The type of the property to create.</source>
          <target state="translated">要建立的屬性類型。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>The name of the property to create.</source>
          <target state="translated">要建立的屬性名稱。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>An object that represents the property's <ph id="ph1">&lt;see langword="get" /&gt;</ph> accessor.</source>
          <target state="translated">物件，表示屬性的 <ph id="ph1">&lt;see langword="get" /&gt;</ph> 存取子。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>An object that represents the property's <ph id="ph1">&lt;see langword="set" /&gt;</ph> accessor.</source>
          <target state="translated">物件，表示屬性的 <ph id="ph1">&lt;see langword="set" /&gt;</ph> 存取子。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>Creates an object that represents a property to be added to a type, to be used with the <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">建立表示要加入至型別之屬性的物件，該型別會搭配 <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> 方法使用。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>An object that represents the property.</source>
          <target state="translated">表示屬性的物件。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})">
          <source>Objects that are returned by this method are not complete <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> objects, and should be used only in the context of the <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> method.</source>
          <target state="translated">這個方法所傳回的物件不是完整<ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph>物件，並應該只在內容中使用<ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>The type of the property to create.</source>
          <target state="translated">要建立的屬性類型。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>The name of the property to create.</source>
          <target state="translated">要建立的屬性名稱。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>An object that represents the property's <ph id="ph1">&lt;see langword="get" /&gt;</ph> accessor.</source>
          <target state="translated">物件，表示屬性的 <ph id="ph1">&lt;see langword="get" /&gt;</ph> 存取子。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>An object that represents the property's <ph id="ph1">&lt;see langword="set" /&gt;</ph> accessor.</source>
          <target state="translated">物件，表示屬性的 <ph id="ph1">&lt;see langword="set" /&gt;</ph> 存取子。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>A collection of custom attributes to apply to the property.</source>
          <target state="translated">要套用至屬性 (Property) 之自訂屬性 (Attribute) 的集合。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>A collection of custom attributes to apply to the property's <ph id="ph1">&lt;see langword="get" /&gt;</ph> accessor.</source>
          <target state="translated">要套用至屬性 (Property) 的 <ph id="ph1">&lt;see langword="get" /&gt;</ph> 存取子之自訂屬性 (Attribute) 的集合。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>A collection of custom attributes to apply to the property's <ph id="ph1">&lt;see langword="set" /&gt;</ph> accessor.</source>
          <target state="translated">要套用至屬性 (Property) 的 <ph id="ph1">&lt;see langword="set" /&gt;</ph> 存取子之自訂屬性 (Attribute) 的集合。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>Creates an object that represents a property to be added to a type, to be used with the <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> method and using the specified custom attributes.</source>
          <target state="translated">建立表示要加入至型別之屬性 (Property) 的物件，該型別會搭配 <ph id="ph1">&lt;see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /&gt;</ph> 方法使用且使用指定的自訂屬性 (Attribute)。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>An object that represents the property.</source>
          <target state="translated">表示屬性的物件。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})">
          <source>Objects that are returned by this method are not complete <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> objects, and should be used only in the context of the <ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph> method.</source>
          <target state="translated">這個方法所傳回的物件不是完整<ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph>物件，並應該只在內容中使用<ph id="ph2">&lt;xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="T:System.Reflection.Context.CustomReflectionContext">
          <source>When overridden in a derived class, provides a modified collection of custom attributes for the specified object, as represented in this reflection context.</source>
          <target state="translated">在衍生類別中覆寫時，為指定的物件提供修改過的自訂屬性集合，如這個反射內容所表示。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>The member whose custom attributes will be returned.</source>
          <target state="translated">會傳回其自訂屬性的成員。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>A collection of the member's attributes in its current context.</source>
          <target state="translated">成員在其目前內容中的屬性集合。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.</source>
          <target state="translated">在衍生類別中覆寫時，為指定的成員提供自訂屬性清單，如這個反射內容所表示。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>A collection that represents the custom attributes of the specified member in this reflection context.</source>
          <target state="translated">表示此反射內容中指定成員之自訂屬性的集合。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>The parameter whose custom attributes will be returned.</source>
          <target state="translated">會傳回其自訂屬性的參數。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>A collection of the parameter's attributes in its current context.</source>
          <target state="translated">參數在其目前內容中的屬性集合。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.</source>
          <target state="translated">在衍生類別中覆寫時，為指定的參數提供自訂屬性的清單，如這個反射內容所表示。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <source>A collection that represents the custom attributes of the specified parameter in this reflection context.</source>
          <target state="translated">表示此反射內容中指定參數之自訂屬性的集合。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)">
          <source>The external representation of the assembly to represent in this context.</source>
          <target state="translated">要在此內容中表示之組件的外部表示。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)">
          <source>Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.</source>
          <target state="translated">取得此反射內容中由來自另一個反射內容的物件所代表的表示。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)">
          <source>The representation of the assembly in this reflection context.</source>
          <target state="translated">此反射內容中的組件表示。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)">
          <source>The external representation of the type to represent in this context.</source>
          <target state="translated">要在此內容中表示之型別的外部表示。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)">
          <source>Gets the representation, in this reflection context, of a type represented by an object from another reflection context.</source>
          <target state="translated">取得此反射內容中由來自另一個反射內容的物件所代表的型別表示。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)">
          <source>The representation of the type in this reflection context.</source>
          <target state="translated">此反射內容中的型別表示。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>