<Type Name="CustomReflectionContext" FullName="System.Reflection.Context.CustomReflectionContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ec87b13a560e1c0a80cb426d7ea2d94c9b63f49" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48634350" /></Metadata><TypeSignature Language="C#" Value="public abstract class CustomReflectionContext : System.Reflection.ReflectionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CustomReflectionContext extends System.Reflection.ReflectionContext" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Context.CustomReflectionContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CustomReflectionContext&#xA;Inherits ReflectionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomReflectionContext abstract : System::Reflection::ReflectionContext" />
  <TypeSignature Language="F#" Value="type CustomReflectionContext = class&#xA;    inherit ReflectionContext" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Context</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.ReflectionContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e1cd1-101">表示可自訂的反射內容。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-101">Represents a customizable reflection context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1cd1-102"><xref:System.Reflection.Context.CustomReflectionContext> 可讓您新增或移除反映物件中的自訂屬性，或將這些物件中的虛擬屬性，而不需要重新實作完整的反映模型。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-102"><xref:System.Reflection.Context.CustomReflectionContext> provides a way for you to add or remove custom attributes from reflection objects, or add dummy properties to those objects, without re-implementing the complete reflection model.</span></span> <span data-ttu-id="e1cd1-103">預設值<xref:System.Reflection.Context.CustomReflectionContext>只包裝反映物件而不進行任何變更，但藉由子類別化及覆寫相關的方法，您可以新增、 移除或變更套用至任何反映的參數或成員的屬性或加入新的屬性，以反映型別。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-103">The default <xref:System.Reflection.Context.CustomReflectionContext> simply wraps reflection objects without making any changes, but by subclassing and overriding the relevant methods, you can add, remove, or change the attributes that apply to any reflected parameter or member, or add new properties to a reflected type.</span></span>  
  
 <span data-ttu-id="e1cd1-104">例如，假設您的程式碼會遵循的慣例，這些 factory 方法，套用特定的屬性，但現在您必須使用協力廠商程式碼缺少屬性。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-104">For example, suppose that your code follows the convention of applying a particular attribute to factory methods, but you are now required to work with third-party code that lacks attributes.</span></span> <span data-ttu-id="e1cd1-105">您可以使用<xref:System.Reflection.Context.CustomReflectionContext>以指定的規則，以識別具有屬性的物件，並提供具有這些屬性的物件，來檢視您的程式碼。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-105">You can use <xref:System.Reflection.Context.CustomReflectionContext> to specify a rule for identifying the objects that should have attributes and to supply the objects with those attributes when they are viewed from your code.</span></span>  
  
 <span data-ttu-id="e1cd1-106">若要使用<xref:System.Reflection.Context.CustomReflectionContext>有效地使用反映的物件的程式碼必須支援指定的反映內容，而不是假設所有反映物件都是相關聯的執行階段反映內容的概念。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-106">To use <xref:System.Reflection.Context.CustomReflectionContext> effectively, the code that uses the reflected objects must support the notion of specifying a reflection context, instead of assuming that all reflected objects are associated with the runtime reflection context.</span></span> <span data-ttu-id="e1cd1-107">.NET Framework 中的許多反映方法提供<xref:System.Reflection.ReflectionContext>針對此用途的參數。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-107">Many reflection methods in the .NET Framework provide a <xref:System.Reflection.ReflectionContext> parameter for this purpose.</span></span>  
  
 <span data-ttu-id="e1cd1-108">若要修改套用至反映的參數或成員的屬性，覆寫<xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29>或<xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-108">To modify the attributes that are applied to a reflected parameter or member, override the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> or <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> method.</span></span> <span data-ttu-id="e1cd1-109">這些方法會採用反映後的物件和其目前的反映內容，在屬性清單，並傳回它應該在自訂反映內容的屬性清單。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-109">These methods take the reflected object and the list of attributes under its current reflection context, and return the list of attributes it should have under the custom reflection context.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="e1cd1-110"><xref:System.Reflection.Context.CustomReflectionContext> 方法不應該存取的反映的物件或方法的屬性清單直接藉由呼叫<xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>所提供的方法<xref:System.Reflection.MemberInfo>或是<xref:System.Reflection.ParameterInfo>執行個體，但應該改為使用`declaredAttributes`清單中，做為參數傳遞若要<xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-110"><xref:System.Reflection.Context.CustomReflectionContext> methods should not access the list of attributes of a reflected object or method directly by calling the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the provided <xref:System.Reflection.MemberInfo> or <xref:System.Reflection.ParameterInfo> instance, but should instead use the `declaredAttributes` list, which is passed as a parameter to the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e1cd1-111">若要將屬性加入至反映型別中，覆寫<xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-111">To add properties to a reflected type, override the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span> <span data-ttu-id="e1cd1-112">方法會接受參數指定的反映型別，並傳回一份額外的屬性。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-112">The method accepts a parameter that specifies the reflected type, and returns a list of additional properties.</span></span> <span data-ttu-id="e1cd1-113">您應該使用<xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A>方法用來建立要傳回的屬性物件。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-113">You should use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method to create property objects to return.</span></span> <span data-ttu-id="e1cd1-114">建立屬性並使其將做為屬性存取子，而且您可以省略其中一個來建立唯讀或唯寫屬性存取子時，您可以指定委派。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-114">You can specify delegates when creating the property that will serve as the property accessor, and you can omit one of the accessors to create a read-only or write-only property.</span></span> <span data-ttu-id="e1cd1-115">請注意，這類虛擬屬性沒有中繼資料或通用中間語言 (CIL) 支援。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-115">Note that such dummy properties have no metadata or Common Intermediate Language (CIL) backing.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="e1cd1-116">留意反映物件之間的等號比較當您使用反映的內容，因為物件可能代表反映後的相同物件，在多個內容中。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-116">Be cautious about equality among reflected objects when you work with reflection contexts, because objects may represent the same reflected object in multiple contexts.</span></span> <span data-ttu-id="e1cd1-117">您可以使用<xref:System.Reflection.Context.CustomReflectionContext.MapType%2A>方法，以取得特定的反映內容的版本反映後的物件。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-117">You can use the <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> method to obtain a particular reflection context's version of a reflected object.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="e1cd1-118">A<xref:System.Reflection.Context.CustomReflectionContext>物件會改變傳回特定的反映物件，例如所得到的屬性<xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-118">A <xref:System.Reflection.Context.CustomReflectionContext> object alters the attributes returned by a particular reflection object, such as those obtained by the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method.</span></span> <span data-ttu-id="e1cd1-119">它不會變更所傳回的自訂屬性資料<xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A>方法，而這兩個清單不會符合當您使用自訂的反射內容。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-119">It does not alter the custom attribute data returned by the <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> method, and these two lists will not match when you use a custom reflection context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1cd1-120">下列範例示範如何以子類別<xref:System.Reflection.Context.CustomReflectionContext>將自訂屬性新增至指定的型別名稱開頭為"To"的所有成員。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-120">The following example demonstrates how to subclass  <xref:System.Reflection.Context.CustomReflectionContext> to add a custom attribute to all the members of a given type whose names begin with "To".</span></span> <span data-ttu-id="e1cd1-121">若要執行此程式碼，將它貼到空白主控台中的專案，並請務必包含 System.Reflection.Context.dll 的參考。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-121">To run this code, paste it into an empty console project, and make sure to include a reference to System.Reflection.Context.dll.</span></span>  
  
 [!code-csharp[System.Reflection.Context.CustomReflectionContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.context.customreflectioncontext/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e1cd1-122">初始化 <see cref="T:System.Reflection.Context.CustomReflectionContext" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-122">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomReflectionContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomReflectionContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1cd1-123">初始化 <see cref="T:System.Reflection.Context.CustomReflectionContext" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-123">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomReflectionContext (System.Reflection.ReflectionContext source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ReflectionContext source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomReflectionContext(System::Reflection::ReflectionContext ^ source);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Context.CustomReflectionContext : System.Reflection.ReflectionContext -&gt; System.Reflection.Context.CustomReflectionContext" Usage="new System.Reflection.Context.CustomReflectionContext source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e1cd1-124">要作為基礎的反射內容。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-124">The reflection context to use as a base.</span></span></param>
        <summary><span data-ttu-id="e1cd1-125">使用指定的反映內容為基底，初始化 <see cref="T:System.Reflection.Context.CustomReflectionContext" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-125">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class with the specified reflection context as a base.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperties">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt; AddProperties (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.PropertyInfo&gt; AddProperties(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Reflection::PropertyInfo ^&gt; ^ AddProperties(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member AddProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;&#xA;override this.AddProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;" Usage="customReflectionContext.AddProperties type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Reflection.Context.CustomReflectionContext/&lt;AddProperties&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Reflection.Context.CustomReflectionContext/&lt;AddProperties&gt;d__8))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e1cd1-126">要在其中加入屬性的類型。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-126">The type to add properties to.</span></span></param>
        <summary><span data-ttu-id="e1cd1-127">在衍生類別中覆寫時，為指定的類型提供額外屬性集合，如這個反射內容所表示。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-127">When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="e1cd1-128">所指定類型的其他屬性集合。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-128">A collection of additional properties for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1cd1-129">覆寫這個方法，以指定哪些屬性應新增至指定的型別。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-129">Override this method to specify which properties should be added to a given type.</span></span> <span data-ttu-id="e1cd1-130">若要建立屬性，請使用<xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-130">To create the properties, use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProperty">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e1cd1-131">建立表示要加入至 <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> 方法所指定型別之屬性的物件。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-131">Creates an object that represents a property to be added to a type, as specified by the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func&lt;object,object&gt; getter, Action&lt;object,object&gt; setter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Reflection.PropertyInfo CreateProperty(class System.Type propertyType, string name, class System.Func`2&lt;object, object&gt; getter, class System.Action`2&lt;object, object&gt; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateProperty (propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object)) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Reflection::PropertyInfo ^ CreateProperty(Type ^ propertyType, System::String ^ name, Func&lt;System::Object ^, System::Object ^&gt; ^ getter, Action&lt;System::Object ^, System::Object ^&gt; ^ setter);" />
      <MemberSignature Language="F#" Value="member this.CreateProperty : Type * string * Func&lt;obj, obj&gt; * Action&lt;obj, obj&gt; -&gt; System.Reflection.PropertyInfo" Usage="customReflectionContext.CreateProperty (propertyType, name, getter, setter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getter" Type="System.Func&lt;System.Object,System.Object&gt;" />
        <Parameter Name="setter" Type="System.Action&lt;System.Object,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyType"><span data-ttu-id="e1cd1-132">要建立的屬性類型。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-132">The type of the property to create.</span></span></param>
        <param name="name"><span data-ttu-id="e1cd1-133">要建立的屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-133">The name of the property to create.</span></span></param>
        <param name="getter"><span data-ttu-id="e1cd1-134">物件，表示屬性的 <see langword="get" /> 存取子。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-134">An object that represents the property's <see langword="get" /> accessor.</span></span></param>
        <param name="setter"><span data-ttu-id="e1cd1-135">物件，表示屬性的 <see langword="set" /> 存取子。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-135">An object that represents the property's <see langword="set" /> accessor.</span></span></param>
        <summary><span data-ttu-id="e1cd1-136">建立表示要加入至型別之屬性的物件，該型別會搭配 <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> 方法使用。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-136">Creates an object that represents a property to be added to a type, to be used with the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method.</span></span></summary>
        <returns><span data-ttu-id="e1cd1-137">表示屬性的物件。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-137">An object that represents the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1cd1-138">這個方法所傳回的物件不是完整<xref:System.Reflection.PropertyInfo>物件，而且只用於內容<xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-138">Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func&lt;object,object&gt; getter, Action&lt;object,object&gt; setter, System.Collections.Generic.IEnumerable&lt;Attribute&gt; propertyCustomAttributes, System.Collections.Generic.IEnumerable&lt;Attribute&gt; getterCustomAttributes, System.Collections.Generic.IEnumerable&lt;Attribute&gt; setterCustomAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Reflection.PropertyInfo CreateProperty(class System.Type propertyType, string name, class System.Func`2&lt;object, object&gt; getter, class System.Action`2&lt;object, object&gt; setter, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; propertyCustomAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; getterCustomAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; setterCustomAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateProperty (propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object), propertyCustomAttributes As IEnumerable(Of Attribute), getterCustomAttributes As IEnumerable(Of Attribute), setterCustomAttributes As IEnumerable(Of Attribute)) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Reflection::PropertyInfo ^ CreateProperty(Type ^ propertyType, System::String ^ name, Func&lt;System::Object ^, System::Object ^&gt; ^ getter, Action&lt;System::Object ^, System::Object ^&gt; ^ setter, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ propertyCustomAttributes, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ getterCustomAttributes, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ setterCustomAttributes);" />
      <MemberSignature Language="F#" Value="member this.CreateProperty : Type * string * Func&lt;obj, obj&gt; * Action&lt;obj, obj&gt; * seq&lt;Attribute&gt; * seq&lt;Attribute&gt; * seq&lt;Attribute&gt; -&gt; System.Reflection.PropertyInfo" Usage="customReflectionContext.CreateProperty (propertyType, name, getter, setter, propertyCustomAttributes, getterCustomAttributes, setterCustomAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getter" Type="System.Func&lt;System.Object,System.Object&gt;" />
        <Parameter Name="setter" Type="System.Action&lt;System.Object,System.Object&gt;" />
        <Parameter Name="propertyCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="getterCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="setterCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyType"><span data-ttu-id="e1cd1-139">要建立的屬性類型。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-139">The type of the property to create.</span></span></param>
        <param name="name"><span data-ttu-id="e1cd1-140">要建立的屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-140">The name of the property to create.</span></span></param>
        <param name="getter"><span data-ttu-id="e1cd1-141">物件，表示屬性的 <see langword="get" /> 存取子。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-141">An object that represents the property's <see langword="get" /> accessor.</span></span></param>
        <param name="setter"><span data-ttu-id="e1cd1-142">物件，表示屬性的 <see langword="set" /> 存取子。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-142">An object that represents the property's <see langword="set" /> accessor.</span></span></param>
        <param name="propertyCustomAttributes"><span data-ttu-id="e1cd1-143">要套用至屬性 (Property) 之自訂屬性 (Attribute) 的集合。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-143">A collection of custom attributes to apply to the property.</span></span></param>
        <param name="getterCustomAttributes"><span data-ttu-id="e1cd1-144">要套用至屬性 (Property) 的 <see langword="get" /> 存取子之自訂屬性 (Attribute) 的集合。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-144">A collection of custom attributes to apply to the property's <see langword="get" /> accessor.</span></span></param>
        <param name="setterCustomAttributes"><span data-ttu-id="e1cd1-145">要套用至屬性 (Property) 的 <see langword="set" /> 存取子之自訂屬性 (Attribute) 的集合。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-145">A collection of custom attributes to apply to the property's <see langword="set" /> accessor.</span></span></param>
        <summary><span data-ttu-id="e1cd1-146">建立表示要加入至型別之屬性 (Property) 的物件，該型別會搭配 <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> 方法使用且使用指定的自訂屬性 (Attribute)。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-146">Creates an object that represents a property to be added to a type, to be used with the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method and using the specified custom attributes.</span></span></summary>
        <returns><span data-ttu-id="e1cd1-147">表示屬性的物件。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-147">An object that represents the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1cd1-148">這個方法所傳回的物件不是完整<xref:System.Reflection.PropertyInfo>物件，而且只用於內容<xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-148">Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e1cd1-149">在衍生類別中覆寫時，為指定的物件提供修改過的自訂屬性集合，如這個反射內容所表示。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-149">When overridden in a derived class, provides a modified collection of custom attributes for the specified object, as represented in this reflection context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.MemberInfo member, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomAttributes (member As MemberInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ member, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : System.Reflection.MemberInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;&#xA;override this.GetCustomAttributes : System.Reflection.MemberInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;" Usage="customReflectionContext.GetCustomAttributes (member, declaredAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="e1cd1-150">會傳回其自訂屬性的成員。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-150">The member whose custom attributes will be returned.</span></span></param>
        <param name="declaredAttributes"><span data-ttu-id="e1cd1-151">成員在其目前內容中的屬性集合。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-151">A collection of the member's attributes in its current context.</span></span></param>
        <summary><span data-ttu-id="e1cd1-152">在衍生類別中覆寫時，為指定的成員提供自訂屬性清單，如這個反射內容所表示。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-152">When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="e1cd1-153">表示此反射內容中指定成員之自訂屬性的集合。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-153">A collection that represents the custom attributes of the specified member in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.ParameterInfo parameter, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.ParameterInfo parameter, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomAttributes (parameter As ParameterInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ parameter, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : System.Reflection.ParameterInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;&#xA;override this.GetCustomAttributes : System.Reflection.ParameterInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;" Usage="customReflectionContext.GetCustomAttributes (parameter, declaredAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="e1cd1-154">會傳回其自訂屬性的參數。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-154">The parameter whose custom attributes will be returned.</span></span></param>
        <param name="declaredAttributes"><span data-ttu-id="e1cd1-155">參數在其目前內容中的屬性集合。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-155">A collection of the parameter's attributes in its current context.</span></span></param>
        <summary><span data-ttu-id="e1cd1-156">在衍生類別中覆寫時，為指定的參數提供自訂屬性的清單，如這個反射內容所表示。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-156">When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="e1cd1-157">表示此反射內容中指定參數之自訂屬性的集合。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-157">A collection that represents the custom attributes of the specified parameter in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly MapAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly MapAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ MapAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="override this.MapAssembly : System.Reflection.Assembly -&gt; System.Reflection.Assembly" Usage="customReflectionContext.MapAssembly assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="e1cd1-158">要在此內容中表示之組件的外部表示。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-158">The external representation of the assembly to represent in this context.</span></span></param>
        <summary><span data-ttu-id="e1cd1-159">取得此反射內容中由來自另一個反射內容的物件所代表的表示。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-159">Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.</span></span></summary>
        <returns><span data-ttu-id="e1cd1-160">此反射內容中的組件表示。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-160">The representation of the assembly in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapType">
      <MemberSignature Language="C#" Value="public override System.Reflection.TypeInfo MapType (System.Reflection.TypeInfo type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.TypeInfo MapType(class System.Reflection.TypeInfo type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MapType (type As TypeInfo) As TypeInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::TypeInfo ^ MapType(System::Reflection::TypeInfo ^ type);" />
      <MemberSignature Language="F#" Value="override this.MapType : System.Reflection.TypeInfo -&gt; System.Reflection.TypeInfo" Usage="customReflectionContext.MapType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.TypeInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e1cd1-161">要在此內容中表示之型別的外部表示。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-161">The external representation of the type to represent in this context.</span></span></param>
        <summary><span data-ttu-id="e1cd1-162">取得此反射內容中由來自另一個反射內容的物件所代表的型別表示。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-162">Gets the representation, in this reflection context, of a type represented by an object from another reflection context.</span></span></summary>
        <returns><span data-ttu-id="e1cd1-163">此反射內容中的型別表示。</span><span class="sxs-lookup"><span data-stu-id="e1cd1-163">The representation of the type in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>