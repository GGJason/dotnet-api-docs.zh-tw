<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeCatalog.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5140546595f85119b9c7fecd5b191a3c99bfe05f2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">140546595f85119b9c7fecd5b191a3c99bfe05f2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.TypeCatalog">
          <source>Discovers attributed parts from a collection of types.</source>
          <target state="translated">探索類型集合中的屬性化組件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.TypeCatalog">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">此類型會實作<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.TypeCatalog">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">當您完成使用類型時，您應該會處置它直接或間接。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.TypeCatalog">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">若要直接處置的類型，呼叫其<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>方法中的<ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>區塊。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.TypeCatalog">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">若要為其配置間接，使用語言建構例如<ph id="ph1">`using`</ph>（C# 中） 或<ph id="ph2">`Using`</ph>（在 Visual Basic)。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.TypeCatalog">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">如需詳細資訊，請參閱中的 「 使用物件的實作 IDisposable 」 一節<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>介面 &gt; 主題。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.TypeCatalog">
          <source>This class is thread safe.</source>
          <target state="translated">這個類別是安全執行緒。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.TypeCatalog">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type})">
          <source>A collection of attributed <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects to add to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> object.</source>
          <target state="translated">要加入至 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 物件的屬性 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> 物件集合。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> class with the specified types.</source>
          <target state="translated">使用指定的型別來初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type})">
          <source><ph id="ph1">&lt;paramref name="types" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="types" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type})">
          <source><ph id="ph1">&lt;paramref name="types" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="types" /&gt;</ph> 包含是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type})">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type})">
          <source><ph id="ph1">&lt;paramref name="types" /&gt;</ph> contains an element that was loaded in the reflection-only context.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="types" /&gt;</ph> 包含已載入僅限反映的內容中的項目。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Type[])">
          <source>An array of attributed <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects to add to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> object.</source>
          <target state="translated">要加入至 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 物件的屬性 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> 物件陣列。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Type[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> class with the specified types.</source>
          <target state="translated">使用指定的型別來初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Type[])">
          <source><ph id="ph1">&lt;paramref name="types" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="types" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Type[])">
          <source><ph id="ph1">&lt;paramref name="types" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="types" /&gt;</ph> 包含是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Type[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Type[])">
          <source><ph id="ph1">&lt;paramref name="types" /&gt;</ph> contains an element that was loaded in the reflection-only context.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="types" /&gt;</ph> 包含已載入僅限反映的內容中的項目。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ICompositionElement)">
          <source>A collection of attributed <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects to add to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> object.</source>
          <target state="translated">要加入至 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 物件的屬性 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> 物件集合。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ICompositionElement)">
          <source>An element used by diagnostics to identify the source for parts.</source>
          <target state="translated">診斷用來識別組件來源的項目。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ICompositionElement)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> class with the specified types and source for parts.</source>
          <target state="translated">使用指定的型別和組件來源，初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ICompositionElement)">
          <source><ph id="ph1">&lt;paramref name="types" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="types" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ICompositionElement)">
          <source><ph id="ph1">&lt;paramref name="types" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="types" /&gt;</ph> 包含是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ICompositionElement)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ICompositionElement)">
          <source><ph id="ph1">&lt;paramref name="types" /&gt;</ph> contains an element that was loaded in the reflection-only context.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="types" /&gt;</ph> 包含已載入僅限反映的內容中的項目。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext)">
          <source>A collection of attributed <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects to add to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> object.</source>
          <target state="translated">要加入至 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 物件的屬性 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> 物件集合。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext)">
          <source>The context used to interpret the types.</source>
          <target state="translated">要用於解譯型別的內容。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> class with the specified types in the specified reflection context.</source>
          <target state="translated">使用指定反映內容中的指定型別，初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext)">
          <source><ph id="ph1">&lt;paramref name="types" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="types" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext)">
          <source><ph id="ph1">&lt;paramref name="types" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="types" /&gt;</ph> 包含是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext)">
          <source><ph id="ph1">&lt;paramref name="types" /&gt;</ph> contains an element that was loaded in the reflection-only context.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="types" /&gt;</ph> 包含已載入僅限反映的內容中的項目。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)">
          <source>A collection of attributed <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects to add to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> object.</source>
          <target state="translated">要加入至 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 物件的屬性 <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> 物件集合。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)">
          <source>The context used to interpret the types.</source>
          <target state="translated">要用於解譯型別的內容。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)">
          <source>An element used by diagnostics to identify the source for parts.</source>
          <target state="translated">診斷用來識別組件來源的項目。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> class with the specified types in the specified reflection context and source for parts.</source>
          <target state="translated">使用組件的指定反映內容和來源中的指定型別，初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)">
          <source><ph id="ph1">&lt;paramref name="types" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="types" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)">
          <source><ph id="ph1">&lt;paramref name="types" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="types" /&gt;</ph> 包含是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 的項目。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)">
          <source><ph id="ph1">&lt;paramref name="types" /&gt;</ph> contains an element that was loaded in the reflection-only context.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="types" /&gt;</ph> 包含已載入僅限反映的內容中的項目。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.GetEnumerator">
          <source>Returns an enumerator that iterates through the catalog.</source>
          <target state="translated">傳回可在目錄中逐一查看的列舉程式。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.GetEnumerator">
          <source>An enumerator that can be used to iterate through the catalog.</source>
          <target state="translated">可用來逐一查看目錄的列舉值。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName">
          <source>Gets the display name of the type catalog.</source>
          <target state="translated">取得類型目錄的顯示名稱。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName">
          <source>A string containing a human-readable display name of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph>.</source>
          <target state="translated">一個包含人類看得懂的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /&gt;</ph> 顯示名稱的字串。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.TypeCatalog&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Primitives.ICompositionElement&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.TypeCatalog&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Primitives.ICompositionElement&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin">
          <source>Gets the composition element from which the type catalog originated.</source>
          <target state="translated">取得從其中產生類型目錄的撰寫項目。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin">
          <source>Always <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">一定是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.TypeCatalog&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Primitives.ICompositionElement&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.TypeCatalog&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Primitives.ICompositionElement&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.ToString">
          <source>Returns a string representation of the type catalog.</source>
          <target state="translated">傳回類型目錄的字串表示。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.TypeCatalog.ToString">
          <source>A string representation of the type catalog.</source>
          <target state="translated">類型目錄的字串表示。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>