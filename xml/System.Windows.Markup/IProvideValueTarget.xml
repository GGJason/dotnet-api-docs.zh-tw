<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IProvideValueTarget.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fe449848bcdce05ca59b27ae4a3b23e50137f9b6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe449848bcdce05ca59b27ae4a3b23e50137f9b6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Represents a service that reports situational object-property relationships for markup extension evaluation.</source>
          <target state="translated">表示會報告標記延伸評估的環境物件屬性關聯性的服務。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> represents a service that reports information regarding the object-property structure surrounding where a value converter is invoked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> 表示會報告有關物件屬性結構，周圍會在叫用的值轉換器的服務。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Type converters and markup extensions can query for <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</source>
          <target state="translated">類型轉換器和標記延伸可以查詢<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>XAML 物件寫入器叫用的值轉換行為時，會將 XAML 物件寫入器所提供的服務內容上以服務。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>For more information, see <bpt id="p1">[</bpt>Type Converters and Markup Extensions for XAML<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept> and <bpt id="p2">[</bpt>Service Contexts Available to Type Converters and Markup Extensions<ept id="p2">](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>類型轉換器和 XAML 的標記延伸<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept>和<bpt id="p2">[</bpt>適用於類型轉換器和標記延伸<ept id="p2">](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>For markup extensions specifically, a scenario where <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> is useful is to determine the validity of your markup extension's situational usage.</source>
          <target state="translated">標記延伸的具體而言，案例其中<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>適合用來判斷標記延伸的情境使用方式的有效性是。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>For example, your markup extension might implement a value deferral mechanism, but using that mechanism might only be appropriate if the target object is capable of using other components of your deferral mechanism at run time.</source>
          <target state="translated">例如，標記延伸可以實作值延遲機制，但該機制可能只適合使用是否能夠使用延遲機制的其他元件在執行階段的目標物件。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>You could check the type system characteristics of the object returned as <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> and make sure that object supports your deferral technique.</source>
          <target state="translated">您可以檢查做為傳回之物件的型別系統特性<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph>，並確定該物件支援延遲技術。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>If so, your markup extension returns a value, and if not, your markup extension throws an exception that will be picked up as an inner exception by a XAML object writer.</source>
          <target state="translated">如果是這樣，標記延伸傳回值，且如果不是，標記延伸擲回例外狀況，將會收取當做內部例外狀況的 XAML 物件寫入器。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>A similar scenario is assuring that a particular property supports a capability, by checking type system characteristics of the <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph>.</source>
          <target state="translated">類似的狀況特定的屬性，藉由檢查型別系統特性的支援功能，以確保<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Although the API name <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> might imply an association with <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType&gt;</ph>, the information reported by <ph id="ph3">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> can also be useful to a <ph id="ph4">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>.</source>
          <target state="translated">雖然 API 名稱<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>可能暗示關聯<ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType&gt;</ph>，回報資訊<ph id="ph3">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>也很有用<ph id="ph4">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>或<ph id="ph5">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> typically have more context than a markup extension because they are dedicated to a particular target type or target property, and thus the situational validity is usually predictable in the type system.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>專為特定目標型別或目標屬性，因為通常有多個內容的標記延伸，因此那樣的有效型別系統中，通常可預測。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>However, other scenarios exist.</source>
          <target state="translated">不過，存在其他案例。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>The following is a list of some scenarios that might be implemented by either a type converter or a markup extension:</source>
          <target state="translated">以下是可能會由型別轉換子或標記延伸實作某些案例的清單：</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Get <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> to read instance values of other properties on that object.</source>
          <target state="translated">取得<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph>讀取該物件上的其他屬性的執行個體值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Note that your handling here might need to be robust for unset values, because the processing order of XAML members on the target object can be nondeterministic.</source>
          <target state="translated">請注意，您的處理可能需要將要很穩固未設定值，因為 XAML 成員的目標物件上的處理順序不具決定性。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Get <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> to read type-level metadata, or to verify that required interfaces are implemented by the type.</source>
          <target state="translated">取得<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph>讀取類型層級中繼資料，或是確認所需的介面由型別。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Get <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph> to read property metadata.</source>
          <target state="translated">取得<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph>讀取屬性中繼資料。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>One scenario is to use <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> information to limit which objects or properties are permitted to be set by your markup extension.</source>
          <target state="translated">其中一個案例是使用<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>限制允許哪些物件或屬性來標記延伸設定的資訊。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Before attempting to use the service, make sure that the service itself is not <ph id="ph1">`null`</ph> when returned by the relevant service provider parameter you are using for context.</source>
          <target state="translated">使用服務，請先確定服務本身不是<ph id="ph1">`null`</ph>傳回相關的服務提供者參數時您使用的內容。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>When using the service, it is particularly important not to modify the object referenced by the <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> property, or other objects referenced by that object.</source>
          <target state="translated">使用服務時，它是特別重要，不能修改所參考的物件<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph>屬性或該物件所參考的其他物件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>For WPF specifically, these changes could cause unexpected changes that would invalidate the WPF property system.</source>
          <target state="translated">Wpf 具體來說，這些變更可能會導致非預期的變更會破壞 WPF 屬性系統。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Do not use the type of <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph> to determine which precise type a markup extension or type converter should return.</source>
          <target state="translated">不使用的型別<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph>應該傳回以判斷精確哪種類型的標記延伸或類型轉換器。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>That is not a best practice.</source>
          <target state="translated">這不是最佳作法。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Your return type should be consistent with attributing (<ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> for markup extensions) or patterns (class name of the type converter).</source>
          <target state="translated">傳回型別應該與設定其屬性一致 (<ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph>標記延伸) 或模式 （型別轉換子的類別名稱）。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</source>
          <target state="translated">在舊版的.NET Framework 中，這個介面會存在於 WindowsBase WPF 專屬組件中。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> is in the System.Xaml assembly.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>，<ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>位於 System.Xaml 組件中。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>從 WPF 移轉至 System.Xaml 的類型<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>WPF Usage Notes</source>
          <target state="translated">WPF 使用注意事項</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>This service supports framework features such as binding on a dependency property.</source>
          <target state="translated">此服務支援 framework 功能，例如繫結相依性屬性。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>In WPF, the service represented by <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> can return objects and properties for situations where the value to return from a markup extension or type converter depends on context.</source>
          <target state="translated">在 WPF 中，服務由<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>可以傳回物件和屬性的情況下，要從標記延伸或類型轉換器所傳回的值取決於內容。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> is leveraged heavily in the internal implementation of <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase&gt;</ph>, the class that implements the binding mechanism for dependency properties in WPF.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> 在內部實作中的大量可用<ph id="ph2">&lt;xref:System.Windows.Data.BindingBase&gt;</ph>，實作相依性屬性的繫結機制，在 WPF 中的類別。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>A default internal service provider for WPF implements <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> for usage by a custom markup extension or type converter.</source>
          <target state="translated">WPF 實作的預設內部服務提供者<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>由自訂標記延伸或類型轉換器的使用方式。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>The object and property reported by <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> can only be set by the internal WPF service.</source>
          <target state="translated">物件和屬性所報告<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>只能由內部 WPF 服務設定。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Going beyond this definition of how <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> operates would require defining your own service provider for markup extension and type converter usages that implements at the very least the <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph> services, and that is an advanced scenario that is not described here.</source>
          <target state="translated">除了這個定義的方式之外<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>運作需要定義至少在實作您自己服務提供者的標記延伸和類型轉換器的使用方式<ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph>服務和也就是進階此處未描述的案例。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>A null value for <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> does not necessarily mean that a markup extension or type converter cannot act, although that depends on your implementation.</source>
          <target state="translated">Null 值<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph>不一定表示，並不是標記延伸或類型轉換器，雖然會視您的實作。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>An example case where the values from <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> are null even if the service is available is if your markup extension is nested within another markup extension, such as a <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>.</source>
          <target state="translated">範例情況中的值<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>null 即使該服務是如果標記延伸會巢狀另一個標記延伸，例如<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>An implementation that relies on <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> should always check for null values if only for the purpose of throwing a specific exception, if that is your intended design.</source>
          <target state="translated">實作依賴<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>，請務必檢查針對 null 值，如果只擲回特定例外狀況，如果是您預定的設計。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
          <source>Gets the target object being reported.</source>
          <target state="translated">取得正在報告的目標物件。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
          <source>The target object being reported.</source>
          <target state="translated">正在報告的目標物件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
          <source>The value returned by <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> is the actual reference, not a type system identifier or other identifier.</source>
          <target state="translated">所傳回的值<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph>是實際的參考、 不是型別系統識別項或其他識別碼。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
          <source>The value can also be <ph id="ph1">`null`</ph>; see <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>.</source>
          <target state="translated">這個值也可以是<ph id="ph1">`null`</ph>; 請參閱<ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
          <source>When using the service, it is particularly important not to modify the object referenced by the <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> property, or other objects referenced by that object as properties that are not specifically the value-conversion case you are handling.</source>
          <target state="translated">使用服務時，它是特別重要，不能修改所參考的物件<ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph>屬性或不明確的值轉換屬性情況下，您為該物件參考其他物件所處理。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
          <source>For WPF specifically, changing the target object could cause unexpected changes that would invalidate the WPF  property system.</source>
          <target state="translated">Wpf 具體來說，變更目標物件可能會導致非預期的變更會破壞 WPF 屬性系統。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
          <source>Gets an identifier for the target property being reported.</source>
          <target state="translated">取得所要報告之目標屬性的識別項。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
          <source>An identifier for the target property being reported.</source>
          <target state="translated">所要報告之目標屬性的識別項。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
          <source>The value can also be <ph id="ph1">`null`</ph>; see <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>.</source>
          <target state="translated">這個值也可以是<ph id="ph1">`null`</ph>; 請參閱<ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
          <source>WPF Usage Notes</source>
          <target state="translated">WPF 使用注意事項</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
          <source>For a dependency property, the default WPF service may return a <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>, such that the markup extension or type converter can use metadata.</source>
          <target state="translated">相依性屬性的預設 WPF 服務可能會傳回<ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>，例如標記延伸或類型轉換器可以使用中繼資料。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
          <source>Otherwise, the returned object can be a <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> for a CLR property.</source>
          <target state="translated">否則，傳回的物件可以是<ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph>CLR 屬性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>