<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ee33577ac89d42592b4312a85b5bb89b3f04916" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004474" /></Metadata><TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <TypeSignature Language="F#" Value="type IProvideValueTarget = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示會報告標記延伸評估的環境物件屬性關聯性的服務。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IProvideValueTarget> 表示報表物件屬性結構，周圍會在叫用的值轉換器的相關資訊的服務。  
  
 類型轉換器和標記延伸可以查詢<xref:System.Windows.Markup.IProvideValueTarget>為 XAML 物件寫入器叫用的值轉換行為時，會將 XAML 物件寫入器中，所提供的服務內容上的服務。 如需詳細資訊，請參閱 < [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)並[Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)。  
  
 標記延伸模組的具體而言，案例其中<xref:System.Windows.Markup.IProvideValueTarget>適合是判斷有效性的標記延伸的環境的使用方式。 比方說，您的標記延伸模組可能會實作值延遲機制，但使用該機制可能只是適當的目標物件是否能夠在執行階段使用延遲機制的其他元件。 您可以檢查傳回的物件的型別系統特性<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>並確定該物件支援延遲的技巧。 如果是這樣，您的標記延伸模組會傳回值，以及如果不是，標記延伸會擲回的例外狀況，將會收取當做內部例外狀況的 XAML 物件寫入器。 特定的屬性，支援藉由檢查型別系統特性的功能，以確保類似的狀況<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>。  
  
 雖然 API 名稱<xref:System.Windows.Markup.IProvideValueTarget>之關聯中可能暗示<xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>，所報告的資訊<xref:System.Windows.Markup.IProvideValueTarget>也可用來<xref:System.ComponentModel.TypeConverter>或<xref:System.Windows.Markup.ValueSerializer>。 A<xref:System.ComponentModel.TypeConverter>或<xref:System.Windows.Markup.ValueSerializer>通常具有比標記延伸的詳細內容，因為它們專用於特定的目標型別或目標屬性，因此局勢有效型別系統中通常可預測。 不過，其他情況下存在。 以下是一些案例，可能會實作類型轉換器或標記延伸模組的清單：  
  
-   取得<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>讀取該物件上的其他屬性的執行個體值。 請注意，您的處理可能需要強固取消設定的值，因為 XAML 成員的目標物件上的處理順序可以是不具決定性。  
  
-   取得<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>讀取類型層級中繼資料，或確認必要的介面由型別。  
  
-   取得<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>讀取屬性中繼資料。  
  
 其中一個案例是使用<xref:System.Windows.Markup.IProvideValueTarget>限制允許哪些物件或屬性來標記延伸設定的資訊。  
  
 使用服務，請先確定服務本身不`null`傳回相關的服務提供者參數時您會使用內容。  
  
> [!IMPORTANT]
>  使用服務時，就不能修改所參考的物件特別重要<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>屬性或該物件所參考的其他物件。 WPF 的具體來說，這些變更可能會導致非預期的變更會破壞 WPF 屬性系統。  
  
> [!NOTE]
>  不使用的型別<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>應該傳回以判斷精確哪種類型的標記延伸或類型轉換器。 這不是最佳的作法。 傳回型別應該是與屬性一致 (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>標記延伸模組) 或模式 （型別轉換子類別名稱）。  
  
 在舊版的.NET Framework 中，此介面會存在於 WindowsBase WPF 特定組件中。 在  [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]， <xref:System.Windows.Markup.IProvideValueTarget> System.Xaml 組件中。 如需詳細資訊，請參閱 [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)。  
  
## <a name="wpf-usage-notes"></a>WPF 使用注意事項  
 此服務會支援 framework 功能，例如繫結相依性屬性。  
  
 在 WPF 中，服務由<xref:System.Windows.Markup.IProvideValueTarget>可傳回物件和屬性的情況下，從標記延伸或類型轉換子傳回的值取決於內容。  
  
 <xref:System.Windows.Markup.IProvideValueTarget> 大量運用在內部實作<xref:System.Windows.Data.BindingBase>，實作相依性屬性的繫結機制，在 WPF 中的類別。  
  
 WPF 實作的預設內部的服務提供者<xref:System.Windows.Markup.IProvideValueTarget>由自訂標記延伸或類型轉換器的使用方式。 所報告的物件和屬性<xref:System.Windows.Markup.IProvideValueTarget>只能由內部的 WPF 服務設定。 超越此定義的方式<xref:System.Windows.Markup.IProvideValueTarget>運作需要定義您自己服務提供者的標記延伸模組和類型轉換器的使用方式可實作最起碼<xref:System.Windows.Markup.IProvideValueTarget>和<xref:System.Windows.Markup.IXamlTypeResolver>服務和也就是一種進階未在此處描述的案例。  
  
 Null 值<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>或<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>不一定表示，無法做為標記延伸或類型轉換子，雖然這取決於您的實作。 範例案例的位置中的值<xref:System.Windows.Markup.IProvideValueTarget>都是 null 即使該服務是如果您的標記延伸模組巢狀在另一個標記延伸，例如<xref:System.Windows.Data.Binding>。 實作依賴<xref:System.Windows.Markup.IProvideValueTarget>針對 null 值，如果只為了擲回特定例外狀況，如果是您預定的設計要隨時檢查。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得正在報告的目標物件。</summary>
        <value>正在報告的目標物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所傳回的值<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>的實際參考，而不是型別系統識別項或其他識別項。 值可以也`null`; 請參閱<xref:System.Windows.Markup.IProvideValueTarget>。  
  
> [!IMPORTANT]
>  使用服務時，就不能修改所參考的物件特別重要<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>處理屬性或該物件所參考的屬性沒有特別的值轉換的情況下，您因為其他物件。 WPF 的具體而言，變更目標物件可能會導致非預期的變更會破壞 WPF 屬性系統。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">XAML 類型轉換器或標記延伸</related>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetProperty : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得所要報告之目標屬性的識別項。</summary>
        <value>所要報告之目標屬性的識別項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值可以也`null`; 請參閱<xref:System.Windows.Markup.IProvideValueTarget>。  
  
## <a name="wpf-usage-notes"></a>WPF 使用注意事項  
 相依性屬性，可能會傳回預設 WPF 服務<xref:System.Windows.DependencyProperty>，使得標記延伸或類型轉換器可以使用中繼資料。 否則，傳回的物件可以是<xref:System.Reflection.PropertyInfo>CLR 屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">XAML 類型轉換器或標記延伸</related>
      </Docs>
    </Member>
  </Members>
</Type>