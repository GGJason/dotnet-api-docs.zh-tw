<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c97b7c2ed539ea717b0aab0adc17b547c77d1c7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36502900" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <TypeSignature Language="F#" Value="type IProvideValueTarget = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="75ade-101">表示會報告標記延伸評估的環境物件屬性關聯性的服務。</span>
      <span class="sxs-lookup">
        <span data-stu-id="75ade-101">Represents a service that reports situational object-property relationships for markup extension evaluation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75ade-102"><xref:System.Windows.Markup.IProvideValueTarget> 表示會報告有關物件屬性結構，周圍會在叫用的值轉換器的服務。</span><span class="sxs-lookup"><span data-stu-id="75ade-102"><xref:System.Windows.Markup.IProvideValueTarget> represents a service that reports information regarding the object-property structure surrounding where a value converter is invoked.</span></span>  
  
 <span data-ttu-id="75ade-103">類型轉換器和標記延伸可以查詢<xref:System.Windows.Markup.IProvideValueTarget>XAML 物件寫入器叫用的值轉換行為時，會將 XAML 物件寫入器所提供的服務內容上以服務。</span><span class="sxs-lookup"><span data-stu-id="75ade-103">Type converters and markup extensions can query for <xref:System.Windows.Markup.IProvideValueTarget> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="75ade-104">如需詳細資訊，請參閱[類型轉換器和 XAML 的標記延伸](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)和[適用於類型轉換器和標記延伸](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)。</span><span class="sxs-lookup"><span data-stu-id="75ade-104">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="75ade-105">標記延伸的具體而言，案例其中<xref:System.Windows.Markup.IProvideValueTarget>適合用來判斷標記延伸的情境使用方式的有效性是。</span><span class="sxs-lookup"><span data-stu-id="75ade-105">For markup extensions specifically, a scenario where <xref:System.Windows.Markup.IProvideValueTarget> is useful is to determine the validity of your markup extension's situational usage.</span></span> <span data-ttu-id="75ade-106">例如，標記延伸可以實作值延遲機制，但該機制可能只適合使用是否能夠使用延遲機制的其他元件在執行階段的目標物件。</span><span class="sxs-lookup"><span data-stu-id="75ade-106">For example, your markup extension might implement a value deferral mechanism, but using that mechanism might only be appropriate if the target object is capable of using other components of your deferral mechanism at run time.</span></span> <span data-ttu-id="75ade-107">您可以檢查做為傳回之物件的型別系統特性<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>，並確定該物件支援延遲技術。</span><span class="sxs-lookup"><span data-stu-id="75ade-107">You could check the type system characteristics of the object returned as <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> and make sure that object supports your deferral technique.</span></span> <span data-ttu-id="75ade-108">如果是這樣，標記延伸傳回值，且如果不是，標記延伸擲回例外狀況，將會收取當做內部例外狀況的 XAML 物件寫入器。</span><span class="sxs-lookup"><span data-stu-id="75ade-108">If so, your markup extension returns a value, and if not, your markup extension throws an exception that will be picked up as an inner exception by a XAML object writer.</span></span> <span data-ttu-id="75ade-109">類似的狀況特定的屬性，藉由檢查型別系統特性的支援功能，以確保<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>。</span><span class="sxs-lookup"><span data-stu-id="75ade-109">A similar scenario is assuring that a particular property supports a capability, by checking type system characteristics of the <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.</span></span>  
  
 <span data-ttu-id="75ade-110">雖然 API 名稱<xref:System.Windows.Markup.IProvideValueTarget>可能暗示關聯<xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>，回報資訊<xref:System.Windows.Markup.IProvideValueTarget>也很有用<xref:System.ComponentModel.TypeConverter>或<xref:System.Windows.Markup.ValueSerializer>。</span><span class="sxs-lookup"><span data-stu-id="75ade-110">Although the API name <xref:System.Windows.Markup.IProvideValueTarget> might imply an association with <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, the information reported by <xref:System.Windows.Markup.IProvideValueTarget> can also be useful to a <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="75ade-111">A<xref:System.ComponentModel.TypeConverter>或<xref:System.Windows.Markup.ValueSerializer>專為特定目標型別或目標屬性，因為通常有多個內容的標記延伸，因此那樣的有效型別系統中，通常可預測。</span><span class="sxs-lookup"><span data-stu-id="75ade-111">A <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.ValueSerializer> typically have more context than a markup extension because they are dedicated to a particular target type or target property, and thus the situational validity is usually predictable in the type system.</span></span> <span data-ttu-id="75ade-112">不過，存在其他案例。</span><span class="sxs-lookup"><span data-stu-id="75ade-112">However, other scenarios exist.</span></span> <span data-ttu-id="75ade-113">以下是可能會由型別轉換子或標記延伸實作某些案例的清單：</span><span class="sxs-lookup"><span data-stu-id="75ade-113">The following is a list of some scenarios that might be implemented by either a type converter or a markup extension:</span></span>  
  
-   <span data-ttu-id="75ade-114">取得<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>讀取該物件上的其他屬性的執行個體值。</span><span class="sxs-lookup"><span data-stu-id="75ade-114">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> to read instance values of other properties on that object.</span></span> <span data-ttu-id="75ade-115">請注意，您的處理可能需要將要很穩固未設定值，因為 XAML 成員的目標物件上的處理順序不具決定性。</span><span class="sxs-lookup"><span data-stu-id="75ade-115">Note that your handling here might need to be robust for unset values, because the processing order of XAML members on the target object can be nondeterministic.</span></span>  
  
-   <span data-ttu-id="75ade-116">取得<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>讀取類型層級中繼資料，或是確認所需的介面由型別。</span><span class="sxs-lookup"><span data-stu-id="75ade-116">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> to read type-level metadata, or to verify that required interfaces are implemented by the type.</span></span>  
  
-   <span data-ttu-id="75ade-117">取得<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>讀取屬性中繼資料。</span><span class="sxs-lookup"><span data-stu-id="75ade-117">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> to read property metadata.</span></span>  
  
 <span data-ttu-id="75ade-118">其中一個案例是使用<xref:System.Windows.Markup.IProvideValueTarget>限制允許哪些物件或屬性來標記延伸設定的資訊。</span><span class="sxs-lookup"><span data-stu-id="75ade-118">One scenario is to use <xref:System.Windows.Markup.IProvideValueTarget> information to limit which objects or properties are permitted to be set by your markup extension.</span></span>  
  
 <span data-ttu-id="75ade-119">使用服務，請先確定服務本身不是`null`傳回相關的服務提供者參數時您使用的內容。</span><span class="sxs-lookup"><span data-stu-id="75ade-119">Before attempting to use the service, make sure that the service itself is not `null` when returned by the relevant service provider parameter you are using for context.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="75ade-120">使用服務時，它是特別重要，不能修改所參考的物件<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>屬性或該物件所參考的其他物件。</span><span class="sxs-lookup"><span data-stu-id="75ade-120">When using the service, it is particularly important not to modify the object referenced by the <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> property, or other objects referenced by that object.</span></span> <span data-ttu-id="75ade-121">Wpf 具體來說，這些變更可能會導致非預期的變更會破壞 WPF 屬性系統。</span><span class="sxs-lookup"><span data-stu-id="75ade-121">For WPF specifically, these changes could cause unexpected changes that would invalidate the WPF property system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="75ade-122">不使用的型別<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>應該傳回以判斷精確哪種類型的標記延伸或類型轉換器。</span><span class="sxs-lookup"><span data-stu-id="75ade-122">Do not use the type of <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> to determine which precise type a markup extension or type converter should return.</span></span> <span data-ttu-id="75ade-123">這不是最佳作法。</span><span class="sxs-lookup"><span data-stu-id="75ade-123">That is not a best practice.</span></span> <span data-ttu-id="75ade-124">傳回型別應該與設定其屬性一致 (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>標記延伸) 或模式 （型別轉換子的類別名稱）。</span><span class="sxs-lookup"><span data-stu-id="75ade-124">Your return type should be consistent with attributing (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> for markup extensions) or patterns (class name of the type converter).</span></span>  
  
 <span data-ttu-id="75ade-125">在舊版的.NET Framework 中，這個介面會存在於 WindowsBase WPF 專屬組件中。</span><span class="sxs-lookup"><span data-stu-id="75ade-125">In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="75ade-126">在[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，<xref:System.Windows.Markup.IProvideValueTarget>位於 System.Xaml 組件中。</span><span class="sxs-lookup"><span data-stu-id="75ade-126">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> is in the System.Xaml assembly.</span></span> <span data-ttu-id="75ade-127">如需詳細資訊，請參閱[從 WPF 移轉至 System.Xaml 的類型](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)。</span><span class="sxs-lookup"><span data-stu-id="75ade-127">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="75ade-128">WPF 使用注意事項</span><span class="sxs-lookup"><span data-stu-id="75ade-128">WPF Usage Notes</span></span>  
 <span data-ttu-id="75ade-129">此服務支援 framework 功能，例如繫結相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="75ade-129">This service supports framework features such as binding on a dependency property.</span></span>  
  
 <span data-ttu-id="75ade-130">在 WPF 中，服務由<xref:System.Windows.Markup.IProvideValueTarget>可以傳回物件和屬性的情況下，要從標記延伸或類型轉換器所傳回的值取決於內容。</span><span class="sxs-lookup"><span data-stu-id="75ade-130">In WPF, the service represented by <xref:System.Windows.Markup.IProvideValueTarget> can return objects and properties for situations where the value to return from a markup extension or type converter depends on context.</span></span>  
  
 <span data-ttu-id="75ade-131"><xref:System.Windows.Markup.IProvideValueTarget> 在內部實作中的大量可用<xref:System.Windows.Data.BindingBase>，實作相依性屬性的繫結機制，在 WPF 中的類別。</span><span class="sxs-lookup"><span data-stu-id="75ade-131"><xref:System.Windows.Markup.IProvideValueTarget> is leveraged heavily in the internal implementation of <xref:System.Windows.Data.BindingBase>, the class that implements the binding mechanism for dependency properties in WPF.</span></span>  
  
 <span data-ttu-id="75ade-132">WPF 實作的預設內部服務提供者<xref:System.Windows.Markup.IProvideValueTarget>由自訂標記延伸或類型轉換器的使用方式。</span><span class="sxs-lookup"><span data-stu-id="75ade-132">A default internal service provider for WPF implements <xref:System.Windows.Markup.IProvideValueTarget> for usage by a custom markup extension or type converter.</span></span> <span data-ttu-id="75ade-133">物件和屬性所報告<xref:System.Windows.Markup.IProvideValueTarget>只能由內部 WPF 服務設定。</span><span class="sxs-lookup"><span data-stu-id="75ade-133">The object and property reported by <xref:System.Windows.Markup.IProvideValueTarget> can only be set by the internal WPF service.</span></span> <span data-ttu-id="75ade-134">除了這個定義的方式之外<xref:System.Windows.Markup.IProvideValueTarget>運作需要定義至少在實作您自己服務提供者的標記延伸和類型轉換器的使用方式<xref:System.Windows.Markup.IProvideValueTarget>和<xref:System.Windows.Markup.IXamlTypeResolver>服務和也就是進階此處未描述的案例。</span><span class="sxs-lookup"><span data-stu-id="75ade-134">Going beyond this definition of how <xref:System.Windows.Markup.IProvideValueTarget> operates would require defining your own service provider for markup extension and type converter usages that implements at the very least the <xref:System.Windows.Markup.IProvideValueTarget> and <xref:System.Windows.Markup.IXamlTypeResolver> services, and that is an advanced scenario that is not described here.</span></span>  
  
 <span data-ttu-id="75ade-135">Null 值<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>或<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>不一定表示，並不是標記延伸或類型轉換器，雖然會視您的實作。</span><span class="sxs-lookup"><span data-stu-id="75ade-135">A null value for <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> or <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> does not necessarily mean that a markup extension or type converter cannot act, although that depends on your implementation.</span></span> <span data-ttu-id="75ade-136">範例情況中的值<xref:System.Windows.Markup.IProvideValueTarget>null 即使該服務是如果標記延伸會巢狀另一個標記延伸，例如<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="75ade-136">An example case where the values from <xref:System.Windows.Markup.IProvideValueTarget> are null even if the service is available is if your markup extension is nested within another markup extension, such as a <xref:System.Windows.Data.Binding>.</span></span> <span data-ttu-id="75ade-137">實作依賴<xref:System.Windows.Markup.IProvideValueTarget>，請務必檢查針對 null 值，如果只擲回特定例外狀況，如果是您預定的設計。</span><span class="sxs-lookup"><span data-stu-id="75ade-137">An implementation that relies on <xref:System.Windows.Markup.IProvideValueTarget> should always check for null values if only for the purpose of throwing a specific exception, if that is your intended design.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75ade-138">取得正在報告的目標物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75ade-138">Gets the target object being reported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75ade-139">正在報告的目標物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75ade-139">The target object being reported.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75ade-140">所傳回的值<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>是實際的參考、 不是型別系統識別項或其他識別碼。</span><span class="sxs-lookup"><span data-stu-id="75ade-140">The value returned by <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> is the actual reference, not a type system identifier or other identifier.</span></span> <span data-ttu-id="75ade-141">這個值也可以是`null`; 請參閱<xref:System.Windows.Markup.IProvideValueTarget>。</span><span class="sxs-lookup"><span data-stu-id="75ade-141">The value can also be `null`; see <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="75ade-142">使用服務時，它是特別重要，不能修改所參考的物件<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>屬性或不明確的值轉換屬性情況下，您為該物件參考其他物件所處理。</span><span class="sxs-lookup"><span data-stu-id="75ade-142">When using the service, it is particularly important not to modify the object referenced by the <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> property, or other objects referenced by that object as properties that are not specifically the value-conversion case you are handling.</span></span> <span data-ttu-id="75ade-143">Wpf 具體來說，變更目標物件可能會導致非預期的變更會破壞 WPF 屬性系統。</span><span class="sxs-lookup"><span data-stu-id="75ade-143">For WPF specifically, changing the target object could cause unexpected changes that would invalidate the WPF  property system.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetProperty : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75ade-144">取得所要報告之目標屬性的識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75ade-144">Gets an identifier for the target property being reported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75ade-145">所要報告之目標屬性的識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75ade-145">An identifier for the target property being reported.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75ade-146">這個值也可以是`null`; 請參閱<xref:System.Windows.Markup.IProvideValueTarget>。</span><span class="sxs-lookup"><span data-stu-id="75ade-146">The value can also be `null`; see <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="75ade-147">WPF 使用注意事項</span><span class="sxs-lookup"><span data-stu-id="75ade-147">WPF Usage Notes</span></span>  
 <span data-ttu-id="75ade-148">相依性屬性的預設 WPF 服務可能會傳回<xref:System.Windows.DependencyProperty>，例如標記延伸或類型轉換器可以使用中繼資料。</span><span class="sxs-lookup"><span data-stu-id="75ade-148">For a dependency property, the default WPF service may return a <xref:System.Windows.DependencyProperty>, such that the markup extension or type converter can use metadata.</span></span> <span data-ttu-id="75ade-149">否則，傳回的物件可以是<xref:System.Reflection.PropertyInfo>CLR 屬性。</span><span class="sxs-lookup"><span data-stu-id="75ade-149">Otherwise, the returned object can be a <xref:System.Reflection.PropertyInfo> for a CLR property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>