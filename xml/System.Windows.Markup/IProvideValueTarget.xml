<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c07a67f28f82e1d372f2cd2ead988fc1f3ed34e4" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51911935" /></Metadata><TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <TypeSignature Language="F#" Value="type IProvideValueTarget = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9f0f0-101">表示可報告情境式物件-屬性關聯性來評估標記延伸的服務。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-101">Represents a service that reports situational object-property relationships for markup extension evaluation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0f0-102"><xref:System.Windows.Markup.IProvideValueTarget> 表示報表物件屬性結構，周圍會在叫用的值轉換器的相關資訊的服務。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-102"><xref:System.Windows.Markup.IProvideValueTarget> represents a service that reports information regarding the object-property structure surrounding where a value converter is invoked.</span></span>  
  
 <span data-ttu-id="9f0f0-103">類型轉換器和標記延伸可以查詢<xref:System.Windows.Markup.IProvideValueTarget>為 XAML 物件寫入器叫用的值轉換行為時，會將 XAML 物件寫入器中，所提供的服務內容上的服務。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-103">Type converters and markup extensions can query for <xref:System.Windows.Markup.IProvideValueTarget> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="9f0f0-104">如需詳細資訊，請參閱 < [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)並[Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-104">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="9f0f0-105">標記延伸模組的具體而言，案例其中<xref:System.Windows.Markup.IProvideValueTarget>適合是判斷有效性的標記延伸的環境的使用方式。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-105">For markup extensions specifically, a scenario where <xref:System.Windows.Markup.IProvideValueTarget> is useful is to determine the validity of your markup extension's situational usage.</span></span> <span data-ttu-id="9f0f0-106">比方說，您的標記延伸模組可能會實作值延遲機制，但使用該機制可能只是適當的目標物件是否能夠在執行階段使用延遲機制的其他元件。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-106">For example, your markup extension might implement a value deferral mechanism, but using that mechanism might only be appropriate if the target object is capable of using other components of your deferral mechanism at run time.</span></span> <span data-ttu-id="9f0f0-107">您可以檢查傳回的物件的型別系統特性<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>並確定該物件支援延遲的技巧。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-107">You could check the type system characteristics of the object returned as <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> and make sure that object supports your deferral technique.</span></span> <span data-ttu-id="9f0f0-108">如果是這樣，您的標記延伸模組會傳回值，以及如果不是，標記延伸會擲回的例外狀況，將會收取當做內部例外狀況的 XAML 物件寫入器。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-108">If so, your markup extension returns a value, and if not, your markup extension throws an exception that will be picked up as an inner exception by a XAML object writer.</span></span> <span data-ttu-id="9f0f0-109">特定的屬性，支援藉由檢查型別系統特性的功能，以確保類似的狀況<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-109">A similar scenario is assuring that a particular property supports a capability, by checking type system characteristics of the <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.</span></span>  
  
 <span data-ttu-id="9f0f0-110">雖然 API 名稱<xref:System.Windows.Markup.IProvideValueTarget>之關聯中可能暗示<xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>，所報告的資訊<xref:System.Windows.Markup.IProvideValueTarget>也可用來<xref:System.ComponentModel.TypeConverter>或<xref:System.Windows.Markup.ValueSerializer>。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-110">Although the API name <xref:System.Windows.Markup.IProvideValueTarget> might imply an association with <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, the information reported by <xref:System.Windows.Markup.IProvideValueTarget> can also be useful to a <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="9f0f0-111">A<xref:System.ComponentModel.TypeConverter>或<xref:System.Windows.Markup.ValueSerializer>通常具有比標記延伸的詳細內容，因為它們專用於特定的目標型別或目標屬性，因此局勢有效型別系統中通常可預測。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-111">A <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.ValueSerializer> typically have more context than a markup extension because they are dedicated to a particular target type or target property, and thus the situational validity is usually predictable in the type system.</span></span> <span data-ttu-id="9f0f0-112">不過，其他情況下存在。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-112">However, other scenarios exist.</span></span> <span data-ttu-id="9f0f0-113">以下是一些案例，可能會實作類型轉換器或標記延伸模組的清單：</span><span class="sxs-lookup"><span data-stu-id="9f0f0-113">The following is a list of some scenarios that might be implemented by either a type converter or a markup extension:</span></span>  
  
-   <span data-ttu-id="9f0f0-114">取得<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>讀取該物件上的其他屬性的執行個體值。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-114">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> to read instance values of other properties on that object.</span></span> <span data-ttu-id="9f0f0-115">請注意，您的處理可能需要強固取消設定的值，因為 XAML 成員的目標物件上的處理順序可以是不具決定性。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-115">Note that your handling here might need to be robust for unset values, because the processing order of XAML members on the target object can be nondeterministic.</span></span>  
  
-   <span data-ttu-id="9f0f0-116">取得<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>讀取類型層級中繼資料，或確認必要的介面由型別。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-116">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> to read type-level metadata, or to verify that required interfaces are implemented by the type.</span></span>  
  
-   <span data-ttu-id="9f0f0-117">取得<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>讀取屬性中繼資料。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-117">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> to read property metadata.</span></span>  
  
 <span data-ttu-id="9f0f0-118">其中一個案例是使用<xref:System.Windows.Markup.IProvideValueTarget>限制允許哪些物件或屬性來標記延伸設定的資訊。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-118">One scenario is to use <xref:System.Windows.Markup.IProvideValueTarget> information to limit which objects or properties are permitted to be set by your markup extension.</span></span>  
  
 <span data-ttu-id="9f0f0-119">使用服務，請先確定服務本身不`null`傳回相關的服務提供者參數時您會使用內容。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-119">Before attempting to use the service, make sure that the service itself is not `null` when returned by the relevant service provider parameter you are using for context.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f0f0-120">使用服務時，就不能修改所參考的物件特別重要<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>屬性或該物件所參考的其他物件。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-120">When using the service, it is particularly important not to modify the object referenced by the <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> property, or other objects referenced by that object.</span></span> <span data-ttu-id="9f0f0-121">WPF 的具體來說，這些變更可能會導致非預期的變更會破壞 WPF 屬性系統。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-121">For WPF specifically, these changes could cause unexpected changes that would invalidate the WPF property system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f0f0-122">不使用的型別<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>應該傳回以判斷精確哪種類型的標記延伸或類型轉換器。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-122">Do not use the type of <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> to determine which precise type a markup extension or type converter should return.</span></span> <span data-ttu-id="9f0f0-123">這不是最佳的作法。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-123">That is not a best practice.</span></span> <span data-ttu-id="9f0f0-124">傳回型別應該是與屬性一致 (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>標記延伸模組) 或模式 （型別轉換子類別名稱）。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-124">Your return type should be consistent with attributing (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> for markup extensions) or patterns (class name of the type converter).</span></span>  
  
 <span data-ttu-id="9f0f0-125">在舊版的.NET Framework 中，此介面會存在於 WindowsBase WPF 特定組件中。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-125">In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="9f0f0-126">在  [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]， <xref:System.Windows.Markup.IProvideValueTarget> System.Xaml 組件中。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-126">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> is in the System.Xaml assembly.</span></span> <span data-ttu-id="9f0f0-127">如需詳細資訊，請參閱 [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-127">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="9f0f0-128">WPF 使用注意事項</span><span class="sxs-lookup"><span data-stu-id="9f0f0-128">WPF Usage Notes</span></span>  
 <span data-ttu-id="9f0f0-129">此服務會支援 framework 功能，例如繫結相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-129">This service supports framework features such as binding on a dependency property.</span></span>  
  
 <span data-ttu-id="9f0f0-130">在 WPF 中，服務由<xref:System.Windows.Markup.IProvideValueTarget>可傳回物件和屬性的情況下，從標記延伸或類型轉換子傳回的值取決於內容。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-130">In WPF, the service represented by <xref:System.Windows.Markup.IProvideValueTarget> can return objects and properties for situations where the value to return from a markup extension or type converter depends on context.</span></span>  
  
 <span data-ttu-id="9f0f0-131"><xref:System.Windows.Markup.IProvideValueTarget> 大量運用在內部實作<xref:System.Windows.Data.BindingBase>，實作相依性屬性的繫結機制，在 WPF 中的類別。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-131"><xref:System.Windows.Markup.IProvideValueTarget> is leveraged heavily in the internal implementation of <xref:System.Windows.Data.BindingBase>, the class that implements the binding mechanism for dependency properties in WPF.</span></span>  
  
 <span data-ttu-id="9f0f0-132">WPF 實作的預設內部的服務提供者<xref:System.Windows.Markup.IProvideValueTarget>由自訂標記延伸或類型轉換器的使用方式。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-132">A default internal service provider for WPF implements <xref:System.Windows.Markup.IProvideValueTarget> for usage by a custom markup extension or type converter.</span></span> <span data-ttu-id="9f0f0-133">所報告的物件和屬性<xref:System.Windows.Markup.IProvideValueTarget>只能由內部的 WPF 服務設定。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-133">The object and property reported by <xref:System.Windows.Markup.IProvideValueTarget> can only be set by the internal WPF service.</span></span> <span data-ttu-id="9f0f0-134">超越此定義的方式<xref:System.Windows.Markup.IProvideValueTarget>運作需要定義您自己服務提供者的標記延伸模組和類型轉換器的使用方式可實作最起碼<xref:System.Windows.Markup.IProvideValueTarget>和<xref:System.Windows.Markup.IXamlTypeResolver>服務和也就是一種進階未在此處描述的案例。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-134">Going beyond this definition of how <xref:System.Windows.Markup.IProvideValueTarget> operates would require defining your own service provider for markup extension and type converter usages that implements at the very least the <xref:System.Windows.Markup.IProvideValueTarget> and <xref:System.Windows.Markup.IXamlTypeResolver> services, and that is an advanced scenario that is not described here.</span></span>  
  
 <span data-ttu-id="9f0f0-135">Null 值<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>或<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>不一定表示，無法做為標記延伸或類型轉換子，雖然這取決於您的實作。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-135">A null value for <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> or <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> does not necessarily mean that a markup extension or type converter cannot act, although that depends on your implementation.</span></span> <span data-ttu-id="9f0f0-136">範例案例的位置中的值<xref:System.Windows.Markup.IProvideValueTarget>都是 null 即使該服務是如果您的標記延伸模組巢狀在另一個標記延伸，例如<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-136">An example case where the values from <xref:System.Windows.Markup.IProvideValueTarget> are null even if the service is available is if your markup extension is nested within another markup extension, such as a <xref:System.Windows.Data.Binding>.</span></span> <span data-ttu-id="9f0f0-137">實作依賴<xref:System.Windows.Markup.IProvideValueTarget>針對 null 值，如果只為了擲回特定例外狀況，如果是您預定的設計要隨時檢查。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-137">An implementation that relies on <xref:System.Windows.Markup.IProvideValueTarget> should always check for null values if only for the purpose of throwing a specific exception, if that is your intended design.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0f0-138">取得正在報告的目標物件。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-138">Gets the target object being reported.</span></span></summary>
        <value><span data-ttu-id="9f0f0-139">正在報告的目標物件。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-139">The target object being reported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0f0-140">所傳回的值<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>的實際參考，而不是型別系統識別項或其他識別項。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-140">The value returned by <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> is the actual reference, not a type system identifier or other identifier.</span></span> <span data-ttu-id="9f0f0-141">值可以也`null`; 請參閱<xref:System.Windows.Markup.IProvideValueTarget>。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-141">The value can also be `null`; see <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f0f0-142">使用服務時，就不能修改所參考的物件特別重要<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>處理屬性或該物件所參考的屬性沒有特別的值轉換的情況下，您因為其他物件。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-142">When using the service, it is particularly important not to modify the object referenced by the <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> property, or other objects referenced by that object as properties that are not specifically the value-conversion case you are handling.</span></span> <span data-ttu-id="9f0f0-143">WPF 的具體而言，變更目標物件可能會導致非預期的變更會破壞 WPF 屬性系統。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-143">For WPF specifically, changing the target object could cause unexpected changes that would invalidate the WPF  property system.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326"><span data-ttu-id="9f0f0-144">XAML 類型轉換器或標記延伸</span><span class="sxs-lookup"><span data-stu-id="9f0f0-144">Type Converters or Markup Extensions for XAML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetProperty : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f0f0-145">取得所報告之目標屬性的識別項。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-145">Gets an identifier for the target property being reported.</span></span></summary>
        <value><span data-ttu-id="9f0f0-146">所報告之目標屬性的識別項。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-146">An identifier for the target property being reported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f0f0-147">值可以也`null`; 請參閱<xref:System.Windows.Markup.IProvideValueTarget>。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-147">The value can also be `null`; see <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="9f0f0-148">WPF 使用注意事項</span><span class="sxs-lookup"><span data-stu-id="9f0f0-148">WPF Usage Notes</span></span>  
 <span data-ttu-id="9f0f0-149">相依性屬性，可能會傳回預設 WPF 服務<xref:System.Windows.DependencyProperty>，使得標記延伸或類型轉換器可以使用中繼資料。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-149">For a dependency property, the default WPF service may return a <xref:System.Windows.DependencyProperty>, such that the markup extension or type converter can use metadata.</span></span> <span data-ttu-id="9f0f0-150">否則，傳回的物件可以是<xref:System.Reflection.PropertyInfo>CLR 屬性。</span><span class="sxs-lookup"><span data-stu-id="9f0f0-150">Otherwise, the returned object can be a <xref:System.Reflection.PropertyInfo> for a CLR property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326"><span data-ttu-id="9f0f0-151">XAML 類型轉換器或標記延伸</span><span class="sxs-lookup"><span data-stu-id="9f0f0-151">Type Converters or Markup Extensions for XAML</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>