<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IReceiveMarkupExtension.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50d590f413cad5fd1e1bf753c645edf4ec35b2826.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d590f413cad5fd1e1bf753c645edf4ec35b2826</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.IReceiveMarkupExtension">
          <source>Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property.</source>
          <target state="translated">提供型別可以宣告它們能夠接受來自標記延伸運算式 (或其他類別) 的一種機制，其中輸出會是有別於目標屬性的另一種屬性。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.IReceiveMarkupExtension">
          <source>Do not use for .NET Framework 4 implementations.</source>
          <target state="translated">請勿用於 .NET Framework 4 實作。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IReceiveMarkupExtension">
          <source>In <ph id="ph1">[!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.IReceiveMarkupExtension&gt;</ph> was a WPF-specific technique for permitting types to enter a different codepath whenever any of its XAML-accessible members where set as markup extensions during XAML parsing.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]</ph>，<ph id="ph2">&lt;xref:System.Windows.Markup.IReceiveMarkupExtension&gt;</ph>已來允許輸入不同的 codepath 時它的任何存取 XAML 成員，XAML 剖析期間將設為標記延伸的型別中的 WPF 特定技術。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IReceiveMarkupExtension">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, this interface is obsolete, and is replaced with a .NET Framework XAML Services implementation for how markup extensions can receive services or types can invoke markup-extension specific setter logic.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>、 此介面已過時，而且會取代標記延伸可以如何接收服務的.NET Framework XAML 服務實作或型別可以叫用標記延伸特定 setter 邏輯。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IReceiveMarkupExtension">
          <source>For <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> implementations, if types want to perform special processing when setting properties by markup extension rather than by other means, types should be defined with <ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph> attributes applied.</source>
          <target state="translated">如<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>實作中，如果型別想要執行特殊處理，當標記延伸，而不透過其他方法，設定屬性類型應該使用來定義<ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph>套用的屬性。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IReceiveMarkupExtension">
          <source>The attribute specifies a callback, which is typically defined as a private member of the type.</source>
          <target state="translated">此屬性指定的回呼，通常定義為私用成員的型別。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IReceiveMarkupExtension">
          <source>In infrastructure implementations of WPF classes, most cases where <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph> is applied reference a <ph id="ph2">`ReceiveMarkupExtension`</ph> method that previously implemented this interface, but now instead use context through the callback.</source>
          <target state="translated">在 WPF 類別的基礎結構實作中，最狀況下<ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph>是套用參考<ph id="ph2">`ReceiveMarkupExtension`</ph>方法先前實作這個介面，但現在改為使用透過回呼的內容。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
          <source>The name of the target property.</source>
          <target state="translated">目標屬性的名稱。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
          <source>The markup extension instance of the incoming data.</source>
          <target state="translated">傳入資料的標記延伸執行個體。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
          <source>Can provide additional services that should be performed when processing the markup extension data for a property value.</source>
          <target state="translated">可以提供應該在處理屬性值之標記延伸資料時執行的其他服務。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
          <source>Provides the handling for markup extensions that provide property values.</source>
          <target state="translated">能夠處理可以提供屬性值的標記延伸。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
          <source>Do not use for <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> implementations; see <ph id="ph2">&lt;see cref="T:System.Windows.Markup.IReceiveMarkupExtension" /&gt;</ph>.</source>
          <target state="translated">請勿用於 <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 實作，請參閱 <ph id="ph2">&lt;see cref="T:System.Windows.Markup.IReceiveMarkupExtension" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>