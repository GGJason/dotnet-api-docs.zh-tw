<Type Name="ConstructorArgumentAttribute" FullName="System.Windows.Markup.ConstructorArgumentAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0abf2b5116d10eaddedd3e9aea25dddcdd3a903e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36503173" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ConstructorArgumentAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConstructorArgumentAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ConstructorArgumentAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConstructorArgumentAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConstructorArgumentAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ConstructorArgumentAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定可使用非預設建構函式語法而初始化的物件，以及所指定名稱的屬性可提供建構資訊。  這項資訊主要供 XAML 序列化之用。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會指定可以由建構函式參數初始化相關聯的屬性，並要忽略的 XAML 序列化建構函式用來建構執行個體。 這提供更好的來回行程表示參數化建構函式語法，而非預設建構函式具現化加上特定的屬性。  
  
 Framework 可以可能支援保留標記延伸使用方式和 reconstituting 它們，而非依賴`ProvideValue`輸出中序列化的物件樹狀結構。 在此情況下，<xref:System.Windows.Markup.ConstructorArgumentAttribute>資訊，以便產生一般的標記延伸使用方式的精確表示序列化期間會很有用。 如需標記延伸的詳細資訊，請參閱[標記延伸 XAML 概觀](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)。  
  
 若要有效<xref:System.Windows.Markup.ConstructorArgumentAttribute>類型的公用屬性，非預設建構函式必須支援只有一個參數。 參數名稱必須對應到讀取/寫入屬性。 屬性否則必須為可序列化。 您可以使用這個屬性來建立於建構函式，參數名稱與屬性之間的對應關係。 具體而言，將這個屬性套用至連線的讀/寫屬性的屬性層級定義。  
  
 取用者<xref:System.Windows.Markup.ConstructorArgumentAttribute>可能情況下會擲回其中<xref:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName%2A>未解析為類型備份，或是套用至沒有適當的建構引數和引數數目的型別時。  
  
 在舊版的.NET Framework 中，這個類別會存在於 WindowsBase WPF 專屬組件中。 在[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，<xref:System.Windows.Markup.ConstructorArgumentAttribute>位於 System.Xaml 組件中。 如需詳細資訊，請參閱[從 WPF 移轉至 System.Xaml 的類型](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)。  
  
## <a name="wpf-usage-notes"></a>WPF 使用注意事項  
 如需標記延伸和 WPF 的詳細資訊，請參閱[標記延伸和 WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConstructorArgumentAttribute (string argumentName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string argumentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ConstructorArgumentAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (argumentName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConstructorArgumentAttribute(System::String ^ argumentName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.ConstructorArgumentAttribute : string -&gt; System.Windows.Markup.ConstructorArgumentAttribute" Usage="new System.Windows.Markup.ConstructorArgumentAttribute argumentName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="argumentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="argumentName">將初始化相關聯屬性的建構函式名稱。</param>
        <summary>初始化 <see cref="T:System.Windows.Markup.ConstructorArgumentAttribute" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArgumentName">
      <MemberSignature Language="C#" Value="public string ArgumentName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ArgumentName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ArgumentName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentName : string" Usage="System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得將初始化相關聯屬性的建構函式名稱參數。</summary>
        <value>建構函式名稱 假設 CLR 支援，這會對應到相關建構函式參數的 <see cref="P:System.Reflection.ParameterInfo.Name" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>