<Type Name="XamlTypeMapper" FullName="System.Windows.Markup.XamlTypeMapper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a6f664bcc67e42f1fe335fc9674d969c02752f7b" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52239412" /></Metadata><TypeSignature Language="C#" Value="public class XamlTypeMapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeMapper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlTypeMapper" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeMapper" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeMapper" />
  <TypeSignature Language="F#" Value="type XamlTypeMapper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a3005-101">將 XAML 項目名稱對應至組件中適當的 CLR <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a3005-101">Maps a XAML element name to the appropriate CLR <see cref="T:System.Type" /> in assemblies.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3005-102"><xref:System.Windows.Markup.XamlTypeMapper> 屬於進階 WPF 案例提供替代的內容，如<xref:System.Windows.Markup.XamlReader>和<xref:System.Windows.Markup.XamlWriter>。</span><span class="sxs-lookup"><span data-stu-id="a3005-102"><xref:System.Windows.Markup.XamlTypeMapper> is part of an advanced WPF scenario that supplies alternate context for <xref:System.Windows.Markup.XamlReader> and <xref:System.Windows.Markup.XamlWriter>.</span></span> <span data-ttu-id="a3005-103">針對[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]WPF 應用程式，您應該考慮覆寫<xref:System.Xaml.XamlSchemaContext>針對此案例中，而不是嘗試使用<xref:System.Windows.Markup.XamlTypeMapper>。</span><span class="sxs-lookup"><span data-stu-id="a3005-103">For [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] WPF applications, you should consider overriding <xref:System.Xaml.XamlSchemaContext> for this scenario, rather than attempting to use <xref:System.Windows.Markup.XamlTypeMapper>.</span></span>  
  
 <span data-ttu-id="a3005-104"><xref:System.Windows.Markup.XamlTypeMapper> 可用來提供自訂的對應資訊的應用程式以外的更直接技術透過 XAML 剖析器<xref:System.Windows.Markup.XmlnsDefinitionAttribute>組件的程式碼的值。</span><span class="sxs-lookup"><span data-stu-id="a3005-104"><xref:System.Windows.Markup.XamlTypeMapper> can be used to provide the XAML parser with custom mapping information through a more direct technique than the application of <xref:System.Windows.Markup.XmlnsDefinitionAttribute> values on the assembly code.</span></span> <span data-ttu-id="a3005-105">這可能是用來彙總的組件中的所有 CLR 命名空間或參考類型，而不必重新編譯它只是要加入現有組件中的 XAML 就緒<xref:System.Windows.Markup.XmlnsDefinitionAttribute>屬性設定。</span><span class="sxs-lookup"><span data-stu-id="a3005-105">This might be useful for consolidation of all CLR namespaces in an assembly, or for referencing types that are XAML-ready in an existing assembly without having to recompile it just to add <xref:System.Windows.Markup.XmlnsDefinitionAttribute> attributing.</span></span>  
  
 <span data-ttu-id="a3005-106">您通常會建立<xref:System.Windows.Markup.XamlTypeMapper>執行個體，以指定<xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A>屬性值<xref:System.Windows.Markup.ParserContext>。</span><span class="sxs-lookup"><span data-stu-id="a3005-106">You typically create a <xref:System.Windows.Markup.XamlTypeMapper> instance in order to specify the <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> property value for a <xref:System.Windows.Markup.ParserContext>.</span></span> <span data-ttu-id="a3005-107"><xref:System.Windows.Markup.ParserContext>接著可用來當做內容<xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=nameWithType>呼叫。</span><span class="sxs-lookup"><span data-stu-id="a3005-107">The <xref:System.Windows.Markup.ParserContext> in turn can be used as the context for a <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=nameWithType> call.</span></span>  
  
## <a name="default-mapper"></a><span data-ttu-id="a3005-108">預設對應工具</span><span class="sxs-lookup"><span data-stu-id="a3005-108">Default Mapper</span></span>  
 <span data-ttu-id="a3005-109">您可以取得使用預設對應程式<xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A>靜態屬性。</span><span class="sxs-lookup"><span data-stu-id="a3005-109">You can obtain a default mapper using the <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> static property.</span></span> <span data-ttu-id="a3005-110">預設對應工具只適用於預設組件清單。</span><span class="sxs-lookup"><span data-stu-id="a3005-110">The default mapper only works on a default assembly list.</span></span> <span data-ttu-id="a3005-111">沒有組件的特定資訊 (如中所指定<xref:System.Windows.Markup.XamlTypeMapper>建構函式) 會使用。</span><span class="sxs-lookup"><span data-stu-id="a3005-111">No specific information about assemblies (as is specified in <xref:System.Windows.Markup.XamlTypeMapper> constructors) is used.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.NamespaceMapEntry" />
    <altmember cref="T:System.Windows.Markup.ParserContext" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3005-112">初始化 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a3005-112">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlTypeMapper : string[] -&gt; System.Windows.Markup.XamlTypeMapper" Usage="new System.Windows.Markup.XamlTypeMapper assemblyNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames"><span data-ttu-id="a3005-113"><see cref="T:System.Windows.Markup.XamlTypeMapper" /> 應該使用的組件名稱陣列。</span><span class="sxs-lookup"><span data-stu-id="a3005-113">The array of assembly names the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</span></span></param>
        <summary><span data-ttu-id="a3005-114">藉由指定 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 應該使用的組件名稱陣列，初始化 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a3005-114">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> class by specifying an array of assembly names that the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3005-115"><paramref name="assemblyNames" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a3005-115"><paramref name="assemblyNames" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames, System.Windows.Markup.NamespaceMapEntry[] namespaceMaps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames, class System.Windows.Markup.NamespaceMapEntry[] namespaceMaps) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String(), namespaceMaps As NamespaceMapEntry())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames, cli::array &lt;System::Windows::Markup::NamespaceMapEntry ^&gt; ^ namespaceMaps);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlTypeMapper : string[] * System.Windows.Markup.NamespaceMapEntry[] -&gt; System.Windows.Markup.XamlTypeMapper" Usage="new System.Windows.Markup.XamlTypeMapper (assemblyNames, namespaceMaps)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
        <Parameter Name="namespaceMaps" Type="System.Windows.Markup.NamespaceMapEntry[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames"><span data-ttu-id="a3005-116"><see cref="T:System.Windows.Markup.XamlTypeMapper" /> 應該使用的組件名稱陣列。</span><span class="sxs-lookup"><span data-stu-id="a3005-116">The array of assembly names the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</span></span></param>
        <param name="namespaceMaps"><span data-ttu-id="a3005-117"><see cref="T:System.Windows.Markup.XamlTypeMapper" /> 應該使用的命名空間對應陣列。</span><span class="sxs-lookup"><span data-stu-id="a3005-117">The array of namespace maps the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> should use.</span></span></param>
        <summary><span data-ttu-id="a3005-118">使用指定的組件名稱陣列和指定的命名空間對應，初始化 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a3005-118">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> class, using the specified array of assembly names and the specified namespace maps.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3005-119"><paramref name="assemblyNames" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a3005-119"><paramref name="assemblyNames" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMappingProcessingInstruction">
      <MemberSignature Language="C#" Value="public void AddMappingProcessingInstruction (string xmlNamespace, string clrNamespace, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingProcessingInstruction(string xmlNamespace, string clrNamespace, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingProcessingInstruction (xmlNamespace As String, clrNamespace As String, assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingProcessingInstruction(System::String ^ xmlNamespace, System::String ^ clrNamespace, System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.AddMappingProcessingInstruction : string * string * string -&gt; unit" Usage="xamlTypeMapper.AddMappingProcessingInstruction (xmlNamespace, clrNamespace, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="clrNamespace" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace"><span data-ttu-id="a3005-120">XML 命名空間的前置詞。</span><span class="sxs-lookup"><span data-stu-id="a3005-120">The prefix for the XML namespace..</span></span></param>
        <param name="clrNamespace"><span data-ttu-id="a3005-121">包含要對應之型別的 CLR 命名空間。</span><span class="sxs-lookup"><span data-stu-id="a3005-121">The CLR  namespace that contains the types to map.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="a3005-122">包含 CLR 命名空間的組件。</span><span class="sxs-lookup"><span data-stu-id="a3005-122">The assembly that contains the CLR  namespace.</span></span></param>
        <summary><span data-ttu-id="a3005-123">定義 XML 命名空間和組件中 CLR 命名空間之間的對應，並且將這些對應加入至 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 資訊。</span><span class="sxs-lookup"><span data-stu-id="a3005-123">Defines a mapping between an XML namespace and CLR namespaces in assemblies, and adds these to the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3005-124"><xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A> 是程式設計的方式，來加入對應。</span><span class="sxs-lookup"><span data-stu-id="a3005-124"><xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A> is a programmatic way to add a mapping.</span></span>  <span data-ttu-id="a3005-125">例如，下列 XAML 對應指示的不同部分對應的參數<xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>:</span><span class="sxs-lookup"><span data-stu-id="a3005-125">For example, the different parts of the following XAML mapping instruction correspond to the parameters of the <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>:</span></span>  
  
```  
<Window xmlns:SDK="clr-namespace:Samples;assembly=SDKSamples">  
...  
```  
  
 <span data-ttu-id="a3005-126">`xmlNamespace`已`SDK`，則`clrNamespace`是`Samples`，而`assemblyName`是`SDKSamples`。</span><span class="sxs-lookup"><span data-stu-id="a3005-126">The `xmlNamespace` is `SDK`, the `clrNamespace` is `Samples`, and the `assemblyName` is `SDKSamples`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3005-127"><paramref name="xmlNamespace" /> 是 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="a3005-127"><paramref name="xmlNamespace" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="a3005-128">-或-</span><span class="sxs-lookup"><span data-stu-id="a3005-128">-or-</span></span> 
 <span data-ttu-id="a3005-129"><paramref name="clrNamespace" /> 是 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="a3005-129"><paramref name="clrNamespace" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="a3005-130">-或-</span><span class="sxs-lookup"><span data-stu-id="a3005-130">-or-</span></span> 
 <span data-ttu-id="a3005-131"><paramref name="assemblyName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a3005-131"><paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowInternalType">
      <MemberSignature Language="C#" Value="protected virtual bool AllowInternalType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AllowInternalType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool AllowInternalType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member AllowInternalType : Type -&gt; bool&#xA;override this.AllowInternalType : Type -&gt; bool" Usage="xamlTypeMapper.AllowInternalType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a3005-132">要存取的型別。</span><span class="sxs-lookup"><span data-stu-id="a3005-132">The type to access.</span></span></param>
        <summary><span data-ttu-id="a3005-133">要求 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 衍生型別的使用權限，以便在完全信任的情況下呼叫此型別來存取特定內部型別。</span><span class="sxs-lookup"><span data-stu-id="a3005-133">Requests permission for a <see cref="T:System.Windows.Markup.XamlTypeMapper" /> derived type that is called under full trust to access a specific internal type.</span></span></summary>
        <returns><span data-ttu-id="a3005-134">如果可以存取內部型別則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a3005-134"><see langword="true" /> if the internal type can be accessed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3005-135">如果未覆寫子類別，由<xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A>一律會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="a3005-135">If not overridden by a subclass, <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> always returns `false`.</span></span>  
  
 <span data-ttu-id="a3005-136">當由子類別覆寫時，行為應該是<xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A>應該會傳回`true`內部型別可以存取，否則如果`false`。</span><span class="sxs-lookup"><span data-stu-id="a3005-136">When overridden by a subclass, the behavior should be that <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> should return `true` if the internal type can be accessed; otherwise, `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMapper">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XamlTypeMapper DefaultMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Markup.XamlTypeMapper DefaultMapper" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultMapper As XamlTypeMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Markup::XamlTypeMapper ^ DefaultMapper { System::Windows::Markup::XamlTypeMapper ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMapper : System.Windows.Markup.XamlTypeMapper" Usage="System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XamlTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3005-137">取得 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 的執行個體，如果尚未指定執行個體，則使用該執行個體。</span><span class="sxs-lookup"><span data-stu-id="a3005-137">Gets an instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper" /> to use if one has not been specified.</span></span></summary>
        <value><span data-ttu-id="a3005-138">預設型別對應器。</span><span class="sxs-lookup"><span data-stu-id="a3005-138">The default type mapper.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3005-139">預設對應工具只適用於預設組件清單。</span><span class="sxs-lookup"><span data-stu-id="a3005-139">The default mapper only works on a default assembly list.</span></span> <span data-ttu-id="a3005-140">沒有組件的特定資訊 (如中所指定<xref:System.Windows.Markup.XamlTypeMapper>建構函式) 會使用。</span><span class="sxs-lookup"><span data-stu-id="a3005-140">No specific information about assemblies (as is specified in <xref:System.Windows.Markup.XamlTypeMapper> constructors) is used.</span></span> <span data-ttu-id="a3005-141">預設組件清單是在目前的實作： `WindowsBase`， `PresentationCore`， `PresentationFramework`。</span><span class="sxs-lookup"><span data-stu-id="a3005-141">In the current implementation the default assembly list is: `WindowsBase`, `PresentationCore`, `PresentationFramework`.</span></span>  
  
 <span data-ttu-id="a3005-142">使用預設對應工具不表示，您完全無法使用自訂組件/類型在 XAML 中。</span><span class="sxs-lookup"><span data-stu-id="a3005-142">Using the default mapper does not mean that you cannot use custom assemblies/types in XAML at all.</span></span> <span data-ttu-id="a3005-143">它只表示，如果您使用自訂的類型/組件，您必須再使用傳統的 XAML 技巧，建立做為對應的`xmlns`類型/組件參考位置，而不是型別對應器 API 的每個 XAML 頁面中的屬性。</span><span class="sxs-lookup"><span data-stu-id="a3005-143">It only means that if you do use custom types/assemblies, you must then use the conventional XAML technique of creating the mappings as `xmlns` attributes in each XAML page where the types/assemblies are referenced, as opposed to a type mapper API.</span></span> <span data-ttu-id="a3005-144">如需詳細資訊，請參閱 < [XAML 命名空間和命名空間對應 WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)。</span><span class="sxs-lookup"><span data-stu-id="a3005-144">For more information, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string xmlNamespace, string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType(string xmlNamespace, string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (xmlNamespace As String, localName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ xmlNamespace, System::String ^ localName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string -&gt; Type" Usage="xamlTypeMapper.GetType (xmlNamespace, localName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace"><span data-ttu-id="a3005-145">指定的 XML 命名空間前置詞。</span><span class="sxs-lookup"><span data-stu-id="a3005-145">The specified XML namespace prefix.</span></span></param>
        <param name="localName"><span data-ttu-id="a3005-146">用來取得所對應 <see cref="T:System.Type" /> 之 XAML 項目的「本機」名稱。</span><span class="sxs-lookup"><span data-stu-id="a3005-146">The "local" name of the XAML element to obtain the mapped <see cref="T:System.Type" /> for.</span></span> <span data-ttu-id="a3005-147">這裡所指的本機意謂對應時相對於提供的 <paramref name="xmlNamespace" /> 而言。</span><span class="sxs-lookup"><span data-stu-id="a3005-147">Local in this context means as mapped versus the provided <paramref name="xmlNamespace" />.</span></span></param>
        <summary><span data-ttu-id="a3005-148">使用指定的 XML 命名空間前置詞和項目名稱，取得指定的 XAML 項目所對應的 CLR <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a3005-148">Gets the CLR <see cref="T:System.Type" /> that a given XAML element is mapped to, using the specified XML namespace prefix and element name.</span></span></summary>
        <returns><span data-ttu-id="a3005-149">物件的 <see cref="T:System.Type" />，如果無法解析對應則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a3005-149">The <see cref="T:System.Type" /> for the object, or <see langword="null" /> if no mapping could be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3005-150">如果型別找不到對應至提供的資訊，`null`會傳回。</span><span class="sxs-lookup"><span data-stu-id="a3005-150">If a type cannot be found that maps to the provided information, `null` is returned.</span></span>  
  
 <span data-ttu-id="a3005-151">不包含前置詞的一部分`localName`。</span><span class="sxs-lookup"><span data-stu-id="a3005-151">Do not include the prefix as part of `localName`.</span></span> <span data-ttu-id="a3005-152">針對任何 XAML 元素資訊做為前置詞，區隔到`xmlNamespace`和`localName`這個 API 呼叫的元件。</span><span class="sxs-lookup"><span data-stu-id="a3005-152">For any prefixed XAML element information, separate it into `xmlNamespace` and `localName` components for this API call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3005-153"><paramref name="xmlNamespace" /> 是 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="a3005-153"><paramref name="xmlNamespace" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="a3005-154">-或-</span><span class="sxs-lookup"><span data-stu-id="a3005-154">-or-</span></span> 
 <span data-ttu-id="a3005-155"><paramref name="localName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a3005-155"><paramref name="localName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
      </Docs>
    </Member>
    <Member MemberName="SetAssemblyPath">
      <MemberSignature Language="C#" Value="public void SetAssemblyPath (string assemblyName, string assemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAssemblyPath(string assemblyName, string assemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAssemblyPath (assemblyName As String, assemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAssemblyPath(System::String ^ assemblyName, System::String ^ assemblyPath);" />
      <MemberSignature Language="F#" Value="member this.SetAssemblyPath : string * string -&gt; unit" Usage="xamlTypeMapper.SetAssemblyPath (assemblyName, assemblyPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="assemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="a3005-156">組件的簡短名稱，即不指定副檔名或路徑 (等同於 <see cref="P:System.Reflection.AssemblyName.Name" />)。</span><span class="sxs-lookup"><span data-stu-id="a3005-156">The short name of the assembly without an extension or path specified (equivalent to <see cref="P:System.Reflection.AssemblyName.Name" />).</span></span></param>
        <param name="assemblyPath"><span data-ttu-id="a3005-157">組件的檔案路徑。</span><span class="sxs-lookup"><span data-stu-id="a3005-157">The file path of the assembly.</span></span> <span data-ttu-id="a3005-158">組件路徑必須是包含副檔名的完整檔案路徑。</span><span class="sxs-lookup"><span data-stu-id="a3005-158">The assembly path must be a full file path containing a file extension.</span></span></param>
        <summary><span data-ttu-id="a3005-159">指定路徑，載入組件時使用此路徑。</span><span class="sxs-lookup"><span data-stu-id="a3005-159">Specifies the path to use when loading an assembly.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a3005-160"><paramref name="assemblyName" /> 是 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="a3005-160"><paramref name="assemblyName" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="a3005-161">-或-</span><span class="sxs-lookup"><span data-stu-id="a3005-161">-or-</span></span> 
 <span data-ttu-id="a3005-162"><paramref name="assemblyPath" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a3005-162"><paramref name="assemblyPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Windows.Markup.XamlParseException"><span data-ttu-id="a3005-163"><paramref name="assemblyName" /> 是 <see cref="F:System.String.Empty" /></span><span class="sxs-lookup"><span data-stu-id="a3005-163"><paramref name="assemblyName" /> is <see cref="F:System.String.Empty" /></span></span>  
  
<span data-ttu-id="a3005-164">-或-</span><span class="sxs-lookup"><span data-stu-id="a3005-164">-or-</span></span> 
 <span data-ttu-id="a3005-165"><paramref name="assemblyPath" /> 是 <see cref="F:System.String.Empty" /></span><span class="sxs-lookup"><span data-stu-id="a3005-165"><paramref name="assemblyPath" /> is <see cref="F:System.String.Empty" /></span></span>  
  
<span data-ttu-id="a3005-166">-或-</span><span class="sxs-lookup"><span data-stu-id="a3005-166">-or-</span></span> 
 <span data-ttu-id="a3005-167"><paramref name="assemblyPath" /> 不是包含檔案副檔名的完整檔案路徑。</span><span class="sxs-lookup"><span data-stu-id="a3005-167"><paramref name="assemblyPath" /> is not a full file path containing a file extension.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>