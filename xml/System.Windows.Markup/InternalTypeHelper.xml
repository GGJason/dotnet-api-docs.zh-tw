<Type Name="InternalTypeHelper" FullName="System.Windows.Markup.InternalTypeHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="979dacc721c084d768bb7dea4aa07394ae50f811" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30656572" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class InternalTypeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InternalTypeHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.InternalTypeHelper" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InternalTypeHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalTypeHelper abstract" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="90841-101">WPF XAML 編譯器 (Compiler) 在內部使用抽象類別 (Abstract Class) 來支援使用內部型別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="90841-101">Abstract class used internally by the WPF XAML compiler to support the use of internal types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90841-102"><xref:System.Windows.Markup.InternalTypeHelper>類別不是用於由 WPF XAML 標記編譯器以外的任何項目。</span><span class="sxs-lookup"><span data-stu-id="90841-102">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 <span data-ttu-id="90841-103">當編譯 XAML 檔案時，您可以使用公用類型，但您也可以使用受限於相同限制存在的內部型別上的程式碼存取的內部型別。</span><span class="sxs-lookup"><span data-stu-id="90841-103">When compiling a XAML file, you can use public types, but you can also use internal types subject to the same limitations that exist on code access to internal types.</span></span> <span data-ttu-id="90841-104"><xref:System.Windows.Markup.InternalTypeHelper> 啟用支援的內部存取層級類型的標記。</span><span class="sxs-lookup"><span data-stu-id="90841-104"><xref:System.Windows.Markup.InternalTypeHelper> enables support of internal access level types for markup.</span></span> <span data-ttu-id="90841-105">這項作業包括建立產生的類別衍生自編譯器<xref:System.Windows.Markup.InternalTypeHelper>並實作其成員。</span><span class="sxs-lookup"><span data-stu-id="90841-105">This involves the compiler creating a generated class that derives from <xref:System.Windows.Markup.InternalTypeHelper> and implements its members.</span></span> <span data-ttu-id="90841-106">產生的類別存在安全性和存取內容中，產生的類別，因此內部型別可以參考相同組件或特別屬性化共用內部存取其他組件。</span><span class="sxs-lookup"><span data-stu-id="90841-106">The generated class exists in a security and access context such that only the same assembly or other assemblies specifically attributed for shared internal access can reference the generated class and thus the internal types.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InternalTypeHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InternalTypeHelper();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90841-107">初始化 <see cref="T:System.Windows.Markup.InternalTypeHelper" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-107">Initializes a new instance of the <see cref="T:System.Windows.Markup.InternalTypeHelper" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="protected internal abstract void AddEventHandler (System.Reflection.EventInfo eventInfo, object target, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void AddEventHandler(class System.Reflection.EventInfo eventInfo, object target, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void AddEventHandler(System::Reflection::EventInfo ^ eventInfo, System::Object ^ target, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="eventInfo">
          <span data-ttu-id="90841-108">事件的事件資訊 (CLR 反映資訊)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-108">The event information for the event (CLR reflection information).</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="90841-109">附加處理常式的目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-109">The target where the handler is attached.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="90841-110">事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-110">The event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90841-111">在衍生 (產生的) 類別中覆寫時，將事件處理常式委派 (Delegate) 附加至內部事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-111">When overridden in a derived (generated) class, attaches an event handler delegate to an internal event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90841-112"><xref:System.Windows.Markup.InternalTypeHelper>類別不是用於由 WPF XAML 標記編譯器以外的任何項目。</span><span class="sxs-lookup"><span data-stu-id="90841-112">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="protected internal abstract Delegate CreateDelegate (Type delegateType, object target, string handler);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Delegate CreateDelegate(class System.Type delegateType, object target, string handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function CreateDelegate (delegateType As Type, target As Object, handler As String) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract Delegate ^ CreateDelegate(Type ^ delegateType, System::Object ^ target, System::String ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="90841-113">委派的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-113">The <see cref="T:System.Type" /> of the delegate.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="90841-114">附加處理常式的目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-114">The target where the handler is attached.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="90841-115">處理常式實作的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-115">The name of the handler implementation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90841-116">在衍生 (產生的) 類別中覆寫時，建立參考非公用處理常式方法的事件委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-116">When overridden in a derived (generated) class, creates an event delegate referencing a non-public handler method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90841-117">委派參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-117">The delegate reference.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90841-118"><xref:System.Windows.Markup.InternalTypeHelper>類別不是用於由 WPF XAML 標記編譯器以外的任何項目。</span><span class="sxs-lookup"><span data-stu-id="90841-118">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected internal abstract object CreateInstance (Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Object ^ CreateInstance(Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="90841-119">要建立的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-119">The <see cref="T:System.Type" /> to create.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="90841-120">特定文化特性 (Culture) 資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-120">Culture specific information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90841-121">在衍生 (產生的) 類別中覆寫時，建立內部型別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-121">When overridden in a derived (generated) class, creates an instance of an internal type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90841-122">建立的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-122">The created instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90841-123"><xref:System.Windows.Markup.InternalTypeHelper>類別不是用於由 WPF XAML 標記編譯器以外的任何項目。</span><span class="sxs-lookup"><span data-stu-id="90841-123">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="protected internal abstract object GetPropertyValue (System.Reflection.PropertyInfo propertyInfo, object target, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object GetPropertyValue(class System.Reflection.PropertyInfo propertyInfo, object target, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Object ^ GetPropertyValue(System::Reflection::PropertyInfo ^ propertyInfo, System::Object ^ target, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">
          <span data-ttu-id="90841-124">要取得之屬性的屬性資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-124">Property information for the property to get.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="90841-125">存放所需屬性值的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-125">The object that holds the desired property value.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="90841-126">特定文化特性 (Culture) 資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-126">Culture specific information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90841-127">在衍生 (產生的) 類別中覆寫時，取得目標物件之內部屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-127">When overridden in a derived (generated) class, gets the value of an internal property on the target object</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90841-128">屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-128">The value of the property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90841-129"><xref:System.Windows.Markup.InternalTypeHelper>類別不是用於由 WPF XAML 標記編譯器以外的任何項目。</span><span class="sxs-lookup"><span data-stu-id="90841-129">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="protected internal abstract void SetPropertyValue (System.Reflection.PropertyInfo propertyInfo, object target, object value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetPropertyValue(class System.Reflection.PropertyInfo propertyInfo, object target, object value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void SetPropertyValue(System::Reflection::PropertyInfo ^ propertyInfo, System::Object ^ target, System::Object ^ value, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo">
          <span data-ttu-id="90841-130">要設定之屬性的屬性資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-130">Property information for the property to set.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="90841-131">存放所需屬性值的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-131">The object that holds the desired property value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="90841-132">要設定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-132">The value to set.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="90841-133">特定文化特性 (Culture) 資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-133">Culture specific information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90841-134">在衍生 (產生的) 類別中覆寫時，設定目標物件之內部屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90841-134">When overridden in a derived (generated) class, sets the value on an internal property on the target object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90841-135"><xref:System.Windows.Markup.InternalTypeHelper>類別不是用於由 WPF XAML 標記編譯器以外的任何項目。</span><span class="sxs-lookup"><span data-stu-id="90841-135">The <xref:System.Windows.Markup.InternalTypeHelper> class is not intended for use by anything other than the WPF XAML markup compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>