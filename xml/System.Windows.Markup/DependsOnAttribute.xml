<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DependsOnAttribute.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57a54265820b84732300967ef429bbd1b8b96d7b3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a54265820b84732300967ef429bbd1b8b96d7b3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>Indicates that the attributed property is dependent on the value of another property.</source>
          <target state="translated">表示屬性化屬性與另一個屬性的值相依。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.XamlWriter.Save%2A&gt;</ph> method on <ph id="ph2">&lt;xref:System.Windows.Markup.XamlWriter&gt;</ph> will process the specified property before processing the property that this attribute is set on.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.XamlWriter.Save%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Windows.Markup.XamlWriter&gt;</ph>處理設定這個屬性的屬性之前會處理指定的屬性。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>The <ph id="ph1">`name`</ph> value applied to this attribute must be the simple unqualified name of a property that exists in the same type.</source>
          <target state="translated"><ph id="ph1">`name`</ph>會套用至這個屬性的值必須是簡單的非限定的名稱存在於相同類型的屬性。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>You cannot  specify attached properties as being dependent.</source>
          <target state="translated">您無法為相依指定附加的屬性。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>When applying this attribute, care must be taken to avoid circular dependencies.</source>
          <target state="translated">當套用這個屬性，必須小心避免循環相依性。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>Circular dependencies are only detected when all the properties in the cycle have been written and even so the behavior is nondeterministic.</source>
          <target state="translated">已寫入循環中的所有屬性和即便如此，則行為是不具決定性時，只會偵測到循環相依性。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>Applying this attribute to a property definition ensures that the dependent properties are processed first in XAML object writing.</source>
          <target state="translated">將此屬性套用至屬性定義，可確保相依的屬性，會先處理 XAML 物件寫入。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>It is part of the general rules of XAML markup that attribute values applied for a created object should be able to be processed in any order.</source>
          <target state="translated">它是適用於建立物件的屬性值應該可以任何順序進行處理的 XAML 標記的一般規則的一部分。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>Usages of <ph id="ph1">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> specify the exceptional cases of properties on types where a specific order of parsing must be followed for valid object creation.</source>
          <target state="translated">使用方式的<ph id="ph1">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph>建立有效的物件必須遵循剖析特定順序的型別上指定例外的情況下的屬性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</source>
          <target state="translated">在舊版的.NET Framework 中，這個類別會存在於 WindowsBase WPF 專屬組件中。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> is in the System.Xaml assembly.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>，<ph id="ph2">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph>位於 System.Xaml 組件中。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>從 WPF 移轉至 System.Xaml 的類型<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>WPF Usage Notes</source>
          <target state="translated">WPF 使用注意事項</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Setter.Value%2A&gt;</ph> property on the <ph id="ph2">&lt;xref:System.Windows.Setter&gt;</ph> class is an example of a property in WPF where the <ph id="ph3">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> attribute is applied.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Setter.Value%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Windows.Setter&gt;</ph>類別是在 WPF 中屬性的範例位置<ph id="ph3">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph>屬性會套用。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source><ph id="ph1">&lt;xref:System.Windows.Setter.Value%2A&gt;</ph> depends on <ph id="ph2">&lt;xref:System.Windows.Setter.Property%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Setter.TargetName%2A&gt;</ph> being processed first, otherwise there is no way to know what type is supposed to be created for value converter cases.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Setter.Value%2A&gt;</ph> 取決於<ph id="ph2">&lt;xref:System.Windows.Setter.Property%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Setter.TargetName%2A&gt;</ph>第一次處理，否則就無法知道哪些類型應該為值轉換器的情況下建立。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependsOnAttribute.#ctor(System.String)">
          <source>The property that the property associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.DependsOnAttribute" /&gt;</ph> depends on.</source>
          <target state="translated">屬性，是與此 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.DependsOnAttribute" /&gt;</ph> 相關聯之屬性的相依項目。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependsOnAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.DependsOnAttribute" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.DependsOnAttribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.DependsOnAttribute.Name">
          <source>Gets the name of the related property declared in this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.DependsOnAttribute" /&gt;</ph>.</source>
          <target state="translated">取得這個 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.DependsOnAttribute" /&gt;</ph> 中宣告之相關屬性的名稱。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.DependsOnAttribute.Name">
          <source>The name of the related property.</source>
          <target state="translated">相關屬性的名稱。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.DependsOnAttribute.TypeId">
          <source>Gets a unique identifier for this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.DependsOnAttribute" /&gt;</ph>.</source>
          <target state="translated">取得這個 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.DependsOnAttribute" /&gt;</ph> 的唯一識別項。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.DependsOnAttribute.TypeId">
          <source>The unique identifier.</source>
          <target state="translated">唯一識別項。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.DependsOnAttribute.TypeId">
          <source>This is a generated value that uses an override behavior in order to permit multiple attributes with the same <ph id="ph1">&lt;xref:System.Windows.Markup.DependsOnAttribute.Name%2A&gt;</ph> to be applied.</source>
          <target state="translated">這是可使用以允許多個具有相同屬性的覆寫行為的產生的值<ph id="ph1">&lt;xref:System.Windows.Markup.DependsOnAttribute.Name%2A&gt;</ph>套用。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.DependsOnAttribute.TypeId">
          <source>So long as dependencies are not circular or otherwise ambiguous, multiple <ph id="ph1">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> references to the same property name are supported.</source>
          <target state="translated">只要沒有循環或否則模稜兩可，多個相依性。<ph id="ph1">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph>支援相同的屬性名稱的參考。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>