<Type Name="DateTimeValueSerializer" FullName="System.Windows.Markup.DateTimeValueSerializer">
  <TypeSignature Language="C#" Value="public class DateTimeValueSerializer : System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DateTimeValueSerializer extends System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.DateTimeValueSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class DateTimeValueSerializer&#xA;Inherits ValueSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimeValueSerializer : System::Windows::Markup::ValueSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.ValueSerializer</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d0e94-101">將 <see cref="T:System.String" /> 執行個體轉換為 <see cref="T:System.DateTime" /> 執行個體，以及反向操作。</span><span class="sxs-lookup"><span data-stu-id="d0e94-101">Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.DateTime" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0e94-102"><xref:System.Windows.Markup.ValueSerializer> 會使用而非<xref:System.ComponentModel.TypeConverter>的情況下，其中型別轉換需要額外的狀態。</span><span class="sxs-lookup"><span data-stu-id="d0e94-102"><xref:System.Windows.Markup.ValueSerializer> is used rather than <xref:System.ComponentModel.TypeConverter> for cases where type conversion requires additional state.</span></span> <span data-ttu-id="d0e94-103"><xref:System.Windows.Markup.DateTimeValueSerializer> 不屬於型別與<xref:System.Windows.Markup.ValueSerializerAttribute>。</span><span class="sxs-lookup"><span data-stu-id="d0e94-103"><xref:System.Windows.Markup.DateTimeValueSerializer> is not attributed to a type with <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span> <span data-ttu-id="d0e94-104">這是因為<xref:System.DateTime>處於 mscorlib mscorlib 無法取得相依性不會定義本身的屬性類別上。</span><span class="sxs-lookup"><span data-stu-id="d0e94-104">This is because <xref:System.DateTime> is in mscorlib, and mscorlib cannot take dependencies on attribute classes that it does not define itself.</span></span> <span data-ttu-id="d0e94-105">相反地，使用<xref:System.Windows.Markup.DateTimeValueSerializer>是特殊案例到 XAML 處理器的.NET Framework XAML 服務行為的行為。</span><span class="sxs-lookup"><span data-stu-id="d0e94-105">Instead, usage of <xref:System.Windows.Markup.DateTimeValueSerializer> is special-cased into XAML processor behavior in .NET Framework XAML Services behavior.</span></span>  
  
 <span data-ttu-id="d0e94-106">在舊版的.NET Framework 中，這個類別會存在於 WindowsBase WPF 專屬組件中。</span><span class="sxs-lookup"><span data-stu-id="d0e94-106">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="d0e94-107">在[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，<xref:System.Windows.Markup.DateTimeValueSerializer>位於 System.Xaml 組件中。</span><span class="sxs-lookup"><span data-stu-id="d0e94-107">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.DateTimeValueSerializer> is in the System.Xaml assembly.</span></span> <span data-ttu-id="d0e94-108">請參閱[從 WPF 移轉至 System.Xaml 的類型](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)。</span><span class="sxs-lookup"><span data-stu-id="d0e94-108">See [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.Primitives.MarkupWriter" />
    <altmember cref="T:System.DateTime" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeValueSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d0e94-109">初始化 <see cref="T:System.Windows.Markup.DateTimeValueSerializer" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="d0e94-109">Initializes a new instance of the <see cref="T:System.Windows.Markup.DateTimeValueSerializer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public override bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFromString (value As String, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d0e94-110">要評估以進行轉換的字串。</span><span class="sxs-lookup"><span data-stu-id="d0e94-110">The string to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="d0e94-111">用於轉換的內容資訊。</span><span class="sxs-lookup"><span data-stu-id="d0e94-111">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="d0e94-112">判斷指定的 <see cref="T:System.String" /> 是否可以轉換為 <see cref="T:System.DateTime" /> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="d0e94-112">Determines if the specified <see cref="T:System.String" /> can be convert to an instance of <see cref="T:System.DateTime" />.</span></span></summary>
        <returns>
          <span data-ttu-id="d0e94-113">如果可以轉換值，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d0e94-113"><see langword="true" /> if the value can be converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0e94-114">這個實作永遠會傳回 `true`。</span><span class="sxs-lookup"><span data-stu-id="d0e94-114">This implementation always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public override bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertToString (value As Object, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d0e94-115">要評估以進行轉換的物件。</span><span class="sxs-lookup"><span data-stu-id="d0e94-115">The object to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="d0e94-116">用於轉換的內容資訊。</span><span class="sxs-lookup"><span data-stu-id="d0e94-116">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="d0e94-117">判斷指定的物件是否可以轉換為 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="d0e94-117">Determines if the specified object can be converted to a <see cref="T:System.String" />.</span></span></summary>
        <returns>
          <span data-ttu-id="d0e94-118">如果 <paramref name="value" /> 可以轉換為 <see cref="T:System.String" />，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d0e94-118"><see langword="true" /> if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0e94-119">這個實作會傳回`true`才傳入`value`的型別<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="d0e94-119">This implementation returns `true` only if the passed `value` is of type <xref:System.DateTime>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public override object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFromString (value As String, context As IValueSerializerContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d0e94-120">要轉換成 <see cref="T:System.DateTime" /> 的字串。</span><span class="sxs-lookup"><span data-stu-id="d0e94-120">The string to convert into a <see cref="T:System.DateTime" />.</span></span></param>
        <param name="context"><span data-ttu-id="d0e94-121">用於轉換的內容資訊。</span><span class="sxs-lookup"><span data-stu-id="d0e94-121">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="d0e94-122">將 <see cref="T:System.String" /> 轉換成 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="d0e94-122">Converts a <see cref="T:System.String" /> into a <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d0e94-123">根據所提供 <paramref name="value" /> 的新 <see cref="T:System.DateTime" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="d0e94-123">A new instance of <see cref="T:System.DateTime" /> based on the supplied <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0e94-124">傳回空字串<xref:System.DateTime.MinValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="d0e94-124">An empty string returns <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d0e94-125">目前的實作使用<xref:System.DateTime.Parse%2A>就內部而言，也會使用下列<xref:System.Globalization.DateTimeStyles>: `DateTimeStyles.RoundtripKind | DateTimeStyles.NoCurrentDateDefault | DateTimeStyles.AllowLeadingWhite | DateTimeStyles.AllowTrailingWhite`。</span><span class="sxs-lookup"><span data-stu-id="d0e94-125">The current implementation uses <xref:System.DateTime.Parse%2A> internally, and also uses the following <xref:System.Globalization.DateTimeStyles>: `DateTimeStyles.RoundtripKind | DateTimeStyles.NoCurrentDateDefault | DateTimeStyles.AllowLeadingWhite | DateTimeStyles.AllowTrailingWhite`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d0e94-126"><paramref name="value" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d0e94-126"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public override string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertToString (value As Object, context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d0e94-127">要轉換為字串的物件。</span><span class="sxs-lookup"><span data-stu-id="d0e94-127">The object to convert into a string.</span></span></param>
        <param name="context"><span data-ttu-id="d0e94-128">用於轉換的內容資訊。</span><span class="sxs-lookup"><span data-stu-id="d0e94-128">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="d0e94-129">將 <see cref="T:System.DateTime" /> 的執行個體轉換成 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="d0e94-129">Converts an instance of <see cref="T:System.DateTime" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="d0e94-130">指定之 <see cref="T:System.DateTime" /> 的字串表示。</span><span class="sxs-lookup"><span data-stu-id="d0e94-130">A string representation of the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0e94-131">`context` 不會使用這項實作。</span><span class="sxs-lookup"><span data-stu-id="d0e94-131">`context` is not used by this implementation.</span></span>  
  
 <span data-ttu-id="d0e94-132">在 XAML 值處理日期的字串表示法根據`en-US`文化特性。</span><span class="sxs-lookup"><span data-stu-id="d0e94-132">String representations for dates as found in XAML value processing are based on the `en-US` culture.</span></span> <span data-ttu-id="d0e94-133">這是因為 XAML 處理區分文化特性資訊分割成在概念上產生編譯時期和執行階段的階段，必須使用整個已知的字串表示。</span><span class="sxs-lookup"><span data-stu-id="d0e94-133">This is because XAML processing for culture-sensitive information is split conceptually between compile-time and run-time phases and must use a known string representation throughout.</span></span> <span data-ttu-id="d0e94-134">如需詳細資訊，請參閱[WPF 全球化和當地語系化概觀](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="d0e94-134">For more information, see [WPF Globalization and Localization Overview](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md).</span></span>  
  
 <span data-ttu-id="d0e94-135">目前的實作使用的格式字串來調整取決於是否提供的層面<xref:System.DateTime>有值。</span><span class="sxs-lookup"><span data-stu-id="d0e94-135">The current implementation uses a format string that is adjusted depending on whether aspects of the supplied <xref:System.DateTime> have values.</span></span> <span data-ttu-id="d0e94-136">例如，如果沒有任何值<xref:System.TimeSpan.TotalSeconds%2A>，格式字串的格式為`yyyy-MM-dd`而不會寫出全文詳細等級階段元件的零值。</span><span class="sxs-lookup"><span data-stu-id="d0e94-136">For example, if there is no value in <xref:System.TimeSpan.TotalSeconds%2A>, the format string is in the form `yyyy-MM-dd` rather than writing out full-verbosity zero values for the time component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d0e94-137"><paramref name="value" /> 不是 <see cref="T:System.DateTime" />，或為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d0e94-137"><paramref name="value" /> is not a <see cref="T:System.DateTime" /> or is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>