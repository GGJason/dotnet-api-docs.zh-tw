<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DependencyPropertyConverter.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d9a563f327fac8080af604f020e98a1f1cb02fc8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d9a563f327fac8080af604f020e98a1f1cb02fc8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.DependencyPropertyConverter">
          <source>Converts from a string to a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> object.</source>
          <target state="translated">從字串轉換為 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependencyPropertyConverter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph> class only converts from a <ph id="ph2">&lt;xref:System.String&gt;</ph> into an instance of <ph id="ph3">&lt;xref:System.Windows.DependencyProperty&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph>類別只會將轉換從<ph id="ph2">&lt;xref:System.String&gt;</ph>的執行個體<ph id="ph3">&lt;xref:System.Windows.DependencyProperty&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependencyPropertyConverter">
          <source>Other attempts at conversion throw an exception.</source>
          <target state="translated">轉換的其他嘗試擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependencyPropertyConverter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph> converts from a <ph id="ph2">&lt;xref:System.String&gt;</ph> using the following input format: <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept><ph id="ph3">`.`</ph><bpt id="p2">*</bpt>propertyName<ept id="p2">*</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph>從轉換<ph id="ph2">&lt;xref:System.String&gt;</ph>使用下列格式輸入： <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept><ph id="ph3">`.`</ph><bpt id="p2">*</bpt>propertyName<ept id="p2">*</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependencyPropertyConverter">
          <source>A format of <bpt id="p1">*</bpt>namespacePrefix<ept id="p1">*</ept>:<bpt id="p2">*</bpt>typeName<ept id="p2">*</ept><ph id="ph1">`.`</ph><bpt id="p3">*</bpt>propertyName<ept id="p3">*</ept> is also accepted for legacy reasons but the <bpt id="p4">*</bpt>namespacePrefix<ept id="p4">*</ept>: component is ignored.</source>
          <target state="translated">格式為<bpt id="p1">*</bpt>namespacePrefix<ept id="p1">*</ept>:<bpt id="p2">*</bpt>typeName<ept id="p2">*</ept><ph id="ph1">`.`</ph><bpt id="p3">*</bpt>propertyName<ept id="p3">*</ept>也接受為舊版，但<bpt id="p4">*</bpt>namespacePrefix<ept id="p4">*</ept>： 元件會被忽略。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependencyPropertyConverter">
          <source>A format of <bpt id="p1">*</bpt>propertyName<ept id="p1">*</ept> is also accepted in certain cases; this format relies on the ability to evaluate ambient properties and deduce the <bpt id="p2">*</bpt>typeName<ept id="p2">*</ept>, by service implementation of <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph> in the context.</source>
          <target state="translated">格式為<bpt id="p1">*</bpt>propertyName<ept id="p1">*</ept>也接受在某些情況下，此格式依賴能夠評估環境的屬性，並且推論出<bpt id="p2">*</bpt>typeName<ept id="p2">*</ept>，由服務實作的<ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>中內容。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependencyPropertyConverter">
          <source>For legacy reasons, this class also supports conversion from BAML records, but this is an implementation detail and should not be relied upon.</source>
          <target state="translated">由於傳統原因，此類別也支援從 BAML 記錄轉換，但這是實作詳細資料，而且不應該依賴在。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependencyPropertyConverter">
          <source>The behavior of this converter is specifically oriented around a single WPF scenario for XAML processing: reading the attribute value of <ph id="ph1">&lt;xref:System.Windows.Setter.Property%2A&gt;</ph> and generating a <ph id="ph2">&lt;xref:System.Windows.DependencyProperty&gt;</ph> value.</source>
          <target state="translated">這個轉換子的行為特別導向周圍的單一 WPF XAML 處理案例： 讀取屬性值<ph id="ph1">&lt;xref:System.Windows.Setter.Property%2A&gt;</ph>並產生<ph id="ph2">&lt;xref:System.Windows.DependencyProperty&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.DependencyPropertyConverter" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.DependencyPropertyConverter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>A format context that provides information about the environment from which this converter is being invoked.</source>
          <target state="translated">格式內容，提供正在叫用此轉換器之環境的相關資訊。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The type being evaluated for conversion.</source>
          <target state="translated">正在評估以進行轉換的型別。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Determines whether an object of the specified type can be converted to an instance of <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">判斷指定之型別的物件是否可轉換成 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> 的執行個體。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this converter can perform the operation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果這個轉換子可以執行作業，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph> class only converts a string to an instance of <ph id="ph2">&lt;xref:System.Windows.DependencyProperty&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph>類別只會將字串轉換的執行個體<ph id="ph2">&lt;xref:System.Windows.DependencyProperty&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Therefore only a <ph id="ph1">`sourceType`</ph> of <ph id="ph2">&lt;xref:System.String&gt;</ph> returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">因此只有<ph id="ph1">`sourceType`</ph>的<ph id="ph2">&lt;xref:System.String&gt;</ph>傳回<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source><ph id="ph1">`context`</ph> is not used by this implementation.</source>
          <target state="translated"><ph id="ph1">`context`</ph> 不會使用這項實作。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>A format context that provides information about the environment from which this converter is being invoked.</source>
          <target state="translated">格式內容，提供正在叫用此轉換器之環境的相關資訊。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The type being evaluated for conversion.</source>
          <target state="translated">正在評估以進行轉換的型別。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Determines whether an instance of <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> can be converted to the specified type.</source>
          <target state="translated">判斷 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> 的執行個體是否可轉換成指定的型別。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this converter can perform the operation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果這個轉換子可以執行作業，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>This implementation always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">這個實作永遠會傳回 <ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>A format context that provides information about the environment from which this converter is being invoked.</source>
          <target state="translated">格式內容，提供正在叫用此轉換器之環境的相關資訊。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Culture specific information.</source>
          <target state="translated">特定文化特性 (Culture) 資訊。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The object to convert.</source>
          <target state="translated">要轉換的物件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Attempts to convert the specified object to a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>, using the specified context.</source>
          <target state="translated">使用指定的內容，嘗試將指定的物件轉換為 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The converted object.</source>
          <target state="translated">轉換的物件。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>If the conversion is successful, this is a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">如果轉換成功，則為 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph> class only converts a string to an instance of <ph id="ph2">&lt;xref:System.Windows.DependencyProperty&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph>類別只會將字串轉換的執行個體<ph id="ph2">&lt;xref:System.Windows.DependencyProperty&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source><ph id="ph1">`culture`</ph> is not used by this implementation.</source>
          <target state="translated"><ph id="ph1">`culture`</ph> 不會使用這項實作。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The <ph id="ph1">`context`</ph> provided is expected to provide services that are required for proper evaluation.</source>
          <target state="translated"><ph id="ph1">`context`</ph>提供必須為提供服務所需的適當評估。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>These include <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xaml.IXamlSchemaContextProvider&gt;</ph>.</source>
          <target state="translated">這些包括<ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph>，和<ph id="ph3">&lt;xref:System.Xaml.IXamlSchemaContextProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> cannot be converted.</source>
          <target state="translated">無法轉換 <ph id="ph1">&lt;paramref name="source" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> or <ph id="ph2">&lt;paramref name="source" /&gt;</ph> are <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="source" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>A format context that provides information about the environment from which this converter is being invoked.</source>
          <target state="translated">格式內容，提供正在叫用此轉換器之環境的相關資訊。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Culture specific information.</source>
          <target state="translated">特定文化特性 (Culture) 資訊。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The object to convert.</source>
          <target state="translated">要轉換的物件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The type to convert the object to.</source>
          <target state="translated">要將物件轉換成的類型。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Attempts to convert a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> to the specified type, using the specified context.</source>
          <target state="translated">使用指定的內容，嘗試將 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> 轉換為指定的型別。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Always throws an exception.</source>
          <target state="translated">一律會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Always throws an exception.</source>
          <target state="translated">一律會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>This implementation always throws an exception.</source>
          <target state="translated">這個實作一律會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>In all cases.</source>
          <target state="translated">在所有情況下。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>