<Type Name="IQueryAmbient" FullName="System.Windows.Markup.IQueryAmbient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5b1419b6b996eab65fbdcda1f6ed9782df12197d" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36502760" /></Metadata><TypeSignature Language="C#" Value="public interface IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryAmbient" />
  <TypeSignature Language="F#" Value="type IQueryAmbient = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7fcf0-101">查詢是否應該將指定的屬性視為目前範圍中的環境屬性。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-101">Queries for whether a specified property should be treated as ambient in the current scope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fcf0-102">環境屬性機制，目的是要改善剖析時間通知以避免具現化某些情況下，就是它的物件是一般的執行階段會暫時並不實用的值中的物件，在 XAML 物件寫入器應用程式。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-102">The purpose of an ambient property mechanism is to improve parsing time by informing a XAML object writer to avoid instantiating certain objects, in cases where it is known that the objects are for values that are temporary and not useful for a typical run time application.</span></span> <span data-ttu-id="7fcf0-103">一般而言，XAML 查閱或 XAML 處理的屬性 get 存取子必須具現化這類物件，以填滿物件圖表示法，可供使用的值。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-103">Normally, XAML lookups or XAML processing of a property get accessor would need to instantiate such objects to fill the object graph representation with ready-to-use values.</span></span>  
  
 <span data-ttu-id="7fcf0-104"><xref:System.Windows.Markup.IQueryAmbient> 具有一個成員： <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-104"><xref:System.Windows.Markup.IQueryAmbient> has one member: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.</span></span>  
  
 <span data-ttu-id="7fcf0-105"><xref:System.Windows.Markup.IQueryAmbient> 平行機制<xref:System.Windows.Markup.AmbientAttribute>。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-105"><xref:System.Windows.Markup.IQueryAmbient> is a parallel mechanism to <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="7fcf0-106"><xref:System.Windows.Markup.IQueryAmbient> 是特製化的機制，可避免使用反映來判斷的詳細資訊，而且還可以 act 視情況下 (指定的物件可以選擇將報表`true`或是`false`的<xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>)，而屬性基本上是靜態分析）。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-106"><xref:System.Windows.Markup.IQueryAmbient> is the specialized mechanism that avoids using reflection to determine information, and can also act situationally (a given object could choose to report `true` or `false` for <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>), whereas the attribute is essentially static analysis).</span></span> <span data-ttu-id="7fcf0-107"><xref:System.Windows.Markup.AmbientAttribute> 是一般的機制，可供 XAML 物件寫入器和，通常與相互關聯的專用的 XAML 類型系統屬性<xref:System.Xaml.XamlMember.IsAmbient%2A>和<xref:System.Xaml.XamlType.IsAmbient%2A>。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-107"><xref:System.Windows.Markup.AmbientAttribute> is the general mechanism that can be used by XAML object writers and that typically correlates to the dedicated XAML type system properties <xref:System.Xaml.XamlMember.IsAmbient%2A> and <xref:System.Xaml.XamlType.IsAmbient%2A>.</span></span>  
  
## <a name="wpf-implementations-of-iqueryambient"></a><span data-ttu-id="7fcf0-108">WPF 實作 IQueryAmbient</span><span class="sxs-lookup"><span data-stu-id="7fcf0-108">WPF Implementations of IQueryAmbient</span></span>  
 <span data-ttu-id="7fcf0-109">在 WPF 中，<xref:System.Windows.Markup.IQueryAmbient>用於資源字典查閱程序。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-109">In WPF, <xref:System.Windows.Markup.IQueryAmbient> is used for the resource dictionary lookup process.</span></span> <span data-ttu-id="7fcf0-110">查閱程序取得後續`Resources`WPF 的邏輯樹狀結構的值，位於朝向資源範圍內根源直到索引鍵或索引鍵被判定為不存在於範圍。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-110">The lookup process gets successive `Resources` values throughout the WPF logical tree, working towards the root of the resource scope until either a key is found or the key is determined to not exist in scope.</span></span> <span data-ttu-id="7fcf0-111">一般來說，這樣做需要具現化<xref:System.Windows.ResourceDictionary>每次接收結果。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-111">Normally, doing so would require instantiating a <xref:System.Windows.ResourceDictionary> each time to receive the results.</span></span> <span data-ttu-id="7fcf0-112">宣告的內容`Resources`環境，只要`Resources`存在最佳化此查閱程序。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-112">Declaring the contents of `Resources` as ambient so long as `Resources` exists optimizes this lookup process.</span></span> <span data-ttu-id="7fcf0-113">在 WPF 中，會實作這個介面，在下列情況：</span><span class="sxs-lookup"><span data-stu-id="7fcf0-113">In WPF, this interface is implemented in the following cases:</span></span>  
  
-   <span data-ttu-id="7fcf0-114"><xref:System.Windows.FrameworkElement> 實作<xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A>返回`true`的所有屬性名稱，如果它包含現有<xref:System.Windows.ResourceDictionary>如<xref:System.Windows.FrameworkElement.Resources%2A>，和，只要該查詢不是針對<xref:System.Windows.FrameworkElement.Resources%2A>屬性本身。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-114"><xref:System.Windows.FrameworkElement> implements <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> to return `true` for all property names if it contains an existing <xref:System.Windows.ResourceDictionary> for <xref:System.Windows.FrameworkElement.Resources%2A>, and so long as the query is not for the <xref:System.Windows.FrameworkElement.Resources%2A> property itself.</span></span>  
  
-   <span data-ttu-id="7fcf0-115"><xref:System.Windows.Style> 實作的相同模式及其<xref:System.Windows.Style.Resources%2A>。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-115"><xref:System.Windows.Style> implements the same pattern for its <xref:System.Windows.Style.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="7fcf0-116"><xref:System.Windows.Application> 實作的相同模式及其<xref:System.Windows.Application.Resources%2A>。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-116"><xref:System.Windows.Application> implements the same pattern for its <xref:System.Windows.Application.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="7fcf0-117"><xref:System.Windows.FrameworkContentElement> 實作的相同模式及其<xref:System.Windows.FrameworkContentElement.Resources%2A>。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-117"><xref:System.Windows.FrameworkContentElement> implements the same pattern for its <xref:System.Windows.FrameworkContentElement.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="7fcf0-118"><xref:System.Windows.FrameworkTemplate> 實作的相同模式及其<xref:System.Windows.FrameworkTemplate.Resources%2A>。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-118"><xref:System.Windows.FrameworkTemplate> implements the same pattern for its <xref:System.Windows.FrameworkTemplate.Resources%2A>.</span></span> <span data-ttu-id="7fcf0-119">此外也會回報<xref:System.Windows.FrameworkTemplate.Template%2A>內容，因為環境，但會傳回`false`如果查詢<xref:System.Windows.FrameworkTemplate.Template%2A>本身。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-119">It also reports <xref:System.Windows.FrameworkTemplate.Template%2A> content as ambient but returns `false` if querying for <xref:System.Windows.FrameworkTemplate.Template%2A> itself.</span></span>  
  
-   <span data-ttu-id="7fcf0-120">在這些情況下，相關`Resources`屬性 (並<xref:System.Windows.FrameworkTemplate.Template%2A>) 屬性會設定為<xref:System.Windows.Markup.AmbientAttribute>。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-120">In each of these cases, the relevant `Resources` property (and <xref:System.Windows.FrameworkTemplate.Template%2A>) are attributed as <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="7fcf0-121">典型的用法是以查詢屬性不是<xref:System.Windows.Markup.AmbientAttribute>屬性定義的介面物件的屬性。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-121">The typical usage is to query for the properties that are NOT the <xref:System.Windows.Markup.AmbientAttribute> attributed properties of the object that defines the interface.</span></span> <span data-ttu-id="7fcf0-122">換句話說，只要資源字典是為了提供可能的執行的階段值，建立物件圖形時，任何其他屬性以外的資源字典屬性的容器可以視為環境。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-122">In other words, so long as a resource dictionary exists in order to provide the potential run time value when the object graph is created, any other property besides the resource dictionary's property container can be treated as ambient.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
  </Docs>
  <Members>
    <Member MemberName="IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="public bool IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbientPropertyAvailable (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbientPropertyAvailable(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member IsAmbientPropertyAvailable : string -&gt; bool" Usage="iQueryAmbient.IsAmbientPropertyAvailable propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcf0-123">要檢查環境狀態之屬性的名稱。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-123">The name of the property to check for ambience state.</span></span></param>
        <summary><span data-ttu-id="7fcf0-124">查詢是否可以將指定的具名屬性視為目前範圍中的環境屬性。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-124">Queries for whether a specified named property can be considered ambient in the current scope.</span></span></summary>
        <returns><span data-ttu-id="7fcf0-125">如果可將所要求的屬性視為環境屬性則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7fcf0-125"><see langword="true" /> if the requested property can be considered ambient; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>