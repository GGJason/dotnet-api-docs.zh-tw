<Type Name="IComponentConnector" FullName="System.Windows.Markup.IComponentConnector">
  <TypeSignature Language="C#" Value="public interface IComponentConnector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComponentConnector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IComponentConnector" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComponentConnector" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComponentConnector" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6ce8f-101">對具名 XAML 項目提供標記編譯及工具支援，以便將事件處理常式附加至這些項目。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-101">Provides markup compile and tools support for named XAML elements and for attaching event handlers to them.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ce8f-102">這個介面會在內部使用<xref:System.Windows.Baml2006.Baml2006Reader>。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-102">This interface is used internally by <xref:System.Windows.Baml2006.Baml2006Reader>.</span></span>  
  
 <span data-ttu-id="6ce8f-103">實作<xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A>廣泛 observable 提供架構的基礎結構的一部分或使用 XAML 的技術結合的應用程式和程式設計模型。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-103">Implementations of <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> are widely observable as part of the infrastructure provided by frameworks or technologies that use XAML combined with application and programming models.</span></span> <span data-ttu-id="6ce8f-104">例如，每當您查看 WPF 網頁和應用程式中的 XAML 根項目所產生的類別時，您會看到<xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A>輸出中所定義。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-104">For example, whenever you look at the generated classes for XAML root elements in WPF pages and applications, you will see <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> defined in the output.</span></span> <span data-ttu-id="6ce8f-105">該方法也會編譯的組件存在，而且是在 XAML 剖析階段載入 XAML 內容的 WPF 應用程式模型中扮演一個角色。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-105">That method also exists in the compiled assembly and plays a role in the WPF application model of loading the XAML UI content at XAML parse time.</span></span> <span data-ttu-id="6ce8f-106">如需有關 WPF 整合`InitializeComponent`概念，請參閱[應用程式管理概觀](~/docs/framework/wpf/app-development/application-management-overview.md)或[程式碼後置中和 XAML WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-106">For more information on the WPF integration of the `InitializeComponent` concept, see [Application Management Overview](~/docs/framework/wpf/app-development/application-management-overview.md) or [Code-Behind and XAML in WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md).</span></span>  
  
 <span data-ttu-id="6ce8f-107">在舊版的.NET Framework 中，這個介面會存在於 WindowsBase WPF 專屬組件中。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-107">In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="6ce8f-108">在[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，<xref:System.Windows.Markup.IComponentConnector>位於 System.Xaml 組件中。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-108">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IComponentConnector> is in the System.Xaml assembly.</span></span> <span data-ttu-id="6ce8f-109">。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-109">.</span></span> <span data-ttu-id="6ce8f-110">如需詳細資訊，請參閱[從 WPF 移轉至 System.Xaml 的類型](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-110">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
> [!TIP]
>  <span data-ttu-id="6ce8f-111">無法解析<xref:System.Windows.Markup.IComponentConnector>嘗試建置期間通常是您沒有已正確更新 WPF 專案的指標。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-111">A failure to resolve <xref:System.Windows.Markup.IComponentConnector> during an attempted build is often an indicator that you have not updated your WPF project correctly.</span></span> <span data-ttu-id="6ce8f-112">專案未參考 System.Xaml 組件為目標的專案，特別是， [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-112">In particular, the project is not referencing the System.Xaml assembly for a project that targets [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="6ce8f-113">請嘗試執行`devenv /upgrade`選項的專案，或使 System.Xaml 的參考清單中調整專案的組件參考。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-113">Try running the `devenv /upgrade` option for the project, or otherwise adjust the project assembly references so that System.Xaml is in the reference list.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (int connectionId, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(int32 connectionId, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (connectionId As Integer, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(int connectionId, System::Object ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.Int32" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="connectionId"><span data-ttu-id="6ce8f-114">要區分呼叫的識別項語彙基元。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-114">An identifier token to distinguish calls.</span></span></param>
        <param name="target"><span data-ttu-id="6ce8f-115">要連接事件和名稱的目標。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-115">The target to connect events and names to.</span></span></param>
        <summary><span data-ttu-id="6ce8f-116">附加事件和名稱至編譯內容。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-116">Attaches events and names to compiled content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ce8f-117"><xref:System.Windows.Markup.IComponentConnector> 會在內部使用<xref:System.Windows.Baml2006.Baml2006Reader>。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-117"><xref:System.Windows.Markup.IComponentConnector> is used internally by <xref:System.Windows.Baml2006.Baml2006Reader>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeComponent">
      <MemberSignature Language="C#" Value="public void InitializeComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeComponent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.InitializeComponent" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeComponent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeComponent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ce8f-118">載入元件的已編譯網頁。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-118">Loads the compiled page of a component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ce8f-119"><xref:System.Windows.Markup.IComponentConnector> 會在內部使用<xref:System.Windows.Baml2006.Baml2006Reader>。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-119"><xref:System.Windows.Markup.IComponentConnector> is used internally by <xref:System.Windows.Baml2006.Baml2006Reader>.</span></span>  
  
 <span data-ttu-id="6ce8f-120">實作<xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A>廣泛 observable 提供架構的基礎結構的一部分或使用 XAML 的技術結合的應用程式和程式設計模型。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-120">Implementations of <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> are widely observable as part of the infrastructure provided by frameworks or technologies that use XAML combined with application and programming models.</span></span> <span data-ttu-id="6ce8f-121">例如，每當您查看 WPF 網頁和應用程式中的 XAML 根項目所產生的類別時，您會看到<xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A>輸出中所定義。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-121">For example, whenever you look at the generated classes for XAML root elements in WPF pages and applications, you will see <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> defined in the output.</span></span> <span data-ttu-id="6ce8f-122">該方法也會編譯的組件存在，而且是在 XAML 剖析階段載入 XAML 內容的 WPF 應用程式模型中扮演一個角色。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-122">That method also exists in the compiled assembly and plays a role in the WPF application model of loading the XAML UI content at XAML parse time.</span></span> <span data-ttu-id="6ce8f-123">如需有關 WPF 整合`InitializeComponent`概念，請參閱[應用程式管理概觀](~/docs/framework/wpf/app-development/application-management-overview.md)或[程式碼後置中和 XAML WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="6ce8f-123">For more information on the WPF integration of the `InitializeComponent` concept, see [Application Management Overview](~/docs/framework/wpf/app-development/application-management-overview.md) or [Code-Behind and XAML in WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>