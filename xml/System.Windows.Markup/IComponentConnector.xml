<Type Name="IComponentConnector" FullName="System.Windows.Markup.IComponentConnector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="111e269e9a5af3fdc48b73b79203c7542816013a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36502815" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComponentConnector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComponentConnector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IComponentConnector" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComponentConnector" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComponentConnector" />
  <TypeSignature Language="F#" Value="type IComponentConnector = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>對具名 XAML 項目提供標記編譯及工具支援，以便將事件處理常式附加至這些項目。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個介面會在內部使用<xref:System.Windows.Baml2006.Baml2006Reader>。  
  
 實作<xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A>廣泛 observable 提供架構的基礎結構的一部分或使用 XAML 的技術結合的應用程式和程式設計模型。 例如，每當您查看 WPF 網頁和應用程式中的 XAML 根項目所產生的類別時，您會看到<xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A>輸出中所定義。 該方法也會編譯的組件存在，而且是在 XAML 剖析階段載入 XAML 內容的 WPF 應用程式模型中扮演一個角色。 如需有關 WPF 整合`InitializeComponent`概念，請參閱[應用程式管理概觀](~/docs/framework/wpf/app-development/application-management-overview.md)或[程式碼後置中和 XAML WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md)。  
  
 在舊版的.NET Framework 中，這個介面會存在於 WindowsBase WPF 專屬組件中。 在[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，<xref:System.Windows.Markup.IComponentConnector>位於 System.Xaml 組件中。 。 如需詳細資訊，請參閱[從 WPF 移轉至 System.Xaml 的類型](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)。  
  
> [!TIP]
>  無法解析<xref:System.Windows.Markup.IComponentConnector>嘗試建置期間通常是您沒有已正確更新 WPF 專案的指標。 專案未參考 System.Xaml 組件為目標的專案，特別是， [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。 請嘗試執行`devenv /upgrade`選項的專案，或使 System.Xaml 的參考清單中調整專案的組件參考。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (int connectionId, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(int32 connectionId, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (connectionId As Integer, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(int connectionId, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Connect : int * obj -&gt; unit" Usage="iComponentConnector.Connect (connectionId, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.Int32" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="connectionId">要區分呼叫的識別項語彙基元。</param>
        <param name="target">要連接事件和名稱的目標。</param>
        <summary>附加事件和名稱至編譯內容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IComponentConnector> 會在內部使用<xref:System.Windows.Baml2006.Baml2006Reader>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeComponent">
      <MemberSignature Language="C#" Value="public void InitializeComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeComponent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.InitializeComponent" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeComponent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeComponent();" />
      <MemberSignature Language="F#" Value="abstract member InitializeComponent : unit -&gt; unit" Usage="iComponentConnector.InitializeComponent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>載入元件的已編譯網頁。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IComponentConnector> 會在內部使用<xref:System.Windows.Baml2006.Baml2006Reader>。  
  
 實作<xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A>廣泛 observable 提供架構的基礎結構的一部分或使用 XAML 的技術結合的應用程式和程式設計模型。 例如，每當您查看 WPF 網頁和應用程式中的 XAML 根項目所產生的類別時，您會看到<xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A>輸出中所定義。 該方法也會編譯的組件存在，而且是在 XAML 剖析階段載入 XAML 內容的 WPF 應用程式模型中扮演一個角色。 如需有關 WPF 整合`InitializeComponent`概念，請參閱[應用程式管理概觀](~/docs/framework/wpf/app-development/application-management-overview.md)或[程式碼後置中和 XAML WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>