<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="55dd6cc03b82733e7cc9502b48929ccdfcd92546" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30656122" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定應該視為環境的屬性或類型。 環境概念與 XAML 處理器如何判斷成員類別擁有者有關。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 環境的屬性會是預期的值是可剖析器內容中建立物件圖形，但在一般的型別成員查閱已暫止基於立即的 XAML 節點集所建立的屬性。 有兩個主要案例，環境的概念：  
  
-   相同物件的某些其他屬性會影響，並評估符合該物件屬性查閱的運作方式。  
  
-   此屬性代表較大的延遲機制，以及查閱成員值的環境功能延伸至目前的物件內所包含的所有物件。  
  
 這個屬性可以套用至特定的屬性有預期的容器，可讓環境屬性查閱行為，或可以套用至類別，以便啟用環境屬性行為，在所有情況下，值類型的屬性。  
  
 <xref:System.Windows.Markup.AmbientAttribute> 也可以套用至 CLR 方法，以支援屬性設定為環境 XAML 可附加屬性。 這是可能有必要，因為 CLR 實作 XAML 附加的屬性會實作/以表示它與另一個存取子模式為反映`get`和`set`方法。 沒有實際的 CLR 屬性至屬性存在，因此限制使用量<xref:System.AttributeTargets>至`Property`，就不具有啟用為環境指定可附加的成員。 您想要報告環境的可附加成員，如屬性`get`存取子。 您不應該嘗試不特別的支援方法的可附加成員的屬性方法。  
  
 在舊版的.NET Framework 中，這個類別會存在於 WindowsBase WPF 專屬組件中。 在[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，<xref:System.Windows.Markup.AmbientAttribute>位於 System.Xaml 組件中。 如需詳細資訊，請參閱[從 WPF 移轉至 System.Xaml 的類型](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)。  
  
 環境的類型 (類型 where<xref:System.Windows.Markup.AmbientAttribute>套用類型層級) 可用於其中屬性的類型需要解析順序的某些 XAML 處理情況。  
  
## <a name="object-writer-scenarios"></a>物件寫入器案例  
 如果您正在定義的 XAML 物件寫入器，而您發生屬性、 方法或型別其中<xref:System.Windows.Markup.AmbientAttribute>會套用，您通常必須存取的服務，來決定所需的物件寫入的目標環境的屬性查閱行為。 如需詳細資訊，請參閱<xref:System.Xaml.IAmbientProvider>。  
  
## <a name="value-converters"></a>值轉換器  
 型別轉換子或標記延伸模組可能需要知道處理表示間接的型別對應，例如字串名稱，或不限定性條件來指定成員或類型的屬性的屬性，使用環境的資訊。 在此案例中，<xref:System.Windows.Markup.AmbientAttribute>不打算直接用於值轉換器的程式碼邏輯。 相反地，值轉換器應依賴 XAML 寫入器處理行為，將會通過<xref:System.Xaml.IAmbientProvider>值轉換器方法時呼叫其服務內容中。  
  
## <a name="wpf-scenarios-for-ambientattribute"></a>WPF AmbientAttribute 案例  
  
-   屬性的<xref:System.Windows.Style>(<xref:System.Windows.Style.TargetType%2A>) 可以限定必要的屬性名稱查閱來尋找屬性名稱中支援參考所需<xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType>值。  
  
-   中的所有內容`Resources`屬性 (項目<xref:System.Windows.ResourceDictionary>) 範本的內容，以及應該能夠存取其他對等節點做為值。 宣告整個`Resources`屬性做為環境叫用的啟用 WPF XAML 剖析器中的邏輯。  
  
 請參閱<xref:System.Windows.ResourceDictionary>設定案例的範例如<xref:System.Windows.Markup.AmbientAttribute>類型層級。  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Markup.AmbientAttribute" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>