<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="baa263074eed8e44641b6e694586499e323d9183" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004519" /></Metadata><TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3e3ba-101">指定應該視為環境的屬性或類型。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-101">Specifies that a property or type should be treated as ambient.</span></span> <span data-ttu-id="3e3ba-102">環境概念與 XAML 處理器如何判斷成員類別擁有者有關。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-102">The ambient concept relates to how XAML processors determine type owners of members.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e3ba-103">環境屬性是一個屬性預期的值時建立物件圖形，但典型的型別成員查閱已基於立即設定所建立的 XAML 節點的暫止要用於剖析器內容。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-103">An ambient property is a property where the value is expected to be available in the parser context when creating an object graph, but where typical type-member lookup is suspended for purposes of the immediate XAML node set being created.</span></span> <span data-ttu-id="3e3ba-104">有兩個主要的案例所需的環境的概念：</span><span class="sxs-lookup"><span data-stu-id="3e3ba-104">There are two main scenarios for the ambient concept:</span></span>  
  
-   <span data-ttu-id="3e3ba-105">同一個物件的其他某個屬性影響，並會限定物件屬性查閱的運作方式。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-105">Some other property of the same object influences and qualifies how that object-property lookup should work.</span></span>  
  
-   <span data-ttu-id="3e3ba-106">此屬性代表較大的延遲機制，來查閱成員值的環境功能延伸至目前的物件內所含的所有物件。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-106">The property represents a larger deferral mechanism and the ambient capabilities for looking up a member value extend to all objects contained within the current object.</span></span>  
  
 <span data-ttu-id="3e3ba-107">這個屬性可以套用至容器，可讓環境屬性查閱行為，預期的特定屬性，或可以套用至類別，以啟用在所有情況下，該屬性的值類型的環境屬性的行為。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-107">This attribute can be applied to specific properties that have expected containers that enable an ambient property lookup behavior, or can be applied to a class to enable the ambient property behavior in all cases of that value type for a property.</span></span>  
  
 <span data-ttu-id="3e3ba-108"><xref:System.Windows.Markup.AmbientAttribute> 也可以套用至 CLR 方法，以支援屬性設定為環境的 XAML 可附加屬性。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-108"><xref:System.Windows.Markup.AmbientAttribute> can also be applied to a CLR method, to support attributing a XAML attachable property as ambient.</span></span> <span data-ttu-id="3e3ba-109">這是可能必要的因為在 CLR 實作的 XAML 附加的屬性實作/表示為存取子模式，以反映`get`和`set`方法。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-109">This is potentially necessary because in a CLR implementation a XAML attached property is implemented/represented to reflection as an accessor pattern with `get` and `set` methods.</span></span> <span data-ttu-id="3e3ba-110">沒有實際的 CLR 屬性至屬性存在，因此限制的使用量<xref:System.AttributeTargets>至`Property`會無法啟用指定為環境的可附加成員。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-110">No actual CLR property to attribute exists, so restricting usage for <xref:System.AttributeTargets> to `Property` would not have enabled specifying an attachable member as ambient.</span></span> <span data-ttu-id="3e3ba-111">您想要報告為環境之可附加成員、 屬性`get`存取子。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-111">For an attachable member that you want to report as ambient, attribute the `get` accessor.</span></span> <span data-ttu-id="3e3ba-112">您不應該嘗試不是特別支援方法的可附加成員的屬性方法。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-112">You should not attempt to attribute methods that are not specifically support methods of attachable members.</span></span>  
  
 <span data-ttu-id="3e3ba-113">在舊版的.NET Framework 中，這個類別會存在於 WindowsBase WPF 特定組件中。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-113">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="3e3ba-114">在  [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]， <xref:System.Windows.Markup.AmbientAttribute> System.Xaml 組件中。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-114">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="3e3ba-115">如需詳細資訊，請參閱 [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-115">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 <span data-ttu-id="3e3ba-116">環境型別 (型別位置<xref:System.Windows.Markup.AmbientAttribute>在類型層級) 可用於其中屬性的型別需要解決順序的特定 XAML 處理情況。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-116">Ambient types (types where <xref:System.Windows.Markup.AmbientAttribute> is applied at type level) can be used for certain XAML processing situations where the type of a property needs to be resolved out of order.</span></span>  
  
## <a name="object-writer-scenarios"></a><span data-ttu-id="3e3ba-117">物件寫入器案例</span><span class="sxs-lookup"><span data-stu-id="3e3ba-117">Object Writer Scenarios</span></span>  
 <span data-ttu-id="3e3ba-118">如果您要定義在 XAML 物件寫入器，而且您遇到的屬性、 方法或類型其中<xref:System.Windows.Markup.AmbientAttribute>是套用，您通常必須存取服務，以判斷需要寫出物件所需的環境屬性查閱行為。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-118">If you are defining a XAML object writer, and you encounter a property, method or type where <xref:System.Windows.Markup.AmbientAttribute> is applied, you typically must access a service to determine the intended ambient property lookup behavior that is needed for writing out objects.</span></span> <span data-ttu-id="3e3ba-119">如需詳細資訊，請參閱 <xref:System.Xaml.IAmbientProvider>。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-119">For more information, see <xref:System.Xaml.IAmbientProvider>.</span></span>  
  
## <a name="value-converters"></a><span data-ttu-id="3e3ba-120">值轉換器</span><span class="sxs-lookup"><span data-stu-id="3e3ba-120">Value Converters</span></span>  
 <span data-ttu-id="3e3ba-121">型別轉換器或標記延伸模組可能需要知道的環境的資訊，以處理屬性，代表間接的型別對應，例如使用或不限定性條件的字串名稱來指定成員或類型的屬性。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-121">Type converters or markup extensions might need to know the ambient information in order to process properties that represent indirect type mappings, such as properties that specify members or types by string names with or without qualification.</span></span> <span data-ttu-id="3e3ba-122">在此案例中，<xref:System.Windows.Markup.AmbientAttribute>並不打算直接用於值轉換器的程式碼邏輯。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-122">In this scenario, <xref:System.Windows.Markup.AmbientAttribute> is not intended to be used directly for value converter code logic.</span></span> <span data-ttu-id="3e3ba-123">相反地，值轉換器應依賴 XAML 寫入器處理行為，將會通過<xref:System.Xaml.IAmbientProvider>在其服務內容，您的值轉換器方法時呼叫。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-123">Rather, the value converter should rely on the XAML writer processing behavior, which will pass <xref:System.Xaml.IAmbientProvider> in its service contexts to your value converter methods when called.</span></span>  
  
## <a name="wpf-scenarios-for-ambientattribute"></a><span data-ttu-id="3e3ba-124">AmbientAttribute 的 WPF 情節</span><span class="sxs-lookup"><span data-stu-id="3e3ba-124">WPF Scenarios for AmbientAttribute</span></span>  
  
-   <span data-ttu-id="3e3ba-125">屬性<xref:System.Windows.Style>(<xref:System.Windows.Style.TargetType%2A>) 可以限定所需的屬性名稱查閱所需的屬性名稱中找到支援參考<xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType>值。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-125">A property of a <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) can qualify the necessary property name lookups that are needed to find the backing references for property names in <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> values.</span></span>  
  
-   <span data-ttu-id="3e3ba-126">中的所有內容`Resources`屬性 (項目<xref:System.Windows.ResourceDictionary>) 範本的內容，以及應該能夠存取做為值的其他對等。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-126">All content within a `Resources` property (items of a <xref:System.Windows.ResourceDictionary>) as well as template content, should be able to access other peers as values.</span></span> <span data-ttu-id="3e3ba-127">宣告整個`Resources`屬性做為環境叫用的邏輯，這可在 WPF XAML 剖析器。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-127">Declaring the entire `Resources` property as ambient invokes logic that enables this in the WPF XAML parser.</span></span>  
  
 <span data-ttu-id="3e3ba-128">請參閱<xref:System.Windows.ResourceDictionary>如需設定的案例的範例<xref:System.Windows.Markup.AmbientAttribute>類型層級。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-128">See <xref:System.Windows.ResourceDictionary> for an example of a scenario for setting <xref:System.Windows.Markup.AmbientAttribute> at type level.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1"><span data-ttu-id="3e3ba-129">自訂型別和程式庫的 XAML 相關 CLR 屬性</span><span class="sxs-lookup"><span data-stu-id="3e3ba-129">XAML-Related CLR Attributes For Custom Types and Libraries</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4"><span data-ttu-id="3e3ba-130">定義可搭配 .NET Framework XAML 服務使用的自訂類型</span><span class="sxs-lookup"><span data-stu-id="3e3ba-130">Defining Custom Types for Use with .NET Framework XAML Services</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211"><span data-ttu-id="3e3ba-131">.NET XAML 服務概念文件</span><span class="sxs-lookup"><span data-stu-id="3e3ba-131">NET XAML Services Conceptual Documentation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e3ba-132">初始化 <see cref="T:System.Windows.Markup.AmbientAttribute" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="3e3ba-132">Initializes a new instance of the <see cref="T:System.Windows.Markup.AmbientAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>