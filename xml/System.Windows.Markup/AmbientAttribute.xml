<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e2be581d520214f38d6745bdf50a8d43d530d8a1" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53465190" /></Metadata><TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定應該視為環境的屬性或類型。 環境概念與 XAML 處理器如何判斷成員類別擁有者有關。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 環境屬性是一個屬性預期的值時建立物件圖形，但典型的型別成員查閱已基於立即設定所建立的 XAML 節點的暫止要用於剖析器內容。 有兩個主要的案例所需的環境的概念：  
  
-   同一個物件的其他某個屬性影響，並會限定物件屬性查閱的運作方式。  
  
-   此屬性代表較大的延遲機制，來查閱成員值的環境功能延伸至目前的物件內所含的所有物件。  
  
 這個屬性可以套用至容器，可讓環境屬性查閱行為，預期的特定屬性，或可以套用至類別，以啟用在所有情況下，該屬性的值類型的環境屬性的行為。  
  
 <xref:System.Windows.Markup.AmbientAttribute> 也可以套用至 CLR 方法，以支援屬性設定為環境的 XAML 可附加屬性。 這是可能必要的因為在 CLR 實作的 XAML 附加的屬性實作/表示為存取子模式，以反映`get`和`set`方法。 沒有實際的 CLR 屬性至屬性存在，因此限制的使用量<xref:System.AttributeTargets>至`Property`會無法啟用指定為環境的可附加成員。 您想要報告為環境之可附加成員、 屬性`get`存取子。 您不應該嘗試不是特別支援方法的可附加成員的屬性方法。  
  
 在舊版的.NET Framework 中，這個類別會存在於 WindowsBase WPF 特定組件中。 在  [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]， <xref:System.Windows.Markup.AmbientAttribute> System.Xaml 組件中。 如需詳細資訊，請參閱 [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)。  
  
 環境型別 (型別位置<xref:System.Windows.Markup.AmbientAttribute>在類型層級) 可用於其中屬性的型別需要解決順序的特定 XAML 處理情況。  
  
## <a name="object-writer-scenarios"></a>物件寫入器案例  
 如果您要定義在 XAML 物件寫入器，而且您遇到的屬性、 方法或類型其中<xref:System.Windows.Markup.AmbientAttribute>是套用，您通常必須存取服務，以判斷需要寫出物件所需的環境屬性查閱行為。 如需詳細資訊，請參閱<xref:System.Xaml.IAmbientProvider>。  
  
## <a name="value-converters"></a>值轉換器  
 型別轉換器或標記延伸模組可能需要知道的環境的資訊，以處理屬性，代表間接的型別對應，例如使用或不限定性條件的字串名稱來指定成員或類型的屬性。 在此案例中，<xref:System.Windows.Markup.AmbientAttribute>並不打算直接用於值轉換器的程式碼邏輯。 相反地，值轉換器應依賴 XAML 寫入器處理行為，將會通過<xref:System.Xaml.IAmbientProvider>在其服務內容，您的值轉換器方法時呼叫。  
  
## <a name="wpf-scenarios-for-ambientattribute"></a>AmbientAttribute 的 WPF 情節  
  
-   屬性<xref:System.Windows.Style>(<xref:System.Windows.Style.TargetType%2A>) 可以限定所需的屬性名稱查閱所需的屬性名稱中找到支援參考<xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType>值。  
  
-   中的所有內容`Resources`屬性 (項目<xref:System.Windows.ResourceDictionary>) 範本的內容，以及應該能夠存取做為值的其他對等。 宣告整個`Resources`屬性做為環境叫用的邏輯，這可在 WPF XAML 剖析器。  
  
 請參閱<xref:System.Windows.ResourceDictionary>如需設定的案例的範例<xref:System.Windows.Markup.AmbientAttribute>類型層級。  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1">自訂型別和程式庫的 XAML 相關 CLR 屬性</related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4">定義可搭配 .NET Framework XAML 服務使用的自訂類型</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211">.NET XAML 服務概念文件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Markup.AmbientAttribute" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>