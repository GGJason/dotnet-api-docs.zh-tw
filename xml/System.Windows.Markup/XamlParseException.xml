<Type Name="XamlParseException" FullName="System.Windows.Markup.XamlParseException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7785f59cbc386e6af15aa0c6eb7b76532178de9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30659002" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlParseException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit XamlParseException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlParseException" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlParseException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlParseException : SystemException" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d9555-101">表示來自 WPF XAML 剖析器之剖析器特有例外狀況的例外狀況類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d9555-101">Represents the exception class for parser-specific exceptions from a WPF XAML parser.</span>
      </span>
      <span data-ttu-id="d9555-102">這個例外狀況用於 .NET Framework 3.0 和 .NET Framework 3.5 中的 XAML API 或 WPF XAML 剖析器作業，或特別供 WPF XAML 剖析器在呼叫 <see cref="T:System.Windows.Markup.XamlReader" /> API 時使用。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d9555-102">This exception is used in XAML API or WPF XAML parser operations from .NET Framework 3.0 and .NET Framework 3.5, or for specific use of the WPF XAML parser by calling <see cref="T:System.Windows.Markup.XamlReader" /> API.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9555-103"><xref:System.Windows.Markup.XamlParseException> 只適用於執行記憶體剖析和載入的 XAML WPF 應用程式的 WPF 實作 XAML 剖析器。</span><span class="sxs-lookup"><span data-stu-id="d9555-103"><xref:System.Windows.Markup.XamlParseException> is used only for the WPF-implemented XAML parser that performs the XAML parsing and loading for WPF applications.</span></span> <span data-ttu-id="d9555-104">具體來說，例外狀況，才適用時應用程式的目標[!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]和[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="d9555-104">Specifically, the exception is only relevant when an application targets [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] and [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span></span> <span data-ttu-id="d9555-105">例外狀況也可能來自使用者程式碼中執行階段內執行的 WPF 應用程式載入的 XAML WPF 實作 XAML 剖析器相連結的 Api 呼叫 (例如，若要呼叫<xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="d9555-105">The exception can also originate from user code in run-time calls to APIs that hook up the WPF-implemented XAML parser to load XAML from within a running WPF application (for example, calls to <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="d9555-106">如[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]、<xref:System.Xaml.XamlParseException>通常會報告 XAML 處理例外狀況的例外狀況在不同的命名空間中定義 (<xref:System.Xaml>) 和不同的組件 (System.Xaml)。</span><span class="sxs-lookup"><span data-stu-id="d9555-106">For [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <xref:System.Xaml.XamlParseException> exception that typically reports XAML processing exceptions is defined in a different namespace (<xref:System.Xaml>) and a different assembly (System.Xaml).</span></span>  
  
 <span data-ttu-id="d9555-107">除非您是對等項目寫入 WPF XAML 剖析器，或使用[!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]和[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]目標，您通常不會擲回<xref:System.Windows.Markup.XamlParseException>從自己的程式碼。</span><span class="sxs-lookup"><span data-stu-id="d9555-107">Unless you are writing an equivalent to the WPF XAML parser or working with [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] and [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] targeting, you generally will not throw <xref:System.Windows.Markup.XamlParseException> from your own code.</span></span> <span data-ttu-id="d9555-108">但是，有時候是必要的例外狀況處理。</span><span class="sxs-lookup"><span data-stu-id="d9555-108">However, handling for the exception is sometimes necessary.</span></span> <span data-ttu-id="d9555-109">如需應用程式案例，其中您可能想要隱藏 XAML 剖析錯誤， <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.Dispatcher.UnhandledException>應用程式層級的事件處理常式是一種方式處理執行階段<xref:System.Windows.Markup.XamlParseException>。</span><span class="sxs-lookup"><span data-stu-id="d9555-109">For application scenarios, where you may want to suppress XAML parse errors, a <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.Dispatcher.UnhandledException> event handler at the application level is one way to handle a run-time <xref:System.Windows.Markup.XamlParseException>.</span></span> <span data-ttu-id="d9555-110">是否要隱藏例外狀況，或將這些介面對使用者程式碼取決於您如何設計您的應用程式載入 XAML 的用途，並指派到 XAML 應用程式的信任層級載入。</span><span class="sxs-lookup"><span data-stu-id="d9555-110">Whether to suppress exceptions or let them surface to user code depends on how you design your application for purposes of loading XAML, and the trust level that you assign to the XAML your application loads.</span></span> <span data-ttu-id="d9555-111">如需詳細資訊，請參閱[XAML 安全性考量](~/docs/framework/xaml-services/xaml-security-considerations.md)或 「 XAML 安全性 > 一節[XAML 概觀 (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="d9555-111">For more information, see [XAML Security Considerations](~/docs/framework/xaml-services/xaml-security-considerations.md) or "XAML Security" section of [XAML Overview (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md).</span></span>  
  
 <span data-ttu-id="d9555-112">頁面的 應用程式中，當<xref:System.Windows.Markup.XamlParseException>會擲回，通常是在內容中`InitializeComponent`page 類別，也就是在每個頁面層級的 WPF XAML 剖析 WPF 應用程式模型使用方式的進入點所做的呼叫。</span><span class="sxs-lookup"><span data-stu-id="d9555-112">For pages of an application, when the <xref:System.Windows.Markup.XamlParseException> is thrown, it is usually in the context of the `InitializeComponent` call made by your page class, which is the entry point for the WPF application model's usage of the WPF XAML parser at the per-page level.</span></span> <span data-ttu-id="d9555-113">因此另一個可能的處理策略是放置`try/catch`區塊以`InitializeComponent`。</span><span class="sxs-lookup"><span data-stu-id="d9555-113">Therefore another possible handling strategy is to place `try/catch` blocks in `InitializeComponent`.</span></span> <span data-ttu-id="d9555-114">不過，這項技術就不會整合也使用樣板時，視覺化設計介面，以及產生其他來源的攔截向上`InitializeComponent`。</span><span class="sxs-lookup"><span data-stu-id="d9555-114">However, this technique does not integrate well with templates, visual design surfaces and other generated sources that hook up `InitializeComponent`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d9555-115">初始化 <see cref="T:System.Windows.Markup.XamlParseException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-115">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9555-116">初始化 <see cref="T:System.Windows.Markup.XamlParseException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-116">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="d9555-117">例外狀況訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-117">The exception message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9555-118">使用指定的例外狀況訊息字串，初始化 <see cref="T:System.Windows.Markup.XamlParseException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-118">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message string.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlParseException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlParseException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="d9555-119">包含序列化或還原序列化物件所需的全部資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-119">Contains all the information that is required to serialize or deserialize the object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="d9555-120">序列化資料流的來源和目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-120">The source and destination of a serialized stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9555-121">初始化 <see cref="T:System.Windows.Markup.XamlParseException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-121">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9555-122">這個建構函式用於序列化跨應用程式網域或電腦界限，這種例外狀況封送處理。</span><span class="sxs-lookup"><span data-stu-id="d9555-122">This constructor is used for serialization when marshaling an exception of this type across an application domain or machine boundary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="d9555-123">例外狀況訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-123">The exception message.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="d9555-124">發生的初始例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-124">The initial exception that occurred.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9555-125">使用指定的例外狀況訊息字串和內部例外狀況，初始化<see cref="T:System.Windows.Markup.XamlParseException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-125">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message string and inner exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9555-126">做為前一個例外狀況直接結果擲回的例外狀況應該包含前一個例外狀況的參考。</span><span class="sxs-lookup"><span data-stu-id="d9555-126">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception.</span></span> <span data-ttu-id="d9555-127"><xref:System.Exception.InnerException%2A> 屬性會傳回與傳入建構函式中相同的值；如果 `null` 屬性沒有提供內部例外值給建構函式，則傳回 <xref:System.Exception.InnerException%2A>。</span><span class="sxs-lookup"><span data-stu-id="d9555-127">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException (string message, int lineNumber, int linePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 lineNumber, int32 linePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, lineNumber As Integer, linePosition As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException(System::String ^ message, int lineNumber, int linePosition);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="d9555-128">例外狀況訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-128">The exception message.</span>
          </span>
        </param>
        <param name="lineNumber">
          <span data-ttu-id="d9555-129">發生例外狀況的行號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-129">The line number where the exception occurred.</span>
          </span>
        </param>
        <param name="linePosition">
          <span data-ttu-id="d9555-130">行中發生例外狀況的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-130">The position in the line at which the exception occurred.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9555-131">使用指定的例外狀況訊息字串和指定的行號與在行中的位置，初始化 <see cref="T:System.Windows.Markup.XamlParseException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-131">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message string, and the specified line number and position in the line.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException (string message, int lineNumber, int linePosition, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 lineNumber, int32 linePosition, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, lineNumber As Integer, linePosition As Integer, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException(System::String ^ message, int lineNumber, int linePosition, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="d9555-132">例外狀況訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-132">The exception message.</span>
          </span>
        </param>
        <param name="lineNumber">
          <span data-ttu-id="d9555-133">發生例外狀況的行號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-133">The line number where the exception occurred.</span>
          </span>
        </param>
        <param name="linePosition">
          <span data-ttu-id="d9555-134">行中發生例外狀況的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-134">The position in the line at which the exception occurred.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="d9555-135">發生的初始例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-135">The initial exception that occurred.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9555-136">使用指定的例外狀況訊息、內部例外狀況、行號和在行中的位置，初始化 <see cref="T:System.Windows.Markup.XamlParseException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-136">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message, inner exception, line number, and position in the line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9555-137">做為前一個例外狀況直接結果擲回的例外狀況應該包含前一個例外狀況的參考。</span><span class="sxs-lookup"><span data-stu-id="d9555-137">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception.</span></span> <span data-ttu-id="d9555-138"><xref:System.Exception.InnerException%2A> 屬性會傳回與傳入建構函式中相同的值；如果 `null` 屬性沒有提供內部例外值給建構函式，則傳回 <xref:System.Exception.InnerException%2A>。</span><span class="sxs-lookup"><span data-stu-id="d9555-138">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9555-139">在擲回例外狀況時取得基底 URI 資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-139">Gets base URI information when the exception is thrown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9555-140">剖析器內容基底 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-140">The parser context base URI.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9555-141">基底 URI 是使用者可能可以使用因為剖析器內容時，發生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="d9555-141">Base URI is potentially available because of parser context when the exception occurred.</span></span> <span data-ttu-id="d9555-142">了解基底 URI 可用於偵錯的情況下，資源解析錯誤的根本原因。</span><span class="sxs-lookup"><span data-stu-id="d9555-142">Knowing the base URI can be useful for debugging cases where a resource resolution error is the underlying cause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="d9555-143">要向其中加入序列化資料的序列化資訊物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-143">The serialization information object to add the serialization data to.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="d9555-144">這個序列化的目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-144">The destination for this serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9555-145">取得透過填入指定的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件來序列化指定之物件所需的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-145">Gets the data that is required to serialize the specified object by populating the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9555-146"><xref:System.Windows.Markup.XamlParseException.GetObjectData%2A> 設定<xref:System.Runtime.Serialization.SerializationInfo>物件序列化的所有例外狀況物件資料。</span><span class="sxs-lookup"><span data-stu-id="d9555-146"><xref:System.Windows.Markup.XamlParseException.GetObjectData%2A> sets a <xref:System.Runtime.Serialization.SerializationInfo> object with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="d9555-147">在還原序列化期間，從在資料流上傳輸的 <xref:System.Runtime.Serialization.SerializationInfo> 重新組成例外狀況。</span><span class="sxs-lookup"><span data-stu-id="d9555-147">During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d9555-148">提供序列化服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-148">for providing serialization services.</span>
          </span>
          <span data-ttu-id="d9555-149">列舉型別相關聯：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />安全性動作： <see cref="M:System.Security.PermissionSet.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-149">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> Security action: <see cref="M:System.Security.PermissionSet.Demand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="KeyContext">
      <MemberSignature Language="C#" Value="public object KeyContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object KeyContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.KeyContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ KeyContext { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9555-150">取得或設定項目的機碼值，該項目在發生例外狀況的字典中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-150">Gets or sets the key value of the item in a dictionary where the exception occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9555-151">相關的 XAML <see langword="x:Key" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-151">The relevant XAML <see langword="x:Key" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.ResourceDictionary" />
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9555-152">取得發生例外狀況的行號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-152">Gets the line number where the exception occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9555-153">行號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-153">The line number.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9555-154">取得行中發生例外狀況的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-154">Gets the position in the line where the exception occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9555-155">行位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-155">The line position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameContext">
      <MemberSignature Language="C#" Value="public string NameContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.NameContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameContext { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9555-156">取得或設定發生例外狀況之物件的 XAML 名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-156">Gets or sets the XAML name of the object where the exception occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9555-157">物件的 XAML 名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-157">The XAML name of the object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UidContext">
      <MemberSignature Language="C#" Value="public string UidContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UidContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.UidContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UidContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UidContext { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9555-158">取得或設定發生例外狀況之物件的 [x:Uid 指示詞](~/docs/framework/xaml-services/x-uid-directive.md)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-158">Gets or sets the [x:Uid Directive](~/docs/framework/xaml-services/x-uid-directive.md) of the object where the exception occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9555-159">
            <see langword="Uid" /> 字串的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9555-159">The value of the <see langword="Uid" /> string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>