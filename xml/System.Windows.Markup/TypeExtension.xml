<Type Name="TypeExtension" FullName="System.Windows.Markup.TypeExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61ac1224d62662355e58bc4a47a46fdf9e214201" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30658122" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeExtension : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeExtension extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.TypeExtension" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeExtension&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeExtension : System::Windows::Markup::MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.TypeExtensionConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Type))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>實作標記延伸，這個標記延伸會根據字串輸入傳回 <see cref="T:System.Type" />。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]使用量資訊，請參閱[X:type 標記延伸](~/docs/framework/xaml-services/x-type-markup-extension.md)。  
  
> [!NOTE]
>  `{x:Type}`功能通常是從標記的使用者程式碼引動過程。 其實作的 XAML 支援的程式碼，來自於類型解析服務<xref:System.Windows.Markup.IXamlTypeResolver>和相關的作用實作 XAML 結構描述內容。 請勿嘗試參考<xref:System.Windows.Markup.TypeExtension.ProvideValue%2A>取代<xref:System.Windows.Markup.IXamlTypeResolver>服務提供者; 您要傳入的內容可能不是有效的類型解析，而嘗試不使用有效的服務呼叫將會失敗。  
  
## <a name="wpf-usage-notes"></a>WPF 使用注意事項  
 型別參考常用樣式、 範本和資料繫結功能區域，在[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]，當這些功能所參考的 XAML。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Markup.TypeExtension" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Markup.TypeExtension" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeExtension (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeExtension(System::String ^ typeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">識別要參考之類型的字串。 這個字串使用 <c>prefix:className</c> 格式。 <c>prefix</c> 是 XAML 命名空間的對應前置詞，只有未對應至預設 XAML 命名空間的參考類型才需要。</param>
        <summary>初始化 <see cref="T:System.Windows.Markup.TypeExtension" /> 類別的新執行個體，在這個過程中會根據提供的 <paramref name="typeName" /> 字串初始化 <see cref="P:System.Windows.Markup.TypeExtension.TypeName" /> 值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您設定於建構函式，則不會評估此值。 如果值不是`null`，將一開始接受的值。 實際剖析和數值的評估會延遲，直到<xref:System.Windows.Markup.TypeExtension.ProvideValue%2A>剖析 XAML 時，且具有作用中的可用服務內容會呼叫此擴充功能上。 在此階段`typeName`必須是可解析為類型，以在 XAML 結構描述內容中，且該類型會傳回。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">嘗試將 <paramref name="typeName" /> 指定為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeExtension (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeExtension(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要用這個 <see cref="T:System.Windows.Markup.TypeExtension" /> 表示的型別。</param>
        <summary>初始化 <see cref="T:System.Windows.Markup.TypeExtension" /> 類別的新執行個體，在這個過程中會直接宣告型別。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這是執行的階段程式碼的使用方式的 helper 方法<xref:System.Windows.Markup.TypeExtension>並不是標記延伸的一般實作模式的一部分。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> 是 <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">可以為標記延伸提供服務的物件。 這個提供者必須能夠為 <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> 提供服務。</param>
        <summary>傳回物件，這個物件應該設定於套用這個延伸的屬性上。 如果是 <see cref="T:System.Windows.Markup.TypeExtension" />，則這是針對所要求的型別名稱計算的 <see cref="T:System.Type" /> 值。</summary>
        <returns>要在套用延伸的屬性上設定的 <see cref="T:System.Type" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以傳遞`null`如`serviceProvider`，但前提是此<xref:System.Windows.Markup.TypeExtension>執行個體的建立與初始，則為 true 的型別建構函式，而非`typeName`。 否則，這個標記延伸實作依賴服務傳遞`serviceProvider`。 它不得為`null`。 `serviceProvider`必須為提供的服務<xref:System.Windows.Markup.IXamlTypeResolver>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          延伸的 <paramref name="member" /> 值是 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">無法正確剖析 <paramref name="typeName" /> 字串的某個部分。  
  
 -或-  
  
 <paramref name="serviceProvider" /> 未提供 <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> 的服務  
  
 -或-  
  
 <paramref name="typeName" /> 值沒有解析為型別。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceProvider" /> 是 <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.TypeExtension.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.ConstructorArgument("type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定這個例外狀況的類型資訊。</summary>
        <value>已建立的類型。 為便於執行階段使用，此型別在進行取得存取時可能為 <see langword="null" />，但在設定時則無法設為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 除非刻意這個執行個體具現化與<xref:System.Windows.Markup.TypeExtension.%23ctor%28System.Type%29>簽章的建構函式，這個值會是`null`。 這個屬性不會重設時<xref:System.Windows.Markup.TypeExtension.ProvideValue%2A>呼叫。 如果您要為 true 的類型表示您應該一律呼叫<xref:System.Windows.Markup.TypeExtension.ProvideValue%2A>而不是檢查這個屬性。  
  
 這個屬性是可設定每個有關標記延伸使用方式的一般規則。 不過，如果您要設定與<xref:System.Type>，則這個標記延伸的目的為無關，因為相同<xref:System.Type>從傳回<xref:System.Windows.Markup.TypeExtension.ProvideValue%2A>呼叫。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">嘗試設定為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.TypeExtension.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定以這個標記延伸表示的類型名稱。</summary>
        <value>識別類型的字串。 這個字串使用格式*前置詞*<c>:</c>*className*。 (*前置詞*XML 命名空間的對應前置詞，且只需參考 wpf 未對應至預設 XML 命名空間的型別 ([!INCLUDE[TLA#tla_wpfxmlnsv1](~/includes/tlasharptla-wpfxmlnsv1-md.md)])。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">嘗試設定為 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>