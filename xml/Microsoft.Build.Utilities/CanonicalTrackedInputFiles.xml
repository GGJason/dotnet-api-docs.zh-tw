<Type Name="CanonicalTrackedInputFiles" FullName="Microsoft.Build.Utilities.CanonicalTrackedInputFiles">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ebafb372e5176547a1accc4500359a9239c8d72f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CanonicalTrackedInputFiles" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CanonicalTrackedInputFiles extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.CanonicalTrackedInputFiles" />
  <TypeSignature Language="VB.NET" Value="Public Class CanonicalTrackedInputFiles" />
  <TypeSignature Language="C++ CLI" Value="public ref class CanonicalTrackedInputFiles" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="866a5-101">這個類別是標準格式 .read。</span>
      <span class="sxs-lookup">
        <span data-stu-id="866a5-101">This class is the filetracking log interpreter for .read.</span>
      </span>
      <span data-ttu-id="866a5-102">使用標準格式或已進行根運算 (^) 以符合標準格式的追蹤記錄</span>
      <span class="sxs-lookup">
        <span data-stu-id="866a5-102">tracking logs in canonical form or those that have been rooted (^) to make them canonical</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="866a5-103">多重輸入來源檔案的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-103">Constructor for multiple input source files</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanonicalTrackedInputFiles (Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] sourceFiles, Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem[] sourceFiles, class Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tlogFiles As ITaskItem(), sourceFiles As ITaskItem(), outputs As CanonicalTrackedOutputFiles, useMinimalRebuildOptimization As Boolean, maintainCompositeRootingMarkers As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CanonicalTrackedInputFiles(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sourceFiles, Microsoft::Build::Utilities::CanonicalTrackedOutputFiles ^ outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="sourceFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="outputs" Type="Microsoft.Build.Utilities.CanonicalTrackedOutputFiles" />
        <Parameter Name="useMinimalRebuildOptimization" Type="System.Boolean" />
        <Parameter Name="maintainCompositeRootingMarkers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tlogFiles">
          <span data-ttu-id="866a5-104">.read。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-104">The .read.</span>
          </span>
          <span data-ttu-id="866a5-105">tlog 檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-105">tlog files to interpret</span>
          </span>
        </param>
        <param name="sourceFiles">
          <span data-ttu-id="866a5-106">要為其解譯相依性的主要來源檔</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-106">The primary source files to interpret dependencies for</span>
          </span>
        </param>
        <param name="outputs">
          <span data-ttu-id="866a5-107">藉由編譯此組來源而產生的輸出檔</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-107">The output files produced by compiling this set of sources</span>
          </span>
        </param>
        <param name="useMinimalRebuildOptimization">
          <span data-ttu-id="866a5-108">警告：最小重建最佳化需要指定 100% 精確的計算輸出！</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-108">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</span>
          </span>
        </param>
        <param name="maintainCompositeRootingMarkers">
          <span data-ttu-id="866a5-109">true 表示將複合根 (Composite Rooting) 標記保留在周圍 (多對一的情況)，或 false 表示將其銷毀 (一對一或一對多的情況)</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-109">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="866a5-110">多重輸入來源檔案的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-110">Constructor for multiple input source files</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanonicalTrackedInputFiles (Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] sourceFiles, Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem[] sourceFiles, class Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, class Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tlogFiles As ITaskItem(), sourceFiles As ITaskItem(), excludedInputPaths As ITaskItem(), outputs As CanonicalTrackedOutputFiles, useMinimalRebuildOptimization As Boolean, maintainCompositeRootingMarkers As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CanonicalTrackedInputFiles(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sourceFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ excludedInputPaths, Microsoft::Build::Utilities::CanonicalTrackedOutputFiles ^ outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="sourceFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="excludedInputPaths" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="outputs" Type="Microsoft.Build.Utilities.CanonicalTrackedOutputFiles" />
        <Parameter Name="useMinimalRebuildOptimization" Type="System.Boolean" />
        <Parameter Name="maintainCompositeRootingMarkers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tlogFiles">
          <span data-ttu-id="866a5-111">.read。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-111">The .read.</span>
          </span>
          <span data-ttu-id="866a5-112">tlog 檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-112">tlog files to interpret</span>
          </span>
        </param>
        <param name="sourceFiles">
          <span data-ttu-id="866a5-113">要為其解譯相依性的主要來源檔</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-113">The primary source files to interpret dependencies for</span>
          </span>
        </param>
        <param name="excludedInputPaths">
          <span data-ttu-id="866a5-114">一組路徑，包含在檢查是否為最新時會加以忽略的檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-114">The set of paths that contain files that are to be ignored during up to date check</span>
          </span>
        </param>
        <param name="outputs">
          <span data-ttu-id="866a5-115">藉由編譯此組來源而產生的輸出檔</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-115">The output files produced by compiling this set of sources</span>
          </span>
        </param>
        <param name="useMinimalRebuildOptimization">
          <span data-ttu-id="866a5-116">警告：最小重建最佳化需要指定 100% 精確的計算輸出！</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-116">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</span>
          </span>
        </param>
        <param name="maintainCompositeRootingMarkers">
          <span data-ttu-id="866a5-117">true 表示將複合根 (Composite Rooting) 標記保留在周圍 (多對一的情況)，或 false 表示將其銷毀 (一對一或一對多的情況)</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-117">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="866a5-118">多重輸入來源檔案的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-118">Constructor for multiple input source files</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanonicalTrackedInputFiles (Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem sourceFile, Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITask ownerTask, class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem sourceFile, class Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, class Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ownerTask As ITask, tlogFiles As ITaskItem(), sourceFile As ITaskItem, excludedInputPaths As ITaskItem(), outputs As CanonicalTrackedOutputFiles, useMinimalRebuildOptimization As Boolean, maintainCompositeRootingMarkers As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CanonicalTrackedInputFiles(Microsoft::Build::Framework::ITask ^ ownerTask, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, Microsoft::Build::Framework::ITaskItem ^ sourceFile, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ excludedInputPaths, Microsoft::Build::Utilities::CanonicalTrackedOutputFiles ^ outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ownerTask" Type="Microsoft.Build.Framework.ITask" />
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="sourceFile" Type="Microsoft.Build.Framework.ITaskItem" />
        <Parameter Name="excludedInputPaths" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="outputs" Type="Microsoft.Build.Utilities.CanonicalTrackedOutputFiles" />
        <Parameter Name="useMinimalRebuildOptimization" Type="System.Boolean" />
        <Parameter Name="maintainCompositeRootingMarkers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ownerTask">
          <span data-ttu-id="866a5-119">正使用檔案追蹤程式的工作</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-119">The task that is using file tracker</span>
          </span>
        </param>
        <param name="tlogFiles">
          <span data-ttu-id="866a5-120">.read。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-120">The .read.</span>
          </span>
          <span data-ttu-id="866a5-121">tlog 檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-121">tlog files to interpret</span>
          </span>
        </param>
        <param name="sourceFile">
          <span data-ttu-id="866a5-122">要為其解譯相依性的主要來源檔</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-122">The primary source file to interpret dependencies for</span>
          </span>
        </param>
        <param name="excludedInputPaths">
          <span data-ttu-id="866a5-123">一組路徑，包含在檢查是否為最新時會加以忽略的檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-123">The set of paths that contain files that are to be ignored during up to date check</span>
          </span>
        </param>
        <param name="outputs">
          <span data-ttu-id="866a5-124">編譯這個來源後產生的輸出檔</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-124">The output files produced by compiling this source</span>
          </span>
        </param>
        <param name="useMinimalRebuildOptimization">
          <span data-ttu-id="866a5-125">警告：最小重建最佳化需要指定 100% 精確的計算輸出！</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-125">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</span>
          </span>
        </param>
        <param name="maintainCompositeRootingMarkers">
          <span data-ttu-id="866a5-126">true 表示將複合根 (Composite Rooting) 標記保留在周圍 (多對一的情況)，或 false 表示將其銷毀 (一對一或一對多的情況)</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-126">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="866a5-127">單一輸入來源檔案的建構函式</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-127">Constructor for a single input source file</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanonicalTrackedInputFiles (Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] sourceFiles, Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, Microsoft.Build.Framework.ITaskItem[] outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITask ownerTask, class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem[] sourceFiles, class Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, class Microsoft.Build.Framework.ITaskItem[] outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ownerTask As ITask, tlogFiles As ITaskItem(), sourceFiles As ITaskItem(), excludedInputPaths As ITaskItem(), outputs As ITaskItem(), useMinimalRebuildOptimization As Boolean, maintainCompositeRootingMarkers As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CanonicalTrackedInputFiles(Microsoft::Build::Framework::ITask ^ ownerTask, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sourceFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ excludedInputPaths, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ownerTask" Type="Microsoft.Build.Framework.ITask" />
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="sourceFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="excludedInputPaths" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="outputs" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="useMinimalRebuildOptimization" Type="System.Boolean" />
        <Parameter Name="maintainCompositeRootingMarkers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ownerTask">
          <span data-ttu-id="866a5-128">正使用檔案追蹤程式的工作</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-128">The task that is using file tracker</span>
          </span>
        </param>
        <param name="tlogFiles">
          <span data-ttu-id="866a5-129">.read。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-129">The .read.</span>
          </span>
          <span data-ttu-id="866a5-130">tlog 檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-130">tlog files to interpret</span>
          </span>
        </param>
        <param name="sourceFiles">
          <span data-ttu-id="866a5-131">要為其解譯相依性的主要來源檔</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-131">The primary source files to interpret dependencies for</span>
          </span>
        </param>
        <param name="excludedInputPaths">
          <span data-ttu-id="866a5-132">一組路徑，包含在檢查是否為最新時會加以忽略的檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-132">The set of paths that contain files that are to be ignored during up to date check</span>
          </span>
        </param>
        <param name="outputs">
          <span data-ttu-id="866a5-133">藉由編譯此組來源而產生的輸出檔</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-133">The output files produced by compiling this set of sources</span>
          </span>
        </param>
        <param name="useMinimalRebuildOptimization">
          <span data-ttu-id="866a5-134">警告：最小重建最佳化需要指定 100% 精確的計算輸出！</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-134">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</span>
          </span>
        </param>
        <param name="maintainCompositeRootingMarkers">
          <span data-ttu-id="866a5-135">true 表示將複合根 (Composite Rooting) 標記保留在周圍 (多對一的情況)，或 false 表示將其銷毀 (一對一或一對多的情況)</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-135">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="866a5-136">多重輸入來源檔案的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-136">Constructor for multiple input source files</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanonicalTrackedInputFiles (Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] sourceFiles, Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITask ownerTask, class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem[] sourceFiles, class Microsoft.Build.Framework.ITaskItem[] excludedInputPaths, class Microsoft.Build.Utilities.CanonicalTrackedOutputFiles outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ownerTask As ITask, tlogFiles As ITaskItem(), sourceFiles As ITaskItem(), excludedInputPaths As ITaskItem(), outputs As CanonicalTrackedOutputFiles, useMinimalRebuildOptimization As Boolean, maintainCompositeRootingMarkers As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CanonicalTrackedInputFiles(Microsoft::Build::Framework::ITask ^ ownerTask, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sourceFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ excludedInputPaths, Microsoft::Build::Utilities::CanonicalTrackedOutputFiles ^ outputs, bool useMinimalRebuildOptimization, bool maintainCompositeRootingMarkers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ownerTask" Type="Microsoft.Build.Framework.ITask" />
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="sourceFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="excludedInputPaths" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="outputs" Type="Microsoft.Build.Utilities.CanonicalTrackedOutputFiles" />
        <Parameter Name="useMinimalRebuildOptimization" Type="System.Boolean" />
        <Parameter Name="maintainCompositeRootingMarkers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ownerTask">
          <span data-ttu-id="866a5-137">正使用檔案追蹤程式的工作</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-137">The task that is using file tracker</span>
          </span>
        </param>
        <param name="tlogFiles">
          <span data-ttu-id="866a5-138">.read。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-138">The .read.</span>
          </span>
          <span data-ttu-id="866a5-139">tlog 檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-139">tlog files to interpret</span>
          </span>
        </param>
        <param name="sourceFiles">
          <span data-ttu-id="866a5-140">要為其解譯相依性的主要來源檔</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-140">The primary source files to interpret dependencies for</span>
          </span>
        </param>
        <param name="excludedInputPaths">
          <span data-ttu-id="866a5-141">一組路徑，包含在檢查是否為最新時會加以忽略的檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-141">The set of paths that contain files that are to be ignored during up to date check</span>
          </span>
        </param>
        <param name="outputs">
          <span data-ttu-id="866a5-142">藉由編譯此組來源而產生的輸出檔</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-142">The output files produced by compiling this set of sources</span>
          </span>
        </param>
        <param name="useMinimalRebuildOptimization">
          <span data-ttu-id="866a5-143">警告：最小重建最佳化需要指定 100% 精確的計算輸出！</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-143">WARNING: Minimal rebuild optimization requires 100% accurate computed outputs to be specified!</span>
          </span>
        </param>
        <param name="maintainCompositeRootingMarkers">
          <span data-ttu-id="866a5-144">true 表示將複合根 (Composite Rooting) 標記保留在周圍 (多對一的情況)，或 false 表示將其銷毀 (一對一或一對多的情況)</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-144">True to keep composite rooting markers around (many-to-one case) or false to shred them (one-to-one or one-to-many case)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="866a5-145">多重輸入來源檔案的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-145">Constructor for multiple input source files</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputeSourcesNeedingCompilation">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="866a5-146">這個方法會根據輸出檔和完整的輸入相依性圖形，計算需要編譯的來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-146">This method computes the sources that need to be compiled based on the output files and the full dependency graph of inputs.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComputeSourcesNeedingCompilation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] ComputeSourcesNeedingCompilation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Framework.ITaskItem[] ComputeSourcesNeedingCompilation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.ComputeSourcesNeedingCompilation" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeSourcesNeedingCompilation () As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ ComputeSourcesNeedingCompilation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="866a5-147">這個方法會根據輸出檔和完整的輸入相依性圖形，計算需要編譯的來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-147">This method computes the sources that need to be compiled based on the output files and the full dependency graph of inputs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="866a5-148">需要編譯之檔案的陣列</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-148">Array of files that need to be compiled</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeSourcesNeedingCompilation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] ComputeSourcesNeedingCompilation (bool searchForSubRootsInCompositeRootingMarkers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Framework.ITaskItem[] ComputeSourcesNeedingCompilation(bool searchForSubRootsInCompositeRootingMarkers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.ComputeSourcesNeedingCompilation(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ComputeSourcesNeedingCompilation (searchForSubRootsInCompositeRootingMarkers As Boolean) As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ ComputeSourcesNeedingCompilation(bool searchForSubRootsInCompositeRootingMarkers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchForSubRootsInCompositeRootingMarkers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="searchForSubRootsInCompositeRootingMarkers">
          <span data-ttu-id="866a5-149">如果為 true，則會在複合根標記中搜尋子根目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-149">If true, search composite rooting markers for subroots.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="866a5-150">這個方法會根據輸出檔和完整的輸入相依性圖形，計算需要編譯的來源，而且會選擇性在複合根標記中搜尋可能含有輸入檔的子根目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-150">This method computes the sources that need to be compiled based on the output files and the full dependency graph of inputs, optionally searching composite rooting markers for subroots that may contain input files.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="866a5-151">需要編譯之檔案的陣列</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-151">Array of files that need to be compiled</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependencyTable">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.Dictionary&lt;string,string&gt;&gt; DependencyTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.Dictionary`2&lt;string, string&gt;&gt; DependencyTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.DependencyTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependencyTable As Dictionary(Of String, Dictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::String ^, System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^&gt; ^ DependencyTable { System::Collections::Generic::Dictionary&lt;System::String ^, System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="866a5-152">取得相依性表格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-152">Gets the dependency table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="866a5-153">傳回相依性表格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-153">Returns the dependency table.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileIsExcludedFromDependencyCheck">
      <MemberSignature Language="C#" Value="public bool FileIsExcludedFromDependencyCheck (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool FileIsExcludedFromDependencyCheck(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.FileIsExcludedFromDependencyCheck(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileIsExcludedFromDependencyCheck (fileName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FileIsExcludedFromDependencyCheck(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="866a5-154">要測試之檔案的完整檔案路徑</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-154">Full path of the file to test</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="866a5-155">測試以確認是否已從追蹤的相依性檢查排除指定的檔案</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-155">Test to see if the specified file is excluded from tracked dependency checking</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="866a5-156">如果排除檔案，則傳回 true。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-156">Returns true of the file is excluded.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveDependenciesFromEntryIfMissing">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="866a5-157">移除指定之來源的輸出圖形項目和對應輸出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-157">Remove the output graph entries for the given sources and corresponding outputs.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveDependenciesFromEntryIfMissing">
      <MemberSignature Language="C#" Value="public void RemoveDependenciesFromEntryIfMissing (Microsoft.Build.Framework.ITaskItem source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDependenciesFromEntryIfMissing(class Microsoft.Build.Framework.ITaskItem source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDependenciesFromEntryIfMissing (source As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDependenciesFromEntryIfMissing(Microsoft::Build::Framework::ITaskItem ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="866a5-158">應該從圖形移除的來源</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-158">Source that should be removed from the graph</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="866a5-159">移除指定之來源的輸出圖形項目和對應輸出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-159">Remove the output graph entries for the given sources and corresponding outputs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDependenciesFromEntryIfMissing">
      <MemberSignature Language="C#" Value="public void RemoveDependenciesFromEntryIfMissing (Microsoft.Build.Framework.ITaskItem[] source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDependenciesFromEntryIfMissing(class Microsoft.Build.Framework.ITaskItem[] source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDependenciesFromEntryIfMissing (source As ITaskItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDependenciesFromEntryIfMissing(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="866a5-160">應該從圖形移除的來源</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-160">Sources that should be removed from the graph</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="866a5-161">移除指定之來源的輸出圖形項目和對應輸出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-161">Remove the output graph entries for the given sources and corresponding outputs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDependenciesFromEntryIfMissing">
      <MemberSignature Language="C#" Value="public void RemoveDependenciesFromEntryIfMissing (Microsoft.Build.Framework.ITaskItem source, Microsoft.Build.Framework.ITaskItem correspondingOutput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDependenciesFromEntryIfMissing(class Microsoft.Build.Framework.ITaskItem source, class Microsoft.Build.Framework.ITaskItem correspondingOutput) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDependenciesFromEntryIfMissing (source As ITaskItem, correspondingOutput As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDependenciesFromEntryIfMissing(Microsoft::Build::Framework::ITaskItem ^ source, Microsoft::Build::Framework::ITaskItem ^ correspondingOutput);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem" />
        <Parameter Name="correspondingOutput" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="866a5-162">應該從圖形移除的來源</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-162">Source that should be removed from the graph</span>
          </span>
        </param>
        <param name="correspondingOutput">
          <span data-ttu-id="866a5-163">對應至來源的輸出 (用於處理相同的檔案)</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-163">Outputs that correspond ot the sources (used for same file processing)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="866a5-164">移除指定之來源的輸出圖形項目和對應輸出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-164">Remove the output graph entries for the given sources and corresponding outputs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDependenciesFromEntryIfMissing">
      <MemberSignature Language="C#" Value="public void RemoveDependenciesFromEntryIfMissing (Microsoft.Build.Framework.ITaskItem[] source, Microsoft.Build.Framework.ITaskItem[] correspondingOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDependenciesFromEntryIfMissing(class Microsoft.Build.Framework.ITaskItem[] source, class Microsoft.Build.Framework.ITaskItem[] correspondingOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDependenciesFromEntryIfMissing (source As ITaskItem(), correspondingOutputs As ITaskItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDependenciesFromEntryIfMissing(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ source, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ correspondingOutputs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="correspondingOutputs" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="866a5-165">應該從圖形移除的來源</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-165">Sources that should be removed from the graph</span>
          </span>
        </param>
        <param name="correspondingOutputs">
          <span data-ttu-id="866a5-166">對應至來源的輸出 (用於處理相同的檔案)</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-166">Outputs that correspond ot the sources (used for same file processing)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="866a5-167">移除指定之來源的輸出圖形項目和對應輸出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-167">Remove the output graph entries for the given sources and corresponding outputs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveDependencyFromEntry">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="866a5-168">針對指定的來源和對應的輸出，移除輸出圖形項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-168">Remove the output graph entries for the given source and corresponding outputs.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveDependencyFromEntry">
      <MemberSignature Language="C#" Value="public void RemoveDependencyFromEntry (Microsoft.Build.Framework.ITaskItem source, Microsoft.Build.Framework.ITaskItem dependencyToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDependencyFromEntry(class Microsoft.Build.Framework.ITaskItem source, class Microsoft.Build.Framework.ITaskItem dependencyToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDependencyFromEntry (source As ITaskItem, dependencyToRemove As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDependencyFromEntry(Microsoft::Build::Framework::ITaskItem ^ source, Microsoft::Build::Framework::ITaskItem ^ dependencyToRemove);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem" />
        <Parameter Name="dependencyToRemove" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="866a5-169">應該從圖形移除的來源</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-169">Source that should be removed from the graph</span>
          </span>
        </param>
        <param name="dependencyToRemove">
          <span data-ttu-id="866a5-170">要移除的相依性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-170">The dependency to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="866a5-171">針對指定的來源和對應的輸出，移除輸出圖形項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-171">Remove the output graph entries for the given source and corresponding outputs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDependencyFromEntry">
      <MemberSignature Language="C#" Value="public void RemoveDependencyFromEntry (Microsoft.Build.Framework.ITaskItem[] sources, Microsoft.Build.Framework.ITaskItem dependencyToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDependencyFromEntry(class Microsoft.Build.Framework.ITaskItem[] sources, class Microsoft.Build.Framework.ITaskItem dependencyToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDependencyFromEntry (sources As ITaskItem(), dependencyToRemove As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDependencyFromEntry(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sources, Microsoft::Build::Framework::ITaskItem ^ dependencyToRemove);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sources" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="dependencyToRemove" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="sources">
          <span data-ttu-id="866a5-172">應該從圖形移除的來源</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-172">Sources that should be removed from the graph</span>
          </span>
        </param>
        <param name="dependencyToRemove">
          <span data-ttu-id="866a5-173">要移除的相依性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-173">The dependency to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="866a5-174">移除指定之來源的輸出圖形項目和對應輸出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-174">Remove the output graph entries for the given sources and corresponding outputs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveEntriesForSource">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="866a5-175">移除指定之來源及對應輸出的輸出圖形項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-175">Removes the output graph entries for the given sources and corresponding outputs.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveEntriesForSource">
      <MemberSignature Language="C#" Value="public void RemoveEntriesForSource (Microsoft.Build.Framework.ITaskItem source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveEntriesForSource(class Microsoft.Build.Framework.ITaskItem source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEntriesForSource (source As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEntriesForSource(Microsoft::Build::Framework::ITaskItem ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="866a5-176">應該從圖形移除的來源</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-176">Source that should be removed from the graph</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="866a5-177">移除指定之來源的輸出圖形項目和對應輸出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-177">Remove the output graph entries for the given sources and corresponding outputs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEntriesForSource">
      <MemberSignature Language="C#" Value="public void RemoveEntriesForSource (Microsoft.Build.Framework.ITaskItem[] source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveEntriesForSource(class Microsoft.Build.Framework.ITaskItem[] source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEntriesForSource (source As ITaskItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEntriesForSource(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="866a5-178">應該從圖形移除的來源</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-178">Sources that should be removed from the graph</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="866a5-179">移除指定之來源及對應輸出的輸出圖形項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-179">Removes the output graph entries for the given sources and corresponding outputs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEntryForSourceRoot">
      <MemberSignature Language="C#" Value="public void RemoveEntryForSourceRoot (string rootingMarker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveEntryForSourceRoot(string rootingMarker) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntryForSourceRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEntryForSourceRoot (rootingMarker As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEntryForSourceRoot(System::String ^ rootingMarker);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootingMarker" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootingMarker">
          <span data-ttu-id="866a5-180">要移除的根標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-180">The root to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="866a5-181">移除相依性圖形中對應至根標記之輸入的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-181">Removes the entry in the input dependency graph corresponding to a rooting.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveTlog">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="866a5-182">這個方法會從目前輸出資料表重寫 tlog。將會追蹤新的項目</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-182">This method will re-write the tlogs from the current output table new entries will be tracked.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveTlog">
      <MemberSignature Language="C#" Value="public void SaveTlog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveTlog() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.SaveTlog" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveTlog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveTlog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="866a5-183">這個方法會從目前輸出資料表重寫 tlog。將會追蹤新的項目</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-183">This method will re-write the tlogs from the current output table new entries will be tracked.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveTlog">
      <MemberSignature Language="C#" Value="public void SaveTlog (Microsoft.Build.Utilities.DependencyFilter includeInTLog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveTlog(class Microsoft.Build.Utilities.DependencyFilter includeInTLog) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.SaveTlog(Microsoft.Build.Utilities.DependencyFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveTlog (includeInTLog As DependencyFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveTlog(Microsoft::Build::Utilities::DependencyFilter ^ includeInTLog);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeInTLog" Type="Microsoft.Build.Utilities.DependencyFilter" />
      </Parameters>
      <Docs>
        <param name="includeInTLog">
          <span data-ttu-id="866a5-184">委派，用來判斷是否應該將特定檔案併入壓縮的 tlog 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-184">Delegate used to determine whether a particular file should be included in the compacted tlog.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="866a5-185">這個方法會從目前相依性重寫 tlog。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-185">This method will re-write the tlogs from the current dependency.</span>
          </span>
          <span data-ttu-id="866a5-186">編譯來源時，會追蹤新的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="866a5-186">As the sources are compiled, new entries willbe tracked.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>