<Type Name="MuxLogger" FullName="Microsoft.Build.Utilities.MuxLogger">
  <TypeSignature Language="C#" Value="public class MuxLogger : Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MuxLogger extends System.Object implements class Microsoft.Build.Framework.ILogger, class Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.MuxLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class MuxLogger&#xA;Implements INodeLogger" />
  <TypeSignature Language="C++ CLI" Value="public ref class MuxLogger : Microsoft::Build::Framework::INodeLogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.INodeLogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="96871-101">表示多工記錄器。</span><span class="sxs-lookup"><span data-stu-id="96871-101">Represents a multiplexing logger.</span></span> <span data-ttu-id="96871-102">這個記錄器的用途是要在建置期間註冊和取消註冊多個記錄器。</span><span class="sxs-lookup"><span data-stu-id="96871-102">The purpose of this logger is to register and unregister multiple loggers during the build.</span></span> <span data-ttu-id="96871-103">支援針對每個專案系統之組建要求註冊和移除註冊記錄器的 Visual Studio IDE 情節。</span><span class="sxs-lookup"><span data-stu-id="96871-103">Supports the Visual Studio IDE scenario in which loggers are registered and unregistered for each project system’s build request.</span></span> <span data-ttu-id="96871-104">一個實體組建可以有多個邏輯組建，每一個都有它自己的一組記錄器。</span><span class="sxs-lookup"><span data-stu-id="96871-104">One physical build can have multiple logical builds, each with its own set of loggers.</span></span>  
  
 <span data-ttu-id="96871-105"><see langword="MuxLogger" /> 會向組建管理程式將本身註冊為一般中央 /l 樣式記錄器。</span><span class="sxs-lookup"><span data-stu-id="96871-105">The <see langword="MuxLogger" /> registers itself with the build manager as a regular central /l style logger.</span></span> <span data-ttu-id="96871-106">它會從組建管理員接收訊息，並根據訊息的來源邏輯建置，將它們傳送到正確的記錄器。</span><span class="sxs-lookup"><span data-stu-id="96871-106">It receives messages from the build manager and routes them to the correct logger, based on the logical build that the message came from.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96871-107">`MuxLogger`通常函式，如下所示：</span><span class="sxs-lookup"><span data-stu-id="96871-107">The `MuxLogger` generally functions as follows:</span></span>  
  
-   <span data-ttu-id="96871-108">`MuxLogger`註冊的組建管理員開始建置開頭。</span><span class="sxs-lookup"><span data-stu-id="96871-108">The `MuxLogger` is registered at the beginning of the build manager’s Begin build.</span></span>  
  
     <span data-ttu-id="96871-109">註冊後，組建管理程式隨即啟動建置任何記錄器取得組建啟動事件做為同時`MuxLogger`。</span><span class="sxs-lookup"><span data-stu-id="96871-109">Any loggers registered before the build manager starts the build get the build-started event at the same time as the `MuxLogger`.</span></span>  
  
     <span data-ttu-id="96871-110">任何組建管理員啟動建置後註冊的記錄器取得合成的組建啟動的事件。</span><span class="sxs-lookup"><span data-stu-id="96871-110">Any loggers registered after the build manager starts the build get a synthesized build-started event.</span></span> <span data-ttu-id="96871-111">無法快取事件，因為組建啟動事件的時間戳記決定事件建立時，並快取事件會提供不正確的建置時間中註冊的記錄器`MuxLogger`。</span><span class="sxs-lookup"><span data-stu-id="96871-111">The event cannot be cached because the timestamp of the build-started event is determined when the event is created, and caching the event would give incorrect build times in the loggers registered to the `MuxLogger`.</span></span>  
  
-   <span data-ttu-id="96871-112">`MuxLogger`已由組建管理員初始化</span><span class="sxs-lookup"><span data-stu-id="96871-112">The `MuxLogger` is initialized by the build manager</span></span>  
  
     <span data-ttu-id="96871-113">`MuxLogger`從組建管理員會接聽事件來源上的所有事件，並正確地將事件路由至已註冊的記錄器。</span><span class="sxs-lookup"><span data-stu-id="96871-113">The `MuxLogger` listens to all events on the event source from the build manager and routes events correctly to the registered loggers.</span></span>  
  
-   <span data-ttu-id="96871-114">`MuxLogger`在組建中結束建置完成時關閉。</span><span class="sxs-lookup"><span data-stu-id="96871-114">The `MuxLogger` is shutdown when the build is finished in end build.</span></span> <span data-ttu-id="96871-115">在這個階段中，它會移除註冊任何附加的記錄器。</span><span class="sxs-lookup"><span data-stu-id="96871-115">At this time, it unregisters any loggers attached to it.</span></span>  
  
-   <span data-ttu-id="96871-116">`MuxLogger`記錄時每個記錄器都會出現的第一個專案啟動事件的專案完成事件完成建置後事件。</span><span class="sxs-lookup"><span data-stu-id="96871-116">The `MuxLogger` logs the build-finished event when the project-finished event for the first project-started event is seen for each logger.</span></span>  
  
 <span data-ttu-id="96871-117">`MuxLogger`記錄器註冊方式如下：</span><span class="sxs-lookup"><span data-stu-id="96871-117">The `MuxLogger` registers loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="96871-118">記錄器傳遞至`MuxLogger.RegisterLogger`提交識別碼為用來將訊息路由至該記錄器的方法。</span><span class="sxs-lookup"><span data-stu-id="96871-118">The logger is passed to the `MuxLogger.RegisterLogger` method with a submission ID that is used to route a message to that logger.</span></span>  
  
2.  <span data-ttu-id="96871-119">`MuxLogger`註冊記錄器`MuxLogger`事件來源。</span><span class="sxs-lookup"><span data-stu-id="96871-119">The `MuxLogger` registers the logger to the `MuxLogger` event source.</span></span>  
  
3.  <span data-ttu-id="96871-120">如果建置開始時間的事件已記錄，`MuxLogger`建立新的組建啟動事件，並將它傳送至記錄器的事件來源。</span><span class="sxs-lookup"><span data-stu-id="96871-120">If the build-started event has already been logged, the `MuxLogger` creates a new build-started event and sends it to the logger’s event source.</span></span>  
  
 <span data-ttu-id="96871-121">`MuxLogger`取消註冊的記錄器，方式如下：</span><span class="sxs-lookup"><span data-stu-id="96871-121">The `MuxLogger` unregisters loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="96871-122">送出組建完成時，`MuxLogger.UnregisterLogger`提交識別碼記錄器呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="96871-122">When a build submission is completed, the `MuxLogger.UnregisterLogger` method is called with the submission ID for the logger.</span></span>  
  
2.  <span data-ttu-id="96871-123">`MuxLogger`提交識別碼尋找專案完成事件的成功狀態，並建置完成的事件記錄到記錄器。</span><span class="sxs-lookup"><span data-stu-id="96871-123">The `MuxLogger` looks up the success state of the project-finished event for the submission ID and logs a build-finished event to the logger.</span></span>  
  
3.  <span data-ttu-id="96871-124">`MuxLogger`清除的事件來源。</span><span class="sxs-lookup"><span data-stu-id="96871-124">The `MuxLogger` cleans up the event source.</span></span>  
  
     <span data-ttu-id="96871-125">請注意，取消註冊來自記錄執行緒以外的執行緒，如果記錄事件時，系統會呼叫取消註冊，可能會發生同步處理問題。</span><span class="sxs-lookup"><span data-stu-id="96871-125">Note that the unregister comes from a thread other than the logging thread and a synchronization issue could occur if unregister is called while events are being logged.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MuxLogger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MuxLogger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96871-126">建立多工記錄器的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="96871-126">Creates a new instance of the multiplexing logger.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96871-127">初始化 <see langword="MuxLogger" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="96871-127">Initializes the <see langword="MuxLogger" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="96871-128">事件的來源。</span><span class="sxs-lookup"><span data-stu-id="96871-128">The event source.</span></span></param>
        <summary><span data-ttu-id="96871-129">使用指定的事件來源來初始化 <see langword="MuxLogger" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="96871-129">Initialize the <see langword="MuxLogger" /> instance with the specified event source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource, int maxNodeCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource, int32 maxNodeCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource, maxNodeCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource, int maxNodeCount);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
        <Parameter Name="maxNodeCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="96871-130">事件的來源。</span><span class="sxs-lookup"><span data-stu-id="96871-130">The event source.</span></span></param>
        <param name="maxNodeCount"><span data-ttu-id="96871-131">節點數上限。</span><span class="sxs-lookup"><span data-stu-id="96871-131">The maximum number of nodes.</span></span></param>
        <summary><span data-ttu-id="96871-132">使用指定的事件來源及指定的節點數目上限，初始化 <see langword="MuxLogger" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="96871-132">Initialize the <see langword="MuxLogger" /> instance with the specified event source and specified maximum number of nodes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96871-133">取得和設定 <see langword="ILogger" /> 介面所需的 Parameters 屬性。</span><span class="sxs-lookup"><span data-stu-id="96871-133">Gets and sets the Parameters attribute, required by the <see langword="ILogger" /> interface.</span></span></summary>
        <value><span data-ttu-id="96871-134">傳回參數屬性。</span><span class="sxs-lookup"><span data-stu-id="96871-134">Returns the Parameters attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterLogger">
      <MemberSignature Language="C#" Value="public void RegisterLogger (int submissionId, Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterLogger(int32 submissionId, class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.RegisterLogger(System.Int32,Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterLogger (submissionId As Integer, logger As ILogger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterLogger(int submissionId, Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="submissionId"><span data-ttu-id="96871-135">正在註冊之記錄器的提交 ID。</span><span class="sxs-lookup"><span data-stu-id="96871-135">The submission ID of the logger being registered.</span></span></param>
        <param name="logger"><span data-ttu-id="96871-136">要註冊的記錄器。</span><span class="sxs-lookup"><span data-stu-id="96871-136">The logger to register.</span></span></param>
        <summary><span data-ttu-id="96871-137">在 <see langword="MuxLogger" /> 上註冊記錄器，並在已開始建置事件已記錄時引發已開始建置事件。</span><span class="sxs-lookup"><span data-stu-id="96871-137">Registers a logger on the <see langword="MuxLogger" /> and raises a build-started event if the build-started event has already been logged.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Shutdown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Shutdown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96871-138">關閉 <see langword="MuxLogger" />，並清除任何狀態。</span><span class="sxs-lookup"><span data-stu-id="96871-138">Shuts down the <see langword="MuxLogger" /> and clears out any state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterLoggers">
      <MemberSignature Language="C#" Value="public bool UnregisterLoggers (int submissionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UnregisterLoggers(int32 submissionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnregisterLoggers (submissionId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UnregisterLoggers(int submissionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="submissionId"><span data-ttu-id="96871-139">要移除之記錄器的提交 ID。</span><span class="sxs-lookup"><span data-stu-id="96871-139">The submission ID of the logger to be removed.</span></span></param>
        <summary><span data-ttu-id="96871-140">將指定的記錄器從 MuxLogger 中移除。</span><span class="sxs-lookup"><span data-stu-id="96871-140">Removes the specified logger from the MuxLogger.</span></span></summary>
        <returns><span data-ttu-id="96871-141">如果方法成功移除記錄器，則傳回 <see langword="true" />，否則會傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="96871-141">Returns <see langword="true" /> if the method is successful in removing the logger, otherwise, returns <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Verbosity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96871-142">取得和設定 <see langword="ILogger" /> 介面所需的 Verbosity 屬性。</span><span class="sxs-lookup"><span data-stu-id="96871-142">Gets and sets the Verbosity attribute, required by the <see langword="ILogger" /> interface.</span></span></summary>
        <value><span data-ttu-id="96871-143">傳回 Verbosity 屬性。</span><span class="sxs-lookup"><span data-stu-id="96871-143">Returns the Verbosity attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>