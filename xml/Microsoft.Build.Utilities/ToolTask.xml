<Type Name="ToolTask" FullName="Microsoft.Build.Utilities.ToolTask">
  <TypeSignature Language="C#" Value="public abstract class ToolTask : Microsoft.Build.Utilities.Task, Microsoft.Build.Framework.ICancelableTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ToolTask extends Microsoft.Build.Utilities.Task implements class Microsoft.Build.Framework.ICancelableTask, class Microsoft.Build.Framework.ITask" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.ToolTask" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ToolTask&#xA;Inherits Task&#xA;Implements ICancelableTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolTask abstract : Microsoft::Build::Utilities::Task, Microsoft::Build::Framework::ICancelableTask" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Utilities.Task</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ICancelableTask</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="32af0-101">在衍生表單中覆寫時，為工作提供包裝命令列工具的功能。</span><span class="sxs-lookup"><span data-stu-id="32af0-101">When overridden in a derived form, provides functionality for a task that wraps a command line tool.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32af0-102">此抽象類別會提供預設實作的方法和屬性的包裝命令列工具的工作。</span><span class="sxs-lookup"><span data-stu-id="32af0-102">This abstract class provides default implementations for the methods and properties of a task that wraps a command line tool.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32af0-103">下列範例會建立<xref:Microsoft.Build.Utilities.ToolTask>執行[Ilasm.exe （IL 組譯工具）](~/docs/framework/tools/ilasm-exe-il-assembler.md)。</span><span class="sxs-lookup"><span data-stu-id="32af0-103">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="32af0-104"><xref:Microsoft.Build.Utilities.CommandLineBuilder>， <xref:Microsoft.Build.Utilities.ToolLocationHelper>，和<xref:Microsoft.Build.Utilities.TaskLoggingHelper>類別用來產生執行工作所需的資訊。</span><span class="sxs-lookup"><span data-stu-id="32af0-104">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="32af0-105">初始化 <see cref="T:Microsoft.Build.Utilities.ToolTask" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="32af0-105">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolTask ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolTask();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32af0-106">初始化 <see cref="T:Microsoft.Build.Utilities.ToolTask" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="32af0-106">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolTask (System.Resources.ResourceManager taskResources);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Resources.ResourceManager taskResources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (taskResources As ResourceManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolTask(System::Resources::ResourceManager ^ taskResources);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="taskResources" Type="System.Resources.ResourceManager" />
      </Parameters>
      <Docs>
        <param name="taskResources"><span data-ttu-id="32af0-107">工作資源的 <see cref="T:System.Resources.ResourceManager" />。</span><span class="sxs-lookup"><span data-stu-id="32af0-107">The <see cref="T:System.Resources.ResourceManager" /> for task resources.</span></span></param>
        <summary><span data-ttu-id="32af0-108">使用指定的 <see cref="T:Microsoft.Build.Utilities.ToolTask" /> 初始化 <see cref="T:System.Resources.ResourceManager" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="32af0-108">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class with the specified <see cref="T:System.Resources.ResourceManager" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolTask (System.Resources.ResourceManager taskResources, string helpKeywordPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Resources.ResourceManager taskResources, string helpKeywordPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (taskResources As ResourceManager, helpKeywordPrefix As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolTask(System::Resources::ResourceManager ^ taskResources, System::String ^ helpKeywordPrefix);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="taskResources" Type="System.Resources.ResourceManager" />
        <Parameter Name="helpKeywordPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="taskResources"><span data-ttu-id="32af0-109">工作資源的 <see cref="T:System.Resources.ResourceManager" />。</span><span class="sxs-lookup"><span data-stu-id="32af0-109">The <see cref="T:System.Resources.ResourceManager" /> for task resources.</span></span></param>
        <param name="helpKeywordPrefix"><span data-ttu-id="32af0-110">Help 關鍵字，用於工作引發的訊息。</span><span class="sxs-lookup"><span data-stu-id="32af0-110">The Help keyword to use for messages raised by the task.</span></span></param>
        <summary><span data-ttu-id="32af0-111">使用指定的 <see cref="T:Microsoft.Build.Utilities.ToolTask" /> 和 Help 關鍵字前置詞，初始化 <see cref="T:System.Resources.ResourceManager" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="32af0-111">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class with the specified <see cref="T:System.Resources.ResourceManager" /> and Help keyword prefix.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallHostObjectToExecute">
      <MemberSignature Language="C#" Value="protected virtual bool CallHostObjectToExecute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CallHostObjectToExecute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CallHostObjectToExecute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CallHostObjectToExecute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32af0-112">呼叫主物件來執行工作 (task) 的工作 (work)。</span><span class="sxs-lookup"><span data-stu-id="32af0-112">Calls the host object to perform the work of the task.</span></span></summary>
        <returns>
          <span data-ttu-id="32af0-113">如果該方法成功則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="32af0-113"><see langword="true" /> if the method was successfule; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Cancel();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ICancelableTask.Cancel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32af0-114">取消執行工作的處理序，方法是先要求它正常關閉，不久之後就強制其結束。</span><span class="sxs-lookup"><span data-stu-id="32af0-114">Cancels the process executing the task by asking it to close nicely, then after a short period, forcing termination.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTempFile">
      <MemberSignature Language="C#" Value="protected void DeleteTempFile (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeleteTempFile(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.DeleteTempFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DeleteTempFile (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DeleteTempFile(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="32af0-115">要刪除之暫存檔案的名稱。</span><span class="sxs-lookup"><span data-stu-id="32af0-115">The name of the temporary file to delete.</span></span></param>
        <summary><span data-ttu-id="32af0-116">刪除指定的暫存檔案。</span><span class="sxs-lookup"><span data-stu-id="32af0-116">Deletes the specified temporary file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32af0-117">如果刪除作業失敗，因為任何原因 （例如，如果檔案由鎖定防毒軟體），則這個方法會記錄為警告而非擲回例外狀況，這會導致建置失敗。</span><span class="sxs-lookup"><span data-stu-id="32af0-117">If the delete operation fails for any reason (such as if a file is locked by antivirus software), then this method logs a warning rather than throwing an exception, which would cause the build to fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EchoOff">
      <MemberSignature Language="C#" Value="public bool EchoOff { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EchoOff" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.EchoOff" />
      <MemberSignature Language="VB.NET" Value="Public Property EchoOff As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EchoOff { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-118">表示已關閉命令列回應。</span><span class="sxs-lookup"><span data-stu-id="32af0-118">Indicates that command line echoing is turned off.</span></span></summary>
        <value><span data-ttu-id="32af0-119">命令列回應為關閉狀態時為 true。</span><span class="sxs-lookup"><span data-stu-id="32af0-119">True when command line echo is off.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32af0-120">命令列回應藉由在 cmd.exe 命令列上傳遞 /Q 關閉 MSBuild。</span><span class="sxs-lookup"><span data-stu-id="32af0-120">MSBuild turns off command line echoing by passing /Q on the cmd.exe command line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentOverride">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Specialized.StringDictionary EnvironmentOverride { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary EnvironmentOverride" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.EnvironmentOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property EnvironmentOverride As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::Specialized::StringDictionary ^ EnvironmentOverride { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use EnvironmentVariables property")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-121">取得一組環境變數之成對的名稱和數值。</span><span class="sxs-lookup"><span data-stu-id="32af0-121">Gets a set of environment variable name-value pairs.</span></span> <span data-ttu-id="32af0-122">設計為在自訂工作類別 (衍生自 ToolTask) 中覆寫，從而傳回一組新的或更改的環境變數，以建立相關聯工具的執行內容。</span><span class="sxs-lookup"><span data-stu-id="32af0-122">Designed to be overridden in a custom task class (derived from ToolTask) to return a set of new or altered environment variables to create the execution context of the associated tool.</span></span></summary>
        <value><span data-ttu-id="32af0-123">傳回一組環境變數。</span><span class="sxs-lookup"><span data-stu-id="32af0-123">Returns a set of environment variables.</span></span> <span data-ttu-id="32af0-124">每個字典索引鍵都是要覆寫的環境變數名稱，而字典值是要為該環境變數設定的值。</span><span class="sxs-lookup"><span data-stu-id="32af0-124">Each dictionary key is the name of the environment variable to override and the dictionary value is the value to set for that environment variable.</span></span> <span data-ttu-id="32af0-125">EnvironmentOverride 的預設實作會傳回 null。</span><span class="sxs-lookup"><span data-stu-id="32af0-125">The default implementation of EnvironmentOverride returns null.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32af0-126">ExecuteTool 方法會將這些環境變數傳遞至程序，此工具執行所在的 StartInfo。</span><span class="sxs-lookup"><span data-stu-id="32af0-126">The ExecuteTool method passes these environment variables to the StartInfo of the process in which the tool executes.</span></span> <span data-ttu-id="32af0-127">EnvironmentOverride 字典中未包含任何環境變數被繼承自 ExecuteTool 方法執行於其中的程序。</span><span class="sxs-lookup"><span data-stu-id="32af0-127">Any environment variables not included in the EnvironmentOverride dictionary are inherited from the process in which the ExecuteTool method executes.</span></span>  
  
   
  
## Examples  
  
```  
using System;  
using Microsoft.Build.Utilities;  
using System.Collections.Specialized;  
  
/// <summary>  
/// CustomToolTask overrides the EnvironmentOverride property of ToolTask to add a directory  
/// to the Path environment variable of the process being executed  
/// </summary>  
abstract class CustomToolTask : ToolTask  
{  
      protected override StringDictionary EnvironmentOverride  
      {  
            get  
            {  
                  string newPath = Environment.GetEnvironmentVariable("Path", EnvironmentVariableTarget.Process) + @";C:\MyDirectory";  
                  StringDictionary result = new StringDictionary();  
                  result.Add("Path", newPath);  
                  return result;  
            }  
      }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentVariables">
      <MemberSignature Language="C#" Value="public string[] EnvironmentVariables { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] EnvironmentVariables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.EnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvironmentVariables As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ EnvironmentVariables { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-128">由等號分隔的環境變數組的陣列，應傳遞給繁衍 (Spawn) 可執行檔，以對一般環境區塊新增 (或選擇性覆寫) 環境變數。</span><span class="sxs-lookup"><span data-stu-id="32af0-128">Array of equals-separated pairs of environment variables that should be passed to the spawned executable, in addition to (or selectively overriding) the regular environment block.</span></span></summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32af0-129">使用此而不 EnvironmentOverride 的 StringDictionary 做，它無法從設定 MSBuild 專案。</span><span class="sxs-lookup"><span data-stu-id="32af0-129">Using this instead of EnvironmentOverride as that takes a StringDictionary, which cannot be set from an MSBuild project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Execute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Execute();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITask.Execute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32af0-130">使用指定的工作參數執行可執行檔。</span><span class="sxs-lookup"><span data-stu-id="32af0-130">Runs the exectuable file with the specified task parameters.</span></span></summary>
        <returns>
          <span data-ttu-id="32af0-131">如果工作執行成功，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="32af0-131"><see langword="true" /> if the task runs successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteTool">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteTool (string pathToTool, string responseFileCommands, string commandLineCommands);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteTool(string pathToTool, string responseFileCommands, string commandLineCommands) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.ExecuteTool(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteTool (pathToTool As String, responseFileCommands As String, commandLineCommands As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteTool(System::String ^ pathToTool, System::String ^ responseFileCommands, System::String ^ commandLineCommands);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathToTool" Type="System.String" />
        <Parameter Name="responseFileCommands" Type="System.String" />
        <Parameter Name="commandLineCommands" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathToTool"><span data-ttu-id="32af0-132">可執行檔路徑。</span><span class="sxs-lookup"><span data-stu-id="32af0-132">The path to the executable file.</span></span></param>
        <param name="responseFileCommands"><span data-ttu-id="32af0-133">要放入 .rsp 檔案中的命令列引數。</span><span class="sxs-lookup"><span data-stu-id="32af0-133">The command line arguments to place in the .rsp file.</span></span></param>
        <param name="commandLineCommands"><span data-ttu-id="32af0-134">要直接傳遞至可執行檔的命令列引數。</span><span class="sxs-lookup"><span data-stu-id="32af0-134">The command line arguments to pass directly to the executable file.</span></span></param>
        <summary><span data-ttu-id="32af0-135">建立暫存回應 (.rsp) 檔案，並執行可執行檔。</span><span class="sxs-lookup"><span data-stu-id="32af0-135">Creates a temporoary response (.rsp) file and runs the executable file.</span></span></summary>
        <returns><span data-ttu-id="32af0-136">可執行檔傳回的結束代碼。</span><span class="sxs-lookup"><span data-stu-id="32af0-136">The returned exit code of the executable file.</span></span> <span data-ttu-id="32af0-137">如果工作已記錄錯誤，但可執行檔傳回結束代碼 0，則這個方法會傳回 -1。</span><span class="sxs-lookup"><span data-stu-id="32af0-137">If the task logged errors, but the executable returned an exit code of 0, this method returns -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitCode">
      <MemberSignature Language="C#" Value="public int ExitCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExitCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ExitCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExitCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExitCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-138">取得可執行檔傳回的結束代碼。</span><span class="sxs-lookup"><span data-stu-id="32af0-138">Gets the returned exit code of the executable file.</span></span></summary>
        <value><span data-ttu-id="32af0-139">可執行檔傳回的結束代碼。</span><span class="sxs-lookup"><span data-stu-id="32af0-139">The returned exit code of the executable file.</span></span> <span data-ttu-id="32af0-140">如果工作已記錄錯誤，但可執行檔傳回結束代碼 0，則這個方法會傳回 -1。</span><span class="sxs-lookup"><span data-stu-id="32af0-140">If the task logged errors, but the executable returned an exit code of 0, this method returns -1.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCommandLineCommands">
      <MemberSignature Language="C#" Value="protected virtual string GenerateCommandLineCommands ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GenerateCommandLineCommands() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GenerateCommandLineCommands () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GenerateCommandLineCommands();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32af0-141">傳回字串值，此值包含要直接傳遞給可執行檔的命令列引數。</span><span class="sxs-lookup"><span data-stu-id="32af0-141">Returns a string value containing the command line arguments to pass directly to the executable file.</span></span></summary>
        <returns><span data-ttu-id="32af0-142">此字串值包含要直接傳遞給可執行檔的命令列引數。</span><span class="sxs-lookup"><span data-stu-id="32af0-142">A string value containing the command line arguments to pass directly to the executable file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32af0-143">這個方法之後呼叫<xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>和<xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>。</span><span class="sxs-lookup"><span data-stu-id="32af0-143">This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A> and <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32af0-144">下列範例會建立<xref:Microsoft.Build.Utilities.ToolTask>執行[Ilasm.exe （IL 組譯工具）](~/docs/framework/tools/ilasm-exe-il-assembler.md)。</span><span class="sxs-lookup"><span data-stu-id="32af0-144">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="32af0-145"><xref:Microsoft.Build.Utilities.CommandLineBuilder>， <xref:Microsoft.Build.Utilities.ToolLocationHelper>，和<xref:Microsoft.Build.Utilities.TaskLoggingHelper>類別用來產生執行工作所需的資訊。</span><span class="sxs-lookup"><span data-stu-id="32af0-145">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFullPathToTool">
      <MemberSignature Language="C#" Value="protected abstract string GenerateFullPathToTool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GenerateFullPathToTool() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GenerateFullPathToTool () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GenerateFullPathToTool();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32af0-146">傳回可執行檔的完整路徑。</span><span class="sxs-lookup"><span data-stu-id="32af0-146">Returns the fully qualified path to the executable file.</span></span></summary>
        <returns><span data-ttu-id="32af0-147">可執行檔的完整路徑。</span><span class="sxs-lookup"><span data-stu-id="32af0-147">The fully qualified path to the executable file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32af0-148">這個方法傳回的值<xref:Microsoft.Build.Utilities.ToolTask.ToolName%2A>屬性若工具位於系統路徑。</span><span class="sxs-lookup"><span data-stu-id="32af0-148">This method returns the value of the <xref:Microsoft.Build.Utilities.ToolTask.ToolName%2A> property if the tool is located in the system path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="32af0-149">下列範例會建立<xref:Microsoft.Build.Utilities.ToolTask>執行[Ilasm.exe （IL 組譯工具）](~/docs/framework/tools/ilasm-exe-il-assembler.md)。</span><span class="sxs-lookup"><span data-stu-id="32af0-149">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="32af0-150"><xref:Microsoft.Build.Utilities.CommandLineBuilder>， <xref:Microsoft.Build.Utilities.ToolLocationHelper>，和<xref:Microsoft.Build.Utilities.TaskLoggingHelper>類別用來產生執行工作所需的資訊。</span><span class="sxs-lookup"><span data-stu-id="32af0-150">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateResponseFileCommands">
      <MemberSignature Language="C#" Value="protected virtual string GenerateResponseFileCommands ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GenerateResponseFileCommands() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GenerateResponseFileCommands () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GenerateResponseFileCommands();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32af0-151">傳回字串值，包含執行可執行檔之前要加入回應檔 (.rsp) 的命令列引數。</span><span class="sxs-lookup"><span data-stu-id="32af0-151">Returns a string value containing the command line arguments to add to the response (.rsp) file before running the executable file.</span></span></summary>
        <returns><span data-ttu-id="32af0-152">字串值，包含執行可執行檔之前要加入回應檔 (.rsp) 的命令列引數。</span><span class="sxs-lookup"><span data-stu-id="32af0-152">a string value containing the command line arguments to add to the response (.rsp) file before running the executable file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32af0-153">這個方法之後呼叫<xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>和<xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>。</span><span class="sxs-lookup"><span data-stu-id="32af0-153">This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A> and <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProcessStartInfo">
      <MemberSignature Language="C#" Value="protected System.Diagnostics.ProcessStartInfo GetProcessStartInfo (string pathToTool, string commandLineCommands, string responseFileSwitch);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Diagnostics.ProcessStartInfo GetProcessStartInfo(string pathToTool, string commandLineCommands, string responseFileSwitch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetProcessStartInfo (pathToTool As String, commandLineCommands As String, responseFileSwitch As String) As ProcessStartInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Diagnostics::ProcessStartInfo ^ GetProcessStartInfo(System::String ^ pathToTool, System::String ^ commandLineCommands, System::String ^ responseFileSwitch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ProcessStartInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathToTool" Type="System.String" />
        <Parameter Name="commandLineCommands" Type="System.String" />
        <Parameter Name="responseFileSwitch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathToTool"><span data-ttu-id="32af0-154">工具的路徑。</span><span class="sxs-lookup"><span data-stu-id="32af0-154">The path to the tool.</span></span></param>
        <param name="commandLineCommands"><span data-ttu-id="32af0-155">命令列命令。</span><span class="sxs-lookup"><span data-stu-id="32af0-155">The command line commands.</span></span></param>
        <param name="responseFileSwitch"><span data-ttu-id="32af0-156">回應檔參數。</span><span class="sxs-lookup"><span data-stu-id="32af0-156">The response file switch.</span></span></param>
        <summary><span data-ttu-id="32af0-157">初始化必要的資訊來繁衍 (Spawn) 執行工具的處理序。</span><span class="sxs-lookup"><span data-stu-id="32af0-157">Initializes the information required to spawn the process executing the tool.</span></span></summary>
        <returns><span data-ttu-id="32af0-158">啟動處理序所需的資訊。</span><span class="sxs-lookup"><span data-stu-id="32af0-158">The information required to start the process.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponseFileSwitch">
      <MemberSignature Language="C#" Value="protected virtual string GetResponseFileSwitch (string responseFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetResponseFileSwitch(string responseFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetResponseFileSwitch (responseFilePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetResponseFileSwitch(System::String ^ responseFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="responseFilePath"><span data-ttu-id="32af0-159">暫存 .rsp 檔案的完整路徑。</span><span class="sxs-lookup"><span data-stu-id="32af0-159">The full path to the temporary .rsp file.</span></span></param>
        <summary><span data-ttu-id="32af0-160">傳回可執行檔所使用的命令列參數，以指定回應檔 (.rsp)。</span><span class="sxs-lookup"><span data-stu-id="32af0-160">Returns the command line switch used by the executable file to specifiy a response (.rsp) file.</span></span></summary>
        <returns><span data-ttu-id="32af0-161">可執行檔所使用的命令列參數，以指定回應檔 (.rsp)。</span><span class="sxs-lookup"><span data-stu-id="32af0-161">The command line switch used by the executable file to specifiy a response (.rsp) file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32af0-162">這個方法才會呼叫<xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A>傳回非空白字串值。</span><span class="sxs-lookup"><span data-stu-id="32af0-162">This method is only called if <xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A> returns a non-empty string value.</span></span>  
  
 <span data-ttu-id="32af0-163">這個方法之後呼叫<xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>，<xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>和<xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A>。</span><span class="sxs-lookup"><span data-stu-id="32af0-163">This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>, <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A> and <xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkingDirectory">
      <MemberSignature Language="C#" Value="protected virtual string GetWorkingDirectory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetWorkingDirectory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWorkingDirectory () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetWorkingDirectory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32af0-164">傳回在其中執行可執行檔的目錄。</span><span class="sxs-lookup"><span data-stu-id="32af0-164">Returns the directory in which to run the executable file.</span></span></summary>
        <returns><span data-ttu-id="32af0-165">在其中執行可執行檔的目錄；或者，如果應該在目前的目錄中執行可執行檔，則為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="32af0-165">The directory in which to run the executable file, or a null reference (<see langword="Nothing" /> in Visual Basic) if the executable file should be run in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32af0-166">這是一種方法，而不是屬性，而衍生的類別 （例如 Exec) 可以選擇公開公用 WorkingDirectory 屬性，它可能會造成混淆，有兩個屬性。</span><span class="sxs-lookup"><span data-stu-id="32af0-166">This is a method rather than a property so that derived classes (like Exec) can choose to expose a public WorkingDirectory property, and it would be confusing to have two properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleTaskExecutionErrors">
      <MemberSignature Language="C#" Value="protected virtual bool HandleTaskExecutionErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool HandleTaskExecutionErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HandleTaskExecutionErrors () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool HandleTaskExecutionErrors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32af0-167">處理由可執行檔引發的執行錯誤。</span><span class="sxs-lookup"><span data-stu-id="32af0-167">Handles execution errors raised by the executable file.</span></span></summary>
        <returns>
          <span data-ttu-id="32af0-168">如果方法成功執行則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="32af0-168"><see langword="true" /> if the method runs successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32af0-169">可執行檔傳回非零結束代碼時，才會呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="32af0-169">This method is called only if the executable file returns a non-zero exit code.</span></span>  
  
 <span data-ttu-id="32af0-170">這個方法的傳回值作為工作的傳回值。</span><span class="sxs-lookup"><span data-stu-id="32af0-170">The return value of this method is used as the return value of the task.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLoggedErrors">
      <MemberSignature Language="C#" Value="protected virtual bool HasLoggedErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLoggedErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.HasLoggedErrors" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property HasLoggedErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool HasLoggedErrors { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-171">這個 ToolTask 是否已記錄任何錯誤</span><span class="sxs-lookup"><span data-stu-id="32af0-171">Whether this ToolTask has logged any errors</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeHostObject">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Build.Utilities.HostObjectInitializationStatus InitializeHostObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Microsoft.Build.Utilities.HostObjectInitializationStatus InitializeHostObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.InitializeHostObject" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InitializeHostObject () As HostObjectInitializationStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::Build::Utilities::HostObjectInitializationStatus InitializeHostObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Utilities.HostObjectInitializationStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32af0-172">初始化工作的主物件。</span><span class="sxs-lookup"><span data-stu-id="32af0-172">Initializes the host object of the task.</span></span></summary>
        <returns><span data-ttu-id="32af0-173">主物件的 <see cref="T:Microsoft.Build.Utilities.HostObjectInitializationStatus" />。</span><span class="sxs-lookup"><span data-stu-id="32af0-173">The <see cref="T:Microsoft.Build.Utilities.HostObjectInitializationStatus" /> of the host object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogEventsFromTextOutput">
      <MemberSignature Language="C#" Value="protected virtual void LogEventsFromTextOutput (string singleLine, Microsoft.Build.Framework.MessageImportance messageImportance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LogEventsFromTextOutput(string singleLine, valuetype Microsoft.Build.Framework.MessageImportance messageImportance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LogEventsFromTextOutput(System::String ^ singleLine, Microsoft::Build::Framework::MessageImportance messageImportance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singleLine" Type="System.String" />
        <Parameter Name="messageImportance" Type="Microsoft.Build.Framework.MessageImportance" />
      </Parameters>
      <Docs>
        <param name="singleLine"><span data-ttu-id="32af0-174">方法所要剖析的單行文字。</span><span class="sxs-lookup"><span data-stu-id="32af0-174">A single line of text for the method to parse.</span></span></param>
        <param name="messageImportance"><span data-ttu-id="32af0-175"><see cref="T:Microsoft.Build.Framework.MessageImportance" /> 的值，表示用來記錄訊息的重要性層級。</span><span class="sxs-lookup"><span data-stu-id="32af0-175">A value of <see cref="T:Microsoft.Build.Framework.MessageImportance" /> that indicates the importance level with which to log the message.</span></span></param>
        <summary><span data-ttu-id="32af0-176">剖析單行文字，以識別任何標準格式的錯誤或警告。</span><span class="sxs-lookup"><span data-stu-id="32af0-176">Parses a single line of text to identify any errors or warnings in canonical format.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPathToTool">
      <MemberSignature Language="C#" Value="protected virtual void LogPathToTool (string toolName, string pathToTool);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LogPathToTool(string toolName, string pathToTool) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.LogPathToTool(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LogPathToTool (toolName As String, pathToTool As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LogPathToTool(System::String ^ toolName, System::String ^ pathToTool);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolName" Type="System.String" />
        <Parameter Name="pathToTool" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toolName"><span data-ttu-id="32af0-177">可執行檔名稱。</span><span class="sxs-lookup"><span data-stu-id="32af0-177">The executable file name.</span></span></param>
        <param name="pathToTool"><span data-ttu-id="32af0-178">可執行檔路徑。</span><span class="sxs-lookup"><span data-stu-id="32af0-178">The path to the executable file.</span></span></param>
        <summary><span data-ttu-id="32af0-179">記錄所有已註冊記錄器的工具名稱和路徑。</span><span class="sxs-lookup"><span data-stu-id="32af0-179">Logs the tool name and path to all registered loggers.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogStandardErrorAsError">
      <MemberSignature Language="C#" Value="public bool LogStandardErrorAsError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogStandardErrorAsError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError" />
      <MemberSignature Language="VB.NET" Value="Public Property LogStandardErrorAsError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogStandardErrorAsError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-180">是否應將標準錯誤資料流上接收到的 ALL 訊息都記錄為錯誤。</span><span class="sxs-lookup"><span data-stu-id="32af0-180">Should ALL messages received on the standard error stream be logged as errors.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogToolCommand">
      <MemberSignature Language="C#" Value="protected virtual void LogToolCommand (string message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LogToolCommand(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.LogToolCommand(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LogToolCommand (message As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LogToolCommand(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="32af0-181">提供記錄器 (通常是命令列和切換參數) 的描述性訊息。</span><span class="sxs-lookup"><span data-stu-id="32af0-181">A descriptive message to provide loggers, usually the command line and switches.</span></span></param>
        <summary><span data-ttu-id="32af0-182">記錄所有已註冊記錄器的執行起點。</span><span class="sxs-lookup"><span data-stu-id="32af0-182">Logs the starting point of the run to all registered loggers.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseFileEncoding">
      <MemberSignature Language="C#" Value="protected virtual System.Text.Encoding ResponseFileEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ResponseFileEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ResponseFileEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Text::Encoding ^ ResponseFileEncoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-183">取得回應檔 (Response File) 的 <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="32af0-183">Gets the <see cref="T:System.Text.Encoding" /> of the response file.</span></span></summary>
        <value><span data-ttu-id="32af0-184">回應檔的 <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="32af0-184">The <see cref="T:System.Text.Encoding" /> of the response file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32af0-185">編碼是<xref:System.Text.Encoding.UTF8%2A>預設。</span><span class="sxs-lookup"><span data-stu-id="32af0-185">The encoding is <xref:System.Text.Encoding.UTF8%2A> by default.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseFileEscape">
      <MemberSignature Language="C#" Value="protected virtual string ResponseFileEscape (string responseString);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string ResponseFileEscape(string responseString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.ResponseFileEscape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ResponseFileEscape (responseString As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ ResponseFileEscape(System::String ^ responseString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="responseString"><span data-ttu-id="32af0-186">回應字串。</span><span class="sxs-lookup"><span data-stu-id="32af0-186">The response string.</span></span></param>
        <summary><span data-ttu-id="32af0-187">可覆寫的方法，用來逸出回應檔案的內容。</span><span class="sxs-lookup"><span data-stu-id="32af0-187">Overridable method to escape the content of the response file.</span></span></summary>
        <returns><span data-ttu-id="32af0-188">傳回回應字串。</span><span class="sxs-lookup"><span data-stu-id="32af0-188">Returns the response string.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipTaskExecution">
      <MemberSignature Language="C#" Value="protected virtual bool SkipTaskExecution ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool SkipTaskExecution() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SkipTaskExecution () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool SkipTaskExecution();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32af0-189">表示是否應該略過工作執行。</span><span class="sxs-lookup"><span data-stu-id="32af0-189">Indicates whether task execution should be skipped.</span></span></summary>
        <returns>
          <span data-ttu-id="32af0-190"><see langword="true" /> 表示略過工作執行，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="32af0-190"><see langword="true" /> to skip task execution; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32af0-191">這個方法之後呼叫<xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>。</span><span class="sxs-lookup"><span data-stu-id="32af0-191">This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorEncoding">
      <MemberSignature Language="C#" Value="protected virtual System.Text.Encoding StandardErrorEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardErrorEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardErrorEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Text::Encoding ^ StandardErrorEncoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-192">取得工作之標準錯誤資料流的 <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="32af0-192">Gets the <see cref="T:System.Text.Encoding" /> of the standard error stream of the task.</span></span></summary>
        <value><span data-ttu-id="32af0-193">回應檔的 <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="32af0-193">The <see cref="T:System.Text.Encoding" /> of the response file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32af0-194">主控台輸出預設會使用目前的系統 OEM 字碼頁。</span><span class="sxs-lookup"><span data-stu-id="32af0-194">Console-based output uses the current system OEM code page by default.</span></span> <span data-ttu-id="32af0-195">請注意，我們不應該使用 Console.OutputEncoding 這裡因為我們執行處理程序實際上沒有太與我們的主控台視窗 （並也 Console.OutputEncoding 不會傳回的 OEM 字碼頁是否執行的應用程式裝載 MSBuild 不主控台應用程式）。</span><span class="sxs-lookup"><span data-stu-id="32af0-195">Note that we should not use Console.OutputEncoding here since processes we run don't really have much to do with our console window (and also Console.OutputEncoding doesn't return the OEM code page if the running application that hosts MSBuild is not a console application).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorImportance">
      <MemberSignature Language="C#" Value="public string StandardErrorImportance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardErrorImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorImportance" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardErrorImportance As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardErrorImportance { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-196">工作參數：用來從標準錯誤資料流記錄文字的重要性。</span><span class="sxs-lookup"><span data-stu-id="32af0-196">Task Parameter: Importance with which to log text from the standard error stream.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorImportanceToUse">
      <MemberSignature Language="C#" Value="protected Microsoft.Build.Framework.MessageImportance StandardErrorImportanceToUse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardErrorImportanceToUse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StandardErrorImportanceToUse As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::Build::Framework::MessageImportance StandardErrorImportanceToUse { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-197">取得會將標準錯誤訊息記錄成的實際重要性。</span><span class="sxs-lookup"><span data-stu-id="32af0-197">Gets the actual importance at which standard error messages will be logged.</span></span></summary>
        <value><span data-ttu-id="32af0-198">傳回會將標準錯誤訊息記錄成的實際重要性。</span><span class="sxs-lookup"><span data-stu-id="32af0-198">Returns the actual importance at which standard error messages will be logged.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorLoggingImportance">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Build.Framework.MessageImportance StandardErrorLoggingImportance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardErrorLoggingImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardErrorLoggingImportance As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::Build::Framework::MessageImportance StandardErrorLoggingImportance { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-199">取得用於記錄錯誤的 <see cref="T:Microsoft.Build.Framework.MessageImportance" />。</span><span class="sxs-lookup"><span data-stu-id="32af0-199">Gets the <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</span></span></summary>
        <value><span data-ttu-id="32af0-200">用於記錄錯誤的 <see cref="T:Microsoft.Build.Framework.MessageImportance" />。</span><span class="sxs-lookup"><span data-stu-id="32af0-200">The <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputEncoding">
      <MemberSignature Language="C#" Value="protected virtual System.Text.Encoding StandardOutputEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardOutputEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardOutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Text::Encoding ^ StandardOutputEncoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-201">取得工作之標準輸出資料流的 <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="32af0-201">Gets the <see cref="T:System.Text.Encoding" /> of the standard output stream of the task.</span></span></summary>
        <value><span data-ttu-id="32af0-202">回應檔的 <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="32af0-202">The <see cref="T:System.Text.Encoding" /> of the response file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="32af0-203">主控台輸出預設會使用目前的系統 OEM 字碼頁。</span><span class="sxs-lookup"><span data-stu-id="32af0-203">Console-based output uses the current system OEM code page by default.</span></span> <span data-ttu-id="32af0-204">請注意，我們不應該使用 Console.OutputEncoding 這裡因為我們執行處理程序實際上沒有太與我們的主控台視窗 （並也 Console.OutputEncoding 不會傳回的 OEM 字碼頁是否執行的應用程式裝載 MSBuild 不主控台應用程式）。</span><span class="sxs-lookup"><span data-stu-id="32af0-204">Note that we should not use Console.OutputEncoding here since processes we run don't really have much to do with our console window (and also Console.OutputEncoding doesn't return the OEM code page if the running application that hosts MSBuild is not a console application).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputImportance">
      <MemberSignature Language="C#" Value="public string StandardOutputImportance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardOutputImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputImportance" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardOutputImportance As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardOutputImportance { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-205">工作參數：用來從標準輸出資料流記錄文字的重要性。</span><span class="sxs-lookup"><span data-stu-id="32af0-205">Task Parameter: Importance with which to log text from the standard out stream.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputImportanceToUse">
      <MemberSignature Language="C#" Value="protected Microsoft.Build.Framework.MessageImportance StandardOutputImportanceToUse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardOutputImportanceToUse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StandardOutputImportanceToUse As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::Build::Framework::MessageImportance StandardOutputImportanceToUse { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-206">取得會將標準輸出訊息記錄成的實際重要性。</span><span class="sxs-lookup"><span data-stu-id="32af0-206">Gets the actual importance at which standard out messages will be logged.</span></span></summary>
        <value><span data-ttu-id="32af0-207">傳回會將標準輸出訊息記錄成的實際重要性。</span><span class="sxs-lookup"><span data-stu-id="32af0-207">Returns the actual importance at which standard out messages will be logged.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputLoggingImportance">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Build.Framework.MessageImportance StandardOutputLoggingImportance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardOutputLoggingImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardOutputLoggingImportance As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::Build::Framework::MessageImportance StandardOutputLoggingImportance { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-208">取得用於記錄錯誤的 <see cref="T:Microsoft.Build.Framework.MessageImportance" />。</span><span class="sxs-lookup"><span data-stu-id="32af0-208">Gets the <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</span></span></summary>
        <value><span data-ttu-id="32af0-209">用於記錄錯誤的 <see cref="T:Microsoft.Build.Framework.MessageImportance" />。</span><span class="sxs-lookup"><span data-stu-id="32af0-209">The <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskProcessTerminationTimeout">
      <MemberSignature Language="C#" Value="protected int TaskProcessTerminationTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TaskProcessTerminationTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Property TaskProcessTerminationTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int TaskProcessTerminationTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-210">在刪除工作之前，等待工作結束的逾時值。</span><span class="sxs-lookup"><span data-stu-id="32af0-210">A timeout to wait for a task to terminate before killing it.</span></span> <span data-ttu-id="32af0-211">以毫秒為單位。</span><span class="sxs-lookup"><span data-stu-id="32af0-211">In milliseconds.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public virtual int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-212">取得或設定終止工作可執行檔之後的時間量。</span><span class="sxs-lookup"><span data-stu-id="32af0-212">Gets or sets the amount of time after which the task executable is terminated.</span></span></summary>
        <value><span data-ttu-id="32af0-213">逾時長度，以毫秒為單位。</span><span class="sxs-lookup"><span data-stu-id="32af0-213">The time-out length, in milliseconds.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolCanceled">
      <MemberSignature Language="C#" Value="protected System.Threading.ManualResetEvent ToolCanceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.ManualResetEvent ToolCanceled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolCanceled" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ToolCanceled As ManualResetEvent" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Threading::ManualResetEvent ^ ToolCanceled { System::Threading::ManualResetEvent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ManualResetEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-214">用來在工具取消時留下訊號。</span><span class="sxs-lookup"><span data-stu-id="32af0-214">Used to signal when a tool has been cancelled.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolExe">
      <MemberSignature Language="C#" Value="public virtual string ToolExe { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolExe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolExe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ToolExe As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolExe { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-215">專案可能會設定這個項目，以覆寫工作的 ToolName。</span><span class="sxs-lookup"><span data-stu-id="32af0-215">Projects may set this to override a task's ToolName.</span></span> <span data-ttu-id="32af0-216">工作可能會覆寫這個項目，以防止發生這種情況。</span><span class="sxs-lookup"><span data-stu-id="32af0-216">Tasks may override this to prevent that.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolName">
      <MemberSignature Language="C#" Value="protected abstract string ToolName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolName" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property ToolName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::String ^ ToolName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-217">取得要執行之可執行檔的名稱。</span><span class="sxs-lookup"><span data-stu-id="32af0-217">Gets the name of the executable file to run.</span></span></summary>
        <value><span data-ttu-id="32af0-218">要執行之可執行檔的名稱。</span><span class="sxs-lookup"><span data-stu-id="32af0-218">The name of the executable file to run.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="32af0-219">下列範例會建立<xref:Microsoft.Build.Utilities.ToolTask>執行[Ilasm.exe （IL 組譯工具）](~/docs/framework/tools/ilasm-exe-il-assembler.md)。</span><span class="sxs-lookup"><span data-stu-id="32af0-219">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="32af0-220"><xref:Microsoft.Build.Utilities.CommandLineBuilder>， <xref:Microsoft.Build.Utilities.ToolLocationHelper>，和<xref:Microsoft.Build.Utilities.TaskLoggingHelper>類別用來產生執行工作所需的資訊。</span><span class="sxs-lookup"><span data-stu-id="32af0-220">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolPath">
      <MemberSignature Language="C#" Value="public string ToolPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolPath" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-221">取得或設定要執行的可執行檔路徑。</span><span class="sxs-lookup"><span data-stu-id="32af0-221">Gets or sets the path of the executable file to run.</span></span></summary>
        <value><span data-ttu-id="32af0-222">要執行的檔案路徑。</span><span class="sxs-lookup"><span data-stu-id="32af0-222">The path of the file to run.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCommandProcessor">
      <MemberSignature Language="C#" Value="public bool UseCommandProcessor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCommandProcessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.UseCommandProcessor" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCommandProcessor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCommandProcessor { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-223">取得或設定參數，這個參數指定工具工作是否會建立命令列批次檔再使用命令處理器執行該批次檔，而不是直接執行命令。</span><span class="sxs-lookup"><span data-stu-id="32af0-223">Gets or sets a switch that specifies whether the tool task will create a batch file for the command-line and execute that using the command-processor, rather than executing the command directly.</span></span></summary>
        <value><span data-ttu-id="32af0-224">如果為 true，則工具工作會建立命令列批次檔再使用命令處理器執行該批次檔。</span><span class="sxs-lookup"><span data-stu-id="32af0-224">If true, the tool task will create a batch file for the command-line and execute that using the command-processor.</span></span> <span data-ttu-id="32af0-225">如果為 false，則工具工作會直接執行命令。</span><span class="sxs-lookup"><span data-stu-id="32af0-225">If false the tool task will execute the command directly.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateParameters">
      <MemberSignature Language="C#" Value="protected internal virtual bool ValidateParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ValidateParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.ValidateParameters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ValidateParameters () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ValidateParameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="32af0-226">指出是否所有的工作參數皆有效。</span><span class="sxs-lookup"><span data-stu-id="32af0-226">Indicates whether all task paratmeters are valid.</span></span></summary>
        <returns>
          <span data-ttu-id="32af0-227">如果所有的工作參數都有效則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="32af0-227"><see langword="true" /> if all task parameters are valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="YieldDuringToolExecution">
      <MemberSignature Language="C#" Value="public bool YieldDuringToolExecution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool YieldDuringToolExecution" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution" />
      <MemberSignature Language="VB.NET" Value="Public Property YieldDuringToolExecution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool YieldDuringToolExecution { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="32af0-228">表示工作是否在工具執行時讓出節點。</span><span class="sxs-lookup"><span data-stu-id="32af0-228">Indicates if the task will yield the node during tool execution.</span></span></summary>
        <value><span data-ttu-id="32af0-229">如果工作在工具執行時讓出節點，則為 true。</span><span class="sxs-lookup"><span data-stu-id="32af0-229">True when the task will yield the node during tool execution.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>