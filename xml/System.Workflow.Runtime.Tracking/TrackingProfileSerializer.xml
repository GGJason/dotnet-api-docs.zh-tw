<Type Name="TrackingProfileSerializer" FullName="System.Workflow.Runtime.Tracking.TrackingProfileSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd320a3e30d842ac4d5ee7392a649d3136d77756" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37487042" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TrackingProfileSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TrackingProfileSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Tracking.TrackingProfileSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class TrackingProfileSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingProfileSerializer" />
  <TypeSignature Language="F#" Value="type TrackingProfileSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>使用追蹤設定檔 XML 結構描述定義 (XSD) 提供將追蹤設定檔序列化為 XML 文件，以及從 XML 文件將追蹤設定檔還原序列化的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer> 使用包含在 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Schema%2A?displayProperty=nameWithType> 中的追蹤設定檔 XSD 將 <xref:System.Workflow.Runtime.Tracking.TrackingProfile> 物件序列化為有效的 XML 文件，以及將有效的 XML 文件還原序列化為 <xref:System.Workflow.Runtime.Tracking.TrackingProfile> 物件。 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer> 會在序列化和還原序列化期間執行驗證，並視需要擲回適當的例外狀況。  
  
 XML 文件提供儲存追蹤設定檔的方便格式。 它也提供撰寫追蹤設定檔的非程式設計方法。 全新的 <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> 會使用 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer> 來序列化和還原序列化儲存在其資料庫中的追蹤設定檔。  
  
   
  
## Examples  
 下列程式碼範例將示範如何使用 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer> 建構函式建立 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.%23ctor%2A> 以序列化 <xref:System.Workflow.Runtime.Tracking.TrackingProfile>。 此程式碼也會使用 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Serialize%2A> 方法。  
  
 這個程式碼範例是 Program.cs 檔案中＜使用 SQLTrackingService 查詢 SDK＞範例的一部分。 如需詳細資訊，請參閱 <<c0> [ 查詢使用 SQLTrackingService](http://msdn.microsoft.com/library/a81e48bb-12f4-4e2b-9176-ea4e6b6e3d21)。  
  
 [!code-csharp[WF_Samples#291](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#291)]
 [!code-vb[WF_Samples#291](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#291)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TrackingProfileSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TrackingProfileSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfileSerializer" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例將示範如何使用 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer> 建構函式建立 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.%23ctor%2A> 以序列化 <xref:System.Workflow.Runtime.Tracking.TrackingProfile>。 此程式碼也會使用 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Serialize%2A> 方法。  
  
 這個程式碼範例是 Program.cs 檔案中＜使用 SQLTrackingService 查詢 SDK＞範例的一部分。 如需詳細資訊，請參閱 <<c0> [ 查詢使用 SQLTrackingService](http://msdn.microsoft.com/library/a81e48bb-12f4-4e2b-9176-ea4e6b6e3d21)。  
  
 [!code-csharp[WF_Samples#291](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#291)]
 [!code-vb[WF_Samples#291](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#291)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.Tracking.TrackingProfile Deserialize (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.Tracking.TrackingProfile Deserialize(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Deserialize(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (reader As TextReader) As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::Tracking::TrackingProfile ^ Deserialize(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.IO.TextReader -&gt; System.Workflow.Runtime.Tracking.TrackingProfile" Usage="trackingProfileSerializer.Deserialize reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">包含 XML 文件的 <see cref="T:System.IO.TextReader" />。</param>
        <summary>使用追蹤設定檔 XML 結構描述定義 (XSD) 還原序列化包含在文字閱讀器中的 XML 文件。</summary>
        <returns>包含還原序列化的追蹤設定檔的 <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 還原序列化指的是從格式正確的 XML 文件建立物件的程序。 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Deserialize%2A> 會使用包含在 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Schema%2A> 中的追蹤設定檔 XSD，將包含在文字讀取器中的 XML 文件還原序列化為有效的 <xref:System.Workflow.Runtime.Tracking.TrackingProfile>。 還原序列化期間會在 XML 文件上執行驗證，如果文件無效，則擲回 <xref:System.Workflow.Runtime.Tracking.TrackingProfileDeserializationException>。 您可以捕捉此例外狀況，並檢查 <xref:System.Workflow.Runtime.Tracking.TrackingProfileDeserializationException.ValidationEventArgs%2A> 以判斷驗證錯誤的原因。 如果在還原序列化追蹤設定檔的期間有任何未處理的例外狀況，將終止要求追蹤設定檔的工作流程執行個體。  
  
> [!NOTE]
>  如果您想要執行驗證，但不還原序列化追蹤設定檔的 XML 表示法，您可以寫入您自己的追蹤設定檔驗證程式。 如需詳細資訊，請參閱 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Schema%2A> 屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
        <exception cref="T:System.Workflow.Runtime.Tracking.TrackingProfileDeserializationException">
          <paramref name="reader" /> 不包含符合追蹤設定檔 XSD 的文件。</exception>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchema Schema" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchema ^ Schema { System::Xml::Schema::XmlSchema ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.Xml.Schema.XmlSchema" Usage="System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得追蹤設定檔 XML 結構描述定義 (XSD)。</summary>
        <value>追蹤設定檔 XSD。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性會公開 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer> 用於執行 <xref:System.Workflow.Runtime.Tracking.TrackingProfile> 的序列化和還原序列化的追蹤設定檔 XSD。 您也可使用此屬性取得追蹤設定檔 XSD 以寫入您自己用於追蹤設定檔的驗證程式。 例如，您可能想要執行此動作以驗證追蹤設定檔的 XML 表示法，而且不執行還原序列化。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.TextWriter writer, System.Workflow.Runtime.Tracking.TrackingProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.TextWriter writer, class System.Workflow.Runtime.Tracking.TrackingProfile profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Serialize(System.IO.TextWriter,System.Workflow.Runtime.Tracking.TrackingProfile)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (writer As TextWriter, profile As TrackingProfile)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::TextWriter ^ writer, System::Workflow::Runtime::Tracking::TrackingProfile ^ profile);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.TextWriter * System.Workflow.Runtime.Tracking.TrackingProfile -&gt; unit" Usage="trackingProfileSerializer.Serialize (writer, profile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="profile" Type="System.Workflow.Runtime.Tracking.TrackingProfile" />
      </Parameters>
      <Docs>
        <param name="writer">有效的 <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" />。</param>
        <param name="profile">當這個方法傳回時，包含存有 XML 文件的 <see cref="T:System.IO.TextWriter" />。 參數是以未初始化的狀態傳遞。</param>
        <summary>使用追蹤設定檔 XML 結構描述定義 (XSD) 將追蹤設定檔序列化為 XML 文件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 序列化是指從有效的 <xref:System.Workflow.Runtime.Tracking.TrackingProfile> 建立格式正確的 XML 文件的程序。 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Serialize%2A> 會使用追蹤設定檔 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Schema%2A>，將追蹤設定檔序列化。 `profile` 必須是有效的 <xref:System.Workflow.Runtime.Tracking.TrackingProfile>，包含至少一個有效的追蹤點。 序列化期間會在追蹤設定檔上執行驗證，如果追蹤設定檔無效，則擲回 <xref:System.ArgumentException>。 您可以捕捉此例外狀況，並檢查它的訊息屬性以判斷驗證錯誤的原因。 如果在序列化追蹤設定檔的期間有任何未處理的例外狀況，將終止要求追蹤設定檔的工作流程執行個體。  
  
   
  
## Examples  
 下列程式碼範例將示範如何使用 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer> 建構函式建立 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.%23ctor%2A> 以序列化 <xref:System.Workflow.Runtime.Tracking.TrackingProfile>。 此程式碼也會使用 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Serialize%2A> 方法。  
  
 這個程式碼範例是 Program.cs 檔案中＜使用 SQLTrackingService 查詢 SDK＞範例的一部分。 如需詳細資訊，請參閱 <<c0> [ 查詢使用 SQLTrackingService](http://msdn.microsoft.com/library/a81e48bb-12f4-4e2b-9176-ea4e6b6e3d21)。  
  
 [!code-csharp[WF_Samples#291](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#291)]
 [!code-vb[WF_Samples#291](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#291)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="profile" /> 為 <see langword="null" />。  或 <paramref name="writer" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="profile" /> 不是有效的追蹤設定檔。</exception>
      </Docs>
    </Member>
  </Members>
</Type>