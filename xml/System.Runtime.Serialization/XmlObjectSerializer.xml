<Type Name="XmlObjectSerializer" FullName="System.Runtime.Serialization.XmlObjectSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8a5bf07c31b51eb3d1956717f81ce6abf6a1c203" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36533450" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XmlObjectSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlObjectSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.XmlObjectSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlObjectSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlObjectSerializer abstract" />
  <TypeSignature Language="F#" Value="type XmlObjectSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="89a15-101">提供用來將物件序列化為 XML 資料流或文件的基底類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="89a15-101">Provides the base class used to serialize objects as XML streams or documents.</span>
      </span>
      <span data-ttu-id="89a15-102">這個類別是抽象的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="89a15-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a15-103">擴充 <xref:System.Runtime.Serialization.XmlObjectSerializer>，便可建立您自己的序列化程式來序列化或還原序列化物件。</span><span class="sxs-lookup"><span data-stu-id="89a15-103">Extend the <xref:System.Runtime.Serialization.XmlObjectSerializer> to create your own serializer to serialize and deserialize objects.</span></span> <span data-ttu-id="89a15-104"><xref:System.Runtime.Serialization.DataContractSerializer> 類別和 <xref:System.Runtime.Serialization.NetDataContractSerializer> 類別都是繼承自 <xref:System.Runtime.Serialization.XmlObjectSerializer>，而且會用來序列化和還原序列化符合資料合約規則的物件 (使用 <xref:System.Runtime.Serialization.DataContractAttribute> 和 <xref:System.Runtime.Serialization.DataMemberAttribute> 建立的物件)。</span><span class="sxs-lookup"><span data-stu-id="89a15-104">Both the <xref:System.Runtime.Serialization.DataContractSerializer> class and the <xref:System.Runtime.Serialization.NetDataContractSerializer> class inherit from the <xref:System.Runtime.Serialization.XmlObjectSerializer> and are used to serialize and deserialize objects that conform to data contract rules (objects created using the <xref:System.Runtime.Serialization.DataContractAttribute> and the <xref:System.Runtime.Serialization.DataMemberAttribute>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89a15-105">下列範例會示範名為 `WriteObjectWithInstance` 的方法，這個方法會包含 <xref:System.Runtime.Serialization.XmlObjectSerializer> 做為參數。</span><span class="sxs-lookup"><span data-stu-id="89a15-105">The following example shows a method named `WriteObjectWithInstance` that includes an <xref:System.Runtime.Serialization.XmlObjectSerializer> as a parameter.</span></span> <span data-ttu-id="89a15-106">這個方法會呼叫 <xref:System.Runtime.Serialization.DataContractSerializer> 方法，藉以序列化使用 <xref:System.Runtime.Serialization.NetDataContractSerializer> 或 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> 的物件。</span><span class="sxs-lookup"><span data-stu-id="89a15-106">The method serializes an object using either the <xref:System.Runtime.Serialization.DataContractSerializer> or <xref:System.Runtime.Serialization.NetDataContractSerializer> by calling the <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> method.</span></span>  
  
 [!code-csharp[XmlObjectSerializer#1](~/samples/snippets/csharp/VS_Snippets_CFX/xmlobjectserializer/cs/source.cs#1)]
 [!code-vb[XmlObjectSerializer#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/xmlobjectserializer/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
      <span data-ttu-id="89a15-107">正在序列化的型別不符合資料合約規則。</span>
      <span class="sxs-lookup">
        <span data-stu-id="89a15-107">the type being serialized does not conform to data contract rules.</span>
      </span>
      <span data-ttu-id="89a15-108">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="89a15-108">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
      </span>
    </exception>
    <exception cref="T:System.Runtime.Serialization.SerializationException">
      <span data-ttu-id="89a15-109">正在序列化的執行個體發生問題。</span>
      <span class="sxs-lookup">
        <span data-stu-id="89a15-109">there is a problem with the instance being serialized.</span>
      </span>
    </exception>
    <block subset="none" type="overrides">
      <span data-ttu-id="89a15-110">
        <para>當您繼承自<see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />，您必須覆寫下列成員： <see cref="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)" />， <see cref="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)" />， <see cref="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)" />。此外，<see cref="Overload:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject" />和<see cref="Overload:System.Runtime.Serialization.XmlObjectSerializer.ReadObject" />必須實作方法來讀取和還原序列化。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="89a15-110">
          <para>When you inherit from <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, you must override the following members: <see cref="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)" />, <see cref="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)" />, <see cref="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)" />. Additionally, the <see cref="Overload:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject" /> and <see cref="Overload:System.Runtime.Serialization.XmlObjectSerializer.ReadObject" /> methods must be implemented for reading and deserializing.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.NetDataContractSerializer" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlObjectSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlObjectSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89a15-111">初始化 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-111">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a15-112">這個建構函式會標記為保護的，以允許衍生類別鏈結建構函式。</span><span class="sxs-lookup"><span data-stu-id="89a15-112">This constructor is marked protected to allow derived classes to chain constructors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="89a15-113">取得值，這個值會指定序列化程式是否能夠讀取該物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-113">Gets a value that specifies whether the serializer can read the object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a15-114">這個方法會檢查讀取器是否位於要讀取的項目上，並在此項目為 XML 資料流或文件中所找到物件的最上層項目時，傳回 `true`。</span><span class="sxs-lookup"><span data-stu-id="89a15-114">This method checks whether the reader is positioned on an element to read, and returns `true` if the element is the top-level element for the object found in the XML stream or document.</span></span> <span data-ttu-id="89a15-115">為了傳回 `true`，此時找到的項目必須具有預期的名稱。</span><span class="sxs-lookup"><span data-stu-id="89a15-115">To return `true`, the found element must have an expected name.</span></span> <span data-ttu-id="89a15-116">實際的預期項目名稱需視序列化程式實作而定。</span><span class="sxs-lookup"><span data-stu-id="89a15-116">The actual expected element name depends on the implementation of the serializer.</span></span>  
  
 <span data-ttu-id="89a15-117">透過 <xref:System.Runtime.Serialization.DataContractSerializer>，此起始項目就可指定於延伸類別的建構函式中。</span><span class="sxs-lookup"><span data-stu-id="89a15-117">With the <xref:System.Runtime.Serialization.DataContractSerializer>, the starting element is specified in the constructor of the extension class.</span></span>  <span data-ttu-id="89a15-118">如需範例，請參閱 <xref:System.Runtime.Serialization.DataContractSerializer> 類別的建構函式。</span><span class="sxs-lookup"><span data-stu-id="89a15-118">For an example, see the constructors for the <xref:System.Runtime.Serialization.DataContractSerializer> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public abstract bool IsStartObject (System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStartObject(class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsStartObject (reader As XmlDictionaryReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsStartObject(System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member IsStartObject : System.Xml.XmlDictionaryReader -&gt; bool" Usage="xmlObjectSerializer.IsStartObject reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="89a15-119">
            <see cref="T:System.Xml.XmlDictionaryReader" />，用於讀取 XML 資料流或文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-119">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream or document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a15-120">取得值，這個值會指定 <see cref="T:System.Xml.XmlDictionaryReader" /> 是否位於能夠讀取的 XML 項目上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-120">Gets a value that specifies whether the <see cref="T:System.Xml.XmlDictionaryReader" /> is positioned over an XML element that can be read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89a15-121">如果讀取器可以讀取資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-121">
              <see langword="true" /> if the reader can read the data; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a15-122">這個方法會檢查讀取器是否位於要讀取的項目上，並在此項目為 XML 資料流或文件中所找到物件的最上層項目時，傳回 `true`。</span><span class="sxs-lookup"><span data-stu-id="89a15-122">This method checks if the reader is positioned on an element to read, and returns `true` if the element is the top-level element for the object found in the XML stream or document.</span></span> <span data-ttu-id="89a15-123"><xref:System.Runtime.Serialization.XmlObjectSerializer> 實作會判定何時傳回 `true`。</span><span class="sxs-lookup"><span data-stu-id="89a15-123">The <xref:System.Runtime.Serialization.XmlObjectSerializer> implementation determines when to return `true`.</span></span> <span data-ttu-id="89a15-124">實作會檢查自己是否位於項目上，或是尋找預期的項目名稱。</span><span class="sxs-lookup"><span data-stu-id="89a15-124">Implementations may check that they are positioned on an element or look for an expected element name.</span></span> <span data-ttu-id="89a15-125">其中一個 <xref:System.Runtime.Serialization.XmlObjectSerializer> 的實作，即 <xref:System.Runtime.Serialization.DataContractSerializer>，它會檢查自己是否位於項目上，也會檢查項目名稱是否為目前正在還原序列化之型別的最上層預期名稱。</span><span class="sxs-lookup"><span data-stu-id="89a15-125">One implementation of the <xref:System.Runtime.Serialization.XmlObjectSerializer>, the <xref:System.Runtime.Serialization.DataContractSerializer>, checks that it is positioned on an element and also checks that the element name is the top level expected name for the type currently being deserialized.</span></span>  
  
 <span data-ttu-id="89a15-126">如果有需要，在使用 <xref:System.Runtime.Serialization.XmlObjectSerializer.ReadObject%2A> 方法讀取 XML 內容之前，可以讀取 XML 資料流中的其他屬性，並同時將其放置到最上層項目上。</span><span class="sxs-lookup"><span data-stu-id="89a15-126">If needed, additional attributes in the XML stream can be read while positioned on the top level element before reading XML contents using the <xref:System.Runtime.Serialization.XmlObjectSerializer.ReadObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public virtual bool IsStartObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStartObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsStartObject (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsStartObject(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member IsStartObject : System.Xml.XmlReader -&gt; bool&#xA;override this.IsStartObject : System.Xml.XmlReader -&gt; bool" Usage="xmlObjectSerializer.IsStartObject reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="89a15-127">
            <see cref="T:System.Xml.XmlReader" />，用於讀取 XML 資料流或文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-127">An <see cref="T:System.Xml.XmlReader" /> used to read the XML stream or document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a15-128">取得值，這個值會指定 <see cref="T:System.Xml.XmlReader" /> 是否位於能夠讀取的 XML 項目上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-128">Gets a value that specifies whether the <see cref="T:System.Xml.XmlReader" /> is positioned over an XML element that can be read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89a15-129">如果讀取器位於起始項目上，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-129">
              <see langword="true" /> if the reader is positioned over the starting element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a15-130">這個方法會檢查讀取器是否位於要讀取的項目上，並在此項目為 XML 資料流或文件中所找到物件的最上層項目時，傳回 `true`。</span><span class="sxs-lookup"><span data-stu-id="89a15-130">This method checks whether the reader is positioned on an element to read, and returns `true` if the element is the top-level element for the object found in the XML stream or document.</span></span> <span data-ttu-id="89a15-131">為了傳回 `true`，此時找到的項目必須具有預期的名稱。</span><span class="sxs-lookup"><span data-stu-id="89a15-131">To return `true`, the found element must have an expected name.</span></span> <span data-ttu-id="89a15-132">實際的預期項目名稱需視序列化程式實作而定。</span><span class="sxs-lookup"><span data-stu-id="89a15-132">The actual expected element name depends on the implementation of the serializer.</span></span>  
  
 <span data-ttu-id="89a15-133">透過 <xref:System.Runtime.Serialization.DataContractSerializer>，此起始項目就可指定於延伸類別的建構函式中。</span><span class="sxs-lookup"><span data-stu-id="89a15-133">With the <xref:System.Runtime.Serialization.DataContractSerializer>, the starting element is specified in the constructor of the extension class.</span></span>  <span data-ttu-id="89a15-134">如需範例，請參閱 <xref:System.Runtime.Serialization.DataContractSerializer> 類別的建構函式。</span><span class="sxs-lookup"><span data-stu-id="89a15-134">For an example, see the constructors for the <xref:System.Runtime.Serialization.DataContractSerializer> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="89a15-135">讀取 XML 文件或文件資料流，然後傳回已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-135">Reads an XML document or document stream and returns the deserialized object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public virtual object ReadObject (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadObject(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadObject(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member ReadObject : System.IO.Stream -&gt; obj&#xA;override this.ReadObject : System.IO.Stream -&gt; obj" Usage="xmlObjectSerializer.ReadObject stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="89a15-136">
            <see cref="T:System.IO.Stream" />，用於讀取 XML 資料流或文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-136">A <see cref="T:System.IO.Stream" /> used to read the XML stream or document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a15-137">使用 <see cref="T:System.IO.Stream" /> 讀取 XML 資料流或文件，然後傳回已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-137">Reads the XML stream or document with a <see cref="T:System.IO.Stream" /> and returns the deserialized object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89a15-138">已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-138">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a15-139">這個方法屬於虛擬方法，它所擁有的預設實作會建立字典讀取器來讀取基礎資料流，並且將其還原序列化。</span><span class="sxs-lookup"><span data-stu-id="89a15-139">This method is a virtual method, and has a default implementation that creates a dictionary reader to read the underlying stream and deserialize it.</span></span> <span data-ttu-id="89a15-140">預設實作會假設資料流是文字或 XML。</span><span class="sxs-lookup"><span data-stu-id="89a15-140">The default implementation assumes the stream is text or XML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public virtual object ReadObject (System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadObject(class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadObject (reader As XmlDictionaryReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadObject(System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadObject : System.Xml.XmlDictionaryReader -&gt; obj&#xA;override this.ReadObject : System.Xml.XmlDictionaryReader -&gt; obj" Usage="xmlObjectSerializer.ReadObject reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="89a15-141">
            <see cref="T:System.Xml.XmlDictionaryReader" />，用於讀取 XML 文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-141">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a15-142">使用 <see cref="T:System.Xml.XmlDictionaryReader" /> 讀取 XML 文件或資料流，然後傳回已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-142">Reads the XML document or stream with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89a15-143">已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-143">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a15-144">這個方法屬於虛擬方法，它所擁有的預設實作會建立字典讀取器來讀取基礎資料流，並且將其還原序列化。</span><span class="sxs-lookup"><span data-stu-id="89a15-144">This method is a virtual method, and has a default implementation that creates a dictionary reader to read the underlying stream and deserialize it.</span></span> <span data-ttu-id="89a15-145">預設實作會假設資料流是文字或 XML。</span><span class="sxs-lookup"><span data-stu-id="89a15-145">The default implementation assumes the stream is text or XML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public virtual object ReadObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadObject (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadObject(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadObject : System.Xml.XmlReader -&gt; obj&#xA;override this.ReadObject : System.Xml.XmlReader -&gt; obj" Usage="xmlObjectSerializer.ReadObject reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="89a15-146">
            <see cref="T:System.Xml.XmlReader" />，用於讀取 XML 資料流或文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-146">An <see cref="T:System.Xml.XmlReader" /> used to read the XML stream or document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a15-147">使用 <see cref="T:System.Xml.XmlReader" /> 讀取 XML 文件或資料流，然後傳回已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-147">Reads the XML document or stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89a15-148">已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-148">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public abstract object ReadObject (System.Xml.XmlDictionaryReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadObject(class System.Xml.XmlDictionaryReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadObject (reader As XmlDictionaryReader, verifyObjectName As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ReadObject(System::Xml::XmlDictionaryReader ^ reader, bool verifyObjectName);" />
      <MemberSignature Language="F#" Value="abstract member ReadObject : System.Xml.XmlDictionaryReader * bool -&gt; obj" Usage="xmlObjectSerializer.ReadObject (reader, verifyObjectName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="89a15-149">
            <see cref="T:System.Xml.XmlDictionaryReader" />，用於讀取 XML 文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-149">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML document.</span>
          </span>
        </param>
        <param name="verifyObjectName">
          <span data-ttu-id="89a15-150">若要檢查內含的 XML 項目名稱和命名空間是否對應至根名稱以及根命名空間，則為 <see langword="true" />，否則為 <see langword="false" />，將會略過驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-150">
              <see langword="true" /> to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; otherwise, <see langword="false" /> to skip the verification.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a15-151">使用 <see cref="T:System.Xml.XmlDictionaryReader" /> 讀取 XML 資料流或文件，然後傳回已還原序列化的物件；它也可以讓您指定序列化程式在嘗試讀取資料前是否能夠讀取資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-151">Reads the XML stream or document with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89a15-152">已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-152">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a15-153">`verifyObjectName` 參數會使用與 <xref:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject%2A> 方法相同的程式碼，判定項目是否為物件的開頭。</span><span class="sxs-lookup"><span data-stu-id="89a15-153">The `verifyObjectName` parameter uses the same code as the <xref:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject%2A> method to determine whether the element is the start of the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public virtual object ReadObject (System.Xml.XmlReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadObject(class System.Xml.XmlReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadObject (reader As XmlReader, verifyObjectName As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadObject(System::Xml::XmlReader ^ reader, bool verifyObjectName);" />
      <MemberSignature Language="F#" Value="abstract member ReadObject : System.Xml.XmlReader * bool -&gt; obj&#xA;override this.ReadObject : System.Xml.XmlReader * bool -&gt; obj" Usage="xmlObjectSerializer.ReadObject (reader, verifyObjectName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="89a15-154">
            <see cref="T:System.Xml.XmlReader" />，用於讀取 XML 文件或資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-154">An <see cref="T:System.Xml.XmlReader" /> used to read the XML document or stream.</span>
          </span>
        </param>
        <param name="verifyObjectName">
          <span data-ttu-id="89a15-155">若要檢查內含的 XML 項目名稱和命名空間是否對應至根名稱以及根命名空間，則為 <see langword="true" />，否則為 <see langword="false" />，將會略過驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-155">
              <see langword="true" /> to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; <see langword="false" /> to skip the verification.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a15-156">使用 <see cref="T:System.Xml.XmlReader" /> 讀取 XML 文件或資料流，然後傳回已還原序列化的物件；它也可以讓您指定序列化程式在嘗試讀取資料前是否能夠讀取資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-156">Reads the XML document or stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89a15-157">已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-157">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a15-158">`verifyObjectName` 參數會使用與 <xref:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject%2A> 方法相同的程式碼，判定項目是否為物件的開頭。</span><span class="sxs-lookup"><span data-stu-id="89a15-158">The `verifyObjectName` parameter uses the same code as the <xref:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject%2A> method to determine whether the element is the start of the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEndObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="89a15-159">將結尾 XML 項目寫入至 XML 資料流或文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-159">Writes the closing XML element to an XML stream or document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a15-160">必須實作 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="89a15-160">The <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A> methods must be implemented.</span></span> <span data-ttu-id="89a15-161">這三個方法會被用來以下列模式連續寫入完整的序列化：寫入開始、寫入內容和寫入結束。</span><span class="sxs-lookup"><span data-stu-id="89a15-161">The three methods are used in succession to write the complete serialization using the pattern: write start, write content, and write end.</span></span> <span data-ttu-id="89a15-162">在呼叫 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A> 和 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A> 之間，使用者可以在寫入物件期間插入 XML 屬性。</span><span class="sxs-lookup"><span data-stu-id="89a15-162">Users can insert XML attributes during the writing of the object between the calls to <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A> and <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A>.</span></span> <span data-ttu-id="89a15-163"><xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> 方法的虛擬實作也會呼叫這三個方法。</span><span class="sxs-lookup"><span data-stu-id="89a15-163">The three methods are also called by the virtual implementation of the <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public abstract void WriteEndObject (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndObject(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndObject (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndObject(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteEndObject : System.Xml.XmlDictionaryWriter -&gt; unit" Usage="xmlObjectSerializer.WriteEndObject writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="89a15-164">用來撰寫 XML 文件或資料流的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-164">An <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a15-165">使用 <see cref="T:System.Xml.XmlDictionaryWriter" />，將物件資料的結尾當做結尾 XML 項目寫入至 XML 文件或資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-165">Writes the end of the object data as a closing XML element to the XML document or stream with an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="89a15-166">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-166">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="89a15-167">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-167">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="89a15-168">正在序列化的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-168">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="89a15-169">已超過要序列化的物件數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-169">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="89a15-170">檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-170">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public virtual void WriteEndObject (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndObject(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEndObject (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEndObject(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteEndObject : System.Xml.XmlWriter -&gt; unit&#xA;override this.WriteEndObject : System.Xml.XmlWriter -&gt; unit" Usage="xmlObjectSerializer.WriteEndObject writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="89a15-171">用來撰寫 XML 文件或資料流的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-171">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a15-172">使用 <see cref="T:System.Xml.XmlWriter" />，將物件資料的結尾當做結尾 XML 項目寫入至 XML 文件或資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-172">Writes the end of the object data as a closing XML element to the XML document or stream with an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="89a15-173">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-173">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="89a15-174">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-174">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="89a15-175">正在序列化的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-175">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="89a15-176">已超過要序列化的物件數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-176">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="89a15-177">檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-177">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="89a15-178">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-178">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="89a15-179">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-179">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="89a15-180">正在序列化的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-180">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="89a15-181">已超過要序列化的物件數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-181">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="89a15-182">檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-182">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="89a15-183">將所有的物件資料 (起始 XML 項目、內容以及結尾項目) 寫入至 XML 文件或資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-183">Writes all the object data (starting XML element, content, and closing element) to an XML document or stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public virtual void WriteObject (System.IO.Stream stream, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteObject(class System.IO.Stream stream, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteObject(System::IO::Stream ^ stream, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="abstract member WriteObject : System.IO.Stream * obj -&gt; unit&#xA;override this.WriteObject : System.IO.Stream * obj -&gt; unit" Usage="xmlObjectSerializer.WriteObject (stream, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="89a15-184">
            <see cref="T:System.IO.Stream" />，用於寫入 XML 文件或資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-184">A <see cref="T:System.IO.Stream" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="89a15-185">包含要寫入至資料流之資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-185">The object that contains the data to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a15-186">使用指定的 <see cref="T:System.IO.Stream" />，將物件的完整內容 (開始、內容和結束) 寫入至 XML 文件或資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-186">Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="89a15-187">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-187">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="89a15-188">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-188">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="89a15-189">正在序列化的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-189">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="89a15-190">已超過要序列化的物件數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-190">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="89a15-191">檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-191">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public virtual void WriteObject (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteObject(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteObject (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteObject(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="abstract member WriteObject : System.Xml.XmlDictionaryWriter * obj -&gt; unit&#xA;override this.WriteObject : System.Xml.XmlDictionaryWriter * obj -&gt; unit" Usage="xmlObjectSerializer.WriteObject (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="89a15-192">
            <see cref="T:System.Xml.XmlDictionaryWriter" />，用來將內容寫入至 XML 文件或資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-192">An <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the content to the XML document or stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="89a15-193">包含要寫入之內容的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-193">The object that contains the content to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a15-194">使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" />，將物件的完整內容 (開始、內容和結束) 寫入至 XML 文件或資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-194">Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a15-195">這是一種虛擬方法，其預設實作會呼叫 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="89a15-195">This is a virtual method and has a default implementation that calls the <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A> methods.</span></span> <span data-ttu-id="89a15-196">拜這項特性之賜，這個方法是最常用在序列化程式上的方法。</span><span class="sxs-lookup"><span data-stu-id="89a15-196">Because of this, this method is intended to be the most commonly used method on a serializer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="89a15-197">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-197">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="89a15-198">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-198">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="89a15-199">正在序列化的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-199">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="89a15-200">已超過要序列化的物件數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-200">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="89a15-201">檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-201">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public virtual void WriteObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteObject (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteObject(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="abstract member WriteObject : System.Xml.XmlWriter * obj -&gt; unit&#xA;override this.WriteObject : System.Xml.XmlWriter * obj -&gt; unit" Usage="xmlObjectSerializer.WriteObject (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="89a15-202">用來撰寫 XML 文件或資料流的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-202">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="89a15-203">包含要寫入之內容的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-203">The object that contains the content to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a15-204">使用指定的 <see cref="T:System.Xml.XmlWriter" />，將物件的完整內容 (開始、內容和結束) 寫入至 XML 文件或資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-204">Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a15-205">這是一種虛擬方法，其預設實作會委派寫入至 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%28System.Xml.XmlDictionaryWriter%2CSystem.Object%29?displayProperty=nameWithType> 多載。</span><span class="sxs-lookup"><span data-stu-id="89a15-205">This is a virtual method, and has a default implementation that delegates writing to the <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%28System.Xml.XmlDictionaryWriter%2CSystem.Object%29?displayProperty=nameWithType> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="89a15-206">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-206">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="89a15-207">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-207">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="89a15-208">正在序列化的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-208">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="89a15-209">已超過要序列化的物件數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-209">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="89a15-210">檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-210">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteObjectContent">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="89a15-211">只將物件內容寫入至 XML 文件或資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-211">Writes only the content of an object to an XML document or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a15-212">必須實作 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="89a15-212">The <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A> methods must be implemented.</span></span> <span data-ttu-id="89a15-213">這三個方法會被用來以下列模式連續寫入完整的序列化：寫入開始、寫入內容和寫入結束。</span><span class="sxs-lookup"><span data-stu-id="89a15-213">The three methods are used in succession to write the complete serialization using the pattern: write start, write content, and write end.</span></span> <span data-ttu-id="89a15-214">如果實作會使用 XML 項目進行寫入，這時就可以在物件內容寫入之前插入屬性。</span><span class="sxs-lookup"><span data-stu-id="89a15-214">If the implementation writes using XML elements, attributes can be inserted before writing the contents of the object.</span></span> <span data-ttu-id="89a15-215"><xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> 方法的虛擬實作也會呼叫這三個方法。</span><span class="sxs-lookup"><span data-stu-id="89a15-215">The three methods are also called by the virtual implementation of the <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public abstract void WriteObjectContent (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteObjectContent(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteObjectContent (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteObjectContent(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="abstract member WriteObjectContent : System.Xml.XmlDictionaryWriter * obj -&gt; unit" Usage="xmlObjectSerializer.WriteObjectContent (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="89a15-216">用來撰寫 XML 文件或資料流的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-216">An <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="89a15-217">包含要寫入之內容的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-217">The object that contains the content to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a15-218">使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" />，只將物件內容寫入至 XML 文件或資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-218">Writes only the content of the object to the XML document or stream using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="89a15-219">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-219">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="89a15-220">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-220">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="89a15-221">正在序列化的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-221">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="89a15-222">已超過要序列化的物件數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-222">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="89a15-223">檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-223">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public virtual void WriteObjectContent (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteObjectContent(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteObjectContent (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteObjectContent(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="abstract member WriteObjectContent : System.Xml.XmlWriter * obj -&gt; unit&#xA;override this.WriteObjectContent : System.Xml.XmlWriter * obj -&gt; unit" Usage="xmlObjectSerializer.WriteObjectContent (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="89a15-224">用來撰寫 XML 文件或資料流的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-224">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="89a15-225">包含要寫入之內容的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-225">The object that contains the content to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a15-226">使用指定的 <see cref="T:System.Xml.XmlWriter" />，只將物件內容寫入至 XML 文件或資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-226">Writes only the content of the object to the XML document or stream with the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="89a15-227">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-227">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="89a15-228">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-228">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="89a15-229">正在序列化的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-229">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="89a15-230">已超過要序列化的物件數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-230">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="89a15-231">檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-231">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="89a15-232">只將起始 XML 項目寫入至 XML 文件或資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-232">Writes only the starting XML element to an XML document or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89a15-233">必須實作 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="89a15-233">The <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A> methods must be implemented.</span></span> <span data-ttu-id="89a15-234">這三個方法會被用來以下列模式連續寫入完整的序列化：寫入開始、寫入內容和寫入結束。</span><span class="sxs-lookup"><span data-stu-id="89a15-234">The three methods are used in succession to write the complete serialization using the pattern: write start, write content, and write end.</span></span> <span data-ttu-id="89a15-235">如果實作會使用 XML 項目進行寫入，這時就可以在物件內容寫入之前插入屬性。</span><span class="sxs-lookup"><span data-stu-id="89a15-235">If the implementation writes using XML elements, attributes can be inserted before writing the contents of the object.</span></span> <span data-ttu-id="89a15-236"><xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> 方法的虛擬實作也會呼叫這三個方法。</span><span class="sxs-lookup"><span data-stu-id="89a15-236">The three methods are also called by the virtual implementation of the <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public abstract void WriteStartObject (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartObject(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartObject (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartObject(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartObject : System.Xml.XmlDictionaryWriter * obj -&gt; unit" Usage="xmlObjectSerializer.WriteStartObject (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="89a15-237">
            <see cref="T:System.Xml.XmlDictionaryWriter" />，用於寫入 XML 文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-237">An <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML document.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="89a15-238">要序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-238">The object to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a15-239">使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" />，將物件資料的開始內容當做開頭 XML 項目寫入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-239">Writes the start of the object's data as an opening XML element using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="89a15-240">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-240">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="89a15-241">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-241">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="89a15-242">正在序列化的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-242">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="89a15-243">已超過要序列化的物件數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-243">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="89a15-244">檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-244">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public virtual void WriteStartObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStartObject (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStartObject(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartObject : System.Xml.XmlWriter * obj -&gt; unit&#xA;override this.WriteStartObject : System.Xml.XmlWriter * obj -&gt; unit" Usage="xmlObjectSerializer.WriteStartObject (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="89a15-245">
            <see cref="T:System.Xml.XmlWriter" />，用於寫入 XML 文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-245">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="89a15-246">要序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-246">The object to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89a15-247">使用指定的 <see cref="T:System.Xml.XmlWriter" />，將物件資料的開始內容當做開頭 XML 項目寫入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-247">Writes the start of the object's data as an opening XML element using the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="89a15-248">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-248">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="89a15-249">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-249">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="89a15-250">正在序列化的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-250">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="89a15-251">已超過要序列化的物件數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-251">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="89a15-252">檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89a15-252">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>