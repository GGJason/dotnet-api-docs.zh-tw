<Type Name="KnownTypeAttribute" FullName="System.Runtime.Serialization.KnownTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="031e5c0369c906aecb6e2e5340774d195d4125ef" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52238086" /></Metadata><TypeSignature Language="C#" Value="public sealed class KnownTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit KnownTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.KnownTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class KnownTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class KnownTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type KnownTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="956f6-101">指定在序列化或還原序列化指定型別時，應該要由 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 辨識的型別。</span><span class="sxs-lookup"><span data-stu-id="956f6-101">Specifies types that should be recognized by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> when serializing or deserializing a given type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="956f6-102">將 <xref:System.Runtime.Serialization.KnownTypeAttribute> 屬性套用至型別，以表示在序列化或還原序列化套用該屬性之型別的執行個體時，必須辨識的 <xref:System.Runtime.Serialization.DataContractSerializer> 型別。</span><span class="sxs-lookup"><span data-stu-id="956f6-102">Apply the <xref:System.Runtime.Serialization.KnownTypeAttribute> attribute to a type to indicate to the <xref:System.Runtime.Serialization.DataContractSerializer> types that should be recognized when serializing or deserializing an instance of the type to which the attribute is applied.</span></span> <span data-ttu-id="956f6-103">這個屬性也可以由能夠識別資料合約的其他序列化程式進行辨識。</span><span class="sxs-lookup"><span data-stu-id="956f6-103">This attribute could also be recognized by other serializers that understand data contracts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="956f6-104">在程式碼中，您可以使用字組 `KnownType` 來代替較長的 `KnownTypeAttribute`。</span><span class="sxs-lookup"><span data-stu-id="956f6-104">In your code, you can use the word `KnownType` instead of the longer `KnownTypeAttribute`.</span></span>  
  
 <span data-ttu-id="956f6-105">您可以套用一個已設定 <xref:System.Runtime.Serialization.KnownTypeAttribute> 屬性的 <xref:System.Runtime.Serialization.KnownTypeAttribute.MethodName%2A> 執行個體上，或是套用一或多個已設定 <xref:System.Runtime.Serialization.KnownTypeAttribute> 屬性的 <xref:System.Runtime.Serialization.KnownTypeAttribute.Type%2A> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="956f6-105">You can either apply exactly one <xref:System.Runtime.Serialization.KnownTypeAttribute> instance with the <xref:System.Runtime.Serialization.KnownTypeAttribute.MethodName%2A> property set, or one or more <xref:System.Runtime.Serialization.KnownTypeAttribute> instances with the <xref:System.Runtime.Serialization.KnownTypeAttribute.Type%2A> property set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="956f6-106">下列範例會示範應該要在序列化或還原序列化 `Person` 型別時加以辨識的型別，即名稱 `IDInformation` 和名稱 `Person` 的型別。</span><span class="sxs-lookup"><span data-stu-id="956f6-106">The following example shows a type named `Person` and a type named `IDInformation` that should be recognized when serializing or deserializing the `Person` type.</span></span>  
  
 [!code-csharp[KnownTypeAttribute#0](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute/cs/overview.cs#0)]
 [!code-vb[KnownTypeAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute/vb/overview.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.DataContractAttribute" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <related type="Article" href="https://msdn.microsoft.com/library/1a0baea1-27b7-470d-9136-5bbad86c4337"><span data-ttu-id="956f6-107">資料合約已知型別</span><span class="sxs-lookup"><span data-stu-id="956f6-107">Data Contract Known Types</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="956f6-108">初始化 <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="956f6-108">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KnownTypeAttribute (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KnownTypeAttribute(System::String ^ methodName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.KnownTypeAttribute : string -&gt; System.Runtime.Serialization.KnownTypeAttribute" Usage="new System.Runtime.Serialization.KnownTypeAttribute methodName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="956f6-109">方法名稱，這個方法會傳回在序列化或還原序列化資料時所使用型別的 <see cref="T:System.Collections.IEnumerable" />。</span><span class="sxs-lookup"><span data-stu-id="956f6-109">The name of the method that returns an <see cref="T:System.Collections.IEnumerable" /> of types used when serializing or deserializing data.</span></span></param>
        <summary><span data-ttu-id="956f6-110">使用負責傳回已知型別之 <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> 的方法名稱，初始化 <see cref="T:System.Collections.IEnumerable" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="956f6-110">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class with the name of a method that returns an <see cref="T:System.Collections.IEnumerable" /> of known types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="956f6-111">這個建構函式會使用符合類別方法的方法名稱。</span><span class="sxs-lookup"><span data-stu-id="956f6-111">This constructor uses a method name that matches a method of the class.</span></span>  <span data-ttu-id="956f6-112">此方法會傳回 <xref:System.Collections.Generic.IEnumerable%601> 物件的 <xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="956f6-112">The method returns a <xref:System.Collections.Generic.IEnumerable%601> of <xref:System.Type> objects.</span></span> <span data-ttu-id="956f6-113">在序列化或還原序列化期間，已套用該屬性的根型別內可以使用在集合中所找到的型別。</span><span class="sxs-lookup"><span data-stu-id="956f6-113">During serialization or deserialization, the types found in the collection can be used within the root type to which the attribute is applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="956f6-114">下列範例會使用 `methodName` 參數來識別型別中的方法，而此型別包含了 <xref:System.Type> 物件的陣列。</span><span class="sxs-lookup"><span data-stu-id="956f6-114">The following example uses the `methodName` parameter to identify a method in the type that contains an array of <xref:System.Type> objects.</span></span>  
  
 [!code-csharp[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute_ctor_string/cs/knowntype_ctor1.cs#1)]
 [!code-vb[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute_ctor_string/vb/knowntypeattribute_ctor1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KnownTypeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KnownTypeAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.KnownTypeAttribute : Type -&gt; System.Runtime.Serialization.KnownTypeAttribute" Usage="new System.Runtime.Serialization.KnownTypeAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="956f6-115">當序列化或還原序列化資料時，將包含做為已知型別的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="956f6-115">The <see cref="T:System.Type" /> that is included as a known type when serializing or deserializing data.</span></span></param>
        <summary><span data-ttu-id="956f6-116">使用指定的型別來初始化 <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="956f6-116">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class with the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="956f6-117">下列範例會示範應該要在還原序列化時加以包含的型別，即名稱 `Person` 和名稱 `IDInformation` 的型別。</span><span class="sxs-lookup"><span data-stu-id="956f6-117">The following example shows a type named `Person` and a type named `IDInformation` that should be included when or deserializing.</span></span>  
  
 [!code-csharp[KnownTypeAttribute#0](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute/cs/overview.cs#0)]
 [!code-vb[KnownTypeAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute/vb/overview.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.KnownTypeAttribute.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string" Usage="System.Runtime.Serialization.KnownTypeAttribute.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="956f6-118">取得方法名稱，這個方法將傳回應該要在序列化或還原序列化期間進行辨識之型別的清單。</span><span class="sxs-lookup"><span data-stu-id="956f6-118">Gets the name of a method that will return a list of types that should be recognized during serialization or deserialization.</span></span></summary>
        <value><span data-ttu-id="956f6-119"><see cref="T:System.String" />，其中包含由 <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> 類別所定義型別上的方法名稱。</span><span class="sxs-lookup"><span data-stu-id="956f6-119">A <see cref="T:System.String" /> that contains the name of the method on the type defined by the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="956f6-120">此方法必須存在於已套用 <xref:System.Runtime.Serialization.KnownTypeAttribute> 的類別或結構上，而且必須是靜態的、不能接受任何參數，同時還必須傳回任何會實作泛型 <xref:System.Collections.Generic.IEnumerable%601> 介面之型別的執行個體，例如 <xref:System.Collections.ObjectModel.Collection%601> 類別或是 <xref:System.Type> 物件陣列。</span><span class="sxs-lookup"><span data-stu-id="956f6-120">The method must exist on the class or structure that the <xref:System.Runtime.Serialization.KnownTypeAttribute> is applied to, must be static, must accept no parameters, and must return an instance of any type that implements the generic <xref:System.Collections.Generic.IEnumerable%601> interface, such as the <xref:System.Collections.ObjectModel.Collection%601> class, or an array of <xref:System.Type> objects.</span></span>  
  
 <span data-ttu-id="956f6-121">如果已經為型別載入資料合約，就會針對每個應用程式定義域呼叫一次這個方法。</span><span class="sxs-lookup"><span data-stu-id="956f6-121">The method is called once per application domain when the data contract is loaded for the type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="956f6-122">下列範例會使用 `methodName` 參數來識別型別中的方法，而此型別包含了 <xref:System.Type> 物件的陣列。</span><span class="sxs-lookup"><span data-stu-id="956f6-122">The following example uses the `methodName` parameter to identify a method in the type that contains an array of <xref:System.Type> objects.</span></span>  
  
 [!code-csharp[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute_ctor_string/cs/knowntype_ctor1.cs#1)]
 [!code-vb[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute_ctor_string/vb/knowntypeattribute_ctor1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.KnownTypeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Runtime.Serialization.KnownTypeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="956f6-123">取得型別，這個型別在序列化或還原序列化期間應該要由 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 進行辨識。</span><span class="sxs-lookup"><span data-stu-id="956f6-123">Gets the type that should be recognized during serialization or deserialization by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span></span></summary>
        <value><span data-ttu-id="956f6-124">在序列化或還原序列化期間所使用的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="956f6-124">The <see cref="T:System.Type" /> that is used during serialization or deserialization.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>