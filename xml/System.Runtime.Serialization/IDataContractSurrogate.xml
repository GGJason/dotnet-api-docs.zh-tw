<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDataContractSurrogate.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53fa2320cba07ce168e131e6d44f89763ab9487b6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3fa2320cba07ce168e131e6d44f89763ab9487b6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>Provides the methods needed to substitute one type for another by the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> during serialization, deserialization, and export and import of XML schema documents (XSD).</source>
          <target state="translated">提供 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 在序列化 (Serialization)、還原序列化 (Deserialization)，以及匯出和匯入 XML 結構描述文件 (XSD) 期間，必須用來將型別取代成另一種型別的方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> when using the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> if you need to do one of the following: substitute one type or object for another, or to dynamically generate schema variations.</source>
          <target state="translated">當您需要執行將型別或物件取代成其他的型別或物件，或是動態產生結構描述的變形而要使用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> 時，便可使用 <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>For a sample application, see <bpt id="p1">[</bpt>DataContract Surrogate<ept id="p1">](~/docs/framework/wcf/samples/datacontract-surrogate.md)</ept>.</source>
          <target state="translated">範例應用程式，請參閱<bpt id="p1">[</bpt>DataContract Surrogate<ept id="p1">](~/docs/framework/wcf/samples/datacontract-surrogate.md)</ept>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>For more information about data contracts, see <bpt id="p1">[</bpt>Using Data Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</source>
          <target state="translated">如需資料合約的詳細資訊，請參閱<bpt id="p1">[</bpt>使用資料合約<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>At run time, you can find the specific <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> for any operation in a service by using the <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> to find the <ph id="ph3">&lt;xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior&gt;</ph> instance.</source>
          <target state="translated">在執行階段，您可以透過使用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 來尋找 <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> 執行個體，以便在服務中尋找任何作業的特定 <ph id="ph3">&lt;xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>For more information about implementing the interface to create a surrogate, see <bpt id="p1">[</bpt>Data Contract Surrogates<ept id="p1">](~/docs/framework/wcf/extending/data-contract-surrogates.md)</ept>.</source>
          <target state="translated">如需實作介面以建立 surrogate 的詳細資訊，請參閱<bpt id="p1">[</bpt>資料合約 Surrogate<ept id="p1">](~/docs/framework/wcf/extending/data-contract-surrogates.md)</ept>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> to affect the import and export of XML schemas when you are using the <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> and <ph id="ph3">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> classes.</source>
          <target state="translated">當您使用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> 和 <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> 類別時，您也可以使用 <ph id="ph3">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> 來影響 XML 結構描述的匯入和匯出。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>You can do so by assigning the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> to the <ph id="ph2">&lt;xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Runtime.Serialization.ExportOptions&gt;</ph> class, or to the <ph id="ph4">&lt;xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.Runtime.Serialization.ImportOptions&gt;</ph> class.</source>
          <target state="translated">您可以藉由將 <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> 指派給 <ph id="ph2">&lt;xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A&gt;</ph> 類別的 <ph id="ph3">&lt;xref:System.Runtime.Serialization.ExportOptions&gt;</ph> 屬性，或指派給 <ph id="ph4">&lt;xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A&gt;</ph> 類別的 <ph id="ph5">&lt;xref:System.Runtime.Serialization.ImportOptions&gt;</ph> 屬性以達到這個目的。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>For more information, see <bpt id="p1">[</bpt>Schema Import and Export<ept id="p1">](~/docs/framework/wcf/feature-details/schema-import-and-export.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>結構描述匯入和匯出<ept id="p1">](~/docs/framework/wcf/feature-details/schema-import-and-export.md)</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>The following example shows an implementation of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> interface.</source>
          <target state="translated">下列範例會示範 <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> 介面的實作。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>The code substitutes the serialization of the <ph id="ph1">`Person`</ph> type for a <ph id="ph2">`PersonSurrogated`</ph> class.</source>
          <target state="translated">這段程式碼會取代 <ph id="ph1">`Person`</ph> 類別之 <ph id="ph2">`PersonSurrogated`</ph> 型別的序列化。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.IDataContractSurrogate">
          <source>During schema export operations, inserts annotations into the schema for non-null return values.</source>
          <target state="translated">在結構描述匯出作業期間，將附註插入至非 null 傳回值的結構描述。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> that describes the member.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>，描述成員。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)">
          <source>During schema export operations, inserts annotations into the schema for non-null return values.</source>
          <target state="translated">在結構描述匯出作業期間，將附註插入至非 null 傳回值的結構描述。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)">
          <source>An object that represents the annotation to be inserted into the XML schema definition.</source>
          <target state="translated">物件，這個物件表示要插入至 XML 結構描述定義的附註。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)">
          <source>The CLR type to be replaced.</source>
          <target state="translated">要取代的 CLR 型別。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)">
          <source>The data contract type to be annotated.</source>
          <target state="translated">要加入標註的資料合約型別。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)">
          <source>During schema export operations, inserts annotations into the schema for non-null return values.</source>
          <target state="translated">在結構描述匯出作業期間，將附註插入至非 null 傳回值的結構描述。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)">
          <source>An object that represents the annotation to be inserted into the XML schema definition.</source>
          <target state="translated">物件，這個物件表示要插入至 XML 結構描述定義的附註。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)">
          <source>The CLR type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to substitute.</source>
          <target state="translated">要取代的 CLR 型別 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)">
          <source>During serialization, deserialization, and schema import and export, returns a data contract type that substitutes the specified type.</source>
          <target state="translated">在序列化、還原序列化，以及結構描述匯入和匯出期間，傳回要取代指定型別的資料合約型別。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to substitute for the <ph id="ph2">&lt;paramref name="type" /&gt;</ph> value.</source>
          <target state="translated">要取代 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 值的 <ph id="ph2">&lt;paramref name="type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)">
          <source>This type must be serializable by the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</source>
          <target state="translated">這個型別必須由 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 進行序列化。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)">
          <source>For example, it must be marked with the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute or other mechanisms that the serializer recognizes.</source>
          <target state="translated">例如，它必須以 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> 屬性或序列化程式可辨識的其他機制加以標記。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)">
          <source>The following example shows an implementation of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範 <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType%2A&gt;</ph> 方法的實作。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>The deserialized object to be substituted.</source>
          <target state="translated">要被取代的已還原序列化物件。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that the substituted object should be assigned to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，應該要指派給已取代物件的型別。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>During deserialization, returns an object that is a substitute for the specified object.</source>
          <target state="translated">在還原序列化期間，傳回指定物件的替代物件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>The substituted deserialized object.</source>
          <target state="translated">已取代的已還原序列化物件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>This object must be of a type that is serializable by the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</source>
          <target state="translated">這個物件必須是由 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 序列化的型別。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>For example, it must be marked with the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute or other mechanisms that the serializer recognizes.</source>
          <target state="translated">例如，它必須以 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> 屬性或序列化程式可辨識的其他機制加以標記。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>In a simple implementation, use an if…then…else control structure to test whether the <ph id="ph1">`obj`</ph> value is of the surrogated type.</source>
          <target state="translated">在簡單實作中，使用 if…then…else 控制結構來測試 <ph id="ph1">`obj`</ph> 值是否為被替代的型別。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>If so, transform it as necessary and return the substituted object.</source>
          <target state="translated">如果是的話，請依需要加以轉換並傳回已取代的物件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>The substituted object can be a new instance or the same <ph id="ph1">`obj`</ph> instance.</source>
          <target state="translated">已取代的物件可能是新執行個體，或是相同的 <ph id="ph1">`obj`</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)">
          <source>The following example shows an implementation of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範 <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject%2A&gt;</ph> 方法的實作。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> to add known types to.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt;</ph>，要在其中新增已知類型。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})">
          <source>Sets the collection of known types to use for serialization and deserialization of the custom data objects.</source>
          <target state="translated">設定已知型別的集合，以便用於自訂資料物件的序列化和還原序列化作業。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})">
          <source>This method is required during schema export or schema import only if annotations are inserted into the schema using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A&gt;</ph> method.</source>
          <target state="translated">只有在使用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A&gt;</ph> 方法將附註插入至結構描述時，才需要在結構描述匯出或匯入期間使用這個方法。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)">
          <source>The object to substitute.</source>
          <target state="translated">要取代的物件。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that the substituted object should be assigned to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，應該要指派給已取代物件的型別。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)">
          <source>During serialization, returns an object that substitutes the specified object.</source>
          <target state="translated">在序列化期間，傳回取代指定物件的物件。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)">
          <source>The substituted object that will be serialized.</source>
          <target state="translated">將序列化的已取代物件。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)">
          <source>The object must be serializable by the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</source>
          <target state="translated">這個物件必須由 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> 進行序列化。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)">
          <source>For example, it must be marked with the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute or other mechanisms that the serializer recognizes.</source>
          <target state="translated">例如，它必須以 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> 屬性或序列化程式可辨識的其他機制加以標記。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)">
          <source>This method must not return <ph id="ph1">`null`</ph> because on deserialization the data will be cast to type <ph id="ph2">&lt;xref:System.Object&gt;</ph> and an <ph id="ph3">&lt;xref:System.InvalidCastException&gt;</ph> is thrown.</source>
          <target state="translated">這個方法必須傳回<ph id="ph1">`null`</ph>因為在還原序列化時將資料轉換為類型<ph id="ph2">&lt;xref:System.Object&gt;</ph>和<ph id="ph3">&lt;xref:System.InvalidCastException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)">
          <source>The following example shows an implementation of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範 <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize%2A&gt;</ph> 方法的實作。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
          <source>The name of the type in schema.</source>
          <target state="translated">在結構描述中的型別名稱。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
          <source>The namespace of the type in schema.</source>
          <target state="translated">在結構描述中的型別命名空間。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
          <source>The object that represents the annotation inserted into the XML schema definition, which is data that can be used for finding the referenced type.</source>
          <target state="translated">表示已插入至 XML 結構描述定義中之附註的物件，這個定義是可以用來尋找所參考類型的資料。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
          <source>During schema import, returns the type referenced by the schema.</source>
          <target state="translated">在結構描述匯入期間，傳回結構描述所參考的型別。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to use for the referenced type.</source>
          <target state="translated">要用在所參考類型的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
          <source><ph id="ph1">`Null`</ph> should be returned if a CLR type does not exist for representing the schema type.</source>
          <target state="translated">如果不存在用來表示結構描述類型的 CLR 類型，就應該傳回 <ph id="ph1">`Null`</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
          <source>This will cause a new type to be generated during schema import.</source>
          <target state="translated">這將導致在結構描述匯入期間產生新型別。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
          <source>The following example shows an implementation of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範 <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport%2A&gt;</ph> 方法的實作。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeDeclaration" /&gt;</ph> to process that represents the type declaration generated during schema import.</source>
          <target state="translated">要處理的 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeDeclaration" /&gt;</ph>，這個宣告表示在結構描述匯入期間所產生的型別宣告。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> that contains the other code generated during schema import.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>，其中包含在結構描述匯入期間產生的其他程式碼。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
          <source>Processes the type that has been generated from the imported schema.</source>
          <target state="translated">處理已從匯入之結構描述產生的型別。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeDeclaration" /&gt;</ph> that contains the processed type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeDeclaration" /&gt;</ph>，其中包含已處理的型別。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
          <source>The input <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;</ph> or other information in the <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> can be modified by the user in this method.</source>
          <target state="translated">使用者可以透過這個方法，修改已輸入 <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;</ph> 或 <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> 中的其他資訊。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
          <source>If <ph id="ph1">`null`</ph> is returned, it will cause the type to not be generated.</source>
          <target state="translated">如果傳回 <ph id="ph1">`null`</ph>，將會導致無法產生類型。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
          <source>If a new <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;</ph> is returned, it will replace the original type generated.</source>
          <target state="translated">如果傳回新的 <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;</ph>，新的宣告將會取代已產生的原始類型。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>