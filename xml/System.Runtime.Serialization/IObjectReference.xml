<Type Name="IObjectReference" FullName="System.Runtime.Serialization.IObjectReference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ff5178867c9d901635fdb355e410b6824df8a2b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30486762" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IObjectReference" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObjectReference" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.IObjectReference" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObjectReference" />
  <TypeSignature Language="C++ CLI" Value="public interface class IObjectReference" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2e38c-101">指示目前的介面實作器是對其他物件的參考。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2e38c-101">Indicates that the current interface implementer is a reference to another object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[IObjectReference Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IObjectReference Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[IObjectReference Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IObjectReference Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[IObjectReference Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IObjectReference Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="2e38c-102">實作這個介面是不同的物件，直到完全還原目前的物件無法解析的參考的物件。</span>
        <span class="sxs-lookup">
          <span data-stu-id="2e38c-102">Implement this interface on objects that are references to a different object, which cannot be resolved until the current object is completely restored.</span>
        </span>
        <span data-ttu-id="2e38c-103">修復階段的任何物件實作<see cref="T:System.Runtime.Serialization.IObjectReference" />針對其實際查詢物件和該物件會插入至圖形。</span>
        <span class="sxs-lookup">
          <span data-stu-id="2e38c-103">During the fixup stage, any object implementing <see cref="T:System.Runtime.Serialization.IObjectReference" /> is queried for its real object and that object is inserted into the graph.</span>
        </span>
        <span data-ttu-id="2e38c-104">修復參考最終化尚未完成物件還原序列化程序期間參考的程序。</span>
        <span class="sxs-lookup">
          <span data-stu-id="2e38c-104">Fixup refers to the process of finalizing references not already completed during the object deserialization process.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="GetRealObject">
      <MemberSignature Language="C#" Value="public object GetRealObject (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetRealObject(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRealObject (context As StreamingContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetRealObject(System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="2e38c-105">還原序列化目前物件的來源 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e38c-105">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> from which the current object is deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2e38c-106">傳回應該還原序列化的實際物件，而不是序列化資料流指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e38c-106">Returns the real object that should be deserialized, rather than the object that the serialized stream specifies.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2e38c-107">傳回置放入圖形的真實物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e38c-107">Returns the actual object that is put into the graph.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e38c-108">這個方法是您用來序列化 proxy 建立者物件，而不是實際物件的遠端狀況中很有用。</span><span class="sxs-lookup"><span data-stu-id="2e38c-108">This method is useful in a remoting situation where you serialize a proxy-creator object, not an actual object.</span></span> <span data-ttu-id="2e38c-109">當 proxy 建立者物件經過還原序列化時、 還原序列化呼叫其<xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2e38c-109">When the proxy-creator object is deserialized, deserialization calls its <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> method.</span></span> <span data-ttu-id="2e38c-110">此時，proxy 建立者物件建立 proxy 物件，它是指原始的實際物件，可能是在遠端電腦上的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="2e38c-110">At this point, the proxy-creator object creates a new instance of the proxy object that refers back to the original actual object, perhaps on a remote computer.</span></span> <span data-ttu-id="2e38c-111">最後，proxy 建立者物件會被捨棄，並稍後記憶體回收所回收。</span><span class="sxs-lookup"><span data-stu-id="2e38c-111">Finally, the proxy-creator object is discarded and reclaimed later by garbage collection.</span></span>  
  
 <span data-ttu-id="2e38c-112">例如，請考慮如何<xref:System.Type>物件都會序列化。</span><span class="sxs-lookup"><span data-stu-id="2e38c-112">For example, consider how <xref:System.Type> objects are serialized.</span></span> <span data-ttu-id="2e38c-113">而不是資料傳輸，從<xref:System.Type>物件時，系統會將傳輸持有者具有名稱的物件型別物件，它位於物件實作的組件的詳細資訊的<xref:System.Runtime.Serialization.IObjectReference>。</span><span class="sxs-lookup"><span data-stu-id="2e38c-113">Instead of transmitting the data from the <xref:System.Type> object, the system transmits a holder object with the name of the type object and information on the assembly where it is found in an object implementing <xref:System.Runtime.Serialization.IObjectReference>.</span></span> <span data-ttu-id="2e38c-114">可用的型別名稱和組件名稱時，還原序列化基礎結構會呼叫<xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A>已傳輸持有者物件上。</span><span class="sxs-lookup"><span data-stu-id="2e38c-114">When both the type name and assembly name are available, the deserialization infrastructure calls <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A> on the holder object that has been transmitted.</span></span> <span data-ttu-id="2e38c-115">傳回這個持有者<xref:System.Type>插入至圖形的物件。</span><span class="sxs-lookup"><span data-stu-id="2e38c-115">This holder returns the <xref:System.Type> object that is inserted into the graph.</span></span>  
  
 <span data-ttu-id="2e38c-116">這個方法受到<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>如<xref:System.Security.Permissions.SecurityPermission>與<xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType>指定。</span><span class="sxs-lookup"><span data-stu-id="2e38c-116">This method is protected by a <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> for the <xref:System.Security.Permissions.SecurityPermission> with the <xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType> specified.</span></span>  
  
   
  
## Examples  
 [!code-cpp[IObjectReference Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IObjectReference Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[IObjectReference Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IObjectReference Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[IObjectReference Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IObjectReference Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2e38c-117">呼叫端沒有必要的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e38c-117">The caller does not have the required permission.</span>
          </span>
          <span data-ttu-id="2e38c-118">呼叫無法在中度信任的伺服器上運作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2e38c-118">The call will not work on a medium trusted server.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>