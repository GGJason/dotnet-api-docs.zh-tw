<Type Name="DataContractSerializer" FullName="System.Runtime.Serialization.DataContractSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="89b98f62db62074394b540ab5704b839fe2a098e" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51891785" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataContractSerializer : System.Runtime.Serialization.XmlObjectSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataContractSerializer extends System.Runtime.Serialization.XmlObjectSerializer" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.DataContractSerializer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataContractSerializer&#xA;Inherits XmlObjectSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContractSerializer sealed : System::Runtime::Serialization::XmlObjectSerializer" />
  <TypeSignature Language="F#" Value="type DataContractSerializer = class&#xA;    inherit XmlObjectSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Serialization.XmlObjectSerializer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ed6cd-101">將某個型別的執行個體序列化及還原序列化成使用所提供資料合約的 XML 資料流或文件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-101">Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract.</span></span> <span data-ttu-id="ed6cd-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed6cd-103">使用 <xref:System.Runtime.Serialization.DataContractSerializer> 類別，即可將某個型別的執行個體序列化及還原序列化成 XML 資料流或文件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-103">Use the <xref:System.Runtime.Serialization.DataContractSerializer> class to serialize and deserialize instances of a type into an XML stream or document.</span></span> <span data-ttu-id="ed6cd-104">例如，您可以使用包含基本資料的屬性 (例如姓名和地址) 來建立名為 `Person` 的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-104">For example, you can create a type named `Person` with properties that contain essential data, such as a name and address.</span></span> <span data-ttu-id="ed6cd-105">接著，您可以建立及操作 `Person` 類別的執行個體，並將所有的屬性值寫入 XML 文件中以供日後擷取，或寫入 XML 資料流中以供立即傳輸。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-105">You can then create and manipulate an instance of the `Person` class and write all of its property values in an XML document for later retrieval, or in an XML stream for immediate transport.</span></span> <span data-ttu-id="ed6cd-106">最重要的是，<xref:System.Runtime.Serialization.DataContractSerializer>用來序列化和還原序列化 Windows Communication Foundation (WCF) 訊息中傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-106">Most important, the <xref:System.Runtime.Serialization.DataContractSerializer> is used to serialize and deserialize data sent in Windows Communication Foundation (WCF) messages.</span></span> <span data-ttu-id="ed6cd-107">將 <xref:System.Runtime.Serialization.DataContractAttribute> 屬性套用至類別，並將 <xref:System.Runtime.Serialization.DataMemberAttribute> 屬性套用至類別成員，即可指定已序列化的屬性和欄位。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-107">Apply the <xref:System.Runtime.Serialization.DataContractAttribute> attribute to classes, and the <xref:System.Runtime.Serialization.DataMemberAttribute> attribute to class members to specify properties and fields that are serialized.</span></span>  
  
 <span data-ttu-id="ed6cd-108">如需可序列化的類型，請參閱[Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-108">For a list of types that can be serialized, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span></span>  
  
 <span data-ttu-id="ed6cd-109">如果要使用 <xref:System.Runtime.Serialization.DataContractSerializer>，請先建立類別的執行個體，以及適合用於寫入或讀取此格式的物件；例如，<xref:System.Xml.XmlDictionaryWriter> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-109">To use the <xref:System.Runtime.Serialization.DataContractSerializer>, first create an instance of a class and an object appropriate to writing or reading the format; for example, an instance of the <xref:System.Xml.XmlDictionaryWriter>.</span></span> <span data-ttu-id="ed6cd-110">接著，呼叫 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> 方法以保留資料。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-110">Then call the <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> method to persist the data.</span></span> <span data-ttu-id="ed6cd-111">如果要擷取資料，請建立適合用於讀取此資料格式的物件 (例如適合 XML 文件的 <xref:System.Xml.XmlDictionaryReader>)，接著呼叫 <xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-111">To retrieve data, create an object appropriate to reading the data format (such as an <xref:System.Xml.XmlDictionaryReader> for an XML document) and call the <xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A> method.</span></span>  
  
 <span data-ttu-id="ed6cd-112">如需使用詳細資訊<xref:System.Runtime.Serialization.DataContractSerializer>，請參閱 <<c2> [ 序列化和還原序列化](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md)。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-112">For more information about using the <xref:System.Runtime.Serialization.DataContractSerializer>, see [Serialization and Deserialization](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md).</span></span>  
  
 <span data-ttu-id="ed6cd-113">您可以設定使用資料合約序列化程式的型別[ &lt;dataContractSerializer&gt; ](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md)用戶端應用程式組態檔中的項目。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-113">You can set the type of a data contract serializer using the [&lt;dataContractSerializer&gt;](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md) element in a client application configuration file.</span></span>  
  
## <a name="preparing-classes-for-serialization-or-deserialization"></a><span data-ttu-id="ed6cd-114">準備類別以進行序列化或還原序列化</span><span class="sxs-lookup"><span data-stu-id="ed6cd-114">Preparing Classes for Serialization or Deserialization</span></span>  
 <span data-ttu-id="ed6cd-115"><xref:System.Runtime.Serialization.DataContractSerializer> 會組合 <xref:System.Runtime.Serialization.DataContractAttribute> 和 <xref:System.Runtime.Serialization.DataMemberAttribute> 類別一起使用。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-115">The <xref:System.Runtime.Serialization.DataContractSerializer> is used in combination with the <xref:System.Runtime.Serialization.DataContractAttribute> and <xref:System.Runtime.Serialization.DataMemberAttribute> classes.</span></span> <span data-ttu-id="ed6cd-116">如果要準備類別以進行序列化，請將 <xref:System.Runtime.Serialization.DataContractAttribute> 套用至此類別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-116">To prepare a class for serialization, apply the <xref:System.Runtime.Serialization.DataContractAttribute> to the class.</span></span>  <span data-ttu-id="ed6cd-117">對於每個會傳回您要序列化之資料的類別成員，請套用 <xref:System.Runtime.Serialization.DataMemberAttribute>。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-117">For each member of the class that returns data that you want to serialize, apply the <xref:System.Runtime.Serialization.DataMemberAttribute>.</span></span> <span data-ttu-id="ed6cd-118">您可以序列化欄位和屬性，不論其存取範圍為何：private、protected、internal、protected internal 或 public。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-118">You can serialize fields and properties, regardless of accessibility: private, protected, internal, protected internal, or public.</span></span>  
  
 <span data-ttu-id="ed6cd-119">例如，您的結構描述指定含有 `Customer` 屬性的 `ID`，但是您的現有應用程式是使用名為 `Person` 且具有 `Name` 屬性的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-119">For example, your schema specifies a `Customer` with an `ID` property, but you already have an existing application that uses a type named `Person` with a `Name` property.</span></span> <span data-ttu-id="ed6cd-120">如果要建立符合該合約的型別，請先將 <xref:System.Runtime.Serialization.DataContractAttribute> 套用至類別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-120">To create a type that conforms to the contract, first apply the <xref:System.Runtime.Serialization.DataContractAttribute> to the class.</span></span>  <span data-ttu-id="ed6cd-121">然後將 <xref:System.Runtime.Serialization.DataMemberAttribute> 套用至要序列化的每個欄位或屬性。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-121">Then apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to every field or property that you want to serialize.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ed6cd-122">您可以將 <xref:System.Runtime.Serialization.DataMemberAttribute> 同時套用至 Private 和 Public 成員。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-122">You can apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to both private and public members.</span></span>  
  
 <span data-ttu-id="ed6cd-123">XML 的最終格式並不要求一定是文字。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-123">The final format of the XML need not be text.</span></span> <span data-ttu-id="ed6cd-124">相反地，<xref:System.Runtime.Serialization.DataContractSerializer> 會將資料寫成為 XML infoset，這樣您便可以將資料寫成任何可由 <xref:System.Xml.XmlReader> 和 <xref:System.Xml.XmlWriter> 辨識的格式。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-124">Instead, the <xref:System.Runtime.Serialization.DataContractSerializer> writes the data as an XML infoset, which allows you to write the data to any format recognized by the <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlWriter>.</span></span> <span data-ttu-id="ed6cd-125">建議您使用 <xref:System.Xml.XmlDictionaryReader> 和 <xref:System.Xml.XmlDictionaryWriter> 類別來讀取和寫入，因為這兩種類別已針對使用 <xref:System.Runtime.Serialization.DataContractSerializer> 完成最佳化。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-125">It is recommended that you use the <xref:System.Xml.XmlDictionaryReader> and <xref:System.Xml.XmlDictionaryWriter> classes to read and write, because both are optimized to work with the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span>  
  
 <span data-ttu-id="ed6cd-126">如果您要建立具有欄位或屬性必須填入序列化之前的類別，或還原序列化，就會發生，使用回呼屬性中所述[版本相容序列化回呼](~/docs/framework/wcf/feature-details/version-tolerant-serialization-callbacks.md)。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-126">If you are creating a class that has fields or properties that must be populated before the serialization or deserialization occurs, use callback attributes, as described in [Version-Tolerant Serialization Callbacks](~/docs/framework/wcf/feature-details/version-tolerant-serialization-callbacks.md).</span></span>  
  
## <a name="adding-to-the-collection-of-known-types"></a><span data-ttu-id="ed6cd-127">新增至已知型別集合</span><span class="sxs-lookup"><span data-stu-id="ed6cd-127">Adding to the Collection of Known Types</span></span>  
 <span data-ttu-id="ed6cd-128">當序列化或還原序列化物件時，其型別必須是 <xref:System.Runtime.Serialization.DataContractSerializer>「已知」的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-128">When serializing or deserializing an object, it is required that the type is "known" to the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span> <span data-ttu-id="ed6cd-129">一開始會先建立會實作 <xref:System.Collections.Generic.IEnumerable%601> (例如 <xref:System.Collections.Generic.List%601>) 之類別的執行個體，並將已知型別新增至集合。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-129">Begin by creating an instance of a class that implements <xref:System.Collections.Generic.IEnumerable%601> (such as <xref:System.Collections.Generic.List%601>) and adding the known types to the collection.</span></span> <span data-ttu-id="ed6cd-130">接下來，建立使用接受 <xref:System.Runtime.Serialization.DataContractSerializer> 之其中一個多載的 <xref:System.Collections.Generic.IEnumerable%601> 執行個體 (例如，<xref:System.Runtime.Serialization.DataContractSerializer.%23ctor%28System.Type%2CSystem.Collections.Generic.IEnumerable%7BSystem.Type%7D%29>。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-130">Then create an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> using one of the overloads that takes the <xref:System.Collections.Generic.IEnumerable%601> (for example, <xref:System.Runtime.Serialization.DataContractSerializer.%23ctor%28System.Type%2CSystem.Collections.Generic.IEnumerable%7BSystem.Type%7D%29>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ed6cd-131">不同於其他基本類型，<xref:System.DateTimeOffset>結構不是已知的型別，根據預設，因此它必須以手動方式新增至已知型別的清單 (請參閱 < [Data Contract Known Types](~/docs/framework/wcf/feature-details/data-contract-known-types.md))。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-131">Unlike other primitive types, the <xref:System.DateTimeOffset> structure is not a known type by default, so it must be manually added to the list of known types (see [Data Contract Known Types](~/docs/framework/wcf/feature-details/data-contract-known-types.md)).</span></span>  
  
## <a name="forward-compatibility"></a><span data-ttu-id="ed6cd-132">正向相容性</span><span class="sxs-lookup"><span data-stu-id="ed6cd-132">Forward Compatibility</span></span>  
 <span data-ttu-id="ed6cd-133"><xref:System.Runtime.Serialization.DataContractSerializer> 知道資料合約已設計為與合約的未來版本相容。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-133">The <xref:System.Runtime.Serialization.DataContractSerializer> understands data contracts that have been designed to be compatible with future versions of the contract.</span></span> <span data-ttu-id="ed6cd-134">這些型別會實作 <xref:System.Runtime.Serialization.IExtensibleDataObject> 介面。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-134">Such types implement the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface.</span></span> <span data-ttu-id="ed6cd-135">此介面的特色是會傳回 <xref:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData%2A> 物件的 <xref:System.Runtime.Serialization.ExtensionDataObject> 屬性。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-135">The interface features the <xref:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData%2A> property that returns an <xref:System.Runtime.Serialization.ExtensionDataObject> object.</span></span> <span data-ttu-id="ed6cd-136">如需詳細資訊，請參閱[向前相容資料合約](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md)。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-136">For more information, see [Forward-Compatible Data Contracts](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md).</span></span>  
  
## <a name="running-under-partial-trust"></a><span data-ttu-id="ed6cd-137">在部分信任下執行</span><span class="sxs-lookup"><span data-stu-id="ed6cd-137">Running under Partial Trust</span></span>  
 <span data-ttu-id="ed6cd-138">在還原序列化期間產生目標物件時，<xref:System.Runtime.Serialization.DataContractSerializer> 不會呼叫目標物件的建構函式。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-138">When instantiating the target object during deserialization, the <xref:System.Runtime.Serialization.DataContractSerializer> does not call the constructor of the target object.</span></span> <span data-ttu-id="ed6cd-139">如果您撰寫 *[DataContract]* 型別可從部分信任存取 (也就是說，它屬於 public，而且組件中具有`AllowPartiallyTrustedCallers`套用的屬性) 和執行一些與安全性相關的動作，您必須知道，不會呼叫建構函式。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-139">If you author a *[DataContract]* type that is accessible from partial trust (that is, it is public and in an assembly that has the `AllowPartiallyTrustedCallers` attribute applied) and that performs some security-related actions, you must be aware that the constructor is not called.</span></span> <span data-ttu-id="ed6cd-140">特別值得一提的是，下列技巧將無法運作：</span><span class="sxs-lookup"><span data-stu-id="ed6cd-140">In particular, the following techniques do not work:</span></span>  
  
-   <span data-ttu-id="ed6cd-141">如果您嘗試透過將建構函式設為 internal 或 private，或是將 `LinkDemand` 新增至建構函式等方式來限制部分信任存取，上述這些方式都無法在部分信任環境中的還原序列化期間發揮作用。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-141">If you try to restrict partial trust access by making the constructor internal or private, or by adding a `LinkDemand` to the constructor -- neither of these have any effect during deserialization under partial trust.</span></span>  
  
-   <span data-ttu-id="ed6cd-142">如果您撰寫的類別程式碼會假定該建構函式已經執行，則此類別可能會處於易遭利用的無效 internal 狀態。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-142">If you code the class that assumes the constructor has run, the class may get into an invalid internal state that is exploitable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed6cd-143">下列範例程式碼會示範名為 `Person` 且已由 <xref:System.Runtime.Serialization.DataContractSerializer> 序列化的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-143">The following example code shows a type named `Person` that is serialized by the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span> <span data-ttu-id="ed6cd-144"><xref:System.Runtime.Serialization.DataContractAttribute> 屬性會套用至類別，而 <xref:System.Runtime.Serialization.DataMemberAttribute> 會套用至成員，以便指示 <xref:System.Runtime.Serialization.DataContractSerializer> 哪些項目需要序列化。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-144">The <xref:System.Runtime.Serialization.DataContractAttribute> attribute is applied to the class, and the <xref:System.Runtime.Serialization.DataMemberAttribute> is applied to members to instruct the <xref:System.Runtime.Serialization.DataContractSerializer> what to serialize.</span></span>  
  
 [!code-csharp[DataContractSerializer#0](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#0)]
 [!code-vb[DataContractSerializer#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="ed6cd-145">此類別的執行個體都是執行緒安全以外的實作，當使用的執行個體<see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />或<see cref="T:System.Runtime.Serialization.DataContractResolver" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-145">Instances of this class are thread safe except when the instance is used with an implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> or <see cref="T:System.Runtime.Serialization.DataContractResolver" />.</span></span></threadsafe>
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.DataContractAttribute" />
    <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
    <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
    <related type="Article" href="~/docs/framework/wcf/feature-details/using-data-contracts.md"><span data-ttu-id="ed6cd-146">使用資料合約</span><span class="sxs-lookup"><span data-stu-id="ed6cd-146">Using Data Contracts</span></span></related>
    <related type="Article" href="~/docs/framework/wcf/feature-details/serialization-and-deserialization.md"><span data-ttu-id="ed6cd-147">序列化和還原序列化</span><span class="sxs-lookup"><span data-stu-id="ed6cd-147">Serialization and Deserialization</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException"><span data-ttu-id="ed6cd-148">正在序列化的型別不符合資料合約規則。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-148">The type being serialized does not conform to data contract rules.</span></span> <span data-ttu-id="ed6cd-149">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-149">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span></span></exception>
        <summary><span data-ttu-id="ed6cd-150">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-150">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.DataContractSerializer : Type -&gt; System.Runtime.Serialization.DataContractSerializer" Usage="new System.Runtime.Serialization.DataContractSerializer type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ed6cd-151">已序列化或還原序列化之執行個體的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-151">The type of the instances that are serialized or deserialized.</span></span></param>
        <summary><span data-ttu-id="ed6cd-152">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-152">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ed6cd-153">下列範例會建立 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，該執行個體會指定要序列化或還原序列化的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-153">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize.</span></span>  
  
 [!code-csharp[DataContractSerializer#8](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#8)]
 [!code-vb[DataContractSerializer#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.DataContractSerializer : Type * seq&lt;Type&gt; -&gt; System.Runtime.Serialization.DataContractSerializer" Usage="new System.Runtime.Serialization.DataContractSerializer (type, knownTypes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ed6cd-154">已序列化或還原序列化之執行個體的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-154">The type of the instances that are serialized or deserialized.</span></span></param>
        <param name="knownTypes"><span data-ttu-id="ed6cd-155"><see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-155">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the types that may be present in the object graph.</span></span></param>
        <summary><span data-ttu-id="ed6cd-156">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件，以及可能存在物件圖形中的已知型別集合。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-156">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type, and a collection of known types that may be present in the object graph.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ed6cd-157">下列範例會建立 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，該執行個體會指定要序列化或還原序列化的型別，以及可用於物件圖形中的已知型別集合。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-157">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize and a collection of known types that can be used in the object graph.</span></span>  
  
 [!code-csharp[DataContractSerializer#9](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#9)]
 [!code-vb[DataContractSerializer#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Runtime.Serialization.DataContractSerializerSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Runtime.Serialization.DataContractSerializerSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Runtime::Serialization::DataContractSerializerSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.DataContractSerializer : Type * System.Runtime.Serialization.DataContractSerializerSettings -&gt; System.Runtime.Serialization.DataContractSerializer" Usage="new System.Runtime.Serialization.DataContractSerializer (type, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="settings" Type="System.Runtime.Serialization.DataContractSerializerSettings" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ed6cd-158">要序列化或還原序列化之執行個體的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-158">The type of the instance to serialize or deserialize.</span></span></param>
        <param name="settings"><span data-ttu-id="ed6cd-159">序列化程式設定。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-159">The serializer settings.</span></span></param>
        <summary><span data-ttu-id="ed6cd-160">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別及設定的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-160">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type and settings.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, string rootName, string rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string rootName, string rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::String ^ rootName, System::String ^ rootNamespace);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.DataContractSerializer : Type * string * string -&gt; System.Runtime.Serialization.DataContractSerializer" Usage="new System.Runtime.Serialization.DataContractSerializer (type, rootName, rootNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ed6cd-161">已序列化或還原序列化之執行個體的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-161">The type of the instances that are serialized or deserialized.</span></span></param>
        <param name="rootName"><span data-ttu-id="ed6cd-162">內含要序列化或還原序列化之內容的 XML 項目名稱。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-162">The name of the XML element that encloses the content to serialize or deserialize.</span></span></param>
        <param name="rootNamespace"><span data-ttu-id="ed6cd-163">內含要序列化或還原序列化之內容的 XML 項目命名空間。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-163">The namespace of the XML element that encloses the content to serialize or deserialize.</span></span></param>
        <summary><span data-ttu-id="ed6cd-164">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以便序列化或還原序列化已指定型別的物件 (該型別會使用提供的 XML 根項目和命名空間)。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-164">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type using the supplied XML root element and namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ed6cd-165">下列範例會建立 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，該執行個體會指定要序列化或還原序列化的型別，以及要在其中讀取或將 XML 文件寫入其中的 XML 名稱和命名空間。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-165">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize as well as the XML name and namespace to read from or write to the XML document.</span></span>  
  
 [!code-csharp[DataContractSerializer#10](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#10)]
 [!code-vb[DataContractSerializer#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.DataContractSerializer : Type * System.Xml.XmlDictionaryString * System.Xml.XmlDictionaryString -&gt; System.Runtime.Serialization.DataContractSerializer" Usage="new System.Runtime.Serialization.DataContractSerializer (type, rootName, rootNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ed6cd-166">已序列化或還原序列化之執行個體的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-166">The type of the instances that are serialized or deserialized.</span></span></param>
        <param name="rootName"><span data-ttu-id="ed6cd-167"><see cref="T:System.Xml.XmlDictionaryString" />，其中包含內容的根項目名稱。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-167">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element name of the content.</span></span></param>
        <param name="rootNamespace"><span data-ttu-id="ed6cd-168"><see cref="T:System.Xml.XmlDictionaryString" />，其中包含根項目的命名空間。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-168">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the root element.</span></span></param>
        <summary><span data-ttu-id="ed6cd-169">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以便序列化或還原序列化所指定型別的物件 (該型別會使用透過型別 <see cref="T:System.Xml.XmlDictionaryString" /> 之參數所指定的 XML 根項目和命名空間)。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-169">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type using the XML root element and namespace specified through the parameters of type <see cref="T:System.Xml.XmlDictionaryString" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ed6cd-170">下列範例會建立 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，該執行個體會指定要序列化或還原序列化的型別，以及要在其中讀取或將 XML 文件寫入其中的 XML 名稱和命名空間 (相同於 <xref:System.Xml.XmlDictionaryString> 物件的處理方式)。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-170">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize as well as the XML name and namespace (as <xref:System.Xml.XmlDictionaryString> objects) to read from or write to the XML document.</span></span>  
  
 [!code-csharp[DataContractSerializer#11](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#11)]
 [!code-vb[DataContractSerializer#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, string rootName, string rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string rootName, string rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::String ^ rootName, System::String ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.DataContractSerializer : Type * string * string * seq&lt;Type&gt; -&gt; System.Runtime.Serialization.DataContractSerializer" Usage="new System.Runtime.Serialization.DataContractSerializer (type, rootName, rootNamespace, knownTypes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ed6cd-171">已序列化或還原序列化之執行個體的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-171">The type of the instances that are serialized or deserialized.</span></span></param>
        <param name="rootName"><span data-ttu-id="ed6cd-172">內容的根項目名稱。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-172">The root element name of the content.</span></span></param>
        <param name="rootNamespace"><span data-ttu-id="ed6cd-173">根項目的命名空間。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-173">The namespace of the root element.</span></span></param>
        <param name="knownTypes"><span data-ttu-id="ed6cd-174"><see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-174">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the types that may be present in the object graph.</span></span></param>
        <summary><span data-ttu-id="ed6cd-175">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-175">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span></span> <span data-ttu-id="ed6cd-176">這個方法也會透過兩個字串參數來指定根 XML 項目和命名空間，以及可能存在於物件圖形內之已知型別的清單。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-176">This method also specifies the root XML element and namespace in two string parameters as well as a list of known types that may be present in the object graph.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ed6cd-177">下列範例會建立 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，該執行個體會指定要序列化或還原序列化的型別，以及要在其中讀取或將 XML 文件寫入其中的 XML 名稱和命名空間。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-177">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize as well as the XML name and namespace to read from or write to the XML document.</span></span> <span data-ttu-id="ed6cd-178">此程式碼也會建立 <xref:System.Collections.Generic.IEnumerable%601> 的執行個體，以包含在序列化或還原序列化期間所使用的已知型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-178">The code also creates an instance of a <xref:System.Collections.Generic.IEnumerable%601> to contain the known types used during serialization or deserialization.</span></span>  
  
 [!code-csharp[DataContractSerializer#12](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#12)]
 [!code-vb[DataContractSerializer#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.DataContractSerializer : Type * System.Xml.XmlDictionaryString * System.Xml.XmlDictionaryString * seq&lt;Type&gt; -&gt; System.Runtime.Serialization.DataContractSerializer" Usage="new System.Runtime.Serialization.DataContractSerializer (type, rootName, rootNamespace, knownTypes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ed6cd-179">已序列化或還原序列化之執行個體的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-179">The type of the instances that are serialized or deserialized.</span></span></param>
        <param name="rootName"><span data-ttu-id="ed6cd-180"><see cref="T:System.Xml.XmlDictionaryString" />，其中包含內容的根項目名稱。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-180">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element name of the content.</span></span></param>
        <param name="rootNamespace"><span data-ttu-id="ed6cd-181"><see cref="T:System.Xml.XmlDictionaryString" />，其中包含根項目的命名空間。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-181">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the root element.</span></span></param>
        <param name="knownTypes"><span data-ttu-id="ed6cd-182"><see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的已知型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-182">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span></span></param>
        <summary><span data-ttu-id="ed6cd-183">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-183">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span></span> <span data-ttu-id="ed6cd-184">這個方法也會透過兩個 <see cref="T:System.Xml.XmlDictionaryString" /> 參數來指定根 XML 項目和命名空間，以及可能存在於物件圖形內之已知型別的清單。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-184">This method also specifies the root XML element and namespace in two <see cref="T:System.Xml.XmlDictionaryString" /> parameters as well as a list of known types that may be present in the object graph.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ed6cd-185">下列範例會建立 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，該執行個體會指定要序列化或還原序列化的型別，以及要在其中讀取或將 XML 文件寫入其中的 XML 名稱和命名空間 (相同於 <xref:System.Xml.XmlDictionaryString> 物件的處理方式)。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-185">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize as well as the XML name and namespace (as <xref:System.Xml.XmlDictionaryString> objects) to read from or write to the XML document.</span></span> <span data-ttu-id="ed6cd-186">此程式碼也會建立 <xref:System.Collections.Generic.IEnumerable%601> 的執行個體，以包含在序列化或還原序列化期間所使用的已知型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-186">The code also creates an instance of a <xref:System.Collections.Generic.IEnumerable%601> to contain the known types used during serialization or deserialization.</span></span>  
  
 [!code-csharp[DataContractSerializer#13](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#13)]
 [!code-vb[DataContractSerializer#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.DataContractSerializer : Type * seq&lt;Type&gt; * int * bool * bool * System.Runtime.Serialization.IDataContractSurrogate -&gt; System.Runtime.Serialization.DataContractSerializer" Usage="new System.Runtime.Serialization.DataContractSerializer (type, knownTypes, maxItemsInObjectGraph, ignoreExtensionDataObject, preserveObjectReferences, dataContractSurrogate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ed6cd-187">已序列化或還原序列化之執行個體的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-187">The type of the instances that are serialized or deserialized.</span></span></param>
        <param name="knownTypes"><span data-ttu-id="ed6cd-188"><see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的已知型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-188">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span></span></param>
        <param name="maxItemsInObjectGraph"><span data-ttu-id="ed6cd-189">圖形中要序列化或還原序列化的最大項目數。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-189">The maximum number of items in the graph to serialize or deserialize.</span></span> <span data-ttu-id="ed6cd-190">預設為 <see cref="F:System.Int32.MaxValue" /> 屬性所傳回的值。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-190">The default is the value returned by the <see cref="F:System.Int32.MaxValue" /> property.</span></span></param>
        <param name="ignoreExtensionDataObject"><span data-ttu-id="ed6cd-191">如果要在序列化及還原序列化時略過型別延伸所提供的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-191"><see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span></span></param>
        <param name="preserveObjectReferences"><span data-ttu-id="ed6cd-192">如果要使用非標準的 XML 建構來保留物件參考資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-192"><see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataContractSurrogate"><span data-ttu-id="ed6cd-193"><see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 的實作，用來自訂序列化程序。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-193">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span></span></param>
        <summary><span data-ttu-id="ed6cd-194">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-194">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span></span> <span data-ttu-id="ed6cd-195">這個方法也會指定可能存在物件圖形中之已知型別的清單，要序列化之圖形項目的最大數，要略過非預期資料的參數，是否要使用非標準的 XML 建構來保存圖形中的物件參考資料，以及自訂序列化的代理。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-195">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, and a surrogate for custom serialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ed6cd-196">下列範例會建立會指定要序列化或還原序列化之型別的 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，並建立會包含要在序列化或還原序列化期間使用之已知型別的 <xref:System.Collections.Generic.IEnumerable%601> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-196">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize and an instance of a <xref:System.Collections.Generic.IEnumerable%601> to contain the known types used during serialization or deserialization.</span></span> <span data-ttu-id="ed6cd-197">程式碼也會設定`ignoreExtensionDataObject`及`preserveObjectReferences`參數`true`，並指定實作<xref:System.Runtime.Serialization.IDataContractSurrogate>介面，以處理舊版型別 (不需要的類型<xref:System.Runtime.Serialization.DataContractAttribute>套用屬性)。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-197">The code also sets the `ignoreExtensionDataObject` and `preserveObjectReferences` parameters to `true`, and specifies an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate> interface to handle legacy types (types that do not have the <xref:System.Runtime.Serialization.DataContractAttribute> attribute applied).</span></span> <span data-ttu-id="ed6cd-198">如需詳細資訊，請參閱<xref:System.Runtime.Serialization.IDataContractSurrogate>文件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-198">For more information, see the <xref:System.Runtime.Serialization.IDataContractSurrogate> documentation.</span></span>  
  
 [!code-csharp[DataContractSerializer#14](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#14)]
 [!code-vb[DataContractSerializer#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ed6cd-199">超過最大值的項目數。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-199">The number of items exceeds the maximum value.</span></span></exception>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
        <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
        <altmember cref="T:System.Runtime.Serialization.IDataContractSurrogate" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.DataContractSerializer : Type * seq&lt;Type&gt; * int * bool * bool * System.Runtime.Serialization.IDataContractSurrogate * System.Runtime.Serialization.DataContractResolver -&gt; System.Runtime.Serialization.DataContractSerializer" Usage="new System.Runtime.Serialization.DataContractSerializer (type, knownTypes, maxItemsInObjectGraph, ignoreExtensionDataObject, preserveObjectReferences, dataContractSurrogate, dataContractResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ed6cd-200">已序列化或還原序列化之執行個體的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-200">The type of the instances that are serialized or deserialized.</span></span></param>
        <param name="knownTypes"><span data-ttu-id="ed6cd-201"><see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的已知型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-201">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span></span></param>
        <param name="maxItemsInObjectGraph"><span data-ttu-id="ed6cd-202">圖形中要序列化或還原序列化的最大項目數。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-202">The maximum number of items in the graph to serialize or deserialize.</span></span> <span data-ttu-id="ed6cd-203">預設為 <see cref="F:System.Int32.MaxValue" /> 屬性所傳回的值。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-203">The default is the value returned by the <see cref="F:System.Int32.MaxValue" /> property.</span></span></param>
        <param name="ignoreExtensionDataObject"><span data-ttu-id="ed6cd-204">如果要在序列化及還原序列化時略過型別延伸所提供的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-204"><see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span></span></param>
        <param name="preserveObjectReferences"><span data-ttu-id="ed6cd-205">如果要使用非標準的 XML 建構來保留物件參考資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-205"><see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataContractSurrogate"><span data-ttu-id="ed6cd-206"><see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 的實作，用來自訂序列化程序。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-206">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span></span></param>
        <param name="dataContractResolver"><span data-ttu-id="ed6cd-207"><see cref="T:System.Runtime.Serialization.DataContractResolver" /> 的實作，用來將 <see langword="xsi:type" /> 宣告對應至資料合約型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-207">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map <see langword="xsi:type" /> declarations to data contract types.</span></span></param>
        <summary><span data-ttu-id="ed6cd-208">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-208">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span></span> <span data-ttu-id="ed6cd-209">這個方法也會指定可能存在物件圖形中之已知型別的清單、要序列化之圖形項目的最大數、要略過非預期資料的參數、是否要使用非標準的 XML 建構來保存圖形中的物件參考資料、自訂序列化的代理，以及在執行階段對應 <see langword="xsi:type" /> 宣告的替代方式。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-209">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, and an alternative for mapping <see langword="xsi:type" /> declarations at run time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="ed6cd-210">這個方法不適用於 Windows 市集應用程式。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-210">This method is not available in Windows Store apps.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, string rootName, string rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string rootName, string rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::String ^ rootName, System::String ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.DataContractSerializer : Type * string * string * seq&lt;Type&gt; * int * bool * bool * System.Runtime.Serialization.IDataContractSurrogate -&gt; System.Runtime.Serialization.DataContractSerializer" Usage="new System.Runtime.Serialization.DataContractSerializer (type, rootName, rootNamespace, knownTypes, maxItemsInObjectGraph, ignoreExtensionDataObject, preserveObjectReferences, dataContractSurrogate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ed6cd-211">已序列化或還原序列化之執行個體的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-211">The type of the instances that are serialized or deserialized.</span></span></param>
        <param name="rootName"><span data-ttu-id="ed6cd-212">內含要序列化或還原序列化之內容的 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-212">The XML element that encloses the content to serialize or deserialize.</span></span></param>
        <param name="rootNamespace"><span data-ttu-id="ed6cd-213">內含要序列化或還原序列化之內容的 XML 項目命名空間。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-213">The namespace of the XML element that encloses the content to serialize or deserialize.</span></span></param>
        <param name="knownTypes"><span data-ttu-id="ed6cd-214"><see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的已知型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-214">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span></span></param>
        <param name="maxItemsInObjectGraph"><span data-ttu-id="ed6cd-215">圖形中要序列化或還原序列化的最大項目數。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-215">The maximum number of items in the graph to serialize or deserialize.</span></span></param>
        <param name="ignoreExtensionDataObject"><span data-ttu-id="ed6cd-216">如果要在序列化及還原序列化時略過型別延伸所提供的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-216"><see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span></span></param>
        <param name="preserveObjectReferences"><span data-ttu-id="ed6cd-217">如果要使用非標準的 XML 建構來保留物件參考資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-217"><see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataContractSurrogate"><span data-ttu-id="ed6cd-218"><see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 的實作，用來自訂序列化程序。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-218">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span></span></param>
        <summary><span data-ttu-id="ed6cd-219">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-219">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span></span> <span data-ttu-id="ed6cd-220">這個方法也會指定可能存在物件圖形中之已知型別的清單、要序列化之圖形項目的最大數、要略過非預期資料的參數、是否要使用非標準的 XML 建構來保存圖形中的物件參考資料、自訂序列化的代理，以及含有內容的 XML 項目和命名空間。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-220">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, and the XML element and namespace that contain the content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ed6cd-221">下列範例會建立會指定要序列化或還原序列化之型別的 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，並建立會包含要在還原序列化期間使用之 XML 項目、命名空間和 <xref:System.Collections.Generic.IEnumerable%601> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-221">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize, the root XML element and namespace, and an instance of a <xref:System.Collections.Generic.IEnumerable%601> that contains the types used during deserialization.</span></span> <span data-ttu-id="ed6cd-222">程式碼也會設定`ignoreExtensionDataObject`及`preserveObjectReferences`參數`true`，並指定實作<xref:System.Runtime.Serialization.IDataContractSurrogate>介面，以處理舊版型別 (不需要的類型<xref:System.Runtime.Serialization.DataContractAttribute>套用屬性)。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-222">The code also sets the `ignoreExtensionDataObject` and `preserveObjectReferences` parameters to `true`, and specifies an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate> interface to handle legacy types (types that do not have the <xref:System.Runtime.Serialization.DataContractAttribute> attribute applied).</span></span> <span data-ttu-id="ed6cd-223">如需詳細資訊，請參閱<xref:System.Runtime.Serialization.IDataContractSurrogate>文件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-223">For more information, see the <xref:System.Runtime.Serialization.IDataContractSurrogate> documentation.</span></span>  
  
 [!code-csharp[DataContractSerializer#15](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#15)]
 [!code-vb[DataContractSerializer#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ed6cd-224">超過最大值的項目數。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-224">The number of items exceeds the maximum value.</span></span></exception>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
        <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
        <altmember cref="T:System.Runtime.Serialization.IDataContractSurrogate" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.DataContractSerializer : Type * System.Xml.XmlDictionaryString * System.Xml.XmlDictionaryString * seq&lt;Type&gt; * int * bool * bool * System.Runtime.Serialization.IDataContractSurrogate -&gt; System.Runtime.Serialization.DataContractSerializer" Usage="new System.Runtime.Serialization.DataContractSerializer (type, rootName, rootNamespace, knownTypes, maxItemsInObjectGraph, ignoreExtensionDataObject, preserveObjectReferences, dataContractSurrogate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ed6cd-225">已序列化或還原序列化之執行個體的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-225">The type of the instances that are serialized or deserialized.</span></span></param>
        <param name="rootName"><span data-ttu-id="ed6cd-226">指定內含要序列化或還原序列化之 XML 項目的 <see cref="T:System.Xml.XmlDictionaryString" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-226">The <see cref="T:System.Xml.XmlDictionaryString" /> that specifies the XML element that encloses the content to serialize or deserialize.</span></span></param>
        <param name="rootNamespace"><span data-ttu-id="ed6cd-227"><see cref="T:System.Xml.XmlDictionaryString" />，會指定根的 XML 命名空間。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-227">The <see cref="T:System.Xml.XmlDictionaryString" /> that specifies the XML namespace of the root.</span></span></param>
        <param name="knownTypes"><span data-ttu-id="ed6cd-228"><see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的已知型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-228">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span></span></param>
        <param name="maxItemsInObjectGraph"><span data-ttu-id="ed6cd-229">圖形中要序列化或還原序列化的最大項目數。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-229">The maximum number of items in the graph to serialize or deserialize.</span></span></param>
        <param name="ignoreExtensionDataObject"><span data-ttu-id="ed6cd-230">如果要在序列化及還原序列化時略過型別延伸所提供的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-230"><see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span></span></param>
        <param name="preserveObjectReferences"><span data-ttu-id="ed6cd-231">如果要使用非標準的 XML 建構來保留物件參考資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-231"><see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataContractSurrogate"><span data-ttu-id="ed6cd-232"><see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 的實作，用來自訂序列化程序。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-232">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span></span></param>
        <summary><span data-ttu-id="ed6cd-233">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-233">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span></span> <span data-ttu-id="ed6cd-234">這個方法也會指定可能存在物件圖形中之已知型別的清單，要序列化之圖形項目的最大數，要略過非預期資料的參數，是否要使用非標準的 XML 建構來保存圖形中的物件參考資料，自訂序列化的代理，以及會指定其中含有內容之 XML 項目和命名空間的 <see cref="T:System.Xml.XmlDictionaryString" /> 參數。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-234">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, and parameters of <see cref="T:System.Xml.XmlDictionaryString" /> that specify the XML element and namespace that contain the content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ed6cd-235">下列範例會建立會指定要序列化或還原序列化之型別的 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，並建立會包含要在還原序列化期間使用之 XML 項目、命名空間 (相同於 <xref:System.Xml.XmlDictionaryString> 參數的處理方式) 和 <xref:System.Collections.Generic.IEnumerable%601> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-235">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize, the root XML element and namespace (as <xref:System.Xml.XmlDictionaryString> parameters), and an instance of a <xref:System.Collections.Generic.IEnumerable%601> that contains the types used during deserialization.</span></span> <span data-ttu-id="ed6cd-236">程式碼也會設定`ignoreExtensionDataObject`及`preserveObjectReferences`參數`true`，並指定實作<xref:System.Runtime.Serialization.IDataContractSurrogate>介面，以處理舊版型別 (不需要的類型<xref:System.Runtime.Serialization.DataContractAttribute>套用屬性)。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-236">The code also sets the `ignoreExtensionDataObject` and `preserveObjectReferences` parameters to `true`, and specifies an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate> interface to handle legacy types (types that do not have the <xref:System.Runtime.Serialization.DataContractAttribute> attribute applied).</span></span> <span data-ttu-id="ed6cd-237">如需詳細資訊，請參閱<xref:System.Runtime.Serialization.IDataContractSurrogate>文件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-237">For more information, see the <xref:System.Runtime.Serialization.IDataContractSurrogate> documentation.</span></span>  
  
 [!code-csharp[DataContractSerializer#16](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#16)]
 [!code-vb[DataContractSerializer#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ed6cd-238">超過最大值的項目數。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-238">The number of items exceeds the maximum value.</span></span></exception>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
        <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.IDataContractSurrogate" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, string rootName, string rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string rootName, string rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::String ^ rootName, System::String ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.DataContractSerializer : Type * string * string * seq&lt;Type&gt; * int * bool * bool * System.Runtime.Serialization.IDataContractSurrogate * System.Runtime.Serialization.DataContractResolver -&gt; System.Runtime.Serialization.DataContractSerializer" Usage="new System.Runtime.Serialization.DataContractSerializer (type, rootName, rootNamespace, knownTypes, maxItemsInObjectGraph, ignoreExtensionDataObject, preserveObjectReferences, dataContractSurrogate, dataContractResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ed6cd-239">已序列化或還原序列化之執行個體的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-239">The type of the instances that are serialized or deserialized.</span></span></param>
        <param name="rootName"><span data-ttu-id="ed6cd-240">內含要序列化或還原序列化之內容的 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-240">The XML element that encloses the content to serialize or deserialize.</span></span></param>
        <param name="rootNamespace"><span data-ttu-id="ed6cd-241">內含要序列化或還原序列化之內容的 XML 項目命名空間。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-241">The namespace of the XML element that encloses the content to serialize or deserialize.</span></span></param>
        <param name="knownTypes"><span data-ttu-id="ed6cd-242"><see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的已知型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-242">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span></span></param>
        <param name="maxItemsInObjectGraph"><span data-ttu-id="ed6cd-243">圖形中要序列化或還原序列化的最大項目數。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-243">The maximum number of items in the graph to serialize or deserialize.</span></span></param>
        <param name="ignoreExtensionDataObject"><span data-ttu-id="ed6cd-244">如果要在序列化及還原序列化時略過型別延伸所提供的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-244"><see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span></span></param>
        <param name="preserveObjectReferences"><span data-ttu-id="ed6cd-245">如果要使用非標準的 XML 建構來保留物件參考資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-245"><see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataContractSurrogate"><span data-ttu-id="ed6cd-246"><see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 的實作，用來自訂序列化程序。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-246">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span></span></param>
        <param name="dataContractResolver"><span data-ttu-id="ed6cd-247"><see cref="T:System.Runtime.Serialization.DataContractResolver" /> 的實作，用來將 <see langword="xsi:type" /> 宣告對應至資料合約型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-247">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map <see langword="xsi:type" /> declarations to data contract types.</span></span></param>
        <summary><span data-ttu-id="ed6cd-248">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-248">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span></span> <span data-ttu-id="ed6cd-249">這個方法也會指定可能存在物件圖形中之已知型別的清單、要序列化之圖形項目的最大數、要略過非預期資料的參數、是否要使用非標準的 XML 建構來保存圖形中的物件參考資料、自訂序列化的代理、XML 項目和包含內容的命名空間，以及在執行階段對應 <see langword="xsi:type" /> 宣告的替代方式。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-249">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, the XML element and namespace that contains the content, and an alternative for mapping <see langword="xsi:type" /> declarations at run time.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.DataContractSerializer : Type * System.Xml.XmlDictionaryString * System.Xml.XmlDictionaryString * seq&lt;Type&gt; * int * bool * bool * System.Runtime.Serialization.IDataContractSurrogate * System.Runtime.Serialization.DataContractResolver -&gt; System.Runtime.Serialization.DataContractSerializer" Usage="new System.Runtime.Serialization.DataContractSerializer (type, rootName, rootNamespace, knownTypes, maxItemsInObjectGraph, ignoreExtensionDataObject, preserveObjectReferences, dataContractSurrogate, dataContractResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ed6cd-250">已序列化或還原序列化之執行個體的型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-250">The type of the instances that are serialized or deserialized.</span></span></param>
        <param name="rootName"><span data-ttu-id="ed6cd-251">內含要序列化或還原序列化之內容的 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-251">The XML element that encloses the content to serialize or deserialize.</span></span></param>
        <param name="rootNamespace"><span data-ttu-id="ed6cd-252">內含要序列化或還原序列化之內容的 XML 項目命名空間。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-252">The namespace of the XML element that encloses the content to serialize or deserialize.</span></span></param>
        <param name="knownTypes"><span data-ttu-id="ed6cd-253"><see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的已知型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-253">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span></span></param>
        <param name="maxItemsInObjectGraph"><span data-ttu-id="ed6cd-254">圖形中要序列化或還原序列化的最大項目數。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-254">The maximum number of items in the graph to serialize or deserialize.</span></span></param>
        <param name="ignoreExtensionDataObject"><span data-ttu-id="ed6cd-255">如果要在序列化及還原序列化時略過型別延伸所提供的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-255"><see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span></span></param>
        <param name="preserveObjectReferences"><span data-ttu-id="ed6cd-256">如果要使用非標準的 XML 建構來保留物件參考資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-256"><see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataContractSurrogate"><span data-ttu-id="ed6cd-257"><see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 的實作，用來自訂序列化程序。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-257">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span></span></param>
        <param name="dataContractResolver"><span data-ttu-id="ed6cd-258"><see cref="T:System.Runtime.Serialization.DataContractResolver" /> 的實作，用來將 <see langword="xsi:type" /> 宣告對應至資料合約型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-258">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map <see langword="xsi:type" /> declarations to data contract types.</span></span></param>
        <summary><span data-ttu-id="ed6cd-259">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-259">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span></span> <span data-ttu-id="ed6cd-260">這個方法也會指定可能存在物件圖形中之已知型別的清單、要序列化之圖形項目的最大數、要略過非預期資料的參數、是否要使用非標準的 XML 建構來保存圖形中的物件參考資料、自訂序列化的代理、<see cref="T:System.Xml.XmlDictionaryString" /> 的參數 (會指定 XML 項目和包含內容的命名空間)，以及在執行階段對應 <see langword="xsi:type" /> 宣告的替代方式。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-260">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, parameters of <see cref="T:System.Xml.XmlDictionaryString" /> that specify the XML element and namespace that contains the content, and an alternative for mapping <see langword="xsi:type" /> declarations at run time.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContractResolver">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.DataContractResolver DataContractResolver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.DataContractResolver DataContractResolver" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContractResolver As DataContractResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::DataContractResolver ^ DataContractResolver { System::Runtime::Serialization::DataContractResolver ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataContractResolver : System.Runtime.Serialization.DataContractResolver" Usage="System.Runtime.Serialization.DataContractSerializer.DataContractResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.DataContractResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed6cd-261">取得用來將 <see langword="xsi:type" /> 宣告動態對應至已知合約型別的元件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-261">Gets the component used to dynamically map <see langword="xsi:type" /> declarations to known contract types.</span></span></summary>
        <value><span data-ttu-id="ed6cd-262"><see cref="T:System.Runtime.Serialization.DataContractResolver" /> 類別的實作。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-262">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed6cd-263"><xref:System.Runtime.Serialization.DataContractResolver> 是使用 <xref:System.Runtime.Serialization.DataContractSerializer> 建構函式設定的。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-263">The <xref:System.Runtime.Serialization.DataContractResolver> is set using a <xref:System.Runtime.Serialization.DataContractSerializer> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContractSurrogate">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.DataContractSurrogate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContractSurrogate As IDataContractSurrogate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::IDataContractSurrogate ^ DataContractSurrogate { System::Runtime::Serialization::IDataContractSurrogate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataContractSurrogate : System.Runtime.Serialization.IDataContractSurrogate" Usage="System.Runtime.Serialization.DataContractSerializer.DataContractSurrogate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.IDataContractSurrogate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed6cd-264">取得可以擴充序列化或還原序列化程序的代理型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-264">Gets a surrogate type that can extend the serialization or deserialization process.</span></span></summary>
        <value><span data-ttu-id="ed6cd-265"><see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 類別的實作。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-265">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed6cd-266"><xref:System.Runtime.Serialization.IDataContractSurrogate> 可用於自訂如何序列化及還原序列化某型別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-266">The <xref:System.Runtime.Serialization.IDataContractSurrogate> can be used to customize how instances of a type are serialized and deserialized.</span></span> <span data-ttu-id="ed6cd-267">例如，它可用來將不能序列化的舊版型別 (也就是尚未套用 <xref:System.Runtime.Serialization.DataContractAttribute> 屬性的型別) 加以序列化。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-267">For example, it can be used to enable the serialization of legacy types that are not serializable, that is, types to which the <xref:System.Runtime.Serialization.DataContractAttribute> attribute has not been applied.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.IDataContractSurrogate" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreExtensionDataObject">
      <MemberSignature Language="C#" Value="public bool IgnoreExtensionDataObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreExtensionDataObject" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreExtensionDataObject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreExtensionDataObject { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreExtensionDataObject : bool" Usage="System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed6cd-268">取得值，這個值會指定當類別序列化或還原序列化時，是否略過類別延伸所提供的資料。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-268">Gets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.</span></span></summary>
        <value><span data-ttu-id="ed6cd-269">如果要省略延伸資料則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-269"><see langword="true" /> to omit the extension data; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed6cd-270">如果已套用 <xref:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject%2A> 的類別也會實作 <xref:System.Runtime.Serialization.DataContractAttribute> 介面，這時便會使用 <xref:System.Runtime.Serialization.IExtensibleDataObject> 屬性。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-270">The <xref:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject%2A> property is used when the class to which a <xref:System.Runtime.Serialization.DataContractAttribute> has been applied also implements the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface.</span></span> <span data-ttu-id="ed6cd-271">在這種情況下，進行讀取和寫入時，就會略過將在日後合約版本中新增的資料。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-271">In this case, the data added in a future version of the contract is ignored on read and write.</span></span> <span data-ttu-id="ed6cd-272">如需詳細資訊，請參閱[向前相容資料合約](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md)。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-272">For more information, see [Forward-Compatible Data Contracts](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.DataContractAttribute" />
        <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
        <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
        <related type="Article" href="https://msdn.microsoft.com/library/413c9044-26f8-4ecb-968c-18495ea52cd9"><span data-ttu-id="ed6cd-273">向前相容資料合約</span><span class="sxs-lookup"><span data-stu-id="ed6cd-273">Forward Compatible Data Contracts</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ed6cd-274">判斷讀取器是否置於可還原序列化的物件上。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-274">Determines whether the reader is positioned on an object that can be deserialized.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public override bool IsStartObject (System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsStartObject(class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsStartObject (reader As XmlDictionaryReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsStartObject(System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.IsStartObject : System.Xml.XmlDictionaryReader -&gt; bool" Usage="dataContractSerializer.IsStartObject reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="ed6cd-275">用於讀取 XML 資料流的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-275">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream.</span></span></param>
        <summary><span data-ttu-id="ed6cd-276">判斷 <see cref="T:System.Xml.XmlDictionaryReader" /> 是否置於可還原序列化的物件上。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-276">Determines whether the <see cref="T:System.Xml.XmlDictionaryReader" /> is positioned on an object that can be deserialized.</span></span></summary>
        <returns><span data-ttu-id="ed6cd-277">如果讀取器位於要讀取之資料流的開始項目，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-277"><see langword="true" /> if the reader is at the start element of the stream to read; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed6cd-278"><xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> 會判斷它是否可以在檢查物件是否置於 XML 項目時讀取該物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-278">The <xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> determines whether it can read an object by checking that it is positioned on an XML element.</span></span> <span data-ttu-id="ed6cd-279">它也會檢查讀取器所在之 XML 項目的名稱和命名空間，並比較值與預期的名稱和命名空間。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-279">It also examines the name and namespace of the XML element that the reader is positioned at and compares the values to the expected name and namespace.</span></span> <span data-ttu-id="ed6cd-280">預期的名稱和命名空間可以使用下列項目進行設定：傳入建構函式之型別的資料合約名稱和命名空間，或是傳入建構函式的 `rootName` 和 `rootNamespace` 值 (如果有的話)。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-280">The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the `rootName` and `rootNamespace` values passed into the constructor (if present).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed6cd-281">下列範例會使用 <xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> 屬性來判斷是否已找到資料的開始項目。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-281">The following example uses the <xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> property to determine whether the start of the data has been found.</span></span>  
  
 [!code-csharp[DataContractSerializer#6](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#6)]
 [!code-vb[DataContractSerializer#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public override bool IsStartObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsStartObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsStartObject (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsStartObject(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.IsStartObject : System.Xml.XmlReader -&gt; bool" Usage="dataContractSerializer.IsStartObject reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="ed6cd-282">用來讀取 XML 資料流的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-282">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</span></span></param>
        <summary><span data-ttu-id="ed6cd-283">判斷 <see cref="T:System.Xml.XmlReader" /> 是否置於可還原序列化的物件上。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-283">Determines whether the <see cref="T:System.Xml.XmlReader" /> is positioned on an object that can be deserialized.</span></span></summary>
        <returns><span data-ttu-id="ed6cd-284">如果讀取器位於要讀取之資料流的開始項目，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-284"><see langword="true" /> if the reader is at the start element of the stream to read; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KnownTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Type&gt; KnownTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Type&gt; KnownTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KnownTypes As ReadOnlyCollection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;Type ^&gt; ^ KnownTypes { System::Collections::ObjectModel::ReadOnlyCollection&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KnownTypes : System.Collections.ObjectModel.ReadOnlyCollection&lt;Type&gt;" Usage="System.Runtime.Serialization.DataContractSerializer.KnownTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed6cd-285">取得型別的集合，這些型別可能會存在於使用這個 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 執行個體所序列化的物件圖形中。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-285">Gets a collection of types that may be present in the object graph serialized using this instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span></span></summary>
        <value><span data-ttu-id="ed6cd-286"><see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />，其中包含已當做已知型別傳入至 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 建構函式的預期型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-286">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains the expected types passed in as known types to the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> constructor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed6cd-287"><xref:System.Runtime.Serialization.DataContractSerializer.KnownTypes%2A> 屬性會提供已用於序列化和還原序列化的一組已知型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-287">The <xref:System.Runtime.Serialization.DataContractSerializer.KnownTypes%2A> property provides the set of known types that are used for serialization and deserialization.</span></span> <span data-ttu-id="ed6cd-288">例如，如果 <xref:System.Collections.Hashtable> 類別的執行個體包含 `Person` 類別的執行個體，請將 `Person` 型別新增至 <xref:System.Collections.Generic.List%601> 類別的執行個體，然後使用此執行個體來建構 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-288">For example, if an instance of the <xref:System.Collections.Hashtable> class contains instances of a `Person` class, add the `Person` type to an instance of the <xref:System.Collections.Generic.List%601> class and use the instance to construct an instance of the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span> <span data-ttu-id="ed6cd-289">如果您知道要新增至 <xref:System.Collections.Hashtable> 的其他型別，您就可以將這些型別新增至該集合。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-289">If you know of other types to add to the <xref:System.Collections.Hashtable>, then add those types to the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="MaxItemsInObjectGraph">
      <MemberSignature Language="C#" Value="public int MaxItemsInObjectGraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxItemsInObjectGraph" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxItemsInObjectGraph As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxItemsInObjectGraph { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxItemsInObjectGraph : int" Usage="System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed6cd-290">取得物件圖形中要序列化或還原序列化的最大項目數。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-290">Gets the maximum number of items in an object graph to serialize or deserialize.</span></span></summary>
        <value><span data-ttu-id="ed6cd-291">要序列化或還原序列化的最大項目數。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-291">The maximum number of items to serialize or deserialize.</span></span> <span data-ttu-id="ed6cd-292">預設值為 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-292">The default is <see cref="F:System.Int32.MaxValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed6cd-293">這個屬性可在組態中設定，或是在程式碼中以命令方式設定。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-293">This property can be set in configuration or imperatively in code.</span></span> <span data-ttu-id="ed6cd-294">若要在組態中設定，請將自訂行為加入到行為區段中，並且加入下列設定。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-294">To set it in configuration, add a custom behavior to the behaviors section and add the following setting.</span></span>  
  
```  
<behaviors>    <behavior name="MyServiceBehavior">        <dataContractSerializer maxItemsInObjectGraph="3" />    </behavior></behaviors>  
```  
  
 <span data-ttu-id="ed6cd-295">若要在程式碼中以命令方式設定這個屬性，請找出服務的作業描述，然後取得作業行為，最後如下列程式碼所示設定該屬性。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-295">To set this property imperatively in code find the operation description of the service, then get the operation behavior, finally set the property as shown in the following code.</span></span>  
  
```  
OperationDescription operation = host.Description.Endpoints[0].Contract.Operations.Find("MyOperationName");operation.Behaviors.Find<DataContractSerializerOperationBehavior>().MaxItemsInObjectGraph = 3;  
```  
  
 <span data-ttu-id="ed6cd-296"><xref:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph%2A> 屬性會指定序列化程式在單一 <xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A> 方法呼叫中，序列化或還原序列化的最大物件數。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-296">The <xref:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph%2A> property specifies the maximum number of objects that the serializer serializes or deserializes in a single <xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A> method call.</span></span> <span data-ttu-id="ed6cd-297">(此方法一定會讀取一個根物件，但是這個物件可能會在其資料成員中又有其他物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-297">(The method always reads one root object, but this object may have other objects in its data members.</span></span> <span data-ttu-id="ed6cd-298">這些物件可能又會有其他物件，依此類推)。預設為 <xref:System.Int32.MaxValue>。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-298">Those objects may have other objects, and so on.) The default is <xref:System.Int32.MaxValue>.</span></span> <span data-ttu-id="ed6cd-299">請注意，當序列化或還原序列化陣列時，每個陣列項目都視為個別物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-299">Note that when serializing or deserializing arrays, every array entry counts as a separate object.</span></span> <span data-ttu-id="ed6cd-300">另外請注意，有些物件可能有大量記憶體表示，因此只靠這個配額可能仍無法防止阻絕服務攻擊。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-300">Also, note that some objects may have a large memory representation and so this quota alone may not be sufficient to prevent Denial of Service attacks.</span></span> <span data-ttu-id="ed6cd-301">如需詳細資訊，請參閱 <<c0> [ 資料的安全性考量](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-301">For more information, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span> <span data-ttu-id="ed6cd-302">如果您需要將這個配額增加超過其預設值，您就必須在傳送端 (進行序列化) 和接收端 (進行還原序列化) 同時執行這項操作。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-302">If you need to increase this quota beyond its default value, it is important to do so both on the sending (serializing) and receiving (deserializing) sides.</span></span> <span data-ttu-id="ed6cd-303">這個做法在讀取和寫入資料時均適用。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-303">It applies both when reading and writing data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ed6cd-304">超過最大值的項目數。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-304">The number of items exceeds the maximum value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PreserveObjectReferences">
      <MemberSignature Language="C#" Value="public bool PreserveObjectReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveObjectReferences" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreserveObjectReferences As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveObjectReferences { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.PreserveObjectReferences : bool" Usage="System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed6cd-305">取得值，這個值會指定是否使用非標準的 XML 建構來保留物件參考資料。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-305">Gets a value that specifies whether to use non-standard XML constructs to preserve object reference data.</span></span></summary>
        <value><span data-ttu-id="ed6cd-306">如果要保留參考，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-306"><see langword="true" /> to keep the references; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ed6cd-307">讀取 XML 資料流，然後傳回已還原序列化的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-307">Reads the XML stream and returns the deserialized object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.ReadObject : System.Xml.XmlReader -&gt; obj" Usage="dataContractSerializer.ReadObject reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="ed6cd-308">用來讀取 XML 資料流的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-308">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</span></span></param>
        <summary><span data-ttu-id="ed6cd-309">使用 <see cref="T:System.Xml.XmlReader" /> 讀取 XML 資料流，然後傳回已還原序列化的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-309">Reads the XML stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object.</span></span></summary>
        <returns><span data-ttu-id="ed6cd-310">已還原序列化的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-310">The deserialized object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlDictionaryReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlDictionaryReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlDictionaryReader, verifyObjectName As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlDictionaryReader ^ reader, bool verifyObjectName);" />
      <MemberSignature Language="F#" Value="override this.ReadObject : System.Xml.XmlDictionaryReader * bool -&gt; obj" Usage="dataContractSerializer.ReadObject (reader, verifyObjectName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="ed6cd-311">用來讀取 XML 資料流的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-311">The <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream.</span></span></param>
        <param name="verifyObjectName"><span data-ttu-id="ed6cd-312">如果要檢查物件的名稱是否對應到建構函式中所提供的根名稱值，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-312"><see langword="true" /> to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ed6cd-313">使用 <see cref="T:System.Xml.XmlDictionaryReader" /> 讀取 XML 資料流並傳回已還原序列化的物件，同時指定是否要先確認物件名稱，再讀取其值。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-313">Reads the XML stream with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.</span></span></summary>
        <returns><span data-ttu-id="ed6cd-314">已還原序列化的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-314">The deserialized object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ed6cd-315">下列範例會讀取 XML 文件，並還原序列化物件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-315">The following example reads an XML document and deserializes an instance of an object.</span></span>  
  
 [!code-csharp[DataContractSerializer#2](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#2)]
 [!code-vb[DataContractSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="ed6cd-316">當 <paramref name="verifyObjectName" /> 參數設定為 <see langword="true" />，而項目名稱和命名空間並未對應到建構函式中之設定值的情況下。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-316">The <paramref name="verifyObjectName" /> parameter is set to <see langword="true" />, and the element name and namespace do not correspond to the values set in the constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlReader, verifyObjectName As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlReader ^ reader, bool verifyObjectName);" />
      <MemberSignature Language="F#" Value="override this.ReadObject : System.Xml.XmlReader * bool -&gt; obj" Usage="dataContractSerializer.ReadObject (reader, verifyObjectName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="ed6cd-317">用來讀取 XML 資料流的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-317">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</span></span></param>
        <param name="verifyObjectName"><span data-ttu-id="ed6cd-318">如果要檢查物件的名稱是否對應到建構函式中所提供的根名稱值，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-318"><see langword="true" /> to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ed6cd-319">使用 <see cref="T:System.Xml.XmlReader" /> 讀取 XML 資料流並傳回已還原序列化的物件，同時指定是否要先確認物件名稱，再讀取其值。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-319">Reads the XML stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.</span></span></summary>
        <returns><span data-ttu-id="ed6cd-320">已還原序列化的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-320">The deserialized object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="ed6cd-321">當 <paramref name="verifyObjectName" /> 參數設定為 <see langword="true" />，而項目名稱和命名空間並未對應到建構函式中之設定值的情況下。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-321">The <paramref name="verifyObjectName" /> parameter is set to <see langword="true" />, and the element name and namespace do not correspond to the values set in the constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public object ReadObject (System.Xml.XmlDictionaryReader reader, bool verifyObjectName, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ReadObject(class System.Xml.XmlDictionaryReader reader, bool verifyObjectName, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ReadObject(System::Xml::XmlDictionaryReader ^ reader, bool verifyObjectName, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberSignature Language="F#" Value="override this.ReadObject : System.Xml.XmlDictionaryReader * bool * System.Runtime.Serialization.DataContractResolver -&gt; obj" Usage="dataContractSerializer.ReadObject (reader, verifyObjectName, dataContractResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="ed6cd-322">用於讀取內容的 XML 讀取器。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-322">The XML reader used to read the content.</span></span></param>
        <param name="verifyObjectName"><span data-ttu-id="ed6cd-323"><see langword="true" /> 表示驗證物件名稱；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-323"><see langword="true" /> to verify the object name; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataContractResolver"><span data-ttu-id="ed6cd-324"><see cref="T:System.Runtime.Serialization.DataContractResolver" /> 的實作，用來將 <see langword="xsi:type" /> 宣告對應至資料合約型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-324">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map <see langword="xsi:type" /> declarations to data contract types.</span></span></param>
        <summary><span data-ttu-id="ed6cd-325">讀取 XML 文件或文件資料流，然後傳回已還原序列化的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-325">Reads an XML document or document stream and returns the deserialized object.</span></span>  <span data-ttu-id="ed6cd-326">這個方法包含一個參數 (指定要驗證的物件名稱是否已驗證)，以及在執行階段對應 <see langword="xsi:type" /> 宣告的解析程式。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-326">The method includes a parameter to specify whether the object name is verified is validated, and a resolver for mapping <see langword="xsi:type" /> declarations at runtime.</span></span></summary>
        <returns><span data-ttu-id="ed6cd-327">已還原序列化的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-327">The deserialized object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeReadOnlyTypes">
      <MemberSignature Language="C#" Value="public bool SerializeReadOnlyTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SerializeReadOnlyTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializeReadOnlyTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SerializeReadOnlyTypes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializeReadOnlyTypes : bool" Usage="System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed6cd-328">取得值，指定是否序列化唯讀型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-328">Gets a value that specifies whether read-only types are serialized.</span></span></summary>
        <value><span data-ttu-id="ed6cd-329">如果唯讀型別已序列化，則為 <see langword="true" />，如果所有型別已序列化，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-329"><see langword="true" /> if read-only types are serialized; <see langword="false" /> if all types are serialized.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEndObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ed6cd-330">使用指定的寫入器寫入結尾 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-330">Writes the closing XML element using the specified writer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : System.Xml.XmlDictionaryWriter -&gt; unit" Usage="dataContractSerializer.WriteEndObject writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="ed6cd-331">用於寫入資料流的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-331">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the stream.</span></span></param>
        <summary><span data-ttu-id="ed6cd-332">使用 <see cref="T:System.Xml.XmlDictionaryWriter" /> 寫入結尾 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-332">Writes the closing XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ed6cd-333">下列範例會建立要序列化的物件、<xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體和 <xref:System.Xml.XmlDictionaryWriter> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-333">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.DataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="ed6cd-334">這個範例使用 <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 方法，將物件資料寫入 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-334">The example uses the <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> methods to write the object data into the XML document.</span></span> <span data-ttu-id="ed6cd-335">發出這些呼叫相當於發出 <xref:System.Runtime.Serialization.DataContractSerializer.WriteObject%2A> 方法的單一呼叫。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-335">Making these calls is equivalent to making a single call of the <xref:System.Runtime.Serialization.DataContractSerializer.WriteObject%2A> method.</span></span> <span data-ttu-id="ed6cd-336">例如，使用者可能在呼叫 <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A> 方法之後，另外發出這些呼叫來將額外的 XML 屬性插入 XML 中。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-336">For example, a user might make the calls separately to insert additional XML attributes into the XML after calling the <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A> method.</span></span>  
  
 [!code-csharp[DataContractSerializer#7](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#7)]
 [!code-vb[DataContractSerializer#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException"><span data-ttu-id="ed6cd-337">正在序列化的型別不符合資料合約規則。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-337">The type being serialized does not conform to data contract rules.</span></span> <span data-ttu-id="ed6cd-338">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-338">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="ed6cd-339">正在寫入的執行個體發生問題。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-339">There is a problem with the instance being written.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : System.Xml.XmlWriter -&gt; unit" Usage="dataContractSerializer.WriteEndObject writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="ed6cd-340">用於寫入資料流的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-340">The <see cref="T:System.Xml.XmlWriter" /> used to write the stream.</span></span></param>
        <summary><span data-ttu-id="ed6cd-341">使用 <see cref="T:System.Xml.XmlWriter" /> 寫入結尾 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-341">Writes the closing XML element using an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException"><span data-ttu-id="ed6cd-342">正在序列化的型別不符合資料合約規則。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-342">The type being serialized does not conform to data contract rules.</span></span> <span data-ttu-id="ed6cd-343">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-343">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="ed6cd-344">正在寫入的執行個體發生問題。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-344">There is a problem with the instance being written.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ed6cd-345">將所有的物件資料 (起始 XML 項目、內容以及結尾項目) 寫入至 XML 文件或資料流。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-345">Writes all the object data (starting XML element, content, and closing element) to an XML document or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public override void WriteObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObject (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObject(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="override this.WriteObject : System.Xml.XmlWriter * obj -&gt; unit" Usage="dataContractSerializer.WriteObject (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="ed6cd-346">用於寫入 XML 文件或資料流的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-346">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</span></span></param>
        <param name="graph"><span data-ttu-id="ed6cd-347">包含要寫入至資料流之資料的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-347">The object that contains the data to write to the stream.</span></span></param>
        <summary><span data-ttu-id="ed6cd-348">使用 <see cref="T:System.Xml.XmlWriter" />，將所有的物件資料 (起始 XML 項目、內容以及結尾項目) 寫入至 XML 文件或資料流。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-348">Writes all the object data (starting XML element, content, and closing element) to an XML document or stream with an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException"><span data-ttu-id="ed6cd-349">正在序列化的型別不符合資料合約規則。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-349">The type being serialized does not conform to data contract rules.</span></span> <span data-ttu-id="ed6cd-350">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-350">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="ed6cd-351">正在寫入的執行個體發生問題。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-351">There is a problem with the instance being written.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public void WriteObject (System.Xml.XmlDictionaryWriter writer, object graph, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteObject(class System.Xml.XmlDictionaryWriter writer, object graph, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteObject(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberSignature Language="F#" Value="override this.WriteObject : System.Xml.XmlDictionaryWriter * obj * System.Runtime.Serialization.DataContractResolver -&gt; unit" Usage="dataContractSerializer.WriteObject (writer, graph, dataContractResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="ed6cd-352">XmlDictionaryWriter，用來將內容寫入至 XML 文件或資料流。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-352">An XmlDictionaryWriter used to write the content to the XML document or stream.</span></span></param>
        <param name="graph"><span data-ttu-id="ed6cd-353">包含要寫入之內容的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-353">The object that contains the content to write.</span></span></param>
        <param name="dataContractResolver"><span data-ttu-id="ed6cd-354"><see cref="T:System.Runtime.Serialization.DataContractResolver" /> 的實作，用來將 <see langword="xsi:type" /> 宣告對應至已知的資料合約。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-354">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> used to map <see langword="xsi:type" /> declarations to known data contracts.</span></span></param>
        <summary><span data-ttu-id="ed6cd-355">使用指定的 XmlDictionaryWriter，將所有的物件資料 (起始 XML 項目、內容及封入項目) 寫入至 XML 文件或資料流。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-355">Writes all the object data (starting XML element, content, and enclosing element) to an XML document or stream  using the specified XmlDictionaryWriter.</span></span> <span data-ttu-id="ed6cd-356">此方法包括在執行階段對應 <see langword="xsi:type" /> 宣告的解析程式。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-356">The method includes a resolver for mapping <see langword="xsi:type" /> declarations at runtime.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteObjectContent">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ed6cd-357">使用指定的寫入器寫入不含包裝項目的 XML 內容。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-357">Writes the XML content without the wrapping element using the specified writer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public override void WriteObjectContent (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObjectContent(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObjectContent (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObjectContent(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="override this.WriteObjectContent : System.Xml.XmlDictionaryWriter * obj -&gt; unit" Usage="dataContractSerializer.WriteObjectContent (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="ed6cd-358">用於寫入資料流的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-358">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the stream.</span></span></param>
        <param name="graph"><span data-ttu-id="ed6cd-359">要寫入至資料流的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-359">The object to write to the stream.</span></span></param>
        <summary><span data-ttu-id="ed6cd-360">使用 <see cref="T:System.Xml.XmlDictionaryWriter" /> 寫入 XML 內容。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-360">Writes the XML content using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ed6cd-361">下列範例會建立要序列化的物件、<xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體和 <xref:System.Xml.XmlDictionaryWriter> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-361">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.DataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="ed6cd-362">這個範例使用 <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 方法，將物件資料寫入 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-362">The example uses the <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> methods to write the object data into the XML document.</span></span>  
  
 [!code-csharp[DataContractSerializer#7](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#7)]
 [!code-vb[DataContractSerializer#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException"><span data-ttu-id="ed6cd-363">正在序列化的型別不符合資料合約規則。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-363">The type being serialized does not conform to data contract rules.</span></span> <span data-ttu-id="ed6cd-364">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-364">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="ed6cd-365">正在寫入的執行個體發生問題。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-365">There is a problem with the instance being written.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public override void WriteObjectContent (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObjectContent(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObjectContent (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObjectContent(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="override this.WriteObjectContent : System.Xml.XmlWriter * obj -&gt; unit" Usage="dataContractSerializer.WriteObjectContent (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="ed6cd-366">用於寫入資料流的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-366">The <see cref="T:System.Xml.XmlWriter" /> used to write the stream.</span></span></param>
        <param name="graph"><span data-ttu-id="ed6cd-367">要寫入至資料流的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-367">The object to write to the stream.</span></span></param>
        <summary><span data-ttu-id="ed6cd-368">使用 <see cref="T:System.Xml.XmlWriter" /> 寫入 XML 內容。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-368">Writes the XML content using an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException"><span data-ttu-id="ed6cd-369">正在序列化的型別不符合資料合約規則。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-369">The type being serialized does not conform to data contract rules.</span></span> <span data-ttu-id="ed6cd-370">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-370">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="ed6cd-371">正在寫入的執行個體發生問題。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-371">There is a problem with the instance being written.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ed6cd-372">使用指定的寫入器寫入開頭 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-372">Writes the opening XML element using the specified writer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xml.XmlDictionaryWriter * obj -&gt; unit" Usage="dataContractSerializer.WriteStartObject (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="ed6cd-373">用於寫入 XML 開始項目的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-373">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML start element.</span></span></param>
        <param name="graph"><span data-ttu-id="ed6cd-374">要寫入的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-374">The object to write.</span></span></param>
        <summary><span data-ttu-id="ed6cd-375">使用 <see cref="T:System.Xml.XmlDictionaryWriter" /> 寫入開頭 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-375">Writes the opening XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ed6cd-376">下列範例會建立要序列化的物件、<xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體和 <xref:System.Xml.XmlDictionaryWriter> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-376">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.DataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="ed6cd-377">這個範例使用 <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 方法，將物件資料寫入 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-377">The example uses the <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> methods to write the object data into the XML document.</span></span>  
  
 [!code-csharp[DataContractSerializer#7](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#7)]
 [!code-vb[DataContractSerializer#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xml.XmlWriter * obj -&gt; unit" Usage="dataContractSerializer.WriteStartObject (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="ed6cd-378">用於寫入 XML 開始項目的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-378">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML start element.</span></span></param>
        <param name="graph"><span data-ttu-id="ed6cd-379">要寫入的物件。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-379">The object to write.</span></span></param>
        <summary><span data-ttu-id="ed6cd-380">使用 <see cref="T:System.Xml.XmlWriter" /> 寫入開頭 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="ed6cd-380">Writes the opening XML element using an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>