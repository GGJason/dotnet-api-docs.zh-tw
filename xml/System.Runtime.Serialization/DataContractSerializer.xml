<Type Name="DataContractSerializer" FullName="System.Runtime.Serialization.DataContractSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68c63064380f71ad23832747011f8e1855a2c7cb" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataContractSerializer : System.Runtime.Serialization.XmlObjectSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataContractSerializer extends System.Runtime.Serialization.XmlObjectSerializer" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.DataContractSerializer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataContractSerializer&#xA;Inherits XmlObjectSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContractSerializer sealed : System::Runtime::Serialization::XmlObjectSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Serialization.XmlObjectSerializer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0df42-101">將某個型別的執行個體序列化及還原序列化成使用所提供資料合約的 XML 資料流或文件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0df42-101">Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract.</span>
      </span>
      <span data-ttu-id="0df42-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0df42-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0df42-103">使用 <xref:System.Runtime.Serialization.DataContractSerializer> 類別，即可將某個型別的執行個體序列化及還原序列化成 XML 資料流或文件。</span><span class="sxs-lookup"><span data-stu-id="0df42-103">Use the <xref:System.Runtime.Serialization.DataContractSerializer> class to serialize and deserialize instances of a type into an XML stream or document.</span></span> <span data-ttu-id="0df42-104">例如，您可以使用包含基本資料的屬性 (例如姓名和地址) 來建立名為 `Person` 的型別。</span><span class="sxs-lookup"><span data-stu-id="0df42-104">For example, you can create a type named `Person` with properties that contain essential data, such as a name and address.</span></span> <span data-ttu-id="0df42-105">接著，您可以建立及操作 `Person` 類別的執行個體，並將所有的屬性值寫入 XML 文件中以供日後擷取，或寫入 XML 資料流中以供立即傳輸。</span><span class="sxs-lookup"><span data-stu-id="0df42-105">You can then create and manipulate an instance of the `Person` class and write all of its property values in an XML document for later retrieval, or in an XML stream for immediate transport.</span></span> <span data-ttu-id="0df42-106">最重要的是，<xref:System.Runtime.Serialization.DataContractSerializer>用來序列化和還原序列化 Windows Communication Foundation (WCF) 訊息中傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="0df42-106">Most important, the <xref:System.Runtime.Serialization.DataContractSerializer> is used to serialize and deserialize data sent in Windows Communication Foundation (WCF) messages.</span></span> <span data-ttu-id="0df42-107">將 <xref:System.Runtime.Serialization.DataContractAttribute> 屬性套用至類別，並將 <xref:System.Runtime.Serialization.DataMemberAttribute> 屬性套用至類別成員，即可指定已序列化的屬性和欄位。</span><span class="sxs-lookup"><span data-stu-id="0df42-107">Apply the <xref:System.Runtime.Serialization.DataContractAttribute> attribute to classes, and the <xref:System.Runtime.Serialization.DataMemberAttribute> attribute to class members to specify properties and fields that are serialized.</span></span>  
  
 <span data-ttu-id="0df42-108">如需可序列化的型別，請參閱[資料合約序列化程式所支援的型別](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)。</span><span class="sxs-lookup"><span data-stu-id="0df42-108">For a list of types that can be serialized, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span></span>  
  
 <span data-ttu-id="0df42-109">如果要使用 <xref:System.Runtime.Serialization.DataContractSerializer>，請先建立類別的執行個體，以及適合用於寫入或讀取此格式的物件；例如，<xref:System.Xml.XmlDictionaryWriter> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="0df42-109">To use the <xref:System.Runtime.Serialization.DataContractSerializer>, first create an instance of a class and an object appropriate to writing or reading the format; for example, an instance of the <xref:System.Xml.XmlDictionaryWriter>.</span></span> <span data-ttu-id="0df42-110">接著，呼叫 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> 方法以保留資料。</span><span class="sxs-lookup"><span data-stu-id="0df42-110">Then call the <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> method to persist the data.</span></span> <span data-ttu-id="0df42-111">如果要擷取資料，請建立適合用於讀取此資料格式的物件 (例如適合 XML 文件的 <xref:System.Xml.XmlDictionaryReader>)，接著呼叫 <xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="0df42-111">To retrieve data, create an object appropriate to reading the data format (such as an <xref:System.Xml.XmlDictionaryReader> for an XML document) and call the <xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A> method.</span></span>  
  
 <span data-ttu-id="0df42-112">如需有關使用<xref:System.Runtime.Serialization.DataContractSerializer>，請參閱[序列化和還原序列化](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md)。</span><span class="sxs-lookup"><span data-stu-id="0df42-112">For more information about using the <xref:System.Runtime.Serialization.DataContractSerializer>, see [Serialization and Deserialization](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md).</span></span>  
  
 <span data-ttu-id="0df42-113">您可以設定使用的資料合約序列化程式的型別[ &lt;dataContractSerializer&gt; ](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md)用戶端應用程式組態檔中的項目。</span><span class="sxs-lookup"><span data-stu-id="0df42-113">You can set the type of a data contract serializer using the [&lt;dataContractSerializer&gt;](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md) element in a client application configuration file.</span></span>  
  
## <a name="preparing-classes-for-serialization-or-deserialization"></a><span data-ttu-id="0df42-114">準備類別以進行序列化或還原序列化</span><span class="sxs-lookup"><span data-stu-id="0df42-114">Preparing Classes for Serialization or Deserialization</span></span>  
 <span data-ttu-id="0df42-115"><xref:System.Runtime.Serialization.DataContractSerializer> 會組合 <xref:System.Runtime.Serialization.DataContractAttribute> 和 <xref:System.Runtime.Serialization.DataMemberAttribute> 類別一起使用。</span><span class="sxs-lookup"><span data-stu-id="0df42-115">The <xref:System.Runtime.Serialization.DataContractSerializer> is used in combination with the <xref:System.Runtime.Serialization.DataContractAttribute> and <xref:System.Runtime.Serialization.DataMemberAttribute> classes.</span></span> <span data-ttu-id="0df42-116">如果要準備類別以進行序列化，請將 <xref:System.Runtime.Serialization.DataContractAttribute> 套用至此類別。</span><span class="sxs-lookup"><span data-stu-id="0df42-116">To prepare a class for serialization, apply the <xref:System.Runtime.Serialization.DataContractAttribute> to the class.</span></span>  <span data-ttu-id="0df42-117">對於每個會傳回您要序列化之資料的類別成員，請套用 <xref:System.Runtime.Serialization.DataMemberAttribute>。</span><span class="sxs-lookup"><span data-stu-id="0df42-117">For each member of the class that returns data that you want to serialize, apply the <xref:System.Runtime.Serialization.DataMemberAttribute>.</span></span> <span data-ttu-id="0df42-118">您可以序列化欄位和屬性，不論其存取範圍為何：private、protected、internal、protected internal 或 public。</span><span class="sxs-lookup"><span data-stu-id="0df42-118">You can serialize fields and properties, regardless of accessibility: private, protected, internal, protected internal, or public.</span></span>  
  
 <span data-ttu-id="0df42-119">例如，您的結構描述指定含有 `Customer` 屬性的 `ID`，但是您的現有應用程式是使用名為 `Person` 且具有 `Name` 屬性的型別。</span><span class="sxs-lookup"><span data-stu-id="0df42-119">For example, your schema specifies a `Customer` with an `ID` property, but you already have an existing application that uses a type named `Person` with a `Name` property.</span></span> <span data-ttu-id="0df42-120">如果要建立符合該合約的型別，請先將 <xref:System.Runtime.Serialization.DataContractAttribute> 套用至類別。</span><span class="sxs-lookup"><span data-stu-id="0df42-120">To create a type that conforms to the contract, first apply the <xref:System.Runtime.Serialization.DataContractAttribute> to the class.</span></span>  <span data-ttu-id="0df42-121">然後將 <xref:System.Runtime.Serialization.DataMemberAttribute> 套用至要序列化的每個欄位或屬性。</span><span class="sxs-lookup"><span data-stu-id="0df42-121">Then apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to every field or property that you want to serialize.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0df42-122">您可以將 <xref:System.Runtime.Serialization.DataMemberAttribute> 同時套用至 Private 和 Public 成員。</span><span class="sxs-lookup"><span data-stu-id="0df42-122">You can apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to both private and public members.</span></span>  
  
 <span data-ttu-id="0df42-123">XML 的最終格式並不要求一定是文字。</span><span class="sxs-lookup"><span data-stu-id="0df42-123">The final format of the XML need not be text.</span></span> <span data-ttu-id="0df42-124">相反地，<xref:System.Runtime.Serialization.DataContractSerializer> 會將資料寫成為 XML infoset，這樣您便可以將資料寫成任何可由 <xref:System.Xml.XmlReader> 和 <xref:System.Xml.XmlWriter> 辨識的格式。</span><span class="sxs-lookup"><span data-stu-id="0df42-124">Instead, the <xref:System.Runtime.Serialization.DataContractSerializer> writes the data as an XML infoset, which allows you to write the data to any format recognized by the <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlWriter>.</span></span> <span data-ttu-id="0df42-125">建議您使用 <xref:System.Xml.XmlDictionaryReader> 和 <xref:System.Xml.XmlDictionaryWriter> 類別來讀取和寫入，因為這兩種類別已針對使用 <xref:System.Runtime.Serialization.DataContractSerializer> 完成最佳化。</span><span class="sxs-lookup"><span data-stu-id="0df42-125">It is recommended that you use the <xref:System.Xml.XmlDictionaryReader> and <xref:System.Xml.XmlDictionaryWriter> classes to read and write, because both are optimized to work with the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span>  
  
 <span data-ttu-id="0df42-126">如果您要建立具有欄位或屬性的序列化之前，必須先填入的類別，或還原序列化發生，請如所述使用回呼屬性，[版本相容序列化回呼](~/docs/framework/wcf/feature-details/version-tolerant-serialization-callbacks.md)。</span><span class="sxs-lookup"><span data-stu-id="0df42-126">If you are creating a class that has fields or properties that must be populated before the serialization or deserialization occurs, use callback attributes, as described in [Version-Tolerant Serialization Callbacks](~/docs/framework/wcf/feature-details/version-tolerant-serialization-callbacks.md).</span></span>  
  
## <a name="adding-to-the-collection-of-known-types"></a><span data-ttu-id="0df42-127">新增至已知型別集合</span><span class="sxs-lookup"><span data-stu-id="0df42-127">Adding to the Collection of Known Types</span></span>  
 <span data-ttu-id="0df42-128">當序列化或還原序列化物件時，其型別必須是 <xref:System.Runtime.Serialization.DataContractSerializer>「已知」的型別。</span><span class="sxs-lookup"><span data-stu-id="0df42-128">When serializing or deserializing an object, it is required that the type is "known" to the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span> <span data-ttu-id="0df42-129">一開始會先建立會實作 <xref:System.Collections.Generic.IEnumerable%601> (例如 <xref:System.Collections.Generic.List%601>) 之類別的執行個體，並將已知型別新增至集合。</span><span class="sxs-lookup"><span data-stu-id="0df42-129">Begin by creating an instance of a class that implements <xref:System.Collections.Generic.IEnumerable%601> (such as <xref:System.Collections.Generic.List%601>) and adding the known types to the collection.</span></span> <span data-ttu-id="0df42-130">接下來，建立使用接受 <xref:System.Runtime.Serialization.DataContractSerializer> 之其中一個多載的 <xref:System.Collections.Generic.IEnumerable%601> 執行個體 (例如，<xref:System.Runtime.Serialization.DataContractSerializer.%23ctor%28System.Type%2CSystem.Collections.Generic.IEnumerable%7BSystem.Type%7D%29>。</span><span class="sxs-lookup"><span data-stu-id="0df42-130">Then create an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> using one of the overloads that takes the <xref:System.Collections.Generic.IEnumerable%601> (for example, <xref:System.Runtime.Serialization.DataContractSerializer.%23ctor%28System.Type%2CSystem.Collections.Generic.IEnumerable%7BSystem.Type%7D%29>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0df42-131">不同於其他基本類型，<xref:System.DateTimeOffset>結構並不是已知的型別，根據預設，所以它必須手動新增至已知型別的清單 (請參閱[資料合約已知型別](~/docs/framework/wcf/feature-details/data-contract-known-types.md))。</span><span class="sxs-lookup"><span data-stu-id="0df42-131">Unlike other primitive types, the <xref:System.DateTimeOffset> structure is not a known type by default, so it must be manually added to the list of known types (see [Data Contract Known Types](~/docs/framework/wcf/feature-details/data-contract-known-types.md)).</span></span>  
  
## <a name="forward-compatibility"></a><span data-ttu-id="0df42-132">正向相容性</span><span class="sxs-lookup"><span data-stu-id="0df42-132">Forward Compatibility</span></span>  
 <span data-ttu-id="0df42-133"><xref:System.Runtime.Serialization.DataContractSerializer> 知道資料合約已設計為與合約的未來版本相容。</span><span class="sxs-lookup"><span data-stu-id="0df42-133">The <xref:System.Runtime.Serialization.DataContractSerializer> understands data contracts that have been designed to be compatible with future versions of the contract.</span></span> <span data-ttu-id="0df42-134">這些型別會實作 <xref:System.Runtime.Serialization.IExtensibleDataObject> 介面。</span><span class="sxs-lookup"><span data-stu-id="0df42-134">Such types implement the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface.</span></span> <span data-ttu-id="0df42-135">此介面的特色是會傳回 <xref:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData%2A> 物件的 <xref:System.Runtime.Serialization.ExtensionDataObject> 屬性。</span><span class="sxs-lookup"><span data-stu-id="0df42-135">The interface features the <xref:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData%2A> property that returns an <xref:System.Runtime.Serialization.ExtensionDataObject> object.</span></span> <span data-ttu-id="0df42-136">如需詳細資訊，請參閱[向前相容資料合約](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md)。</span><span class="sxs-lookup"><span data-stu-id="0df42-136">For more information, see [Forward-Compatible Data Contracts](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md).</span></span>  
  
## <a name="running-under-partial-trust"></a><span data-ttu-id="0df42-137">在部分信任下執行</span><span class="sxs-lookup"><span data-stu-id="0df42-137">Running under Partial Trust</span></span>  
 <span data-ttu-id="0df42-138">在還原序列化期間產生目標物件時，<xref:System.Runtime.Serialization.DataContractSerializer> 不會呼叫目標物件的建構函式。</span><span class="sxs-lookup"><span data-stu-id="0df42-138">When instantiating the target object during deserialization, the <xref:System.Runtime.Serialization.DataContractSerializer> does not call the constructor of the target object.</span></span> <span data-ttu-id="0df42-139">如果您撰寫 *[DataContract]* 類型可從部分信任存取 (亦即，它為公用，且在組件具有`AllowPartiallyTrustedCallers`套用屬性)，且執行某些安全性相關的動作，您必須知道，不會呼叫建構函式。</span><span class="sxs-lookup"><span data-stu-id="0df42-139">If you author a *[DataContract]* type that is accessible from partial trust (that is, it is public and in an assembly that has the `AllowPartiallyTrustedCallers` attribute applied) and that performs some security-related actions, you must be aware that the constructor is not called.</span></span> <span data-ttu-id="0df42-140">特別值得一提的是，下列技巧將無法運作：</span><span class="sxs-lookup"><span data-stu-id="0df42-140">In particular, the following techniques do not work:</span></span>  
  
-   <span data-ttu-id="0df42-141">如果您嘗試透過將建構函式設為 internal 或 private，或是將 `LinkDemand` 新增至建構函式等方式來限制部分信任存取，上述這些方式都無法在部分信任環境中的還原序列化期間發揮作用。</span><span class="sxs-lookup"><span data-stu-id="0df42-141">If you try to restrict partial trust access by making the constructor internal or private, or by adding a `LinkDemand` to the constructor -- neither of these have any effect during deserialization under partial trust.</span></span>  
  
-   <span data-ttu-id="0df42-142">如果您撰寫的類別程式碼會假定該建構函式已經執行，則此類別可能會處於易遭利用的無效 internal 狀態。</span><span class="sxs-lookup"><span data-stu-id="0df42-142">If you code the class that assumes the constructor has run, the class may get into an invalid internal state that is exploitable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0df42-143">下列範例程式碼會示範名為 `Person` 且已由 <xref:System.Runtime.Serialization.DataContractSerializer> 序列化的型別。</span><span class="sxs-lookup"><span data-stu-id="0df42-143">The following example code shows a type named `Person` that is serialized by the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span> <span data-ttu-id="0df42-144"><xref:System.Runtime.Serialization.DataContractAttribute> 屬性會套用至類別，而 <xref:System.Runtime.Serialization.DataMemberAttribute> 會套用至成員，以便指示 <xref:System.Runtime.Serialization.DataContractSerializer> 哪些項目需要序列化。</span><span class="sxs-lookup"><span data-stu-id="0df42-144">The <xref:System.Runtime.Serialization.DataContractAttribute> attribute is applied to the class, and the <xref:System.Runtime.Serialization.DataMemberAttribute> is applied to members to instruct the <xref:System.Runtime.Serialization.DataContractSerializer> what to serialize.</span></span>  
  
 [!code-csharp[DataContractSerializer#0](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#0)]
 [!code-vb[DataContractSerializer#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="0df42-145">這個類別的執行個體都具備執行緒安全的實作執行個體使用時除外<see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />或<see cref="T:System.Runtime.Serialization.DataContractResolver" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0df42-145">Instances of this class are thread safe except when the instance is used with an implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> or <see cref="T:System.Runtime.Serialization.DataContractResolver" />.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.DataContractAttribute" />
    <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
    <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="0df42-146">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-146">The type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="0df42-147">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-147">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="0df42-148">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-148">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0df42-149">已序列化或還原序列化之執行個體的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-149">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-150">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-150">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0df42-151">下列範例會建立 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，該執行個體會指定要序列化或還原序列化的型別。</span><span class="sxs-lookup"><span data-stu-id="0df42-151">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize.</span></span>  
  
 [!code-csharp[DataContractSerializer#8](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#8)]
 [!code-vb[DataContractSerializer#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0df42-152">已序列化或還原序列化之執行個體的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-152">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="0df42-153">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-153">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the types that may be present in the object graph.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-154">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件，以及可能存在物件圖形中的已知型別集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-154">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type, and a collection of known types that may be present in the object graph.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0df42-155">下列範例會建立 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，該執行個體會指定要序列化或還原序列化的型別，以及可用於物件圖形中的已知型別集合。</span><span class="sxs-lookup"><span data-stu-id="0df42-155">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize and a collection of known types that can be used in the object graph.</span></span>  
  
 [!code-csharp[DataContractSerializer#9](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#9)]
 [!code-vb[DataContractSerializer#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Runtime.Serialization.DataContractSerializerSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Runtime.Serialization.DataContractSerializerSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Runtime::Serialization::DataContractSerializerSettings ^ settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="settings" Type="System.Runtime.Serialization.DataContractSerializerSettings" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0df42-156">要序列化或還原序列化之執行個體的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-156">The type of the instance to serialize or deserialize.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="0df42-157">序列化程式設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-157">The serializer settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-158">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別及設定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-158">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type and settings.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, string rootName, string rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string rootName, string rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::String ^ rootName, System::String ^ rootNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0df42-159">已序列化或還原序列化之執行個體的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-159">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="0df42-160">內含要序列化或還原序列化之內容的 XML 項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-160">The name of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="0df42-161">內含要序列化或還原序列化之內容的 XML 項目命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-161">The namespace of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-162">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以便序列化或還原序列化已指定型別的物件 (該型別會使用提供的 XML 根項目和命名空間)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-162">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type using the supplied XML root element and namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0df42-163">下列範例會建立 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，該執行個體會指定要序列化或還原序列化的型別，以及要在其中讀取或將 XML 文件寫入其中的 XML 名稱和命名空間。</span><span class="sxs-lookup"><span data-stu-id="0df42-163">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize as well as the XML name and namespace to read from or write to the XML document.</span></span>  
  
 [!code-csharp[DataContractSerializer#10](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#10)]
 [!code-vb[DataContractSerializer#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0df42-164">已序列化或還原序列化之執行個體的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-164">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="0df42-165">
            <see cref="T:System.Xml.XmlDictionaryString" />，其中包含內容的根項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-165">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element name of the content.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="0df42-166">
            <see cref="T:System.Xml.XmlDictionaryString" />，其中包含根項目的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-166">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the root element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-167">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以便序列化或還原序列化所指定型別的物件 (該型別會使用透過型別 <see cref="T:System.Xml.XmlDictionaryString" /> 之參數所指定的 XML 根項目和命名空間)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-167">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type using the XML root element and namespace specified through the parameters of type <see cref="T:System.Xml.XmlDictionaryString" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0df42-168">下列範例會建立 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，該執行個體會指定要序列化或還原序列化的型別，以及要在其中讀取或將 XML 文件寫入其中的 XML 名稱和命名空間 (相同於 <xref:System.Xml.XmlDictionaryString> 物件的處理方式)。</span><span class="sxs-lookup"><span data-stu-id="0df42-168">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize as well as the XML name and namespace (as <xref:System.Xml.XmlDictionaryString> objects) to read from or write to the XML document.</span></span>  
  
 [!code-csharp[DataContractSerializer#11](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#11)]
 [!code-vb[DataContractSerializer#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, string rootName, string rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string rootName, string rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::String ^ rootName, System::String ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0df42-169">已序列化或還原序列化之執行個體的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-169">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="0df42-170">內容的根項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-170">The root element name of the content.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="0df42-171">根項目的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-171">The namespace of the root element.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="0df42-172">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-172">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the types that may be present in the object graph.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-173">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-173">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="0df42-174">這個方法也會透過兩個字串參數來指定根 XML 項目和命名空間，以及可能存在於物件圖形內之已知型別的清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-174">This method also specifies the root XML element and namespace in two string parameters as well as a list of known types that may be present in the object graph.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0df42-175">下列範例會建立 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，該執行個體會指定要序列化或還原序列化的型別，以及要在其中讀取或將 XML 文件寫入其中的 XML 名稱和命名空間。</span><span class="sxs-lookup"><span data-stu-id="0df42-175">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize as well as the XML name and namespace to read from or write to the XML document.</span></span> <span data-ttu-id="0df42-176">此程式碼也會建立 <xref:System.Collections.Generic.IEnumerable%601> 的執行個體，以包含在序列化或還原序列化期間所使用的已知型別。</span><span class="sxs-lookup"><span data-stu-id="0df42-176">The code also creates an instance of a <xref:System.Collections.Generic.IEnumerable%601> to contain the known types used during serialization or deserialization.</span></span>  
  
 [!code-csharp[DataContractSerializer#12](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#12)]
 [!code-vb[DataContractSerializer#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0df42-177">已序列化或還原序列化之執行個體的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-177">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="0df42-178">
            <see cref="T:System.Xml.XmlDictionaryString" />，其中包含內容的根項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-178">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element name of the content.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="0df42-179">
            <see cref="T:System.Xml.XmlDictionaryString" />，其中包含根項目的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-179">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the root element.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="0df42-180">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的已知型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-180">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-181">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-181">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="0df42-182">這個方法也會透過兩個 <see cref="T:System.Xml.XmlDictionaryString" /> 參數來指定根 XML 項目和命名空間，以及可能存在於物件圖形內之已知型別的清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-182">This method also specifies the root XML element and namespace in two <see cref="T:System.Xml.XmlDictionaryString" /> parameters as well as a list of known types that may be present in the object graph.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0df42-183">下列範例會建立 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，該執行個體會指定要序列化或還原序列化的型別，以及要在其中讀取或將 XML 文件寫入其中的 XML 名稱和命名空間 (相同於 <xref:System.Xml.XmlDictionaryString> 物件的處理方式)。</span><span class="sxs-lookup"><span data-stu-id="0df42-183">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize as well as the XML name and namespace (as <xref:System.Xml.XmlDictionaryString> objects) to read from or write to the XML document.</span></span> <span data-ttu-id="0df42-184">此程式碼也會建立 <xref:System.Collections.Generic.IEnumerable%601> 的執行個體，以包含在序列化或還原序列化期間所使用的已知型別。</span><span class="sxs-lookup"><span data-stu-id="0df42-184">The code also creates an instance of a <xref:System.Collections.Generic.IEnumerable%601> to contain the known types used during serialization or deserialization.</span></span>  
  
 [!code-csharp[DataContractSerializer#13](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#13)]
 [!code-vb[DataContractSerializer#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0df42-185">已序列化或還原序列化之執行個體的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-185">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="0df42-186">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的已知型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-186">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="0df42-187">圖形中要序列化或還原序列化的最大項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-187">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
          <span data-ttu-id="0df42-188">預設為 <see cref="F:System.Int32.MaxValue" /> 屬性所傳回的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-188">The default is the value returned by the <see cref="F:System.Int32.MaxValue" /> property.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="0df42-189">如果要在序列化及還原序列化時略過型別延伸所提供的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-189">
              <see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="preserveObjectReferences">
          <span data-ttu-id="0df42-190">如果要使用非標準的 XML 建構來保留物件參考資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-190">
              <see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractSurrogate">
          <span data-ttu-id="0df42-191">
            <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 的實作，用來自訂序列化程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-191">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-192">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-192">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="0df42-193">這個方法也會指定可能存在物件圖形中之已知型別的清單，要序列化之圖形項目的最大數，要略過非預期資料的參數，是否要使用非標準的 XML 建構來保存圖形中的物件參考資料，以及自訂序列化的代理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-193">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, and a surrogate for custom serialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0df42-194">下列範例會建立會指定要序列化或還原序列化之型別的 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，並建立會包含要在序列化或還原序列化期間使用之已知型別的 <xref:System.Collections.Generic.IEnumerable%601> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="0df42-194">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize and an instance of a <xref:System.Collections.Generic.IEnumerable%601> to contain the known types used during serialization or deserialization.</span></span> <span data-ttu-id="0df42-195">程式碼也會設定`ignoreExtensionDataObject`和`preserveObjectReferences`參數`true`，並指定的實作<xref:System.Runtime.Serialization.IDataContractSurrogate>介面，以處理舊版型別 (不需要的型別<xref:System.Runtime.Serialization.DataContractAttribute>套用屬性)。</span><span class="sxs-lookup"><span data-stu-id="0df42-195">The code also sets the `ignoreExtensionDataObject` and `preserveObjectReferences` parameters to `true`, and specifies an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate> interface to handle legacy types (types that do not have the <xref:System.Runtime.Serialization.DataContractAttribute> attribute applied).</span></span> <span data-ttu-id="0df42-196">如需詳細資訊，請參閱<xref:System.Runtime.Serialization.IDataContractSurrogate>文件。</span><span class="sxs-lookup"><span data-stu-id="0df42-196">For more information, see the <xref:System.Runtime.Serialization.IDataContractSurrogate> documentation.</span></span>  
  
 [!code-csharp[DataContractSerializer#14](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#14)]
 [!code-vb[DataContractSerializer#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0df42-197">超過最大值的項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-197">The number of items exceeds the maximum value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
        <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
        <altmember cref="T:System.Runtime.Serialization.IDataContractSurrogate" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0df42-198">已序列化或還原序列化之執行個體的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-198">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="0df42-199">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的已知型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-199">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="0df42-200">圖形中要序列化或還原序列化的最大項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-200">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
          <span data-ttu-id="0df42-201">預設為 <see cref="F:System.Int32.MaxValue" /> 屬性所傳回的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-201">The default is the value returned by the <see cref="F:System.Int32.MaxValue" /> property.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="0df42-202">如果要在序列化及還原序列化時略過型別延伸所提供的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-202">
              <see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="preserveObjectReferences">
          <span data-ttu-id="0df42-203">如果要使用非標準的 XML 建構來保留物件參考資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-203">
              <see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractSurrogate">
          <span data-ttu-id="0df42-204">
            <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 的實作，用來自訂序列化程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-204">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span>
          </span>
        </param>
        <param name="dataContractResolver">
          <span data-ttu-id="0df42-205">
            <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 的實作，用來將 <see langword="xsi:type" /> 宣告對應至資料合約型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-205">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map <see langword="xsi:type" /> declarations to data contract types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-206">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-206">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="0df42-207">這個方法也會指定可能存在物件圖形中之已知型別的清單、要序列化之圖形項目的最大數、要略過非預期資料的參數、是否要使用非標準的 XML 建構來保存圖形中的物件參考資料、自訂序列化的代理，以及在執行階段對應 <see langword="xsi:type" /> 宣告的替代方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-207">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, and an alternative for mapping <see langword="xsi:type" /> declarations at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="0df42-208">這個方法不是適用於 Windows 市集應用程式。</span><span class="sxs-lookup"><span data-stu-id="0df42-208">This method is not available in Windows Store apps.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, string rootName, string rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string rootName, string rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::String ^ rootName, System::String ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0df42-209">已序列化或還原序列化之執行個體的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-209">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="0df42-210">內含要序列化或還原序列化之內容的 XML 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-210">The XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="0df42-211">內含要序列化或還原序列化之內容的 XML 項目命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-211">The namespace of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="0df42-212">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的已知型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-212">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="0df42-213">圖形中要序列化或還原序列化的最大項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-213">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="0df42-214">如果要在序列化及還原序列化時略過型別延伸所提供的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-214">
              <see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="preserveObjectReferences">
          <span data-ttu-id="0df42-215">如果要使用非標準的 XML 建構來保留物件參考資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-215">
              <see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractSurrogate">
          <span data-ttu-id="0df42-216">
            <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 的實作，用來自訂序列化程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-216">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-217">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-217">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="0df42-218">這個方法也會指定可能存在物件圖形中之已知型別的清單、要序列化之圖形項目的最大數、要略過非預期資料的參數、是否要使用非標準的 XML 建構來保存圖形中的物件參考資料、自訂序列化的代理，以及含有內容的 XML 項目和命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-218">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, and the XML element and namespace that contain the content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0df42-219">下列範例會建立會指定要序列化或還原序列化之型別的 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，並建立會包含要在還原序列化期間使用之 XML 項目、命名空間和 <xref:System.Collections.Generic.IEnumerable%601> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="0df42-219">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize, the root XML element and namespace, and an instance of a <xref:System.Collections.Generic.IEnumerable%601> that contains the types used during deserialization.</span></span> <span data-ttu-id="0df42-220">程式碼也會設定`ignoreExtensionDataObject`和`preserveObjectReferences`參數`true`，並指定的實作<xref:System.Runtime.Serialization.IDataContractSurrogate>介面，以處理舊版型別 (不需要的型別<xref:System.Runtime.Serialization.DataContractAttribute>套用屬性)。</span><span class="sxs-lookup"><span data-stu-id="0df42-220">The code also sets the `ignoreExtensionDataObject` and `preserveObjectReferences` parameters to `true`, and specifies an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate> interface to handle legacy types (types that do not have the <xref:System.Runtime.Serialization.DataContractAttribute> attribute applied).</span></span> <span data-ttu-id="0df42-221">如需詳細資訊，請參閱<xref:System.Runtime.Serialization.IDataContractSurrogate>文件。</span><span class="sxs-lookup"><span data-stu-id="0df42-221">For more information, see the <xref:System.Runtime.Serialization.IDataContractSurrogate> documentation.</span></span>  
  
 [!code-csharp[DataContractSerializer#15](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#15)]
 [!code-vb[DataContractSerializer#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0df42-222">超過最大值的項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-222">The number of items exceeds the maximum value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
        <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
        <altmember cref="T:System.Runtime.Serialization.IDataContractSurrogate" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0df42-223">已序列化或還原序列化之執行個體的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-223">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="0df42-224">指定內含要序列化或還原序列化之 XML 項目的 <see cref="T:System.Xml.XmlDictionaryString" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-224">The <see cref="T:System.Xml.XmlDictionaryString" /> that specifies the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="0df42-225">
            <see cref="T:System.Xml.XmlDictionaryString" />，會指定根的 XML 命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-225">The <see cref="T:System.Xml.XmlDictionaryString" /> that specifies the XML namespace of the root.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="0df42-226">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的已知型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-226">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="0df42-227">圖形中要序列化或還原序列化的最大項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-227">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="0df42-228">如果要在序列化及還原序列化時略過型別延伸所提供的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-228">
              <see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="preserveObjectReferences">
          <span data-ttu-id="0df42-229">如果要使用非標準的 XML 建構來保留物件參考資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-229">
              <see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractSurrogate">
          <span data-ttu-id="0df42-230">
            <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 的實作，用來自訂序列化程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-230">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-231">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-231">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="0df42-232">這個方法也會指定可能存在物件圖形中之已知型別的清單，要序列化之圖形項目的最大數，要略過非預期資料的參數，是否要使用非標準的 XML 建構來保存圖形中的物件參考資料，自訂序列化的代理，以及會指定其中含有內容之 XML 項目和命名空間的 <see cref="T:System.Xml.XmlDictionaryString" /> 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-232">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, and parameters of <see cref="T:System.Xml.XmlDictionaryString" /> that specify the XML element and namespace that contain the content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0df42-233">下列範例會建立會指定要序列化或還原序列化之型別的 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，並建立會包含要在還原序列化期間使用之 XML 項目、命名空間 (相同於 <xref:System.Xml.XmlDictionaryString> 參數的處理方式) 和 <xref:System.Collections.Generic.IEnumerable%601> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="0df42-233">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize, the root XML element and namespace (as <xref:System.Xml.XmlDictionaryString> parameters), and an instance of a <xref:System.Collections.Generic.IEnumerable%601> that contains the types used during deserialization.</span></span> <span data-ttu-id="0df42-234">程式碼也會設定`ignoreExtensionDataObject`和`preserveObjectReferences`參數`true`，並指定的實作<xref:System.Runtime.Serialization.IDataContractSurrogate>介面，以處理舊版型別 (不需要的型別<xref:System.Runtime.Serialization.DataContractAttribute>套用屬性)。</span><span class="sxs-lookup"><span data-stu-id="0df42-234">The code also sets the `ignoreExtensionDataObject` and `preserveObjectReferences` parameters to `true`, and specifies an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate> interface to handle legacy types (types that do not have the <xref:System.Runtime.Serialization.DataContractAttribute> attribute applied).</span></span> <span data-ttu-id="0df42-235">如需詳細資訊，請參閱<xref:System.Runtime.Serialization.IDataContractSurrogate>文件。</span><span class="sxs-lookup"><span data-stu-id="0df42-235">For more information, see the <xref:System.Runtime.Serialization.IDataContractSurrogate> documentation.</span></span>  
  
 [!code-csharp[DataContractSerializer#16](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#16)]
 [!code-vb[DataContractSerializer#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0df42-236">超過最大值的項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-236">The number of items exceeds the maximum value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
        <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.IDataContractSurrogate" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, string rootName, string rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string rootName, string rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::String ^ rootName, System::String ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0df42-237">已序列化或還原序列化之執行個體的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-237">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="0df42-238">內含要序列化或還原序列化之內容的 XML 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-238">The XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="0df42-239">內含要序列化或還原序列化之內容的 XML 項目命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-239">The namespace of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="0df42-240">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的已知型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-240">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="0df42-241">圖形中要序列化或還原序列化的最大項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-241">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="0df42-242">如果要在序列化及還原序列化時略過型別延伸所提供的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-242">
              <see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="preserveObjectReferences">
          <span data-ttu-id="0df42-243">如果要使用非標準的 XML 建構來保留物件參考資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-243">
              <see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractSurrogate">
          <span data-ttu-id="0df42-244">
            <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 的實作，用來自訂序列化程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-244">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span>
          </span>
        </param>
        <param name="dataContractResolver">
          <span data-ttu-id="0df42-245">
            <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 的實作，用來將 <see langword="xsi:type" /> 宣告對應至資料合約型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-245">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map <see langword="xsi:type" /> declarations to data contract types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-246">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-246">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="0df42-247">這個方法也會指定可能存在物件圖形中之已知型別的清單、要序列化之圖形項目的最大數、要略過非預期資料的參數、是否要使用非標準的 XML 建構來保存圖形中的物件參考資料、自訂序列化的代理、XML 項目和包含內容的命名空間，以及在執行階段對應 <see langword="xsi:type" /> 宣告的替代方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-247">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, the XML element and namespace that contains the content, and an alternative for mapping <see langword="xsi:type" /> declarations at run time.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0df42-248">已序列化或還原序列化之執行個體的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-248">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="0df42-249">內含要序列化或還原序列化之內容的 XML 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-249">The XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="0df42-250">內含要序列化或還原序列化之內容的 XML 項目命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-250">The namespace of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="0df42-251">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Type" />，其中包含可能存在物件圖形中的已知型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-251">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="0df42-252">圖形中要序列化或還原序列化的最大項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-252">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="0df42-253">如果要在序列化及還原序列化時略過型別延伸所提供的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-253">
              <see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="preserveObjectReferences">
          <span data-ttu-id="0df42-254">如果要使用非標準的 XML 建構來保留物件參考資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-254">
              <see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractSurrogate">
          <span data-ttu-id="0df42-255">
            <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 的實作，用來自訂序列化程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-255">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span>
          </span>
        </param>
        <param name="dataContractResolver">
          <span data-ttu-id="0df42-256">
            <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 的實作，用來將 <see langword="xsi:type" /> 宣告對應至資料合約型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-256">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map <see langword="xsi:type" /> declarations to data contract types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-257">初始化 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 類別的新執行個體，以序列化或還原序列化所指定型別的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-257">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="0df42-258">這個方法也會指定可能存在物件圖形中之已知型別的清單、要序列化之圖形項目的最大數、要略過非預期資料的參數、是否要使用非標準的 XML 建構來保存圖形中的物件參考資料、自訂序列化的代理、<see cref="T:System.Xml.XmlDictionaryString" /> 的參數 (會指定 XML 項目和包含內容的命名空間)，以及在執行階段對應 <see langword="xsi:type" /> 宣告的替代方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-258">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, parameters of <see cref="T:System.Xml.XmlDictionaryString" /> that specify the XML element and namespace that contains the content, and an alternative for mapping <see langword="xsi:type" /> declarations at run time.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContractResolver">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.DataContractResolver DataContractResolver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.DataContractResolver DataContractResolver" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContractResolver As DataContractResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::DataContractResolver ^ DataContractResolver { System::Runtime::Serialization::DataContractResolver ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.DataContractResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0df42-259">取得用來將 <see langword="xsi:type" /> 宣告動態對應至已知合約型別的元件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-259">Gets the component used to dynamically map <see langword="xsi:type" /> declarations to known contract types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0df42-260">
            <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 類別的實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-260">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0df42-261"><xref:System.Runtime.Serialization.DataContractResolver> 是使用 <xref:System.Runtime.Serialization.DataContractSerializer> 建構函式設定的。</span><span class="sxs-lookup"><span data-stu-id="0df42-261">The <xref:System.Runtime.Serialization.DataContractResolver> is set using a <xref:System.Runtime.Serialization.DataContractSerializer> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContractSurrogate">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.DataContractSurrogate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContractSurrogate As IDataContractSurrogate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::IDataContractSurrogate ^ DataContractSurrogate { System::Runtime::Serialization::IDataContractSurrogate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.IDataContractSurrogate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0df42-262">取得可以擴充序列化或還原序列化程序的代理型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-262">Gets a surrogate type that can extend the serialization or deserialization process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0df42-263">
            <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 類別的實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-263">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0df42-264"><xref:System.Runtime.Serialization.IDataContractSurrogate> 可用於自訂如何序列化及還原序列化某型別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="0df42-264">The <xref:System.Runtime.Serialization.IDataContractSurrogate> can be used to customize how instances of a type are serialized and deserialized.</span></span> <span data-ttu-id="0df42-265">例如，它可用來將不能序列化的舊版型別 (也就是尚未套用 <xref:System.Runtime.Serialization.DataContractAttribute> 屬性的型別) 加以序列化。</span><span class="sxs-lookup"><span data-stu-id="0df42-265">For example, it can be used to enable the serialization of legacy types that are not serializable, that is, types to which the <xref:System.Runtime.Serialization.DataContractAttribute> attribute has not been applied.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.IDataContractSurrogate" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreExtensionDataObject">
      <MemberSignature Language="C#" Value="public bool IgnoreExtensionDataObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreExtensionDataObject" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreExtensionDataObject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreExtensionDataObject { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0df42-266">取得值，這個值會指定當類別序列化或還原序列化時，是否略過類別延伸所提供的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-266">Gets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0df42-267">如果要省略延伸資料則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-267">
              <see langword="true" /> to omit the extension data; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0df42-268">如果已套用 <xref:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject%2A> 的類別也會實作 <xref:System.Runtime.Serialization.DataContractAttribute> 介面，這時便會使用 <xref:System.Runtime.Serialization.IExtensibleDataObject> 屬性。</span><span class="sxs-lookup"><span data-stu-id="0df42-268">The <xref:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject%2A> property is used when the class to which a <xref:System.Runtime.Serialization.DataContractAttribute> has been applied also implements the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface.</span></span> <span data-ttu-id="0df42-269">在這種情況下，進行讀取和寫入時，就會略過將在日後合約版本中新增的資料。</span><span class="sxs-lookup"><span data-stu-id="0df42-269">In this case, the data added in a future version of the contract is ignored on read and write.</span></span> <span data-ttu-id="0df42-270">如需詳細資訊，請參閱[向前相容資料合約](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md)。</span><span class="sxs-lookup"><span data-stu-id="0df42-270">For more information, see [Forward-Compatible Data Contracts](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.DataContractAttribute" />
        <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
        <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0df42-271">判斷讀取器是否置於可還原序列化的物件上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-271">Determines whether the reader is positioned on an object that can be deserialized.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public override bool IsStartObject (System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsStartObject(class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsStartObject (reader As XmlDictionaryReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsStartObject(System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="0df42-272">用於讀取 XML 資料流的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-272">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-273">判斷 <see cref="T:System.Xml.XmlDictionaryReader" /> 是否置於可還原序列化的物件上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-273">Determines whether the <see cref="T:System.Xml.XmlDictionaryReader" /> is positioned on an object that can be deserialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0df42-274">如果讀取器位於要讀取之資料流的開始項目，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-274">
              <see langword="true" /> if the reader is at the start element of the stream to read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0df42-275"><xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> 會判斷它是否可以在檢查物件是否置於 XML 項目時讀取該物件。</span><span class="sxs-lookup"><span data-stu-id="0df42-275">The <xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> determines whether it can read an object by checking that it is positioned on an XML element.</span></span> <span data-ttu-id="0df42-276">它也會檢查讀取器所在之 XML 項目的名稱和命名空間，並比較值與預期的名稱和命名空間。</span><span class="sxs-lookup"><span data-stu-id="0df42-276">It also examines the name and namespace of the XML element that the reader is positioned at and compares the values to the expected name and namespace.</span></span> <span data-ttu-id="0df42-277">預期的名稱和命名空間可以使用下列項目進行設定：傳入建構函式之型別的資料合約名稱和命名空間，或是傳入建構函式的 `rootName` 和 `rootNamespace` 值 (如果有的話)。</span><span class="sxs-lookup"><span data-stu-id="0df42-277">The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the `rootName` and `rootNamespace` values passed into the constructor (if present).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0df42-278">下列範例會使用 <xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> 屬性來判斷是否已找到資料的開始項目。</span><span class="sxs-lookup"><span data-stu-id="0df42-278">The following example uses the <xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> property to determine whether the start of the data has been found.</span></span>  
  
 [!code-csharp[DataContractSerializer#6](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#6)]
 [!code-vb[DataContractSerializer#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public override bool IsStartObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsStartObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsStartObject (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsStartObject(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="0df42-279">用來讀取 XML 資料流的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-279">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-280">判斷 <see cref="T:System.Xml.XmlReader" /> 是否置於可還原序列化的物件上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-280">Determines whether the <see cref="T:System.Xml.XmlReader" /> is positioned on an object that can be deserialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0df42-281">如果讀取器位於要讀取之資料流的開始項目，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-281">
              <see langword="true" /> if the reader is at the start element of the stream to read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KnownTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Type&gt; KnownTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Type&gt; KnownTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KnownTypes As ReadOnlyCollection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;Type ^&gt; ^ KnownTypes { System::Collections::ObjectModel::ReadOnlyCollection&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0df42-282">取得型別的集合，這些型別可能會存在於使用這個 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 執行個體所序列化的物件圖形中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-282">Gets a collection of types that may be present in the object graph serialized using this instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0df42-283">
            <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />，其中包含已當做已知型別傳入至 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 建構函式的預期型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-283">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains the expected types passed in as known types to the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> constructor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0df42-284"><xref:System.Runtime.Serialization.DataContractSerializer.KnownTypes%2A> 屬性會提供已用於序列化和還原序列化的一組已知型別。</span><span class="sxs-lookup"><span data-stu-id="0df42-284">The <xref:System.Runtime.Serialization.DataContractSerializer.KnownTypes%2A> property provides the set of known types that are used for serialization and deserialization.</span></span> <span data-ttu-id="0df42-285">例如，如果 <xref:System.Collections.Hashtable> 類別的執行個體包含 `Person` 類別的執行個體，請將 `Person` 型別新增至 <xref:System.Collections.Generic.List%601> 類別的執行個體，然後使用此執行個體來建構 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="0df42-285">For example, if an instance of the <xref:System.Collections.Hashtable> class contains instances of a `Person` class, add the `Person` type to an instance of the <xref:System.Collections.Generic.List%601> class and use the instance to construct an instance of the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span> <span data-ttu-id="0df42-286">如果您知道要新增至 <xref:System.Collections.Hashtable> 的其他型別，您就可以將這些型別新增至該集合。</span><span class="sxs-lookup"><span data-stu-id="0df42-286">If you know of other types to add to the <xref:System.Collections.Hashtable>, then add those types to the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="MaxItemsInObjectGraph">
      <MemberSignature Language="C#" Value="public int MaxItemsInObjectGraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxItemsInObjectGraph" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxItemsInObjectGraph As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxItemsInObjectGraph { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0df42-287">取得物件圖形中要序列化或還原序列化的最大項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-287">Gets the maximum number of items in an object graph to serialize or deserialize.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0df42-288">要序列化或還原序列化的最大項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-288">The maximum number of items to serialize or deserialize.</span>
          </span>
          <span data-ttu-id="0df42-289">預設值為 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-289">The default is <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0df42-290">這個屬性可在組態中設定，或是在程式碼中以命令方式設定。</span><span class="sxs-lookup"><span data-stu-id="0df42-290">This property can be set in configuration or imperatively in code.</span></span> <span data-ttu-id="0df42-291">若要在組態中設定，請將自訂行為加入到行為區段中，並且加入下列設定。</span><span class="sxs-lookup"><span data-stu-id="0df42-291">To set it in configuration, add a custom behavior to the behaviors section and add the following setting.</span></span>  
  
```  
<behaviors>    <behavior name="MyServiceBehavior">        <dataContractSerializer maxItemsInObjectGraph="3" />    </behavior></behaviors>  
```  
  
 <span data-ttu-id="0df42-292">若要在程式碼中以命令方式設定這個屬性，請找出服務的作業描述，然後取得作業行為，最後如下列程式碼所示設定該屬性。</span><span class="sxs-lookup"><span data-stu-id="0df42-292">To set this property imperatively in code find the operation description of the service, then get the operation behavior, finally set the property as shown in the following code.</span></span>  
  
```  
OperationDescription operation = host.Description.Endpoints[0].Contract.Operations.Find("MyOperationName");operation.Behaviors.Find<DataContractSerializerOperationBehavior>().MaxItemsInObjectGraph = 3;  
```  
  
 <span data-ttu-id="0df42-293"><xref:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph%2A> 屬性會指定序列化程式在單一 <xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A> 方法呼叫中，序列化或還原序列化的最大物件數。</span><span class="sxs-lookup"><span data-stu-id="0df42-293">The <xref:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph%2A> property specifies the maximum number of objects that the serializer serializes or deserializes in a single <xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A> method call.</span></span> <span data-ttu-id="0df42-294">(此方法一定會讀取一個根物件，但是這個物件可能會在其資料成員中又有其他物件。</span><span class="sxs-lookup"><span data-stu-id="0df42-294">(The method always reads one root object, but this object may have other objects in its data members.</span></span> <span data-ttu-id="0df42-295">這些物件可能又會有其他物件，依此類推)。預設值為 <xref:System.Int32.MaxValue>。</span><span class="sxs-lookup"><span data-stu-id="0df42-295">Those objects may have other objects, and so on.) The default is <xref:System.Int32.MaxValue>.</span></span> <span data-ttu-id="0df42-296">請注意，當序列化或還原序列化陣列時，每個陣列項目都視為個別物件。</span><span class="sxs-lookup"><span data-stu-id="0df42-296">Note that when serializing or deserializing arrays, every array entry counts as a separate object.</span></span> <span data-ttu-id="0df42-297">另外請注意，有些物件可能有大量記憶體表示，因此只靠這個配額可能仍無法防止阻絕服務攻擊。</span><span class="sxs-lookup"><span data-stu-id="0df42-297">Also, note that some objects may have a large memory representation and so this quota alone may not be sufficient to prevent Denial of Service attacks.</span></span> <span data-ttu-id="0df42-298">如需詳細資訊，請參閱[資料的安全性考量](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)。</span><span class="sxs-lookup"><span data-stu-id="0df42-298">For more information, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span> <span data-ttu-id="0df42-299">如果您需要將這個配額增加超過其預設值，您就必須在傳送端 (進行序列化) 和接收端 (進行還原序列化) 同時執行這項操作。</span><span class="sxs-lookup"><span data-stu-id="0df42-299">If you need to increase this quota beyond its default value, it is important to do so both on the sending (serializing) and receiving (deserializing) sides.</span></span> <span data-ttu-id="0df42-300">這個做法在讀取和寫入資料時均適用。</span><span class="sxs-lookup"><span data-stu-id="0df42-300">It applies both when reading and writing data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0df42-301">超過最大值的項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-301">The number of items exceeds the maximum value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PreserveObjectReferences">
      <MemberSignature Language="C#" Value="public bool PreserveObjectReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveObjectReferences" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreserveObjectReferences As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveObjectReferences { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0df42-302">取得值，這個值會指定是否使用非標準的 XML 建構來保留物件參考資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-302">Gets a value that specifies whether to use non-standard XML constructs to preserve object reference data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0df42-303">如果要保留參考，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-303">
              <see langword="true" /> to keep the references; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0df42-304">讀取 XML 資料流，然後傳回已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-304">Reads the XML stream and returns the deserialized object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="0df42-305">用來讀取 XML 資料流的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-305">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-306">使用 <see cref="T:System.Xml.XmlReader" /> 讀取 XML 資料流，然後傳回已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-306">Reads the XML stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0df42-307">已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-307">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlDictionaryReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlDictionaryReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlDictionaryReader, verifyObjectName As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlDictionaryReader ^ reader, bool verifyObjectName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="0df42-308">用來讀取 XML 資料流的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-308">The <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream.</span>
          </span>
        </param>
        <param name="verifyObjectName">
          <span data-ttu-id="0df42-309">如果要檢查物件的名稱是否對應到建構函式中所提供的根名稱值，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-309">
              <see langword="true" /> to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-310">使用 <see cref="T:System.Xml.XmlDictionaryReader" /> 讀取 XML 資料流並傳回已還原序列化的物件，同時指定是否要先確認物件名稱，再讀取其值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-310">Reads the XML stream with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0df42-311">已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-311">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0df42-312">下列範例會讀取 XML 文件，並還原序列化物件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="0df42-312">The following example reads an XML document and deserializes an instance of an object.</span></span>  
  
 [!code-csharp[DataContractSerializer#2](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#2)]
 [!code-vb[DataContractSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="0df42-313">當 <paramref name="verifyObjectName" /> 參數設定為 <see langword="true" />，而項目名稱和命名空間並未對應到建構函式中之設定值的情況下。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-313">The <paramref name="verifyObjectName" /> parameter is set to <see langword="true" />, and the element name and namespace do not correspond to the values set in the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlReader, verifyObjectName As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlReader ^ reader, bool verifyObjectName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="0df42-314">用來讀取 XML 資料流的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-314">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</span>
          </span>
        </param>
        <param name="verifyObjectName">
          <span data-ttu-id="0df42-315">如果要檢查物件的名稱是否對應到建構函式中所提供的根名稱值，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-315">
              <see langword="true" /> to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-316">使用 <see cref="T:System.Xml.XmlReader" /> 讀取 XML 資料流並傳回已還原序列化的物件，同時指定是否要先確認物件名稱，再讀取其值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-316">Reads the XML stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0df42-317">已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-317">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="0df42-318">當 <paramref name="verifyObjectName" /> 參數設定為 <see langword="true" />，而項目名稱和命名空間並未對應到建構函式中之設定值的情況下。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-318">The <paramref name="verifyObjectName" /> parameter is set to <see langword="true" />, and the element name and namespace do not correspond to the values set in the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public object ReadObject (System.Xml.XmlDictionaryReader reader, bool verifyObjectName, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ReadObject(class System.Xml.XmlDictionaryReader reader, bool verifyObjectName, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ReadObject(System::Xml::XmlDictionaryReader ^ reader, bool verifyObjectName, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="0df42-319">用於讀取內容的 XML 讀取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-319">The XML reader used to read the content.</span>
          </span>
        </param>
        <param name="verifyObjectName">
          <span data-ttu-id="0df42-320">
            <see langword="true" /> 表示驗證物件名稱；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-320">
              <see langword="true" /> to verify the object name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractResolver">
          <span data-ttu-id="0df42-321">
            <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 的實作，用來將 <see langword="xsi:type" /> 宣告對應至資料合約型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-321">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map <see langword="xsi:type" /> declarations to data contract types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-322">讀取 XML 文件或文件資料流，然後傳回已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-322">Reads an XML document or document stream and returns the deserialized object.</span>
          </span>
          <span data-ttu-id="0df42-323">這個方法包含一個參數 (指定要驗證的物件名稱是否已驗證)，以及在執行階段對應 <see langword="xsi:type" /> 宣告的解析程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-323">The method includes a parameter to specify whether the object name is verified is validated, and a resolver for mapping <see langword="xsi:type" /> declarations at runtime.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0df42-324">已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-324">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeReadOnlyTypes">
      <MemberSignature Language="C#" Value="public bool SerializeReadOnlyTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SerializeReadOnlyTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializeReadOnlyTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SerializeReadOnlyTypes { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0df42-325">取得值，指定是否序列化唯讀型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-325">Gets a value that specifies whether read-only types are serialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0df42-326">如果唯讀型別已序列化，則為 <see langword="true" />，如果所有型別已序列化，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-326">
              <see langword="true" /> if read-only types are serialized; <see langword="false" /> if all types are serialized.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEndObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0df42-327">使用指定的寫入器寫入結尾 XML 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-327">Writes the closing XML element using the specified writer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0df42-328">用於寫入資料流的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-328">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-329">使用 <see cref="T:System.Xml.XmlDictionaryWriter" /> 寫入結尾 XML 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-329">Writes the closing XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0df42-330">下列範例會建立要序列化的物件、<xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體和 <xref:System.Xml.XmlDictionaryWriter> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="0df42-330">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.DataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="0df42-331">這個範例使用 <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 方法，將物件資料寫入 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="0df42-331">The example uses the <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> methods to write the object data into the XML document.</span></span> <span data-ttu-id="0df42-332">發出這些呼叫相當於發出 <xref:System.Runtime.Serialization.DataContractSerializer.WriteObject%2A> 方法的單一呼叫。</span><span class="sxs-lookup"><span data-stu-id="0df42-332">Making these calls is equivalent to making a single call of the <xref:System.Runtime.Serialization.DataContractSerializer.WriteObject%2A> method.</span></span> <span data-ttu-id="0df42-333">例如，使用者可能在呼叫 <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A> 方法之後，另外發出這些呼叫來將額外的 XML 屬性插入 XML 中。</span><span class="sxs-lookup"><span data-stu-id="0df42-333">For example, a user might make the calls separately to insert additional XML attributes into the XML after calling the <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A> method.</span></span>  
  
 [!code-csharp[DataContractSerializer#7](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#7)]
 [!code-vb[DataContractSerializer#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="0df42-334">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-334">The type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="0df42-335">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-335">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="0df42-336">正在寫入的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-336">There is a problem with the instance being written.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0df42-337">用於寫入資料流的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-337">The <see cref="T:System.Xml.XmlWriter" /> used to write the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-338">使用 <see cref="T:System.Xml.XmlWriter" /> 寫入結尾 XML 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-338">Writes the closing XML element using an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="0df42-339">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-339">The type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="0df42-340">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-340">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="0df42-341">正在寫入的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-341">There is a problem with the instance being written.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0df42-342">將所有的物件資料 (起始 XML 項目、內容以及結尾項目) 寫入至 XML 文件或資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-342">Writes all the object data (starting XML element, content, and closing element) to an XML document or stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public override void WriteObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObject (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObject(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0df42-343">用於寫入 XML 文件或資料流的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-343">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="0df42-344">包含要寫入至資料流之資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-344">The object that contains the data to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-345">使用 <see cref="T:System.Xml.XmlWriter" />，將所有的物件資料 (起始 XML 項目、內容以及結尾項目) 寫入至 XML 文件或資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-345">Writes all the object data (starting XML element, content, and closing element) to an XML document or stream with an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="0df42-346">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-346">The type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="0df42-347">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-347">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="0df42-348">正在寫入的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-348">There is a problem with the instance being written.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public void WriteObject (System.Xml.XmlDictionaryWriter writer, object graph, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteObject(class System.Xml.XmlDictionaryWriter writer, object graph, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteObject(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0df42-349">XmlDictionaryWriter，用來將內容寫入至 XML 文件或資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-349">An XmlDictionaryWriter used to write the content to the XML document or stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="0df42-350">包含要寫入之內容的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-350">The object that contains the content to write.</span>
          </span>
        </param>
        <param name="dataContractResolver">
          <span data-ttu-id="0df42-351">
            <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 的實作，用來將 <see langword="xsi:type" /> 宣告對應至已知的資料合約。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-351">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> used to map <see langword="xsi:type" /> declarations to known data contracts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-352">使用指定的 XmlDictionaryWriter，將所有的物件資料 (起始 XML 項目、內容及封入項目) 寫入至 XML 文件或資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-352">Writes all the object data (starting XML element, content, and enclosing element) to an XML document or stream  using the specified XmlDictionaryWriter.</span>
          </span>
          <span data-ttu-id="0df42-353">此方法包括在執行階段對應 <see langword="xsi:type" /> 宣告的解析程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-353">The method includes a resolver for mapping <see langword="xsi:type" /> declarations at runtime.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteObjectContent">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0df42-354">使用指定的寫入器寫入不含包裝項目的 XML 內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-354">Writes the XML content without the wrapping element using the specified writer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public override void WriteObjectContent (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObjectContent(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObjectContent (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObjectContent(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0df42-355">用於寫入資料流的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-355">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="0df42-356">要寫入至資料流的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-356">The object to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-357">使用 <see cref="T:System.Xml.XmlDictionaryWriter" /> 寫入 XML 內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-357">Writes the XML content using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0df42-358">下列範例會建立要序列化的物件、<xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體和 <xref:System.Xml.XmlDictionaryWriter> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="0df42-358">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.DataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="0df42-359">這個範例使用 <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 方法，將物件資料寫入 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="0df42-359">The example uses the <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> methods to write the object data into the XML document.</span></span>  
  
 [!code-csharp[DataContractSerializer#7](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#7)]
 [!code-vb[DataContractSerializer#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="0df42-360">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-360">The type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="0df42-361">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-361">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="0df42-362">正在寫入的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-362">There is a problem with the instance being written.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public override void WriteObjectContent (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObjectContent(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObjectContent (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObjectContent(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0df42-363">用於寫入資料流的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-363">The <see cref="T:System.Xml.XmlWriter" /> used to write the stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="0df42-364">要寫入至資料流的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-364">The object to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-365">使用 <see cref="T:System.Xml.XmlWriter" /> 寫入 XML 內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-365">Writes the XML content using an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="0df42-366">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-366">The type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="0df42-367">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-367">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="0df42-368">正在寫入的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-368">There is a problem with the instance being written.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0df42-369">使用指定的寫入器寫入開頭 XML 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-369">Writes the opening XML element using the specified writer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0df42-370">用於寫入 XML 開始項目的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-370">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML start element.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="0df42-371">要寫入的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-371">The object to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-372">使用 <see cref="T:System.Xml.XmlDictionaryWriter" /> 寫入開頭 XML 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-372">Writes the opening XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0df42-373">下列範例會建立要序列化的物件、<xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體和 <xref:System.Xml.XmlDictionaryWriter> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="0df42-373">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.DataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="0df42-374">這個範例使用 <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 方法，將物件資料寫入 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="0df42-374">The example uses the <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> methods to write the object data into the XML document.</span></span>  
  
 [!code-csharp[DataContractSerializer#7](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#7)]
 [!code-vb[DataContractSerializer#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0df42-375">用於寫入 XML 開始項目的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-375">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML start element.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="0df42-376">要寫入的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-376">The object to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0df42-377">使用 <see cref="T:System.Xml.XmlWriter" /> 寫入開頭 XML 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0df42-377">Writes the opening XML element using an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>