<Type Name="XsdDataContractExporter" FullName="System.Runtime.Serialization.XsdDataContractExporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="38915ee397917af85ed6f5dd243799613e38260a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30489842" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XsdDataContractExporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XsdDataContractExporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.XsdDataContractExporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XsdDataContractExporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XsdDataContractExporter" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>允許將資料合約中使用的 .NET Framework 類型集合轉換成 XML 結構描述檔案 (.xsd)。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您已建立合併 Common Language Runtime (CLR) 型別表示之資料的 Web 服務，以及當您需要匯出其他 Web 服務要取用之每個型別的 XML 結構描述時，即可使用 <xref:System.Runtime.Serialization.XsdDataContractExporter> 類別。 也就是 <xref:System.Runtime.Serialization.XsdDataContractExporter> 會將 CLR 型別集合轉換成 XML 結構描述  (如需可以使用的類型的詳細資訊，請參閱[資料合約序列化程式所支援的型別](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)。)這樣一來，這些結構描述就可以透過 Web 服務描述語言 (Web Services Description Language，WSDL) 文件公開，提供需要與您的服務相互操作之其他使用者加以使用。  
  
 相反地，如果您要建立必須與現有 Web 服務相互操作的 Web 服務，則可使用 <xref:System.Runtime.Serialization.XsdDataContractImporter> 來轉換 XML 結構描述，並且建立可表示選定程式設計語言內資料的 CLR 型別。  
  
 <xref:System.Runtime.Serialization.XsdDataContractExporter> 會產生其中包含結構描述集合的 <xref:System.Xml.Schema.XmlSchemaSet> 物件。 透過 <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> 屬性，存取結構描述的集合。  
  
> [!NOTE]
>  為了快速產生其他 Web 服務可以取用的 XML 結構描述定義 (XSD) 檔案，此時要使用 <xref:System.Runtime.Serialization.XsdDataContractExporter>。  
  
## <a name="exporting-schemas-into-an-xmlschemaset"></a>將結構描述匯出至 XmlSchemaSet  
 若要建立其中包含 XML 結構描述檔案之 <xref:System.Xml.Schema.XmlSchemaSet> 類別的執行個體，您應該留意下列事項。  
  
 匯出的型別集合會記錄成為內部的資料合約集合。 因此您可以多次呼叫 <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> 方法，在不會降低效能的情況下將新型別加入結構描述集合中，因為只有新型別會新增至該集合。 在 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> 作業期間，現有的結構描述會跟新加入的結構描述進行比較。 如果這時發生衝突，就會擲回例外狀況。 通常在兩種型別使用相同的資料合約名稱，但是同一個 <xref:System.Runtime.Serialization.XsdDataContractExporter> 執行個體卻匯出不同的合約 (即不同的成員) 時，就會偵測到衝突。  
  
## <a name="using-the-exporter"></a>使用匯出工具  
 這個類別的建議使用方式如下：  
  
1.  使用其中一種 <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> 多載，即可判定是否可以匯出指定的型別或型別集合。 使用符合您個人需求的一種多載。  
  
2.  呼叫對應的 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> 方法。  
  
3.  從 <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> 屬性擷取結構描述。  
  
   
  
## Examples  
 下列程式碼範例會建立 <xref:System.Runtime.Serialization.XsdDataContractExporter> 的執行個體，然後呼叫 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> 方法。  
  
 [!code-csharp[XsdDataContractExporter#0](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractexporter/cs/overview.cs#0)]
 [!code-vb[XsdDataContractExporter#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractexporter/vb/overview.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdDataContractExporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdDataContractExporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdDataContractExporter (System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemas As XmlSchemaSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdDataContractExporter(System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <see cref="T:System.Xml.Schema.XmlSchemaSet" />，其中包含要匯出的結構描述。</param>
        <summary>使用指定的結構描述集合，初始化 <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您想要將新結構描述新增至現有的 <xref:System.Xml.Schema.XmlSchemaSet> 時，即可使用這個多載。 在使用這個多載建構 <xref:System.Runtime.Serialization.XsdDataContractExporter> 之後，請呼叫 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> 方法，將新型別新增至現有的集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanExport">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得值，這個值表示是否能夠匯出 Common Language Runtime (CLR) 類型 (或類型集合)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 並不是所有的 CLR 型別都能夠用在資料合約中。 如需序列化項目的詳細資訊，請參閱[資料合約序列化程式所支援的型別](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; assemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Collections.Generic.ICollection`1&lt;class System.Reflection.Assembly&gt; assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExport (assemblies As ICollection(Of Assembly)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(System::Collections::Generic::ICollection&lt;System::Reflection::Assembly ^&gt; ^ assemblies);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblies" Type="System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="assemblies">
          <see cref="T:System.Reflection.Assembly" /> 的 <see cref="T:System.Collections.Generic.ICollection`1" />，其中包含具有要匯出之類型的組件。</param>
        <summary>取得值，這個值表示是否能夠匯出包含在組件集合中的 Common Language Runtime (CLR) 類型集合。</summary>
        <returns>
          如果能夠匯出類型，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (System.Collections.Generic.ICollection&lt;Type&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExport (types As ICollection(Of Type)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(System::Collections::Generic::ICollection&lt;Type ^&gt; ^ types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.ICollection&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="types">
          <see cref="T:System.Collections.Generic.ICollection`1" />，其中包含要匯出的指定類型。</param>
        <summary>取得值，這個值表示是否能夠匯出包含在 <see cref="T:System.Collections.Generic.ICollection`1" /> 中的 Common Language Runtime (CLR) 類型集合。</summary>
        <returns>
          如果能夠匯出類型，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要匯出的 <see cref="T:System.Type" />。</param>
        <summary>取得值，這個值表示是否能夠匯出指定的 Common Language Runtime (CLR) 類型。</summary>
        <returns>
          如果能夠匯出類型，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例會在呼叫 <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%28System.Type%29> 方法之前先呼叫 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> 方法。  
  
 [!code-csharp[XsdDataContractExporter#1](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractexporter/cs/overview.cs#1)]
 [!code-vb[XsdDataContractExporter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractexporter/vb/overview.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Export">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將 Common Language Runtime (CLR) 類型或類型集合轉換成 XML 結構描述集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 建議做法是使用其中一個 <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> 多載來判定是否能夠匯出指定的型別或型別集合。  
  
 在呼叫 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> 方法後，從 <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> 屬性擷取結構描述。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; assemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Collections.Generic.ICollection`1&lt;class System.Reflection.Assembly&gt; assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Export (assemblies As ICollection(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(System::Collections::Generic::ICollection&lt;System::Reflection::Assembly ^&gt; ^ assemblies);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblies" Type="System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="assemblies">
          <see cref="T:System.Collections.Generic.ICollection`1" /> (屬於 <see cref="T:System.Reflection.Assembly" />)，其中包含要匯出的類型。</param>
        <summary>轉換包含在指定組件集合中的類型。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assemblies" /> 引數為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">在集合中的 <see cref="T:System.Reflection.Assembly" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (System.Collections.Generic.ICollection&lt;Type&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Export (types As ICollection(Of Type))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(System::Collections::Generic::ICollection&lt;Type ^&gt; ^ types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.ICollection&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="types">
          <see cref="T:System.Collections.Generic.ICollection`1" /> (屬於 <see cref="T:System.Type" />)，其中包含要匯出的類型。</param>
        <summary>轉換已傳遞到這個方法之 <see cref="T:System.Collections.Generic.ICollection`1" /> 中所包含的類型。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="types" /> 引數為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">在集合中的類型為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要轉換成 XML 結構描述的 <see cref="T:System.Type" />。</param>
        <summary>將指定的 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 類型轉換成 XML 結構描述定義語言 (XSD) 結構描述。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫 <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A>，即可判定是否能夠匯出型別。 在呼叫 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> 方法後，即可透過 <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> 屬性擷取結構描述。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> 引數為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRootElementName">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName GetRootElementName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName GetRootElementName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ GetRootElementName(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要查詢的 <see cref="T:System.Type" />。</param>
        <summary>傳回 <see cref="T:System.Type" /> 的最上層名稱和命名空間。</summary>
        <returns>
          <see cref="T:System.Xml.XmlQualifiedName" />，表示這個 <see cref="T:System.Type" /> 的最上層名稱和命名空間，而這個類型會在進行寫入這個物件時被寫入至資料流。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> 引數為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaType">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaType GetSchemaType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaType GetSchemaType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaType ^ GetSchemaType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要傳回結構描述的類型。</param>
        <summary>傳回指定類型的 XML 結構描述類型。</summary>
        <returns>
          <see cref="T:System.Xml.Schema.XmlSchemaType" />，其中包含 XML 結構描述。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法的主要用途是允許在 XML 結構描述中提供匿名類型。 因為匿名型別沒有合約名稱和命名空間，所以不能使用 <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> 進行查閱。 這個方法會傳回這種型別的 <xref:System.Xml.Schema.XmlSchemaType> 定義。 對於 <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> 方法傳回有效名稱的類型，這個方法會傳回 `null`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> 引數為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTypeName">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName GetSchemaTypeName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName GetSchemaTypeName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ GetSchemaTypeName(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">已匯出的 <see cref="T:System.Type" />。</param>
        <summary>傳回 <see cref="T:System.Type" /> 的合約名稱以及合約命名空間 (Namespace)。</summary>
        <returns>
          <see cref="T:System.Xml.XmlQualifiedName" />，表示類型的合約名稱及其命名空間。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> 引數為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ExportOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ExportOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.XsdDataContractExporter.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As ExportOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ExportOptions ^ Options { System::Runtime::Serialization::ExportOptions ^ get(); void set(System::Runtime::Serialization::ExportOptions ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ExportOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Runtime.Serialization.ExportOptions" />，其中包含能夠針對匯出作業進行設定的選項。</summary>
        <value>
          <see cref="T:System.Runtime.Serialization.ExportOptions" />，其中包含用來自訂如何將型別匯出至結構描述的選項。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得已匯出之 XML 結構描述的集合。</summary>
        <value>
          <see cref="T:System.Xml.Schema.XmlSchemaSet" />，其中包含在呼叫 <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" /> 方法後，從 Common Language Runtime (CLR) 型別集合轉換來的結構描述。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>