<Type Name="FormatterServices" FullName="System.Runtime.Serialization.FormatterServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d2ae80cd23f4d7060b2ae0a0dc698f868c1d40fa" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48635156" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FormatterServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed FormatterServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.FormatterServices" />
  <TypeSignature Language="VB.NET" Value="Public Class FormatterServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormatterServices abstract sealed" />
  <TypeSignature Language="F#" Value="type FormatterServices = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供靜態方法，協助序列化 (Serialization) <see cref="T:System.Runtime.Serialization.Formatter" /> 的實作。 這個類別無法被繼承。</summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Runtime.Serialization.Formatter" />
    <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">XML 和 SOAP 序列化</related>
  </Docs>
  <Members>
    <Member MemberName="CheckTypeSecurity">
      <MemberSignature Language="C#" Value="public static void CheckTypeSecurity (Type t, System.Runtime.Serialization.Formatters.TypeFilterLevel securityLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckTypeSecurity(class System.Type t, valuetype System.Runtime.Serialization.Formatters.TypeFilterLevel securityLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CheckTypeSecurity (t As Type, securityLevel As TypeFilterLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CheckTypeSecurity(Type ^ t, System::Runtime::Serialization::Formatters::TypeFilterLevel securityLevel);" />
      <MemberSignature Language="F#" Value="static member CheckTypeSecurity : Type * System.Runtime.Serialization.Formatters.TypeFilterLevel -&gt; unit" Usage="System.Runtime.Serialization.FormatterServices.CheckTypeSecurity (t, securityLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="securityLevel" Type="System.Runtime.Serialization.Formatters.TypeFilterLevel" />
      </Parameters>
      <Docs>
        <param name="t">要檢查還原序列化能力的 <see cref="T:System.Type" />。</param>
        <param name="securityLevel">
          <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> 屬性值。</param>
        <summary>判斷 <see cref="T:System.Type" /> 屬性設為 <see langword="Low" /> 時是否可還原序列化指定的 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法來判斷是否指定的型別可為已還原序列化的時機<xref:System.Runtime.Serialization.Formatters.TypeFilterLevel>屬性設定為`Low`。  
  
 .NET framework 遠端處理提供的自動還原序列化時，兩個層級<xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low>和<xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full>。 <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low> 可以協助防止還原序列化的最基本的遠端處理功能相關聯的型別還原序列化攻擊。 <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full> 還原序列化層級支援所有型別的自動還原序列化 (遠端處理在所有情況下都支援這些型別)。 如需有關.net Framework 遠端處理型別<xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low>並<xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full>支援，請參閱[.NET Framework 遠端處理中的自動還原序列化](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/5dxse167(v=vs.100))。  
  
   
  
## Examples  
 此範例示範如何使用<xref:System.Runtime.Serialization.FormatterServices>類別來序列化或還原序列化的物件的基底類別未實作<xref:System.Runtime.Serialization.ISerializable>但衍生的類別。  
  
 [!code-cpp[FormatterServices#1](~/samples/snippets/cpp/VS_Snippets_Remoting/FormatterServices/cpp/FormatterServices.cpp#1)]
 [!code-csharp[FormatterServices#1](~/samples/snippets/csharp/VS_Snippets_Remoting/FormatterServices/CS/FormatterServices.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <paramref name="t" /> 參數為進階型別，而且在 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> 屬性設為 <see langword="Low" /> 時無法還原序列化。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/5dxse167(v=vs.100)">.NET Framework 遠端處理中的自動還原序列化</related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public static object[] GetObjectData (object obj, System.Reflection.MemberInfo[] members);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetObjectData(object obj, class System.Reflection.MemberInfo[] members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectData (obj As Object, members As MemberInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetObjectData(System::Object ^ obj, cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ members);" />
      <MemberSignature Language="F#" Value="static member GetObjectData : obj * System.Reflection.MemberInfo[] -&gt; obj[]" Usage="System.Runtime.Serialization.FormatterServices.GetObjectData (obj, members)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="members" Type="System.Reflection.MemberInfo[]" />
      </Parameters>
      <Docs>
        <param name="obj">寫入至格式子 (Formatter) 的物件。</param>
        <param name="members">要從物件擷取的成員。</param>
        <summary>從指定物件擷取資料，並將它傳回為物件陣列。</summary>
        <returns>
          <see cref="T:System.Object" /> 的陣列，包含儲存於 <paramref name="members" /> 以及與 <paramref name="obj" /> 相關聯的資料。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 針對每個提供的成員`members`陣列<xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A>方法會擷取與相關聯的值`obj`物件，並傳回它。 傳回陣列的長度是相同的長度`members`陣列。  
  
   
  
## Examples  
 下列範例會建立書籍類別的執行個體，並設定執行個體上的欄位值。 此程式碼，然後取得類型資訊使用<xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A>方法。 程式碼會將執行個體資料複製到物件陣列使用<xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A>方法。 使用建立類別的新初始化執行個體<xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A>方法。 最後，從第一個執行個體的資料會複製到第二個執行個體使用<xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A>方法。  
  
 [!code-csharp[FormatterServices_PopulateObjects#1](~/samples/snippets/csharp/VS_Snippets_Remoting/FormatterServices_PopulateObjects/cs/Populate.cs#1)]
 [!code-vb[FormatterServices_PopulateObjects#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/FormatterServices_PopulateObjects/vb/Populate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="obj" /> 或 <paramref name="members" /> 參數為 <see langword="null" />。  
  
<paramref name="members" /> 的項目是 <see langword="null" />。</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <paramref name="members" /> 的元素不表示欄位。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">提供序列化服務。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />， <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="GetSafeUninitializedObject">
      <MemberSignature Language="C#" Value="public static object GetSafeUninitializedObject (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetSafeUninitializedObject(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetSafeUninitializedObject(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetSafeUninitializedObject : Type -&gt; obj" Usage="System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要建立的物件類型。</param>
        <summary>建立指定物件型別的新執行個體。</summary>
        <returns>指定型別的零位調整物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為物件的新執行個體初始化為零，而且沒有建構函式會執行，該物件可能代表被視為有效的該物件的狀態。 <xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> 應該只用於還原序列化時使用者想要立即填入所有欄位。 因為建立不可變的類型的空執行個體要不處理任何用途，它不會建立未初始化的字串。  
  
 <xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> 將所有類別層級[連結要求](~/docs/framework/misc/link-demands.md)要[需求](http://msdn.microsoft.com/library/e5283e28-2366-4519-b27d-ef5c1ddc1f48)以確保所有直接和間接呼叫端有要求指定的權限。 使用<xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A>以從部分信任的來源還原序列化時，增加的安全性層級。 為了達到最佳效能，在完全信任情況下，使用<xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> 參數為 <see langword="null" />。</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <paramref name="type" /> 參數不是有效的 Common Language Runtime 型別。</exception>
        <exception cref="T:System.Security.SecurityException">呼叫端沒有必要的權限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">提供序列化服務。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />， <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializableMembers">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回特定類別的所有可序列化成員。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializableMembers">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo[] GetSerializableMembers (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo[] GetSerializableMembers(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetSerializableMembers(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetSerializableMembers : Type -&gt; System.Reflection.MemberInfo[]" Usage="System.Runtime.Serialization.FormatterServices.GetSerializableMembers type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">將序列化的型別。</param>
        <summary>為指定 <see cref="T:System.Type" /> 的類別取得所有可序列化成員。</summary>
        <returns>非暫時性、非靜態成員之 <see cref="T:System.Reflection.MemberInfo" /> 型別的陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，可序列化類別的成員會非暫時性、 非靜態成員，例如欄位和屬性。 若要包含在內，屬性必須同時有 getter 和 setter。 類別若實作<xref:System.Runtime.Serialization.ISerializable>介面，或已序列化 surrogate 不需要序列化所有這些成員，或可序列化的其他成員。  

因為`GetSerializableMembers`方法呼叫<xref:System.Type.GetFields%2A?displayProperty=nameWithType>方法，它不會傳回欄位以特定順序，例如依字母順序或依宣告順序。 您的程式碼不得相依於傳回欄位的順序。  
   
## Examples  
 下列範例會呼叫<xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A>方法的實作<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A?displayProperty=nameWithType>方法。   
  
 [!code-cpp[FormatterServices#2](~/samples/snippets/cpp/VS_Snippets_Remoting/FormatterServices/cpp/FormatterServices.cpp#2)]
 [!code-csharp[FormatterServices#2](~/samples/snippets/csharp/VS_Snippets_Remoting/FormatterServices/CS/FormatterServices.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> 參數為 <see langword="null" />。</exception>
        <exception cref="T:System.Security.SecurityException">呼叫端沒有必要的權限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">提供序列化服務。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />， <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</permission>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">XML 和 SOAP 序列化</related>
      </Docs>
    </Member>
    <Member MemberName="GetSerializableMembers">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo[] GetSerializableMembers (Type type, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo[] GetSerializableMembers(class System.Type type, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetSerializableMembers(Type ^ type, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="static member GetSerializableMembers : Type * System.Runtime.Serialization.StreamingContext -&gt; System.Reflection.MemberInfo[]" Usage="System.Runtime.Serialization.FormatterServices.GetSerializableMembers (type, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="type">將序列化或複製的型別。</param>
        <param name="context">其中發生序列化的內容。</param>
        <summary>為指定 <see cref="T:System.Type" /> 的類別，並在所提供的 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 中，取得所有可序列化成員。</summary>
        <returns>非暫時性、非靜態成員之 <see cref="T:System.Reflection.MemberInfo" /> 型別的陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，可序列化類別的成員會非暫時性、 非靜態成員，例如欄位和屬性。 若要包含在內，屬性必須同時有 getter 和 setter。 類別若實作<xref:System.Runtime.Serialization.ISerializable>或已序列化 surrogate 不需要序列化所有這些成員，或可序列化的其他成員。  
  
如果`context`包含<xref:System.Runtime.Serialization.StreamingContextStates.Clone?displayProperty=nameWithType>列舉值，暫時性欄位也會包含在<xref:System.Reflection.MemberInfo>這個方法所傳回的陣列。  

因為`GetSerializableMembers`方法呼叫<xref:System.Type.GetFields%2A?displayProperty=nameWithType>方法，它不會傳回欄位以特定順序，例如依字母順序或依宣告順序。 您的程式碼不得相依於傳回欄位的順序。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> 參數為 <see langword="null" />。</exception>
        <exception cref="T:System.Security.SecurityException">呼叫端沒有必要的權限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">提供序列化服務。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />， <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</permission>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="T:System.Reflection.MemberInfo" />
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">XML 和 SOAP 序列化</related>
      </Docs>
    </Member>
    <Member MemberName="GetSurrogateForCyclicalReference">
      <MemberSignature Language="C#" Value="public static System.Runtime.Serialization.ISerializationSurrogate GetSurrogateForCyclicalReference (System.Runtime.Serialization.ISerializationSurrogate innerSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Serialization.ISerializationSurrogate GetSurrogateForCyclicalReference(class System.Runtime.Serialization.ISerializationSurrogate innerSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSurrogateForCyclicalReference (innerSurrogate As ISerializationSurrogate) As ISerializationSurrogate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Serialization::ISerializationSurrogate ^ GetSurrogateForCyclicalReference(System::Runtime::Serialization::ISerializationSurrogate ^ innerSurrogate);" />
      <MemberSignature Language="F#" Value="static member GetSurrogateForCyclicalReference : System.Runtime.Serialization.ISerializationSurrogate -&gt; System.Runtime.Serialization.ISerializationSurrogate" Usage="System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference innerSurrogate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISerializationSurrogate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="innerSurrogate" Type="System.Runtime.Serialization.ISerializationSurrogate" />
      </Parameters>
      <Docs>
        <param name="innerSurrogate">指定的代理。</param>
        <summary>傳回指定之 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> 的序列化代理。</summary>
        <returns>指定 <paramref name="innerSurrogate" /> 的 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromAssembly">
      <MemberSignature Language="C#" Value="public static Type GetTypeFromAssembly (System.Reflection.Assembly assem, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetTypeFromAssembly(class System.Reflection.Assembly assem, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeFromAssembly (assem As Assembly, name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetTypeFromAssembly(System::Reflection::Assembly ^ assem, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetTypeFromAssembly : System.Reflection.Assembly * string -&gt; Type" Usage="System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly (assem, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assem" Type="System.Reflection.Assembly" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assem">您要查詢物件的所在組件。</param>
        <param name="name">物件的名稱。</param>
        <summary>在所提供的 <see cref="T:System.Type" /> 中查詢指定物件的 <see cref="T:System.Reflection.Assembly" />。</summary>
        <returns>具名物件的 <see cref="T:System.Type" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assem" /> 參數為 <see langword="null" />。</exception>
        <exception cref="T:System.Security.SecurityException">呼叫端沒有必要的權限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">提供序列化服務。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />， <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">供擷取的反映類型的成員，不會顯示的資訊。 關聯的列舉型別：<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation" />。</permission>
        <altmember cref="M:System.Reflection.Assembly.GetType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetUninitializedObject">
      <MemberSignature Language="C#" Value="public static object GetUninitializedObject (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetUninitializedObject(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetUninitializedObject(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetUninitializedObject : Type -&gt; obj" Usage="System.Runtime.Serialization.FormatterServices.GetUninitializedObject type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要建立的物件類型。</param>
        <summary>建立指定物件型別的新執行個體。</summary>
        <returns>指定型別的零位調整物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為物件的新執行個體初始化為零，而且沒有建構函式會執行，該物件可能代表被視為有效的該物件的狀態。 目前的方法應該僅用於還原序列化時使用者想要立即填入所有欄位。 因為建立不可變的類型的空執行個體要不處理任何用途，它不會建立未初始化的字串。  
  
> [!NOTE]
>  您無法使用<xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A>方法用來建立衍生自型別的執行個體<xref:System.ContextBoundObject>類別。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> 參數為 <see langword="null" />。</exception>
        <exception cref="T:System.Security.SecurityException">呼叫端沒有必要的權限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">提供序列化服務。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />， <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="PopulateObjectMembers">
      <MemberSignature Language="C#" Value="public static object PopulateObjectMembers (object obj, System.Reflection.MemberInfo[] members, object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object PopulateObjectMembers(object obj, class System.Reflection.MemberInfo[] members, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PopulateObjectMembers (obj As Object, members As MemberInfo(), data As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PopulateObjectMembers(System::Object ^ obj, cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ members, cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="static member PopulateObjectMembers : obj * System.Reflection.MemberInfo[] * obj[] -&gt; obj" Usage="System.Runtime.Serialization.FormatterServices.PopulateObjectMembers (obj, members, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="members" Type="System.Reflection.MemberInfo[]" />
        <Parameter Name="data" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">要填入的物件。</param>
        <param name="members">
          <see cref="T:System.Reflection.MemberInfo" /> 的陣列，描述要填入哪些欄位和屬性。</param>
        <param name="data">
          <see cref="T:System.Object" /> 的陣列，指定要填入每個欄位和屬性的值。</param>
        <summary>將取自物件資料陣列每個欄位的值填入指定物件。</summary>
        <returns>新填入的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果中的項目`data`已`null`，<xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A>不寫入任何內容至該欄位。  
  
   
  
## Examples  
 下列範例會建立書籍類別的執行個體，並設定執行個體上的欄位值。 此程式碼，然後取得類型資訊使用<xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A>方法。 程式碼會將執行個體資料複製到物件陣列使用<xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A>方法。 使用建立類別的新初始化執行個體<xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A>方法。 最後，從第一個執行個體的資料會複製到第二個執行個體使用<xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A>方法。  
  
 [!code-csharp[FormatterServices_PopulateObjects#1](~/samples/snippets/csharp/VS_Snippets_Remoting/FormatterServices_PopulateObjects/cs/Populate.cs#1)]
 [!code-vb[FormatterServices_PopulateObjects#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/FormatterServices_PopulateObjects/vb/Populate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="obj" />、<paramref name="members" /> 或 <paramref name="data" /> 參數是 <see langword="null" />。  
  
<paramref name="members" /> 的項目是 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="members" /> 的長度不符合 <paramref name="data" /> 的長度。</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <paramref name="members" /> 的元素不是 <see cref="T:System.Reflection.FieldInfo" /> 的執行個體。</exception>
        <exception cref="T:System.Security.SecurityException">呼叫端沒有必要的權限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">提供序列化服務。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />， <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</permission>
      </Docs>
    </Member>
  </Members>
</Type>