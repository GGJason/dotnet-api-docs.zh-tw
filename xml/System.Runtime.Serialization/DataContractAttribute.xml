<Type Name="DataContractAttribute" FullName="System.Runtime.Serialization.DataContractAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="68ea80c38e3f7529c4550f89cd04e9e20f61612c" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56348913" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.DataContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DataContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定定義或實作資料合約的型別，可由序列化程式 (例如 <see cref="T:System.Runtime.Serialization.DataContractSerializer" />) 加以序列化。 型別作者一定要定義型別的資料合約，才能讓型別能夠進行序列化。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 將 <xref:System.Runtime.Serialization.DataContractAttribute> 屬性套用至 <xref:System.Runtime.Serialization.DataContractSerializer> 在序列化 (Serialization) 和還原序列化 (Deserialization) 作業中所使用的型別 (類別、結構或列舉)。 如果您傳送或接收訊息，可以使用 Windows Communication Foundation (WCF) 基礎結構時，您也應該套用<xref:System.Runtime.Serialization.DataContractAttribute>任何類別負責保存和管理訊息中傳送的資料。 如需有關資料合約的詳細資訊，請參閱[Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md)。  
  
 您也必須將 <xref:System.Runtime.Serialization.DataMemberAttribute> 套用至負責保存您要序列化之值的任何欄位、屬性或事件。 透過套用 <xref:System.Runtime.Serialization.DataContractAttribute>，您便可以明確地讓 <xref:System.Runtime.Serialization.DataContractSerializer> 能夠序列化和還原序列化資料。  
  
> [!CAUTION]
>  您可以將 <xref:System.Runtime.Serialization.DataMemberAttribute> 套用至私用欄位。 請注意，此欄位 (即使它是私用欄位) 傳回的資料會進行序列化和還原序列化，因此可能會遭到惡意使用者或處理序的檢視或攔截。  
  
 如需資料合約的詳細資訊，請參閱主題中列出[Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md)。  
  
## <a name="data-contracts"></a>資料合約  
 A*資料合約*是一組欄位名稱和資料類型的每個欄位的抽象描述。 資料合約存在於任何單一實作之外，以便讓不同平台上的服務能夠相互操作。 只要在服務之間傳遞的資料符合相同的合約，所有服務就能夠處理該份資料。 這項處理，也就是*鬆散耦合系統*。 資料合約也類似一種介面，而在這種介面中，合約會指定資料必須如何傳遞才可讓應用程式加以處理。 例如，資料合約可能會要求名為 "Person" 並包含兩個名稱分別為 "FirstName" 和 "LastName" 之文字欄位的資料型別。 若要建立資料合約，請將 <xref:System.Runtime.Serialization.DataContractAttribute> 套用至類別，並將 <xref:System.Runtime.Serialization.DataMemberAttribute> 套用至必須進行序列化的任何欄位或屬性。 當完成序列化之後，資料就會符合已在該型別中隱含內建的資料合約。  
  
> [!NOTE]
>  就繼承行為來看，資料合約與實際的介面有很大的不同。 介面是繼承自任何衍生的型別。 當您將 <xref:System.Runtime.Serialization.DataContractAttribute> 套用至基底類別時，衍生的型別並不會繼承屬性或行為。 但是，如果衍生的型別擁有資料合約，該基底類別的資料成員就會進行序列化。 但是您必須將 <xref:System.Runtime.Serialization.DataMemberAttribute> 套用至衍生類別的新成員，才能讓這些成員進行序列化。  
  
## <a name="xml-schema-documents-and-the-svcutil-tool"></a>XML 結構描述文件和 SvcUtil 工具  
 如果您要與其他服務交換資料，就必須描述資料合約。 若是最新版本的 <xref:System.Runtime.Serialization.DataContractSerializer>，則可以使用 XML 結構描述來定義資料合約  (可以使用其他的中繼資料/描述形式來達成相同目的)。若要從您的應用程式中建立 XML 結構描述，請使用[ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)具有 **/dconly**命令列選項。 根據預設，如果工具的輸入項目是組件時，工具就會產生 XML 結構描述集合，而此集合會定義在該組件中找到的所有資料合約型別。 相反地，您也可以使用 Svcutil.exe 工具來建立符合 XML 結構描述需求的 Visual Basic 或 C# 類別定義，而這些結構描述會使用能夠透過資料合約表示的建構。 在此情況下， **/dconly**不需要命令列選項。  
  
 根據預設，如果 Svcutil.exe 工具的輸入項目是 XML 結構描述，工具就會建立類別集合。 如果您檢查這些類別，您就會發現此時已套用了 <xref:System.Runtime.Serialization.DataContractAttribute>。 您可以使用這些類別來建立新的應用程式，以便處理必須與其他服務交換的資料。  
  
 您也可以執行此工具，針對傳回 Web 服務描述語言 (WSDL) 文件，以自動產生的程式碼和組態，以建立 Windows Communication Foundation (WCF) 用戶端的端點。 所產生的程式碼會包含以 <xref:System.Runtime.Serialization.DataContractAttribute> 標記的型別。  
  
## <a name="reusing-existing-types"></a>重複使用現有的型別  
 資料合約有兩項基本要求，一個是穩定的名稱，另一個則是成員的清單。 穩定的名稱是由命名空間統一資源識別元 (URI) 以及合約的本機名稱組成。 根據預設，當您套用<xref:System.Runtime.Serialization.DataContractAttribute>到類別，它會使用類別名稱做為區域名稱和類別的命名空間 (前面加上"http://schemas.datacontract.org/2004/07/") 作為命名空間 URI。 您可以藉由設定 <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> 和 <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> 屬性來覆寫預設值。 您也可以藉由將 <xref:System.Runtime.Serialization.ContractNamespaceAttribute> 套用至命名空間以變更命名空間。 當現有的型別能夠完全依照需求處理資料，但卻擁有與資料合約不同的命名空間和類別名稱時，您就可以使用這項功能。 藉由覆寫預設值，您就可以重複使用現有的型別，並使已序列化的資料符合資料合約。  
  
> [!NOTE]
>  您可以在任何程式碼中使用 `DataContract` 一字來代替較長的 <xref:System.Runtime.Serialization.DataContractAttribute>。  
  
## <a name="versioning"></a>版本控制  
 資料合約也能配合本身的較新版本。 也就是說，當合約的較新版本含有其他資料時，這時會儲存該份資料，然後將其原封不動地傳回給傳送者。 若要執行這個步驟，請實作 <xref:System.Runtime.Serialization.IExtensibleDataObject> 介面。  
  
 如需有關版本設定的詳細資訊，請參閱 <<c0> [ 資料合約版本控制](~/docs/framework/wcf/feature-details/data-contract-versioning.md)。  
  
   
  
## Examples  
 下列範例會序列化和還原序列化名稱為 `Person` 且已套用 <xref:System.Runtime.Serialization.DataContractAttribute> 的類別。 請注意，<xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> 和 <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> 屬性的值已經設定為將覆寫預設設定。  
  
 [!code-csharp[DataContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractattribute/cs/overview.cs#1)]
 [!code-vb[DataContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractattribute/vb/overview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
    <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
    <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
    <related type="Article" href="~/docs/framework/wcf/feature-details/using-data-contracts.md">使用資料合約</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNameSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得是否已明確設定 <see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" />。</summary>
        <value><see langword="true" /> 如果已明確設定名稱;否則， <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNamespaceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNamespaceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNamespaceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNamespaceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得是否已明確設定 <see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" />。</summary>
        <value><see langword="true" /> 如果已明確設定命名空間;否則， <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public bool IsReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReference" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReference As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReference { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReference : bool with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示是否要保留物件參考資料。</summary>
        <value><see langword="true" /> 表示使用標準的 XML 來保留物件參考資料，否則為 <see langword="false" />。 預設為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用 `IsReference` 屬性，指示 <xref:System.Runtime.Serialization.DataContractSerializer> 插入可保留物件參考資訊的 XML 建構。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
      </Docs>
    </Member>
    <Member MemberName="IsReferenceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsReferenceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReferenceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReferenceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得是否已明確設定 <see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" />。</summary>
        <value>如果已明確設定參考，則為 <see langword="true" />；否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定型別的資料合約名稱。</summary>
        <value>資料合約的本機名稱。 預設為要套用屬性之類別的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> 屬性是用來指定資料合約的名稱，而這個名稱也就是在 XML 結構描述中的型別名稱。 如需詳細資訊，請參閱 < [Data Contract Names](~/docs/framework/wcf/feature-details/data-contract-names.md)。  
  
 根據預設，資料合約的名稱就是要套用 <xref:System.Runtime.Serialization.DataContractAttribute> 之型別的名稱。 但是，這個預設名稱可能會因為某些原因而需要變更。 其中一個原因是要讓現有型別可以處理必須符合現有資料合約的資料。 例如，有一個名為 `Person` 的型別，但是包含在 XML 結構描述中的資料合約所要求的名稱卻是 `Customer`。 這時只要將屬性值設定為 `Customer` 就可以滿足該合約。  
  
 第二個原因是為了能夠產生不允許當做型別名稱的名稱。 例如，如果資料合約需要的名稱不允許當做型別名稱，此時可以將屬性值設定成那個不被允許的名稱。 例如，字串 "$value" 不允許當做型別名稱，但是可以當做 <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> 屬性值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定型別之資料合約的命名空間。</summary>
        <value>合約的命名空間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您的型別必須傳回符合特定資料合約的資料，即可使用這個屬性指定特定的命名空間。  
  
> [!TIP]
>  若要成功傳輸資料，在用戶端和伺服器上，資料合約中的資料名稱必須相同。 Visual Basic 專案中，根據預設，加入前置詞 （稱為 「 根命名空間，"專案） 的每個檔案中定義的命名空間。 加上這個前置詞會造成相同型別有不同的用戶端和伺服器命名空間。 解決方法是設定<xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A>屬性為""，或者明確設定此屬性中的資料合約命名空間。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>