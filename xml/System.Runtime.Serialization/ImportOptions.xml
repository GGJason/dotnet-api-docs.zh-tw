<Type Name="ImportOptions" FullName="System.Runtime.Serialization.ImportOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0ee23b78487d370fea6599ff1b63a80236f44a2b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImportOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ImportOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="30e32-101">表示可以在 <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /> 上設定的選項。</span>
      <span class="sxs-lookup">
        <span data-stu-id="30e32-101">Represents the options that can be set on an <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e32-102"><xref:System.Runtime.Serialization.XsdDataContractImporter>，可用來從使用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] CodeDOM 的 XML 結構描述產生程式碼。</span><span class="sxs-lookup"><span data-stu-id="30e32-102">The <xref:System.Runtime.Serialization.XsdDataContractImporter> is used to generate code from XML schema using the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] CodeDOM.</span></span> <span data-ttu-id="30e32-103">若要從組件產生 XML 結構描述，請使用 <xref:System.Runtime.Serialization.XsdDataContractExporter>。</span><span class="sxs-lookup"><span data-stu-id="30e32-103">To generate an XML schema from an assembly, use the <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span></span>  
  
 <span data-ttu-id="30e32-104">如需有關匯入和匯出結構描述的詳細資訊，請參閱[結構描述匯入和匯出](~/docs/framework/wcf/feature-details/schema-import-and-export.md)和[匯入的結構描述產生類別](~/docs/framework/wcf/feature-details/importing-schema-to-generate-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="30e32-104">For more information about importing and exporting schemas, see [Schema Import and Export](~/docs/framework/wcf/feature-details/schema-import-and-export.md) and [Importing Schema to Generate Classes](~/docs/framework/wcf/feature-details/importing-schema-to-generate-classes.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30e32-105">下列範例會建立 <xref:System.Runtime.Serialization.ImportOptions> 類別的執行個體，並設定 <xref:System.Runtime.Serialization.ImportOptions.EnableDataBinding%2A> 和 <xref:System.Runtime.Serialization.ImportOptions.GenerateInternal%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="30e32-105">The following example creates an instance of the <xref:System.Runtime.Serialization.ImportOptions> class and sets the <xref:System.Runtime.Serialization.ImportOptions.EnableDataBinding%2A> and <xref:System.Runtime.Serialization.ImportOptions.GenerateInternal%2A> properties.</span></span>  
  
 [!code-csharp[XsdDataContractImporter#3](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#3)]
 [!code-vb[XsdDataContractImporter#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractExporter" />
    <altmember cref="T:System.Runtime.Serialization.ExportOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ImportOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="30e32-106">初始化 <see cref="T:System.Runtime.Serialization.ImportOptions" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-106">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.ImportOptions" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeProvider" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.CodeProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); void set(System::CodeDom::Compiler::CodeDomProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30e32-107">取得或設定 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 執行個體，這個執行個體會提供檢查是否支援目標語言之特定選項的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-107">Gets or sets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance that provides the means to check whether particular options for a target language are supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30e32-108">
            <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />，其中提供檢查是否支援目標之語言特定選項的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-108">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> that provides the means to check whether particular options for a target language are supported.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e32-109">為了更進一步地支援產生不同語言的程式碼，關於目標語言支援範圍的資訊必須傳送至結構描述匯入工具。</span><span class="sxs-lookup"><span data-stu-id="30e32-109">To support better code generation for different languages, information about what is supported by the target language needs to be passed to the schema importer.</span></span> <span data-ttu-id="30e32-110">透過傳送 <xref:System.CodeDom.Compiler.CodeDomProvider> 類別的執行個體便可達到這個目的，而這個類別執行個體會提供 <xref:System.CodeDom.Compiler.CodeDomProvider.Supports%2A> 方法來檢查其是否支援特定的 <xref:System.CodeDom.Compiler.CodeGeneratorOptions>。</span><span class="sxs-lookup"><span data-stu-id="30e32-110">This is done by passing an instance of the <xref:System.CodeDom.Compiler.CodeDomProvider> class, which provides a <xref:System.CodeDom.Compiler.CodeDomProvider.Supports%2A> method to check whether it supports particular <xref:System.CodeDom.Compiler.CodeGeneratorOptions>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContractSurrogate">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.DataContractSurrogate" />
      <MemberSignature Language="VB.NET" Value="Public Property DataContractSurrogate As IDataContractSurrogate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::IDataContractSurrogate ^ DataContractSurrogate { System::Runtime::Serialization::IDataContractSurrogate ^ get(); void set(System::Runtime::Serialization::IDataContractSurrogate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.IDataContractSurrogate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30e32-111">取得或設定資料合約代理，這個代理可用來修改在匯入作業期間所產生的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-111">Gets or sets a data contract surrogate that can be used to modify the code generated during an import operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30e32-112">
            <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 介面實作，這個實作可處理結構描述匯入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-112">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> interface that handles schema import.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDataBinding">
      <MemberSignature Language="C#" Value="public bool EnableDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.EnableDataBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDataBinding { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30e32-113">取得或設定值，這個值會指定在所產生程式碼中的類型是否應該實作 <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-113">Gets or sets a value that specifies whether types in generated code should implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30e32-114">如果產生的程式碼應該要實作 <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> 介面，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-114">
              <see langword="true" /> if the generated code should implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="30e32-115">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-115">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e32-116">這個介面會由 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 元件 (例如 Windows Form 或 Windows Presentation Foundation) 用來擷取使用者介面更新的資料變更。</span><span class="sxs-lookup"><span data-stu-id="30e32-116">This interface is used by [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] components, such as Windows Forms or Windows Presentation Foundation, to capture data changes for user interface updates.</span></span> <span data-ttu-id="30e32-117">產生的屬性會在該值變更時引發屬性變更事件，以便允許 UI 攔截程序根據這項事件做出回應。</span><span class="sxs-lookup"><span data-stu-id="30e32-117">The generated properties raise a property-changed event when the value changes, allowing UI hooks to act accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateInternal">
      <MemberSignature Language="C#" Value="public bool GenerateInternal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateInternal" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.GenerateInternal" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateInternal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateInternal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30e32-118">取得或設定值，這個值會指定產生的程式碼將標記為內部或公用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-118">Gets or sets a value that specifies whether generated code will be marked internal or public.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30e32-119">如果程式碼將標記為 <see langword="true" />，則為 <see langword="internal" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-119">
              <see langword="true" /> if the code will be marked <see langword="internal" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="30e32-120">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-120">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSerializable">
      <MemberSignature Language="C#" Value="public bool GenerateSerializable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateSerializable" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.GenerateSerializable" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateSerializable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateSerializable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30e32-121">取得或設定值，這個值會指定除了 <see cref="T:System.SerializableAttribute" /> 屬性，產生的資料合約類別是否還會以 <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性加以標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-121">Gets or sets a value that specifies whether generated data contract classes will be marked with the <see cref="T:System.SerializableAttribute" /> attribute in addition to the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30e32-122">如果會產生已套用 <see langword="true" /> 的類別，則為 <see cref="T:System.SerializableAttribute" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-122">
              <see langword="true" /> to generate classes with the <see cref="T:System.SerializableAttribute" /> applied; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="30e32-123">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-123">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportXmlType">
      <MemberSignature Language="C#" Value="public bool ImportXmlType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ImportXmlType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ImportXmlType" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportXmlType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ImportXmlType { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30e32-124">取得或設定值，這個值會判定是否將匯入所有的 XML 結構描述類型 (即使這些類型不符合資料合約結構描述)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-124">Gets or sets a value that determines whether all XML schema types, even those that do not conform to a data contract schema, will be imported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30e32-125">如果將匯入所有結構描述的類型，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-125">
              <see langword="true" /> to import all schema types; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="30e32-126">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-126">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e32-127">一般而言，匯入不符合有效資料合約結構描述的類型將會失敗。</span><span class="sxs-lookup"><span data-stu-id="30e32-127">Normally, importing a type that does not conform to a valid data contract schema will fail.</span></span> <span data-ttu-id="30e32-128">但是，當這個屬性已設定為 `true`，所有這類的類型都將匯入成為負責實作 <xref:System.Xml.Serialization.IXmlSerializable> 介面的類型。</span><span class="sxs-lookup"><span data-stu-id="30e32-128">However, when this property is set to `true`, all such types will be imported as types that implement the <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Namespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespaces As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Namespaces { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30e32-129">取得字典，這個字典包含了資料合約命名空間和必須在匯入作業期間用來產生程式碼之 CLR 命名空間的對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-129">Gets a dictionary that contains the mapping of data contract namespaces to the CLR namespaces that must be used to generate code during an import operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30e32-130">
            <see cref="T:System.Collections.Generic.IDictionary`2" />，其中包含命名空間對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-130">A <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains the namespace mappings.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedCollectionTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Type&gt; ReferencedCollectionTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; ReferencedCollectionTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferencedCollectionTypes As ICollection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Type ^&gt; ^ ReferencedCollectionTypes { System::Collections::Generic::ICollection&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30e32-131">取得型別集合，這個型別集合表示在為集合產生程式碼時所應參考的資料合約集合，例如，項目清單或項目字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-131">Gets a collection of types that represents data contract collections that should be referenced when generating code for collections, such as lists or dictionaries of items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30e32-132">
            <see cref="T:System.Collections.Generic.ICollection`1" />，其中包含參考的集合型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-132">An <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the referenced collection types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e32-133">根據預設，當匯入集合結構描述時將會產生陣列 (除非結構描述有指定不同型別的特殊附註)。</span><span class="sxs-lookup"><span data-stu-id="30e32-133">By default, an array will be generated when importing a collection schema (unless the schema has a special annotation that mentions a different type).</span></span> <span data-ttu-id="30e32-134">但是，如果 <xref:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes%2A> 集合中有存在相符的型別，這時就會使用該型別。</span><span class="sxs-lookup"><span data-stu-id="30e32-134">However, if there is a matching type in the <xref:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes%2A> collection, that type will be used.</span></span> <span data-ttu-id="30e32-135">例如，當匯入其中包含整數清單的結構描述時，通常會產生整數陣列。</span><span class="sxs-lookup"><span data-stu-id="30e32-135">For example, when importing schema that contains a list of integers, an array of integers will normally be generated.</span></span> <span data-ttu-id="30e32-136">但是，如果集合包含屬於整數型別的 <xref:System.Collections.Generic.LinkedList%601>，這時就會使用該型別，而不使用該陣列。</span><span class="sxs-lookup"><span data-stu-id="30e32-136">However, if the collection contains the <xref:System.Collections.Generic.LinkedList%601> of type integer, that type will be used instead of the array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Type&gt; ReferencedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; ReferencedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ReferencedTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferencedTypes As ICollection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Type ^&gt; ^ ReferencedTypes { System::Collections::Generic::ICollection&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="30e32-137">取得 <see cref="T:System.Collections.Generic.IList`1" />，其中包含產生之程式碼中所參考的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-137">Gets a <see cref="T:System.Collections.Generic.IList`1" /> containing types referenced in generated code.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="30e32-138">
            <see cref="T:System.Collections.Generic.IList`1" />，其中包含參考的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30e32-138">A <see cref="T:System.Collections.Generic.IList`1" /> that contains the referenced types.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>