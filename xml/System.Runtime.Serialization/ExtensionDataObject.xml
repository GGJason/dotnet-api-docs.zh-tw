<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExtensionDataObject.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55c0f6b0c6c7ab05b995b84ab0159d453837edcf5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c0f6b0c6c7ab05b995b84ab0159d453837edcf5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.ExtensionDataObject">
          <source>Stores data from a versioned data contract that has been extended by adding new members.</source>
          <target state="translated">儲存已建立版本之資料合約的資料，此資料合約已因加入新成員而得到擴充。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ExtensionDataObject">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.ExtensionDataObject&gt;</ph> is the structure that stores extra data encountered by the <ph id="ph2">&lt;xref:System.Runtime.Serialization.XmlObjectSerializer&gt;</ph> during deserialization operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.ExtensionDataObject&gt;</ph> 是一種結構，它會儲存 <ph id="ph2">&lt;xref:System.Runtime.Serialization.XmlObjectSerializer&gt;</ph> 在還原序列化 (Deserialization) 作業期間所遇到的額外資料。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ExtensionDataObject">
          <source>The structure is used by serialization to write the extra data into the serialized instance.</source>
          <target state="translated">序列化 (Serialization) 會使用這個結構將額外資料寫入至已序列化的執行個體。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ExtensionDataObject">
          <source>The structure is returned by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData%2A&gt;</ph> 執行個體的 <ph id="ph2">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> 屬性會傳回這個結構。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ExtensionDataObject">
          <source>The following code serializes an instance of a type (<ph id="ph1">`PersonVersion2`</ph>) that is the second version of the serializable type (<ph id="ph2">`Person`</ph>).</source>
          <target state="translated">下列程式碼範例會序列化型別 (<ph id="ph1">`PersonVersion2`</ph>) 的執行個體，這個型別是可序列化型別 (<ph id="ph2">`Person`</ph>) 的第二個版本。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ExtensionDataObject">
          <source>The second version contains extra data (<ph id="ph1">`ID`</ph> field) that is not present in the first version.</source>
          <target state="translated">第二個版本包含第一個版本沒有呈現的額外資料 (<ph id="ph1">`ID`</ph> 欄位)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ExtensionDataObject">
          <source>The code then deserializes the XML document into a <ph id="ph1">`Person`</ph> object, then immediately reserializes the object including the extra data.</source>
          <target state="translated">接著，這段程式碼會將 XML 文件還原序列化為 <ph id="ph1">`Person`</ph> 物件，然後立即重新序列化此包含額外資料的物件。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ExtensionDataObject">
          <source>Finally, the code deserializes the new XML into a <ph id="ph1">`PersonVersion2`</ph> object and writes the complete data to the console, proving that the data has made a round trip to and from an older version of the type.</source>
          <target state="translated">最後，這段程式碼會將新的 XML 還原序列化為 <ph id="ph1">`PersonVersion2`</ph> 物件，然後將完整資料寫入至主控台，以證明資料已完成從舊版型別開始與結束的來回流程。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ExtensionDataObject">
          <source>Note that the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute must be applied with the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> properties set to the same name and namespace as the original class.</source>
          <target state="translated">請注意，<ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> 屬性必須套用 <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph>，並且 <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> 屬性已設定為與原始類別相同的名稱和命名空間。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>