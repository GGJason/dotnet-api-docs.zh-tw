<Type Name="NetDataContractSerializer" FullName="System.Runtime.Serialization.NetDataContractSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62bf60e28609495b2d68b59e22ae24f9ca545137" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NetDataContractSerializer : System.Runtime.Serialization.XmlObjectSerializer, System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NetDataContractSerializer extends System.Runtime.Serialization.XmlObjectSerializer implements class System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.NetDataContractSerializer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NetDataContractSerializer&#xA;Inherits XmlObjectSerializer&#xA;Implements IFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetDataContractSerializer sealed : System::Runtime::Serialization::XmlObjectSerializer, System::Runtime::Serialization::IFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Serialization.XmlObjectSerializer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="a96d0-101">將某個類型的執行個體序列化及還原序列化成使用所提供 .NET Framework 類型的 XML 資料流或文件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a96d0-101">Serializes and deserializes an instance of a type into XML stream or document using the supplied .NET Framework types.</span>
      </span>
      <span data-ttu-id="a96d0-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a96d0-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96d0-103"><xref:System.Runtime.Serialization.NetDataContractSerializer> 與 <xref:System.Runtime.Serialization.DataContractSerializer> 有一項重要的差異：<xref:System.Runtime.Serialization.NetDataContractSerializer> 在已序列化的 XML 中包含 CLR 型別資訊，而 <xref:System.Runtime.Serialization.DataContractSerializer> 則否。</span><span class="sxs-lookup"><span data-stu-id="a96d0-103">The <xref:System.Runtime.Serialization.NetDataContractSerializer> differs from the <xref:System.Runtime.Serialization.DataContractSerializer> in one important way: the <xref:System.Runtime.Serialization.NetDataContractSerializer> includes CLR type information in the serialized XML, whereas the <xref:System.Runtime.Serialization.DataContractSerializer> does not.</span></span> <span data-ttu-id="a96d0-104">因此，只有當序列化和還原序列化兩端共用相同的 CLR 型別時，才能使用 <xref:System.Runtime.Serialization.NetDataContractSerializer>。</span><span class="sxs-lookup"><span data-stu-id="a96d0-104">Therefore, the <xref:System.Runtime.Serialization.NetDataContractSerializer> can be used only if both the serializing and deserializing ends share the same CLR types.</span></span>  
  
 <span data-ttu-id="a96d0-105">序列化程式可以將型別序列化至已套用 <xref:System.Runtime.Serialization.DataContractAttribute> 或 <xref:System.SerializableAttribute> 屬性的型別。</span><span class="sxs-lookup"><span data-stu-id="a96d0-105">The serializer can serialize types to which either the <xref:System.Runtime.Serialization.DataContractAttribute> or <xref:System.SerializableAttribute> attribute has been applied.</span></span> <span data-ttu-id="a96d0-106">它也會序列化實作 <xref:System.Runtime.Serialization.ISerializable> 的型別。</span><span class="sxs-lookup"><span data-stu-id="a96d0-106">It also serializes types that implement <xref:System.Runtime.Serialization.ISerializable>.</span></span>  
  
 <span data-ttu-id="a96d0-107">如需序列化的詳細資訊，請參閱[序列化和還原序列化](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md)。</span><span class="sxs-lookup"><span data-stu-id="a96d0-107">For more information about serialization, see [Serialization and Deserialization](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md).</span></span>  
  
## <a name="incompatibility-with-xelement"></a><span data-ttu-id="a96d0-108">與 XElement 的不相容性</span><span class="sxs-lookup"><span data-stu-id="a96d0-108">Incompatibility with XElement</span></span>  
 <span data-ttu-id="a96d0-109"><xref:System.Xml.Linq.XElement> 類別會用於寫入 XML。</span><span class="sxs-lookup"><span data-stu-id="a96d0-109">The <xref:System.Xml.Linq.XElement> class is used to write XML.</span></span> <span data-ttu-id="a96d0-110">然而，`NetDataContractSerializer` 無法序列化該型別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="a96d0-110">However, the `NetDataContractSerializer` cannot serialize an instance of the type.</span></span> <span data-ttu-id="a96d0-111">下列程式碼，因此，會失敗，發生例外狀況: 「 根的類型 'System.Xml.Linq.XElement' 不支援在最上層 NetDataContractSerializer 因為它是 IXmlSerializable 且`IsAny` = `true`而必須撰寫所有內容，包括在內的根項目。 」</span><span class="sxs-lookup"><span data-stu-id="a96d0-111">The following code, therefore, fails with the exception: "Root type 'System.Xml.Linq.XElement' is not supported at the top level by NetDataContractSerializer since it is IXmlSerializable with `IsAny`=`true` and must write all its contents including the root element."</span></span>  
  
 [!code-csharp[NetDataContractSerializer#15](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#15)]
 [!code-vb[NetDataContractSerializer#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#15)]  
  
 <span data-ttu-id="a96d0-112">然而，如果 `XElement` 是用來做為類別之欄位或屬性的型別，該欄位或屬性所包含的資料就會進行序列化。</span><span class="sxs-lookup"><span data-stu-id="a96d0-112">However, if an `XElement` is used as the type of a field or property of a class, the data contained by the field or property is serialized.</span></span> <span data-ttu-id="a96d0-113">這是因為當做為類別的成員時，該資料並不是位於類別的最上層。</span><span class="sxs-lookup"><span data-stu-id="a96d0-113">This is because as a member of a class, the data is not the top level of the class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a96d0-114">下列範例程式碼會示範名為 `Person` 且已由 <xref:System.Runtime.Serialization.NetDataContractSerializer> 序列化的型別。</span><span class="sxs-lookup"><span data-stu-id="a96d0-114">The following example code shows a type named `Person` that is serialized by the <xref:System.Runtime.Serialization.NetDataContractSerializer>.</span></span> <span data-ttu-id="a96d0-115"><xref:System.Runtime.Serialization.DataContractAttribute> 屬性會套用至類別，而 <xref:System.Runtime.Serialization.DataMemberAttribute> 會套用至成員 (包括私用成員)，以便指示 <xref:System.Runtime.Serialization.NetDataContractSerializer> 哪些項目需要序列化。</span><span class="sxs-lookup"><span data-stu-id="a96d0-115">The <xref:System.Runtime.Serialization.DataContractAttribute> attribute is applied to the class, and the <xref:System.Runtime.Serialization.DataMemberAttribute> is applied to members (including a private member) to instruct the <xref:System.Runtime.Serialization.NetDataContractSerializer> what to serialize.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#0](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#0)]
 [!code-vb[NetDataContractSerializer#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.NetDataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.XmlObjectSerializer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a96d0-116">初始化 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-116">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a96d0-117">初始化 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-117">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[NetDataContractSerializer#8](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#8)]
 [!code-vb[NetDataContractSerializer#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer(System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a96d0-118">包含內容資料的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-118">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains context data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-119">使用提供的資料流內容資料，初始化 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-119">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied streaming context data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96d0-120"><xref:System.Runtime.Serialization.StreamingContext> 類別允許您傳入要在讀取和寫入物件時使用之使用者特定的內容資料。</span><span class="sxs-lookup"><span data-stu-id="a96d0-120">The <xref:System.Runtime.Serialization.StreamingContext> class allows you to pass in user-specific context data to use while reading and writing objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a96d0-121">下列範例會建立使用 <xref:System.Runtime.Serialization.NetDataContractSerializer> 的 <xref:System.Runtime.Serialization.StreamingContext> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="a96d0-121">The following example creates an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer> using a <xref:System.Runtime.Serialization.StreamingContext>.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#9](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#9)]
 [!code-vb[NetDataContractSerializer#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (string rootName, string rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string rootName, string rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootName As String, rootNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer(System::String ^ rootName, System::String ^ rootNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootName">
          <span data-ttu-id="a96d0-122">內含要序列化或還原序列化之內容的 XML 項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-122">The name of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="a96d0-123">內含要序列化或還原序列化之內容的 XML 項目命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-123">The namespace of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-124">使用提供的 XML 根項目和命名空間，初始化 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-124">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied XML root element and namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a96d0-125">下列範例會建立 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，它會指定在還原序列化物件時所預期的 XML 根項目和命名空間。</span><span class="sxs-lookup"><span data-stu-id="a96d0-125">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> specifying the XML root element and namespace it will expect when deserializing an object.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#10](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#10)]
 [!code-vb[NetDataContractSerializer#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootName As XmlDictionaryString, rootNamespace As XmlDictionaryString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer(System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <param name="rootName">
          <span data-ttu-id="a96d0-126">
            <see cref="T:System.Xml.XmlDictionaryString" />，其中包含要序列化或還原序列化之內容的 XML 項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-126">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the name of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="a96d0-127">
            <see cref="T:System.Xml.XmlDictionaryString" />，其中包含要序列化或還原序列化之內容的 XML 項目命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-127">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-128">使用包含用於指定內容之根項目和命名空間的兩個 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 型別參數，初始化 <see cref="T:System.Xml.XmlDictionaryString" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-128">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with two parameters of type <see cref="T:System.Xml.XmlDictionaryString" /> that contain the root element and namespace used to specify the content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96d0-129">如果跨物件執行個體使用同一組字串時，可以使用 <xref:System.Xml.XmlDictionaryString> 來使效能最佳化。</span><span class="sxs-lookup"><span data-stu-id="a96d0-129">The <xref:System.Xml.XmlDictionaryString> can be used to optimize performance when the same set of strings is used across object instances.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a96d0-130">下列範例會建立 <xref:System.Runtime.Serialization.DataContractSerializer> 的執行個體，它會指定在還原序列化物件時所預期的 XML 根項目和命名空間 (相同於 <xref:System.Xml.XmlDictionaryString> 引數的處理方式)。</span><span class="sxs-lookup"><span data-stu-id="a96d0-130">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> specifying the XML root element and namespace (as <xref:System.Xml.XmlDictionaryString> arguments) it will expect when deserializing an object.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#11](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#11)]
 [!code-vb[NetDataContractSerializer#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Runtime.Serialization.StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, System.Runtime.Serialization.ISurrogateSelector surrogateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Serialization.StreamingContext context, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, class System.Runtime.Serialization.ISurrogateSelector surrogateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As StreamingContext, maxItemsInObjectGraph As Integer, ignoreExtensionDataObject As Boolean, assemblyFormat As FormatterAssemblyStyle, surrogateSelector As ISurrogateSelector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer(System::Runtime::Serialization::StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System::Runtime::Serialization::Formatters::FormatterAssemblyStyle assemblyFormat, System::Runtime::Serialization::ISurrogateSelector ^ surrogateSelector);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="assemblyFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="surrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="a96d0-131">包含內容資料的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-131">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains context data.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="a96d0-132">圖形中要序列化或還原序列化的最大項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-132">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="a96d0-133">如果要略過型別延伸所提供的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-133">
              <see langword="true" /> to ignore the data supplied by an extension of the type; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="assemblyFormat">
          <span data-ttu-id="a96d0-134">
            <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 列舉值，指定用來尋找及載入組件的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-134">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> enumeration value that specifies a method for locating and loading assemblies.</span>
          </span>
        </param>
        <param name="surrogateSelector">
          <span data-ttu-id="a96d0-135">
            <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> 的實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-135">An implementation of the <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-136">使用提供的內容資料，初始化 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 類別的新執行個體；此外，指定物件中要序列化的最大項目數，以及指定是否要略過額外資料的參數、組件載入方法和代理選取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-136">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied context data; in addition, specifies the maximum number of items in the object to be serialized, and parameters to specify whether extra data is ignored, the assembly loading method, and a surrogate selector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96d0-137">在正在序列化或還原序列化的類別中實作 `ignoreExtensionDataObject` 介面時，會使用 <xref:System.Runtime.Serialization.IExtensibleDataObject> 參數。</span><span class="sxs-lookup"><span data-stu-id="a96d0-137">The `ignoreExtensionDataObject` parameter is used when the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface is implemented in the class that is being serialized or deserialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a96d0-138">下列範例會建立使用 <xref:System.Runtime.Serialization.NetDataContractSerializer> 的 <xref:System.Runtime.Serialization.StreamingContext> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="a96d0-138">The following example creates an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer> using a <xref:System.Runtime.Serialization.StreamingContext>.</span></span> <span data-ttu-id="a96d0-139">這段程式碼也會設定 `ignoreExtensionDataObject`，並指定要處理的 `ISurrogateSelector` 介面的實作，以便在選取代理時 (進行還原序列化舊版型別時) 協助序列化程式。</span><span class="sxs-lookup"><span data-stu-id="a96d0-139">The code also sets the `ignoreExtensionDataObject`, and specifies an implementation of the `ISurrogateSelector` interface to handle to assist the serializer when selecting a surrogate (for deserializing legacy types).</span></span>  
  
 [!code-csharp[NetDataContractSerializer#12](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#12)]
 [!code-vb[NetDataContractSerializer#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a96d0-140">
            <paramref name="maxItemsInObjectGraph" /> 值小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-140">
              <paramref name="maxItemsInObjectGraph" /> value is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (string rootName, string rootNamespace, System.Runtime.Serialization.StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, System.Runtime.Serialization.ISurrogateSelector surrogateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string rootName, string rootNamespace, valuetype System.Runtime.Serialization.StreamingContext context, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, class System.Runtime.Serialization.ISurrogateSelector surrogateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootName As String, rootNamespace As String, context As StreamingContext, maxItemsInObjectGraph As Integer, ignoreExtensionDataObject As Boolean, assemblyFormat As FormatterAssemblyStyle, surrogateSelector As ISurrogateSelector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer(System::String ^ rootName, System::String ^ rootNamespace, System::Runtime::Serialization::StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System::Runtime::Serialization::Formatters::FormatterAssemblyStyle assemblyFormat, System::Runtime::Serialization::ISurrogateSelector ^ surrogateSelector);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="assemblyFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="surrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      </Parameters>
      <Docs>
        <param name="rootName">
          <span data-ttu-id="a96d0-141">內含要序列化或還原序列化之內容的 XML 項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-141">The name of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="a96d0-142">內含要序列化或還原序列化之內容的 XML 項目命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-142">The namespace of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="a96d0-143">包含內容資料的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-143">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains context data.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="a96d0-144">圖形中要序列化或還原序列化的最大項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-144">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="a96d0-145">如果要略過型別延伸所提供的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-145">
              <see langword="true" /> to ignore the data supplied by an extension of the type; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="assemblyFormat">
          <span data-ttu-id="a96d0-146">
            <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 列舉值，指定用來尋找及載入組件的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-146">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> enumeration value that specifies a method for locating and loading assemblies.</span>
          </span>
        </param>
        <param name="surrogateSelector">
          <span data-ttu-id="a96d0-147">可處理舊版型別的 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-147">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to handle the legacy type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-148">使用提供的內容資料以及根名稱和命名空間，初始化 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 類別的新執行個體；此外，指定物件中要序列化的最大項目數，以及指定是否要略過額外資料的參數、組件載入方法和代理選取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-148">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied context data and root name and namespace; in addition, specifies the maximum number of items in the object to be serialized, and parameters to specify whether extra data is ignored, the assembly loading method, and a surrogate selector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96d0-149">在正在序列化或還原序列化的類別中實作 `ignoreExtensionDataObject` 介面時，會使用 <xref:System.Runtime.Serialization.IExtensibleDataObject> 參數。</span><span class="sxs-lookup"><span data-stu-id="a96d0-149">The `ignoreExtensionDataObject` parameter is used when the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface is implemented in the class that is being serialized or deserialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a96d0-150">下列範例會建立 <xref:System.Runtime.Serialization.NetDataContractSerializer> 的執行個體，它會指定在還原序列化時所預期的 XML 項目名稱和命名空間。</span><span class="sxs-lookup"><span data-stu-id="a96d0-150">The following example creates an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer> specifying the XML element name and namespace to expect when deserializing.</span></span> <span data-ttu-id="a96d0-151">這段程式碼也會設定 `ignoreExtensionDataObject`，並指定要處理的 <xref:System.Runtime.Serialization.ISurrogateSelector> 介面的實作，以便在選取代理時 (進行還原序列化舊版型別時) 協助序列化程式。</span><span class="sxs-lookup"><span data-stu-id="a96d0-151">The code also sets the `ignoreExtensionDataObject`, and specifies an implementation of the <xref:System.Runtime.Serialization.ISurrogateSelector> interface to handle to assist the serializer when selecting a surrogate (for deserializing legacy types).</span></span>  
  
 [!code-csharp[NetDataContractSerializer#13](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#13)]
 [!code-vb[NetDataContractSerializer#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a96d0-152">
            <paramref name="maxItemsInObjectGraph" /> 值小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-152">
              <paramref name="maxItemsInObjectGraph" /> value is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace, System.Runtime.Serialization.StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, System.Runtime.Serialization.ISurrogateSelector surrogateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace, valuetype System.Runtime.Serialization.StreamingContext context, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, class System.Runtime.Serialization.ISurrogateSelector surrogateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootName As XmlDictionaryString, rootNamespace As XmlDictionaryString, context As StreamingContext, maxItemsInObjectGraph As Integer, ignoreExtensionDataObject As Boolean, assemblyFormat As FormatterAssemblyStyle, surrogateSelector As ISurrogateSelector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer(System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace, System::Runtime::Serialization::StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System::Runtime::Serialization::Formatters::FormatterAssemblyStyle assemblyFormat, System::Runtime::Serialization::ISurrogateSelector ^ surrogateSelector);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="assemblyFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="surrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      </Parameters>
      <Docs>
        <param name="rootName">
          <span data-ttu-id="a96d0-153">
            <see cref="T:System.Xml.XmlDictionaryString" />，其中包含內容的根項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-153">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element of the content.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="a96d0-154">
            <see cref="T:System.Xml.XmlDictionaryString" />，其中包含根項目的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-154">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the root element.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="a96d0-155">包含內容資料的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-155">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains context data.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="a96d0-156">圖形中要序列化或還原序列化的最大項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-156">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="a96d0-157">如果要略過型別延伸所提供的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-157">
              <see langword="true" /> to ignore the data supplied by an extension of the type; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="assemblyFormat">
          <span data-ttu-id="a96d0-158">
            <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 列舉值，指定用來尋找及載入組件的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-158">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> enumeration value that specifies a method for locating and loading assemblies.</span>
          </span>
        </param>
        <param name="surrogateSelector">
          <span data-ttu-id="a96d0-159">可處理舊版型別的 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-159">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to handle the legacy type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-160">使用提供的內容資料以及根名稱和命名空間 (相同於 <see cref="T:System.Xml.XmlDictionaryString" /> 參數的處理方式)，初始化 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 類別的新執行個體；此外，指定物件中要序列化的最大項目數，以及指定是否要略過額外資料的參數、組件載入方法和代理選取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-160">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied context data, and root name and namespace (as <see cref="T:System.Xml.XmlDictionaryString" /> parameters); in addition, specifies the maximum number of items in the object to be serialized, and parameters to specify whether extra data found is ignored, assembly loading method, and a surrogate selector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96d0-161">如果跨物件執行個體使用同一組字串時，可以使用 <xref:System.Xml.XmlDictionaryString> 來使效能最佳化。</span><span class="sxs-lookup"><span data-stu-id="a96d0-161">The <xref:System.Xml.XmlDictionaryString> can be used to optimize performance when the same set of strings is used across object instances.</span></span>  
  
 <span data-ttu-id="a96d0-162">在正在序列化或還原序列化的類別中實作 `ignoreExtensionDataObject` 介面時，會使用 <xref:System.Runtime.Serialization.IExtensibleDataObject> 參數。</span><span class="sxs-lookup"><span data-stu-id="a96d0-162">The `ignoreExtensionDataObject` parameter is used when the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface is implemented in the class that is being serialized or deserialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a96d0-163">下列範例會建立 <xref:System.Runtime.Serialization.NetDataContractSerializer> 的執行個體，它會指定在還原序列化時所預期的 XML 項目名稱和命名空間 (相同於 <xref:System.Xml.XmlDictionaryString> 引數的處理方式)。</span><span class="sxs-lookup"><span data-stu-id="a96d0-163">The following example creates an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer> specifying the XML element name and namespace (as <xref:System.Xml.XmlDictionaryString> arguments) to expect when deserializing.</span></span> <span data-ttu-id="a96d0-164">這段程式碼也會設定 `ignoreExtensionDataObject`，並指定要處理的 <xref:System.Runtime.Serialization.ISurrogateSelector> 介面的實作，以便在選取代理時 (進行還原序列化舊版型別時) 協助序列化程式。</span><span class="sxs-lookup"><span data-stu-id="a96d0-164">The code also sets the `ignoreExtensionDataObject`, and specifies an implementation of the <xref:System.Runtime.Serialization.ISurrogateSelector> interface to handle to assist the serializer when selecting a surrogate (for deserializing legacy types).</span></span>  
  
 [!code-csharp[NetDataContractSerializer#14](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#14)]
 [!code-vb[NetDataContractSerializer#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a96d0-165">
            <paramref name="maxItemsInObjectGraph" /> 值小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-165">
              <paramref name="maxItemsInObjectGraph" /> value is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AssemblyFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.AssemblyFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property AssemblyFormat As FormatterAssemblyStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterAssemblyStyle AssemblyFormat { System::Runtime::Serialization::Formatters::FormatterAssemblyStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterAssemblyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a96d0-166">取得值，這個值會指定用來尋找及載入組件的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-166">Gets a value that specifies a method for locating and loading assemblies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a96d0-167">
            <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 列舉值，指定用來尋找及載入組件的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-167">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> enumeration value that specifies a method for locating and loading assemblies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96d0-168">`AssemblyFormat` 執行個體可以有兩種樣式：<xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full> 或 <xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple>。</span><span class="sxs-lookup"><span data-stu-id="a96d0-168">An `AssemblyFormat` instance can have two styles: <xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full> or <xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple>.</span></span> <span data-ttu-id="a96d0-169">指定 `Simple`，便可從已序列化的執行個體以及不同的版本載入及還原序列化某個版本的型別。</span><span class="sxs-lookup"><span data-stu-id="a96d0-169">Specifying `Simple` allows types in one version to be loaded and deserialized from an instance serialized from a different version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a96d0-170">正在設定的值沒有對應至任何 <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-170">The value being set does not correspond to any of the <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Binder">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.SerializationBinder Binder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.SerializationBinder Binder" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.Binder" />
      <MemberSignature Language="VB.NET" Value="Public Property Binder As SerializationBinder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::SerializationBinder ^ Binder { System::Runtime::Serialization::SerializationBinder ^ get(); void set(System::Runtime::Serialization::SerializationBinder ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.SerializationBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a96d0-171">取得或設定會控制類別載入的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-171">Gets or sets an object that controls class loading.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a96d0-172">搭配目前格式器使用的 <see cref="T:System.Runtime.Serialization.SerializationBinder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-172">The <see cref="T:System.Runtime.Serialization.SerializationBinder" /> used with the current formatter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96d0-173">在序列化期間，格式器會傳輸在建立正確型別和版本之物件執行個體時的必要資訊。</span><span class="sxs-lookup"><span data-stu-id="a96d0-173">During serialization, a formatter transmits the information required to create an instance of an object of the correct type and version.</span></span> <span data-ttu-id="a96d0-174">這項資訊通常包含物件的完整型別名稱和組件名稱。</span><span class="sxs-lookup"><span data-stu-id="a96d0-174">This information generally includes the full type name and assembly name of the object.</span></span> <span data-ttu-id="a96d0-175">組件名稱包括名稱、版本和組件的強式名稱雜湊。</span><span class="sxs-lookup"><span data-stu-id="a96d0-175">The assembly name includes the name, version, and strong name hash of the assembly.</span></span> <span data-ttu-id="a96d0-176">根據預設，還原序列化會使用此資訊建立相同物件的執行個體 (使用安全性原則所限制之任何組件載入的例外狀況)。</span><span class="sxs-lookup"><span data-stu-id="a96d0-176">By default, deserialization uses this information to create an instance of an identical object (with the exception of any assembly loading restricted by the security policy).</span></span> <span data-ttu-id="a96d0-177">由於類別已經在組件之間移動，或在伺服器和用戶端上需要不同版本的類別，因此某些使用者需要控制載入哪一個類別。</span><span class="sxs-lookup"><span data-stu-id="a96d0-177">Some users need to control which class to load, either because the class has moved between assemblies or a different version of the class is required on the server and client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.StreamingContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.StreamingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As StreamingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::StreamingContext Context { System::Runtime::Serialization::StreamingContext get(); void set(System::Runtime::Serialization::StreamingContext value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.StreamingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a96d0-178">取得或設定物件，該物件可傳遞對序列化或還原序列化期間有用的內容資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-178">Gets or sets the object that enables the passing of context data that is useful while serializing or deserializing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a96d0-179">包含內容資料的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-179">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the context data.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="a96d0-180">
            <see cref="T:System.IO.Stream" />，其中包含要還原序列化的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-180">A <see cref="T:System.IO.Stream" /> that contains the XML to deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-181">將 XML 文件或資料流還原序列化成物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-181">Deserializes an XML document or stream into an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a96d0-182">已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-182">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96d0-183">這個方法假定預設的格式為文字 XML。</span><span class="sxs-lookup"><span data-stu-id="a96d0-183">This method assumes the default format is text XML.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a96d0-184">呼叫此方法不受信任的資料時，會造成安全性風險。</span><span class="sxs-lookup"><span data-stu-id="a96d0-184">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="a96d0-185">呼叫這個方法僅使用信任的資料。</span><span class="sxs-lookup"><span data-stu-id="a96d0-185">Call this method only with trusted data.</span></span> <span data-ttu-id="a96d0-186">如需詳細資訊，請參閱[資料驗證](https://www.owasp.org/index.php/Data_Validation)。</span><span class="sxs-lookup"><span data-stu-id="a96d0-186">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreExtensionDataObject">
      <MemberSignature Language="C#" Value="public bool IgnoreExtensionDataObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreExtensionDataObject" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.IgnoreExtensionDataObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreExtensionDataObject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreExtensionDataObject { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a96d0-187">取得值，這個值會指定是否略過物件延伸所提供的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-187">Gets a value that specifies whether data supplied by an extension of the object is ignored.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a96d0-188">如果要略過型別延伸所提供的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-188">
              <see langword="true" /> to ignore the data supplied by an extension of the type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96d0-189">當實作 <xref:System.Runtime.Serialization.IExtensibleDataObject> 時，日後版本型別的資料便可由 <xref:System.Runtime.Serialization.ExtensionDataObject> 儲存。</span><span class="sxs-lookup"><span data-stu-id="a96d0-189">When implementing the <xref:System.Runtime.Serialization.IExtensibleDataObject>, data from a future version of a type can be stored by the <xref:System.Runtime.Serialization.ExtensionDataObject>.</span></span> <span data-ttu-id="a96d0-190">在往返期間 (其中物件經過還原序列化、改變，然後再序列化)，額外的資料會再次儲存並進行序列化。</span><span class="sxs-lookup"><span data-stu-id="a96d0-190">During a round trip (where an object is deserialized, altered, and serialized again), the extra data is stored and serialized again.</span></span> <span data-ttu-id="a96d0-191">如需詳細資訊，請參閱[序列化和還原序列化](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md)。</span><span class="sxs-lookup"><span data-stu-id="a96d0-191">For more information, see [Serialization and Deserialization](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a96d0-192">判斷讀取器是否置於可還原序列化的物件上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-192">Determines whether the reader is positioned on an object that can be deserialized.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96d0-193">這相當於使用 `ReadObject` 介面的 `IFormatter` 方法。</span><span class="sxs-lookup"><span data-stu-id="a96d0-193">This is equivalent to using the `ReadObject` method of the `IFormatter` interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public override bool IsStartObject (System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsStartObject(class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsStartObject (reader As XmlDictionaryReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsStartObject(System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a96d0-194">
            <see cref="T:System.Xml.XmlDictionaryReader" />，其中包含要讀取的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-194">An <see cref="T:System.Xml.XmlDictionaryReader" /> that contains the XML to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-195">判斷 <see cref="T:System.Xml.XmlDictionaryReader" /> 是否置於可使用已指定讀取器而還原序列化的物件上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-195">Determines whether the <see cref="T:System.Xml.XmlDictionaryReader" /> is positioned on an object that can be deserialized using the specified reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a96d0-196">如果讀取器置於要讀取之資料流的開始項目，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-196">
              <see langword="true" />, if the reader is at the start element of the stream to read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96d0-197"><xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> 會檢查讀取器所在之 XML 項目的名稱和命名空間，並比較值與預期的名稱和命名空間，以判斷它是否可以讀取物件。</span><span class="sxs-lookup"><span data-stu-id="a96d0-197">The <xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> determines whether it can read an object by examining the name and namespace of the XML element the reader is positioned at, and comparing the values to expected name and namespace.</span></span> <span data-ttu-id="a96d0-198">預期的名稱和命名空間可以使用下列項目進行設定：傳入建構函式之型別的資料合約名稱和命名空間，或是傳入建構函式的 `rootName` 和 `rootNamespace` 值 (如果有的話)。</span><span class="sxs-lookup"><span data-stu-id="a96d0-198">The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the `rootName` and `rootNamespace` values passed into the constructor (if present).</span></span>  
  
 <span data-ttu-id="a96d0-199">您可以在下列建構函式中設定 `rootName` 和 `rootNamespace`：<xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29?displayProperty=nameWithType>、<xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29?displayProperty=nameWithType> 和 <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a96d0-199">You can set the `rootName` and `rootNamespace` in the following constructors: <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29?displayProperty=nameWithType>, <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29?displayProperty=nameWithType>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a96d0-200">
            <paramref name="reader" /> 設定為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-200">the <paramref name="reader" /> is set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public override bool IsStartObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsStartObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsStartObject (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsStartObject(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a96d0-201">
            <see cref="T:System.Xml.XmlReader" />，其中包含要讀取的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-201">An <see cref="T:System.Xml.XmlReader" /> that contains the XML to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-202">判斷 <see cref="T:System.Xml.XmlReader" /> 是否置於可使用已指定讀取器而還原序列化的物件上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-202">Determines whether the <see cref="T:System.Xml.XmlReader" /> is positioned on an object that can be deserialized using the specified reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a96d0-203">如果讀取器位於要讀取之資料流的開始項目，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-203">
              <see langword="true" /> if the reader is at the start element of the stream to read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a96d0-204">
            <paramref name="reader" /> 設定為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-204">the <paramref name="reader" /> is set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaxItemsInObjectGraph">
      <MemberSignature Language="C#" Value="public int MaxItemsInObjectGraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxItemsInObjectGraph" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.MaxItemsInObjectGraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxItemsInObjectGraph As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxItemsInObjectGraph { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a96d0-205">取得允許物件中要序列化的最大項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-205">Gets the maximum number of items allowed in the object to be serialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a96d0-206">物件中允許的最大項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-206">The maximum number of items allowed in the object.</span>
          </span>
          <span data-ttu-id="a96d0-207">預設值為 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-207">The default is <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96d0-208">如需有關設定配額的詳細資訊，請參閱[資料的安全性考量](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)。</span><span class="sxs-lookup"><span data-stu-id="a96d0-208">For more information about setting quotas, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a96d0-209">讀取 XML 資料流或文件，然後傳回已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-209">Reads the XML stream or document and returns the deserialized object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="a96d0-210">呼叫此方法不受信任的資料時，會造成安全性風險。</span><span class="sxs-lookup"><span data-stu-id="a96d0-210">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="a96d0-211">呼叫這個方法僅使用信任的資料。</span><span class="sxs-lookup"><span data-stu-id="a96d0-211">Call this method only with trusted data.</span></span> <span data-ttu-id="a96d0-212">如需詳細資訊，請參閱[資料驗證](https://www.owasp.org/index.php/Data_Validation)。</span><span class="sxs-lookup"><span data-stu-id="a96d0-212">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a96d0-213">
            <see cref="T:System.Xml.XmlReader" />，用於讀取 XML 資料流或文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-213">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream or document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-214">使用 <see cref="T:System.Xml.XmlDictionaryReader" /> 讀取 XML 資料流或文件，然後傳回已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-214">Reads the XML stream or document with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a96d0-215">已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-215">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="a96d0-216">呼叫此方法不受信任的資料時，會造成安全性風險。</span><span class="sxs-lookup"><span data-stu-id="a96d0-216">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="a96d0-217">呼叫這個方法僅使用信任的資料。</span><span class="sxs-lookup"><span data-stu-id="a96d0-217">Call this method only with trusted data.</span></span> <span data-ttu-id="a96d0-218">如需詳細資訊，請參閱[資料驗證](https://www.owasp.org/index.php/Data_Validation)。</span><span class="sxs-lookup"><span data-stu-id="a96d0-218">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a96d0-219">
            <paramref name="reader" /> 設定為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-219">the <paramref name="reader" /> is set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlDictionaryReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlDictionaryReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlDictionaryReader, verifyObjectName As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlDictionaryReader ^ reader, bool verifyObjectName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a96d0-220">
            <see cref="T:System.Xml.XmlDictionaryReader" />，用於讀取 XML 資料流或文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-220">The <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream or document.</span>
          </span>
        </param>
        <param name="verifyObjectName">
          <span data-ttu-id="a96d0-221">如果要檢查內含的 XML 項目名稱和命名空間是否對應至用於建構序列化程式的根名稱和根命名空間，則為 <see langword="true" />，如果要略過驗證，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-221">
              <see langword="true" /> to check whether the enclosing XML element name and namespace correspond to the root name and root namespace used to construct the serializer; <see langword="false" /> to skip the verification.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-222">使用 <see cref="T:System.Xml.XmlDictionaryReader" /> 讀取 XML 資料流或文件，然後傳回已還原序列化的物件；同時檢查該物件資料是否符合用於建立序列化程式的名稱和命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-222">Reads the XML stream or document with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object; also checks whether the object data conforms to the name and namespace used to create the serializer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a96d0-223">已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-223">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96d0-224">`verifyObjectName` 參數會檢查讀取器所在之 XML 項目的名稱和命名空間，並比較值與預期的名稱和命名空間，以判斷它是否可以讀取物件。</span><span class="sxs-lookup"><span data-stu-id="a96d0-224">The `verifyObjectName` parameter determines whether it can read an object by examining the name and namespace of the XML element the reader is positioned at, and comparing the values to expected name and namespace.</span></span> <span data-ttu-id="a96d0-225">預期的名稱和命名空間可以使用下列項目進行設定：傳入建構函式之型別的資料合約名稱和命名空間，或是傳入建構函式的 `rootName` 和 `rootNamespace` 值 (如果有的話)。</span><span class="sxs-lookup"><span data-stu-id="a96d0-225">The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the `rootName` and `rootNamespace` values passed into the constructor (if present).</span></span>  
  
 <span data-ttu-id="a96d0-226">您可以在下列建構函式中設定 `rootName` 和 `rootNamespace`：<xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29>、<xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29> 和 <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29>。</span><span class="sxs-lookup"><span data-stu-id="a96d0-226">You can set the `rootName` and `rootNamespace` in the following constructors: <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29>, <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a96d0-227">呼叫此方法不受信任的資料時，會造成安全性風險。</span><span class="sxs-lookup"><span data-stu-id="a96d0-227">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="a96d0-228">呼叫這個方法僅使用信任的資料。</span><span class="sxs-lookup"><span data-stu-id="a96d0-228">Call this method only with trusted data.</span></span> <span data-ttu-id="a96d0-229">如需詳細資訊，請參閱[資料驗證](https://www.owasp.org/index.php/Data_Validation)。</span><span class="sxs-lookup"><span data-stu-id="a96d0-229">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a96d0-230">
            <paramref name="reader" /> 設定為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-230">the <paramref name="reader" /> is set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlReader, verifyObjectName As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlReader ^ reader, bool verifyObjectName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a96d0-231">
            <see cref="T:System.Xml.XmlReader" />，用於讀取 XML 資料流或文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-231">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream or document.</span>
          </span>
        </param>
        <param name="verifyObjectName">
          <span data-ttu-id="a96d0-232">如果要檢查內含的 XML 項目名稱和命名空間是否對應至用於建構序列化程式的根名稱和根命名空間，則為 <see langword="true" />，如果要略過驗證，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-232">
              <see langword="true" /> to check whether the enclosing XML element name and namespace correspond to the root name and root namespace used to construct the serializer; <see langword="false" /> to skip the verification.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-233">使用 <see cref="T:System.Xml.XmlDictionaryReader" /> 讀取 XML 資料流或文件，然後傳回已還原序列化的物件；同時檢查該物件資料是否符合用於建立序列化程式的名稱和命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-233">Reads the XML stream or document with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object; also checks whether the object data conforms to the name and namespace used to create the serializer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a96d0-234">已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-234">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96d0-235">`verifyObjectName` 參數會檢查讀取器所在之 XML 項目的名稱和命名空間，並比較值與預期的名稱和命名空間，以判斷它是否可以讀取物件。</span><span class="sxs-lookup"><span data-stu-id="a96d0-235">The `verifyObjectName` parameter determines whether it can read an object by examining the name and namespace of the XML element the reader is positioned at, and comparing the values to expected name and namespace.</span></span> <span data-ttu-id="a96d0-236">預期的名稱和命名空間可以使用下列項目進行設定：傳入建構函式之型別的資料合約名稱和命名空間，或是傳入建構函式的 `rootName` 和 `rootNamespace` 值 (如果有的話)。</span><span class="sxs-lookup"><span data-stu-id="a96d0-236">The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the `rootName` and `rootNamespace` values passed into the constructor (if present).</span></span>  
  
 <span data-ttu-id="a96d0-237">您可以在下列建構函式中設定 `rootName` 和 `rootNamespace`：<xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29>、<xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29> 和 <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29>。</span><span class="sxs-lookup"><span data-stu-id="a96d0-237">You can set the `rootName` and `rootNamespace` in the following constructors: <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29>, <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a96d0-238">呼叫此方法不受信任的資料時，會造成安全性風險。</span><span class="sxs-lookup"><span data-stu-id="a96d0-238">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="a96d0-239">呼叫這個方法僅使用信任的資料。</span><span class="sxs-lookup"><span data-stu-id="a96d0-239">Call this method only with trusted data.</span></span> <span data-ttu-id="a96d0-240">如需詳細資訊，請參閱[資料驗證](https://www.owasp.org/index.php/Data_Validation)。</span><span class="sxs-lookup"><span data-stu-id="a96d0-240">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a96d0-241">
            <paramref name="reader" /> 設定為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-241">the <paramref name="reader" /> is set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream stream, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.Stream stream, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Serialize(System::IO::Stream ^ stream, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="a96d0-242">要用於序列化的 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-242">The <see cref="T:System.IO.Stream" /> to serialize with.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a96d0-243">要序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-243">The object to serialize.</span>
          </span>
          <span data-ttu-id="a96d0-244">這個根物件的所有子物件都會自動序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-244">All child objects of this root object are automatically serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-245">使用指定的寫入器序列化指定的物件圖形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-245">Serializes the specified object graph using the specified writer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SurrogateSelector">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ISurrogateSelector SurrogateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ISurrogateSelector SurrogateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.SurrogateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property SurrogateSelector As ISurrogateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ISurrogateSelector ^ SurrogateSelector { System::Runtime::Serialization::ISurrogateSelector ^ get(); void set(System::Runtime::Serialization::ISurrogateSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISurrogateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a96d0-246">取得或設定物件，該物件會協助選取用於序列化之代理時的格式器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-246">Gets or sets an object that assists the formatter when selecting a surrogate for serialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a96d0-247">用於選取代理的 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-247">An <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> for selecting a surrogate.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96d0-248">如需有關<xref:System.Runtime.Serialization.IDataContractSurrogate>，請參閱[資料合約 Surrogate](~/docs/framework/wcf/extending/data-contract-surrogates.md)。</span><span class="sxs-lookup"><span data-stu-id="a96d0-248">For more information about the <xref:System.Runtime.Serialization.IDataContractSurrogate>, see [Data Contract Surrogates](~/docs/framework/wcf/extending/data-contract-surrogates.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.ISurrogateSelector" />
        <altmember cref="T:System.Runtime.Serialization.IFormatter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEndObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a96d0-249">使用指定的寫入器寫入結尾 XML 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-249">Writes the closing XML element using the specified writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96d0-250"><xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> 方法可用來以下列模式連續寫入完整的序列化：寫入開始、寫入內容和寫入結束。</span><span class="sxs-lookup"><span data-stu-id="a96d0-250">The <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> methods are used in succession to write the complete serialization using the pattern: write start, write content, and write end.</span></span> <span data-ttu-id="a96d0-251"><xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A> 方法也會呼叫這三個方法。</span><span class="sxs-lookup"><span data-stu-id="a96d0-251">The three methods are also called by the <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a96d0-252">用於寫入 XML 文件或資料流的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-252">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-253">使用 <see cref="T:System.Xml.XmlDictionaryWriter" /> 寫入結尾 XML 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-253">Writes the closing XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a96d0-254">下列範例會建立要序列化的物件、<xref:System.Runtime.Serialization.NetDataContractSerializer> 的執行個體和 <xref:System.Xml.XmlDictionaryWriter> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="a96d0-254">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="a96d0-255">這個範例使用 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> 方法，將物件資料寫入 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="a96d0-255">The example uses the <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> methods to write the object data into the XML document.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#5](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#5)]
 [!code-vb[NetDataContractSerializer#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a96d0-256">
            <paramref name="writer" /> 設定為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-256">the <paramref name="writer" /> is set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a96d0-257">用於寫入 XML 文件或資料流的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-257">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-258">使用 <see cref="T:System.Xml.XmlWriter" /> 寫入結尾 XML 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-258">Writes the closing XML element using an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a96d0-259">
            <paramref name="writer" /> 設定為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-259">the <paramref name="writer" /> is set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public override void WriteObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObject (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObject(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a96d0-260">用來撰寫 XML 文件或資料流的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-260">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a96d0-261">包含要寫入之內容的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-261">The object containing the content to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-262">使用指定的 <see cref="T:System.Xml.XmlWriter" />，將物件的完整內容 (開始、內容和結束) 寫入至 XML 文件或資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-262">Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a96d0-263">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-263">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a96d0-264">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-264">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a96d0-265">正在序列化的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-265">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="a96d0-266">已超過要序列化的物件數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-266">the maximum number of object to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="a96d0-267">檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-267">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteObjectContent">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a96d0-268">使用指定的寫入器寫入 XML 內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-268">Writes the XML content using the specified writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a96d0-269"><xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> 方法可用來以下列模式連續寫入完整的序列化：寫入開始、寫入內容和寫入結束。</span><span class="sxs-lookup"><span data-stu-id="a96d0-269">The <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> methods are used in succession to write the complete serialization using the pattern: write start, write content, and write end.</span></span> <span data-ttu-id="a96d0-270"><xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A> 方法也會呼叫這三個方法。</span><span class="sxs-lookup"><span data-stu-id="a96d0-270">The three methods are also called by the <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public override void WriteObjectContent (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObjectContent(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObjectContent (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObjectContent(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a96d0-271">用於寫入 XML 內容的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-271">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML content.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a96d0-272">要序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-272">The object to serialize.</span>
          </span>
          <span data-ttu-id="a96d0-273">這個根物件的所有子物件都會自動序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-273">All child objects of this root object are automatically serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-274">使用 <see cref="T:System.Xml.XmlDictionaryWriter" /> 寫入 XML 內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-274">Writes the XML content using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a96d0-275">下列範例會建立要序列化的物件、<xref:System.Runtime.Serialization.NetDataContractSerializer> 的執行個體和 <xref:System.Xml.XmlDictionaryWriter> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="a96d0-275">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="a96d0-276">這個範例使用 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> 方法，將物件資料寫入 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="a96d0-276">The example uses the <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> methods to write the object data into the XML document.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#5](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#5)]
 [!code-vb[NetDataContractSerializer#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a96d0-277">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-277">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a96d0-278">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-278">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a96d0-279">正在序列化的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-279">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="a96d0-280">已超過要序列化的物件數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-280">the maximum number of object to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="a96d0-281">檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-281">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public override void WriteObjectContent (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObjectContent(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObjectContent (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObjectContent(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a96d0-282">用於寫入 XML 內容的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-282">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML content.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a96d0-283">要序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-283">The object to serialize.</span>
          </span>
          <span data-ttu-id="a96d0-284">這個根物件的所有子物件都會自動序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-284">All child objects of this root object are automatically serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-285">使用 <see cref="T:System.Xml.XmlWriter" /> 寫入 XML 內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-285">Writes the XML content using an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a96d0-286">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-286">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a96d0-287">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-287">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a96d0-288">正在序列化的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-288">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="a96d0-289">已超過要序列化的物件數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-289">the maximum number of object to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="a96d0-290">檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-290">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a96d0-291">使用指定的寫入器寫入開頭 XML 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-291">Writes the opening XML element using the specified writer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a96d0-292">用於寫入 XML 項目的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-292">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML element.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a96d0-293">要序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-293">The object to serialize.</span>
          </span>
          <span data-ttu-id="a96d0-294">這個根物件的所有子物件都會自動序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-294">All child objects of this root object are automatically serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-295">使用 <see cref="T:System.Xml.XmlDictionaryWriter" /> 寫入開頭 XML 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-295">Writes the opening XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a96d0-296">下列範例會建立要序列化的物件、<xref:System.Runtime.Serialization.NetDataContractSerializer> 的執行個體和 <xref:System.Xml.XmlDictionaryWriter> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="a96d0-296">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="a96d0-297">這個範例使用 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>、<xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A> 和 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> 方法，將物件資料寫入 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="a96d0-297">The example uses the <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> methods to write the object data into the XML document.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#5](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#5)]
 [!code-vb[NetDataContractSerializer#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a96d0-298">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-298">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a96d0-299">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-299">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a96d0-300">正在序列化的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-300">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="a96d0-301">已超過要序列化的物件數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-301">the maximum number of object to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="a96d0-302">檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-302">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a96d0-303">用於寫入 XML 項目的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-303">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML element.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a96d0-304">要序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-304">The object to serialize.</span>
          </span>
          <span data-ttu-id="a96d0-305">這個根物件的所有子物件都會自動序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-305">All child objects of this root object are automatically serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a96d0-306">使用 <see cref="T:System.Xml.XmlWriter" /> 寫入開頭 XML 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-306">Writes the opening XML element using an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a96d0-307">正在序列化的型別不符合資料合約規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-307">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a96d0-308">例如，<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 屬性尚未套用至此型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-308">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a96d0-309">正在序列化的執行個體發生問題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-309">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="a96d0-310">已超過要序列化的物件數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-310">the maximum number of object to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="a96d0-311">檢查 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a96d0-311">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>