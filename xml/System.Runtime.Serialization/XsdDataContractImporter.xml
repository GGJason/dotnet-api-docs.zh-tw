<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XsdDataContractImporter.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d1e9a9c7ca5420f198e5489d5848a82e872d5211.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1e9a9c7ca5420f198e5489d5848a82e872d5211</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>Allows the transformation of a set of XML schema files (.xsd) into common language runtime (CLR) types.</source>
          <target state="translated">允許將 XML 結構描述檔案 (.xsd) 集合轉換為 Common Language Runtime (CLR) 型別。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> if you are creating a Web service that must interoperate with an existing Web service, or to create data contract types from XML schemas.</source>
          <target state="translated">如果您要建立必須與現有 Web 服務相互操作的 Web 服務，或從 XML 結構描述建立資料合約型別，便可使用  <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> 。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source><ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> will transform a set of XML schemas and create the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> types that represent the data contract in a selected programming language.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> 將轉換 XML 結構描述集合並建立 <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 型別，這些類別會表示採用所選定程式設計語言的資料合約。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>To create the code, use the classes in the <ph id="ph1">&lt;xref:System.CodeDom&gt;</ph> namespace.</source>
          <target state="translated">為了建立程式碼，此時會使用 <ph id="ph1">&lt;xref:System.CodeDom&gt;</ph> 命名空間 (Namespace) 中的類別。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>Conversely, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> class when you have created a Web service that incorporates data represented by CLR types and when you need to export XML schemas for each data type to be consumed by other Web services.</source>
          <target state="translated">相對地，當您已建立合併 CLR 型別表示之資料的 Web 服務，以及當您需要匯出其他 Web 服務要取用之每個資料型別的 XML 結構描述時，則要使用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> 類別。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>That is, <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> transforms a set of CLR types into a set of XML schemas.</source>
          <target state="translated">也就是 <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> 會將 CLR 型別集合轉換為 XML 結構描述集合。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>To generate CLR types from XML schemas at design time, use the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>.</source>
          <target state="translated">若要從 XML 結構描述產生 CLR 型別，在設計階段，請使用<bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>To generated code from XSD files, use the <ph id="ph1">`/dataContractOnly`</ph> switch of the tool.</source>
          <target state="translated">若要從 XSD 檔案產生程式碼，使用<ph id="ph1">`/dataContractOnly`</ph>工具的參數。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> if you need more control over the process or need to do it programmatically.</source>
          <target state="translated">如果需要更進一步控制處理序，或需要以程式設計的方式進行，您也可以使用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</ph> method to create a <ph id="ph3">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>.</source>
          <target state="translated">下列範例會建立 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>，然後呼叫 <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</ph> 方法來建立 <ph id="ph3">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> is then used to create both Visual C# and Visual Basic code files.</source>
          <target state="translated">接著，<ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> 便可用來同時建立 Visual C# 和 Visual Basic 程式碼檔案。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> that will be used to store the code.</source>
          <target state="translated">將用來儲存程式碼的 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /&gt;</ph> class with the <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> that will be used to generate CLR code.</source>
          <target state="translated">使用將用來產生 CLR 程式碼的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /&gt;</ph>，初始化 <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)">
          <source>Use this constructor to add more code into a <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> that has already been generated.</source>
          <target state="translated">使用這個建構函式，將更多程式碼新增至已經產生的 <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</ph> method to create a <ph id="ph3">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>.</source>
          <target state="translated">下列範例會建立 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>，然後呼叫 <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</ph> 方法來建立 <ph id="ph3">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> is then used to create both Visual C# and Visual Basic code files.</source>
          <target state="translated">接著，<ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> 便可用來同時建立 Visual C# 和 Visual Basic 程式碼檔案。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>Gets a value that indicates whether the schemas can be transformed into a <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</source>
          <target state="translated">取得值，這個值會指出結構描述是否能夠轉換為 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>For more information about types that can be imported, see <bpt id="p1">[</bpt>Types Supported by the Data Contract Serializer<ept id="p1">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>.</source>
          <target state="translated">如需可以匯入的類型的詳細資訊，請參閱<bpt id="p1">[</bpt>資料合約序列化程式所支援的型別<ept id="p1">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that contains the schemas to transform.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>，其中包含要轉換的結構描述。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)">
          <source>Gets a value that indicates whether the schemas contained in an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> can be transformed into a <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</source>
          <target state="translated">取得值，這個值會指出包含在 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中的結構描述是否能轉換成 <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the schemas can be transformed to data contract types; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果結構描述可以轉換成資料合約類型，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A&gt;</ph> method to determine whether the <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> can be generated.</source>
          <target state="translated">下列範例會呼叫 <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A&gt;</ph> 方法來判定是否能夠產生 <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)">
          <source>The <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)">
          <source>A data contract involved in the import is invalid.</source>
          <target state="translated">在匯入作業中的資料合約無效。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that contains the schemas to transform.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>，其中包含要轉換的結構描述。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that represents the set of schema types to import.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>，表示要匯入的結構描述類型集合。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
          <source>Gets a value that indicates whether the specified set of types contained in an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> can be transformed into CLR types generated into a <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</source>
          <target state="translated">取得值，這個值會指示包含在 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 的已指定型別集合是否能夠轉換為在 <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> 中產生的 CLR 型別。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the schemas can be transformed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果該結構描述能夠轉換，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
          <source>The <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> or <ph id="ph2">&lt;paramref name="typeNames" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="typeNames" /&gt;</ph> 參數為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
          <source>A data contract involved in the import is invalid.</source>
          <target state="translated">在匯入作業中的資料合約無效。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to import.</source>
          <target state="translated">要匯入的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>A specific <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph> to check in the set of schemas.</source>
          <target state="translated">要在結構描述集合中檢查的特定 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>Gets a value that indicates whether a specific schema element contained in an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> can be imported.</source>
          <target state="translated">取得值，這個值會指出是否能夠匯入包含在 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 的特定結構描述項目。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element can be imported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果此項目可以匯入，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>This method checks the type and all schema types referenced from it.</source>
          <target state="translated">這個方法會檢查此類型，以及它所參考的所有結構描述類型。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>The <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> or <ph id="ph2">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="element" /&gt;</ph> 參數為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>A data contract involved in the import is invalid.</source>
          <target state="translated">在匯入作業中的資料合約無效。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that contains the schema representations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>，其中包含結構描述表示。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that specifies the names of the schema types that need to be imported from the <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>，其中指定必須從 <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 匯入的結構描述類型名稱。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>Gets a value that indicates whether the schemas contained in an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> can be transformed into a <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</source>
          <target state="translated">取得值，這個值會指出包含在 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中的結構描述是否能轉換成 <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the schemas can be transformed to data contract types; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果結構描述可以轉換成資料合約類型，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>For more information about types that can be imported, see <bpt id="p1">[</bpt>Types Supported by the Data Contract Serializer<ept id="p1">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>.</source>
          <target state="translated">如需可以匯入的類型的詳細資訊，請參閱<bpt id="p1">[</bpt>資料合約序列化程式所支援的型別<ept id="p1">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>The <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> or <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> 參數為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>A data contract involved in the import is invalid.</source>
          <target state="translated">在匯入作業中的資料合約無效。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> used for storing the CLR types generated.</source>
          <target state="translated">取得用來儲存產生之 CLR 型別的 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> used to store the CLR types generated.</source>
          <target state="translated">用來儲存產生之 CLR 型別的 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit">
          <source>Call this property after importing schemas using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> to access the <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> in which all the generated code is stored.</source>
          <target state="translated">在使用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> 匯入結構描述後，呼叫這個屬性來存取其中已儲存所有產生之程式碼的 <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit">
          <source>The following example uses creates a <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>.</source>
          <target state="translated">下列範例將建立 <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> is then used to create both a Visual C# and Visual Basic code file.</source>
          <target state="translated">接著，<ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> 便可用來同時建立 Visual C# 和 Visual Basic 程式碼檔案。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> for the specified element.</source>
          <target state="translated">傳回指定項目的 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that specifies the schema type to look up.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>，它會指定要查詢的結構描述型別。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> to the CLR type generated for the schema type with the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> 傳回給具有已指定 <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> 之結構描述型別所產生的 CLR 型別。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> reference to the CLR type generated for the schema type with the <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> specified.</source>
          <target state="translated">具有已指定 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> 之結構描述型別所產生之 CLR 型別的 <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> 參考。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)">
          <source>Use this method to look up the reference to a generated CLR type after calling the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</ph> method.</source>
          <target state="translated">在呼叫 <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</ph> 方法後，即可使用這個方法來查詢產生之 CLR 型別的參考。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> contains the name of the generated type and can be used to look up the corresponding <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;</ph> in the <ph id="ph3">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>，其中包含所產生型別的名稱，並且能夠用來在 <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;</ph> 中查詢對應的 <ph id="ph3">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that specifies the XML qualified name of the schema type to look up.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>，其中指定要查詢之結構描述型別的 XML 限定名稱。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph> that specifies an element in an XML schema.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>，其中指定 XML 結構描述中的項目。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> for the specified XML qualified element and schema element.</source>
          <target state="translated">傳回指定之 XML 限定項目和結構描述項目的 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> that represents the type that was generated for the specified schema type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>，表示為指定之結構描述型別產生的型別。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
          <source>The schema element is needed for data about the type that is specified at the element scope.</source>
          <target state="translated">與指定於項目範圍中之類型有關的資料需要結構描述項目。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
          <source>The main example of this is the XSD attribute <ph id="ph1">`nillable`</ph>.</source>
          <target state="translated">這種情況的主要範例是 XSD 屬性 <ph id="ph1">`nillable`</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
          <source>In schema, setting <ph id="ph1">`nillable`</ph> to <ph id="ph2">`true`</ph> is specified on the containing schema element whereas the concept of null is expressed in the CLR type <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph>.</source>
          <target state="translated">在結構描述中，包含結構描述項目上已經指定將 <ph id="ph1">`nillable`</ph> 設定為 <ph id="ph2">`true`</ph>，而 null 的概念則會在 CLR 類型 <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> 中表示。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
          <source>The element is passed in so that this importer can look up the element-level information and return the correct type reference accordingly.</source>
          <target state="translated">此項目會被傳入，讓這個匯入工具能夠查詢項目層級的資訊，並且傳回對應的正確型別參考。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
          <source>When importing WSDL, each parameter is imported separately and therefore the parameter elements need to be passed in separately.</source>
          <target state="translated">當匯入 WSDL 時，每個參數都會分開匯入，如此一來，這些參數項目就需要分開進行傳入。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that represents the schema type to look up known types for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>，表示要查詢已知型別的結構描述型別。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
          <source>Returns a list of <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> objects that represents the known types generated when generating code for the specified schema type.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> 物件的清單，這份清單表示當產生指定之結構描述型別的程式碼時所產生的已知型別。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>.</source>
          <target state="translated">型別為 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
          <source>When generating CLR types for schema types, known types are also generated for all derived types that are present in the schema.</source>
          <target state="translated">當產生結構描述型別的 CLR 型別時，也會同時為存在於結構描述中的所有衍生型別產生已知型別。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
          <source>In many cases, these known types are added using attributes to the generated code.</source>
          <target state="translated">在許多情況下，這些已知型別會透過屬性來加入至產生的程式碼 </target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
          <source>(For example, see the <ph id="ph1">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> class.</source>
          <target state="translated">(例如，請參閱<ph id="ph1">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
          <source>) However, for the top-level type, there needs to be a way to return the set of known types generated.</source>
          <target state="translated">） 不過，最上層型別，需要具備方法可傳回產生的已知型別的集合。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
          <source>This method returns the <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> for known types that were generated for a specific schema type.</source>
          <target state="translated">這個方法會針對特定結構描述型別所產生的已知型別，傳回 <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Contract Known Types<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-known-types.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>資料合約已知型別<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-known-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>Transforms a set of XML schemas into a <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> used to generate CLR code.</source>
          <target state="translated">將 XML 結構描述集合轉換為用來產生 CLR 程式碼的 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that contains the schema representations to generate CLR types for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>，其中包含要產生 CLR 類型的結構描述表示。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)">
          <source>Transforms the specified set of XML schemas contained in an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> into a <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</source>
          <target state="translated">將包含在 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 的已指定 XML 結構描述集合轉換為 <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A&gt;</ph> method to test whether a set of schemas can be imported.</source>
          <target state="translated">下列範例會使用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A&gt;</ph> 方法來測試是否能夠匯入結構描述集合。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)">
          <source>If the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, the code invokes the <ph id="ph3">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</ph> method.</source>
          <target state="translated">如果 <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A&gt;</ph> 方法傳回 <ph id="ph2">`true`</ph>，程式碼就會叫用 <ph id="ph3">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)">
          <source>The <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that contains the schema representations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>，其中包含結構描述表示。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> (of <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>) that represents the set of schema types to import.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> (屬於 <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>)，表示要匯入的結構描述類型集合。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
          <source>Transforms the specified set of schema types contained in an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> into CLR types generated into a <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</source>
          <target state="translated">將包含在 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 的已指定結構描述型別集合轉換為在 <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> 中產生的 CLR 型別。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that contains the schemas to transform.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>，其中包含要轉換的結構描述。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph> that represents the specific schema element to transform.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>，表示要轉換的特定結構描述項目。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>Transforms the specified schema element in the set of specified XML schemas into a <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> and returns an <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that represents the data contract name for the specified element.</source>
          <target state="translated">將已指定 XML 結構描述集合中的已指定結構描述項目轉換為 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>，然後傳回 <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>，其中表示所指定項目的資料合約名稱。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that represents the specified element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>，表示指定的項目。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>The <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> or <ph id="ph2">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="element" /&gt;</ph> 參數為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that contains the schema representations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>，其中包含結構描述表示。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that represents a specific schema type to import.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>，表示要匯入的特定結構描述類型。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>Transforms the specified XML schema type contained in an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> into a <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</source>
          <target state="translated">將包含在 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 的已指定 XML 結構描述型別集合轉換為 <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>The <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> or <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> 參數為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.XsdDataContractImporter.Options">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ImportOptions" /&gt;</ph> that contains settable options for the import operation.</source>
          <target state="translated">取得或設定 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ImportOptions" /&gt;</ph>，其中包含匯入作業的可設定選項。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.XsdDataContractImporter.Options">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ImportOptions" /&gt;</ph> that contains settable options.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ImportOptions" /&gt;</ph>，其中包含可設定選項。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.XsdDataContractImporter.Options">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ImportOptions&gt;</ph> class to customize how the CLR types are generated during schema import.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.Runtime.Serialization.ImportOptions&gt;</ph> 類別，即可自訂如何在結構描述匯入期間產生 CLR 型別。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>