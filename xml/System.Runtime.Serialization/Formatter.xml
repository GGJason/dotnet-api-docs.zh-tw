<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Formatter.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ab8fa61b16a94832a03fc9d7b3f99cd259c73ff7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab8fa61b16a94832a03fc9d7b3f99cd259c73ff7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Formatter">
          <source>Provides base functionality for the common language runtime serialization formatters.</source>
          <target state="translated">將基本功能提供給 Common Language Runtime 序列化格式子 (Serialization Formatter)。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Formatter">
          <source><ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter&gt;</ph> is the <ph id="ph2">`abstract`</ph> base class for all runtime serialization formatters, and provides some helper methods for implementing the <ph id="ph3">&lt;xref:System.Runtime.Serialization.IFormatter&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter&gt;</ph> 是<ph id="ph2">`abstract`</ph>為所有的執行階段序列化格式子的基底類別，並提供一些協助程式方法，來實作<ph id="ph3">&lt;xref:System.Runtime.Serialization.IFormatter&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Formatter">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter&gt;</ph> also manages queuing objects for serialization and generating IDs on a per-object basis.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter&gt;</ph>也會管理佇列的物件序列化，並產生識別碼以每個物件為基礎。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Formatter">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatter" /&gt;</ph>, you must override the following members:</source>
          <target state="translated">當您繼承自<ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatter" /&gt;</ph>，您必須覆寫下列成員：</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatter" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.#ctor">
          <source>Creates a <ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph> for objects to serialize and a <ph id="ph2">&lt;xref:System.Runtime.Serialization.ObjectIDGenerator&gt;</ph> to generate IDs for them.</source>
          <target state="translated">建立<ph id="ph1">&lt;xref:System.Collections.Queue&gt;</ph>要序列化的物件和<ph id="ph2">&lt;xref:System.Runtime.Serialization.ObjectIDGenerator&gt;</ph>產生識別碼。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Formatter.Binder">
          <source>When overridden in a derived class, gets or sets the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationBinder" /&gt;</ph> used with the current formatter.</source>
          <target state="translated">當覆寫於衍生類別時，取得或設定與目前的格式子使用的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationBinder" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Formatter.Binder">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationBinder" /&gt;</ph> used with the current formatter.</source>
          <target state="translated">搭配目前格式器使用的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationBinder" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Formatter.Binder">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationBinder&gt;</ph> performs lookups for types from the type names passed during deserialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationBinder&gt;</ph>會執行查閱的類型還原序列化期間所傳遞的型別名稱。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Formatter.Binder">
          <source>If no <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationBinder&gt;</ph> is set, a default is used.</source>
          <target state="translated">如果沒有<ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationBinder&gt;</ph>已經設定，會使用預設值。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Formatter.Binder">
          <source>You must implement this property in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個屬性。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Formatter.Context">
          <source>When overridden in a derived class, gets or sets the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> used for the current serialization.</source>
          <target state="translated">當覆寫於衍生類別時，取得或設定用於目前序列化的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Formatter.Context">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> used for the current serialization.</source>
          <target state="translated">用於目前序列化的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Formatter.Context">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;</ph> is an indication of either the source of the bits being deserialized or the destination of the bits being serialized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;</ph>是中的其中一個表示在還原序列化的位元來源或目的地正在序列化的位元。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Formatter.Context">
          <source>It has no impact on default serialization, but is passed as an argument to <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;</ph>.</source>
          <target state="translated">它預設序列化，沒有任何影響，但傳遞的引數為<ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>和<ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Formatter.Context">
          <source>You must implement this property in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個屬性。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.Deserialize(System.IO.Stream)">
          <source>The stream to deserialize.</source>
          <target state="translated">要還原序列化的資料流。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.Deserialize(System.IO.Stream)">
          <source>When overridden in a derived class, deserializes the stream attached to the formatter when it was created, creating a graph of objects identical to the graph originally serialized into that stream.</source>
          <target state="translated">當覆寫於衍生類別時，還原序列化建立時即附加至格式子的資料流，建立與原本序列化至資料流之 Graph 相同的物件 Graph。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.Deserialize(System.IO.Stream)">
          <source>The top object of the deserialized graph of objects.</source>
          <target state="translated">還原序列化物件 Graph 的最上層物件。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.Deserialize(System.IO.Stream)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.GetNext(System.Int64@)">
          <source>The ID assigned to the current object during serialization.</source>
          <target state="translated">在序列化期間指定給目前物件的 ID。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.GetNext(System.Int64@)">
          <source>Returns the next object to serialize, from the formatter's internal work queue.</source>
          <target state="translated">從格式子的內部工作佇列傳回要序列化的下一個物件。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.GetNext(System.Int64@)">
          <source>The next object to serialize.</source>
          <target state="translated">要序列化的下一個物件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.GetNext(System.Int64@)">
          <source>Objects are returned in a first in first out order based on how they were passed to <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;</ph>.</source>
          <target state="translated">會傳回物件的先進先出順序根據它們如何傳遞給第一個<ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.GetNext(System.Int64@)">
          <source>The ID of the object is put into the <ph id="ph1">`objID`</ph> parameter and the object is returned from the function.</source>
          <target state="translated">物件的識別碼會放入<ph id="ph1">`objID`</ph>從函數傳回參數和物件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.GetNext(System.Int64@)">
          <source>The next object retrieved from the work queue did not have an assigned ID.</source>
          <target state="translated">從工作佇列擷取的下一個物件不具有指派的 ID。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Runtime.Serialization.Formatter.m_idGenerator">
          <source>Contains the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /&gt;</ph> used with the current formatter.</source>
          <target state="translated">包含與目前的格式子 (Formatter) 使用的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Serialization.Formatter.m_idGenerator">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.ObjectIDGenerator&gt;</ph> maintains a list of the objects that have been identified and the IDs that they were given.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.ObjectIDGenerator&gt;</ph>會維護一份已識別的物件和它們所指定的識別碼。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Runtime.Serialization.Formatter.m_objectQueue">
          <source>Contains a <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph> of the objects left to serialize.</source>
          <target state="translated">包含為了序列化而保留的物件 <ph id="ph1">&lt;see cref="T:System.Collections.Queue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Serialization.Formatter.m_objectQueue">
          <source>Objects scheduled for serialization with the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;</ph> method are pushed on the queue.</source>
          <target state="translated">排程與序列化的物件<ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;</ph>方法推入至佇列。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.Schedule(System.Object)">
          <source>The object to schedule for serialization.</source>
          <target state="translated">要為序列化排程的物件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.Schedule(System.Object)">
          <source>Schedules an object for later serialization.</source>
          <target state="translated">為後續的序列化排程物件。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.Schedule(System.Object)">
          <source>The object ID assigned to the object.</source>
          <target state="translated">指派給物件的物件 ID。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.Schedule(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;</ph> obtains an ID for the object and puts it on the queue for later serialization if this is a new object ID.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;</ph> 取得物件的識別碼，並將它放在後續的序列化的佇列，如果這是新的物件識別碼。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.Schedule(System.Object)">
          <source>The schedule is a work queue of objects to serialize, and is held inside the formatter.</source>
          <target state="translated">排程的工作佇列的物件序列化，並儲存於這個格式器。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.Schedule(System.Object)">
          <source>If the object is already on the work queue, it will not be added a second time, but an exception will not be thrown either.</source>
          <target state="translated">如果物件在工作佇列上已經存在，它就不會加入第二次，但例外狀況將不會擲回。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.Serialize(System.IO.Stream,System.Object)">
          <source>The stream to which the objects are serialized.</source>
          <target state="translated">物件要序列化的目的資料流。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.Serialize(System.IO.Stream,System.Object)">
          <source>The object at the root of the graph to serialize.</source>
          <target state="translated">物件，位在要序列化的 Graph 的根。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.Serialize(System.IO.Stream,System.Object)">
          <source>When overridden in a derived class, serializes the graph of objects with the specified root to the stream already attached to the formatter.</source>
          <target state="translated">當覆寫於衍生類別時，使用已附加於格式子的資料流指定根 (Root)，序列化物件的 Graph。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.Serialize(System.IO.Stream,System.Object)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Formatter.SurrogateSelector">
          <source>When overridden in a derived class, gets or sets the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISurrogateSelector" /&gt;</ph> used with the current formatter.</source>
          <target state="translated">當覆寫於衍生類別時，取得或設定與目前的格式子使用的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISurrogateSelector" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Formatter.SurrogateSelector">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISurrogateSelector" /&gt;</ph> used with the current formatter.</source>
          <target state="translated">搭配目前格式器使用的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISurrogateSelector" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Formatter.SurrogateSelector">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SurrogateSelector&gt;</ph> to look up implementations of <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;</ph> that control the serialization of a particular type.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.Serialization.SurrogateSelector&gt;</ph>查閱的實作<ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;</ph>，控制特定類型的序列化。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Formatter.SurrogateSelector">
          <source>If an object type has a matching surrogate, then serialization and deserialization are handed off to the surrogate even if the type implements the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface.</source>
          <target state="translated">如果物件擁有相符的代理，則序列化和還原序列化會遞交給 surrogate 即使型別實作<ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Formatter.SurrogateSelector">
          <source>You must implement this property in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個屬性。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteArray(System.Object,System.String,System.Type)">
          <source>The array to write.</source>
          <target state="translated">要寫入的陣列。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteArray(System.Object,System.String,System.Type)">
          <source>The name of the array.</source>
          <target state="translated">陣列名稱。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteArray(System.Object,System.String,System.Type)">
          <source>The type of elements that the array holds.</source>
          <target state="translated">陣列所存留的元素型別。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteArray(System.Object,System.String,System.Type)">
          <source>When overridden in a derived class, writes an array to the stream already attached to the formatter.</source>
          <target state="translated">當覆寫於衍生類別時，將陣列寫入至已附加於格式子的資料流。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteArray(System.Object,System.String,System.Type)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteBoolean(System.Boolean,System.String)">
          <source>The value to write.</source>
          <target state="translated">要寫入的值。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteBoolean(System.Boolean,System.String)">
          <source>The name of the member.</source>
          <target state="translated">成員的名稱。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteBoolean(System.Boolean,System.String)">
          <source>When overridden in a derived class, writes a Boolean value to the stream already attached to the formatter.</source>
          <target state="translated">當覆寫於衍生類別時，將布林值 (Boolean) 寫入至已附加於格式子的資料流。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteBoolean(System.Boolean,System.String)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteByte(System.Byte,System.String)">
          <source>The value to write.</source>
          <target state="translated">要寫入的值。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteByte(System.Byte,System.String)">
          <source>The name of the member.</source>
          <target state="translated">成員的名稱。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteByte(System.Byte,System.String)">
          <source>When overridden in a derived class, writes an 8-bit unsigned integer to the stream already attached to the formatter.</source>
          <target state="translated">當覆寫於衍生類別時，將 8 位元的不帶正負號整數 (Unsigned Integer) 寫入至已附加於格式子的資料流。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteByte(System.Byte,System.String)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteChar(System.Char,System.String)">
          <source>The value to write.</source>
          <target state="translated">要寫入的值。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteChar(System.Char,System.String)">
          <source>The name of the member.</source>
          <target state="translated">成員的名稱。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteChar(System.Char,System.String)">
          <source>When overridden in a derived class, writes a Unicode character to the stream already attached to the formatter.</source>
          <target state="translated">當覆寫於衍生類別時，將 Unicode 字元寫入至已附加於格式子的資料流。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteChar(System.Char,System.String)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteDateTime(System.DateTime,System.String)">
          <source>The value to write.</source>
          <target state="translated">要寫入的值。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteDateTime(System.DateTime,System.String)">
          <source>The name of the member.</source>
          <target state="translated">成員的名稱。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteDateTime(System.DateTime,System.String)">
          <source>When overridden in a derived class, writes a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> value to the stream already attached to the formatter.</source>
          <target state="translated">當覆寫於衍生類別時，將 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 值寫入至已附加於格式子的資料流。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteDateTime(System.DateTime,System.String)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteDecimal(System.Decimal,System.String)">
          <source>The value to write.</source>
          <target state="translated">要寫入的值。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteDecimal(System.Decimal,System.String)">
          <source>The name of the member.</source>
          <target state="translated">成員的名稱。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteDecimal(System.Decimal,System.String)">
          <source>When overridden in a derived class, writes a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value to the stream already attached to the formatter.</source>
          <target state="translated">當覆寫於衍生類別時，將 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 值寫入至已附加於格式子的資料流。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteDecimal(System.Decimal,System.String)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteDouble(System.Double,System.String)">
          <source>The value to write.</source>
          <target state="translated">要寫入的值。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteDouble(System.Double,System.String)">
          <source>The name of the member.</source>
          <target state="translated">成員的名稱。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteDouble(System.Double,System.String)">
          <source>When overridden in a derived class, writes a double-precision floating-point number to the stream already attached to the formatter.</source>
          <target state="translated">當覆寫於衍生類別時，將雙精度浮點數寫入至已附加於格式子的資料流。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteDouble(System.Double,System.String)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteInt16(System.Int16,System.String)">
          <source>The value to write.</source>
          <target state="translated">要寫入的值。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteInt16(System.Int16,System.String)">
          <source>The name of the member.</source>
          <target state="translated">成員的名稱。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteInt16(System.Int16,System.String)">
          <source>When overridden in a derived class, writes a 16-bit signed integer to the stream already attached to the formatter.</source>
          <target state="translated">當覆寫於衍生類別時，將 16 位元的帶正負號整數 (Signed Integer) 寫入至已附加於格式子的資料流。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteInt16(System.Int16,System.String)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteInt32(System.Int32,System.String)">
          <source>The value to write.</source>
          <target state="translated">要寫入的值。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteInt32(System.Int32,System.String)">
          <source>The name of the member.</source>
          <target state="translated">成員的名稱。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteInt32(System.Int32,System.String)">
          <source>When overridden in a derived class, writes a 32-bit signed integer to the stream.</source>
          <target state="translated">當覆寫於衍生類別時，將 32 位元的帶正負號整數寫入至資料流。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteInt32(System.Int32,System.String)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteInt64(System.Int64,System.String)">
          <source>The value to write.</source>
          <target state="translated">要寫入的值。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteInt64(System.Int64,System.String)">
          <source>The name of the member.</source>
          <target state="translated">成員的名稱。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteInt64(System.Int64,System.String)">
          <source>When overridden in a derived class, writes a 64-bit signed integer to the stream.</source>
          <target state="translated">當覆寫於衍生類別時，將 64 位元的帶正負號整數寫入至資料流。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteInt64(System.Int64,System.String)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteMember(System.String,System.Object)">
          <source>The name of the member to serialize.</source>
          <target state="translated">要序列化的成員名稱。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteMember(System.String,System.Object)">
          <source>The object to write to the stream attached to the formatter.</source>
          <target state="translated">要寫入至附加於格式子資料流的物件。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteMember(System.String,System.Object)">
          <source>Inspects the type of data received, and calls the appropriate <ph id="ph1">&lt;see langword="Write" /&gt;</ph> method to perform the write to the stream already attached to the formatter.</source>
          <target state="translated">檢查所接收的資料型別，並呼叫適當的 <ph id="ph1">&lt;see langword="Write" /&gt;</ph> 方法，執行對已附加於格式子的資料流寫入。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteMember(System.String,System.Object)">
          <source>To use this method properly, all the <ph id="ph1">`Write`</ph> methods (<ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatter.WriteArray%2A&gt;</ph> method, <ph id="ph3">&lt;xref:System.Runtime.Serialization.Formatter.WriteBoolean%2A&gt;</ph> method, <ph id="ph4">&lt;xref:System.Runtime.Serialization.Formatter.WriteByte%2A&gt;</ph> method, and so on) should have the appropriate functionality.</source>
          <target state="translated">若要正常運作，使用這個方法所有<ph id="ph1">`Write`</ph>方法 (<ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatter.WriteArray%2A&gt;</ph>方法，<ph id="ph3">&lt;xref:System.Runtime.Serialization.Formatter.WriteBoolean%2A&gt;</ph>方法，<ph id="ph4">&lt;xref:System.Runtime.Serialization.Formatter.WriteByte%2A&gt;</ph>方法，以及其他) 應該有適當的功能。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteObjectRef(System.Object,System.String,System.Type)">
          <source>The object reference to write.</source>
          <target state="translated">要寫入的物件參考。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteObjectRef(System.Object,System.String,System.Type)">
          <source>The name of the member.</source>
          <target state="translated">成員的名稱。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteObjectRef(System.Object,System.String,System.Type)">
          <source>The type of object the reference points to.</source>
          <target state="translated">參考所指向的物件型別。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteObjectRef(System.Object,System.String,System.Type)">
          <source>When overridden in a derived class, writes an object reference to the stream already attached to the formatter.</source>
          <target state="translated">當覆寫於衍生類別時，將物件參考寫入至已附加於格式子的資料流。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteObjectRef(System.Object,System.String,System.Type)">
          <source>Schedules the object with the graph walker to handle the work.</source>
          <target state="translated">排程處理工作，圖形查核器使用的物件。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteObjectRef(System.Object,System.String,System.Type)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteSByte(System.SByte,System.String)">
          <source>The value to write.</source>
          <target state="translated">要寫入的值。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteSByte(System.SByte,System.String)">
          <source>The name of the member.</source>
          <target state="translated">成員的名稱。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteSByte(System.SByte,System.String)">
          <source>When overridden in a derived class, writes an 8-bit signed integer to the stream already attached to the formatter.</source>
          <target state="translated">當覆寫於衍生類別時，將 8 位元的帶正負號整數寫入至已附加於格式子的資料流。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteSByte(System.SByte,System.String)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteSingle(System.Single,System.String)">
          <source>The value to write.</source>
          <target state="translated">要寫入的值。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteSingle(System.Single,System.String)">
          <source>The name of the member.</source>
          <target state="translated">成員的名稱。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteSingle(System.Single,System.String)">
          <source>When overridden in a derived class, writes a single-precision floating-point number to the stream already attached to the formatter.</source>
          <target state="translated">當覆寫於衍生類別時，將單精確度浮點數寫入至已附加於格式子的資料流。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteSingle(System.Single,System.String)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteTimeSpan(System.TimeSpan,System.String)">
          <source>The value to write.</source>
          <target state="translated">要寫入的值。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteTimeSpan(System.TimeSpan,System.String)">
          <source>The name of the member.</source>
          <target state="translated">成員的名稱。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteTimeSpan(System.TimeSpan,System.String)">
          <source>When overridden in a derived class, writes a <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> value to the stream already attached to the formatter.</source>
          <target state="translated">當覆寫於衍生類別時，將 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> 值寫入至已附加於格式子的資料流。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteTimeSpan(System.TimeSpan,System.String)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteUInt16(System.UInt16,System.String)">
          <source>The value to write.</source>
          <target state="translated">要寫入的值。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteUInt16(System.UInt16,System.String)">
          <source>The name of the member.</source>
          <target state="translated">成員的名稱。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteUInt16(System.UInt16,System.String)">
          <source>When overridden in a derived class, writes a 16-bit unsigned integer to the stream already attached to the formatter.</source>
          <target state="translated">當覆寫於衍生類別時，將 16 位元的不帶正負號整數寫入至已附加於格式子的資料流。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteUInt16(System.UInt16,System.String)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteUInt32(System.UInt32,System.String)">
          <source>The value to write.</source>
          <target state="translated">要寫入的值。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteUInt32(System.UInt32,System.String)">
          <source>The name of the member.</source>
          <target state="translated">成員的名稱。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteUInt32(System.UInt32,System.String)">
          <source>When overridden in a derived class, writes a 32-bit unsigned integer to the stream already attached to the formatter.</source>
          <target state="translated">當覆寫於衍生類別時，將 32 位元的不帶正負號整數寫入至已附加於格式子的資料流。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteUInt32(System.UInt32,System.String)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteUInt64(System.UInt64,System.String)">
          <source>The value to write.</source>
          <target state="translated">要寫入的值。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteUInt64(System.UInt64,System.String)">
          <source>The name of the member.</source>
          <target state="translated">成員的名稱。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteUInt64(System.UInt64,System.String)">
          <source>When overridden in a derived class, writes a 64-bit unsigned integer to the stream already attached to the formatter.</source>
          <target state="translated">當覆寫於衍生類別時，將 64 位元的不帶正負號整數寫入至已附加於格式子的資料流。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteUInt64(System.UInt64,System.String)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteValueType(System.Object,System.String,System.Type)">
          <source>The object representing the value type.</source>
          <target state="translated">表示實值型別 (Value Type) 的物件。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteValueType(System.Object,System.String,System.Type)">
          <source>The name of the member.</source>
          <target state="translated">成員的名稱。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteValueType(System.Object,System.String,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the value type.</source>
          <target state="translated">值型別的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Formatter.WriteValueType(System.Object,System.String,System.Type)">
          <source>When overridden in a derived class, writes a value of the given type to the stream already attached to the formatter.</source>
          <target state="translated">當覆寫於衍生類別時，將指定型別值寫入至已附加於格式子的資料流。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Formatter.WriteValueType(System.Object,System.String,System.Type)">
          <source>You must implement this method in a derived class.</source>
          <target state="translated">您必須在衍生類別中實作這個方法。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>