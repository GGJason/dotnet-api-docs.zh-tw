<Type Name="ImmutableInterlocked" FullName="System.Collections.Immutable.ImmutableInterlocked">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d19aa0691ed03f804f80061cb74c1dca4cddf890" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30369412" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ImmutableInterlocked" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableInterlocked extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableInterlocked" />
  <TypeSignature Language="VB.NET" Value="Public Class ImmutableInterlocked" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableInterlocked abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fd664-101">包含不可變集合之連鎖交換機制。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fd664-101">Contains interlocked exchange mechanisms for immutable collections.</span>
      </span>
      <span data-ttu-id="fd664-102">**NuGet 套件**：<see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">關於固定集合及其安裝方法</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="fd664-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <threadsafe>
      <span data-ttu-id="fd664-103">此型別具備執行緒安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fd664-103">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="AddOrUpdate&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue AddOrUpdate&lt;TKey,TValue&gt; (ref System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; location, TKey key, Func&lt;TKey,TValue&gt; addValueFactory, Func&lt;TKey,TValue,TValue&gt; updateValueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue AddOrUpdate&lt;TKey, TValue&gt;(class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt;&amp; location, !!TKey key, class System.Func`2&lt;!!TKey, !!TValue&gt; addValueFactory, class System.Func`3&lt;!!TKey, !!TValue, !!TValue&gt; updateValueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableInterlocked.AddOrUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``1},System.Func{``0,``1,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddOrUpdate(Of TKey, TValue) (ByRef location As ImmutableDictionary(Of TKey, TValue), key As TKey, addValueFactory As Func(Of TKey, TValue), updateValueFactory As Func(Of TKey, TValue, TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static TValue AddOrUpdate(System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ % location, TKey key, Func&lt;TKey, TValue&gt; ^ addValueFactory, Func&lt;TKey, TValue, TValue&gt; ^ updateValueFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;&amp;" RefType="ref" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="addValueFactory" Type="System.Func&lt;TKey,TValue&gt;" />
        <Parameter Name="updateValueFactory" Type="System.Func&lt;TKey,TValue,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <param name="location">
          <span data-ttu-id="fd664-104">如果字典中沒有指定的變數或欄位，該變數或欄位會自動更新。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-104">The variable or field to atomically update if the specified  is not in the dictionary.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fd664-105">要加入或更新之值的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-105">The key for the value to add or update.</span>
          </span>
        </param>
        <param name="addValueFactory">
          <span data-ttu-id="fd664-106">此函式會接收索引鍵，當先前沒有值存在時，此函式會傳回新值以加入字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-106">The function that receives the key and returns a new value to add to the dictionary when no value previously exists.</span>
          </span>
        </param>
        <param name="updateValueFactory">
          <span data-ttu-id="fd664-107">此函式會接收索引鍵和先前的值，並傳回要用來更新字典的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-107">The function that receives the key and prior value and returns the new value with which to update the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd664-108">在新增值或更新現有項目之後，從字典取得該值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-108">Obtains the value from a dictionary after having added it or updated an existing entry.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd664-109">已加入或已更新的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-109">The added or updated value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue AddOrUpdate&lt;TKey,TValue&gt; (ref System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; location, TKey key, TValue addValue, Func&lt;TKey,TValue,TValue&gt; updateValueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue AddOrUpdate&lt;TKey, TValue&gt;(class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt;&amp; location, !!TKey key, !!TValue addValue, class System.Func`3&lt;!!TKey, !!TValue, !!TValue&gt; updateValueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableInterlocked.AddOrUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1,System.Func{``0,``1,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddOrUpdate(Of TKey, TValue) (ByRef location As ImmutableDictionary(Of TKey, TValue), key As TKey, addValue As TValue, updateValueFactory As Func(Of TKey, TValue, TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static TValue AddOrUpdate(System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ % location, TKey key, TValue addValue, Func&lt;TKey, TValue, TValue&gt; ^ updateValueFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;&amp;" RefType="ref" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="addValue" Type="TValue" />
        <Parameter Name="updateValueFactory" Type="System.Func&lt;TKey,TValue,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">To be added.</typeparam>
        <typeparam name="TValue">To be added.</typeparam>
        <param name="location">
          <span data-ttu-id="fd664-110">如果字典中沒有指定的變數或欄位，該變數或欄位會自動更新。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-110">The variable or field to atomically update if the specified  is not in the dictionary.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fd664-111">要加入或更新之值的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-111">The key for the value to add or update.</span>
          </span>
        </param>
        <param name="addValue">
          <span data-ttu-id="fd664-112">當沒有先前的值存在時所使用的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-112">The value to use if no previous value exists.</span>
          </span>
        </param>
        <param name="updateValueFactory">
          <span data-ttu-id="fd664-113">此函式會接收索引鍵和先前的值，並傳回要用來更新字典的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-113">The function that receives the key and prior value and returns the new value with which to update the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd664-114">在新增值或更新現有項目之後，從字典取得該值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-114">Obtains the value from a dictionary after having added it or updated an existing entry.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd664-115">已加入或已更新的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-115">The added or updated value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enqueue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Enqueue&lt;T&gt; (ref System.Collections.Immutable.ImmutableQueue&lt;T&gt; location, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Enqueue&lt;T&gt;(class System.Collections.Immutable.ImmutableQueue`1&lt;!!T&gt;&amp; location, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableInterlocked.Enqueue``1(System.Collections.Immutable.ImmutableQueue{``0}@,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Enqueue(Of T) (ByRef location As ImmutableQueue(Of T), value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Enqueue(System::Collections::Immutable::ImmutableQueue&lt;T&gt; ^ % location, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="System.Collections.Immutable.ImmutableQueue&lt;T&gt;&amp;" RefType="ref" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="fd664-116">集合中所包含之項目的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-116">The type of items contained in the collection</span>
          </span>
        </typeparam>
        <param name="location">
          <span data-ttu-id="fd664-117">要自動更新的變數或欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-117">The variable or field to atomically update.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="fd664-118">要加入佇列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-118">The value to enqueue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd664-119">自動將元素加入佇列的結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-119">Atomically enqueues an element to the end of a queue.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAdd&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetOrAdd&lt;TKey,TValue&gt; (ref System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; location, TKey key, Func&lt;TKey,TValue&gt; valueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetOrAdd&lt;TKey, TValue&gt;(class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt;&amp; location, !!TKey key, class System.Func`2&lt;!!TKey, !!TValue&gt; valueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOrAdd(Of TKey, TValue) (ByRef location As ImmutableDictionary(Of TKey, TValue), key As TKey, valueFactory As Func(Of TKey, TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static TValue GetOrAdd(System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ % location, TKey key, Func&lt;TKey, TValue&gt; ^ valueFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;&amp;" RefType="ref" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="valueFactory" Type="System.Func&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="fd664-120">集合中所包含之索引鍵的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-120">The type of the keys contained in the collection.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="fd664-121">集合中所包含之值的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-121">The type of the values contained in the collection.</span>
          </span>
        </typeparam>
        <param name="location">
          <span data-ttu-id="fd664-122">如果字典中沒有指定的變數或欄位，該變數或欄位會自動更新。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-122">The variable or field to atomically update if the specified  is not in the dictionary.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fd664-123">要擷取或新增之值的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-123">The key for the value to retrieve or add.</span>
          </span>
        </param>
        <param name="valueFactory">
          <span data-ttu-id="fd664-124">如果找不到索引鍵，則會執行該函式以取得要插入字典的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-124">The function to execute to obtain the value to insert into the dictionary if the key is not found.</span>
          </span>
          <span data-ttu-id="fd664-125">不會叫用此委派一次以上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-125">This delegate will not be invoked more than once.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd664-126">從該字典取得指定索引鍵的值，或若找不到該索引鍵，則將新值加入字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-126">Gets the value for the specified key from the dictionary, or if the key was not found, adds a new value to the dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd664-127">指定之索引鍵的值或 <paramref name="valueFactory" /> (如果找不到索引鍵)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-127">The value at the specified key or <paramref name="valueFactory" /> if the key was not present.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAdd&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetOrAdd&lt;TKey,TValue&gt; (ref System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; location, TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetOrAdd&lt;TKey, TValue&gt;(class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt;&amp; location, !!TKey key, !!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOrAdd(Of TKey, TValue) (ByRef location As ImmutableDictionary(Of TKey, TValue), key As TKey, value As TValue) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static TValue GetOrAdd(System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ % location, TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;&amp;" RefType="ref" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="fd664-128">集合中所包含之索引鍵的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-128">The type of the keys contained in the collection.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="fd664-129">集合中所包含之值的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-129">The type of the values contained in the collection.</span>
          </span>
        </typeparam>
        <param name="location">
          <span data-ttu-id="fd664-130">如果字典中沒有指定的索引鍵，該變數或欄位會自動更新。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-130">The variable or field to atomically update if the specified key is not in the dictionary.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fd664-131">要取得或加入之值的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-131">The key for the value to get or add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="fd664-132">如果找不到索引鍵，會將該值加入字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-132">The value to add to the dictionary the key is not found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd664-133">從該字典取得指定索引鍵的值，或若找不到該索引鍵，則將新值加入字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-133">Gets the value for the specified key from the dictionary, or if the key was not found, adds a new value to the dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd664-134">指定之索引鍵的值或 <paramref name="valueFactory" /> (如果找不到索引鍵)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-134">The value at the specified key or <paramref name="valueFactory" /> if the key was not present.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAdd&lt;TKey,TValue,TArg&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetOrAdd&lt;TKey,TValue,TArg&gt; (ref System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; location, TKey key, Func&lt;TKey,TArg,TValue&gt; valueFactory, TArg factoryArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetOrAdd&lt;TKey, TValue, TArg&gt;(class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt;&amp; location, !!TKey key, class System.Func`3&lt;!!TKey, !!TArg, !!TValue&gt; valueFactory, !!TArg factoryArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``3(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``2,``1},``2)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOrAdd(Of TKey, TValue, TArg) (ByRef location As ImmutableDictionary(Of TKey, TValue), key As TKey, valueFactory As Func(Of TKey, TArg, TValue), factoryArgument As TArg) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue, typename TArg&gt;&#xA; static TValue GetOrAdd(System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ % location, TKey key, Func&lt;TKey, TArg, TValue&gt; ^ valueFactory, TArg factoryArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
        <TypeParameter Name="TArg" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;&amp;" RefType="ref" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="valueFactory" Type="System.Func&lt;TKey,TArg,TValue&gt;" />
        <Parameter Name="factoryArgument" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="fd664-135">集合中所包含之索引鍵的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-135">The type of the keys contained in the collection.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="fd664-136">集合中所包含之值的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-136">The type of the values contained in the collection.</span>
          </span>
        </typeparam>
        <typeparam name="TArg">To be added.</typeparam>
        <param name="location">
          <span data-ttu-id="fd664-137">如果字典中沒有指定的變數或欄位，該變數或欄位會更新。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-137">The variable or field to update if the specified is not in the dictionary.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fd664-138">要擷取或新增之值的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-138">The key for the value to retrieve or add.</span>
          </span>
        </param>
        <param name="valueFactory">
          <span data-ttu-id="fd664-139">如果找不到索引鍵，則會執行該函式以取得要插入字典的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-139">The function to execute to obtain the value to insert into the dictionary if the key is not found.</span>
          </span>
        </param>
        <param name="factoryArgument">
          <span data-ttu-id="fd664-140">要傳遞給值 Factory 的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-140">The argument to pass to the value factory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd664-141">從該字典取得指定索引鍵的值，或若找不到該索引鍵，則將新值加入字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-141">Gets the value for the specified key from the dictionary, or if the key was not found, adds a new value to the dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd664-142">指定之索引鍵的值或 <paramref name="valueFactory" /> (如果找不到索引鍵)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-142">The value at the specified key or <paramref name="valueFactory" /> if the key was not present.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterlockedCompareExchange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; InterlockedCompareExchange&lt;T&gt; (ref System.Collections.Immutable.ImmutableArray&lt;T&gt; location, System.Collections.Immutable.ImmutableArray&lt;T&gt; value, System.Collections.Immutable.ImmutableArray&lt;T&gt; comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; InterlockedCompareExchange&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt;&amp; location, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; value, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedCompareExchange``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0},System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InterlockedCompareExchange(Of T) (ByRef location As ImmutableArray(Of T), value As ImmutableArray(Of T), comparand As ImmutableArray(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; InterlockedCompareExchange(System::Collections::Immutable::ImmutableArray&lt;T&gt; % location, System::Collections::Immutable::ImmutableArray&lt;T&gt; value, System::Collections::Immutable::ImmutableArray&lt;T&gt; comparand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
        <Parameter Name="comparand" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="fd664-143">陣列所儲存的項目類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-143">The type of element stored by the array.</span>
          </span>
        </typeparam>
        <param name="location">
          <span data-ttu-id="fd664-144">目的端，其值會與「比較元」<c></c>進行比較且可能會被取代。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-144">The destination, whose value is compared with <c>comparand</c> and possibly replaced.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="fd664-145">當比較的結果相等時，會取代目的端值的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-145">The value that replaces the destination value if the comparison results in equality.</span>
          </span>
        </param>
        <param name="comparand">
          <span data-ttu-id="fd664-146">與「位置」<c></c>的值比較的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-146">The value that is compared to the value at <c>location</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd664-147">比較兩個不可變陣列是否相等；如果相等，則取代其中一陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-147">Compares two immutable arrays for equality and, if they are equal, replaces one of the arrays.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd664-148">
            <paramref name="location" /> 中的原始值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-148">The original value in <paramref name="location" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterlockedExchange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; InterlockedExchange&lt;T&gt; (ref System.Collections.Immutable.ImmutableArray&lt;T&gt; location, System.Collections.Immutable.ImmutableArray&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; InterlockedExchange&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt;&amp; location, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedExchange``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InterlockedExchange(Of T) (ByRef location As ImmutableArray(Of T), value As ImmutableArray(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; InterlockedExchange(System::Collections::Immutable::ImmutableArray&lt;T&gt; % location, System::Collections::Immutable::ImmutableArray&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="fd664-149">陣列所儲存的項目類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-149">The type of element stored by the array.</span>
          </span>
        </typeparam>
        <param name="location">
          <span data-ttu-id="fd664-150">要設定為特定值的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-150">The array to set to the specified value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="fd664-151">
            <c>location</c> 參數要設定成的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-151">The value to which the <c>location</c> parameter is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd664-152">將陣列設為指定的陣列，並傳回原始陣列的參考，做為不可部份完成的作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-152">Sets an array to the specified array and returns a reference to the original array, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd664-153">
            <paramref name="location" /> 的原始值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-153">The original value of <paramref name="location" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterlockedInitialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool InterlockedInitialize&lt;T&gt; (ref System.Collections.Immutable.ImmutableArray&lt;T&gt; location, System.Collections.Immutable.ImmutableArray&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InterlockedInitialize&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt;&amp; location, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedInitialize``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InterlockedInitialize(Of T) (ByRef location As ImmutableArray(Of T), value As ImmutableArray(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool InterlockedInitialize(System::Collections::Immutable::ImmutableArray&lt;T&gt; % location, System::Collections::Immutable::ImmutableArray&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="fd664-154">陣列所儲存的項目類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-154">The type of element stored by the array.</span>
          </span>
        </typeparam>
        <param name="location">
          <span data-ttu-id="fd664-155">要設定為特定值的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-155">The array to set to the specified value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="fd664-156">將 <c>location</c> 參數設為該值 (如果參數尚未初始化)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-156">The value to which the <c>location</c> parameter is set, if it’s not initialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd664-157">如果陣列尚未初始化，則將陣列設為指定的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-157">Sets an array to the specified array if the array has not been initialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd664-158">如果陣列已經指派指定的值則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-158">
              <see langword="true" /> if the array was assigned the specified value;  otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Push&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Push&lt;T&gt; (ref System.Collections.Immutable.ImmutableStack&lt;T&gt; location, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Push&lt;T&gt;(class System.Collections.Immutable.ImmutableStack`1&lt;!!T&gt;&amp; location, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableInterlocked.Push``1(System.Collections.Immutable.ImmutableStack{``0}@,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Push(Of T) (ByRef location As ImmutableStack(Of T), value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Push(System::Collections::Immutable::ImmutableStack&lt;T&gt; ^ % location, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="System.Collections.Immutable.ImmutableStack&lt;T&gt;&amp;" RefType="ref" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="fd664-159">堆疊中的項目類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-159">The type of items in the stack.</span>
          </span>
        </typeparam>
        <param name="location">
          <span data-ttu-id="fd664-160">要更新的堆疊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-160">The stack to update.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="fd664-161">要推入堆疊的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-161">The value to push on the stack.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd664-162">將新的元素推入堆疊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-162">Pushes a new element onto the stack.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAdd&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static bool TryAdd&lt;TKey,TValue&gt; (ref System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; location, TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryAdd&lt;TKey, TValue&gt;(class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt;&amp; location, !!TKey key, !!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableInterlocked.TryAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryAdd(Of TKey, TValue) (ByRef location As ImmutableDictionary(Of TKey, TValue), key As TKey, value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static bool TryAdd(System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ % location, TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;&amp;" RefType="ref" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="fd664-163">集合中所包含之索引鍵的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-163">The type of the keys contained in the collection.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="fd664-164">集合中所包含之值的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-164">The type of the values contained in the collection.</span>
          </span>
        </typeparam>
        <param name="location">
          <span data-ttu-id="fd664-165">要以指定的索引鍵和值更新的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-165">The dictionary to update with the specified key and value.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fd664-166">要加入的索引鍵 (如果字典中尚未定義)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-166">The key to add, if is not already defined in the dictionary.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="fd664-167">要加入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-167">The value to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd664-168">如果字典中沒有指定的索引鍵，會將指定的索引鍵和值加入字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-168">Adds the specified key and value to the dictionary if the key is not in the dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd664-169">如果字典中沒有該索引鍵，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-169">
              <see langword="true" /> if the key is not in the dictionary; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryDequeue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryDequeue&lt;T&gt; (ref System.Collections.Immutable.ImmutableQueue&lt;T&gt; location, out T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryDequeue&lt;T&gt;(class System.Collections.Immutable.ImmutableQueue`1&lt;!!T&gt;&amp; location, [out] !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableInterlocked.TryDequeue``1(System.Collections.Immutable.ImmutableQueue{``0}@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryDequeue(Of T) (ByRef location As ImmutableQueue(Of T), ByRef value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool TryDequeue(System::Collections::Immutable::ImmutableQueue&lt;T&gt; ^ % location, [Runtime::InteropServices::Out] T % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="System.Collections.Immutable.ImmutableQueue&lt;T&gt;&amp;" RefType="ref" />
        <Parameter Name="value" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="fd664-170">佇列中項目的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-170">The type of items in the queue.</span>
          </span>
        </typeparam>
        <param name="location">
          <span data-ttu-id="fd664-171">要自動更新的變數或欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-171">The variable or field to atomically update.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="fd664-172">從佇列的開頭設定為該值 (如果佇列不是空的)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-172">Set to the value from the head of the queue, if the queue not empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd664-173">自動移除或傳回佇列開頭的指定元素 (如果佇列不是空的)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-173">Atomically removes and returns the specified element at the head of the queue, if the queue is not empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd664-174">如果佇列不是空的，且已經移除開頭的元素則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-174">
              <see langword="true" /> if the queue is not empty and the head element is removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryPop&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryPop&lt;T&gt; (ref System.Collections.Immutable.ImmutableStack&lt;T&gt; location, out T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryPop&lt;T&gt;(class System.Collections.Immutable.ImmutableStack`1&lt;!!T&gt;&amp; location, [out] !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableInterlocked.TryPop``1(System.Collections.Immutable.ImmutableStack{``0}@,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryPop(Of T) (ByRef location As ImmutableStack(Of T), ByRef value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool TryPop(System::Collections::Immutable::ImmutableStack&lt;T&gt; ^ % location, [Runtime::InteropServices::Out] T % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="System.Collections.Immutable.ImmutableStack&lt;T&gt;&amp;" RefType="ref" />
        <Parameter Name="value" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="fd664-175">堆疊中的項目類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-175">The type of items in the stack.</span>
          </span>
        </typeparam>
        <param name="location">
          <span data-ttu-id="fd664-176">要更新的堆疊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-176">The stack to update.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="fd664-177">接收從堆疊移除的值 (如果堆疊不是空的)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-177">Receives the value removed from the stack, if the stack is not empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd664-178">從堆疊的最上方移除元素 (如果有元素可移除)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-178">Removes an element from the top of the stack, if there is an element to remove.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd664-179">如果元素已經從堆疊移除則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-179">
              <see langword="true" /> if an element is removed from the stack; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryRemove&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static bool TryRemove&lt;TKey,TValue&gt; (ref System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; location, TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryRemove&lt;TKey, TValue&gt;(class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt;&amp; location, !!TKey key, [out] !!TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableInterlocked.TryRemove``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryRemove(Of TKey, TValue) (ByRef location As ImmutableDictionary(Of TKey, TValue), key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static bool TryRemove(System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ % location, TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;&amp;" RefType="ref" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="fd664-180">集合中所包含之索引鍵的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-180">The type of the keys contained in the collection.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="fd664-181">集合中所包含之值的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-181">The type of the values contained in the collection.</span>
          </span>
        </typeparam>
        <param name="location">
          <span data-ttu-id="fd664-182">要更新的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-182">The dictionary to update.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fd664-183">要移除的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-183">The key to remove.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="fd664-184">接收移除之項目的值 (如果字典不是空的)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-184">Receives the value of the removed item, if the dictionary is not empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd664-185">將有指定索引鍵的元素移除 (如果索引鍵存在)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-185">Removes the element with the specified key, if the key exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd664-186">如果已找到並移除索引鍵則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-186">
              <see langword="true" /> if the key was found and removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdate&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static bool TryUpdate&lt;TKey,TValue&gt; (ref System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; location, TKey key, TValue newValue, TValue comparisonValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryUpdate&lt;TKey, TValue&gt;(class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt;&amp; location, !!TKey key, !!TValue newValue, !!TValue comparisonValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableInterlocked.TryUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1,``1)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryUpdate(Of TKey, TValue) (ByRef location As ImmutableDictionary(Of TKey, TValue), key As TKey, newValue As TValue, comparisonValue As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static bool TryUpdate(System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ % location, TKey key, TValue newValue, TValue comparisonValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;&amp;" RefType="ref" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="newValue" Type="TValue" />
        <Parameter Name="comparisonValue" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="fd664-187">集合中所包含之索引鍵的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-187">The type of the keys contained in the collection.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="fd664-188">集合中所包含之值的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-188">The type of the values contained in the collection.</span>
          </span>
        </typeparam>
        <param name="location">
          <span data-ttu-id="fd664-189">要更新的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-189">The dictionary to update.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fd664-190">要更新的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-190">The key to update.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="fd664-191">要設定的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-191">The new value to set.</span>
          </span>
        </param>
        <param name="comparisonValue">
          <span data-ttu-id="fd664-192">「索引鍵」<c></c>目前的值，以便讓更新成功。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-192">The current value for <c>key</c> in order for the update to succeed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd664-193">如果指定的索引鍵已設定為指定的值，則將指定的索引鍵設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-193">Sets the specified key to the specified value if the specified key already is set to a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd664-194">如果字典中有 <paramref name="key" /> 和 <paramref name="comparisonValue" /> 且比較更新至則 <paramref name="newValue" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-194">
              <see langword="true" /> if <paramref name="key" /> and <paramref name="comparisonValue" /> are present in the dictionary and comparison was updated to <paramref name="newValue" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Update&lt;T&gt; (ref T location, Func&lt;T,T&gt; transformer) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Update&lt;class T&gt;(!!T&amp; location, class System.Func`2&lt;!!T, !!T&gt; transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableInterlocked.Update``1(``0@,System.Func{``0,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Update(Of T As Class) (ByRef location As T, transformer As Func(Of T, T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class static bool Update(T % location, Func&lt;T, T&gt; ^ transformer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="T&amp;" RefType="ref" />
        <Parameter Name="transformer" Type="System.Func&lt;T,T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="fd664-195">資料的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-195">The type of data.</span>
          </span>
        </typeparam>
        <param name="location">
          <span data-ttu-id="fd664-196">待變更的變數或欄位，可能會有多個執行緒存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-196">The variable or field to be changed, which may be accessed by multiple threads.</span>
          </span>
        </param>
        <param name="transformer">
          <span data-ttu-id="fd664-197">會改變此值的函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-197">A function that mutates the value.</span>
          </span>
          <span data-ttu-id="fd664-198">此函式應該沒有副作用，因為與其他執行緒發生競爭情況時，它可以多次執行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-198">This function should be side-effect free,              as it may run multiple times when races occur with other threads.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd664-199">透過指定的轉換函式，以開放式鎖定的交易語意就地改變值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-199">Mutates a value in-place with optimistic locking transaction semantics             via a specified transformation function.</span>
          </span>
          <span data-ttu-id="fd664-200">為贏得開放式鎖定競爭，轉換沒有重試次數限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-200">The transformation is retried as many times as necessary to win the optimistic locking race.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd664-201">如果套用 <paramref name="transformer" /> 函式的結果變更位置的值，則為 <c>true</c>；如果位置的值因為上次 <paramref name="transformer" /> 引動過程傳回現有值而保持不變，則為 <c>false</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-201">
              <c>true</c> if the location's value is changed by applying the result of the              <paramref name="transformer" /> function;             <c>false</c> if the location's value remained the same because the last              invocation of <paramref name="transformer" /> returned the existing value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update&lt;T,TArg&gt;">
      <MemberSignature Language="C#" Value="public static bool Update&lt;T,TArg&gt; (ref T location, Func&lt;T,TArg,T&gt; transformer, TArg transformerArgument) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Update&lt;class T, TArg&gt;(!!T&amp; location, class System.Func`3&lt;!!T, !!TArg, !!T&gt; transformer, !!TArg transformerArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableInterlocked.Update``2(``0@,System.Func{``0,``1,``0},``1)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Update(Of T As Class, TArg As Class) (ByRef location As T, transformer As Func(Of T, TArg, T), transformerArgument As TArg) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TArg&gt;&#xA; where T : class static bool Update(T % location, Func&lt;T, TArg, T&gt; ^ transformer, TArg transformerArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="T&amp;" RefType="ref" />
        <Parameter Name="transformer" Type="System.Func&lt;T,TArg,T&gt;" />
        <Parameter Name="transformerArgument" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="fd664-202">資料的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-202">The type of data.</span>
          </span>
        </typeparam>
        <typeparam name="TArg">
          <span data-ttu-id="fd664-203">引數的型別傳遞至<c>transformer</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-203">The type of argument passed to the <c>transformer</c>.</span>
          </span>
        </typeparam>
        <param name="location">
          <span data-ttu-id="fd664-204">待變更的變數或欄位，可能會有多個執行緒存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-204">The variable or field to be changed, which may be accessed by multiple threads.</span>
          </span>
        </param>
        <param name="transformer">
          <span data-ttu-id="fd664-205">會改變此值的函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-205">A function that mutates the value.</span>
          </span>
          <span data-ttu-id="fd664-206">此函式應該沒有副作用，因為與其他執行緒發生競爭情況時，它可以多次執行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-206">This function should be side-effect free,              as it may run multiple times when races occur with other threads.</span>
          </span>
        </param>
        <param name="transformerArgument">
          <span data-ttu-id="fd664-207">要傳遞至「轉換器」<c></c>的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-207">The argument to pass to <c>transformer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd664-208">透過指定的轉換函式，以開放式鎖定的交易語意就地改變值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-208">Mutates a value in-place with optimistic locking transaction semantics             via a specified transformation function.</span>
          </span>
          <span data-ttu-id="fd664-209">為贏得開放式鎖定競爭，轉換沒有重試次數限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-209">The transformation is retried as many times as necessary to win the optimistic locking race.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fd664-210">如果套用 <paramref name="transformer" /> 函式的結果變更位置的值，則為 <c>true</c>；如果位置的值因為上次 <paramref name="transformer" /> 引動過程傳回現有值而保持不變，則為 <c>false</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd664-210">
              <c>true</c> if the location's value is changed by applying the result of the              <paramref name="transformer" /> function;             <c>false</c> if the location's value remained the same because the last              invocation of <paramref name="transformer" /> returned the existing value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>