<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MetaModel.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53ebfc9bd5454a273f0d94a36779ed2764c545d6e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3ebfc9bd5454a273f0d94a36779ed2764c545d6e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Mapping.MetaModel">
          <source>An abstraction that represents the mapping between a database and domain objects.</source>
          <target state="translated">表示資料庫和網域物件之間對應的抽象。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.MetaModel.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaModel" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaModel" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaModel.ContextType">
          <source>Gets the type of <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> type that this model describes.</source>
          <target state="translated">取得這個模型所描述之 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 型別的型別。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaModel.ContextType">
          <source>The data context type.</source>
          <target state="translated">資料內容型別。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaModel.DatabaseName">
          <source>Gets the name of the database.</source>
          <target state="translated">取得資料庫名稱。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaModel.DatabaseName">
          <source>The database name as a string.</source>
          <target state="translated">做為字串的資料庫名稱。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.MetaModel.GetFunction(System.Reflection.MethodInfo)">
          <source>The method defined on the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> or subordinate class that represents the database function.</source>
          <target state="translated">針對 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 或表示資料庫函式之下層類別所定義的方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.MetaModel.GetFunction(System.Reflection.MethodInfo)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaFunction" /&gt;</ph> that corresponds to a database function.</source>
          <target state="translated">取得對應至資料庫函式的 <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaFunction" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.MetaModel.GetFunction(System.Reflection.MethodInfo)">
          <source>The meta-function that corresponds to a database function.</source>
          <target state="translated">對應至資料庫函式的中繼函式。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Mapping.MetaModel.GetFunction(System.Reflection.MethodInfo)">
          <source>Database functions are user-defined functions, table-valued functions, and stored procedures.</source>
          <target state="translated">資料庫函式是使用者定義函數、 資料表值函式和預存程序。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.MetaModel.GetFunctions">
          <source>Gets an enumeration of all functions.</source>
          <target state="translated">取得所有函式的列舉。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.MetaModel.GetFunctions">
          <source>An enumeration that can be used to iterate through all functions.</source>
          <target state="translated">可用來逐一查看所有函式的列舉型別。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.MetaModel.GetMetaType(System.Type)">
          <source>The type for which the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaType" /&gt;</ph> is sought.</source>
          <target state="translated">所搜尋 <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaType" /&gt;</ph> 的型別。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.MetaModel.GetMetaType(System.Type)">
          <source>Discovers the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaType" /&gt;</ph> for the specified <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">探索指定之 <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaType" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.MetaModel.GetMetaType(System.Type)">
          <source>A meta-type that corresponds to the specified type.</source>
          <target state="translated">對應至指定之型別的中繼型別。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.MetaModel.GetTable(System.Type)">
          <source>The common language runtime (CLR) row type.</source>
          <target state="translated">Common Language Runtime (CLR) 資料列型別。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.MetaModel.GetTable(System.Type)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaTable" /&gt;</ph> associated with a specified <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">取得與指定之 <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaTable" /&gt;</ph> 關聯的 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.MetaModel.GetTable(System.Type)">
          <source>A meta-table associated with the specified row type.</source>
          <target state="translated">與指定的資料列型別關聯的中繼資料表。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.MetaModel.GetTables">
          <source>Get an enumeration of all tables.</source>
          <target state="translated">取得所有資料表的列舉。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.MetaModel.GetTables">
          <source>An enumerator that can be used to iterate over the tables.</source>
          <target state="translated">列舉值，可用來逐一查看資料表。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaModel.MappingSource">
          <source>Gets the mapping source that originated this model.</source>
          <target state="translated">取得起始這個模型的對應來源。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaModel.MappingSource">
          <source>The originating mapping source.</source>
          <target state="translated">起始的對應來源。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.MetaModel.ProviderType">
          <source>Gets or sets the provider type.</source>
          <target state="translated">取得或設定提供者類型。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaModel.ProviderType">
          <source>The provider type.</source>
          <target state="translated">提供者類型。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaModel.ProviderType">
          <source>If this property is specified, an existing provider type can be used.</source>
          <target state="translated">如果指定這個屬性，可以使用現有的提供者類型。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaModel.ProviderType">
          <source>This will eliminate a round trip to the server to obtain this information.</source>
          <target state="translated">這可減少往返到伺服器，以取得這項資訊。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaModel.ProviderType">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> has to know the provider type to establish appropriate query translation rules.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> 必須知道要建立適當的查詢轉譯規則的提供者類型。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.MetaModel.ProviderType">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> supports <ph id="ph2">&lt;xref:System.Data.Linq.SqlClient.Sql2000Provider&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.Linq.SqlClient.Sql2005Provider&gt;</ph> providers.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> 支援<ph id="ph2">&lt;xref:System.Data.Linq.SqlClient.Sql2000Provider&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.Linq.SqlClient.Sql2005Provider&gt;</ph>提供者。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>