<Type Name="TableAttribute" FullName="System.Data.Linq.Mapping.TableAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c558b22bb19a9d677a923b0838a837e6c591928b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37681148" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TableAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TableAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.TableAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TableAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TableAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bcf98-101">將某個類別指定為與資料庫資料表相關聯的實體類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bcf98-101">Designates a class as an entity class that is associated with a database table.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcf98-102">使用這個屬性可以指定某個類別，做為與資料庫資料表或檢視相關聯的實體類別。</span><span class="sxs-lookup"><span data-stu-id="bcf98-102">Use this attribute to designate a class as an entity class that is associated with a database table or view.</span></span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="bcf98-103"> 會將具有的類別視為<xref:System.Data.Linq.Mapping.TableAttribute>持續性類別的屬性。</span><span class="sxs-lookup"><span data-stu-id="bcf98-103"> treats classes that have the <xref:System.Data.Linq.Mapping.TableAttribute> attribute as persistent classes.</span></span>  
  
 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="bcf98-104"> 支援只有單一資料表對應。</span><span class="sxs-lookup"><span data-stu-id="bcf98-104"> supports only single-table mapping.</span></span> <span data-ttu-id="bcf98-105">也就是實體類別必須對應至一個資料庫資料表，並不能在同一時間將資料庫資料表對應到多個類別。</span><span class="sxs-lookup"><span data-stu-id="bcf98-105">That is, an entity class must be mapped to exactly one database table, and you cannot map a database table to multiple classes at the same time.</span></span>  
  
 <span data-ttu-id="bcf98-106">您可以使用<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>屬性<xref:System.Data.Linq.Mapping.TableAttribute>屬性，指定資料表的名稱和您選擇可以使用結構描述名稱來限定資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="bcf98-106">You can use the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> property of the <xref:System.Data.Linq.Mapping.TableAttribute> attribute to specify a name for the table, and you can optionally use the schema name to qualify a table name.</span></span> <span data-ttu-id="bcf98-107">如果您未指定名稱使用<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>資料表名稱會假設屬性，做為類別名稱相同。</span><span class="sxs-lookup"><span data-stu-id="bcf98-107">If you do not specify a name by using the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> property, the table name is assumed to be the same as the class name.</span></span>  
  
## <a name="schema-qualified-names"></a><span data-ttu-id="bcf98-108">結構描述限定名稱</span><span class="sxs-lookup"><span data-stu-id="bcf98-108">Schema-qualified Names</span></span>  
 <span data-ttu-id="bcf98-109">您選擇可以使用結構描述名稱來限定資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="bcf98-109">You can optionally use the schema name to qualify a table name.</span></span> <span data-ttu-id="bcf98-110">根據預設，左邊的第一個週期中的語彙基元<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>字串會被視為結構描述名稱。</span><span class="sxs-lookup"><span data-stu-id="bcf98-110">By default, the token to the left of the first period in the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> string is considered to be the schema name.</span></span> <span data-ttu-id="bcf98-111">名稱的其餘部分會被視為資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="bcf98-111">The remainder of the name is considered to be the table name.</span></span> <span data-ttu-id="bcf98-112">提供者會引用資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="bcf98-112">The provider quotes the table name as appropriate.</span></span> <span data-ttu-id="bcf98-113">比方說，[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]適用於 SQL Server 的提供者可確保，方括號會使用至少需要的地方。</span><span class="sxs-lookup"><span data-stu-id="bcf98-113">For example, the [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] provider for SQL Server makes sure that brackets are used at least where they are needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcf98-114">在某些情況下，您必須明確地加上引號的屬性因為 SQL Server 提供者無法自動加上引號。</span><span class="sxs-lookup"><span data-stu-id="bcf98-114">In some cases, you must explicitly quote attributes because the SQL Server provider cannot auto-quote.</span></span> <span data-ttu-id="bcf98-115">下表顯示一些範例。</span><span class="sxs-lookup"><span data-stu-id="bcf98-115">The following table shows some examples.</span></span>  
  
|<span data-ttu-id="bcf98-116">案例</span><span class="sxs-lookup"><span data-stu-id="bcf98-116">Case</span></span>|<span data-ttu-id="bcf98-117">範例： 識別項名稱</span><span class="sxs-lookup"><span data-stu-id="bcf98-117">Example: Identifier Name</span></span>|<span data-ttu-id="bcf98-118">屬性中的範例： 必須是的字串</span><span class="sxs-lookup"><span data-stu-id="bcf98-118">Example: Expected String in Attributes</span></span>|<span data-ttu-id="bcf98-119">否則...</span><span class="sxs-lookup"><span data-stu-id="bcf98-119">Otherwise…</span></span>|  
|----------|------------------------------|--------------------------------------------|----------------|  
|<span data-ttu-id="bcf98-120">結構描述名稱包含句點</span><span class="sxs-lookup"><span data-stu-id="bcf98-120">Schema name contains a period</span></span>|<span data-ttu-id="bcf98-121">結構描述:"A.B"</span><span class="sxs-lookup"><span data-stu-id="bcf98-121">Schema: "A.B"</span></span><br /><br /> <span data-ttu-id="bcf98-122">資料表:"C"</span><span class="sxs-lookup"><span data-stu-id="bcf98-122">Table: "C"</span></span>|<span data-ttu-id="bcf98-123">"[A.B]。C"</span><span class="sxs-lookup"><span data-stu-id="bcf98-123">"[A.B].C"</span></span>|<span data-ttu-id="bcf98-124">第一期的假設是分開的資料表名稱的結構描述名稱。</span><span class="sxs-lookup"><span data-stu-id="bcf98-124">The first period is assumed to separate the schema name from the table name.</span></span>|  
|<span data-ttu-id="bcf98-125">結構描述/資料表名稱開頭為 `@`</span><span class="sxs-lookup"><span data-stu-id="bcf98-125">Schema/Table name starts with `@`</span></span>|<span data-ttu-id="bcf98-126">"@SomeName"</span><span class="sxs-lookup"><span data-stu-id="bcf98-126">"@SomeName"</span></span>|<span data-ttu-id="bcf98-127">"[@SomeName]"</span><span class="sxs-lookup"><span data-stu-id="bcf98-127">"[@SomeName]"</span></span>|<span data-ttu-id="bcf98-128">假設參數名稱。</span><span class="sxs-lookup"><span data-stu-id="bcf98-128">Assumed to be a parameter name.</span></span>|  
|<span data-ttu-id="bcf98-129">結構描述具有`[`，並結束 `]`</span><span class="sxs-lookup"><span data-stu-id="bcf98-129">Schema starts with `[` and ends with `]`</span></span>|<span data-ttu-id="bcf98-130">"[Schema.Table]"</span><span class="sxs-lookup"><span data-stu-id="bcf98-130">"[Schema.Table]"</span></span>|<span data-ttu-id="bcf98-131">"[[Schema]。[Table]]]"</span><span class="sxs-lookup"><span data-stu-id="bcf98-131">"[[Schema].[Table]]]"</span></span>|<span data-ttu-id="bcf98-132">不具引號的識別項類似於加上引號的識別碼。</span><span class="sxs-lookup"><span data-stu-id="bcf98-132">The unquoted identifier resembles a quoted identifier.</span></span>|  
|<span data-ttu-id="bcf98-133">表格最開始`[`，並結束 `]`</span><span class="sxs-lookup"><span data-stu-id="bcf98-133">Table starts with `[` and ends with `]`</span></span>|<span data-ttu-id="bcf98-134">"[Table]"</span><span class="sxs-lookup"><span data-stu-id="bcf98-134">"[Table]"</span></span>|<span data-ttu-id="bcf98-135">"[[Table]]]"</span><span class="sxs-lookup"><span data-stu-id="bcf98-135">"[[Table]]]"</span></span>|<span data-ttu-id="bcf98-136">不具引號的識別項類似於加上引號的識別碼。</span><span class="sxs-lookup"><span data-stu-id="bcf98-136">The unquoted identifier resembles a quoted identifier.</span></span>|  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.TableAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TableAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bcf98-137">初始化 <see cref="T:System.Data.Linq.Mapping.TableAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcf98-137">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.TableAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.TableAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Data.Linq.Mapping.TableAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcf98-138">取得或設定資料表或檢視的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcf98-138">Gets or sets the name of the table or view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcf98-139">根據預設，這個值與類別名稱相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcf98-139">By default, the value is the same as the name of the class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcf98-140">如果您未指定名稱使用<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>，資料表名稱會假設為類別名稱相同。</span><span class="sxs-lookup"><span data-stu-id="bcf98-140">If you do not specify a name by using <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>, the table name is assumed to be the same as the class name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bcf98-141">您可以選擇使用結構描述名稱，來限定資料表名稱 (例如 Schema3.Table5)。</span><span class="sxs-lookup"><span data-stu-id="bcf98-141">You can optionally use a schema name to qualify the table name (for example, Schema3.Table5).</span></span> <span data-ttu-id="bcf98-142">根據預設，左邊的第一個週期中的語彙基元<xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>字串個數字會被視為結構描述名稱，而其他資料表的名稱。</span><span class="sxs-lookup"><span data-stu-id="bcf98-142">By default, the token to the left of the first period in the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> string is considered to be the schema name, and the rest to be the table name.</span></span>  
  
 <span data-ttu-id="bcf98-143">在下列範例中，預設資料表名稱`Customer`，變更為`Customers`。</span><span class="sxs-lookup"><span data-stu-id="bcf98-143">In the following example, the default table name, `Customer`, is changed to `Customers`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>