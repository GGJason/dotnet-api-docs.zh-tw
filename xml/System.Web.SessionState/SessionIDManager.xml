<Type Name="SessionIDManager" FullName="System.Web.SessionState.SessionIDManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="edcb6530bc1b985339b3a2483a2bab7acc38abe0" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51935365" /></Metadata><TypeSignature Language="C#" Value="public class SessionIDManager : System.Web.SessionState.ISessionIDManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionIDManager extends System.Object implements class System.Web.SessionState.ISessionIDManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionIDManager" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionIDManager&#xA;Implements ISessionIDManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionIDManager : System::Web::SessionState::ISessionIDManager" />
  <TypeSignature Language="F#" Value="type SessionIDManager = class&#xA;    interface ISessionIDManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.SessionState.ISessionIDManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>管理 ASP.NET 工作階段狀態的唯一識別項。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionIDManager>類別是 HTTP 模組，管理 ASP.NET 工作階段狀態使用的唯一工作階段識別碼。 ASP.NET 工作階段的唯一識別項是<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>屬性，您可以從存取<xref:System.Web.HttpContext.Session%2A>屬性的目前<xref:System.Web.HttpContext>或<xref:System.Web.UI.Page>。 ASP.NET 工作階段識別碼是隨機產生的數字，編碼為 24 個字元字串，其中包含從小寫字元 z 和數字 0 到 5。  
  
 根據預設，<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值會傳送與 ASP.NET 應用程式的每個要求的 cookie 中。 包含 cookie 名稱<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值預設為 ASP.NET_SessionId。 您可以設定不同的 cookie 名稱，藉由設定`cookieName`的屬性[sessionState 元素 （ASP.NET 設定結構描述）](https://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)所需的 cookie 名稱。  
  
 如果您想要停用使用 ASP.NET 應用程式中的 cookie，並仍能使用的工作階段狀態，您可以設定您的應用程式的 URL，而非 cookie 中儲存的工作階段識別碼，藉由設定`cookieless`屬性的`sessionState`項目`true`在您的應用程式的 Web.config 檔案中。 如需詳細資訊，請參閱 <xref:System.Web.SessionState.HttpSessionStateContainer.IsCookieless%2A> 屬性。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>您可以使用您自己的自訂工作階段識別碼取代 ASP.NET 工作階段識別項，藉由建立繼承的類別<see cref="T:System.Web.SessionState.SessionIDManager" />類別並覆寫<see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />和<see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />以您自己的自訂實作的方法。 如需範例，會覆寫<see cref="T:System.Web.SessionState.SessionIDManager" />類別，並實作這些方法，請參閱針對提供的範例<see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />方法。  
  
您可以取代整個<see cref="T:System.Web.SessionState.SessionIDManager" />與藉由建立類別來實作自訂的工作階段識別碼管理員<see cref="T:System.Web.SessionState.ISessionIDManager" />介面。 如果您的自訂工作階段識別碼管理員支援無 cookie 工作階段識別碼，您必須實作解決方案來傳送和擷取的 URL，例如 ISAPI 篩選器中的工作階段識別碼。 如需建立自訂的工作階段 ID 管理員的詳細資訊，請參閱<see cref="T:System.Web.SessionState.ISessionIDManager" />。</para></block>
    <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 工作階段狀態概觀</related>
    <related type="Article" href="https://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b">HTTP 處理常式和 HTTP 模組概觀</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionIDManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionIDManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.Web.SessionState.SessionIDManager" /> 類別的執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式不是從應用程式程式碼呼叫。  
  
 ASP.NET 會呼叫這個建構函式建立的執行個體<xref:System.Web.SessionState.SessionIDManager>類別。 之後呼叫建構函式，ASP.NET 會呼叫<xref:System.Web.SessionState.SessionIDManager.Initialize%2A>方法來初始化新<xref:System.Web.SessionState.SessionIDManager>物件。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 工作階段狀態概觀</related>
      </Docs>
    </Member>
    <Member MemberName="CreateSessionID">
      <MemberSignature Language="C#" Value="public virtual string CreateSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSessionID (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CreateSessionID : System.Web.HttpContext -&gt; string&#xA;override this.CreateSessionID : System.Web.HttpContext -&gt; string" Usage="sessionIDManager.CreateSessionID context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">目前的 <see cref="T:System.Web.HttpContext" /> 物件，參考用於處理 HTTP 要求 (例如，<see cref="P:System.Web.HttpContext.Request" /> 和 <see cref="P:System.Web.HttpContext.Response" /> 屬性) 的伺服器物件。</param>
        <summary>建立工作階段的唯一工作階段識別項。</summary>
        <returns>唯一工作階段識別項。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法不是從應用程式程式碼呼叫。  
  
 <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>方法會傳回隨機產生的數字，編碼為 24 個字元字串，其中包含從小寫字元的唯一工作階段識別碼至 z 和數字 0 到 5。  
  
   
  
## Examples  
 下列程式碼範例示範繼承的類別<xref:System.Web.SessionState.SessionIDManager>類別並覆寫<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>並<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法，提供並驗證方法<xref:System.Guid>做為<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>。  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/GuidSessionIDModule.cs#7)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/GuidSessionIDModule.vb#7)]  
  
 若要使用此範例所示的自訂類別，設定 sessionIDManagerType 屬性[sessionState 元素 （ASP.NET 設定結構描述）](https://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)項目，如下列範例所示。  
  
```  
<sessionState  
  Mode="InProc"  
  stateConnectionString="tcp=127.0.0.1:42424"  
  stateNetworkTimeout="10"  
  sqlConnectionString="data source=127.0.0.1;Integrated Security=SSPI"  
  sqlCommandTimeout="30"  
  customProvider=""  
  cookieless="false"  
  regenerateExpiredSessionId="false"  
  timeout="20"  
  sessionIDManagerType="Your.ID.Manager.Type,  
    CustomAssemblyNameInBinFolder"  
/>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>您可以提供自訂的工作階段識別碼使用的 ASP.NET 工作階段狀態，藉由建立繼承的類別<see cref="T:System.Web.SessionState.SessionIDManager" />類別並覆寫<see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />和<see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />以您自己的自訂實作的方法。 如果您的自訂工作階段識別碼不符合強制執行的預設實作的字元條件約束<see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />方法時，您應該覆寫<see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />方法，以提供驗證您的自訂工作階段識別碼。 在此情況下，<see cref="T:System.Web.SessionState.SessionIDManager" />類別，可確保您的自訂工作階段識別項 URL 為 HTTP 回應中編碼和解碼從 HTTP 要求使用的 URL<see cref="M:System.Web.SessionState.SessionIDManager.Encode(System.String)" />和<see cref="M:System.Web.SessionState.SessionIDManager.Decode(System.String)" />方法，分別。</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 工作階段狀態概觀</related>
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public virtual string Decode (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Decode(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Decode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Decode (id As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Decode(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Decode : string -&gt; string&#xA;override this.Decode : string -&gt; string" Usage="sessionIDManager.Decode id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">要進行解碼的工作階段識別項。</param>
        <summary>對取自 Cookie 或 URL 的 URL 編碼工作階段識別項進行解碼。</summary>
        <returns>已解碼的工作階段識別項。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法不是從應用程式程式碼呼叫。  
  
 這個方法會在內部使用<xref:System.Web.SessionState.SessionIDManager>類別來解碼自訂<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值建立，繼承<xref:System.Web.SessionState.SessionIDManager>類別並覆寫<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>和<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法。 從 HTTP 要求，藉由確保自訂的工作階段識別碼值的精確度擷取<xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>方法中，<xref:System.Web.SessionState.SessionIDManager>自訂值使用，將解碼<xref:System.Web.HttpUtility.UrlDecode%2A>方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>如需繼承的類別的範例<see cref="T:System.Web.SessionState.SessionIDManager" />類別並覆寫<see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />並<see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />方法，請參閱針對提供的範例<see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />方法。</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 工作階段狀態概觀</related>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual string Encode (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Encode(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Encode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Encode (id As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Encode(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Encode : string -&gt; string&#xA;override this.Encode : string -&gt; string" Usage="sessionIDManager.Encode id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">要進行編碼的工作階段識別項。</param>
        <summary>對工作階段識別項進行編碼，以便儲存到 Cookie 或 URL。</summary>
        <returns>已編碼的工作階段識別項。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法不是從應用程式程式碼呼叫。  
  
 這個方法會在內部使用<xref:System.Web.SessionState.SessionIDManager>類別來編碼自訂<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值建立，繼承<xref:System.Web.SessionState.SessionIDManager>類別並覆寫<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>和<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法。 若要確保依 HTTP 回應中所儲存的自訂工作階段識別碼值的精確度<xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A>方法中，<xref:System.Web.SessionState.SessionIDManager>編碼自訂值使用<xref:System.Web.HttpUtility.UrlEncode%2A>方法。  
  
 如需繼承的類別的範例<xref:System.Web.SessionState.SessionIDManager>類別並覆寫<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>並<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法，請參閱<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>方法。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 工作階段狀態概觀</related>
      </Docs>
    </Member>
    <Member MemberName="GetSessionID">
      <MemberSignature Language="C#" Value="public string GetSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSessionID (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetSessionID : System.Web.HttpContext -&gt; string&#xA;override this.GetSessionID : System.Web.HttpContext -&gt; string" Usage="sessionIDManager.GetSessionID context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">目前的 <see cref="T:System.Web.HttpContext" /> 物件，參考用於處理 HTTP 要求 (例如，<see cref="P:System.Web.HttpContext.Request" /> 和 <see cref="P:System.Web.HttpContext.Response" /> 屬性) 的伺服器物件。</param>
        <summary>從目前的 Web 要求取得工作階段識別項值。</summary>
        <returns>目前的 <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法不是從應用程式程式碼呼叫。  
  
 <xref:System.Web.SessionState.SessionStateModule>呼叫<xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>方法期間<xref:System.Web.HttpApplication.AcquireRequestState>事件，以擷取<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>從目前<xref:System.Web.HttpRequest>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">擷取自 HTTP 要求的工作階段識別項值的長度超過 <see cref="P:System.Web.SessionState.SessionIDManager.SessionIDMaxLength" /> 值。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 工作階段狀態概觀</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="sessionIDManager.Initialize " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.Initialize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用組態檔的資訊初始化 <see cref="T:System.Web.SessionState.SessionIDManager" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SessionState.SessionIDManager.Initialize%2A>方法會讀取工作階段的組態資料，從[sessionState 元素 （ASP.NET 設定結構描述）](https://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d)組態檔的組態項目。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 工作階段狀態概觀</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InitializeRequest(class System.Web.HttpContext context, bool suppressAutoDetectRedirect, [out] bool&amp; supportSessionIDReissue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InitializeRequest (context As HttpContext, suppressAutoDetectRedirect As Boolean, ByRef supportSessionIDReissue As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool InitializeRequest(System::Web::HttpContext ^ context, bool suppressAutoDetectRedirect, [Runtime::InteropServices::Out] bool % supportSessionIDReissue);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Web.HttpContext * bool *  -&gt; bool&#xA;override this.InitializeRequest : System.Web.HttpContext * bool *  -&gt; bool" Usage="sessionIDManager.InitializeRequest (context, suppressAutoDetectRedirect, supportSessionIDReissue)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="suppressAutoDetectRedirect" Type="System.Boolean" />
        <Parameter Name="supportSessionIDReissue" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Web.HttpContext" /> 物件，包含目前要求的相關資訊。</param>
        <param name="suppressAutoDetectRedirect"><see langword="true" /> 表示要重新導向以判斷 Cookie 支援，否則為 <see langword="false" />，表示要抑制自動重新導向以判斷 Cookie 支援的功能。</param>
        <param name="supportSessionIDReissue">這個方法傳回時，其中包含在原始 ID 過期時，會指出 <see cref="T:System.Web.SessionState.SessionIDManager" /> 物件是否支援發出新工作階段 ID 的布林值。 這個參數會以未初始化的狀態傳遞。</param>
        <summary>執行 <see cref="T:System.Web.SessionState.SessionIDManager" /> 物件的按要求初始化程序。</summary>
        <returns><see langword="true" /> 表示 <see cref="T:System.Web.SessionState.SessionIDManager" /> 物件已經完成重新導向來判斷 Cookie 支援，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當`cookieless`的屬性`sessionState`元素設定為`AutoDetect`，則<xref:System.Web.SessionState.SessionIDManager>物件將會重新導向至相同的路徑，以判斷連線的瀏覽器是否支援 cookie。 如果`suppressAutoDetectRedirect`參數是`false`，伺服器將不會執行此重新導向。  
  
 `supportSessionIDReissue`參數將會傳回`false`如果要求用於工作階段識別的 cookie。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSessionID">
      <MemberSignature Language="C#" Value="public void RemoveSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSessionID (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member RemoveSessionID : System.Web.HttpContext -&gt; unit&#xA;override this.RemoveSessionID : System.Web.HttpContext -&gt; unit" Usage="sessionIDManager.RemoveSessionID context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">目前的 <see cref="T:System.Web.HttpContext" /> 物件，參考用於處理 HTTP 要求 (例如，<see cref="P:System.Web.HttpContext.Request" /> 和 <see cref="P:System.Web.HttpContext.Response" /> 屬性) 的伺服器物件。</param>
        <summary>從 HTTP 回應中刪除工作階段識別項 Cookie。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法不是從應用程式程式碼呼叫。  
  
 <xref:System.Web.SessionState.SessionStateModule>呼叫<xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A>方法期間<xref:System.Web.HttpApplication.ReleaseRequestState>事件，以移除工作階段識別碼，從<xref:System.Web.HttpResponse.Cookies%2A>集合<xref:System.Web.HttpResponse>如果新的工作階段已建立但未使用。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 工作階段狀態概觀</related>
      </Docs>
    </Member>
    <Member MemberName="SaveSessionID">
      <MemberSignature Language="C#" Value="public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveSessionID(class System.Web.HttpContext context, string id, [out] bool&amp; redirected, [out] bool&amp; cookieAdded) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveSessionID (context As HttpContext, id As String, ByRef redirected As Boolean, ByRef cookieAdded As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveSessionID(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % redirected, [Runtime::InteropServices::Out] bool % cookieAdded);" />
      <MemberSignature Language="F#" Value="abstract member SaveSessionID : System.Web.HttpContext * string *  *  -&gt; unit&#xA;override this.SaveSessionID : System.Web.HttpContext * string *  *  -&gt; unit" Usage="sessionIDManager.SaveSessionID (context, id, redirected, cookieAdded)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="redirected" Type="System.Boolean" RefType="out" />
        <Parameter Name="cookieAdded" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">目前的 <see cref="T:System.Web.HttpContext" /> 物件，參考用於處理 HTTP 要求 (例如，<see cref="P:System.Web.HttpContext.Request" /> 和 <see cref="P:System.Web.HttpContext.Response" /> 屬性) 的伺服器物件。</param>
        <param name="id">工作階段識別項。</param>
        <param name="redirected">這個方法傳回時，其中會包含布林值，如果回應會重新導向至目前的 URL，且會將工作階段識別項加入 URL，則該值為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="cookieAdded">這個方法傳回時，其中會包含布林值，如果已將 Cookie 加入 HTTP 回應，則該值為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>將新建立的工作階段識別項儲存至 HTTP 回應。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法不是從應用程式程式碼呼叫。  
  
 <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A>方法會呼叫<xref:System.Web.SessionState.SessionStateModule>物件期間<xref:System.Web.HttpApplication.AcquireRequestState>事件。 <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A>方法會將工作階段識別碼儲存在任一個 URL （使用無 cookie 工作階段狀態） 時，或不會過期的工作階段 cookie 中。  
  
 根據預設，<xref:System.Web.SessionState.SessionIDManager>置於不會過期的工作階段 cookie 中的唯一工作階段識別碼，並設定`cookieAdded`參數來`true`。  
  
 針對無 cookie 工作階段狀態，<xref:System.Web.SessionState.SessionIDManager>物件的唯一工作階段識別碼插入目前的 URL，瀏覽器重新導向至新的 URL，包括工作階段識別項，然後設定`redirected`參數來`true`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">已經傳送回應。  
  
-或- 
傳遞給這個方法的工作階段 ID 未通過驗證。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 工作階段狀態概觀</related>
      </Docs>
    </Member>
    <Member MemberName="SessionIDMaxLength">
      <MemberSignature Language="C#" Value="public static int SessionIDMaxLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 SessionIDMaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.SessionIDManager.SessionIDMaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SessionIDMaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int SessionIDMaxLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionIDMaxLength : int" Usage="System.Web.SessionState.SessionIDManager.SessionIDMaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得有效的工作階段識別項最大長度。</summary>
        <value>有效的工作階段識別項最大長度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 工作階段識別項的最大長度為 80 個字元。  
  
 而所建立的工作階段識別碼<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>方法是 24 個字元，工作階段識別碼所允許的最大長度<xref:System.Web.SessionState.SessionIDManager>類別為 80 個字元。 這點特別重要，如果您實作自訂<xref:System.Web.SessionState.SessionIDManager>。 <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>方法，以擷取從目前的工作階段識別項值<xref:System.Web.HttpRequest>，可確保，值不會超過<xref:System.Web.SessionState.SessionIDManager.SessionIDMaxLength%2A>值，而且工作階段識別項為 24 個字元字串，包含僅小寫字元z 和數字 0 到 5，藉由呼叫<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法。 如果您實作自訂<xref:System.Web.SessionState.SessionIDManager>繼承的類別<xref:System.Web.SessionState.SessionIDManager>類別並覆寫<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>方法，但不是<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法中，您的自訂工作階段識別碼值必須符合上述條件約束。 如需範例，會覆寫<xref:System.Web.SessionState.SessionIDManager>類別，並實作這些方法，請參閱針對提供的範例<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>方法。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 工作階段狀態概觀</related>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual bool Validate (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Validate(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Validate (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Validate(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Validate : string -&gt; bool&#xA;override this.Validate : string -&gt; bool" Usage="sessionIDManager.Validate id" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.Validate(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">要驗證的工作階段識別項。</param>
        <summary>取得值，指出工作階段識別項是否有效。</summary>
        <returns>如果工作階段識別項有效，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法不是從應用程式程式碼呼叫。  
  
 <xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法會驗證提供`id`是 24 個字元字串，其中包含從小寫字元 z 和數字 0 到 5 且最大長度的工作階段識別碼不會超過 80 個字元。  
  
 <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A>方法呼叫<xref:System.Web.SessionState.SessionIDManager.Validate%2A>時擷取 HTTP 要求，以確保提供的工作階段識別碼的格式是正確的工作階段識別項的方法。  
  
   
  
## Examples  
 下列程式碼範例示範繼承的類別<xref:System.Web.SessionState.SessionIDManager>類別並覆寫<xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>並<xref:System.Web.SessionState.SessionIDManager.Validate%2A>方法，提供並驗證方法<xref:System.Guid>做為<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>。  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/GuidSessionIDModule.cs#7)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/GuidSessionIDModule.vb#7)]  
  
 若要使用此範例所示的自訂類別，取代`SessionID`HTTP 模組在您的 Web.config 檔案，與您的自訂類別，如下列範例所示。  
  
```  
<httpModules>  
  <remove name="SessionID" />  
  <add name="SessionID"  
       type="Samples.AspNet.Session.GuidSessionIDManager" />  
</httpModules>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>您可以提供自訂的工作階段識別碼使用的 ASP.NET 工作階段狀態，藉由建立繼承的類別<see cref="T:System.Web.SessionState.SessionIDManager" />類別並覆寫<see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />和<see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />與您自己的自訂實作的方法。 即使當您建立自訂工作階段識別項，工作階段識別碼會限制為 80 個字元的<see cref="T:System.Web.SessionState.SessionIDManager" />類別。</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 工作階段狀態概觀</related>
      </Docs>
    </Member>
  </Members>
</Type>