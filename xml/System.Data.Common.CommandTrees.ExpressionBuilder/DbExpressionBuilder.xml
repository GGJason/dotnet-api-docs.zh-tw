<Type Name="DbExpressionBuilder" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c58aa3d4298aa217879d833dd60b69090906b2cf" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52225372" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DbExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DbExpressionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Module DbExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbExpressionBuilder abstract sealed" />
  <TypeSignature Language="F#" Value="type DbExpressionBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e7df3-101">提供 API 來建構 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，並允許以運算式類型本身的擴充方法來存取該 API。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e7df3-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s and allows that API to be accessed as extension methods on the expression type itself.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ Aggregate(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Data.Metadata.Edm.EdmFunction * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionAggregate" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate (function, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="e7df3-102">定義彙總作業的函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-102">The function that defines the aggregate operation.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="e7df3-103">應該計算其彙總函式的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-103">The argument over which the aggregate function should be calculated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-104">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-104">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-105">含有指定函式及引數之參考的新函式彙總。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-105">A new function aggregate with a reference to the given function and argument.</span>
          </span>
          <span data-ttu-id="e7df3-106">函式彙總的 Distinct 屬性會有<see langword="false" />值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-106">The function aggregate's Distinct property will have the value <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-107">
            <paramref name="function" /> 或 <paramref name="argument" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-107">
              <paramref name="function" /> or <paramref name="argument" /> null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-108">
            <paramref name="function" /> 不是彙總函式，或具有一個以上的引數，或者 <paramref name="argument" /> 的結果類型不等於或不可提升為 <paramref name="function" /> 的參數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-108">
              <paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AggregateDistinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AggregateDistinct (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ AggregateDistinct(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member AggregateDistinct : System.Data.Metadata.Edm.EdmFunction * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionAggregate" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct (function, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="e7df3-109">定義彙總作業的函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-109">The function that defines the aggregate operation.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="e7df3-110">應該計算其彙總函式的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-110">The argument over which the aggregate function should be calculated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-111">建立以不同方式套用的新 <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-111">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> that is applied in a distinct fashion.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-112">含有指定函式及引數之參考的新函式彙總。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-112">A new function aggregate with a reference to the given function and argument.</span>
          </span>
          <span data-ttu-id="e7df3-113">函式彙總的 Distinct 屬性會有<see langword="true" />值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-113">The function aggregate's Distinct property will have the value <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-114">
            <paramref name="function" /> 或 <paramref name="argument" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-114">
              <paramref name="function" /> or <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-115">
            <paramref name="function" /> 不是彙總函式，或具有一個以上的引數，或者 <paramref name="argument" /> 的結果類型不等於或不可提升為 <paramref name="function" /> 的參數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-115">
              <paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="All">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-116">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />，這個物件可判斷指定的述詞是否針對輸入集的所有項目執行作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-116">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="e7df3-117">指定輸入集的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-117">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="e7df3-118">方法，表示要針對輸入集中每個成員進行評估的述詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-118">A method representing a predicate to evaluate for each member of the input set.</span>
          </span>
          <span data-ttu-id="e7df3-119">這個方法必須產生具有可提供述詞邏輯之布林結果型別的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-119">This method must produce an expression with a Boolean result type that provides the predicate logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-120">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />，這個物件可判斷指定的述詞是否針對輸入集的所有項目執行作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-120">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-121">表 All 運算的新 DbQuantifierExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-121">A new DbQuantifierExpression that represents the All operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-122">
            <paramref name="predicate" /> 所產生的運算式為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-122">The expression produced by <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-123">
            <paramref name="Predicate" /> 所產生之運算式沒有布林值結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-123">The expression produced by <paramref name="Predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All (input, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e7df3-124">指定輸入集的運算式繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-124">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="e7df3-125">運算式，表示要針對輸入集中每個成員進行評估的述詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-125">An expression representing a predicate to evaluate for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-126">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />，這個物件可判斷指定的述詞是否針對輸入集的所有項目執行作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-126">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-127">表 All 運算的新 DbQuantifierExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-127">A new DbQuantifierExpression that represents the All operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-128">
            <paramref name="input" /> 或 <paramref name="predicate" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-128">
              <paramref name="input" /> or <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-129">
            <paramref name="predicate" /> 沒有布林結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-129">
              <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbAndExpression And (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbAndExpression And(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function And (left As DbExpression, right As DbExpression) As DbAndExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbAndExpression ^ And(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member And : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbAndExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbAndExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-130">指定左引數的布林運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-130">A Boolean expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-131">指定右引數的布林運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-131">A Boolean expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-132">建立 <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" />，它會對左右引數執行邏輯 And 運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-132">Creates an <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> that performs the logical And of the left and right arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-133">具有指定之引數的新 DbAndExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-133">A new DbAndExpression with the specified arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-134">
            <paramref name="left" /> 或 <paramref name="right" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-134">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-135">
            <paramref name="left" /> 和 <paramref name="right" /> 沒有布林結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-135">
              <paramref name="left" /> and <paramref name="right" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Any">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-136">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，這個運算式會判斷指定的集合引數是否為非空白。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-136">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Any (this System.Data.Common.CommandTrees.DbExpression source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Any(class System.Data.Common.CommandTrees.DbExpression source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source);" />
      <MemberSignature Language="F#" Value="static member Any : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="e7df3-137">指定輸入集的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-137">An expression that specifies the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-138">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，這個運算式會判斷指定的集合引數是否為非空白。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-138">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-139">套用至含有指定引數之新 <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> 的新 <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-139">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-140">
            <paramref name="source" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-140">
              <paramref name="source" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-141">
            <paramref name="source" /> 沒有集合結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-141">
              <paramref name="source" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="e7df3-142">指定輸入集的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-142">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="e7df3-143">方法，表示要針對輸入集中每個成員進行評估的述詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-143">A method representing the predicate to evaluate for each member of the input set.</span>
          </span>
          <span data-ttu-id="e7df3-144">這個方法必須產生具有可提供述詞邏輯之布林結果型別的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-144">This method must produce an expression with a Boolean result type that provides the predicate logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-145">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />，這個物件可判斷指定的述詞是否針對輸入集的所有項目執行作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-145">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-146">表示 Any 運算的新 DbQuantifierExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-146">A new DbQuantifierExpression that represents the Any operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-147">
            <paramref name="predicate" /> 所產生的運算式為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-147">The expression produced by <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-148">
            <paramref name="predicate" /> 所產生之運算式沒有布林值結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-148">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any (input, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e7df3-149">指定輸入集的運算式繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-149">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="e7df3-150">運算式，表示要針對輸入集中每個成員進行評估的述詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-150">An expression representing a predicate to evaluate for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-151">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />，這個物件可判斷指定的述詞是否針對輸入集的所有項目執行作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-151">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-152">表示 Any 運算的新 DbQuantifierExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-152">A new DbQuantifierExpression that represents the Any operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-153">
            <paramref name="input" /> 或 <paramref name="predicate" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-153">
              <paramref name="input" /> or <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-154">
            <paramref name="predicate" /> 所產生之運算式沒有布林值結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-154">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="As">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-155">傳回指定的引數做為索引鍵/值組物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-155">Returns the specified arguments as a key/value pair object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt; As (this System.Data.Common.CommandTrees.DbAggregate value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt; As(class System.Data.Common.CommandTrees.DbAggregate value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbAggregate, alias As String) As KeyValuePair(Of String, DbAggregate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt; As(System::Data::Common::CommandTrees::DbAggregate ^ value, System::String ^ alias);" />
      <MemberSignature Language="F#" Value="static member As : System.Data.Common.CommandTrees.DbAggregate * string -&gt; System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbAggregate&gt;" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As (value, alias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbAggregate" RefType="this" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e7df3-156">索引鍵/值組配對中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-156">The value in the key/value pair.</span>
          </span>
        </param>
        <param name="alias">
          <span data-ttu-id="e7df3-157">索引鍵/值組配對中的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-157">The key in the key/value pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-158">傳回指定的引數做為索引鍵/值組物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-158">Returns the specified arguments as a key/value pair object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-159">索引鍵/值組物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-159">A key/value pair object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt; As (this System.Data.Common.CommandTrees.DbExpression value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt; As(class System.Data.Common.CommandTrees.DbExpression value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbExpression, alias As String) As KeyValuePair(Of String, DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt; As(System::Data::Common::CommandTrees::DbExpression ^ value, System::String ^ alias);" />
      <MemberSignature Language="F#" Value="static member As : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As (value, alias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e7df3-160">索引鍵/值組配對中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-160">The value in the key/value pair.</span>
          </span>
        </param>
        <param name="alias">
          <span data-ttu-id="e7df3-161">索引鍵/值組配對中的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-161">The key in the key/value pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-162">傳回指定的引數做為索引鍵/值組物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-162">Returns the specified arguments as a key/value pair object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-163">索引鍵/值組物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-163">A key/value pair object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding Bind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding Bind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Bind (input As DbExpression) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ Bind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberSignature Language="F#" Value="static member Bind : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e7df3-164">要繫結的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-164">The expression to bind.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-165">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />，它會使用產生的變數名稱繫結指定的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-165">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses a generated variable name to bind the given expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-166">含有指定之運算式及產生之變數名稱的新運算式繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-166">A new expression binding with the specified expression and a generated variable name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-167">
            <paramref name="input" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-167">
              <paramref name="input" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-168">
            <paramref name="input" /> 沒有集合結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-168">
              <paramref name="input" /> does not have a collection result.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding BindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding BindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BindAs (input As DbExpression, varName As String) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ BindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName);" />
      <MemberSignature Language="F#" Value="static member BindAs : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs (input, varName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="varName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e7df3-169">要繫結的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-169">The expression to bind.</span>
          </span>
        </param>
        <param name="varName">
          <span data-ttu-id="e7df3-170">將用於繫結的變數名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-170">The variable name that should be used for the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-171">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />，它會使用指定的變數名稱繫結指定的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-171">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses the specified variable name to bind the given expression</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-172">含有指定之運算式及變數名稱的新運算式繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-172">A new expression binding with the specified expression and variable name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-173">
            <paramref name="input" /> 或 <paramref name="varName" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-173">
              <paramref name="input" /> or <paramref name="varName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-174">
            <paramref name="input" /> 沒有集合結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-174">
              <paramref name="input" /> does not have a collection result.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Case">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCaseExpression Case (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, System.Data.Common.CommandTrees.DbExpression elseExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCaseExpression Case(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, class System.Data.Common.CommandTrees.DbExpression elseExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Case (whenExpressions As IEnumerable(Of DbExpression), thenExpressions As IEnumerable(Of DbExpression), elseExpression As DbExpression) As DbCaseExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCaseExpression ^ Case(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ whenExpressions, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ thenExpressions, System::Data::Common::CommandTrees::DbExpression ^ elseExpression);" />
      <MemberSignature Language="F#" Value="static member Case : seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbCaseExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case (whenExpressions, thenExpressions, elseExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCaseExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="thenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="elseExpression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="whenExpressions">
          <span data-ttu-id="e7df3-175">運算式清單，提供各種案例的條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-175">A list of expressions that provide the conditional for of each case.</span>
          </span>
        </param>
        <param name="thenExpressions">
          <span data-ttu-id="e7df3-176">運算式清單，提供各種案例的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-176">A list of expressions that provide the result of each case.</span>
          </span>
        </param>
        <param name="elseExpression">
          <span data-ttu-id="e7df3-177">運算式，定義在沒有符合任何案例時的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-177">An expression that defines the result when no case is matched.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-178">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-178">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-179">具有指定之大小寫及預設結果的新 DbCaseExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-179">A new DbCaseExpression with the specified cases and default result.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-180">
            <paramref name="whenExpressions" /> 或 <paramref name="thenExpressions" /> 為 null 或包含 null，或是 <paramref name="elseExpression" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-180">
              <paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is null or contains null, or <paramref name="elseExpression" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-181">
            <paramref name="whenExpressions" /> 或 <paramref name="thenExpressions" /> 是空的，或者 <paramref name="whenExpressions" /> 內含的運算式不是布林結果型別，或沒有通用的結果型別存在於 <paramref name="thenExpressions" /> 和 <paramref name="elseExpression" /> 中的所有運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-181">
              <paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is empty or <paramref name="whenExpressions" /> contains an expression with a non-Boolean result type, or no common result type exists for all expressions in <paramref name="thenExpressions" /> and <paramref name="elseExpression" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CastTo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCastExpression CastTo (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage toType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCastExpression CastTo(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage toType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CastTo (argument As DbExpression, toType As TypeUsage) As DbCastExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbCastExpression ^ CastTo(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ toType);" />
      <MemberSignature Language="F#" Value="static member CastTo : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbCastExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo (argument, toType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCastExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="toType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-182">要套用轉換的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-182">The argument to which the cast should be applied.</span>
          </span>
        </param>
        <param name="toType">
          <span data-ttu-id="e7df3-183">型別中繼資料，其指定要轉換到的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-183">Type metadata that specifies the type to cast to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-184">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" />，它會將轉換運算套用至多型引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-184">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> that applies a cast operation to a polymorphic argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-185">具有指定之引數及目標型別的新 DbCastExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-185">A new DbCastExpression with the specified argument and target type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-186">
            <paramref name="Argument" /> 或 <paramref name="toType" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-186">
              <paramref name="Argument" /> or <paramref name="toType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-187">指定的轉型無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-187">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Constant">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-188">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-188">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Constant (value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Constant : obj -&gt; System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e7df3-189">要表示的常數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-189">The constant value to represent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-190">使用指定的常數值，建立新的 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-190">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the given constant value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-191">具有指定之值的新 DbConstantExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-191">A new DbConstantExpression with the given value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-192">
            <paramref name="value" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-192">
              <paramref name="value" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-193">
            <paramref name="value" /> 不是有效常數型別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-193">
              <paramref name="value" /> is not an instance of a valid constant type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (this System.Data.Metadata.Edm.TypeUsage constantType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(class System.Data.Metadata.Edm.TypeUsage constantType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Constant (constantType As TypeUsage, value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Data::Metadata::Edm::TypeUsage ^ constantType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Constant : System.Data.Metadata.Edm.TypeUsage * obj -&gt; System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant (constantType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constantType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="constantType">
          <span data-ttu-id="e7df3-194">常數值的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-194">The type of the constant value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="e7df3-195">要表示的常數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-195">The constant value to represent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-196">使用給定的常數值，建立指定基本型別的新 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-196">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> of the specified primitive type with the given constant value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-197">具有指定之值且結果類型為 <paramref name="constantType" /> 的新 DbConstantExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-197">A new DbConstantExpression with the given value and a result type of <paramref name="constantType" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-198">
            <paramref name="value" /> 或 <paramref name="constantType" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-198">
              <paramref name="value" /> or <paramref name="constantType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-199">
            <paramref name="value" /> 不是有效的常數類型之執行個體，<paramref name="constantType" /> 不表示基本的類型，或者 <paramref name="value" /> 屬於不同的基本類型 (由 <paramref name="constantType" /> 表示)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-199">
              <paramref name="value" /> is not an instance of a valid constant type,  <paramref name="constantType" /> does not represent a primitive type, or <paramref name="value" /> is of a different primitive type than that represented by <paramref name="constantType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRef">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-200">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />，它會根據索引鍵值將參考編碼為給定型別的特定實體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-200">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="e7df3-201">參考之項目位在其中的實體集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-201">The entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="keyValues">
          <span data-ttu-id="e7df3-202">
            <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 的集合，可提供索引鍵值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-202">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span>
          </span>
          <span data-ttu-id="e7df3-203">這些運算式必須 (在數目、型別和順序方面) 符合參考之實體型別的索引鍵屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-203">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-204">建立會根據索引鍵值將參考編碼為特定實體的新 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-204">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-205">新的 DbRefExpression，參考在指定的實體集中具有指定的索引鍵值的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-205">A new DbRefExpression that references the element with the specified key values in the given entity set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-206">
            <paramref name="entitySet" /> 表示 null，或 <paramref name="keyValues" /> 為 null 或包含 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-206">
              <paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-207">
            <paramref name="keyValues" /> 不符合 <paramref name="entitySet" /> 之項目類型所宣告之索引鍵成員的計數，或者 <paramref name="keyValues" /> 包含運算式的結果類型與對應之索引鍵成員的類型不相容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-207">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="e7df3-208">參考之項目位在其中的實體集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-208">The entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="keyValues">
          <span data-ttu-id="e7df3-209">
            <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 的集合，可提供索引鍵值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-209">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span>
          </span>
          <span data-ttu-id="e7df3-210">這些運算式必須 (在數目、型別和順序方面) 符合參考之實體型別的索引鍵屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-210">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-211">建立會根據索引鍵值將參考編碼為特定實體的新 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-211">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-212">新的 DbRefExpression，參考在指定的實體集中具有指定的索引鍵值的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-212">A new DbRefExpression that references the element with the specified key values in the given entity set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-213">
            <paramref name="entitySet" /> 表示 null，或 <paramref name="keyValues" /> 為 null 或包含 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-213">
              <paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-214">
            <paramref name="keyValues" /> 不符合 <paramref name="entitySet" /> 之項目類型所宣告之索引鍵成員的計數，或者 <paramref name="keyValues" /> 包含運算式的結果類型與對應之索引鍵成員的類型不相容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-214">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * System.Data.Metadata.Edm.EntityType * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, entityType, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="e7df3-215">參考之項目位在其中的實體集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-215">The entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="entityType">
          <span data-ttu-id="e7df3-216">所參考實體的特定型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-216">The specific type of the referenced entity.</span>
          </span>
          <span data-ttu-id="e7df3-217">這個實體型別必須與實體集的項目型別來自相同階層。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-217">This must be an entity type from the same hierarchy as the entity set's element type.</span>
          </span>
        </param>
        <param name="keyValues">
          <span data-ttu-id="e7df3-218">
            <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 的集合，可提供索引鍵值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-218">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span>
          </span>
          <span data-ttu-id="e7df3-219">這些運算式必須 (在數目、型別和順序方面) 符合參考之實體型別的索引鍵屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-219">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-220">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />，它會根據索引鍵值將參考編碼為給定型別的特定實體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-220">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-221">新的 DbRefExpression，參考在指定的實體集中具有指定的索引鍵值的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-221">A new DbRefExpression that references the element with the specified key values in the given entity set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-222">
            <paramref name="entitySet" /> 或 <paramref name="entityType" /> 為 null，或是 <paramref name="keyValues" /> 為 null 或包含 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-222">
              <paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-223">
            <paramref name="keyValues" /> 不符合 <paramref name="entitySet" /> 之項目類型所宣告之索引鍵成員的計數，或者 <paramref name="keyValues" /> 包含運算式的結果類型與對應之索引鍵成員的類型不相容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-223">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * System.Data.Metadata.Edm.EntityType * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, entityType, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="e7df3-224">參考之項目位在其中的實體集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-224">The entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="entityType">
          <span data-ttu-id="e7df3-225">所參考實體的特定型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-225">The specific type of the referenced entity.</span>
          </span>
          <span data-ttu-id="e7df3-226">這個實體型別必須與實體集的項目型別來自相同階層。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-226">This must be an entity type from the same hierarchy as the entity set's element type.</span>
          </span>
        </param>
        <param name="keyValues">
          <span data-ttu-id="e7df3-227">
            <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> 的集合，可提供索引鍵值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-227">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span>
          </span>
          <span data-ttu-id="e7df3-228">這些運算式必須 (在數目、型別和順序方面) 符合參考之實體型別的索引鍵屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-228">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-229">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />，它會根據索引鍵值將參考編碼為給定型別的特定實體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-229">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-230">新的 DbRefExpression，參考在指定的實體集中具有指定的索引鍵值的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-230">A new DbRefExpression that references the element with the specified key values in the given entity set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-231">
            <paramref name="entitySet" /> 或 <paramref name="entityType" /> 為 null，或是 <paramref name="keyValues" /> 為 null 或包含 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-231">
              <paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-232">
            <paramref name="keyValues" /> 不符合 <paramref name="entitySet" /> 之項目類型所宣告之索引鍵成員的計數，或者 <paramref name="keyValues" /> 包含運算式的結果類型與對應之索引鍵成員的類型不相容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-232">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />’s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CrossApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-233">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />，這個運算式會針對給定輸入集的每個項目，評估給定的 <paramref name="apply" /> 運算式一次，產生具有對應的輸入和適用資料行的資料列集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-233">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberSignature Language="F#" Value="static member CrossApply : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply (source, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="e7df3-234">指定輸入集的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-234">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="e7df3-235">方法，指定要針對輸入集中每個成員進行一次評估的邏輯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-235">A method that specifies the logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-236">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />，這個運算式會針對給定輸入集的每個項目，評估給定的 <paramref name="apply" /> 運算式一次，產生具有對應的輸入和適用資料行的資料列集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-236">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="e7df3-237">其中不包含 <paramref name="apply" /> 評估為空集合的資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-237">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-238">具有指定之輸入及套用繫結與 CrossApply 之 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 的新 DbApplyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-238">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-239">
            <paramref name="apply" /> 的結果包含為 null 的名稱或運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-239">The result of <paramref name="apply" /> contains a name or expression that is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-240">
            <paramref name="apply" /> 的結果包含在運算式繫結中為無效的名稱或運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-240">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberSignature Language="F#" Value="static member CrossApply : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply (input, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e7df3-241">指定輸入集的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-241">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="e7df3-242">
            <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />，指定要針對輸入集中每個成員進行一次評估的邏輯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-242">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-243">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />，這個運算式會針對給定輸入集的每個項目，評估給定的 <paramref name="apply" /> 運算式一次，產生具有對應的輸入和適用資料行的資料列集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-243">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="e7df3-244">其中不包含 <paramref name="apply" /> 評估為空集合的資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-244">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-245">具有指定之輸入及套用繫結與 CrossApply 之 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 的新 DbApplyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-245">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-246">
            <paramref name="input" /> 或 <paramref name="apply" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-246">
              <paramref name="input" /> or <paramref name="apply" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CrossJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})" />
      <MemberSignature Language="VB.NET" Value="Public Function CrossJoin (inputs As IEnumerable(Of DbExpressionBinding)) As DbCrossJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCrossJoinExpression ^ CrossJoin(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpressionBinding ^&gt; ^ inputs);" />
      <MemberSignature Language="F#" Value="static member CrossJoin : seq&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; -&gt; System.Data.Common.CommandTrees.DbCrossJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin inputs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCrossJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="inputs">
          <span data-ttu-id="e7df3-247">指定輸入集的運算式繫結清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-247">A list of expression bindings that specifies the input sets.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-248">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />，它會無條件聯結輸入運算式繫結清單所指定的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-248">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> that unconditionally joins the sets specified by the list of input expression bindings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-249">表示輸入集之無條件聯結且具有 CrossJoin 之 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 的新 DbCrossJoinExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-249">A new DbCrossJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossJoin, that represents the unconditional join of the input sets.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-250">
            <paramref name="inputs" /> 為 null，或是包含 null 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-250">
              <paramref name="inputs" /> is null or contains null element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-251">
            <paramref name="inputs" /> 包含少於 2 個運算式繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-251">
              <paramref name="inputs" /> contains fewer than 2 expression bindings.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Deref">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDerefExpression Deref (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDerefExpression Deref(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Deref (argument As DbExpression) As DbDerefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDerefExpression ^ Deref(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Deref : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbDerefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDerefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-252">提供參考的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-252">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that provides the reference.</span>
          </span>
          <span data-ttu-id="e7df3-253">這個運算式必須具有參考型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-253">This expression must have a reference Type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-254">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" />，它會以給定參考運算式擷取特定實體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-254">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> that retrieves a specific Entity given a reference expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-255">擷取指定之實體的新 DbDerefExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-255">A new DbDerefExpression that retrieves the specified Entity.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-256">
            <paramref name="argument" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-256">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-257">
            <paramref name="argument" /> 沒有參考結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-257">
              <paramref name="argument" /> does not have a reference result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDistinctExpression Distinct (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDistinctExpression Distinct(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct (argument As DbExpression) As DbDistinctExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDistinctExpression ^ Distinct(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Distinct : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbDistinctExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDistinctExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-258">運算式，定義要對其執行相異運算的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-258">An expression that defines the set over which to perfom the distinct operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-259">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" />，它會從指定的集合引數中移除重複的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-259">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> that removes duplicates from the given set argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-260">表示套用至指定集合引數之 Distinct 運算的新的 DbDistinctExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-260">A new DbDistinctExpression that represents the distinct operation applied to the specified set argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-261">
            <paramref name="argument" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-261">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-262">
            <paramref name="argument" /> 沒有集合結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-262">
              <paramref name="argument" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Divide (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Divide(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Divide (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Divide(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Divide : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-263">指定左引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-263">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-264">指定右引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-264">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-265">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />，這個運算式會將左引數除以右引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-265">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that divides the left argument by the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-266">表示除法運算的新 DbArithmeticExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-266">A new DbArithmeticExpression representing the division operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-267">
            <paramref name="left" /> 或 <paramref name="right" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-267">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-268">在 <paramref name="left" /> 或 <paramref name="right" /> 之間，不存在一般數字結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-268">No common numeric result type exists between <paramref name="left" /> or <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Element">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbElementExpression Element (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbElementExpression Element(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Element (argument As DbExpression) As DbElementExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbElementExpression ^ Element(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Element : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbElementExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbElementExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-269">指定輸入集的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-269">An expression that specifies the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-270">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" />，它會將集合轉換成單一子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-270">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> that converts a set into a singleton.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-271">DbElementExpression，表示將集合引數轉換成單一子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-271">A DbElementExpression that represents the conversion of the set argument to a singleton.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-272">
            <paramref name="argument" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-272">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-273">
            <paramref name="argument" /> 沒有集合結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-273">
              <paramref name="argument" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression Equal (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression Equal(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Equal (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ Equal(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Equal : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-274">指定左引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-274">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-275">指定右引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-275">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-276">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />，這個運算式會比較左引數和右引數是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-276">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-277">表示相等比較的新 DbComparisonExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-277">A new DbComparisonExpression representing the equality comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-278">
            <paramref name="left" /> 或 <paramref name="right" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-278">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-279">
            <paramref name="left" /> 和 <paramref name="right" /> 之間沒有相等比較的結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-279">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExceptExpression Except (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExceptExpression Except(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (left As DbExpression, right As DbExpression) As DbExceptExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExceptExpression ^ Except(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Except : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExceptExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExceptExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-280">定義左集合引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-280">An expression that defines the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-281">定義右集合引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-281">An expression that defines the right set argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-282">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" />，這個運算式會從左集合引數減去右集合引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-282">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> that computes the subtraction of the right set argument from the left set argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-283">新的 DbExceptExpression，表示左引數與右引數的差異。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-283">A new DbExceptExpression that represents the difference of the left argument from the right argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-284">
            <paramref name="left" /> 或 <paramref name="right" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-284">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-285">
            <paramref name="left" /> 和 <paramref name="right" /> 之間沒有一般集合結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-285">No common collection result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Exists (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Exists(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exists (argument As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Exists(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Exists : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-286">指定輸入集的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-286">An expression that specifies the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-287">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，這個運算式會判斷指定的集合引數是否為非空白。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-287">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-288">套用至含有指定引數之新 <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> 的新 <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-288">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-289">
            <paramref name="argument" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-289">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-290">
            <paramref name="argument" /> 沒有集合結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-290">
              <paramref name="argument" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="False">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression False { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression False" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property False As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ False { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.False : System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-291">取得布林值 <see langword="false" /> 的 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-291">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7df3-292">布林值為 <see langword="false" /> 的 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-292">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Filter (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Filter(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Filter (input As DbExpressionBinding, predicate As DbExpression) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Filter(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Filter : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFilterExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter (input, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e7df3-293">指定輸入集的運算式繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-293">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="e7df3-294">運算式，表示要針對輸入集中每個成員進行評估的述詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-294">An expression representing a predicate to evaluate for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-295">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />，它會使用指定的述詞篩選給定輸入集的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-295">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-296">產生已篩選之集合的新 DbFilterExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-296">A new DbFilterExpression that produces the filtered set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-297">
            <paramref name="input" /> 或 <paramref name="predicate" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-297">
              <paramref name="input" /> or <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-298">
            <paramref name="predicate" /> 沒有布林結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-298">
              <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FullOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-299">以指定的聯結條件，使用 FullOuterJoin 做為 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 來建立聯結由左運算式和右運算式所指定之集合的新 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-299">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member FullOuterJoin : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-300">
            <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，可指定左集合引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-300">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-301">
            <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，可指定右集合引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-301">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="e7df3-302">代表要聯結之條件的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-302">A method representing the condition on which to join.</span>
          </span>
          <span data-ttu-id="e7df3-303">這個方法必須產生包含布林值結果類型 (可提供聯結條件的邏輯) 的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-303">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-304">以指定的聯結條件，使用 FullOuterJoin 做為 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 來建立聯結由左運算式和右運算式所指定之集合的新 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-304">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-305">新的 DbJoinExpression (包含 FullOuterJoin 的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />)，代表套用至指定聯結條件下之左輸入集和右輸入集的完整外部聯結作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-305">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-306">
            <paramref name="joinCondition" /> 所產生的運算式為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-306">The expression produced by <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-307">
            <paramref name="joinCondition" /> 所產生之運算式沒有布林值結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-307">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member FullOuterJoin : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-308">
            <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />，指定左集合引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-308">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-309">
            <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />，指定右集合引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-309">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="e7df3-310">運算式，指定要聯結的條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-310">An expression that specifies the condition on which to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-311">使用 FullOuterJoin 做為 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />，建立新的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，它會針對指定的聯結條件，聯結左右運算式繫結所指定的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-311">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-312">含有 FullOuterJoin 之 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 的新 DbJoinExpression，表示套用至指定聯結條件下之左邊及右邊輸入集的完整外部聯結作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-312">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right     input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-313">
            <paramref name="left" />、<paramref name="right" /> 或 <paramref name="joinCondition" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-313">
              <paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-314">
            <paramref name="joinCondition" /> 所產生之運算式沒有布林值結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-314">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEntityRef (argument As DbExpression) As DbEntityRefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbEntityRefExpression ^ GetEntityRef(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member GetEntityRef : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbEntityRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbEntityRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-315">提供實體的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-315">The expression that provides the entity.</span>
          </span>
          <span data-ttu-id="e7df3-316">這個運算式必須是實體結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-316">This expression must have an entity result type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-317">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />，它會擷取結構化格式中指定實體的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-317">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> that retrieves the ref of the specifed entity in structural form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-318">擷取指定之實體參考的新 DbEntityRefExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-318">A new DbEntityRefExpression that retrieves a reference to the specified entity.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-319">
            <paramref name="argument" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-319">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-320">
            <paramref name="argument" /> 沒有實體結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-320">
              <paramref name="argument" /> does not have an entity result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRefKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRefKey (argument As DbExpression) As DbRefKeyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefKeyExpression ^ GetRefKey(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member GetRefKey : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbRefKeyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefKeyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-321">提供參考的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-321">The expression that provides the reference.</span>
          </span>
          <span data-ttu-id="e7df3-322">這個運算式必須是具有實體項目型別的參考型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-322">This expression must have a reference Type with an Entity element type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-323">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />，它會擷取結構化格式中指定參考的索引鍵值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-323">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> that retrieves the key values of the specifed reference in structural form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-324">擷取指定參考之索引鍵值的新 DbRefKeyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-324">A new DbRefKeyExpression that retrieves the key values of the specified reference.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-325">
            <paramref name="argument" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-325">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-326">
            <paramref name="argument" /> 沒有參考結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-326">
              <paramref name="argument" /> does not have a reference result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member GreaterThan : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-327">指定左引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-327">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-328">指定右引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-328">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-329">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />，這個運算式會判斷左引數是否大於右引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-329">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-330">表示大於比較的新 DbComparisonExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-330">A new DbComparisonExpression representing the greater-than comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-331">
            <paramref name="left" /> 或 <paramref name="right" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-331">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-332">
            <paramref name="left" /> 和 <paramref name="right" /> 之間沒有一般順序比較的結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-332">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member GreaterThanOrEqual : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-333">指定左引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-333">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-334">指定右引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-334">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-335">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />，這個運算式會判斷左引數是否大於或等於右引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-335">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than or equal to the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-336">表示大於或等於比較的新 DbComparisonExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-336">A new DbComparisonExpression representing the greater-than-or-equal-to comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-337">
            <paramref name="left" /> 或 <paramref name="right" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-337">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-338">
            <paramref name="left" /> 和 <paramref name="right" /> 之間沒有一般順序比較的結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-338">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBind (input As DbExpression) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberSignature Language="F#" Value="static member GroupBind : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbGroupExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e7df3-339">要繫結的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-339">The expression to bind.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-340">建立新的群組運算式繫結，這個繫結會使用產生的變數和群組變數名稱，繫結給定的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-340">Creates a new group expression binding that uses generated variable and group variable names to bind the given expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-341">含有指定之運算式及產生之變數名稱與群組變數名稱的新群組運算式繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-341">A new group expression binding with the specified expression and a generated variable name and group variable name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-342">
            <paramref name="input" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-342">
              <paramref name="input" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-343">
            <paramref name="input" /> 沒有集合結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-343">
              <paramref name="input" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBindAs (input As DbExpression, varName As String, groupVarName As String) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName, System::String ^ groupVarName);" />
      <MemberSignature Language="F#" Value="static member GroupBindAs : System.Data.Common.CommandTrees.DbExpression * string * string -&gt; System.Data.Common.CommandTrees.DbGroupExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs (input, varName, groupVarName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="varName" Type="System.String" />
        <Parameter Name="groupVarName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e7df3-344">要繫結的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-344">The expression to bind.</span>
          </span>
        </param>
        <param name="varName">
          <span data-ttu-id="e7df3-345">將用於繫結的變數名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-345">The variable name that should be used for the binding.</span>
          </span>
        </param>
        <param name="groupVarName">
          <span data-ttu-id="e7df3-346">變數名稱，在 group-by 運算式中使用新的群組運算式繫結時用於參考群組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-346">The variable name that should be used to refer to the group when the new group expression binding is used in a group-by expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-347">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" />，這個繫結會使用指定的變數名稱和群組變數名稱，繫結給定的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-347">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that uses the specified variable name and group variable names to bind the given expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-348">含有指定之運算式、變數名稱和群組變數名稱的新群組運算式繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-348">A new group expression binding with the specified expression, variable name and group variable name.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-349">
            <paramref name="input" />、<paramref name="varName" /> 或 <paramref name="groupVarName" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-349">
              <paramref name="input" />,  <paramref name="varName" /> or <paramref name="groupVarName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-350">
            <paramref name="input" /> 沒有集合結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-350">
              <paramref name="input" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupByExpression GroupBy (this System.Data.Common.CommandTrees.DbGroupExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupByExpression GroupBy(class System.Data.Common.CommandTrees.DbGroupExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy (input As DbGroupExpressionBinding, keys As IEnumerable(Of KeyValuePair(Of String, DbExpression)), aggregates As IEnumerable(Of KeyValuePair(Of String, DbAggregate))) As DbGroupByExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupByExpression ^ GroupBy(System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ keys, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt;&gt; ^ aggregates);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Data.Common.CommandTrees.DbGroupExpressionBinding * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbAggregate&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbGroupByExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy (input, keys, aggregates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupByExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbGroupExpressionBinding" RefType="this" />
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
        <Parameter Name="aggregates" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e7df3-351">指定輸入集的 <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-351">A <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="keys">
          <span data-ttu-id="e7df3-352">字串-運算式組的清單，用於定義分組的資料行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-352">A list of string-expression pairs that define the grouping columns.</span>
          </span>
        </param>
        <param name="aggregates">
          <span data-ttu-id="e7df3-353">指定要套用之彙總的運算式清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-353">A list of expressions that specify aggregates to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-354">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />，它會根據指定的群組索引鍵分組輸入集項目，並套用指定的彙總。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-354">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> that groups the elements of the input set according to the specified group keys and applies the given aggregates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-355">含有指定之輸入集、群組索引鍵和彙總的新 DbGroupByExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-355">A new DbGroupByExpression with the specified input set, grouping keys and aggregates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7df3-356">DbGroupByExpression 允許索引鍵的清單或清單是空白的彙總，但非兩者。</span><span class="sxs-lookup"><span data-stu-id="e7df3-356">DbGroupByExpression allows either the list of keys or the list of aggregates to be empty, but not both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-357">
            <paramref name="input" />、<paramref name="keys" /> 或 <paramref name="aggregates" /> 為 null，<paramref name="keys" /> 包含 Null 資料行索引鍵或運算式，或者 <paramref name="aggregates" /> 包含 Null 彙總資料行名稱或彙總。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-357">
              <paramref name="input" />,  <paramref name="keys" /> or <paramref name="aggregates" /> is null,  <paramref name="keys" /> contains a null column key or expression, or <paramref name="aggregates" /> contains a null aggregate column name or aggregate.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-358">
            <paramref name="keys" /> 和 <paramref name="aggregates" /> 都是空的，或是指定了無效或重複的資料行名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-358">Both <paramref name="keys" /> and <paramref name="aggregates" /> are empty, or an invalid or duplicate column name was specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InnerJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-359">使用 InnerJoin 做為 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />，建立新的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，它會聯結由左右運算式針對指定的聯結條件所指定的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-359">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member InnerJoin : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-360">
            <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，可指定左集合引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-360">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-361">
            <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，可指定右集合引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-361">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="e7df3-362">代表要聯結之條件的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-362">A method representing the condition on which to join.</span>
          </span>
          <span data-ttu-id="e7df3-363">這個方法必須產生包含布林值結果類型 (可提供聯結條件的邏輯) 的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-363">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-364">使用 InnerJoin 做為 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />，建立新的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，它會聯結由左右運算式針對指定的聯結條件所指定的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-364">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-365">含有 InnerJoin 之 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 的新 DbJoinExpression，表示套用至指定聯結條件下之左邊及右邊輸入集的內部聯結作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-365">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-366">
            <paramref name="joinCondition" /> 所產生的運算式為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-366">The expression produced by <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-367">
            <paramref name="joinCondition" /> 所產生之運算式沒有布林值結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-367">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member InnerJoin : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-368">
            <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />，指定左集合引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-368">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-369">
            <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />，指定右集合引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-369">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="e7df3-370">運算式，指定要聯結的條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-370">An expression that specifies the condition on which to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-371">使用 InnerJoin 做為 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />，建立新的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，它會針對指定的聯結條件，聯結左右運算式繫結所指定的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-371">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-372">含有 InnerJoin 之 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 的新 DbJoinExpression，表示套用至指定聯結條件下之左邊及右邊輸入集的內部聯結作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-372">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right     input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-373">
            <paramref name="left" />、<paramref name="right" /> 或 <paramref name="joinCondition" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-373">
              <paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-374">
            <paramref name="joinCondition" /> 沒有布林結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-374">
              <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIntersectExpression Intersect (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIntersectExpression Intersect(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect (left As DbExpression, right As DbExpression) As DbIntersectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIntersectExpression ^ Intersect(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbIntersectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIntersectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-375">定義左集合引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-375">An expression that defines the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-376">定義右集合引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-376">An expression that defines the right set argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-377">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" />，這個運算式會計算左右集合引數的交集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-377">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> that computes the intersection of the left and right set arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-378">新的 DbIntersectExpression，表示左右引數的交集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-378">A new DbIntersectExpression that represents the intersection of the left and right arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-379">
            <paramref name="left" /> 或 <paramref name="right" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-379">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-380">
            <paramref name="left" /> 或 <paramref name="right" /> 之間沒有一般集合結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-380">No common collection result type exists between <paramref name="left" /> or <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-381">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />，表示要讓給定引數套用指定的 Lambda 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-381">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, arguments As IEnumerable(Of DbExpression)) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Common.CommandTrees.DbLambda * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbLambdaExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (lambda, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="lambda">
          <span data-ttu-id="e7df3-382">
            <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> 執行個體，表示要套用的 Lambda 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-382">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="e7df3-383">提供引數的運算式清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-383">A list of expressions that provide the arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-384">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />，表示要讓給定引數套用指定的 Lambda 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-384">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-385">表示 Lambda 函式應用程式之的新 DbLambdaExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-385">A new DbLambdaExpression representing the Lambda function application.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-386">
            <paramref name="lambda" /> 或 <paramref name="arguments" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-386">
              <paramref name="lambda" /> or <paramref name="arguments" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-387">
            <paramref name="arguments" /> 的計數不等於 <paramref name="lambda" /> 所宣告的變數數目，或者 <paramref name="arguments" /> 包含有結果型別不是等於或可提升至對應變數型別的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-387">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, ParamArray arguments As DbExpression()) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Common.CommandTrees.DbLambda * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbLambdaExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (lambda, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="lambda">
          <span data-ttu-id="e7df3-388">
            <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> 執行個體，表示要套用的 Lambda 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-388">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="e7df3-389">提供引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-389">Expressions that provide the arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-390">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />，表示要讓給定引數套用指定的 Lambda 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-390">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-391">表示 Lambda 函式應用程式之的新 DbLambdaExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-391">A new DbLambdaExpression representing the Lambda function application.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-392">
            <paramref name="lambda" /> 或 <paramref name="arguments" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-392">
              <paramref name="lambda" /> or <paramref name="arguments" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-393">
            <paramref name="arguments" /> 的計數不等於 <paramref name="lambda" /> 所宣告的變數數目，或者 <paramref name="arguments" /> 包含有結果型別不是等於或可提升至對應變數型別的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-393">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, arguments As IEnumerable(Of DbExpression)) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Metadata.Edm.EdmFunction * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (function, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="e7df3-394">要叫用之函式的中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-394">Metadata for the function to invoke.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="e7df3-395">提供引數給函式的運算式清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-395">A list of expressions that provide the arguments to the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-396">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> 代表使用指定之引數指定的函式引動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-396">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-397">新的 DbFunctionExpression，代表函式引動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-397">A new DbFunctionExpression representing the function invocation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-398">
            <paramref name="function" /> 表示 null，或 <paramref name="arguments" /> 為 null 或包含 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-398">
              <paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-399">
            <paramref name="arguments" /> 的計數不等於 <paramref name="function" /> 宣告的參數數目，或 <paramref name="arguments" /> 包含具有不等於或無法提升至對應函式參數類型之結果類型的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-399">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, ParamArray arguments As DbExpression()) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Metadata.Edm.EdmFunction * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (function, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="e7df3-400">要叫用之函式的中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-400">Metadata for the function to invoke.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="e7df3-401">提供引數給函式的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-401">Expressions that provide the arguments to the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-402">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> 代表使用指定之引數指定的函式引動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-402">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-403">新的 DbFunctionExpression，代表函式引動過程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-403">A new DbFunctionExpression representing the function invocation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-404">
            <paramref name="function" /> 表示 null，或 <paramref name="arguments" /> 為 null 或包含 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-404">
              <paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-405">
            <paramref name="arguments" /> 的計數不等於 <paramref name="function" /> 宣告的參數數目，或 <paramref name="arguments" /> 包含具有不等於或無法提升至對應函式參數類型之結果類型的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-405">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsEmpty (argument As DbExpression) As DbIsEmptyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsEmptyExpression ^ IsEmpty(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member IsEmpty : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbIsEmptyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsEmptyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-406">指定輸入集的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-406">An expression that specifies the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-407">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />，這個運算式會判斷指定的集合引數是否為空集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-407">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> that determines whether the specified set argument is an empty set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-408">含有指定之引數的新 DbIsEmptyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-408">A new DbIsEmptyExpression with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-409">
            <paramref name="argument" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-409">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-410">
            <paramref name="argument" /> 沒有集合結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-410">
              <paramref name="argument" /> does not have a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsNullExpression IsNull (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsNullExpression IsNull(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsNull (argument As DbExpression) As DbIsNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsNullExpression ^ IsNull(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member IsNull : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbIsNullExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-411">指定引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-411">An expression that specifies the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-412">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" />，它會判斷指定的引數是否為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-412">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> that determines whether the specified argument is null.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-413">含有指定之引數的新 DbIsNullExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-413">A new DbIsNullExpression with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-414">
            <paramref name="argument" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-414">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-415">
            <paramref name="argument" /> 有集合結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-415">
              <paramref name="argument" /> has a collection result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOf (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOf(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOf (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOf(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member IsOf : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbIsOfExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-416">指定執行個體的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-416">An expression that specifies the instance.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="e7df3-417">型別中繼資料，指定要與執行個體結果型別比較的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-417">Type metadata that specifies the type that the instance's result type should be compared to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-418">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />，這個運算式會判斷給定的引數是否為指定型別或子型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-418">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> that determines whether the given argument is of the specified type or a subtype.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-419">含有指定之執行個體和型別以及 DbExpressionKind IsOf 的新 DbIsOfExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-419">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOf.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7df3-420">DbIsOfExpression 要求`argument`具有多型態結果類型，以及`type`屬於相同的型別階層架構，為該結果類型的類型。</span><span class="sxs-lookup"><span data-stu-id="e7df3-420">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-421">
            <paramref name="argument" /> 或 <paramref name="type" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-421">
              <paramref name="argument" /> or <paramref name="type" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-422">
            <paramref name="type" /> 不在與 <paramref name="argument" /> 之結果型別相同的型別階層中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-422">
              <paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsOfOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOfOnly (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOfOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member IsOfOnly : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbIsOfExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-423">指定執行個體的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-423">An expression that specifies the instance.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="e7df3-424">型別中繼資料，指定要與執行個體結果型別比較的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-424">Type metadata that specifies the type that the instance's result type should be compared to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-425">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> 運算式，這個運算式會判斷給定的引數是否為指定型別並且就只為該型別 (而非子型別)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-425">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> expression that determines whether the given argument is of the specified type, and only that type (not a subtype).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-426">含有指定之執行個體和型別以及 DbExpressionKind IsOfOnly 的新 DbIsOfExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-426">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOfOnly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7df3-427">DbIsOfExpression 要求`argument`具有多型態結果類型，以及`type`屬於相同的型別階層架構，為該結果類型的類型。</span><span class="sxs-lookup"><span data-stu-id="e7df3-427">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-428">
            <paramref name="argument" /> 或 <paramref name="type" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-428">
              <paramref name="argument" /> or <paramref name="type" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-429">
            <paramref name="type" /> 不在與 <paramref name="argument" /> 之結果型別相同的型別階層中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-429">
              <paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression Join (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression Join(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey);" />
      <MemberSignature Language="F#" Value="static member Join : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join (outer, inner, outerKey, innerKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="outer">
          <span data-ttu-id="e7df3-430">
            <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，可指定外部集引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-430">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="e7df3-431">
            <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，可指定內部集引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-431">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span>
          </span>
        </param>
        <param name="outerKey">
          <span data-ttu-id="e7df3-432">此方法可指定外部索引鍵值該如何自外部集合的項目衍生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-432">A method that specifies how the outer key value should be derived from an element of the outer set.</span>
          </span>
        </param>
        <param name="innerKey">
          <span data-ttu-id="e7df3-433">此方法可指定內部索引鍵值該如何自內部集合的項目衍生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-433">A method that specifies how the inner key value should be derived from an element of the inner set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-434">使用 InnerJoin 作為 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，建立新的 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />，其會以指定的內外部索引鍵間的相等條件，來結合內外部運算式所指定的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-434">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the outer and inner expressions, on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-435">新的 DbJoinExpression，含有 InnerJoin 的<see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，表示套用至聯結條件下左右方輸入集的內部聯結作業，其中該聯結條件會比較外部和內部索引鍵值是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-435">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-436">
            <paramref name="outerKey" /> 或 <paramref name="innerKey" /> 所產生的運算式為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-436">The expression produced by <paramref name="outerKey" /> or <paramref name="innerKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-437">
            <paramref name="outerKey" /> 和 <paramref name="innerKey" /> 所產生的運算式無法比較是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-437">The expressions produced by <paramref name="outerKey" /> and <paramref name="innerKey" /> are not comparable for equality.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TSelector) (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Join : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, 'Selector&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join (outer, inner, outerKey, innerKey, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector">
          <span data-ttu-id="e7df3-438">
            <paramref name="selector" /> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-438">The type of the <paramref name="selector" />.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="e7df3-439">
            <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，可指定外部集引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-439">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="e7df3-440">
            <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，可指定內部集引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-440">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span>
          </span>
        </param>
        <param name="outerKey">
          <span data-ttu-id="e7df3-441">此方法可指定外部索引鍵值該如何自外部集合的項目衍生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-441">A method that specifies how the outer key value should be derived from an element of the outer set.</span>
          </span>
        </param>
        <param name="innerKey">
          <span data-ttu-id="e7df3-442">此方法可指定內部索引鍵值該如何自內部集合的項目衍生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-442">A method that specifies how the inner key value should be derived from an element of the inner set.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="e7df3-443">此方法指定結果集的項目該如何自內外部集合的項目衍生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-443">A method that specifies how an element of the result set should be derived from elements of the inner and outer sets.</span>
          </span>
          <span data-ttu-id="e7df3-444">此方法所產生的執行個體類型必須與聯結相容，且可解析為 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-444">This method must produce an instance of a type that is compatible with Join and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span>
          </span>
          <span data-ttu-id="e7df3-445">
            <c>TSelector</c> 的相容性需求詳述於＜備註＞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-445">Compatibility requirements for <c>TSelector</c> are described in remarks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-446">使用 InnerJoin 作為 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，建立新的 <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />，其會將指定的選擇器投射在內外部運算式所指定的集合，這裡的內外部運算式是依據指定內外部索引鍵間的相等條件而聯結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-446">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified selector over the sets specified by the outer and inner expressions, joined on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-447">新的 DbProjectExpression，將指定的選取器作為其投影，並將新的 DbJoinExpression 作為其輸入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-447">A new DbProjectExpression with the specified selector as its projection, and a new DbJoinExpression as its input.</span>
          </span>
          <span data-ttu-id="e7df3-448">輸入 DbJoinExpression 是透過 InnerJoin 的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 所建立，表示套用至聯結條件下左右方輸入集的內部聯結作業，其中該聯結條件會比較外部和內部索引鍵值是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-448">The input DbJoinExpression is created with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7df3-449">要與聯結相容`TSelector`必須衍生自<xref:System.Data.Common.CommandTrees.DbExpression>，或者必須是衍生自 DbExpression 之屬性的匿名型別。</span><span class="sxs-lookup"><span data-stu-id="e7df3-449">To be compatible with Join, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="e7df3-450">以下是支援的類型的範例`TSelector`:</span><span class="sxs-lookup"><span data-stu-id="e7df3-450">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => o.Property("Name"))  
```  
  
 <span data-ttu-id="e7df3-451">(`TSelector`是<xref:System.Data.Common.CommandTrees.DbPropertyExpression>)。</span><span class="sxs-lookup"><span data-stu-id="e7df3-451">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => new { OName = o.Property("Name"), IName = i.Property("Name") })  
```  
  
 <span data-ttu-id="e7df3-452">(`TSelector`具有衍生自 DbExpression 之屬性的匿名型別)。</span><span class="sxs-lookup"><span data-stu-id="e7df3-452">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-453">轉換至 DbExpression 後，<paramref name="selector" /> 的結果為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-453">The result of <paramref name="selector" /> is null after conversion to DbExpression.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-454">
            <paramref name="Selector" /> 的結果與 SelectMany 不相容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-454">The result of <paramref name="Selector" /> is not compatible with SelectMany.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Lambda">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-455">利用指定的內嵌 Lambda 函式實作與和型式參數建立 <see cref="T:System.Data.Common.CommandTrees.DbLambda" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-455">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, variables As IEnumerable(Of DbVariableReferenceExpression)) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Data.Common.CommandTrees.DbExpression * seq&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; -&gt; System.Data.Common.CommandTrees.DbLambda" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda (body, variables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="e7df3-456">定義 Lambda 函式邏輯的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-456">An expression that defines the logic of the Lambda function.</span>
          </span>
        </param>
        <param name="variables">
          <span data-ttu-id="e7df3-457">
            <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> 集合，表示傳遞給 Lambda 函式的型式參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-457">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span>
          </span>
          <span data-ttu-id="e7df3-458">在 <paramref name="body" /> 運算式中使用這些變數是有效的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-458">These variables are valid for use in the <paramref name="body" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-459">利用指定的內嵌 Lambda 函式實作與和型式參數建立 <see cref="T:System.Data.Common.CommandTrees.DbLambda" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-459">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-460">新的 DbLambda，描述具有指定的內文和型式參數的內嵌 Lambda 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-460">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-461">
            <paramref name="variables" /> 為 null 或包含 null，或是 <paramref name="body" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-461">
              <paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-462">
            <paramref name="variables" /> 包含一個以上具有相同的變數名稱的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-462">
              <paramref name="variables" /> contains more than one element with the same variable name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, params System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, ParamArray variables As DbVariableReferenceExpression()) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, ... cli::array &lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbVariableReferenceExpression[] -&gt; System.Data.Common.CommandTrees.DbLambda" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda (body, variables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="variables" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="e7df3-463">定義 Lambda 函式邏輯的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-463">An expression that defines the logic of the Lambda function.</span>
          </span>
        </param>
        <param name="variables">
          <span data-ttu-id="e7df3-464">
            <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> 集合，表示傳遞給 Lambda 函式的型式參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-464">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span>
          </span>
          <span data-ttu-id="e7df3-465">在 <paramref name="body" /> 運算式中使用這些變數是有效的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-465">These variables are valid for use in the <paramref name="body" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-466">利用指定的內嵌 Lambda 函式實作與和型式參數建立 <see cref="T:System.Data.Common.CommandTrees.DbLambda" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-466">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-467">新的 DbLambda，描述具有指定的內文和型式參數的內嵌 Lambda 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-467">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-468">
            <paramref name="variables" /> 為 null 或包含 null，或是 <paramref name="body" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-468">
              <paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-469">
            <paramref name="variables" /> 包含一個以上具有相同的變數名稱的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-469">
              <paramref name="variables" /> contains more than one element with the same variable name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LeftOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-470">使用 LeftOuterJoin 做為 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />，建立新的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，它會聯結由左右運算式針對指定的聯結條件所指定的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-470">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member LeftOuterJoin : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-471">
            <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，可指定左集合引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-471">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-472">
            <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，可指定右集合引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-472">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="e7df3-473">代表要聯結之條件的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-473">A method representing the condition on which to join.</span>
          </span>
          <span data-ttu-id="e7df3-474">這個方法必須產生包含布林值結果類型 (可提供聯結條件的邏輯) 的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-474">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-475">使用 LeftOuterJoin 做為 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />，建立新的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，它會聯結由左右運算式針對指定的聯結條件所指定的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-475">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-476">含有 LeftOuterJoin 之 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 的新 DbJoinExpression，表示套用至指定聯結條件下之左邊及右邊輸入集的左外部聯結作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-476">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-477">
            <paramref name="joinCondition" /> 所產生的運算式為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-477">The expression produced by <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-478">
            <paramref name="joinCondition" /> 所產生之運算式沒有布林值結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-478">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member LeftOuterJoin : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-479">
            <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />，指定左集合引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-479">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-480">
            <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />，指定右集合引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-480">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span>
          </span>
        </param>
        <param name="joinCondition">
          <span data-ttu-id="e7df3-481">運算式，指定要聯結的條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-481">An expression that specifies the condition on which to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-482">使用 LeftOuterJoin 做為 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />，建立新的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />，它會針對指定的聯結條件，聯結左右運算式繫結所指定的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-482">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-483">含有 LeftOuterJoin 之 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 的新 DbJoinExpression，表示套用至指定聯結條件下之左邊及右邊輸入集的左外部聯結作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-483">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right     input sets under the given join condition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-484">
            <paramref name="left" />、<paramref name="right" /> 或 <paramref name="joinCondition" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-484">
              <paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-485">
            <paramref name="joinCondition" /> 沒有布林結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-485">
              <paramref name="joinCondition" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member LessThan : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-486">指定左引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-486">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-487">指定右引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-487">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-488">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />，這個運算式會判斷左引數是否小於右引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-488">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-489">表示小於比較的新 DbComparisonExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-489">A new DbComparisonExpression representing the less-than comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-490">
            <paramref name="left" /> 或 <paramref name="right" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-490">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-491">
            <paramref name="left" /> 和 <paramref name="right" /> 之間沒有一般順序比較的結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-491">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member LessThanOrEqual : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-492">指定左引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-492">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-493">指定右引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-493">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-494">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />，這個運算式會判斷左引數是否小於或等於右引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-494">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than or equal to the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-495">表示小於或等於比較的新 DbComparisonExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-495">A new DbComparisonExpression representing the less-than-or-equal-to comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-496">
            <paramref name="left" /> 或 <paramref name="right" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-496">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-497">
            <paramref name="left" /> 和 <paramref name="right" /> 之間沒有相等比較和順序比較的一般結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-497">No common result type that is both equality- and order-comparable exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Like">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-498">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />，這個運算式會比較指定的輸入字串與指定的模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-498">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern);" />
      <MemberSignature Language="F#" Value="static member Like : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLikeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like (argument, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-499">指定輸入字串的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-499">An expression that specifies the input string.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="e7df3-500">指定模式比對字串的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-500">An expression that specifies the pattern string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-501">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />，這個運算式會比較指定的輸入字串與指定的模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-501">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-502">含有指定之輸入、模式及 Null 逸出的新 DbLikeExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-502">A new DbLikeExpression with the specified input, pattern and a null escape.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-503">
            <paramref name="Argument" /> 或 <paramref name="pattern" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-503">
              <paramref name="Argument" /> or <paramref name="pattern" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-504">
            <paramref name="Argument" /> 或 <paramref name="pattern" /> 沒有字串結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-504">
              <paramref name="Argument" /> or <paramref name="pattern" /> does not have a string result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern, System.Data.Common.CommandTrees.DbExpression escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern, class System.Data.Common.CommandTrees.DbExpression escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression, escape As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern, System::Data::Common::CommandTrees::DbExpression ^ escape);" />
      <MemberSignature Language="F#" Value="static member Like : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLikeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like (argument, pattern, escape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="escape" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-505">指定輸入字串的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-505">An expression that specifies the input string.</span>
          </span>
        </param>
        <param name="pattern">
          <span data-ttu-id="e7df3-506">指定模式比對字串的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-506">An expression that specifies the pattern string.</span>
          </span>
        </param>
        <param name="escape">
          <span data-ttu-id="e7df3-507">指定逸出字串的選擇性運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-507">An optional expression that specifies the escape string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-508">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />，它會藉由使用選擇性的逸出字串，比較指定的輸入字串與給定的模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-508">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern using the optional escape.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-509">含有指定之輸入、模式及逸出的新 DbLikeExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-509">A new DbLikeExpression with the specified input, pattern and escape.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-510">
            <paramref name="argument" />、<paramref name="pattern" /> 或 <paramref name="escape" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-510">
              <paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-511">
            <paramref name="argument" />、<paramref name="pattern" /> 或 <paramref name="escape" /> 沒有字串結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-511">
              <paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> does not have a string result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Limit">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Limit (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Limit(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Limit (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Limit(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Limit : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLimitExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit (argument, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-512">指定輸入集合的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-512">An expression that specifies the input collection.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e7df3-513">指定限制值的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-513">An expression that specifies the limit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-514">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />，它會將 Argument 集合中的項目數目限制為指定的計數限制值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-514">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span>
          </span>
          <span data-ttu-id="e7df3-515">輸出中不包含繫結結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-515">Tied results are not included in the output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-516">含有指定之引數及計數限制值但不含繫結結果的新 DbLimitExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-516">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-517">
            <paramref name="argument" /> 或 <paramref name="count" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-517">
              <paramref name="argument" /> or <paramref name="count" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-518">
            <paramref name="argument" /> 沒有集合結果型別，或者 <paramref name="count" /> 並沒有等於或可提升至 64 位元整數型別的結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-518">
              <paramref name="argument" /> does not have a collection result type, or <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Minus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Minus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Minus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Minus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Minus : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-519">指定左引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-519">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-520">指定右引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-520">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-521">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />，這個運算式會從左引數減去右引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-521">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that subtracts the right argument from the left argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-522">表示減法運算的新 DbArithmeticExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-522">A new DbArithmeticExpression representing the subtraction operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-523">
            <paramref name="left" /> 或 <paramref name="right" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-523">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-524">在 <paramref name="left" /> 和  <paramref name="right" /> 之間，不存在一般數字結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-524">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Modulo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Modulo (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Modulo(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Modulo (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Modulo(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Modulo : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-525">指定左引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-525">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-526">指定右引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-526">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-527">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />，這個運算式會計算左引數除以右引數的餘數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-527">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that computes the remainder of the left argument divided by the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-528">表示模數運算的新 DbArithmeticExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-528">A new DbArithmeticExpression representing the modulo operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-529">
            <paramref name="left" /> 或 <paramref name="right" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-529">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-530">在 <paramref name="left" /> 和  <paramref name="right" /> 之間，不存在一般數字結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-530">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Multiply (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Multiply(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Multiply (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Multiply(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-531">指定左引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-531">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-532">指定右引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-532">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-533">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />，這個運算式會將左引數乘以右引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-533">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that multiplies the left argument by the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-534">表示乘法運算的新 DbArithmeticExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-534">A new DbArithmeticExpression representing the multiplication operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-535">
            <paramref name="left" /> 或 <paramref name="right" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-535">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-536">在 <paramref name="left" /> 和  <paramref name="right" /> 之間，不存在一般數字結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-536">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-537">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />，表示複合或關聯性 (Association Relationship) 的巡覽。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-537">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Common.CommandTrees.DbExpression navigateFrom, System.Data.Metadata.Edm.RelationshipEndMember fromEnd, System.Data.Metadata.Edm.RelationshipEndMember toEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Common.CommandTrees.DbExpression navigateFrom, class System.Data.Metadata.Edm.RelationshipEndMember fromEnd, class System.Data.Metadata.Edm.RelationshipEndMember toEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (navigateFrom As DbExpression, fromEnd As RelationshipEndMember, toEnd As RelationshipEndMember) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Common::CommandTrees::DbExpression ^ navigateFrom, System::Data::Metadata::Edm::RelationshipEndMember ^ fromEnd, System::Data::Metadata::Edm::RelationshipEndMember ^ toEnd);" />
      <MemberSignature Language="F#" Value="static member Navigate : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.RelationshipEndMember * System.Data.Metadata.Edm.RelationshipEndMember -&gt; System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate (navigateFrom, fromEnd, toEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="fromEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
        <Parameter Name="toEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
      </Parameters>
      <Docs>
        <param name="navigateFrom">
          <span data-ttu-id="e7df3-538">運算式，指定要對其進行巡覽的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-538">An expression that specifies the instance from which navigation should occur.</span>
          </span>
        </param>
        <param name="fromEnd">
          <span data-ttu-id="e7df3-539">屬性的中繼資料，此屬性代表應該由此發生巡覽的關聯性結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-539">Metadata for the property that represents the end of the relationship from which navigation should occur.</span>
          </span>
        </param>
        <param name="toEnd">
          <span data-ttu-id="e7df3-540">屬性的中繼資料，此屬性代表應該在此發生巡覽的關聯性結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-540">Metadata for the property that represents the end of the relationship to which navigation should occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-541">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />，表示複合或關聯性 (Association Relationship) 的巡覽。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-541">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-542">新的 DbRelationshipNavigationExpression，表示與指定巡覽來源執行個體間指定之關聯類型的指定往返關聯性端巡覽。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-542">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7df3-543"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> 需要，一律在此發生巡覽的參考，因此`navigateFrom`一律必須參考結果型別。</span><span class="sxs-lookup"><span data-stu-id="e7df3-543"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-544">
            <paramref name="fromEnd" />、<paramref name="toEnd" /> 或 <paramref name="navigateFrom" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-544">
              <paramref name="fromEnd" />,  <paramref name="toEnd" /> or <paramref name="navigateFrom" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-545">
            <paramref name="fromEnd" /> 和 <paramref name="toEnd" /> 不是由相同的關聯性類型宣告，或者 <paramref name="navigateFrom" /> 具有不與屬性類型 <paramref name="fromEnd" /> 相容的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-545">
              <paramref name="fromEnd" /> and <paramref name="toEnd" /> are not declared by the same relationship type, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of <paramref name="fromEnd" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, System.Data.Common.CommandTrees.DbExpression navigateFrom);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, class System.Data.Common.CommandTrees.DbExpression navigateFrom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (type As RelationshipType, fromEndName As String, toEndName As String, navigateFrom As DbExpression) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Metadata::Edm::RelationshipType ^ type, System::String ^ fromEndName, System::String ^ toEndName, System::Data::Common::CommandTrees::DbExpression ^ navigateFrom);" />
      <MemberSignature Language="F#" Value="static member Navigate : System.Data.Metadata.Edm.RelationshipType * string * string * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate (type, fromEndName, toEndName, navigateFrom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.RelationshipType" RefType="this" />
        <Parameter Name="fromEndName" Type="System.String" />
        <Parameter Name="toEndName" Type="System.String" />
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="e7df3-546">表示關聯性之關聯型別的中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-546">Metadata for the relation type that represents the relationship.</span>
          </span>
        </param>
        <param name="fromEndName">
          <span data-ttu-id="e7df3-547">關聯型別（其代表應該由此發生巡覽的關聯性結尾）的屬性的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-547">The name of the property of the relation type that represents the end of the relationship from which navigation should occur.</span>
          </span>
        </param>
        <param name="toEndName">
          <span data-ttu-id="e7df3-548">關聯型別（其代表應該在此發生巡覽的關聯性結尾）的屬性的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-548">The name of the property of the relation type that represents the end of the relationship to which navigation should occur.</span>
          </span>
        </param>
        <param name="navigateFrom">
          <span data-ttu-id="e7df3-549">運算式，指定要對其進行巡覽的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-549">An expression the specifies the instance from which naviagtion should occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-550">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />，表示複合或關聯性 (Association Relationship) 的巡覽。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-550">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-551">新的 DbRelationshipNavigationExpression，表示與指定巡覽來源執行個體間指定之關聯類型的指定往返關聯性端巡覽。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-551">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7df3-552"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> 需要，一律在此發生巡覽的參考，因此`navigateFrom`一律必須參考結果型別。</span><span class="sxs-lookup"><span data-stu-id="e7df3-552"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-553">
            <paramref name="type" />、<paramref name="fromEndName" />、<paramref name="toEndName" /> 或 <paramref name="navigateFrom" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-553">
              <paramref name="type" />,  <paramref name="fromEndName" />,  <paramref name="toEndName" /> or <paramref name="navigateFrom" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-554">
            <paramref name="type" /> 不與此命令樹狀目錄的中繼資料工作區相關聯，或者 <paramref name="navigateFrom" /> 與不同的命令樹狀目錄相關聯，或者 <paramref name="type" /> 未宣告名稱為 <paramref name="toEndName" /> 或 <paramref name="fromEndName" /> 的關聯性端屬性，或者 <paramref name="navigateFrom" /> 有不與名稱為 <paramref name="fromEndName" /> 的關聯性端屬性的屬性類型相容的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-554">
              <paramref name="type" /> is not associated with this command tree's metadata workspace or <paramref name="navigateFrom" /> is associated with a different command tree, or <paramref name="type" /> does not declare a relation end property with name <paramref name="toEndName" /> or <paramref name="fromEndName" />, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of the relation end property with name <paramref name="fromEndName" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Negate (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Negate(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Negate (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Negate(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Negate : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-555">指定引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-555">An expression that specifies the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-556">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />，這個運算式會將引數值變成相反值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-556">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-557">表示否定運算的新 DbArithmeticExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-557">A new DbArithmeticExpression representing the negation operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-558">
            <paramref name="argument" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-558">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-559">
            <paramref name="argument" /> 沒有數字結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-559">No numeric result type exists for <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="New">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-560">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-560">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, arguments As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member New : System.Data.Metadata.Edm.TypeUsage * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New (instanceType, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="instanceType">
          <span data-ttu-id="e7df3-561">新執行個體的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-561">The type of the new instance.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="e7df3-562">根據執行個體型別進行解譯以指定新執行個體值的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-562">Expressions that specify values of the new instances, interpreted according to the instance's type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-563">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-563">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          </span>
          <span data-ttu-id="e7df3-564">如果型別引數是集合型別，則這些引數會用於指定集合的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-564">If the type argument is a collection type, the arguments specify the elements of the collection.</span>
          </span>
          <span data-ttu-id="e7df3-565">否則，這些引數會用來做為新執行個體中的屬性或資料行值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-565">Otherwise the arguments are used as property or column values in the new instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-566">含有指定之型別及引數的新 DbNewInstanceExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-566">A new DbNewInstanceExpression with the specified type and arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7df3-567">如果`instanceType`是集合型別，則在每個運算式`arguments`型別能提升至的項目類型的結果類型必須`instanceType`。</span><span class="sxs-lookup"><span data-stu-id="e7df3-567">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="e7df3-568">如果`instanceType`是資料列型別，`arguments`必須包含多個運算式，因為資料列型別中有資料行，每個運算式的結果類型必須等於或可提升到對應的資料行的類型。</span><span class="sxs-lookup"><span data-stu-id="e7df3-568">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="e7df3-569">未宣告任何資料行資料列型別無效。</span><span class="sxs-lookup"><span data-stu-id="e7df3-569">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="e7df3-570">如果`instanceType`是實體類型，`arguments`必須包含相同的許多運算式有類型，所定義的屬性，以及每個運算式的結果類型必須等於或可提升到對應屬性的型別。</span><span class="sxs-lookup"><span data-stu-id="e7df3-570">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-571">
            <paramref name="instanceType" /> 或 <paramref name="arguments" /> 為 null，或是 <paramref name="arguments" /> 包含 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-571">
              <paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-572">
            <paramref name="arguments" /> 是空的或內含的運算式的結果類型不符合 <paramref name="instanceType" /> 的需求 (如＜備註＞一節中所說明)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-572">
              <paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, ParamArray arguments As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member New : System.Data.Metadata.Edm.TypeUsage * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New (instanceType, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instanceType">
          <span data-ttu-id="e7df3-573">新執行個體的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-573">The type of the new instance.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="e7df3-574">根據執行個體型別進行解譯以指定新執行個體值的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-574">Expressions that specify values of the new instances, interpreted according to the instance's type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-575">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-575">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span>
          </span>
          <span data-ttu-id="e7df3-576">如果型別引數是集合型別，則這些引數會用於指定集合的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-576">If the type argument is a collection type, the arguments specify the elements of the collection.</span>
          </span>
          <span data-ttu-id="e7df3-577">否則，這些引數會用來做為新執行個體中的屬性或資料行值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-577">Otherwise the arguments are used as property or column values in the new instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-578">含有指定之型別及引數的新 DbNewInstanceExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-578">A new DbNewInstanceExpression with the specified type and arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7df3-579">如果`instanceType`是集合型別，則在每個運算式`arguments`型別能提升至的項目類型的結果類型必須`instanceType`。</span><span class="sxs-lookup"><span data-stu-id="e7df3-579">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="e7df3-580">如果`instanceType`是資料列型別，`arguments`必須包含多個運算式，因為資料列型別中有資料行，每個運算式的結果類型必須等於或可提升到對應的資料行的類型。</span><span class="sxs-lookup"><span data-stu-id="e7df3-580">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="e7df3-581">未宣告任何資料行資料列型別無效。</span><span class="sxs-lookup"><span data-stu-id="e7df3-581">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="e7df3-582">如果`instanceType`是實體類型，`arguments`必須包含相同的許多運算式有類型，所定義的屬性，以及每個運算式的結果類型必須等於或可提升到對應屬性的型別。</span><span class="sxs-lookup"><span data-stu-id="e7df3-582">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-583">
            <paramref name="instanceType" /> 或 <paramref name="arguments" /> 為 null，或是 <paramref name="arguments" /> 包含 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-583">
              <paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-584">
            <paramref name="arguments" /> 是空的或內含的運算式的結果類型不符合 <paramref name="instanceType" /> 的需求 (如＜備註＞一節中所說明)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-584">
              <paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NewCollection">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-585">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />，它會建構包含指定項目的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-585">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (elements As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberSignature Language="F#" Value="static member NewCollection : seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection elements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="elements">
          <span data-ttu-id="e7df3-586">提供集合項目的運算式清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-586">A list of expressions that provide the elements of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-587">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />，它會建構包含指定項目的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-587">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span>
          </span>
          <span data-ttu-id="e7df3-588">集合的型別是以項目的一般型別為基礎。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-588">The type of the collection is based on the common type of the elements.</span>
          </span>
          <span data-ttu-id="e7df3-589">如果沒有一般項目型別存在，就會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-589">If no common element type exists an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-590">含有指定之集合型別及引數的新 DbNewInstanceExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-590">A new DbNewInstanceExpression with the specified collection type and arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-591">
            <paramref name="elements" /> 為 null，或是包含 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-591">
              <paramref name="elements" /> is null, or contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-592">
            <paramref name="elements" /> 是空的或包含的運算式不存在一般的結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-592">
              <paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (params System.Data.Common.CommandTrees.DbExpression[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Data.Common.CommandTrees.DbExpression[] elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (ParamArray elements As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberSignature Language="F#" Value="static member NewCollection : System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection elements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Data.Common.CommandTrees.DbExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elements">
          <span data-ttu-id="e7df3-593">提供集合項目的運算式清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-593">A list of expressions that provide the elements of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-594">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />，它會建構包含指定項目的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-594">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span>
          </span>
          <span data-ttu-id="e7df3-595">集合的型別是以項目的一般型別為基礎。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-595">The type of the collection is based on the common type of the elements.</span>
          </span>
          <span data-ttu-id="e7df3-596">如果沒有一般項目型別存在，就會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-596">If no common element type exists an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-597">含有指定之集合型別及引數的新 DbNewInstanceExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-597">A new DbNewInstanceExpression with the specified collection type and arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-598">
            <paramref name="elements" /> 為 null，或是包含 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-598">
              <paramref name="elements" /> is null, or contains null..</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-599">
            <paramref name="elements" /> 是空的或包含的運算式不存在一般的結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-599">
              <paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewEmptyCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection (this System.Data.Metadata.Edm.TypeUsage collectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection(class System.Data.Metadata.Edm.TypeUsage collectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NewEmptyCollection (collectionType As TypeUsage) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewEmptyCollection(System::Data::Metadata::Edm::TypeUsage ^ collectionType);" />
      <MemberSignature Language="F#" Value="static member NewEmptyCollection : System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection collectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collectionType">
          <span data-ttu-id="e7df3-600">要建立之集合的型別中繼資料</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-600">The type metadata for the collection to create</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-601">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />，這個運算式會建構指定集合型別的空集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-601">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs an empty collection of the specified collection type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-602">含有指定之集合類型及空白 <paramref name="Arguments" /> 清單的新 DbNewInstanceExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-602">A new DbNewInstanceExpression with the specified collection type and an empty <paramref name="Arguments" /> list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-603">
            <paramref name="collectionType" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-603">
              <paramref name="collectionType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-604">
            <paramref name="collectionType" /> 不是集合型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-604">
              <paramref name="collectionType" /> is not a collection type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewRow">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewRow (columnValues As IEnumerable(Of KeyValuePair(Of String, DbExpression))) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewRow(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ columnValues);" />
      <MemberSignature Language="F#" Value="static member NewRow : seq&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow columnValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnValues" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="columnValues">
          <span data-ttu-id="e7df3-605">string-DbExpression 索引鍵值組清單，用於定義資料列的結構和值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-605">A list of string-DbExpression key-value pairs that defines the structure and values of the row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-606">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />，這個運算式會使用指定的具名資料行和給定值產生資料列 (如運算式所指定)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-606">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that produces a row with the specified named columns and the given values, specified as expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-607">表示資料列建構的新 DbNewInstanceExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-607">A new DbNewInstanceExpression that represents the construction of the row.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-608">
            <paramref name="columnValues" /> 為 null 或包含擁有 null 資料行名稱或運算式的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-608">
              <paramref name="columnValues" /> is null or contains an element with a null column name or expression.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-609">
            <paramref name="columnValues" /> 是空的或包含重複或無效的資料行名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-609">
              <paramref name="columnValues" /> is empty, or contains a duplicate or invalid column name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNotExpression Not (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNotExpression Not(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Not (argument As DbExpression) As DbNotExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNotExpression ^ Not(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Not : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbNotExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNotExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-610">指定引數的布林運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-610">A Boolean expression that specifies the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-611">建立 <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />，這個運算式會執行給定引數的邏輯負運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-611">Creates a <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> that performs the logical negation of the given argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-612">含有指定之引數的新 DbNotExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-612">A new DbNotExpression with the specified argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-613">
            <paramref name="argument" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-613">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-614">
            <paramref name="argument" /> 沒有布林結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-614">
              <paramref name="argument" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NotEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression NotEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression NotEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NotEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ NotEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member NotEqual : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-615">指定左引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-615">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-616">指定右引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-616">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-617">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />，這個運算式會比較左引數和右引數是否不相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-617">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for inequality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-618">表示不等比較的新 DbComparisonExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-618">A new DbComparisonExpression representing the inequality comparison.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-619">
            <paramref name="left" /> 或 <paramref name="right" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-619">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-620">
            <paramref name="left" /> 和 <paramref name="right" /> 之間沒有相等比較的結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-620">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNullExpression Null (this System.Data.Metadata.Edm.TypeUsage nullType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNullExpression Null(class System.Data.Metadata.Edm.TypeUsage nullType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Null (nullType As TypeUsage) As DbNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNullExpression ^ Null(System::Data::Metadata::Edm::TypeUsage ^ nullType);" />
      <MemberSignature Language="F#" Value="static member Null : System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbNullExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null nullType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nullType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
      </Parameters>
      <Docs>
        <param name="nullType">
          <span data-ttu-id="e7df3-621">null 值的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-621">The type of the null value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-622">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />，這個運算式表示具型別的 null 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-622">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, which represents a typed null value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-623">DbNullExpression 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-623">An instance of DbNullExpression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-624">
            <paramref name="nullType" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-624">
              <paramref name="nullType" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OfType">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfType (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfType(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfType (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfType(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member OfType : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbOfTypeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-625">指定輸入集的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-625">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="e7df3-626">型別中繼資料，輸入集項目必須具有該型別，才能包含在結果集內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-626">Type metadata for the type that elements of the input set must have to be included in the resulting set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-627">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />，它會從指定輸入集，產生具有指定型別的項目集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-627">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-628">含有指定之集合引數和型別以及 <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" /> 之 ExpressionKind 的新 DbOfTypeExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-628">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7df3-629">DbOfTypeExpression 要求`argument`具有集合結果型別多型的項目型別，而且與`type`屬於相同的型別階層架構，與該元素類型的類型。</span><span class="sxs-lookup"><span data-stu-id="e7df3-629">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-630">
            <paramref name="argument" /> 或 <paramref name="type" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-630">
              <paramref name="argument" /> or <paramref name="type" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-631">
            <paramref name="argument" /> 沒有集合結果類型，或者 <paramref name="type" /> 不是做為 <paramref name="argument" /> 集合結果類型之項目類型的相同類型階層架構中的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-631">
              <paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OfTypeOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfTypeOnly (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfTypeOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member OfTypeOnly : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbOfTypeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-632">指定輸入集的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-632">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="e7df3-633">型別中繼資料，輸入集項目必須完全符合該型別，才能包含在結果集內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-633">Type metadata for the type that elements of the input set must match exactly to be included in the resulting set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-634">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />，它會從指定輸入集，產生剛好具有指定型別的項目集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-634">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of exactly the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-635">含有指定之集合引數和型別以及 <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" /> 之 ExpressionKind 的新 DbOfTypeExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-635">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7df3-636">DbOfTypeExpression 要求`argument`具有集合結果型別多型的項目型別，而且與`type`屬於相同的型別階層架構，與該元素類型的類型。</span><span class="sxs-lookup"><span data-stu-id="e7df3-636">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-637">
            <paramref name="argument" /> 或 <paramref name="type" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-637">
              <paramref name="argument" /> or <paramref name="type" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-638">
            <paramref name="argument" /> 沒有集合結果類型，或者 <paramref name="type" /> 不是做為 <paramref name="argument" /> 集合結果類型之項目類型的相同類型階層架構中的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-638">
              <paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOrExpression Or (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOrExpression Or(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Or (left As DbExpression, right As DbExpression) As DbOrExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOrExpression ^ Or(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Or : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbOrExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOrExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-639">指定左引數的布林運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-639">A Boolean expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-640">指定右引數的布林運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-640">A Boolean expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-641">建立 <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" />，它會對左右引數執行邏輯 Or 運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-641">Creates an <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> that performs the logical Or of the left and right arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-642">含有指定之引數的新 DbOrExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-642">A new DbOrExpression with the specified arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-643">
            <paramref name="left" /> 或 <paramref name="right" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-643">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-644">
            <paramref name="left" /> 或 <paramref name="right" /> 沒有布林結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-644">
              <paramref name="left" /> or <paramref name="right" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-645">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，它會依據指定的排序索引鍵，搭配遞增排序次序和預設定序 (Collation)，排序給定的輸入集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-645">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="e7df3-646">指定輸入集的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-646">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="e7df3-647">方法，指定如何根據輸入集成員來衍生排序索引鍵運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-647">A method that specifies how to derive the sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="e7df3-648">這個方法必須產生具有可比較順序之結果型別的運算式，這個字串結果型別會提供排序索引鍵定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-648">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-649">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，它會依據指定的排序索引鍵，搭配遞增排序次序和預設定序 (Collation)，排序給定的輸入集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-649">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-650">新 DbSortExpression，表示 order-by 作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-650">A new DbSortExpression that represents the order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-651">
            <paramref name="sortKey" /> 所產生的運算式為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-651">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-652">
            <paramref name="sortKey" /> 所產生的運算式沒有可比較順序結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-652">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="e7df3-653">指定輸入集的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-653">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="e7df3-654">方法，指定如何根據輸入集成員來衍生排序索引鍵運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-654">A method that specifies how to derive the sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="e7df3-655">這個方法必須產生具有可比較順序之結果型別的運算式，這個字串結果型別會提供排序索引鍵定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-655">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="e7df3-656">要做為排序依據的定序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-656">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-657">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，它會依據指定的排序索引鍵，搭配遞增排序次序和指定的定序 (Collation)，排序給定的輸入集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-657">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-658">新 DbSortExpression，表示 order-by 作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-658">A new DbSortExpression that represents the order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-659">
            <paramref name="sortKey" /> 所產生的運算式為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-659">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-660">
            <paramref name="sortKey" /> 所產生的運算式沒有可比較順序字串結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-660">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7df3-661">
            <paramref name="collation" /> 是空的或僅包含空白字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-661">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-662">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，它會依據指定的排序索引鍵，搭配遞減排序次序和預設定序 (Collation)，排序給定的輸入集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-662">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="e7df3-663">指定輸入集的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-663">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="e7df3-664">方法，指定如何根據輸入集成員來衍生排序索引鍵運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-664">A method that specifies how to derive the sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="e7df3-665">這個方法必須產生具有可比較順序之結果型別的運算式，這個字串結果型別會提供排序索引鍵定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-665">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-666">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，它會依據指定的排序索引鍵，搭配遞減排序次序和預設定序 (Collation)，排序給定的輸入集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-666">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-667">新 DbSortExpression，表示 order-by 作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-667">A new DbSortExpression that represents the order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-668">
            <paramref name="sortKey" /> 所產生的運算式為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-668">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-669">
            <paramref name="sortKey" /> 所產生的運算式沒有可比較順序結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-669">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="e7df3-670">指定輸入集的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-670">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="e7df3-671">方法，指定如何根據輸入集成員來衍生排序索引鍵運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-671">A method that specifies how to derive the sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="e7df3-672">這個方法必須產生具有可比較順序之結果型別的運算式，這個字串結果型別會提供排序索引鍵定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-672">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="e7df3-673">要做為排序依據的定序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-673">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-674">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，它會依據指定的排序索引鍵，搭配遞減排序次序和指定的定序 (Collation)，排序給定的輸入集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-674">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-675">新 DbSortExpression，表示 order-by 作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-675">A new DbSortExpression that represents the order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-676">
            <paramref name="sortKey" /> 所產生的運算式為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-676">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-677">
            <paramref name="sortKey" /> 所產生的運算式沒有可比較順序字串結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-677">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7df3-678">
            <paramref name="collation" /> 是空的或僅包含空白字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-678">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OuterApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-679">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />，這個運算式會針對給定輸入集的每個項目，評估給定的 <paramref name="apply" /> 運算式一次，產生具有對應的輸入和適用資料行的資料列集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-679">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberSignature Language="F#" Value="static member OuterApply : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply (source, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="e7df3-680">指定輸入集的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-680">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="e7df3-681">方法，指定要針對輸入集中每個成員進行一次評估的邏輯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-681">A method that specifies the logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-682">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />，這個運算式會針對給定輸入集的每個項目，評估給定的 <paramref name="apply" /> 運算式一次，產生具有對應的輸入和適用資料行的資料列集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-682">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="e7df3-683">
            <paramref name="apply" /> 評估為空集合的資料列，其 apply 資料行值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-683">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-684">具有指定之輸入及套用繫結與 OuterApply 之 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 的新 DbApplyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-684">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-685">
            <paramref name="apply" /> 的結果包含為 null 的名稱或運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-685">The result of <paramref name="apply" /> contains a name or expression that is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-686">
            <paramref name="apply" /> 的結果包含在運算式繫結中為無效的名稱或運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-686">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberSignature Language="F#" Value="static member OuterApply : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply (input, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e7df3-687">指定輸入集的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-687">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="e7df3-688">
            <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />，指定要針對輸入集中每個成員進行一次評估的邏輯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-688">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-689">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />，這個運算式會針對給定輸入集的每個項目，評估給定的 <paramref name="apply" /> 運算式一次，產生具有對應的輸入和適用資料行的資料列集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-689">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="e7df3-690">
            <paramref name="apply" /> 評估為空集合的資料列，其 apply 資料行值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-690">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-691">具有指定之輸入及套用繫結與 OuterApply 之 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 的新 DbApplyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-691">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-692">
            <paramref name="input" /> 或 <paramref name="apply" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-692">
              <paramref name="input" /> or <paramref name="apply" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Parameter (type As TypeUsage, name As String) As DbParameterReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbParameterReferenceExpression ^ Parameter(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member Parameter : System.Data.Metadata.Edm.TypeUsage * string -&gt; System.Data.Common.CommandTrees.DbParameterReferenceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbParameterReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="e7df3-693">所參考參數的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-693">The type of the referenced parameter.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="e7df3-694">參考參數的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-694">The name of the referenced parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-695">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />，這個運算式會使用指定的名稱和型別，參考參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-695">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> that references a parameter with the specified name and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-696">DbParameterReferenceExpression，表示具有指定名稱及型別之參數的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-696">A DbParameterReferenceExpression that represents a reference to a parameter with the specified name and type.</span>
          </span>
          <span data-ttu-id="e7df3-697">運算式的結果類型與 <paramref name="type" /> 相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-697">The result type of the expression will be the same as <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Plus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Plus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Plus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Plus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Plus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Plus : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-698">指定左引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-698">An expression that specifies the left argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-699">指定右引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-699">An expression that specifies the right argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-700">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />，這個運算式會將左引數加入右引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-700">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that adds the left argument to the right argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-701">表示其他作業的新 DbArithmeticExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-701">A new DbArithmeticExpression representing the addition operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-702">
            <paramref name="left" /> 或 <paramref name="right" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-702">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-703">在 <paramref name="left" /> 和  <paramref name="right" /> 之間，不存在一般數字結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-703">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Project (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Project(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Project (input As DbExpressionBinding, projection As DbExpression) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Project(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ projection);" />
      <MemberSignature Language="F#" Value="static member Project : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project (input, projection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="projection" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e7df3-704">指定輸入集的運算式繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-704">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="projection">
          <span data-ttu-id="e7df3-705">要對集合投影的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-705">An expression to project over the set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-706">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />，這個運算式會對給定的輸入集，投影指定的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-706">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified expression over the given input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-707">表示投影作業的新 DbProjectExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-707">A new DbProjectExpression that represents the projection operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-708">
            <paramref name="input" /> 或 <paramref name="projection" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-708">
              <paramref name="input" /> or <paramref name="projection" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Property">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-709">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />，表示要擷取指定的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-709">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.EdmProperty propertyMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.EdmProperty propertyMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyMetadata As EdmProperty) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::EdmProperty ^ propertyMetadata);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.EdmProperty -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, propertyMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="propertyMetadata" Type="System.Data.Metadata.Edm.EdmProperty" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="e7df3-710">要從其中擷取屬性的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-710">The instance from which to retrieve the property.</span>
          </span>
          <span data-ttu-id="e7df3-711">如果屬性為靜態，可能是 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-711">May be null if the property is static.</span>
          </span>
        </param>
        <param name="propertyMetadata">
          <span data-ttu-id="e7df3-712">要擷取的屬性中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-712">Metadata for the property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-713">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />，表示要擷取指定的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-713">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-714">表示屬性擷取的新 DbPropertyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-714">A new DbPropertyExpression representing the property retrieval.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-715">
            <paramref name="propertyMetadata" /> 是 null 或 <paramref name="instance" /> 是 null，且屬性不是靜態的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-715">
              <paramref name="propertyMetadata" /> is null or <paramref name="instance" /> is null and the property is not static.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.NavigationProperty navigationProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.NavigationProperty navigationProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::NavigationProperty ^ navigationProperty);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.NavigationProperty -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, navigationProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="navigationProperty" Type="System.Data.Metadata.Edm.NavigationProperty" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="e7df3-716">要從其中擷取巡覽屬性的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-716">The instance from which to retrieve the navigation property.</span>
          </span>
        </param>
        <param name="navigationProperty">
          <span data-ttu-id="e7df3-717">要擷取的巡覽屬性中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-717">Metadata for the navigation property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-718">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />，表示要擷取指定的巡覽屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-718">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified navigation property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-719">表示巡覽屬性擷取的新 DbPropertyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-719">A new DbPropertyExpression representing the navigation property retrieval.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-720">
            <paramref name="navigationProperty" /> 或 <paramref name="instance" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-720">
              <paramref name="navigationProperty" /> or <paramref name="instance" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, relationshipEnd As RelationshipEndMember) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::RelationshipEndMember ^ relationshipEnd);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.RelationshipEndMember -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, relationshipEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="relationshipEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="e7df3-721">要從其中擷取關聯性端成員的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-721">The instance from which to retrieve the relationship end member.</span>
          </span>
        </param>
        <param name="relationshipEnd">
          <span data-ttu-id="e7df3-722">要擷取的關聯性端成員中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-722">Metadata for the relationship end member to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-723">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />，表示要擷取指定的關聯終端成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-723">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified relationship end member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-724">表示關聯終端成員擷取的新 DbPropertyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-724">A new DbPropertyExpression representing the relationship end member retrieval.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-725">
            <paramref name="relationshipEnd" /> 是 null 或 <paramref name="instance" /> 是 null，且屬性不是靜態的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-725">
              <paramref name="relationshipEnd" /> is null or <paramref name="instance" /> is null and the property is not static.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyName As String) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="e7df3-726">要從其中擷取屬性的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-726">The instance from which to retrieve the property.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="e7df3-727">要擷取的屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-727">The name of the property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-728">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />，表示要從給定的執行個體中，擷取具有指定名稱的執行個體屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-728">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the instance property with the specified name from the given instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-729">表示屬性擷取的新 DbPropertyExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-729">A new DbPropertyExpression that represents the property retrieval.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-730">
            <paramref name="propertyName" /> 是 null 或 <paramref name="instance" /> 是 null，且屬性不是靜態的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-730">
              <paramref name="propertyName" /> is null or <paramref name="instance" /> is null and the property is not static.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7df3-731">
            <paramref name="instance" /> 型別未宣告任何含有指定名稱的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-731">No property with the specified name is declared by the type of <paramref name="instance" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RefFromKey">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-732">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />，其會根據索引鍵值編碼指定的實體的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-732">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow);" />
      <MemberSignature Language="F#" Value="static member RefFromKey : System.Data.Metadata.Edm.EntitySet * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey (entitySet, keyRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="e7df3-733">受參考之項目位在其中的實體集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-733">The Entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="keyRow">
          <span data-ttu-id="e7df3-734">
            <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，其所建構之資料錄的資料行，必須 (在數目、型別和順序方面) 符合參考之 Entity 型別的 Key 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-734">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-735">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />，其會根據索引鍵值編碼指定的實體的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-735">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-736">以指定實體集內指定之索引鍵值參考項目的新 DbRefExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-736">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7df3-737">`keyRow` 應該是集合的運算式，指定識別受參考的實體內指定之實體的索引鍵值。</span><span class="sxs-lookup"><span data-stu-id="e7df3-737">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="e7df3-738">結果型別`keyRow`應該包含對應的資料行所定義的每個索引鍵屬性`entitySet's`實體類型。</span><span class="sxs-lookup"><span data-stu-id="e7df3-738">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-739">
            <paramref name="entitySet" /> 或 <paramref name="keyRow" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-739">
              <paramref name="entitySet" /> or <paramref name="keyRow" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-740">
            <paramref name="keyRow" /> 沒有記錄結果類型符合所參考實體集實體類型的索引鍵屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-740">
              <paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow, System.Data.Metadata.Edm.EntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow, class System.Data.Metadata.Edm.EntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow, System::Data::Metadata::Edm::EntityType ^ entityType);" />
      <MemberSignature Language="F#" Value="static member RefFromKey : System.Data.Metadata.Edm.EntitySet * System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.EntityType -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey (entitySet, keyRow, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="e7df3-741">受參考之項目位在其中的實體集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-741">The Entity set in which the referenced element resides.</span>
          </span>
        </param>
        <param name="keyRow">
          <span data-ttu-id="e7df3-742">
            <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，其所建構之資料錄的資料行，必須 (在數目、型別和順序方面) 符合參考之 Entity 型別的 Key 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-742">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span>
          </span>
        </param>
        <param name="entityType">
          <span data-ttu-id="e7df3-743">參考應該參考的實體的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-743">The type of the Entity that the reference should refer to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-744">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />，其會根據索引鍵值編碼指定的實體的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-744">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-745">以指定實體集內指定之索引鍵值參考項目的新 DbRefExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-745">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7df3-746">`keyRow` 應該是集合的運算式，指定識別受參考的實體內指定之實體的索引鍵值。</span><span class="sxs-lookup"><span data-stu-id="e7df3-746">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="e7df3-747">結果型別`keyRow`應該包含對應的資料行所定義的每個索引鍵屬性`entitySet's`實體類型。</span><span class="sxs-lookup"><span data-stu-id="e7df3-747">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-748">
            <paramref name="entitySet" />、<paramref name="keyRow" /> 或 <paramref name="entityType" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-748">
              <paramref name="entitySet" />,  <paramref name="keyRow" /> or <paramref name="entityType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-749">
            <paramref name="entityType" /> 與實體集的實體類型不在相同的類型階層架構，或是 <paramref name="keyRow" /> 沒有符合所參考實體集之實體類型的索引鍵屬性的資料錄結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-749">
              <paramref name="entityType" /> is not in the same type hierarchy as the entity set's entity type, or <paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Scan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbScanExpression Scan (this System.Data.Metadata.Edm.EntitySetBase targetSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbScanExpression Scan(class System.Data.Metadata.Edm.EntitySetBase targetSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Scan (targetSet As EntitySetBase) As DbScanExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbScanExpression ^ Scan(System::Data::Metadata::Edm::EntitySetBase ^ targetSet);" />
      <MemberSignature Language="F#" Value="static member Scan : System.Data.Metadata.Edm.EntitySetBase -&gt; System.Data.Common.CommandTrees.DbScanExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan targetSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbScanExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetSet" Type="System.Data.Metadata.Edm.EntitySetBase" RefType="this" />
      </Parameters>
      <Docs>
        <param name="targetSet">
          <span data-ttu-id="e7df3-750">要參考之實體或關聯性集合的中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-750">Metadata for the entity or relationship set to reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-751">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" />，這個運算式會參考指定實體或關聯性集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-751">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> that references the specified entity or relationship set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-752">根據指定之實體或關聯性集合所執行的新 DbScanExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-752">A new DbScanExpression based on the specified entity or relationship set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-753">
            <paramref name="targetSet" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-753">
              <paramref name="targetSet" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TProjection&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt; projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, !!TProjection&gt; projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TProjection) (source As DbExpression, projection As Func(Of DbExpression, TProjection)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProjection&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Select(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, TProjection&gt; ^ projection);" />
      <MemberSignature Language="F#" Value="static member Select : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, 'Projection&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select (source, projection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProjection" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="projection" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProjection">
          <span data-ttu-id="e7df3-754">
            <paramref name="projection" /> 的方法結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-754">The method result type of <paramref name="projection" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="e7df3-755">指定輸入集的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-755">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="projection">
          <span data-ttu-id="e7df3-756">方法，指定如何透過輸入集成員衍生投影的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-756">A method that specifies how to derive the projected expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="e7df3-757">這個方法所產生的型別執行個體，必須與 Select 相容並且可以解析成 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-757">This method must produce an instance of a type that is compatible with Select and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span>
          </span>
          <span data-ttu-id="e7df3-758">
            <c>TProjection</c> 的相容性需求詳述於＜備註＞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-758">Compatibility requirements for <c>TProjection</c> are described in remarks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-759">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />，它會依據給定的輸入集選取指定的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-759">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that selects the specified expression over the given input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-760">表示選取作業的新 DbProjectExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-760">A new DbProjectExpression that represents the select operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7df3-761">相容性與 Select`TProjection`必須衍生自<xref:System.Data.Common.CommandTrees.DbExpression>，或者必須是衍生自 DbExpression 之屬性的匿名型別。</span><span class="sxs-lookup"><span data-stu-id="e7df3-761">To be compatible with Select, `TProjection` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="e7df3-762">以下是支援的類型的範例`TProjection`:</span><span class="sxs-lookup"><span data-stu-id="e7df3-762">The following are examples of supported types for `TProjection`:</span></span>  
  
```  
source.Select(x => x.Property("Name"))  
```  
  
 <span data-ttu-id="e7df3-763">`TProjection` 是<xref:System.Data.Common.CommandTrees.DbPropertyExpression>)。</span><span class="sxs-lookup"><span data-stu-id="e7df3-763">`TProjection` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.Select(x => new { Name = x.Property("Name") })  
```  
  
 <span data-ttu-id="e7df3-764">(`TProjection`與衍生自 DbExpression 之屬性的匿名型別)。</span><span class="sxs-lookup"><span data-stu-id="e7df3-764">(`TProjection` is an anonymous type with a DbExpression-derived property).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-765">
            <paramref name="projection" /> 的結果為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-765">The result of <paramref name="projection" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany (source As DbExpression, apply As Func(Of DbExpression, DbExpression)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany (source, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="e7df3-766">指定輸入集的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-766">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="e7df3-767">方法，表示要針對輸入集中每個成員進行一次評估的邏輯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-767">A method that represents the logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-768">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />，這個運算式會針對給定輸入集的每個項目，評估給定的 <paramref name="apply" /> 運算式一次，產生具有對應的輸入和適用資料行的資料列集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-768">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="e7df3-769">其中不包含 <paramref name="apply" /> 評估為空集合的資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-769">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span>
          </span>
          <span data-ttu-id="e7df3-770">然後會建立 <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />，從每個資料列選取 <paramref name="apply" /> 資料行，產生 <paramref name="apply" /> 結果的整體集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-770">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the <paramref name="apply" /> column from each row, producing the overall collection of <paramref name="apply" /> results.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-771">新的 DbProjectExpression，這會從具有指定之輸入及套用繫結與 CrossApply 之 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 的新 DbApplyExpression 中選取套用資料行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-771">An new DbProjectExpression that selects the apply column from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-772">
            <paramref name="apply" /> 所產生的運算式為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-772">The expression produced by <paramref name="apply" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-773">
            <paramref name="apply" /> 所產生的運算式沒有集合類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-773">The expression produced by <paramref name="apply" /> does not have a collection type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSelector) (source As DbExpression, apply As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, 'Selector&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany (source, apply, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector">
          <span data-ttu-id="e7df3-774">
            <paramref name="selector" /> 的方法結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-774">The method result type of <paramref name="selector" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="e7df3-775">指定輸入集的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-775">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span>
          </span>
        </param>
        <param name="apply">
          <span data-ttu-id="e7df3-776">方法，表示要針對輸入集中每個成員進行一次評估的邏輯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-776">A method that represents the logic to evaluate once for each member of the input set.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="e7df3-777">方法，指定結果集項目要如何依據給定輸入集和適用集項目來衍生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-777">A method that specifies how an element of the result set should be derived given an element of the input and apply sets.</span>
          </span>
          <span data-ttu-id="e7df3-778">這個方法所產生的型別執行個體，必須與 SelectMany 相容並且可以解析成 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-778">This method must produce an instance of a type that is compatible with SelectMany and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span>
          </span>
          <span data-ttu-id="e7df3-779">
            <c>TSelector</c> 的相容性需求詳述於＜備註＞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-779">Compatibility requirements for <c>TSelector</c> are described in remarks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-780">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />，這個運算式會針對給定輸入集的每個項目，評估給定的 <paramref name="apply" /> 運算式一次，產生具有對應的輸入和適用資料行的資料列集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-780">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span>
          </span>
          <span data-ttu-id="e7df3-781">其中不包含 <paramref name="apply" /> 評估為空集合的資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-781">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span>
          </span>
          <span data-ttu-id="e7df3-782">然後會建立 <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />，從每個資料列選取指定的 <paramref name="selector" />，產生結果的整體集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-782">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the specified <paramref name="selector" /> over each row, producing the overall collection of results.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-783">新的 DbProjectExpression，這會從具有指定之輸入及套用繫結與 CrossApply 之 <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> 的新 DbApplyExpression 中選取指定之選取器的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-783">An new DbProjectExpression that selects the result of the given selector from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7df3-784">要與 SelectMany 相容`TSelector`必須衍生自<xref:System.Data.Common.CommandTrees.DbExpression>，或者必須是衍生自 DbExpression 之屬性的匿名型別。</span><span class="sxs-lookup"><span data-stu-id="e7df3-784">To be compatible with SelectMany, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="e7df3-785">以下是支援的類型的範例`TSelector`:</span><span class="sxs-lookup"><span data-stu-id="e7df3-785">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => apply.Property("Name"))  
```  
  
 <span data-ttu-id="e7df3-786">(`TSelector`是<xref:System.Data.Common.CommandTrees.DbPropertyExpression>)。</span><span class="sxs-lookup"><span data-stu-id="e7df3-786">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => new { SourceName = source.Property("Name"), RelatedName = apply.Property("Name") })  
```  
  
 <span data-ttu-id="e7df3-787">(`TSelector`具有衍生自 DbExpression 之屬性的匿名型別)。</span><span class="sxs-lookup"><span data-stu-id="e7df3-787">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-788">在轉換為 DbExpression 時，<paramref name="selector" /> 的結果是 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-788">The result of <paramref name="selector" /> is null on conversion to DbExpression.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-789">
            <paramref name="apply" /> 所產生的運算式沒有集合類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-789">The expression produced by <paramref name="apply" /> does not have a collection type.</span>
          </span>
          <span data-ttu-id="e7df3-790">沒有集合型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-790">does not have a collection type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Skip">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-791">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />，它會根據給定的排序規定，在略過指定的項目數目之前排序給定的輸入集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-791">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbSortExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbSortExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (argument As DbSortExpression, count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbSortExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Skip : System.Data.Common.CommandTrees.DbSortExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSkipExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip (argument, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-792">
            <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，指定已排序的輸入集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-792">A <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that specifies the sorted input set.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e7df3-793">運算式，指定要從排序集合略過的項目數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-793">An expression the specifies how many elements of the ordered set to skip.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-794">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />，它會從給定的排序輸入集中略過指定的項目數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-794">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that skips the specified number of elements from the given sorted input set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-795">表示略過作業的新 DbSkipExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-795">A new DbSkipExpression that represents the skip operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-796">
            <paramref name="argument" /> 或 <paramref name="count" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-796">
              <paramref name="argument" /> or <paramref name="count" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-797">
            <paramref name="count" /> 不是 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> 或 <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />，或者具有不等於或可提升至 64 位元整數類型的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-797">
              <paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause), count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Skip : System.Data.Common.CommandTrees.DbExpressionBinding * seq&lt;System.Data.Common.CommandTrees.DbSortClause&gt; * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSkipExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip (input, sortOrder, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e7df3-798">指定輸入集的運算式繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-798">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="sortOrder">
          <span data-ttu-id="e7df3-799">排序規格清單，這個清單會決定輸入集項目的排序方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-799">A list of sort specifications that determine how the elements of the input set should be sorted.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e7df3-800">運算式，指定要從排序集合略過的項目數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-800">An expression the specifies how many elements of the ordered set to skip.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-801">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />，它會根據給定的排序規定，在略過指定的項目數目之前排序給定的輸入集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-801">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-802">表示略過作業的新 DbSkipExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-802">A new DbSkipExpression that represents the skip operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-803">
            <paramref name="input" />、<paramref name="sortOrder" /> 或 <paramref name="count" /> 為 null，或是 <paramref name="sortOrder" /> 包含 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-803">
              <paramref name="input" />,  <paramref name="sortOrder" /> or <paramref name="count" /> is null, or <paramref name="sortOrder" /> contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-804">
            <paramref name="sortOrder" /> 是空的，或者 <paramref name="count" /> 不是 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> 或 <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />，或者具有不等於或可提升至 64 位元整數類型的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-804">
              <paramref name="sortOrder" /> is empty, or <paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression Sort (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression Sort(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sort (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ Sort(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder);" />
      <MemberSignature Language="F#" Value="static member Sort : System.Data.Common.CommandTrees.DbExpressionBinding * seq&lt;System.Data.Common.CommandTrees.DbSortClause&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort (input, sortOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e7df3-805">指定輸入集的運算式繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-805">An expression binding that specifies the input set.</span>
          </span>
        </param>
        <param name="sortOrder">
          <span data-ttu-id="e7df3-806">排序規格清單，這個清單會決定輸入集項目的排序方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-806">A list of sort specifications that determine how the elements of the input set should be sorted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-807">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，這個運算式會依據指定的排序規格，排序給定的輸入集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-807">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort specifications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-808">表示排序作業的新 DbSortExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-808">A new DbSortExpression that represents the sort operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-809">
            <paramref name="input" /> 或 <paramref name="sortOrder" /> 為 null，或是 <paramref name="sortOrder" /> 包含 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-809">
              <paramref name="input" /> or <paramref name="sortOrder" /> is null, or <paramref name="sortOrder" /> contains null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-810">
            <paramref name="sortOrder" /> 是空的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-810">
              <paramref name="sortOrder" /> is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Take (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Take(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Take(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Take : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLimitExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take (argument, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-811">指定輸入集合的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-811">An expression that specifies the input collection.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e7df3-812">指定限制值的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-812">An expression that specifies the limit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-813">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />，它會將 Argument 集合中的項目數目限制為指定的計數限制值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-813">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span>
          </span>
          <span data-ttu-id="e7df3-814">輸出中不包含繫結結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-814">Tied results are not included in the output.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-815">含有指定之引數及計數限制值但不含繫結結果的新 DbLimitExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-815">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-816">
            <paramref name="argument" /> 或 <paramref name="count" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-816">
              <paramref name="argument" /> or <paramref name="count" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-817">
            <paramref name="argument" /> 沒有集合結果類型，或者 <paramref name="count" /> 並沒有等於或可提升至 64 位元整數類型的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-817">
              <paramref name="argument" /> does not have a collection result type,  <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-818">建立新 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，其排序次序包含指定順序輸入集之排序次序，以及具有遞增排序次序和預設定序之指定排序鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-818">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="e7df3-819">指定已排序輸入集的 DbSortExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-819">A DbSortExpression that specifies the ordered input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="e7df3-820">方法，指定如何根據輸入集成員來衍生其他排序索引鍵運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-820">A method that specifies how to derive the additional sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="e7df3-821">這個方法必須產生具有可比較順序之結果型別的運算式，這個字串結果型別會提供排序索引鍵定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-821">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-822">建立新 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，其排序次序包含指定順序輸入集之排序次序，以及具有遞增排序次序和預設定序之指定排序鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-822">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-823">新的 DbSortExpression，表示新的整體 order-by 作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-823">A new DbSortExpression that represents the new overall order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-824">
            <paramref name="sortKey" /> 所產生的運算式為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-824">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-825">
            <paramref name="sortKey" /> 沒有可比較順序結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-825">
              <paramref name="sortKey" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="e7df3-826">指定已排序輸入集的 DbSortExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-826">A DbSortExpression that specifies the ordered input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="e7df3-827">方法，指定如何根據輸入集成員來衍生其他排序索引鍵運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-827">A method that specifies how to derive the additional sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="e7df3-828">這個方法必須產生具有可比較順序之結果型別的運算式，這個字串結果型別會提供排序索引鍵定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-828">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="e7df3-829">要做為排序依據的定序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-829">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-830">建立新 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，其排序次序包含指定順序輸入集之排序次序，以及具有遞增排序次序和指定定序之指定排序鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-830">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-831">新的 DbSortExpression，表示新的整體 order-by 作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-831">A new DbSortExpression that represents the new overall order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-832">
            <paramref name="sortKey" /> 所產生的運算式為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-832">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-833">
            <paramref name="sortKey" /> 所產生的運算式沒有可比較順序字串結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-833">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7df3-834">
            <paramref name="collation" /> 是空的或僅包含空白字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-834">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-835">建立新 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，其排序次序包含指定順序輸入集之排序次序，以及具有遞減排序次序和預設定序之指定排序鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-835">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="e7df3-836">指定已排序輸入集的 DbSortExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-836">A DbSortExpression that specifies the ordered input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="e7df3-837">方法，指定如何根據輸入集成員來衍生其他排序索引鍵運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-837">A method that specifies how to derive the additional sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="e7df3-838">這個方法必須產生具有可比較順序之結果型別的運算式，這個字串結果型別會提供排序索引鍵定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-838">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-839">建立新 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，其排序次序包含指定順序輸入集之排序次序，以及具有遞減排序次序和預設定序之指定排序鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-839">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-840">新的 DbSortExpression，表示新的整體 order-by 作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-840">A new DbSortExpression that represents the new overall order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-841">
            <paramref name="sortKey" /> 所產生的運算式為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-841">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-842">
            <paramref name="sortKey" /> 所產生的運算式沒有可比較順序結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-842">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="e7df3-843">指定已排序輸入集的 DbSortExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-843">A DbSortExpression that specifies the ordered input set.</span>
          </span>
        </param>
        <param name="sortKey">
          <span data-ttu-id="e7df3-844">方法，指定如何根據輸入集成員來衍生其他排序索引鍵運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-844">A method that specifies how to derive the additional sort key expression given a member of the input set.</span>
          </span>
          <span data-ttu-id="e7df3-845">這個方法必須產生具有可比較順序之結果型別的運算式，這個字串結果型別會提供排序索引鍵定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-845">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="e7df3-846">要做為排序依據的定序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-846">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-847">建立新 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />，其排序次序包含指定順序輸入集之排序次序，以及具有遞減排序次序和指定定序之指定排序鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-847">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-848">新的 DbSortExpression，表示新的整體 order-by 作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-848">A new DbSortExpression that represents the new overall order-by operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-849">
            <paramref name="sortKey" /> 所產生的運算式為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-849">The expression produced by <paramref name="sortKey" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-850">
            <paramref name="sortKey" /> 所產生的運算式沒有可比較順序字串結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-850">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7df3-851">
            <paramref name="collation" /> 是空的或僅包含空白字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-851">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClause">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-852">使用遞增的排序次序和預設的定序，建立新的 <see cref="T:System.Data.Common.CommandTrees.DbSortClause" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-852">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberSignature Language="F#" Value="static member ToSortClause : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="e7df3-853">可定義排序索引鍵的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-853">The expression that defines the sort key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-854">使用遞增的排序次序和預設的定序，建立新的 <see cref="T:System.Data.Common.CommandTrees.DbSortClause" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-854">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-855">含有指定之排序鍵及遞增排序順序的新排序子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-855">A new sort clause with the given sort key and ascending sort order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-856">
            <paramref name="key" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-856">
              <paramref name="key" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-857">
            <paramref name="key" /> 沒有可比較順序結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-857">
              <paramref name="key" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ToSortClause : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause (key, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="e7df3-858">可定義排序索引鍵的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-858">The expression that defines the sort key.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="e7df3-859">要做為排序依據的定序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-859">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-860">使用遞增的排序次序和指定的定序，建立新的 <see cref="T:System.Data.Common.CommandTrees.DbSortClause" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-860">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-861">含有指定之排序鍵、定序及遞增排序順序的新排序子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-861">A new sort clause with the given sort key and collation, and ascending sort order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-862">
            <paramref name="key" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-862">
              <paramref name="key" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7df3-863">
            <paramref name="collation" /> 是空的或僅包含空白字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-863">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-864">
            <paramref name="key" /> 沒有可比較順序結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-864">
              <paramref name="key" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClauseDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-865">使用遞減的排序次序和預設的定序，建立新的 <see cref="T:System.Data.Common.CommandTrees.DbSortClause" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-865">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberSignature Language="F#" Value="static member ToSortClauseDescending : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="e7df3-866">可定義排序索引鍵的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-866">The expression that defines the sort key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-867">使用遞減的排序次序和預設的定序，建立新的 <see cref="T:System.Data.Common.CommandTrees.DbSortClause" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-867">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-868">含有指定之排序鍵及遞減排序順序的新排序子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-868">A new sort clause with the given sort key and descending sort order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-869">
            <paramref name="key" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-869">
              <paramref name="key" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-870">
            <paramref name="key" /> 沒有可比較順序結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-870">
              <paramref name="key" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ToSortClauseDescending : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending (key, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="collation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="e7df3-871">可定義排序索引鍵的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-871">The expression that defines the sort key.</span>
          </span>
        </param>
        <param name="collation">
          <span data-ttu-id="e7df3-872">要做為排序依據的定序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-872">The collation to sort under.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-873">使用遞減的排序次序和指定的定序，建立新的 <see cref="T:System.Data.Common.CommandTrees.DbSortClause" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-873">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and the specified collation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-874">含有指定之排序鍵、定序及遞減排序順序的新排序子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-874">A new sort clause with the given sort key and collation, and descending sort order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-875">
            <paramref name="key" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-875">
              <paramref name="key" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e7df3-876">
            <paramref name="collation" /> 是空的或僅包含空白字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-876">
              <paramref name="collation" /> is empty or contains only space characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-877">
            <paramref name="key" /> 沒有可比較順序結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-877">
              <paramref name="key" /> does not have an order-comparable result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TreatAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbTreatExpression TreatAs (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage treatType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbTreatExpression TreatAs(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage treatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TreatAs (argument As DbExpression, treatType As TypeUsage) As DbTreatExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbTreatExpression ^ TreatAs(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ treatType);" />
      <MemberSignature Language="F#" Value="static member TreatAs : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbTreatExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs (argument, treatType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbTreatExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="treatType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-878">指定執行個體的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-878">An expression that specifies the instance.</span>
          </span>
        </param>
        <param name="treatType">
          <span data-ttu-id="e7df3-879">所要視為之目標型別的型別中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-879">Type metadata for the treat-as type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-880">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-880">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-881">含有指定之引數及型別的新 DbTreatExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-881">A new DbTreatExpression with the specified argument and type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7df3-882">DbTreatExpression 要求`argument`具有多型態結果類型，以及`treatType`屬於相同的型別階層架構，為該結果類型的類型。</span><span class="sxs-lookup"><span data-stu-id="e7df3-882">DbTreatExpression requires that `argument` has a polymorphic result type, and that `treatType` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-883">
            <paramref name="argument" /> 或 <paramref name="treatType" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-883">
              <paramref name="argument" /> or <paramref name="treatType" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-884">
            <paramref name="treatType" /> 不在與 <paramref name="argument" /> 之結果型別相同的型別階層中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-884">
              <paramref name="treatType" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="True">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression True { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression True" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property True As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ True { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.True : System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e7df3-885">取得布林值 <see langword="true" /> 的 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-885">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e7df3-886">布林值為 <see langword="true" /> 的 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-886">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnaryMinus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnaryMinus (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ UnaryMinus(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member UnaryMinus : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="e7df3-887">指定引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-887">An expression that specifies the argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-888">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />，這個運算式會將引數值變成相反值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-888">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-889">表示否定運算的新 DbArithmeticExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-889">A new DbArithmeticExpression representing the negation operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-890">
            <paramref name="argument" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-890">
              <paramref name="argument" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-891">
            <paramref name="argument" /> 沒有數字結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-891">No numeric result type exists for <paramref name="argument" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Union (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Union(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union (left As DbExpression, right As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Union(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Union : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-892">定義左集合引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-892">An expression that defines the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-893">定義右集合引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-893">An expression that defines the right set argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-894">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，它會計算左右集合引數的聯集，並移除重複的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-894">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that computes the union of the left and right set arguments with duplicates removed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-895">計算左邊與右邊引數無重複之聯集的新 DbExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-895">A new DbExpression that computes the union, without duplicates, of the left and right arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-896">
            <paramref name="left" /> 或 <paramref name="right" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-896">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-897">
            <paramref name="left" /> 和 <paramref name="right" /> 之間沒有相等比較的項目型別的一般集合結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-897">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UnionAll">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnionAll (left As DbExpression, right As DbExpression) As DbUnionAllExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbUnionAllExpression ^ UnionAll(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member UnionAll : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbUnionAllExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbUnionAllExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="e7df3-898">定義左集合引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-898">An expression that defines the left set argument.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="e7df3-899">定義右集合引數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-899">An expression that defines the right set argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-900">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> 物件，這個物件會計算左右集合引數的聯集，且不移除重複的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-900">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> that computes the union of the left and right set arguments and does not remove duplicates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-901">作為左邊和右邊引數之聯集 (包括重複項目) 的新 DbUnionAllExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-901">A new DbUnionAllExpression that union, including duplicates, of the left and right arguments.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-902">
            <paramref name="left" /> 或 <paramref name="right" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-902">
              <paramref name="left" /> or <paramref name="right" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-903">
            <paramref name="left" /> 和 <paramref name="right" /> 之間沒有相等比較的項目型別的一般集合結果型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-903">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Variable (type As TypeUsage, name As String) As DbVariableReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ Variable(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member Variable : System.Data.Metadata.Edm.TypeUsage * string -&gt; System.Data.Common.CommandTrees.DbVariableReferenceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbVariableReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="e7df3-904">所參考的變數型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-904">The type of the referenced variable.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="e7df3-905">參考變數的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-905">The name of the referenced variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-906">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />，這個運算式會使用指定的名稱和型別，參考變數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-906">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> that references a variable with the specified name and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-907">DbVariableReferenceExpression，表示具有指定名稱及型別之變數的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-907">A DbVariableReferenceExpression that represents a reference to a variable with the specified name and type.</span>
          </span>
          <span data-ttu-id="e7df3-908">運算式的結果類型與 <paramref name="type" /> 相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-908">The result type of the expression will be the same as <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Where (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Where(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Where(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbFilterExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="e7df3-909">指定輸入集的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-909">An expression that specifies the input set.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="e7df3-910">方法，表示要針對輸入集中每個成員進行評估的述詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-910">A method representing the predicate to evaluate for each member of the input set.</span>
          </span>
          <span data-ttu-id="e7df3-911">這個方法必須產生具有可提供述詞邏輯之布林結果型別的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-911">This method must produce an expression with a Boolean result type that provides the predicate logic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e7df3-912">建立新的 <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />，它會使用指定的述詞篩選給定輸入集的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-912">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e7df3-913">表示 Any 運算的新 DbQuantifierExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-913">A new DbQuantifierExpression that represents the Any operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e7df3-914">
            <paramref name="predicate" /> 所產生的運算式為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-914">The expression produced by <paramref name="predicate" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e7df3-915">
            <paramref name="predicate" /> 所產生之運算式沒有布林值結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e7df3-915">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>