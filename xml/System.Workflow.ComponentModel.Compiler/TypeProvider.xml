<Type Name="TypeProvider" FullName="System.Workflow.ComponentModel.Compiler.TypeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1871800301cdc9c2baef869c110fa98ac9f9b08b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TypeProvider : IDisposable, IServiceProvider, System.Workflow.ComponentModel.Compiler.ITypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeProvider extends System.Object implements class System.IDisposable, class System.IServiceProvider, class System.Workflow.ComponentModel.Compiler.ITypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Compiler.TypeProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeProvider&#xA;Implements IDisposable, IServiceProvider, ITypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeProvider sealed : IDisposable, IServiceProvider, System::Workflow::ComponentModel::Compiler::ITypeProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.Compiler.ITypeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="081d4-101">實作 <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" />，在指出的組件和程式碼編譯單元中做為型別的容器。</span>
      <span class="sxs-lookup">
        <span data-stu-id="081d4-101">An implementation of <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" /> that acts as a container of types within the indicated assemblies and code compile units.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="081d4-102">除了處理編譯的組件 (<xref:System.Workflow.ComponentModel.Compiler.ITypeProvider> 和 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%2A> 方法) 之外，這個 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A> 實作會處理尚未編譯的型別 (<xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit%2A>)。</span><span class="sxs-lookup"><span data-stu-id="081d4-102">This <xref:System.Workflow.ComponentModel.Compiler.ITypeProvider> implementation, in addition to handling compiled assemblies (<xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%2A> and <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A> methods), can handle types that have not been compiled yet (<xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit%2A>).</span></span> <span data-ttu-id="081d4-103">使用 <xref:System.Type?displayProperty=nameWithType> 傳回所參考之型別的 <xref:System.CodeDom.CodeCompileUnit> 有限實作。</span><span class="sxs-lookup"><span data-stu-id="081d4-103">The limited implementation of <xref:System.Type?displayProperty=nameWithType> is returned for types referenced using <xref:System.CodeDom.CodeCompileUnit>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="081d4-104"><xref:System.Workflow.ComponentModel.Compiler.TypeProvider> 只會從參考的組件傳回公用型別，而從本機組件傳回公用和非公用型別。</span><span class="sxs-lookup"><span data-stu-id="081d4-104"><xref:System.Workflow.ComponentModel.Compiler.TypeProvider> only returns public types from referenced assemblies, and both public and non-public types from local assemblies.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeProvider (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeProvider(IServiceProvider ^ serviceProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="081d4-105">這個執行個體的已封裝 <see cref="T:System.IServiceProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-105">The encapsulated <see cref="T:System.IServiceProvider" /> for this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-106">初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-106">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="081d4-107">下列程式碼範例示範如何建立 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="081d4-107">The following code example shows how to create a new instance of the <xref:System.Workflow.ComponentModel.Compiler.TypeProvider> class.</span></span>  <span data-ttu-id="081d4-108">這個程式碼範例是 WorkflowLoader.cs 檔案中＜BasicDesignerHosting SDK＞範例的一部分。</span><span class="sxs-lookup"><span data-stu-id="081d4-108">This code example is part of the BasicDesignerHosting SDK Sample from the WorkflowLoader.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="081d4-109"> [基本設計工具裝載](http://msdn.microsoft.com/library/55925adf-2daa-4dc2-b1bf-61aa0190d734)。</span><span class="sxs-lookup"><span data-stu-id="081d4-109"> [Basic Designer Hosting](http://msdn.microsoft.com/library/55925adf-2daa-4dc2-b1bf-61aa0190d734).</span></span>  
  
 [!code-csharp[WF_Samples#256](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#256)]
 [!code-vb[WF_Samples#256](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#256)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssembly">
      <MemberSignature Language="C#" Value="public void AddAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="081d4-110">要加入參考的 <see cref="P:System.Type.Assembly" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-110">The <see cref="P:System.Type.Assembly" /> to add a reference for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-111">加入已載入的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-111">Adds an already-loaded assembly.</span>
          </span>
          <span data-ttu-id="081d4-112">呼叫者會負責載入組件，且 <see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /> 會包含這個組件的型別，以便呼叫 <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType" /> 時進行分配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-112">It is the caller's responsibility to load the assembly, and <see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /> includes the types from this assembly for dispensing when <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType" /> is called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="081d4-113">
            <paramref name="assembly" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-113">
              <paramref name="assembly" /> is a null reference (Visual Basic <see langword="Nothing" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAssemblyReference">
      <MemberSignature Language="C#" Value="public void AddAssemblyReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAssemblyReference(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAssemblyReference (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAssemblyReference(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="081d4-114">要加入之 <see cref="P:System.Type.Assembly" /> 的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-114">The path of the <see cref="P:System.Type.Assembly" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-115">將對 <see cref="P:System.Type.Assembly" /> 的參考加入內部清單中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-115">Adds a reference to the <see cref="P:System.Type.Assembly" /> to the internal list.</span>
          </span>
          <span data-ttu-id="081d4-116">這個組件用於 <see cref="T:System.Type" /> 方法中的 <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)" /> 查詢。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-116">This assembly is used for the <see cref="T:System.Type" /> lookup in the <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="081d4-117">下列程式碼範例示範如何建立 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider> 類別的新執行個體，並執行 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="081d4-117">The following code example shows how to create a new instance of the <xref:System.Workflow.ComponentModel.Compiler.TypeProvider> class and run the <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A> method.</span></span> <span data-ttu-id="081d4-118">這個程式碼範例是 WorkflowLoader.cs 檔案中＜BasicDesignerHosting SDK＞範例的一部分。</span><span class="sxs-lookup"><span data-stu-id="081d4-118">This code example is part of the BasicDesignerHosting SDK Sample from the WorkflowLoader.cs file.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="081d4-119"> [基本設計工具裝載](http://msdn.microsoft.com/library/55925adf-2daa-4dc2-b1bf-61aa0190d734)。</span><span class="sxs-lookup"><span data-stu-id="081d4-119"> [Basic Designer Hosting](http://msdn.microsoft.com/library/55925adf-2daa-4dc2-b1bf-61aa0190d734).</span></span>  
  
 [!code-csharp[Wf_samples#256](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#256)]
 [!code-vb[Wf_samples#256](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#256)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="081d4-120">
            <paramref name="path" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-120">
              <paramref name="path" /> is a null reference (Visual Basic <see langword="Nothing" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddCodeCompileUnit">
      <MemberSignature Language="C#" Value="public void AddCodeCompileUnit (System.CodeDom.CodeCompileUnit codeCompileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCodeCompileUnit(class System.CodeDom.CodeCompileUnit codeCompileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCodeCompileUnit(System::CodeDom::CodeCompileUnit ^ codeCompileUnit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="codeCompileUnit">
          <span data-ttu-id="081d4-121">要加入的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-121">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-122">將對 <see cref="T:System.CodeDom.CodeCompileUnit" /> 的參考加入內部清單中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-122">Adds a reference to the <see cref="T:System.CodeDom.CodeCompileUnit" /> to the internal list.</span>
          </span>
          <span data-ttu-id="081d4-123">這個 <see cref="T:System.CodeDom.CodeCompileUnit" /> 用於 <see cref="T:System.Type" /> 方法中的 <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)" /> 查詢。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-123">This <see cref="T:System.CodeDom.CodeCompileUnit" /> is used for the <see cref="T:System.Type" /> lookup in the <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="081d4-124">
            <paramref name="codeCompileUnit" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-124">
              <paramref name="codeCompileUnit" /> is a null reference (Visual Basic <see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="081d4-125">已參考這個執行個體中的 <paramref name="codeCompileUnit" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-125">
              <paramref name="codeCompileUnit" /> is already referenced in this instance.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AssemblyNameResolver">
      <MemberSignature Language="C#" Value="public Func&lt;Type,string&gt; AssemblyNameResolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Type, string&gt; AssemblyNameResolver" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property AssemblyNameResolver As Func(Of Type, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Type ^, System::String ^&gt; ^ AssemblyNameResolver { Func&lt;Type ^, System::String ^&gt; ^ get(); void set(Func&lt;Type ^, System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Type,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="081d4-126">取得或設定委派，這個委派會使用參數來參考方法，並使用傳回值傳回指定型別所屬組件的顯示名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-126">Gets or sets the delegate that references a method with one parameter and one return value that returns the assembly display name in which a specified type belongs to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="081d4-127">這個委派會使用參數來參考方法，並使用傳回值傳回指定型別所屬組件的顯示名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-127">The delegate that references a method with one parameter and one return value that returns the assembly display name that a specified type belongs to.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="081d4-128">釋放 <see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /> 所使用的所有資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-128">Releases all resources used by the <see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblyName">
      <MemberSignature Language="C#" Value="public string GetAssemblyName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAssemblyName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAssemblyName(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="081d4-129">要取得組件名稱的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-129">The type whose assembly name to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-130">傳回指定型別宣告所在組件的顯示名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-130">Returns the assembly display name of the assembly in which the specified type is declared.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="081d4-131">指定型別宣告所在組件的顯示名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-131">The assembly display name of the assembly in which the specified type is declared.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumNames">
      <MemberSignature Language="C#" Value="public static string[] GetEnumNames (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetEnumNames(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEnumNames (enumType As Type) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetEnumNames(Type ^ enumType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="081d4-132">要從中取得名稱的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-132">The type to obtain the names from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-133">提供字串陣列，其中包含以索引順序指定的 <see cref="T:System.Enum" /> 名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-133">Provides a string array that contains the names for the specified <see cref="T:System.Enum" /> in indexed order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="081d4-134">指定之 <see cref="T:System.Enum" /> 的名稱，以索引順序排列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-134">The names for the specified <see cref="T:System.Enum" /> in indexed order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="081d4-135">
            <paramref name="enumType" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-135">
              <paramref name="enumType" /> is a null reference (Visual Basic <see langword="Nothing" />).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="081d4-136">
            <paramref name="enumType" /> 不是 <see cref="T:System.Enum" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-136">
              <paramref name="enumType" /> Is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventHandlerType">
      <MemberSignature Language="C#" Value="public static Type GetEventHandlerType (System.Reflection.EventInfo eventInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetEventHandlerType(class System.Reflection.EventInfo eventInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(System.Reflection.EventInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetEventHandlerType(System::Reflection::EventInfo ^ eventInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
      </Parameters>
      <Docs>
        <param name="eventInfo">
          <span data-ttu-id="081d4-137">
            <see cref="T:System.Reflection.EventInfo" />，可取得 <see cref="T:System.EventHandler" /> 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-137">The <see cref="T:System.Reflection.EventInfo" /> to obtain the <see cref="T:System.EventHandler" /> type of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-138">取得 <see cref="T:System.Type" /> 的 <see cref="T:System.EventHandler" /> (參考 <see cref="T:System.Reflection.EventInfo" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-138">Gets the <see cref="T:System.Type" /> of an <see cref="T:System.EventHandler" />, given a reference to an <see cref="T:System.Reflection.EventInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="081d4-139">
            <see cref="T:System.Type" /> 的 <see cref="T:System.EventHandler" /> (參考 <see cref="T:System.Reflection.EventInfo" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-139">The <see cref="T:System.Type" /> of an <see cref="T:System.EventHandler" />, given a reference to an <see cref="T:System.Reflection.EventInfo" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="081d4-140">
            <paramref name="eventInfo" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-140">
              <paramref name="eventInfo" /> is a null reference (Visual Basic <see langword="Nothing" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="081d4-141">
            <see cref="T:System.Type" /> 即將提供的 <see cref="T:System.Object" /> 服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-141">The service <see cref="T:System.Type" /> that the <see cref="T:System.Object" /> is to provide.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-142">取得 <see cref="T:System.Object" />，此物件會提供指定的 <see cref="T:System.Type" /> 服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-142">Gets the <see cref="T:System.Object" /> that provides the designated service <see cref="T:System.Type" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="081d4-143">
            <see cref="T:System.Object" />，它會提供指定的 <see cref="T:System.Type" /> 服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-143">The <see cref="T:System.Object" /> that provides the designated service <see cref="T:System.Type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="081d4-144">如果與這個執行個體相關聯的已封裝 <xref:System.IServiceProvider> 為 null 參考 (在 Visual Basic 中為 `Nothing`)，則傳回 null 參考 (`Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="081d4-144">If the encapsulated <xref:System.IServiceProvider> associated with this instance is a null reference (`Nothing` in Visual Basic) then a null reference (`Nothing`) is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="081d4-145">從透過搜尋加入之組件參考和程式碼編譯單位所傳遞的限定型別名稱中，取得 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-145">Gets the <see cref="T:System.Type" /> from the qualified type name passed by searching through the assembly references and code compile units that are added.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Compiler.ITypeProvider.GetType(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="081d4-146">類型名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-146">The type name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-147">使用 <see langword="TypeProvider" />、<see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)" /> 或 <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)" />，從加入到 <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)" /> 的組件集中取得型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-147">Gets the type from the set of assemblies added to the <see langword="TypeProvider" /> using <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)" />, <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)" />, or <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="081d4-148">所要求的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-148">The requested <see cref="T:System.Type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="081d4-149">如果無法解析組件快取和這個執行個體之已編譯單元內的名稱，則傳回 null 參考 (在 Visual Basic 中為 `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="081d4-149">If the name is not resolvable within the cache of assemblies and compiled units of this instance, a null reference (Visual Basic `Nothing`) is returned.</span></span> <span data-ttu-id="081d4-150">叫用這個多載等於叫用兩個 `throwOnError` 參數值設為 `true` 的參數多載。</span><span class="sxs-lookup"><span data-stu-id="081d4-150">Invoking this overload is the same as invoking the two parameter overloads with the value of the parameter `throwOnError` set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="081d4-151">
            <paramref name="name" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-151">
              <paramref name="name" /> is a null reference (<see langword="Nothing" /> in Visual Basic)</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, throwOnError As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name, bool throwOnError);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Compiler.ITypeProvider.GetType(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="081d4-152">類型名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-152">The type name.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="081d4-153">指出如果無法解析 <c>name</c>，是否要擲回例外狀況的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-153">A value that indicates whether to throw an exception if <c>name</c> is not resolvable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-154">使用 <see langword="TypeProvider" />、<see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)" /> 或 <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)" />，從加入到 <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)" /> 的組件集中取得型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-154">Gets the type from the set of assemblies added to the <see langword="TypeProvider" /> using <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)" />, <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)" />, or <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="081d4-155">所要求的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-155">The requested <see cref="T:System.Type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="081d4-156">如果無法解析組件快取和這個執行個體之已編譯單元內的名稱，則傳回 null 參考 (`Nothing`)；在此情況下，`throwOnError` 為 `false`。</span><span class="sxs-lookup"><span data-stu-id="081d4-156">If the name is not resolvable within the cache of assemblies and compiled units of this instance, a null reference (`Nothing`) is returned; in the case that `throwOnError` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="081d4-157">
            <paramref name="name" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-157">
              <paramref name="name" /> is a null reference (<see langword="Nothing" /> in Visual Basic)</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="081d4-158">
            <paramref name="name" /> 無法解析，且 <paramref name="throwOnError" /> 為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-158">
              <paramref name="name" /> is not resolvable and <paramref name="throwOnError" /> is <see langword="true" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public Type[] GetTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetTypes();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Compiler.ITypeProvider.GetTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="081d4-159">建立陣列，其中包含公開給這個執行個體的每個 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-159">Creates an array that contains each <see cref="T:System.Type" /> known to this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="081d4-160">陣列，其中包含公開給這個執行個體的每個 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-160">An array that contains each <see cref="T:System.Type" /> known to this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException">
          <span data-ttu-id="081d4-161">任何 <see cref="T:System.Type" /> 都無法載入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-161">Any <see cref="T:System.Type" /> fails to load.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAssignable">
      <MemberSignature Language="C#" Value="public static bool IsAssignable (Type toType, Type fromType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAssignable(class System.Type toType, class System.Type fromType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAssignable (toType As Type, fromType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAssignable(Type ^ toType, Type ^ fromType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toType" Type="System.Type" />
        <Parameter Name="fromType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="toType">
          <span data-ttu-id="081d4-162">指派的目標 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-162">The target <see cref="T:System.Type" /> of the assignment.</span>
          </span>
        </param>
        <param name="fromType">
          <span data-ttu-id="081d4-163">指派的來源 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-163">The source <see cref="T:System.Type" /> of the assignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-164">指出是否安全地將一個型別指派至另一個型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-164">Indicates whether one type can be safely assigned to another type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="081d4-165">如果可安全地指派，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-165">
              <see langword="true" /> if the assignment can be safely made; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnum">
      <MemberSignature Language="C#" Value="public static bool IsEnum (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEnum(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEnum(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="081d4-166">要測試的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-166">The <see cref="T:System.Type" /> to be tested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-167">指示 <see cref="T:System.Type" /> 的型別是否為 <see cref="T:System.Enum" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-167">Indicates whether a <see cref="T:System.Type" /> is of type <see cref="T:System.Enum" /> .</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="081d4-168">如果 <see langword="true" /> 是 <see cref="T:System.Type" />，則為 <see cref="T:System.Enum" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-168">
              <see langword="true" /> if the <see cref="T:System.Type" /> is an <see cref="T:System.Enum" /> ; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="081d4-169">
            <paramref name="type" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-169">
              <paramref name="type" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubclassOf">
      <MemberSignature Language="C#" Value="public static bool IsSubclassOf (Type subclass, Type superClass);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSubclassOf(class System.Type subclass, class System.Type superClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSubclassOf (subclass As Type, superClass As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSubclassOf(Type ^ subclass, Type ^ superClass);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subclass" Type="System.Type" />
        <Parameter Name="superClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="subclass">
          <span data-ttu-id="081d4-170">要測試為衍生類別的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-170">The <see cref="T:System.Type" /> being tested as a derived class.</span>
          </span>
        </param>
        <param name="superClass">
          <span data-ttu-id="081d4-171">要測試為類別的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-171">The <see cref="T:System.Type" /> being tested as the class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-172">指出 <see cref="T:System.Type" /> 是否為另一個 <see cref="T:System.Type" /> 的衍生類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-172">Indicates whether a <see cref="T:System.Type" /> is a derived class of another <see cref="T:System.Type" /> .</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="081d4-173">如果測試的關聯性為 true，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-173">
              <see langword="true" /> if the tested relationship is true; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedProperty">
      <MemberSignature Language="C#" Value="public bool IsSupportedProperty (System.Reflection.PropertyInfo property, object declaringInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSupportedProperty(class System.Reflection.PropertyInfo property, object declaringInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSupportedProperty (property As PropertyInfo, declaringInstance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSupportedProperty(System::Reflection::PropertyInfo ^ property, System::Object ^ declaringInstance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="declaringInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="081d4-174">要解析的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-174">The property to resolve.</span>
          </span>
        </param>
        <param name="declaringInstance">
          <span data-ttu-id="081d4-175">宣告指定型別所在的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-175">The instance in which the specified property is declared.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-176">傳回值，這個值會判斷目標 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 是否支援指定的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-176">Returns a value that determines whether the specified property is supported in the target [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="081d4-177">如果目標 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 支援指定的屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-177">
              <see langword="true" /> if the specified property is supported in the target [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedPropertyResolver">
      <MemberSignature Language="C#" Value="public Func&lt;System.Reflection.PropertyInfo,object,bool&gt; IsSupportedPropertyResolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`3&lt;class System.Reflection.PropertyInfo, object, bool&gt; IsSupportedPropertyResolver" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSupportedPropertyResolver As Func(Of PropertyInfo, Object, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Reflection::PropertyInfo ^, System::Object ^, bool&gt; ^ IsSupportedPropertyResolver { Func&lt;System::Reflection::PropertyInfo ^, System::Object ^, bool&gt; ^ get(); void set(Func&lt;System::Reflection::PropertyInfo ^, System::Object ^, bool&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Reflection.PropertyInfo,System.Object,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="081d4-178">取得或設定委派，這個委派會使用兩個參數參考方法，並使用傳回值判斷目標 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 是否支援指定的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-178">Gets or sets the delegate that references a method with two parameters and one return value that determines whether a specified property is supported in the target [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="081d4-179">這個委派會使用兩個參數參考方法，並使用傳回值判斷目標 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 是否支援指定的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-179">The delegate that references a method with two parameters and one return value that determines whether a specified property is supported in the target [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LocalAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly LocalAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ LocalAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Compiler.ITypeProvider.LocalAssembly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="081d4-180">取得值，這個值表示為這個執行個體本機定義的 <see cref="T:System.Reflection.Assembly" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-180">Gets a value that represents the locally defined <see cref="T:System.Reflection.Assembly" /> for this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="081d4-181">為這個執行個體本機定義的 <see cref="T:System.Reflection.Assembly" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-181">The locally defined <see cref="T:System.Reflection.Assembly" /> for this instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Reflection.Assembly&gt; ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferencedAssemblies As ICollection(Of Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::Reflection::Assembly ^&gt; ^ ReferencedAssemblies { System::Collections::Generic::ICollection&lt;System::Reflection::Assembly ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Compiler.ITypeProvider.ReferencedAssemblies</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="081d4-182">取得由 <see cref="T:System.Type" /> 參考的所有組件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-182">Gets a collection of all assemblies referenced by the <see cref="T:System.Type" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="081d4-183">由 <see cref="T:System.Type" /> 參考的所有組件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-183">A collection of all assemblies referenced by the <see cref="T:System.Type" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshCodeCompileUnit">
      <MemberSignature Language="C#" Value="public void RefreshCodeCompileUnit (System.CodeDom.CodeCompileUnit codeCompileUnit, EventHandler refresher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RefreshCodeCompileUnit(class System.CodeDom.CodeCompileUnit codeCompileUnit, class System.EventHandler refresher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshCodeCompileUnit(System::CodeDom::CodeCompileUnit ^ codeCompileUnit, EventHandler ^ refresher);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="refresher" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="codeCompileUnit">
          <span data-ttu-id="081d4-184">要用來重新整理的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-184">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to refresh with.</span>
          </span>
        </param>
        <param name="refresher">
          <span data-ttu-id="081d4-185">要委派這個事件至 <see cref="T:System.EventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-185">The <see cref="T:System.EventHandler" /> to delegate this event to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-186">更新與這個執行個體相關聯的 <see cref="T:System.CodeDom.CodeCompileUnit" /> 參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-186">Updates the <see cref="T:System.CodeDom.CodeCompileUnit" /> reference associated with this instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="081d4-187">叫用此方法時引發 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>。</span><span class="sxs-lookup"><span data-stu-id="081d4-187">The <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged> is raised when this method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="081d4-188">
            <paramref name="codeCompileUnit" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-188">
              <paramref name="codeCompileUnit" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="081d4-189">這個執行個體已參考 <see cref="T:System.CodeDom.CodeCompileUnit" />主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-189">This instance already references the subject <see cref="T:System.CodeDom.CodeCompileUnit" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAssembly">
      <MemberSignature Language="C#" Value="public void RemoveAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="081d4-190">要從這個執行個體中移除的 <see cref="T:System.Reflection.Assembly" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-190">The <see cref="T:System.Reflection.Assembly" /> to remove from this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-191">將所有對 <see cref="T:System.Reflection.Assembly" /> 主體的參考從這個執行個體中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-191">Removes all references to the subject <see cref="T:System.Reflection.Assembly" /> from this instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="081d4-192">叫用此方法時引發 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>。</span><span class="sxs-lookup"><span data-stu-id="081d4-192">The <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged> is raised when this method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="081d4-193">
            <paramref name="assembly" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-193">
              <paramref name="assembly" /> is a null reference (<see langword="Nothing" /> in Visual Basic)</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAssemblyReference">
      <MemberSignature Language="C#" Value="public void RemoveAssemblyReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAssemblyReference(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAssemblyReference (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAssemblyReference(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="081d4-194">要移除之 <see cref="T:System.Reflection.Assembly" /> 的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-194">The path of the <see cref="T:System.Reflection.Assembly" /> to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-195">將路徑架構的 <see cref="T:System.Reflection.Assembly" /> 參考從這個執行個體中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-195">Removes a path-based <see cref="T:System.Reflection.Assembly" /> reference from this instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="081d4-196">叫用此方法時引發 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>。</span><span class="sxs-lookup"><span data-stu-id="081d4-196">The <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged> is raised when this method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="081d4-197">
            <paramref name="path" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-197">
              <paramref name="path" /> is a null reference (<see langword="Nothing" /> in Visual Basic)</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveCodeCompileUnit">
      <MemberSignature Language="C#" Value="public void RemoveCodeCompileUnit (System.CodeDom.CodeCompileUnit codeCompileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveCodeCompileUnit(class System.CodeDom.CodeCompileUnit codeCompileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCodeCompileUnit(System::CodeDom::CodeCompileUnit ^ codeCompileUnit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="codeCompileUnit">
          <span data-ttu-id="081d4-198">要移除的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-198">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-199">將所有對 <see cref="T:System.CodeDom.CodeCompileUnit" /> 主體的參考從這個執行個體中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-199">Removes all references to the subject <see cref="T:System.CodeDom.CodeCompileUnit" /> from this instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="081d4-200">叫用此方法時引發 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>。</span><span class="sxs-lookup"><span data-stu-id="081d4-200">The <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged> is raised when this method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="081d4-201">
            <paramref name="codeCompileUnit" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-201">
              <paramref name="codeCompileUnit" /> is a null reference (<see langword="Nothing" /> in Visual Basic)</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLocalAssembly">
      <MemberSignature Language="C#" Value="public void SetLocalAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLocalAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLocalAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="081d4-202">
            <see cref="T:System.Reflection.Assembly" />，用於設定這個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-202">The <see cref="T:System.Reflection.Assembly" /> used to set this value</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="081d4-203">將本機 <see cref="T:System.Reflection.Assembly" /> 的值設定為所參考的 <see cref="T:System.Reflection.Assembly" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-203">Sets the value of the local <see cref="T:System.Reflection.Assembly" /> to the referenced <see cref="T:System.Reflection.Assembly" /> .</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="081d4-204">叫用此方法時引發 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>。</span><span class="sxs-lookup"><span data-stu-id="081d4-204">The <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged> is raised when this method is invoked.</span></span> <span data-ttu-id="081d4-205">在呼叫 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly%28System.Reflection.Assembly%29> 之前先呼叫 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%28System.Reflection.Assembly%29>，否則它對 <xref:System.Workflow.ComponentModel.Compiler.TypeProvider> 不會有任何作用。</span><span class="sxs-lookup"><span data-stu-id="081d4-205">Call <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly%28System.Reflection.Assembly%29> before you call <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%28System.Reflection.Assembly%29> otherwise it has no affect on the <xref:System.Workflow.ComponentModel.Compiler.TypeProvider>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeLoadErrors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;object,Exception&gt; TypeLoadErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;object, class System.Exception&gt; TypeLoadErrors" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeLoadErrors As IDictionary(Of Object, Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::Object ^, Exception ^&gt; ^ TypeLoadErrors { System::Collections::Generic::IDictionary&lt;System::Object ^, Exception ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Compiler.ITypeProvider.TypeLoadErrors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Object,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="081d4-206">取得載入錯誤例外狀況的 <see cref="T:System.Collections.IDictionary" />，該例外狀況由導致 <see cref="T:System.Object" /> 的 <see cref="T:System.Exception" /> 做為索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-206">Gets an <see cref="T:System.Collections.IDictionary" /> of load error exceptions keyed by the <see cref="T:System.Object" /> that causes the <see cref="T:System.Exception" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="081d4-207">載入錯誤例外狀況的 <see cref="T:System.Collections.IDictionary" />，該例外狀況由導致 <see cref="T:System.Object" /> 的 <see cref="T:System.Exception" /> 做為索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-207">An <see cref="T:System.Collections.IDictionary" /> of load error exceptions keyed by the <see cref="T:System.Object" /> that causes the <see cref="T:System.Exception" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="081d4-208">在每次參考這個屬性時，建立一個已更新的中斷 <xref:System.Collections.IDictionary>。</span><span class="sxs-lookup"><span data-stu-id="081d4-208">An updated, detached <xref:System.Collections.IDictionary> is created at each reference to this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeLoadErrorsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TypeLoadErrorsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TypeLoadErrorsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrorsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event TypeLoadErrorsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ TypeLoadErrorsChanged;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Workflow.ComponentModel.Compiler.ITypeProvider.TypeLoadErrorsChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="081d4-209">在修改 <see cref="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors" /> 集合時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-209">Occurs when the collection <see cref="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors" /> is modified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypesChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TypesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TypesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event TypesChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ TypesChanged;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Workflow.ComponentModel.Compiler.ITypeProvider.TypesChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="081d4-210">在修改已定義型別的集合時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="081d4-210">Occurs when the collection of defined types is modified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>