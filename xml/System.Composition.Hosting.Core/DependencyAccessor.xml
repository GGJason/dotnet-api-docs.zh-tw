<Type Name="DependencyAccessor" FullName="System.Composition.Hosting.Core.DependencyAccessor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d0af5d875c75b77042955d92c55644119ff3107f" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49154504" /></Metadata><TypeSignature Language="C#" Value="public abstract class DependencyAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DependencyAccessor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Hosting.Core.DependencyAccessor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DependencyAccessor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyAccessor abstract" />
  <TypeSignature Language="F#" Value="type DependencyAccessor = class" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Hosting</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
    <AssemblyVersion>1.0.33.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="423ab-101">允許 <see cref="T:System.Composition.Hosting.Core.ExportDescriptorProvider" /> 物件找出自身的相依性。</span><span class="sxs-lookup"><span data-stu-id="423ab-101">Allows <see cref="T:System.Composition.Hosting.Core.ExportDescriptorProvider" /> objects to locate their dependencies.</span></span></summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DependencyAccessor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.DependencyAccessor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DependencyAccessor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="423ab-102">初始化 <see cref="T:System.Composition.Hosting.Core.DependencyAccessor" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="423ab-102">Initializes a new instance of the <see cref="T:System.Composition.Hosting.Core.DependencyAccessor" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="423ab-103">這是受保護的建構函式只可以從衍生類別呼叫。</span><span class="sxs-lookup"><span data-stu-id="423ab-103">This is a protected constructor that can only be called from derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPromises">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.ExportDescriptorPromise&gt; GetPromises (System.Composition.Hosting.Core.CompositionContract exportKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Composition.Hosting.Core.ExportDescriptorPromise&gt; GetPromises(class System.Composition.Hosting.Core.CompositionContract exportKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.DependencyAccessor.GetPromises(System.Composition.Hosting.Core.CompositionContract)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetPromises (exportKey As CompositionContract) As IEnumerable(Of ExportDescriptorPromise)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Composition::Hosting::Core::ExportDescriptorPromise ^&gt; ^ GetPromises(System::Composition::Hosting::Core::CompositionContract ^ exportKey);" />
      <MemberSignature Language="F#" Value="abstract member GetPromises : System.Composition.Hosting.Core.CompositionContract -&gt; seq&lt;System.Composition.Hosting.Core.ExportDescriptorPromise&gt;" Usage="dependencyAccessor.GetPromises exportKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.ExportDescriptorPromise&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportKey" Type="System.Composition.Hosting.Core.CompositionContract" />
      </Parameters>
      <Docs>
        <param name="exportKey"><span data-ttu-id="423ab-104">承諾必須提供的匯出金鑰。</span><span class="sxs-lookup"><span data-stu-id="423ab-104">The export key that the promises must supply.</span></span></param>
        <summary><span data-ttu-id="423ab-105">擷取指定之合約的所有承諾。</span><span class="sxs-lookup"><span data-stu-id="423ab-105">Retrieves all promises for the specified contract.</span></span></summary>
        <returns><span data-ttu-id="423ab-106">合約的承諾集合。</span><span class="sxs-lookup"><span data-stu-id="423ab-106">A collection of promises for the contract.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveDependencies">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.CompositionDependency&gt; ResolveDependencies (object site, System.Composition.Hosting.Core.CompositionContract contract, bool isPrerequisite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Composition.Hosting.Core.CompositionDependency&gt; ResolveDependencies(object site, class System.Composition.Hosting.Core.CompositionContract contract, bool isPrerequisite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.DependencyAccessor.ResolveDependencies(System.Object,System.Composition.Hosting.Core.CompositionContract,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveDependencies (site As Object, contract As CompositionContract, isPrerequisite As Boolean) As IEnumerable(Of CompositionDependency)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Composition::Hosting::Core::CompositionDependency ^&gt; ^ ResolveDependencies(System::Object ^ site, System::Composition::Hosting::Core::CompositionContract ^ contract, bool isPrerequisite);" />
      <MemberSignature Language="F#" Value="member this.ResolveDependencies : obj * System.Composition.Hosting.Core.CompositionContract * bool -&gt; seq&lt;System.Composition.Hosting.Core.CompositionDependency&gt;" Usage="dependencyAccessor.ResolveDependencies (site, contract, isPrerequisite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Composition.Hosting.Core.CompositionDependency&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="System.Object" />
        <Parameter Name="contract" Type="System.Composition.Hosting.Core.CompositionContract" />
        <Parameter Name="isPrerequisite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="site"><span data-ttu-id="423ab-107">描述相依性網站的標記。</span><span class="sxs-lookup"><span data-stu-id="423ab-107">A tag that describes the dependency site.</span></span></param>
        <param name="contract"><span data-ttu-id="423ab-108">網站所需的合約。</span><span class="sxs-lookup"><span data-stu-id="423ab-108">The contract required by the site.</span></span></param>
        <param name="isPrerequisite"><span data-ttu-id="423ab-109"><see langword="true" /> 以指出匯出可用之前，必須滿足相依性；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="423ab-109"><see langword="true" /> to indicate that the dependency must be satisfied before exports are made available; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="423ab-110">解析合約中所有實作的相依性。</span><span class="sxs-lookup"><span data-stu-id="423ab-110">Resolves dependencies on all implementations of a contract.</span></span></summary>
        <returns><span data-ttu-id="423ab-111">已解析相依性的集合。</span><span class="sxs-lookup"><span data-stu-id="423ab-111">A collection of resolved dependencies.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveRequiredDependency">
      <MemberSignature Language="C#" Value="public System.Composition.Hosting.Core.CompositionDependency ResolveRequiredDependency (object site, System.Composition.Hosting.Core.CompositionContract contract, bool isPrerequisite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Hosting.Core.CompositionDependency ResolveRequiredDependency(object site, class System.Composition.Hosting.Core.CompositionContract contract, bool isPrerequisite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.DependencyAccessor.ResolveRequiredDependency(System.Object,System.Composition.Hosting.Core.CompositionContract,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveRequiredDependency (site As Object, contract As CompositionContract, isPrerequisite As Boolean) As CompositionDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Hosting::Core::CompositionDependency ^ ResolveRequiredDependency(System::Object ^ site, System::Composition::Hosting::Core::CompositionContract ^ contract, bool isPrerequisite);" />
      <MemberSignature Language="F#" Value="member this.ResolveRequiredDependency : obj * System.Composition.Hosting.Core.CompositionContract * bool -&gt; System.Composition.Hosting.Core.CompositionDependency" Usage="dependencyAccessor.ResolveRequiredDependency (site, contract, isPrerequisite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Hosting.Core.CompositionDependency</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="System.Object" />
        <Parameter Name="contract" Type="System.Composition.Hosting.Core.CompositionContract" />
        <Parameter Name="isPrerequisite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="site"><span data-ttu-id="423ab-112">描述相依性網站的標記。</span><span class="sxs-lookup"><span data-stu-id="423ab-112">A tag that describes the dependency site.</span></span></param>
        <param name="contract"><span data-ttu-id="423ab-113">網站所需的合約。</span><span class="sxs-lookup"><span data-stu-id="423ab-113">The contract required by the site.</span></span></param>
        <param name="isPrerequisite"><span data-ttu-id="423ab-114"><see langword="true" /> 以指出匯出可用之前，必須滿足相依性；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="423ab-114"><see langword="true" /> to indicate that the dependency must be satisfied before exports are made available; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="423ab-115">解析對合約其中一個實作的必要相依性。</span><span class="sxs-lookup"><span data-stu-id="423ab-115">Resolves a required dependency on one implementation of a contract.</span></span></summary>
        <returns><span data-ttu-id="423ab-116">解析的相依性。</span><span class="sxs-lookup"><span data-stu-id="423ab-116">The resolved dependency.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveOptionalDependency">
      <MemberSignature Language="C#" Value="public bool TryResolveOptionalDependency (object site, System.Composition.Hosting.Core.CompositionContract contract, bool isPrerequisite, out System.Composition.Hosting.Core.CompositionDependency dependency);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryResolveOptionalDependency(object site, class System.Composition.Hosting.Core.CompositionContract contract, bool isPrerequisite, [out] class System.Composition.Hosting.Core.CompositionDependency&amp; dependency) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.DependencyAccessor.TryResolveOptionalDependency(System.Object,System.Composition.Hosting.Core.CompositionContract,System.Boolean,System.Composition.Hosting.Core.CompositionDependency@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveOptionalDependency (site As Object, contract As CompositionContract, isPrerequisite As Boolean, ByRef dependency As CompositionDependency) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveOptionalDependency(System::Object ^ site, System::Composition::Hosting::Core::CompositionContract ^ contract, bool isPrerequisite, [Runtime::InteropServices::Out] System::Composition::Hosting::Core::CompositionDependency ^ % dependency);" />
      <MemberSignature Language="F#" Value="member this.TryResolveOptionalDependency : obj * System.Composition.Hosting.Core.CompositionContract * bool *  -&gt; bool" Usage="dependencyAccessor.TryResolveOptionalDependency (site, contract, isPrerequisite, dependency)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Hosting</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="System.Object" />
        <Parameter Name="contract" Type="System.Composition.Hosting.Core.CompositionContract" />
        <Parameter Name="isPrerequisite" Type="System.Boolean" />
        <Parameter Name="dependency" Type="System.Composition.Hosting.Core.CompositionDependency" RefType="out" />
      </Parameters>
      <Docs>
        <param name="site"><span data-ttu-id="423ab-117">描述相依性網站的標記。</span><span class="sxs-lookup"><span data-stu-id="423ab-117">A tag that describes the dependency site.</span></span></param>
        <param name="contract"><span data-ttu-id="423ab-118">網站所需的合約。</span><span class="sxs-lookup"><span data-stu-id="423ab-118">The contract required by the site.</span></span></param>
        <param name="isPrerequisite"><span data-ttu-id="423ab-119"><see langword="true" /> 以指出匯出可用之前，必須滿足相依性；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="423ab-119"><see langword="true" /> to indicate that the dependency must be satisfied before exports are made available; otherwise, <see langword="false" />.</span></span></param>
        <param name="dependency"><span data-ttu-id="423ab-120">這個方法傳回之後，會包含已解析的相依性或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="423ab-120">After this method returns, contains the resolved dependency or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="423ab-121">根據合約的一個實作解析選擇性相依性。</span><span class="sxs-lookup"><span data-stu-id="423ab-121">Resolves an optional dependency on one implementation of a contract.</span></span></summary>
        <returns><span data-ttu-id="423ab-122">如果已解析相依性則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="423ab-122"><see langword="true" /> if the dependency was resolved; otherwise, <see langword="false" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>