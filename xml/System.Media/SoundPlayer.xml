<Type Name="SoundPlayer" FullName="System.Media.SoundPlayer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f5689175ce146f944da27f7a96708300c1e9a48" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460762" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoundPlayer : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable SoundPlayer extends System.ComponentModel.Component implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Media.SoundPlayer" />
  <TypeSignature Language="VB.NET" Value="Public Class SoundPlayer&#xA;Inherits Component&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoundPlayer : System::ComponentModel::Component, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>控制 .wav 檔音效的播放。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Media.SoundPlayer>類別會提供一個簡單的介面，來載入和播放.wav 檔案。 <xref:System.Media.SoundPlayer>類別支援的檔案路徑，URL 中，從載入.wav 檔案<xref:System.IO.Stream>包含.wav 檔案或內嵌的資源包含.wav 檔案。  
  
 若要播放音效使用<xref:System.Media.SoundPlayer>類別中，設定<xref:System.Media.SoundPlayer>以.wav 檔案，並在其中一種播放方法的呼叫路徑。 您可以識別.wav 檔案播放使用其中一種建構函式，或藉由設定 <xref:System.Media.SoundPlayer.SoundLocation%2A>或<xref:System.Media.SoundPlayer.Stream%2A>屬性。 可以使用其中一種負載方法播放之前載入的檔案，或可以延後載入，直到其中一種播放方法呼叫。 A<xref:System.Media.SoundPlayer>設定為載入中的.wav 檔案<xref:System.IO.Stream>或 URL 必須.wav 檔案載入記憶體之前開始播放。  
  
 您可以載入或播放.wav 檔案，以同步或非同步。 如果您呼叫同步的負載，或播放方法，呼叫的執行緒會等到方法傳回時，可能會導致中斷的繪製和其他事件。 呼叫非同步載入或播放方法可讓呼叫執行緒能夠繼續使用不中斷。 如需非同步方法呼叫的詳細資訊，請參閱[How to： 在背景執行作業](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)。  
  
 當<xref:System.Media.SoundPlayer>已完成載入.wav 檔案，便會產生<xref:System.Media.SoundPlayer.LoadCompleted>事件。 您可以檢查<xref:System.ComponentModel.AsyncCompletedEventArgs>在事件處理常式來判斷是否載入成功或失敗。 <xref:System.Media.SoundPlayer.SoundLocationChanged>音訊的來源設定為新的檔案路徑或 URL 時，就會引發事件。 <xref:System.Media.SoundPlayer.StreamChanged>音訊的來源設定為新時，就會引發事件<xref:System.IO.Stream>。 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 如需有關<xref:System.Media.SoundPlayer>，請參閱[SoundPlayer 類別概觀](~/docs/framework/winforms/controls/soundplayer-class-overview.md)。  
  
> [!NOTE]
>  <xref:System.Media.SoundPlayer>類別不能播放其他檔案類型，例如.wma 或.mp3。 如果您想要播放其他檔案類型，您可以使用 Windows Media Player 控制項。 如需詳細資訊，請參閱[在.NET Framework 方案中使用 Windows Media Player 控制項](http://go.microsoft.com/fwlink/?LinkId=131267)和[Windows Media Player 物件模型參考適用於 Visual Basic.NET 和 C#](http://go.microsoft.com/fwlink/?LinkId=131269) Windows Media Player SDK 中.  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer>播放.wav 檔案從本機路徑或統一資源識別元 (URI) 的類別。  
  
 [!code-cpp[System.Windows.Forms.Sound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#1)]
 [!code-csharp[System.Windows.Forms.Sound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#1)]
 [!code-vb[System.Windows.Forms.Sound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Media.SystemSounds" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Media.SoundPlayer" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Media.SoundPlayer" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式初始化<xref:System.Media.SoundPlayer>但沒有音訊的來源。 設定與音訊的來源路徑，直到<xref:System.Media.SoundPlayer>會播放嗶聲音效其中一個播放方法呼叫時。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">到 .wav 檔的 <see cref="T:System.IO.Stream" />。</param>
        <summary>初始化 <see cref="T:System.Media.SoundPlayer" /> 類別的新執行個體，並將 .wav 檔附加到指定的 <see cref="T:System.IO.Stream" /> 中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Stream>傳遞至`stream`參數應該是<xref:System.IO.Stream>包含.wav 檔案。 所傳回的資料<xref:System.IO.Stream.Read%2A>方法<xref:System.IO.Stream>應該是.wav 檔案內的資料。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer (string soundLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string soundLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (soundLocation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer(System::String ^ soundLocation);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="soundLocation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="soundLocation">要載入 .wav 檔的位置。</param>
        <summary>初始化 <see cref="T:System.Media.SoundPlayer" /> 類別的新執行個體，並附加指定的 .wav 檔。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 將字串傳遞至`soundLocation`參數可以是檔案路徑或.wav 檔案的 URL。 如果路徑或 URL 不正確，<xref:System.Media.SoundPlayer>仍會在負載的建構，但後續呼叫，或播放方法將會失敗。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException">
          <paramref name="soundLocation" /> 指定的 URL 值無法解析。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoundPlayer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoundPlayer(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">要用於還原序列化 (Deserialization) 的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
        <param name="context">要用於還原序列化的目的端。</param>
        <summary>初始化 <see cref="T:System.Media.SoundPlayer" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UriFormatException">無法解析在 <paramref name="serializationInfo" /> 中所指定的 <see cref="P:System.Media.SoundPlayer.SoundLocation" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsLoadCompleted">
      <MemberSignature Language="C#" Value="public bool IsLoadCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoadCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.IsLoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoadCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoadCompleted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出 .wav 檔的載入是否順利完成。</summary>
        <value>
          如果已載入 .wav 檔，則為 <see langword="true" />，如果還沒載入 .wav 檔，則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>同步載入音效。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Media.SoundPlayer.Load%2A>方法會使用目前的執行緒載入.wav 檔案，防止執行緒處理其他訊息，直到負載已完成。  
  
> [!CAUTION]
>  <xref:System.Media.SoundPlayer.Load%2A>方法可能產生延遲載入大型.wav 檔案時發生。 此外，在載入完成之前，都會被封鎖繪製和其他事件。 使用<xref:System.Media.SoundPlayer.LoadAsync%2A>以非同步方式載入音效，可讓呼叫執行緒能夠繼續使用不中斷的方法。  
  
 這個方法會引發<xref:System.Media.SoundPlayer.LoadCompleted>事件載入時完成，即使負載不成功。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer.LoadAsync%2A>方法，以將.wav 檔案附加至執行個體的<xref:System.Media.SoundPlayer>類別。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Media.SoundPlayer>類別。  
  
 [!code-cpp[System.Windows.Forms.Sound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#2)]
 [!code-csharp[System.Windows.Forms.Sound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#2)]
 [!code-vb[System.Windows.Forms.Sound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">載入時耗用的時間超過了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 所指定的時間 (以毫秒為單位)。</exception>
        <exception cref="T:System.IO.FileNotFoundException">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的檔案。</exception>
        <permission cref="T:System.Net.WebPermission">用於 HTTP 網際網路資源的存取。 相關聯的列舉型別： <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.LoadAsync" />
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public void LoadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.LoadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用新的執行緒，從資料流或 Web 資源載入 .wav 檔。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Media.SoundPlayer>設定為載入中的.wav 檔案<xref:System.IO.Stream>或 Web 資源，這個方法會開始使用新的執行緒從位置載入.wav 檔案。  
  
 這個方法會引發<xref:System.Media.SoundPlayer.LoadCompleted>事件載入時完成，即使負載不成功。  
  
 如果<xref:System.Media.SoundPlayer>已載入的.wav 檔案從本機檔案路徑，這個方法不會執行任何動作，因為會延後載入，直到播放開始。  
  
 如需非同步載入的詳細資訊，請參閱[如何： 載入音效以非同步方式在 Windows Form 中](~/docs/framework/winforms/controls/how-to-load-a-sound-asynchronously-within-a-windows-form.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer.LoadAsync%2A>方法，以非同步方式載入.wav 檔案以供使用的執行個體<xref:System.Media.SoundPlayer>類別。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Media.SoundPlayer>類別。  
  
 [!code-cpp[System.Windows.Forms.Sound#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#3)]
 [!code-csharp[System.Windows.Forms.Sound#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#3)]
 [!code-vb[System.Windows.Forms.Sound#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">載入時耗用的時間超過了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 所指定的時間 (以毫秒為單位)。</exception>
        <exception cref="T:System.IO.FileNotFoundException">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的檔案。</exception>
        <altmember cref="M:System.Media.SoundPlayer.Load" />
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ LoadCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當.wav 檔載入成功或載入失敗時都會發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .Wav 檔案載入完成時，會引發這個事件。 事件引數，表示是否已順利完成或失敗的聲音負載。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer.OnLoadCompleted%2A>事件處理常式以接收通知，指出已載入.wav 檔案的內容。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Media.SoundPlayer>類別。  
  
 [!code-cpp[System.Windows.Forms.Sound#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#8)]
 [!code-csharp[System.Windows.Forms.Sound#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#8)]
 [!code-vb[System.Windows.Forms.Sound#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadTimeout">
      <MemberSignature Language="C#" Value="public int LoadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LoadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.LoadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LoadTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定時間，以毫秒為單位，表示 .wav 檔載入所須的時間。</summary>
        <value>要等候的毫秒數。 預設值為 10000 (10 秒)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個時間已經過期之後，已取消載入和<xref:System.ServiceProcess.TimeoutException>擲回例外狀況。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoadCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnLoadCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoadCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoadCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoadCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />。</param>
        <summary>引發 <see cref="E:System.Media.SoundPlayer.LoadCompleted" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .Wav 檔案載入完成時，會呼叫這個方法。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="OnSoundLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSoundLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSoundLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSoundLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSoundLocationChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Media.SoundPlayer.SoundLocationChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個方法是新的音效來源路徑時這個<xref:System.Media.SoundPlayer>已設定。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 < 如何： 提供事件的功能和[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="P:System.Media.SoundPlayer.SoundLocation" />
      </Docs>
    </Member>
    <Member MemberName="OnStreamChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStreamChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStreamChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStreamChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStreamChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Media.SoundPlayer.StreamChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當新時，會呼叫這個方法<xref:System.IO.Stream>音訊來源<xref:System.Media.SoundPlayer>已設定。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Media.SoundPlayer.OnStreamChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當在衍生類別中覆寫 <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="P:System.Media.SoundPlayer.Stream" />
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public void Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Play() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Play" />
      <MemberSignature Language="VB.NET" Value="Public Sub Play ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Play();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用新執行緒播放 .wav 檔，如果 .wav 檔還未載入則先將其載入。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Media.SoundPlayer.Play%2A>方法會播放聲音使用新的執行緒。 如果您呼叫<xref:System.Media.SoundPlayer.Play%2A>.wav 檔案載入到記憶體之前，.wav 檔案將會開始播放之前載入。 您可以使用<xref:System.Media.SoundPlayer.LoadAsync%2A>或<xref:System.Media.SoundPlayer.Load%2A>預先載入至記憶體.wav 檔案的方法。 之後.wav 檔案成功載入從<xref:System.IO.Stream>或 to 播放方法的後續呼叫 URL<xref:System.Media.SoundPlayer>不需要重新載入.wav 檔案，直到音效變更路徑。  
  
 如果尚未指定.wav 檔案或無法載入，<xref:System.Media.SoundPlayer.Play%2A>方法將會播放預設的嗶聲音效。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer.Play%2A>以非同步方式播放.wav 檔案的方法。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Media.SoundPlayer>類別。  
  
 [!code-cpp[System.Windows.Forms.Sound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#5)]
 [!code-csharp[System.Windows.Forms.Sound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#5)]
 [!code-vb[System.Windows.Forms.Sound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">載入時耗用的時間超過了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 所指定的時間 (以毫秒為單位)。</exception>
        <exception cref="T:System.IO.FileNotFoundException">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的檔案。</exception>
        <exception cref="T:System.InvalidOperationException">.wav 標頭損毀，<see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的檔案不是 PCM .wav 檔。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">讀取檔案。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">用於原生程式碼存取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.PlayLooping" />
        <altmember cref="M:System.Media.SoundPlayer.PlaySync" />
      </Docs>
    </Member>
    <Member MemberName="PlayLooping">
      <MemberSignature Language="C#" Value="public void PlayLooping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlayLooping() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.PlayLooping" />
      <MemberSignature Language="VB.NET" Value="Public Sub PlayLooping ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlayLooping();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用新執行緒重複循環播放 .wav 檔，如果 .wav 檔還未載入則先將其載入。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Media.SoundPlayer.PlayLooping%2A>方法播放及迴圈使用新的執行緒的聲音。 如果您呼叫<xref:System.Media.SoundPlayer.PlayLooping%2A>.wav 檔案載入到記憶體之前，.wav 檔案將會開始播放之前載入。 您可以使用<xref:System.Media.SoundPlayer.LoadAsync%2A>或<xref:System.Media.SoundPlayer.Load%2A>預先載入至記憶體.wav 檔案的方法。 之後.wav 檔案成功載入從<xref:System.IO.Stream>或 to 播放方法的後續呼叫 URL<xref:System.Media.SoundPlayer>不需要重新載入.wav 檔案，直到音效變更路徑。  
  
 如果尚未指定.wav 檔案或無法載入，<xref:System.Media.SoundPlayer.PlayLooping%2A>方法將會播放預設的嗶聲音效。  
  
 如需有關<xref:System.Media.SoundPlayer.PlayLooping%2A>，請參閱[How to： 循環播放 Windows Form 上播放的聲音](~/docs/framework/winforms/controls/how-to-loop-a-sound-playing-on-a-windows-form.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer.PlayLooping%2A>重複播放.wav 檔案的方法。 直到播放.wav<xref:System.Media.SoundPlayer.Stop%2A>方法呼叫。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Media.SoundPlayer>類別。  
  
 [!code-cpp[System.Windows.Forms.Sound#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#6)]
 [!code-csharp[System.Windows.Forms.Sound#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#6)]
 [!code-vb[System.Windows.Forms.Sound#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">載入時耗用的時間超過了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 所指定的時間 (以毫秒為單位)。</exception>
        <exception cref="T:System.IO.FileNotFoundException">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的檔案。</exception>
        <exception cref="T:System.InvalidOperationException">.wav 標頭損毀，<see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的檔案不是 PCM .wav 檔。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">讀取檔案。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">用於原生程式碼存取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.Play" />
        <altmember cref="M:System.Media.SoundPlayer.PlaySync" />
      </Docs>
    </Member>
    <Member MemberName="PlaySync">
      <MemberSignature Language="C#" Value="public void PlaySync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlaySync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.PlaySync" />
      <MemberSignature Language="VB.NET" Value="Public Sub PlaySync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlaySync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>播放 .wav 檔案，如果 .wav 檔案還未載入則先將其載入。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Media.SoundPlayer.PlaySync%2A>方法會使用目前的執行緒以播放.wav 檔案，防止執行緒處理其他訊息，直到負載已完成。 您可以使用<xref:System.Media.SoundPlayer.LoadAsync%2A>或<xref:System.Media.SoundPlayer.Load%2A>預先載入至記憶體.wav 檔案的方法。 之後.wav 檔案成功載入從<xref:System.IO.Stream>或 to 播放方法的後續呼叫 URL<xref:System.Media.SoundPlayer>不需要重新載入.wav 檔案，直到音效變更路徑。  
  
 如果尚未指定.wav 檔案或無法載入，<xref:System.Media.SoundPlayer.PlaySync%2A>方法將會播放預設的嗶聲音效。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer.PlaySync%2A>同步播放.wav 檔案的方法。  
  
 [!code-cpp[System.Windows.Forms.PlaySync#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/CPP/system.windows.forms.sound.playasync.cpp#1)]
 [!code-csharp[System.Windows.Forms.PlaySync#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/CS/system.windows.forms.sound.playasync.cs#1)]
 [!code-vb[System.Windows.Forms.PlaySync#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/VB/system.windows.forms.sound.playasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">載入時耗用的時間超過了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 所指定的時間 (以毫秒為單位)。</exception>
        <exception cref="T:System.IO.FileNotFoundException">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的檔案。</exception>
        <exception cref="T:System.InvalidOperationException">.wav 標頭損毀，<see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的檔案不是 PCM .wav 檔。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">讀取檔案。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">用於原生程式碼存取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.Play" />
        <altmember cref="M:System.Media.SoundPlayer.PlayLooping" />
      </Docs>
    </Member>
    <Member MemberName="SoundLocation">
      <MemberSignature Language="C#" Value="public string SoundLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SoundLocation" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.SoundLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property SoundLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SoundLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要載入之 .wav 檔的檔案路徑或 URL。</summary>
        <value>要由其載入 .wav 檔的檔案路徑或 URL，如果沒有檔案路徑，則是 <see cref="F:System.String.Empty" />。 預設值為 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性設定為<xref:System.String.Empty?displayProperty=nameWithType>時<xref:System.Media.SoundPlayer.Stream%2A>屬性設定為<xref:System.IO.Stream>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer.SoundLocation%2A>要指派.wav 檔案來源的執行個體內容<xref:System.Media.SoundPlayer>類別。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Media.SoundPlayer>類別。  
  
 [!code-cpp[System.Windows.Forms.Sound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#2)]
 [!code-csharp[System.Windows.Forms.Sound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#2)]
 [!code-vb[System.Windows.Forms.Sound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">尋找檔案。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SoundLocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SoundLocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SoundLocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.SoundLocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SoundLocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SoundLocationChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當這個 <see cref="T:System.Media.SoundPlayer" /> 的新音效來源路徑設定後即會發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 會引發這個事件的新的音效來源路徑時這個<xref:System.Media.SoundPlayer>已設定。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A>接收通知的事件處理常式時<xref:System.Media.SoundPlayer>已附加到不同的.wav 檔案。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Media.SoundPlayer>類別。  
  
 [!code-cpp[System.Windows.Forms.Sound#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#9)]
 [!code-csharp[System.Windows.Forms.Sound#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#9)]
 [!code-vb[System.Windows.Forms.Sound#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果已開始播放則停止播放音效。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer.Stop%2A>中止目前正在播放的.wav 檔案的方法。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Media.SoundPlayer>類別。  
  
 [!code-cpp[System.Windows.Forms.Sound#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#7)]
 [!code-csharp[System.Windows.Forms.Sound#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#7)]
 [!code-vb[System.Windows.Forms.Sound#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">用於原生程式碼存取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="public System.IO.Stream Stream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Stream" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.Stream" />
      <MemberSignature Language="VB.NET" Value="Public Property Stream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Stream { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要由其載入 .wav 檔的 <see cref="T:System.IO.Stream" />。</summary>
        <value>如果沒有可用的資料流，則是要由其載入 .wav 檔的 <see cref="T:System.IO.Stream" />，或 <see langword="null" />。 預設值為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性設定為`null`時<xref:System.Media.SoundPlayer.SoundLocation%2A>屬性設定為新的和有效的聲音位置。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="StreamChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StreamChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StreamChanged" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.StreamChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StreamChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StreamChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當這個 <see cref="T:System.IO.Stream" /> 的新 <see cref="T:System.Media.SoundPlayer" /> 音效來源設定後即會發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當新時，會引發這個事件<xref:System.IO.Stream>音訊來源<xref:System.Media.SoundPlayer>已設定。  
  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">要以資料填入的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
        <param name="context">這個序列化的目的端 (請參閱 <see cref="T:System.Runtime.Serialization.StreamingContext" />)。</param>
        <summary>如需這個成員的描述，請參閱 <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Media.SoundPlayer> 執行個體轉換成 <xref:System.Runtime.Serialization.ISerializable> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Object" />，包含有關 <see cref="T:System.Media.SoundPlayer" /> 的資料。</summary>
        <value>
          <see cref="T:System.Object" />，包含有關 <see cref="T:System.Media.SoundPlayer" /> 的資料。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>