<Type Name="SoundPlayer" FullName="System.Media.SoundPlayer">
  <TypeSignature Language="C#" Value="public class SoundPlayer : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable SoundPlayer extends System.ComponentModel.Component implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Media.SoundPlayer" />
  <TypeSignature Language="VB.NET" Value="Public Class SoundPlayer&#xA;Inherits Component&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoundPlayer : System::ComponentModel::Component, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6254f-101">控制 .wav 檔音效的播放。</span><span class="sxs-lookup"><span data-stu-id="6254f-101">Controls playback of a sound from a .wav file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-102"><xref:System.Media.SoundPlayer>類別會提供一個簡單的介面，來載入和播放.wav 檔案。</span><span class="sxs-lookup"><span data-stu-id="6254f-102">The <xref:System.Media.SoundPlayer> class provides a simple interface for loading and playing a .wav file.</span></span> <span data-ttu-id="6254f-103"><xref:System.Media.SoundPlayer>類別支援的檔案路徑，URL 中，從載入.wav 檔案<xref:System.IO.Stream>包含.wav 檔案或內嵌的資源包含.wav 檔案。</span><span class="sxs-lookup"><span data-stu-id="6254f-103">The <xref:System.Media.SoundPlayer> class supports loading a .wav file from a file path, a URL, a <xref:System.IO.Stream> that contains a .wav file, or an embedded resource that contains a .wav file.</span></span>  
  
 <span data-ttu-id="6254f-104">若要播放音效使用<xref:System.Media.SoundPlayer>類別中，設定<xref:System.Media.SoundPlayer>以.wav 檔案，並在其中一種播放方法的呼叫路徑。</span><span class="sxs-lookup"><span data-stu-id="6254f-104">To play a sound using the <xref:System.Media.SoundPlayer> class, configure a <xref:System.Media.SoundPlayer> with a path to the .wav file and call one of the play methods.</span></span> <span data-ttu-id="6254f-105">您可以識別.wav 檔案播放使用其中一種建構函式，或藉由設定 <xref:System.Media.SoundPlayer.SoundLocation%2A>或<xref:System.Media.SoundPlayer.Stream%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="6254f-105">You can identify the .wav file to play by using one of the constructors or by setting either the <xref:System.Media.SoundPlayer.SoundLocation%2A> or <xref:System.Media.SoundPlayer.Stream%2A> property.</span></span> <span data-ttu-id="6254f-106">可以使用其中一種負載方法播放之前載入的檔案，或可以延後載入，直到其中一種播放方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="6254f-106">The file can be loaded prior to playing by using one of the load methods, or loading can be deferred until one of the play methods is called.</span></span> <span data-ttu-id="6254f-107">A<xref:System.Media.SoundPlayer>設定為載入中的.wav 檔案<xref:System.IO.Stream>或 URL 必須.wav 檔案載入記憶體之前開始播放。</span><span class="sxs-lookup"><span data-stu-id="6254f-107">A <xref:System.Media.SoundPlayer> configured to load a .wav file from a <xref:System.IO.Stream> or URL must load the .wav file into memory before playback begins.</span></span>  
  
 <span data-ttu-id="6254f-108">您可以載入或播放.wav 檔案，以同步或非同步。</span><span class="sxs-lookup"><span data-stu-id="6254f-108">You can load or play a .wav file synchronously or asynchronously.</span></span> <span data-ttu-id="6254f-109">如果您呼叫同步的負載，或播放方法，呼叫的執行緒會等到方法傳回時，可能會導致中斷的繪製和其他事件。</span><span class="sxs-lookup"><span data-stu-id="6254f-109">If you call a synchronous load or play method, the calling thread will wait until the method returns, which may cause painting and other events to be interrupted.</span></span> <span data-ttu-id="6254f-110">呼叫非同步載入或播放方法可讓呼叫執行緒能夠繼續使用不中斷。</span><span class="sxs-lookup"><span data-stu-id="6254f-110">Calling an asynchronous load or play method will allow the calling thread to continue without interruption.</span></span> <span data-ttu-id="6254f-111">如需非同步方法呼叫的詳細資訊，請參閱[How to： 在背景執行作業](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)。</span><span class="sxs-lookup"><span data-stu-id="6254f-111">For more information on asynchronous method calls, see [How to: Run an Operation in the Background](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md).</span></span>  
  
 <span data-ttu-id="6254f-112">當<xref:System.Media.SoundPlayer>已完成載入.wav 檔案，便會產生<xref:System.Media.SoundPlayer.LoadCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="6254f-112">When a <xref:System.Media.SoundPlayer> has finished loading a .wav file, it raises the <xref:System.Media.SoundPlayer.LoadCompleted> event.</span></span> <span data-ttu-id="6254f-113">您可以檢查<xref:System.ComponentModel.AsyncCompletedEventArgs>在事件處理常式來判斷是否載入成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="6254f-113">You can examine the <xref:System.ComponentModel.AsyncCompletedEventArgs> in your event handler to determine if the load succeeded or failed.</span></span> <span data-ttu-id="6254f-114"><xref:System.Media.SoundPlayer.SoundLocationChanged>音訊的來源設定為新的檔案路徑或 URL 時，就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="6254f-114">The <xref:System.Media.SoundPlayer.SoundLocationChanged> event is raised when the audio source is set to a new file path or URL.</span></span> <span data-ttu-id="6254f-115"><xref:System.Media.SoundPlayer.StreamChanged>音訊的來源設定為新時，就會引發事件<xref:System.IO.Stream>。</span><span class="sxs-lookup"><span data-stu-id="6254f-115">The <xref:System.Media.SoundPlayer.StreamChanged> event is raised when the audio source is set to a new <xref:System.IO.Stream>.</span></span> <span data-ttu-id="6254f-116">如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="6254f-116">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="6254f-117">如需有關<xref:System.Media.SoundPlayer>，請參閱[SoundPlayer 類別概觀](~/docs/framework/winforms/controls/soundplayer-class-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="6254f-117">For more information about <xref:System.Media.SoundPlayer>, see [SoundPlayer Class Overview](~/docs/framework/winforms/controls/soundplayer-class-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6254f-118"><xref:System.Media.SoundPlayer>類別不能播放其他檔案類型，例如.wma 或.mp3。</span><span class="sxs-lookup"><span data-stu-id="6254f-118">The <xref:System.Media.SoundPlayer> class cannot play other file types, such as .wma or .mp3.</span></span> <span data-ttu-id="6254f-119">如果您想要播放其他檔案類型，您可以使用 Windows Media Player 控制項。</span><span class="sxs-lookup"><span data-stu-id="6254f-119">If you want to play other file types, you can use the Windows Media Player control.</span></span> <span data-ttu-id="6254f-120">如需詳細資訊，請參閱[在.NET Framework 方案中使用 Windows Media Player 控制項](http://go.microsoft.com/fwlink/?LinkId=131267)和[Windows Media Player 物件模型參考適用於 Visual Basic.NET 和 C#](http://go.microsoft.com/fwlink/?LinkId=131269) Windows Media Player SDK 中.</span><span class="sxs-lookup"><span data-stu-id="6254f-120">For more information, see [Using the Windows Media Player Control in a .NET Framework Solution](http://go.microsoft.com/fwlink/?LinkId=131267) and [Windows Media Player Object Model Reference for Visual Basic .NET and C#](http://go.microsoft.com/fwlink/?LinkId=131269) in the Windows Media Player SDK.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6254f-121">下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer>播放.wav 檔案從本機路徑或統一資源識別元 (URI) 的類別。</span><span class="sxs-lookup"><span data-stu-id="6254f-121">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer> class for playing .wav files from a local path or a Uniform Resource Identifier (URI).</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#1)]
 [!code-csharp[System.Windows.Forms.Sound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#1)]
 [!code-vb[System.Windows.Forms.Sound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Media.SystemSounds" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6254f-122">初始化 <see cref="T:System.Media.SoundPlayer" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="6254f-122">Initializes a new instance of the <see cref="T:System.Media.SoundPlayer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6254f-123">初始化 <see cref="T:System.Media.SoundPlayer" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="6254f-123">Initializes a new instance of the <see cref="T:System.Media.SoundPlayer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-124">這個建構函式初始化<xref:System.Media.SoundPlayer>但沒有音訊的來源。</span><span class="sxs-lookup"><span data-stu-id="6254f-124">This constructor initializes a <xref:System.Media.SoundPlayer> with no audio source.</span></span> <span data-ttu-id="6254f-125">設定與音訊的來源路徑，直到<xref:System.Media.SoundPlayer>會播放嗶聲音效其中一個播放方法呼叫時。</span><span class="sxs-lookup"><span data-stu-id="6254f-125">Until it is configured with an audio source path, the <xref:System.Media.SoundPlayer> will play a beep sound when one of its playback methods is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="6254f-126">到 .wav 檔的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="6254f-126">A <see cref="T:System.IO.Stream" /> to a .wav file.</span></span></param>
        <summary><span data-ttu-id="6254f-127">初始化 <see cref="T:System.Media.SoundPlayer" /> 類別的新執行個體，並將 .wav 檔附加到指定的 <see cref="T:System.IO.Stream" /> 中。</span><span class="sxs-lookup"><span data-stu-id="6254f-127">Initializes a new instance of the <see cref="T:System.Media.SoundPlayer" /> class, and attaches the .wav file within the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-128"><xref:System.IO.Stream>傳遞至`stream`參數應該是<xref:System.IO.Stream>包含.wav 檔案。</span><span class="sxs-lookup"><span data-stu-id="6254f-128">The <xref:System.IO.Stream> passed to the `stream` parameter should be a <xref:System.IO.Stream> containing a .wav file.</span></span> <span data-ttu-id="6254f-129">所傳回的資料<xref:System.IO.Stream.Read%2A>方法<xref:System.IO.Stream>應該是.wav 檔案內的資料。</span><span class="sxs-lookup"><span data-stu-id="6254f-129">The data returned by the <xref:System.IO.Stream.Read%2A> method of the <xref:System.IO.Stream> should be the data within a .wav file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer (string soundLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string soundLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (soundLocation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer(System::String ^ soundLocation);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="soundLocation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="soundLocation"><span data-ttu-id="6254f-130">要載入 .wav 檔的位置。</span><span class="sxs-lookup"><span data-stu-id="6254f-130">The location of a .wav file to load.</span></span></param>
        <summary><span data-ttu-id="6254f-131">初始化 <see cref="T:System.Media.SoundPlayer" /> 類別的新執行個體，並附加指定的 .wav 檔。</span><span class="sxs-lookup"><span data-stu-id="6254f-131">Initializes a new instance of the <see cref="T:System.Media.SoundPlayer" /> class, and attaches the specified .wav file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-132">將字串傳遞至`soundLocation`參數可以是檔案路徑或.wav 檔案的 URL。</span><span class="sxs-lookup"><span data-stu-id="6254f-132">The string passed to the `soundLocation` parameter can be either a file path or a URL to a .wav file.</span></span> <span data-ttu-id="6254f-133">如果路徑或 URL 不正確，<xref:System.Media.SoundPlayer>仍會在負載的建構，但後續呼叫，或播放方法將會失敗。</span><span class="sxs-lookup"><span data-stu-id="6254f-133">If the path or URL is not valid, the <xref:System.Media.SoundPlayer> will still be constructed, but subsequent calls to a load or play method will fail.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="6254f-134"><paramref name="soundLocation" /> 指定的 URL 值無法解析。</span><span class="sxs-lookup"><span data-stu-id="6254f-134">The URL value specified by <paramref name="soundLocation" /> cannot be resolved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoundPlayer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoundPlayer(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="6254f-135">要用於還原序列化 (Deserialization) 的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="6254f-135">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to be used for deserialization.</span></span></param>
        <param name="context"><span data-ttu-id="6254f-136">要用於還原序列化的目的端。</span><span class="sxs-lookup"><span data-stu-id="6254f-136">The destination to be used for deserialization.</span></span></param>
        <summary><span data-ttu-id="6254f-137">初始化 <see cref="T:System.Media.SoundPlayer" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="6254f-137">Initializes a new instance of the <see cref="T:System.Media.SoundPlayer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="6254f-138">無法解析在 <paramref name="serializationInfo" /> 中所指定的 <see cref="P:System.Media.SoundPlayer.SoundLocation" />。</span><span class="sxs-lookup"><span data-stu-id="6254f-138">The <see cref="P:System.Media.SoundPlayer.SoundLocation" /> specified in <paramref name="serializationInfo" /> cannot be resolved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsLoadCompleted">
      <MemberSignature Language="C#" Value="public bool IsLoadCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoadCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.IsLoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoadCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoadCompleted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6254f-139">取得值，指出 .wav 檔的載入是否順利完成。</span><span class="sxs-lookup"><span data-stu-id="6254f-139">Gets a value indicating whether loading of a .wav file has successfully completed.</span></span></summary>
        <value>
          <span data-ttu-id="6254f-140">如果已載入 .wav 檔，則為 <see langword="true" />，如果還沒載入 .wav 檔，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6254f-140"><see langword="true" /> if a .wav file is loaded; <see langword="false" /> if a .wav file has not yet been loaded.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6254f-141">同步載入音效。</span><span class="sxs-lookup"><span data-stu-id="6254f-141">Loads a sound synchronously.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-142"><xref:System.Media.SoundPlayer.Load%2A>方法會使用目前的執行緒載入.wav 檔案，防止執行緒處理其他訊息，直到負載已完成。</span><span class="sxs-lookup"><span data-stu-id="6254f-142">The <xref:System.Media.SoundPlayer.Load%2A> method uses the current thread to load a .wav file, preventing the thread from handling other messages until the load is complete.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="6254f-143"><xref:System.Media.SoundPlayer.Load%2A>方法可能產生延遲載入大型.wav 檔案時發生。</span><span class="sxs-lookup"><span data-stu-id="6254f-143">The <xref:System.Media.SoundPlayer.Load%2A> method may produce a delay while loading a large .wav file.</span></span> <span data-ttu-id="6254f-144">此外，在載入完成之前，都會被封鎖繪製和其他事件。</span><span class="sxs-lookup"><span data-stu-id="6254f-144">In addition, painting and other events will be blocked until the load is completed.</span></span> <span data-ttu-id="6254f-145">使用<xref:System.Media.SoundPlayer.LoadAsync%2A>以非同步方式載入音效，可讓呼叫執行緒能夠繼續使用不中斷的方法。</span><span class="sxs-lookup"><span data-stu-id="6254f-145">Use the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to load a sound asynchronously, which allows the calling thread to continue without interruption.</span></span>  
  
 <span data-ttu-id="6254f-146">這個方法會引發<xref:System.Media.SoundPlayer.LoadCompleted>事件載入時完成，即使負載不成功。</span><span class="sxs-lookup"><span data-stu-id="6254f-146">This method raises the <xref:System.Media.SoundPlayer.LoadCompleted> event when loading completes, even if the load was not successful.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6254f-147">下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer.LoadAsync%2A>方法，以將.wav 檔案附加至執行個體的<xref:System.Media.SoundPlayer>類別。</span><span class="sxs-lookup"><span data-stu-id="6254f-147">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to attach a .wav file to an instance of the <xref:System.Media.SoundPlayer> class.</span></span> <span data-ttu-id="6254f-148">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Media.SoundPlayer>類別。</span><span class="sxs-lookup"><span data-stu-id="6254f-148">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#2)]
 [!code-csharp[System.Windows.Forms.Sound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#2)]
 [!code-vb[System.Windows.Forms.Sound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException"><span data-ttu-id="6254f-149">載入時耗用的時間超過了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 所指定的時間 (以毫秒為單位)。</span><span class="sxs-lookup"><span data-stu-id="6254f-149">The elapsed time during loading exceeds the time, in milliseconds, specified by <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6254f-150">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的檔案。</span><span class="sxs-lookup"><span data-stu-id="6254f-150">The file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> cannot be found.</span></span></exception>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="6254f-151">用於 HTTP 網際網路資源的存取。</span><span class="sxs-lookup"><span data-stu-id="6254f-151">for access to HTTP Internet resources.</span></span> <span data-ttu-id="6254f-152">相關聯的列舉型別： <see cref="F:System.Net.NetworkAccess.Connect" /></span><span class="sxs-lookup"><span data-stu-id="6254f-152">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Connect" /></span></span></permission>
        <altmember cref="M:System.Media.SoundPlayer.LoadAsync" />
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public void LoadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.LoadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6254f-153">使用新的執行緒，從資料流或 Web 資源載入 .wav 檔。</span><span class="sxs-lookup"><span data-stu-id="6254f-153">Loads a .wav file from a stream or a Web resource using a new thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-154">如果<xref:System.Media.SoundPlayer>設定為載入中的.wav 檔案<xref:System.IO.Stream>或 Web 資源，這個方法會開始使用新的執行緒從位置載入.wav 檔案。</span><span class="sxs-lookup"><span data-stu-id="6254f-154">If a <xref:System.Media.SoundPlayer> is configured to load a .wav file from a <xref:System.IO.Stream> or Web resource, this method begins loading a .wav file from the location using a new thread.</span></span>  
  
 <span data-ttu-id="6254f-155">這個方法會引發<xref:System.Media.SoundPlayer.LoadCompleted>事件載入時完成，即使負載不成功。</span><span class="sxs-lookup"><span data-stu-id="6254f-155">This method raises the <xref:System.Media.SoundPlayer.LoadCompleted> event when loading completes, even if the load was not successful.</span></span>  
  
 <span data-ttu-id="6254f-156">如果<xref:System.Media.SoundPlayer>已載入的.wav 檔案從本機檔案路徑，這個方法不會執行任何動作，因為會延後載入，直到播放開始。</span><span class="sxs-lookup"><span data-stu-id="6254f-156">If a <xref:System.Media.SoundPlayer> is configured to load a .wav file from a local file path, this method does nothing, because loading is deferred until playing begins.</span></span>  
  
 <span data-ttu-id="6254f-157">如需非同步載入的詳細資訊，請參閱[如何： 載入音效以非同步方式在 Windows Form 中](~/docs/framework/winforms/controls/how-to-load-a-sound-asynchronously-within-a-windows-form.md)。</span><span class="sxs-lookup"><span data-stu-id="6254f-157">For more information about asynchronous loading, see [How to: Load a Sound Asynchronously within a Windows Form](~/docs/framework/winforms/controls/how-to-load-a-sound-asynchronously-within-a-windows-form.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6254f-158">下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer.LoadAsync%2A>方法，以非同步方式載入.wav 檔案以供使用的執行個體<xref:System.Media.SoundPlayer>類別。</span><span class="sxs-lookup"><span data-stu-id="6254f-158">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to asynchronously load a .wav file for use by an instance of the <xref:System.Media.SoundPlayer> class.</span></span> <span data-ttu-id="6254f-159">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Media.SoundPlayer>類別。</span><span class="sxs-lookup"><span data-stu-id="6254f-159">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#3)]
 [!code-csharp[System.Windows.Forms.Sound#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#3)]
 [!code-vb[System.Windows.Forms.Sound#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException"><span data-ttu-id="6254f-160">載入時耗用的時間超過了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 所指定的時間 (以毫秒為單位)。</span><span class="sxs-lookup"><span data-stu-id="6254f-160">The elapsed time during loading exceeds the time, in milliseconds, specified by <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6254f-161">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的檔案。</span><span class="sxs-lookup"><span data-stu-id="6254f-161">The file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> cannot be found.</span></span></exception>
        <altmember cref="M:System.Media.SoundPlayer.Load" />
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ LoadCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6254f-162">當.wav 檔載入成功或載入失敗時都會發生。</span><span class="sxs-lookup"><span data-stu-id="6254f-162">Occurs when a .wav file has been successfully or unsuccessfully loaded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-163">.Wav 檔案載入完成時，會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="6254f-163">This event is raised when loading of a .wav file is complete.</span></span> <span data-ttu-id="6254f-164">事件引數，表示是否已順利完成或失敗的聲音負載。</span><span class="sxs-lookup"><span data-stu-id="6254f-164">The event arguments indicate whether the load of the sound was completed successfully or failed.</span></span>  
  
 <span data-ttu-id="6254f-165">如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="6254f-165">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6254f-166">下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer.OnLoadCompleted%2A>事件處理常式以接收通知，指出已載入.wav 檔案的內容。</span><span class="sxs-lookup"><span data-stu-id="6254f-166">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> event handler to receive a notification indicating that the contents of a .wav file have been loaded.</span></span> <span data-ttu-id="6254f-167">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Media.SoundPlayer>類別。</span><span class="sxs-lookup"><span data-stu-id="6254f-167">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#8)]
 [!code-csharp[System.Windows.Forms.Sound#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#8)]
 [!code-vb[System.Windows.Forms.Sound#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadTimeout">
      <MemberSignature Language="C#" Value="public int LoadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LoadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.LoadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LoadTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6254f-168">取得或設定時間，以毫秒為單位，表示 .wav 檔載入所須的時間。</span><span class="sxs-lookup"><span data-stu-id="6254f-168">Gets or sets the time, in milliseconds, in which the .wav file must load.</span></span></summary>
        <value><span data-ttu-id="6254f-169">要等候的毫秒數。</span><span class="sxs-lookup"><span data-stu-id="6254f-169">The number of milliseconds to wait.</span></span> <span data-ttu-id="6254f-170">預設值為 10000 (10 秒)。</span><span class="sxs-lookup"><span data-stu-id="6254f-170">The default is 10000 (10 seconds).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-171">這個時間已經過期之後，已取消載入和<xref:System.ServiceProcess.TimeoutException>擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="6254f-171">After this time has expired, the loading is canceled and a <xref:System.ServiceProcess.TimeoutException> exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoadCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnLoadCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoadCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoadCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoadCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="6254f-172">包含事件資料的 <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="6254f-172">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="6254f-173">引發 <see cref="E:System.Media.SoundPlayer.LoadCompleted" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="6254f-173">Raises the <see cref="E:System.Media.SoundPlayer.LoadCompleted" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-174">.Wav 檔案載入完成時，會呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="6254f-174">This method is called when loading of a .wav file is complete.</span></span>  
  
 <span data-ttu-id="6254f-175">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="6254f-175">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="6254f-176">如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="6254f-176">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="6254f-177"><xref:System.Media.SoundPlayer.OnLoadCompleted%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="6254f-177">The <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="6254f-178">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="6254f-178">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="6254f-179">當在衍生類別中覆寫 <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> 方法，使已註冊的委派能接收到事件。</span><span class="sxs-lookup"><span data-stu-id="6254f-179">When overriding <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="OnSoundLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSoundLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSoundLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSoundLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSoundLocationChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="6254f-180">包含事件資料的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="6254f-180">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="6254f-181">引發 <see cref="E:System.Media.SoundPlayer.SoundLocationChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="6254f-181">Raises the <see cref="E:System.Media.SoundPlayer.SoundLocationChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-182">呼叫這個方法是新的音效來源路徑時這個<xref:System.Media.SoundPlayer>已設定。</span><span class="sxs-lookup"><span data-stu-id="6254f-182">This method is called when a new audio source path for this <xref:System.Media.SoundPlayer> has been set.</span></span>  
  
 <span data-ttu-id="6254f-183">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="6254f-183">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="6254f-184">如需詳細資訊，請參閱 < 如何： 提供事件的功能和[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="6254f-184">For more information, see How to: Provide Event functionality and [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="6254f-185"><xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="6254f-185">The <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="6254f-186">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="6254f-186">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="6254f-187">當在衍生類別中覆寫 <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</span><span class="sxs-lookup"><span data-stu-id="6254f-187">When overriding <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="P:System.Media.SoundPlayer.SoundLocation" />
      </Docs>
    </Member>
    <Member MemberName="OnStreamChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStreamChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStreamChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStreamChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStreamChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="6254f-188">包含事件資料的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="6254f-188">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="6254f-189">引發 <see cref="E:System.Media.SoundPlayer.StreamChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="6254f-189">Raises the <see cref="E:System.Media.SoundPlayer.StreamChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-190">當新時，會呼叫這個方法<xref:System.IO.Stream>音訊來源<xref:System.Media.SoundPlayer>已設定。</span><span class="sxs-lookup"><span data-stu-id="6254f-190">This method is called when a new <xref:System.IO.Stream> audio source for this <xref:System.Media.SoundPlayer> has been set.</span></span>  
  
 <span data-ttu-id="6254f-191">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="6254f-191">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="6254f-192">如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="6254f-192">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="6254f-193"><xref:System.Media.SoundPlayer.OnStreamChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="6254f-193">The <xref:System.Media.SoundPlayer.OnStreamChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="6254f-194">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="6254f-194">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="6254f-195">當在衍生類別中覆寫 <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</span><span class="sxs-lookup"><span data-stu-id="6254f-195">When overriding <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="P:System.Media.SoundPlayer.Stream" />
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public void Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Play() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Play" />
      <MemberSignature Language="VB.NET" Value="Public Sub Play ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Play();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6254f-196">使用新執行緒播放 .wav 檔，如果 .wav 檔還未載入則先將其載入。</span><span class="sxs-lookup"><span data-stu-id="6254f-196">Plays the .wav file using a new thread, and loads the .wav file first if it has not been loaded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-197"><xref:System.Media.SoundPlayer.Play%2A>方法會播放聲音使用新的執行緒。</span><span class="sxs-lookup"><span data-stu-id="6254f-197">The <xref:System.Media.SoundPlayer.Play%2A> method plays the sound using a new thread.</span></span> <span data-ttu-id="6254f-198">如果您呼叫<xref:System.Media.SoundPlayer.Play%2A>.wav 檔案載入到記憶體之前，.wav 檔案將會開始播放之前載入。</span><span class="sxs-lookup"><span data-stu-id="6254f-198">If you call <xref:System.Media.SoundPlayer.Play%2A> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts.</span></span> <span data-ttu-id="6254f-199">您可以使用<xref:System.Media.SoundPlayer.LoadAsync%2A>或<xref:System.Media.SoundPlayer.Load%2A>預先載入至記憶體.wav 檔案的方法。</span><span class="sxs-lookup"><span data-stu-id="6254f-199">You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance.</span></span> <span data-ttu-id="6254f-200">之後.wav 檔案成功載入從<xref:System.IO.Stream>或 to 播放方法的後續呼叫 URL<xref:System.Media.SoundPlayer>不需要重新載入.wav 檔案，直到音效變更路徑。</span><span class="sxs-lookup"><span data-stu-id="6254f-200">After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.</span></span>  
  
 <span data-ttu-id="6254f-201">如果尚未指定.wav 檔案或無法載入，<xref:System.Media.SoundPlayer.Play%2A>方法將會播放預設的嗶聲音效。</span><span class="sxs-lookup"><span data-stu-id="6254f-201">If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.Play%2A> method will play the default beep sound.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6254f-202">下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer.Play%2A>以非同步方式播放.wav 檔案的方法。</span><span class="sxs-lookup"><span data-stu-id="6254f-202">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.Play%2A> method to asynchronously play a .wav file.</span></span> <span data-ttu-id="6254f-203">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Media.SoundPlayer>類別。</span><span class="sxs-lookup"><span data-stu-id="6254f-203">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#5)]
 [!code-csharp[System.Windows.Forms.Sound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#5)]
 [!code-vb[System.Windows.Forms.Sound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException"><span data-ttu-id="6254f-204">載入時耗用的時間超過了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 所指定的時間 (以毫秒為單位)。</span><span class="sxs-lookup"><span data-stu-id="6254f-204">The elapsed time during loading exceeds the time, in milliseconds, specified by <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6254f-205">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的檔案。</span><span class="sxs-lookup"><span data-stu-id="6254f-205">The file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> cannot be found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6254f-206">.wav 標頭損毀，<see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的檔案不是 PCM .wav 檔。</span><span class="sxs-lookup"><span data-stu-id="6254f-206">The .wav header is corrupted; the file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> is not a PCM .wav file.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="6254f-207">讀取檔案。</span><span class="sxs-lookup"><span data-stu-id="6254f-207">for reading files.</span></span> <span data-ttu-id="6254f-208">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="6254f-208">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="6254f-209">用於原生程式碼存取。</span><span class="sxs-lookup"><span data-stu-id="6254f-209">for access to native code.</span></span> <span data-ttu-id="6254f-210">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span><span class="sxs-lookup"><span data-stu-id="6254f-210">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span></span></permission>
        <altmember cref="M:System.Media.SoundPlayer.PlayLooping" />
        <altmember cref="M:System.Media.SoundPlayer.PlaySync" />
      </Docs>
    </Member>
    <Member MemberName="PlayLooping">
      <MemberSignature Language="C#" Value="public void PlayLooping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlayLooping() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.PlayLooping" />
      <MemberSignature Language="VB.NET" Value="Public Sub PlayLooping ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlayLooping();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6254f-211">使用新執行緒重複循環播放 .wav 檔，如果 .wav 檔還未載入則先將其載入。</span><span class="sxs-lookup"><span data-stu-id="6254f-211">Plays and loops the .wav file using a new thread, and loads the .wav file first if it has not been loaded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-212"><xref:System.Media.SoundPlayer.PlayLooping%2A>方法播放及迴圈使用新的執行緒的聲音。</span><span class="sxs-lookup"><span data-stu-id="6254f-212">The <xref:System.Media.SoundPlayer.PlayLooping%2A> method plays and loops the sound using a new thread.</span></span> <span data-ttu-id="6254f-213">如果您呼叫<xref:System.Media.SoundPlayer.PlayLooping%2A>.wav 檔案載入到記憶體之前，.wav 檔案將會開始播放之前載入。</span><span class="sxs-lookup"><span data-stu-id="6254f-213">If you call <xref:System.Media.SoundPlayer.PlayLooping%2A> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts.</span></span> <span data-ttu-id="6254f-214">您可以使用<xref:System.Media.SoundPlayer.LoadAsync%2A>或<xref:System.Media.SoundPlayer.Load%2A>預先載入至記憶體.wav 檔案的方法。</span><span class="sxs-lookup"><span data-stu-id="6254f-214">You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance.</span></span> <span data-ttu-id="6254f-215">之後.wav 檔案成功載入從<xref:System.IO.Stream>或 to 播放方法的後續呼叫 URL<xref:System.Media.SoundPlayer>不需要重新載入.wav 檔案，直到音效變更路徑。</span><span class="sxs-lookup"><span data-stu-id="6254f-215">After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.</span></span>  
  
 <span data-ttu-id="6254f-216">如果尚未指定.wav 檔案或無法載入，<xref:System.Media.SoundPlayer.PlayLooping%2A>方法將會播放預設的嗶聲音效。</span><span class="sxs-lookup"><span data-stu-id="6254f-216">If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.PlayLooping%2A> method will play the default beep sound.</span></span>  
  
 <span data-ttu-id="6254f-217">如需有關<xref:System.Media.SoundPlayer.PlayLooping%2A>，請參閱[How to： 循環播放 Windows Form 上播放的聲音](~/docs/framework/winforms/controls/how-to-loop-a-sound-playing-on-a-windows-form.md)。</span><span class="sxs-lookup"><span data-stu-id="6254f-217">For more information about <xref:System.Media.SoundPlayer.PlayLooping%2A>, see [How to: Loop a Sound Playing on a Windows Form](~/docs/framework/winforms/controls/how-to-loop-a-sound-playing-on-a-windows-form.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6254f-218">下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer.PlayLooping%2A>重複播放.wav 檔案的方法。</span><span class="sxs-lookup"><span data-stu-id="6254f-218">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.PlayLooping%2A> method to repeatedly play a .wav file.</span></span> <span data-ttu-id="6254f-219">直到播放.wav<xref:System.Media.SoundPlayer.Stop%2A>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="6254f-219">The .wav will be played until the <xref:System.Media.SoundPlayer.Stop%2A> method is called.</span></span> <span data-ttu-id="6254f-220">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Media.SoundPlayer>類別。</span><span class="sxs-lookup"><span data-stu-id="6254f-220">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#6)]
 [!code-csharp[System.Windows.Forms.Sound#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#6)]
 [!code-vb[System.Windows.Forms.Sound#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException"><span data-ttu-id="6254f-221">載入時耗用的時間超過了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 所指定的時間 (以毫秒為單位)。</span><span class="sxs-lookup"><span data-stu-id="6254f-221">The elapsed time during loading exceeds the time, in milliseconds, specified by <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6254f-222">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的檔案。</span><span class="sxs-lookup"><span data-stu-id="6254f-222">The file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> cannot be found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6254f-223">.wav 標頭損毀，<see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的檔案不是 PCM .wav 檔。</span><span class="sxs-lookup"><span data-stu-id="6254f-223">The .wav header is corrupted; the file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> is not a PCM .wav file.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="6254f-224">讀取檔案。</span><span class="sxs-lookup"><span data-stu-id="6254f-224">for reading files.</span></span> <span data-ttu-id="6254f-225">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="6254f-225">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="6254f-226">用於原生程式碼存取。</span><span class="sxs-lookup"><span data-stu-id="6254f-226">for access to native code.</span></span> <span data-ttu-id="6254f-227">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span><span class="sxs-lookup"><span data-stu-id="6254f-227">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span></span></permission>
        <altmember cref="M:System.Media.SoundPlayer.Play" />
        <altmember cref="M:System.Media.SoundPlayer.PlaySync" />
      </Docs>
    </Member>
    <Member MemberName="PlaySync">
      <MemberSignature Language="C#" Value="public void PlaySync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlaySync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.PlaySync" />
      <MemberSignature Language="VB.NET" Value="Public Sub PlaySync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlaySync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6254f-228">播放 .wav 檔案，如果 .wav 檔案還未載入則先將其載入。</span><span class="sxs-lookup"><span data-stu-id="6254f-228">Plays the .wav file and loads the .wav file first if it has not been loaded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-229"><xref:System.Media.SoundPlayer.PlaySync%2A>方法會使用目前的執行緒以播放.wav 檔案，防止執行緒處理其他訊息，直到負載已完成。</span><span class="sxs-lookup"><span data-stu-id="6254f-229">The <xref:System.Media.SoundPlayer.PlaySync%2A> method uses the current thread to play a .wav file, preventing the thread from handling other messages until the load is complete.</span></span> <span data-ttu-id="6254f-230">您可以使用<xref:System.Media.SoundPlayer.LoadAsync%2A>或<xref:System.Media.SoundPlayer.Load%2A>預先載入至記憶體.wav 檔案的方法。</span><span class="sxs-lookup"><span data-stu-id="6254f-230">You can use the <xref:System.Media.SoundPlayer.LoadAsync%2A> or <xref:System.Media.SoundPlayer.Load%2A> method to load the .wav file to memory in advance.</span></span> <span data-ttu-id="6254f-231">之後.wav 檔案成功載入從<xref:System.IO.Stream>或 to 播放方法的後續呼叫 URL<xref:System.Media.SoundPlayer>不需要重新載入.wav 檔案，直到音效變更路徑。</span><span class="sxs-lookup"><span data-stu-id="6254f-231">After a .wav file is successfully loaded from a <xref:System.IO.Stream> or URL, future calls to playback methods for the <xref:System.Media.SoundPlayer> will not need to reload the .wav file until the path for the sound changes.</span></span>  
  
 <span data-ttu-id="6254f-232">如果尚未指定.wav 檔案或無法載入，<xref:System.Media.SoundPlayer.PlaySync%2A>方法將會播放預設的嗶聲音效。</span><span class="sxs-lookup"><span data-stu-id="6254f-232">If the .wav file has not been specified or it fails to load, the <xref:System.Media.SoundPlayer.PlaySync%2A> method will play the default beep sound.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6254f-233">下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer.PlaySync%2A>同步播放.wav 檔案的方法。</span><span class="sxs-lookup"><span data-stu-id="6254f-233">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.PlaySync%2A> method to synchronously play a .wav file.</span></span>  
  
 [!code-cpp[System.Windows.Forms.PlaySync#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/CPP/system.windows.forms.sound.playasync.cpp#1)]
 [!code-csharp[System.Windows.Forms.PlaySync#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/CS/system.windows.forms.sound.playasync.cs#1)]
 [!code-vb[System.Windows.Forms.PlaySync#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/VB/system.windows.forms.sound.playasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException"><span data-ttu-id="6254f-234">載入時耗用的時間超過了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 所指定的時間 (以毫秒為單位)。</span><span class="sxs-lookup"><span data-stu-id="6254f-234">The elapsed time during loading exceeds the time, in milliseconds, specified by <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6254f-235">找不到 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的檔案。</span><span class="sxs-lookup"><span data-stu-id="6254f-235">The file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> cannot be found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6254f-236">.wav 標頭損毀，<see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的檔案不是 PCM .wav 檔。</span><span class="sxs-lookup"><span data-stu-id="6254f-236">The .wav header is corrupted; the file specified by <see cref="P:System.Media.SoundPlayer.SoundLocation" /> is not a PCM .wav file.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="6254f-237">讀取檔案。</span><span class="sxs-lookup"><span data-stu-id="6254f-237">for reading files.</span></span> <span data-ttu-id="6254f-238">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="6254f-238">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="6254f-239">用於原生程式碼存取。</span><span class="sxs-lookup"><span data-stu-id="6254f-239">for access to native code.</span></span> <span data-ttu-id="6254f-240">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span><span class="sxs-lookup"><span data-stu-id="6254f-240">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span></span></permission>
        <altmember cref="M:System.Media.SoundPlayer.Play" />
        <altmember cref="M:System.Media.SoundPlayer.PlayLooping" />
      </Docs>
    </Member>
    <Member MemberName="SoundLocation">
      <MemberSignature Language="C#" Value="public string SoundLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SoundLocation" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.SoundLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property SoundLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SoundLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6254f-241">取得或設定要載入之 .wav 檔的檔案路徑或 URL。</span><span class="sxs-lookup"><span data-stu-id="6254f-241">Gets or sets the file path or URL of the .wav file to load.</span></span></summary>
        <value><span data-ttu-id="6254f-242">要由其載入 .wav 檔的檔案路徑或 URL，如果沒有檔案路徑，則是 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="6254f-242">The file path or URL from which to load a .wav file, or <see cref="F:System.String.Empty" /> if no file path is present.</span></span> <span data-ttu-id="6254f-243">預設值為 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="6254f-243">The default is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-244">這個屬性設定為<xref:System.String.Empty?displayProperty=nameWithType>時<xref:System.Media.SoundPlayer.Stream%2A>屬性設定為<xref:System.IO.Stream>。</span><span class="sxs-lookup"><span data-stu-id="6254f-244">This property is set to <xref:System.String.Empty?displayProperty=nameWithType> when the <xref:System.Media.SoundPlayer.Stream%2A> property is set to a <xref:System.IO.Stream>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6254f-245">下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer.SoundLocation%2A>要指派.wav 檔案來源的執行個體內容<xref:System.Media.SoundPlayer>類別。</span><span class="sxs-lookup"><span data-stu-id="6254f-245">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.SoundLocation%2A> property to assign the .wav file source to an instance of the <xref:System.Media.SoundPlayer> class.</span></span> <span data-ttu-id="6254f-246">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Media.SoundPlayer>類別。</span><span class="sxs-lookup"><span data-stu-id="6254f-246">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#2)]
 [!code-csharp[System.Windows.Forms.Sound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#2)]
 [!code-vb[System.Windows.Forms.Sound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="6254f-247">尋找檔案。</span><span class="sxs-lookup"><span data-stu-id="6254f-247">for finding files.</span></span> <span data-ttu-id="6254f-248">相關聯的列舉型別： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="6254f-248">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SoundLocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SoundLocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SoundLocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.SoundLocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SoundLocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SoundLocationChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6254f-249">當這個 <see cref="T:System.Media.SoundPlayer" /> 的新音效來源路徑設定後即會發生。</span><span class="sxs-lookup"><span data-stu-id="6254f-249">Occurs when a new audio source path for this <see cref="T:System.Media.SoundPlayer" /> has been set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-250">會引發這個事件的新的音效來源路徑時這個<xref:System.Media.SoundPlayer>已設定。</span><span class="sxs-lookup"><span data-stu-id="6254f-250">This event is raised when a new audio source path for this <xref:System.Media.SoundPlayer> has been set.</span></span>  
  
 <span data-ttu-id="6254f-251">如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="6254f-251">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6254f-252">下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A>接收通知的事件處理常式時<xref:System.Media.SoundPlayer>已附加到不同的.wav 檔案。</span><span class="sxs-lookup"><span data-stu-id="6254f-252">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> event handler to receive a notification when the <xref:System.Media.SoundPlayer> has been attached to a different .wav file.</span></span> <span data-ttu-id="6254f-253">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Media.SoundPlayer>類別。</span><span class="sxs-lookup"><span data-stu-id="6254f-253">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#9)]
 [!code-csharp[System.Windows.Forms.Sound#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#9)]
 [!code-vb[System.Windows.Forms.Sound#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6254f-254">如果已開始播放則停止播放音效。</span><span class="sxs-lookup"><span data-stu-id="6254f-254">Stops playback of the sound if playback is occurring.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6254f-255">下列程式碼範例示範如何使用<xref:System.Media.SoundPlayer.Stop%2A>中止目前正在播放的.wav 檔案的方法。</span><span class="sxs-lookup"><span data-stu-id="6254f-255">The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.Stop%2A> method to halt a .wav file that is currently playing.</span></span> <span data-ttu-id="6254f-256">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Media.SoundPlayer>類別。</span><span class="sxs-lookup"><span data-stu-id="6254f-256">This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Sound#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#7)]
 [!code-csharp[System.Windows.Forms.Sound#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#7)]
 [!code-vb[System.Windows.Forms.Sound#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="6254f-257">用於原生程式碼存取。</span><span class="sxs-lookup"><span data-stu-id="6254f-257">for access to native code.</span></span> <span data-ttu-id="6254f-258">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span><span class="sxs-lookup"><span data-stu-id="6254f-258">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="public System.IO.Stream Stream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Stream" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.Stream" />
      <MemberSignature Language="VB.NET" Value="Public Property Stream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Stream { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6254f-259">取得或設定要由其載入 .wav 檔的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="6254f-259">Gets or sets the <see cref="T:System.IO.Stream" /> from which to load the .wav file.</span></span></summary>
        <value><span data-ttu-id="6254f-260">如果沒有可用的資料流，則是要由其載入 .wav 檔的 <see cref="T:System.IO.Stream" />，或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6254f-260">A <see cref="T:System.IO.Stream" /> from which to load the .wav file, or <see langword="null" /> if no stream is available.</span></span> <span data-ttu-id="6254f-261">預設值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6254f-261">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-262">這個屬性設定為`null`時<xref:System.Media.SoundPlayer.SoundLocation%2A>屬性設定為新的和有效的聲音位置。</span><span class="sxs-lookup"><span data-stu-id="6254f-262">This property is set to `null` when the <xref:System.Media.SoundPlayer.SoundLocation%2A> property is set to a new and valid sound location.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="StreamChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StreamChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StreamChanged" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.StreamChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StreamChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StreamChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6254f-263">當這個 <see cref="T:System.IO.Stream" /> 的新 <see cref="T:System.Media.SoundPlayer" /> 音效來源設定後即會發生。</span><span class="sxs-lookup"><span data-stu-id="6254f-263">Occurs when a new <see cref="T:System.IO.Stream" /> audio source for this <see cref="T:System.Media.SoundPlayer" /> has been set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-264">當新時，會引發這個事件<xref:System.IO.Stream>音訊來源<xref:System.Media.SoundPlayer>已設定。</span><span class="sxs-lookup"><span data-stu-id="6254f-264">This event is raised when a new <xref:System.IO.Stream> audio source for this <xref:System.Media.SoundPlayer> has been set.</span></span>  
  
 <span data-ttu-id="6254f-265">如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="6254f-265">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="6254f-266">要以資料填入的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="6254f-266">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="6254f-267">這個序列化的目的端 (請參閱 <see cref="T:System.Runtime.Serialization.StreamingContext" />)。</span><span class="sxs-lookup"><span data-stu-id="6254f-267">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</span></span></param>
        <summary><span data-ttu-id="6254f-268">如需這個成員的描述，請參閱 <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="6254f-268">For a description of this member, see the <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6254f-269">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="6254f-269">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6254f-270">只有在 <xref:System.Media.SoundPlayer> 執行個體轉換成 <xref:System.Runtime.Serialization.ISerializable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="6254f-270">It can be used only when the <xref:System.Media.SoundPlayer> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6254f-271">取得或設定 <see cref="T:System.Object" />，包含有關 <see cref="T:System.Media.SoundPlayer" /> 的資料。</span><span class="sxs-lookup"><span data-stu-id="6254f-271">Gets or sets the <see cref="T:System.Object" /> that contains data about the <see cref="T:System.Media.SoundPlayer" />.</span></span></summary>
        <value><span data-ttu-id="6254f-272"><see cref="T:System.Object" />，包含有關 <see cref="T:System.Media.SoundPlayer" /> 的資料。</span><span class="sxs-lookup"><span data-stu-id="6254f-272">An <see cref="T:System.Object" /> that contains data about the <see cref="T:System.Media.SoundPlayer" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>