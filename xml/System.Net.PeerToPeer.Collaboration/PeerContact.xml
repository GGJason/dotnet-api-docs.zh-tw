<Type Name="PeerContact" FullName="System.Net.PeerToPeer.Collaboration.PeerContact">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b21e89347060629476ec95864ff308ec41b99886" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53295588" /></Metadata><TypeSignature Language="C#" Value="public class PeerContact : System.Net.PeerToPeer.Collaboration.Peer, IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerContact extends System.Net.PeerToPeer.Collaboration.Peer implements class System.IEquatable`1&lt;class System.Net.PeerToPeer.Collaboration.PeerContact&gt;, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerContact&#xA;Inherits Peer&#xA;Implements IEquatable(Of PeerContact), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerContact : System::Net::PeerToPeer::Collaboration::Peer, IEquatable&lt;System::Net::PeerToPeer::Collaboration::PeerContact ^&gt;, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerContact = class&#xA;    inherit Peer&#xA;    interface IEquatable&lt;PeerContact&gt;&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.PeerToPeer.Collaboration.Peer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>代表使用者已擷取其擴充資訊的對等電腦。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 連絡人代表受信任的對等。 A<xref:System.Net.PeerToPeer.Collaboration.PeerContact>物件必須由遠端對等或<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>「 近端分享 」 範圍外時，與遠端對等共同作業使用者。 A<xref:System.Net.PeerToPeer.Collaboration.PeerContact>物件可以存在於其中一個在遠端電腦或遠端電腦的使用者上執行的應用程式。 此類別的執行個體可以新增至<xref:System.Net.PeerToPeer.Collaboration.ContactManager>永續性的方式儲存的連絡資訊。  
  
 從應用程式邀請<xref:System.Net.PeerToPeer.Collaboration.PeerContact>通過驗證並加密。  接受或拒絕來自對等連絡人的邀請的 UI 對話方塊也會指出邀請者是受信任。  
  
 訂閱<xref:System.Net.PeerToPeer.Collaboration.PeerContact>物件表示遠端對等電腦可以看到其已註冊的應用程式、 物件和目前狀態資訊。 若要訂閱<xref:System.Net.PeerToPeer.Collaboration.PeerContact>，呼叫端必須登入，才能對等共同作業基礎結構，透過<xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A>或透過 Windows UI 登入。  所有其他作業不需要登入。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerContact (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerContact(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.Collaboration.PeerContact : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.Collaboration.PeerContact" Usage="new System.Net.PeerToPeer.Collaboration.PeerContact (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">與 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 關聯的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</param>
        <param name="streamingContext">與 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 關聯的序列化目的地。</param>
        <summary>這個類別沒有定義任何公用建構函式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此物件的執行個體可以取自<xref:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact%2A><xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact%2A>或<xref:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.Peer" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ApplicationChanged As EventHandler(Of ApplicationChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^&gt; ^ ApplicationChanged;" />
      <MemberSignature Language="F#" Value="member this.ApplicationChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " Usage="member this.ApplicationChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>與 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 相關聯的應用程式變更時，就會引發這個事件。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件已被處置。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Credentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Credentials As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ Credentials { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定由這個 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 執行個體所識別之對等電腦的 X509Certificate (公開金鑰 (Public Key))。</summary>
        <value>由這個 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 執行個體所識別之對等電腦的 X509Certificate (公開金鑰)。 這個屬性的預設值為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState.Unrestricted>。 對等共同作業工作階段開始時，會建立此狀態。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件已被處置。</exception>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
        <altmember cref="N:System.Security.Permissions" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定代表 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 顯示名稱的字串。</summary>
        <value><see cref="T:System.String" />，表示這個 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的顯示名稱。 除非明確指定，否則參考型別 (Reference Type) 的所有屬性預設值都是 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 顯示名稱可能會用來區分中的連絡人<xref:System.Net.PeerToPeer.Collaboration.ContactManager>執行個體中其中<xref:System.Net.PeerToPeer.Collaboration.PeerContact>可能有多個電子郵件地址，或者如果有多個對等使用相同的顯示名稱。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件已被處置。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="peerContact.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
        <summary>釋放 Unmanaged 資源，並選擇性釋放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 物件所使用的 Managed 資源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Net.PeerToPeer.Collaboration.PeerContact>共同作業的工作階段的分葉，某些物件已不再需要。  如果必須進行此連絡人共同作業不是直接向對等主應用程式的任何其他端點與主應用程式預期會繼續與他們共同作業，主機必須註冊這些端點的應用程式內或在其<xref:System.Net.PeerToPeer.Collaboration.ContactManager>之前處置這個<xref:System.Net.PeerToPeer.Collaboration.PeerContact>物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmailAddress">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress EmailAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress EmailAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property EmailAddress As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ EmailAddress { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmailAddress : System.Net.Mail.MailAddress with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 相關聯的電子郵件地址。</summary>
        <value><see cref="T:System.Net.Mail.MailAddress" /> 物件，其中包含與 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 相關聯的電子郵件地址。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Net.Mail.MailAddress>物件用來代表郵件地址。  請連絡管理員可讓一個執行個體中的多個電子郵件地址。 這個屬性的預設值為 `null`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件已被處置。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>判斷這個 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 物件的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 是否等於另一個物件的名稱。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回`true`如果指定<xref:System.Object>具有相同<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>做為目前的執行個體，否則為`false`。 這個方法也會傳回`false`傳遞的參數是否`null`。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.Peer" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Net.PeerToPeer.Collaboration.PeerContact other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Net.PeerToPeer.Collaboration.PeerContact other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As PeerContact) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Net::PeerToPeer::Collaboration::PeerContact ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Net.PeerToPeer.Collaboration.PeerContact -&gt; bool" Usage="peerContact.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="other">要測試是否相等的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 執行個體。</param>
        <summary>比較 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 和指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 執行個體。</summary>
        <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 執行個體有相符的資料，則傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在比較之前的字串不會正規化。  所有的正規化應已完成，或建構之前<xref:System.Net.PeerToPeer.Collaboration.PeerContact>物件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件已經處置。</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="peerContact.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">比較 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 執行個體與指定的物件。</param>
        <summary>比較 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 執行個體與指定的物件。</summary>
        <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 執行個體有相符的資料，則傳回 <see langword="true" />，否則傳回 <see langword="false" />。 如果傳遞的參數為 <see langword="false" />，則這個方法也會傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可能相較於其他物件<xref:System.Net.PeerToPeer.Collaboration.PeerContact>物件包含對等主應用程式名稱、 相對的對等名稱，以及對其解除封裝中的名稱，從其他<xref:System.Net.PeerToPeer>物件。  
  
 在比較之前的字串不會正規化。  所有的正規化應已完成，或建構之前<xref:System.Net.PeerToPeer.Collaboration.PeerContact>物件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件已經處置。</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (object objA, object objB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(object objA, object objB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (objA As Object, objB As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Object ^ objA, System::Object ^ objB);" />
      <MemberSignature Language="F#" Value="static member Equals : obj * obj -&gt; bool" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.Equals (objA, objB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objA" Type="System.Object" />
        <Parameter Name="objB" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objA">要比較的第一個 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</param>
        <param name="objB">要比較的第二個 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</param>
        <summary>判斷指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 執行個體是否視為相等。</summary>
        <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 執行個體有相符的資料，則傳回 <see langword="true" />，否則傳回<see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這可用來判斷是否<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A>正在同時使用兩個不同的遠端對等。  
  
 可能相較於其他物件<xref:System.Net.PeerToPeer.Collaboration.PeerContact>物件包含對等主應用程式名稱、 相對的對等名稱，以及對其解除封裝中的名稱，從其他<xref:System.Net.PeerToPeer>物件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerContact FromXml (string peerContactXml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerContact FromXml(string peerContactXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromXml (peerContactXml As String) As PeerContact" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerContact ^ FromXml(System::String ^ peerContactXml);" />
      <MemberSignature Language="F#" Value="static member FromXml : string -&gt; System.Net.PeerToPeer.Collaboration.PeerContact" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.FromXml peerContactXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContactXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="peerContactXml">用來重建 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的 XML 編碼。</param>
        <summary>根據提供的 XML 資料，建立 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 執行個體。</summary>
        <returns>字串，代表用來編碼 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 執行個體的 XML 物件模型。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要傳遞的參數應該取得一個字串<xref:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml%2A>。  
  
 這個類別被要為簡單 XML 物件模型內的共同作業基礎結構中，使用，不能用於做為一般的 XML 物件模型的輕量型實作。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">參數不可以是 <see langword="null." />。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   無法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" /> 作業 
-   參數不是有效的 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" /> 物件。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetApplications">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>擷取由遠端對等電腦登錄至本機快取的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這項功能只會公開在<xref:System.Net.PeerToPeer.Collaboration.PeerContact>類別。  這項功能不會基於安全性的對等的任何其他型別上公開。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplications () As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications();" />
      <MemberSignature Language="F#" Value="member this.GetApplications : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取由遠端對等電腦登錄至本機快取的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 物件。</summary>
        <returns>本機快取中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />。 如果找不到 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 的相關聯應用程式，就會傳回大小為零 (0) 的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果呼叫的對等未訂閱<xref:System.Net.PeerToPeer.Collaboration.PeerContact>指定相關聯<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint><xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>之前呼叫這個方法，就必須呼叫方法。  
  
 雖然呼叫端不需要登入共同作業基礎結構，此方法才能成功完成，在成功呼叫<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>或其中一個<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>方法必須已完成，而呼叫者先前已登入。  
  
 這項功能只會公開在<xref:System.Net.PeerToPeer.Collaboration.PeerContact>類別。  這項功能不會基於安全性的對等的任何其他型別上公開。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">-   呼叫端對等個體未訂閱 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。  
  
-   呼叫端對等個體尚未呼叫 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">無法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 作業。</exception>
        <block subset="none" type="usage"><para>呼叫這個方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 對等共同作業工作階段開始時，會建立此狀態。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (Guid applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(valuetype System.Guid applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplications (applicationId As Guid) As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(Guid applicationId);" />
      <MemberSignature Language="F#" Value="member this.GetApplications : Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications applicationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="applicationId">要擷取之對等應用程式的 <see cref="T:System.Guid" />。</param>
        <summary>以指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />，取得本機快取中 <see cref="T:System.Guid" /> 物件的集合。</summary>
        <returns>本機快取中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />。 如果使用指定的 <paramref name="applicationId" /> 找不到應用程式，就會傳回大小為零 (0) 的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果呼叫的對等未訂閱<xref:System.Net.PeerToPeer.Collaboration.PeerContact>指定相關聯<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint><xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>之前呼叫這個方法，就必須呼叫方法。  
  
 雖然呼叫端不需要登入共同作業基礎結構，此方法才能成功完成，在成功呼叫<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>或其中一個<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>方法必須已完成，而呼叫者先前已登入。  
  
 這項功能只會公開在<xref:System.Net.PeerToPeer.Collaboration.PeerContact>類別。  這項功能不會基於安全性的對等的任何其他型別上公開。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">-   呼叫端對等個體未訂閱 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。  
  
-   呼叫端對等個體尚未呼叫 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">無法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 作業。</exception>
        <block subset="none" type="usage"><para>呼叫這個方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 對等共同作業工作階段開始時，會建立此狀態。</para></block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="member this.GetApplications : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">內含與 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 相關聯的端點資訊。</param>
        <summary>取得與指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 相關聯的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</summary>
        <returns>與指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 相關聯的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。 如果應用程式未與指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 相關聯，就會傳回大小為零 (0) 的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果呼叫的對等未訂閱<xref:System.Net.PeerToPeer.Collaboration.PeerContact>指定相關聯<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint><xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>之前呼叫這個方法，就必須呼叫方法。  
  
 雖然呼叫端不需要登入共同作業基礎結構，此方法才能成功完成，在成功呼叫<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>或其中一個<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>方法必須已完成，而呼叫者先前已登入。  
  
 這項功能只會公開在<xref:System.Net.PeerToPeer.Collaboration.PeerContact>類別。  這項功能不會基於安全性的對等的任何其他型別上公開。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不可以是 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">-   呼叫端對等個體未訂閱 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。  
  
-   呼叫端對等個體尚未呼叫 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">無法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 作業。</exception>
        <block subset="none" type="usage"><para>呼叫這個方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 對等共同作業工作階段開始時，會建立此狀態。</para></block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, Guid applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, valuetype System.Guid applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, Guid applicationId);" />
      <MemberSignature Language="F#" Value="member this.GetApplications : System.Net.PeerToPeer.Collaboration.PeerEndPoint * Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications (peerEndPoint, applicationId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="applicationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">與 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 關聯的端點。</param>
        <param name="applicationId">內含與 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 相關聯的應用程式資訊。</param>
        <summary>取得與指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 相關聯的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</summary>
        <returns>與 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 相關聯之 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 物件的集合。  
  
如果找不到 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 的 ID 識別之應用程式，或者端點的 ID 為 <see langword="null" /> 或無效，就會傳回大小為零 (0) 的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果呼叫的對等未訂閱<xref:System.Net.PeerToPeer.Collaboration.PeerContact>指定相關聯<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint><xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>之前呼叫這個方法，就必須呼叫方法。  
  
 雖然呼叫端不需要登入共同作業基礎結構，此方法才能成功完成，在成功呼叫<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>或其中一個<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>方法必須已完成，而呼叫者先前已登入。  
  
 這項功能只會公開在<xref:System.Net.PeerToPeer.Collaboration.PeerContact>類別。  這項功能不會基於安全性的對等的任何其他型別上公開。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不可以是 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">-   呼叫端對等個體未訂閱 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。  
  
-   呼叫端對等個體尚未呼叫 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">無法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 作業。</exception>
        <block subset="none" type="usage"><para>呼叫這個方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 對等共同作業工作階段開始時，會建立此狀態。</para></block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="peerContact.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 執行個體的雜湊程式碼。</summary>
        <returns>32 位元帶正負號的整數雜湊碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此雜湊程式碼的值用來以程式設計的方式比較此類型的執行個體。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件已經處置。</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Equals" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerContact.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">保留與 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件相關聯的序列化資料。</param>
        <param name="context">包含與 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件相關聯之序列化資料流的目的地。</param>
        <summary>將序列化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 所需要的資料填入 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在衍生的型別必須呼叫<xref:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData%2A>基底類型的方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjects">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得本機快取中對等物件的集合。</summary>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="override this.GetObjects : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="peerContact.GetObjects peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">要從中擷取物件的端點。</param>
        <summary>取得由指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> 所註冊並儲存在本機快取中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</summary>
        <returns>與指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> 相關聯的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。 如果沒有應用程式與端點相關聯，就會傳回大小為零 (0) 的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果呼叫的對等未訂閱<xref:System.Net.PeerToPeer.Collaboration.PeerContact>指定相關聯<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint><xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>之前呼叫這個方法，就必須呼叫方法。  
  
 雖然呼叫端不需要登入共同作業基礎結構，此方法才能成功完成，在成功呼叫<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>或其中一個<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>方法必須已完成，而呼叫者先前已登入。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不可以是 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">-   呼叫端對等個體未訂閱與 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 相關聯的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。  
  
-   呼叫端對等個體尚未呼叫 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">無法完成 <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" /> 作業。</exception>
        <block subset="none" type="usage"><para>上所定義的其他多載<see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />類別而不是子類別<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />和<see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。  
  
呼叫這個方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 對等共同作業工作階段開始時，會建立此狀態。</para></block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </Member>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, Guid objectId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, valuetype System.Guid objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, Guid objectId);" />
      <MemberSignature Language="F#" Value="override this.GetObjects : System.Net.PeerToPeer.Collaboration.PeerEndPoint * Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="peerContact.GetObjects (peerEndPoint, objectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="objectId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">要從中擷取物件的端點。</param>
        <param name="objectId">要擷取之 <see cref="T:System.Guid" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。</param>
        <summary>取得的對等物件集合，是由指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 於指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 所識別的 <see cref="T:System.Guid" /> 中註冊。</summary>
        <returns>與指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> 相關聯的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。 如果沒有應用程式與端點相關聯，就會傳回大小為零 (0) 的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果呼叫的對等未訂閱<xref:System.Net.PeerToPeer.Collaboration.PeerContact>指定相關聯<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint><xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>之前呼叫這個方法，就必須呼叫方法。  
  
 雖然呼叫端不需要登入共同作業基礎結構，此方法才能成功完成，在成功呼叫<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A>或其中一個<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>方法必須已完成，而呼叫者先前已登入。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不可以是 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">-   呼叫端對等個體未訂閱 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。  
  
-   呼叫端對等個體尚未呼叫 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">無法完成 <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" /> 作業。</exception>
        <block subset="none" type="usage"><para>上所定義的其他多載<see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />類別而不是子類別<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />和<see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。  
  
呼叫這個方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 對等共同作業工作階段開始時，會建立此狀態。</para></block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invite">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳送邀請，以加入寄件者所贊助的對等共同作業活動。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫端不需要登入<xref:System.Net.PeerToPeer.Collaboration>基礎結構，此方法才能成功完成。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>從受邀者不接受邀請共同作業受邀者相同。 如果邀請傳送至遠端對等電腦，安裝應用程式時，就會自動拒絕邀請。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Invite () As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite();" />
      <MemberSignature Language="F#" Value="override this.Invite : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳送邀請，以加入寄件者所贊助的對等共同作業。</summary>
        <returns><see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />，來自收到邀請的對等個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫端不需要登入<xref:System.Net.PeerToPeer.Collaboration>基礎結構，此方法才能成功完成。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>從受邀者不接受邀請共同作業受邀者相同。 如果邀請傳送至遠端對等電腦，安裝應用程式時，就會自動拒絕邀請。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 物件已經處置。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">目前應用程式的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 不存在。</exception>
        <block subset="none" type="usage"><para>呼叫這個方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 對等共同作業工作階段開始時，會建立此狀態。</para></block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="override this.Invite : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">要接收邀請的端點。</param>
        <summary>將邀請傳送至特定端點，以加入邀請的寄件者所參與的對等共同作業。</summary>
        <returns><see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />，來自收到邀請的對等端點。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫端不需要登入<xref:System.Net.PeerToPeer.Collaboration>基礎結構，此方法才能成功完成。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>從受邀者不接受邀請共同作業受邀者相同。 如果邀請傳送至遠端對等電腦，安裝應用程式時，就會自動拒絕邀請。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不可以是 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 物件已經處置。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   無法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" /> 作業。  
  
-   目前正在執行的應用程式並未向對等共同作業基礎結構註冊。  
  <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 物件所指定的 
-   <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" /> 無效。</exception>
        <block subset="none" type="usage"><para>呼叫這個方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 對等共同作業工作階段開始時，會建立此狀態。</para></block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Invite (applicationToInvite As PeerApplication, message As String, invitationData As Byte()) As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData);" />
      <MemberSignature Language="F#" Value="override this.Invite : System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite (applicationToInvite, message, invitationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite">邀請會傳送給 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</param>
        <param name="message">要隨應用程式邀請傳送到遠端對等的訊息。</param>
        <param name="invitationData">使用者定義的資料 Blob，用於與邀請建立關聯。  大小可超過 16,384 個位元組。</param>
        <summary>傳送指定的邀請，以加入寄件者所贊助的特定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</summary>
        <returns><see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />，來自收到邀請的對等個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫端不需要登入<xref:System.Net.PeerToPeer.Collaboration>基礎結構，此方法才能成功完成。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>從受邀者不接受邀請共同作業受邀者相同。 如果邀請傳送至遠端對等電腦，安裝應用程式時，就會自動拒絕邀請。  
  
 呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState.Unrestricted>。 對等共同作業工作階段開始時，會建立此狀態。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 不可以是 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 物件已經處置。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">目前應用程式的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 不存在或者是空的。</exception>
        <block subset="none" type="usage"><para>呼叫這個方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 對等共同作業工作階段開始時，會建立此狀態。</para></block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData);" />
      <MemberSignature Language="F#" Value="override this.Invite : System.Net.PeerToPeer.Collaboration.PeerEndPoint * System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite (peerEndPoint, applicationToInvite, message, invitationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">要傳送邀請給它的端點或遠端對等。</param>
        <param name="applicationToInvite">傳送邀請所針對的應用程式。</param>
        <param name="message">要隨應用程式邀請傳送到遠端對等的訊息。  訊息不得超過 255 個 Unicode 字元。</param>
        <param name="invitationData">使用者定義的資料 Blob，用於與邀請建立關聯。  大小可超過 16,384 個位元組。</param>
        <summary>將指定的邀請傳送至指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />，以加入寄件者所贊助的特定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 應用程式。</summary>
        <returns><see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />，來自收到邀請的對等個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫端不需要登入<xref:System.Net.PeerToPeer.Collaboration>基礎結構，此方法才能成功完成。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>從受邀者不接受邀請共同作業受邀者相同。 如果邀請傳送至遠端對等電腦，安裝應用程式時，就會自動拒絕邀請。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="PeerEndPoint" /> 中的端點不可以是 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentNullException">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 物件不能是空的。  
  
-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 與 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 物件不能是 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 物件已經處置。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">目前應用程式的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 不存在或者是空的。</exception>
        <block subset="none" type="usage"><para>呼叫這個方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 對等共同作業工作階段開始時，會建立此狀態。</para></block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InviteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>針對端點開始非同步邀請作業，以加入邀請的寄件者贊助之 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 應用程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫端不需要登入<xref:System.Net.PeerToPeer.Collaboration>基礎結構，此方法才能成功完成。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>從受邀者不接受邀請共同作業受邀者相同。 如果邀請傳送至遠端對等電腦，安裝應用程式時，就會自動拒絕邀請。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>上所定義的其他多載<see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />類別而不是子類別<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />和<see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。  
  
呼叫這個方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 對等共同作業工作階段開始時，會建立此狀態。</para></block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public override void InviteAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InviteAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InviteAsync (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InviteAsync(System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : obj -&gt; unit" Usage="peerContact.InviteAsync userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">使用者定義的物件，用於傳遞至非同步作業的回呼。 也可用於識別非同步作業以取消。 必須指定此參數，且在進行中的所有非同步邀請作業中必須是唯一的。</param>
        <summary>針對端點開始非同步邀請作業，以加入邀請的寄件者贊助之 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 應用程式。 邀請使用指定的 <see cref="T:System.Object" /> 識別。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫端不需要登入<xref:System.Net.PeerToPeer.Collaboration>基礎結構，此方法才能成功完成。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>從受邀者不接受邀請共同作業受邀者相同。 如果邀請傳送至遠端對等電腦，安裝應用程式時，就會自動拒絕邀請。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="UserToken" /> 不可以是 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 物件已經處置。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   目前應用程式的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 不存在或者是空的。  
  
-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 不能是 <see langword="null." /></exception>
        <block subset="none" type="usage"><para>上所定義的其他多載<see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />類別而不是子類別<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />和<see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。  
  
呼叫這個方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 對等共同作業工作階段開始時，會建立此狀態。</para></block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : System.Net.PeerToPeer.Collaboration.PeerEndPoint * obj -&gt; unit" Usage="peerContact.InviteAsync (peerEndPoint, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">要傳送邀請給它的端點或遠端對等。</param>
        <param name="userToken">使用者定義的物件，用於傳遞至非同步作業的回呼。 也可用於識別非同步作業以取消。 必須指定此參數，且在進行中的所有非同步邀請作業中必須是唯一的。</param>
        <summary>針對指定對等端點開始非同步邀請作業，以加入邀請的寄件者贊助之 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 應用程式。 邀請使用指定的 <see cref="T:System.Object" /> 識別。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫端不需要登入<xref:System.Net.PeerToPeer.Collaboration>基礎結構，此方法才能成功完成。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>從受邀者不接受邀請共同作業受邀者相同。 如果邀請傳送至遠端對等電腦，安裝應用程式時，就會自動拒絕邀請。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <paramref name="UserToken" /> 不能是 <see langword="null." />  
  
-   <see langword="null" /> 中的端點不能是 <paramref name="peerEndPoint" />。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerEndPoint" /> 物件不能為 <see langword="null." /></exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 物件已經處置。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">目前應用程式的 <see cref="T:System.Guid" /> 不存在或者是空的。</exception>
        <block subset="none" type="usage"><para>上所定義的其他多載<see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />類別而不是子類別<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />和<see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。  
  
呼叫這個方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 對等共同作業工作階段開始時，會建立此狀態。</para></block>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public override void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InviteAsync (applicationToInvite As PeerApplication, message As String, invitationData As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] * obj -&gt; unit" Usage="peerContact.InviteAsync (applicationToInvite, message, invitationData, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite">傳送邀請所針對的應用程式。</param>
        <param name="message">要隨應用程式邀請傳送到遠端對等的訊息。  訊息不得超過 255 個 Unicode 字元。</param>
        <param name="invitationData">使用者定義的資料 Blob，用於與邀請建立關聯。  大小可超過 16,384 個位元組。</param>
        <param name="userToken">使用者定義的物件，用於傳遞至非同步作業的回呼。 也可用於識別非同步作業以取消。 必須指定此參數，且在進行中的所有非同步邀請作業中必須是唯一的。</param>
        <summary>針對指定對等端點開始非同步邀請作業，以加入邀請的寄件者贊助之指定共同作業 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫端不需要登入<xref:System.Net.PeerToPeer.Collaboration>基礎結構，此方法才能成功完成。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>從受邀者不接受邀請共同作業受邀者相同。 如果邀請傳送至遠端對等電腦，安裝應用程式時，就會自動拒絕邀請。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="UserToken" /> 不可以是 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 物件不能為 <see langword="null." /></exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 物件已經處置。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   目前應用程式的 <see cref="T:System.Guid" /> 不存在或者是空的。  
  
-   端點集合為空的或 <see langword="null." /></exception>
        <block subset="none" type="usage"><para>上所定義的其他多載<see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />類別而不是子類別<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />和<see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。  
  
呼叫這個方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 對等共同作業工作階段開始時，會建立此狀態。</para></block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, string message, byte[] invitationData, System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, string message, unsigned int8[] invitationData, class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.String,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerApplication,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData, System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : System.Net.PeerToPeer.Collaboration.PeerEndPoint * string * byte[] * System.Net.PeerToPeer.Collaboration.PeerApplication * obj -&gt; unit" Usage="peerContact.InviteAsync (peerEndPoint, message, invitationData, applicationToInvite, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">要傳送邀請給它的端點或遠端對等。</param>
        <param name="message">要隨應用程式邀請傳送到遠端對等的訊息。  訊息不得超過 255 個 Unicode 字元。</param>
        <param name="invitationData">使用者定義的資料 Blob，用於與邀請建立關聯。  大小可超過 16,384 個位元組。</param>
        <param name="applicationToInvite">傳送邀請所針對的應用程式。</param>
        <param name="userToken">使用者定義的物件，用於傳遞至非同步作業的回呼。 也可用於識別非同步作業以取消。 必須指定此參數，且在進行中的所有非同步邀請作業中必須是唯一的。</param>
        <summary>針對指定的 <paramref name="peerEndPoint" />開始非同步邀請作業，以加入邀請的寄件者贊助之指定共同作業 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫端不需要登入<xref:System.Net.PeerToPeer.Collaboration>基礎結構，此方法才能成功完成。 A<xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse>從受邀者不接受邀請共同作業受邀者相同。 如果邀請傳送至遠端對等電腦，安裝應用程式時，就會自動拒絕邀請。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <paramref name="UserToken" /> 不能是 Null。  
  
-   <paramref name="peerEndPoint" /> 指定的端點不能是 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 和 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 物件不可以是 <see langword="null." /></exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 物件已經處置。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">目前應用程式的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 不存在或者是空的。</exception>
        <block subset="none" type="usage"><para>上所定義的其他多載<see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />類別而不是子類別<see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />和<see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。  
  
呼叫這個方法需要<see cref="T:System.Security.Permissions.PermissionState" />的<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 對等共同作業工作階段開始時，會建立此狀態。</para></block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="IsSubscribed">
      <MemberSignature Language="C#" Value="public bool IsSubscribed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSubscribed" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSubscribed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSubscribed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSubscribed : bool" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指定目前的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 是否已訂閱或取消訂閱端點。 或者，這個屬性會取得或設定值，這個值會指定目前的對等主應用程式或裝載應用程式是否已訂閱或已取消訂閱這個 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</summary>
        <value>如果這個 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 已訂閱這個端點，則為 <see langword="true" />，如果連絡人未訂閱或已取消訂閱，則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在許多情況下，<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>不等的主應用程式相同。 對等主應用程式具有的執行個體中<xref:System.Net.PeerToPeer.Collaboration.ContactManager>遠端對等，和關聯性是它們已邀請的對等共同作業。  端點都有 「 我 」 執行個體在它自己的連絡人管理員 」 和 「 對等主應用程式，但未指定關聯性。  
  
 對等主應用程式是否在<xref:System.Net.PeerToPeer.Collaboration.ContactManager>，並對等連絡人不選擇<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>、 其<xref:System.Net.PeerToPeer.Collaboration.SubscriptionType>封鎖，而不是從主機連絡人管理員中刪除的項目可以具有的值。  
  
 沒有本機對等電腦、 遠端對等體，對等主機和訂用帳戶之間的多對多關聯性。  訂用帳戶是每位使用者，而不是程序、 應用程式，或網域。 因此，訂用帳戶相關聯<xref:System.Net.PeerToPeer.Collaboration.PeerContact>物件都已經訂閱的連絡人清單，並從中預期的更新。  這些連絡人可能是已更新他們自己的應用程式、 物件和目前狀態資訊，或他們已更新中的連絡人資訊<xref:System.Net.PeerToPeer.Collaboration.ContactManager>。  
  
 這個屬性一律傳回`true`的物件是否<xref:System.Net.PeerToPeer.Collaboration.PeerContact>因為本身一律訂閱連絡人代表本機或連絡人，「 我 」。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件已被處置。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="Nickname">
      <MemberSignature Language="C#" Value="public string Nickname { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Nickname" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.Nickname" />
      <MemberSignature Language="VB.NET" Value="Public Property Nickname As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Nickname { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Nickname : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.Nickname" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定代表 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 之 <paramref name="Nickname" /> 的字串。</summary>
        <value><see cref="T:System.String" />，代表 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的暱稱。 這個屬性的預設值為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 適用於暱稱<xref:System.Net.PeerToPeer.Collaboration.PeerContact>萬一有相同的顯示名稱的多個對等物件。  若要指定較大的共同作業工作中常用的遠端對等，共同作業工作階段也可以使用暱稱。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件已被處置。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="ObjectChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectChanged As EventHandler(Of ObjectChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^&gt; ^ ObjectChanged;" />
      <MemberSignature Language="F#" Value="member this.ObjectChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " Usage="member this.ObjectChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>與 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 相關聯的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 變更時，這個事件就會收到信號。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState.Unrestricted>。 對等共同作業工作階段開始時，會建立此狀態。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件已被處置。</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnApplicationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnApplicationChanged (System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnApplicationChanged(class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnApplicationChanged (appChangedArgs As ApplicationChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnApplicationChanged(System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^ appChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnApplicationChanged : System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs -&gt; unit&#xA;override this.OnApplicationChanged : System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs -&gt; unit" Usage="peerContact.OnApplicationChanged appChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appChangedArgs" Type="System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="appChangedArgs">要傳遞給與 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" /> 事件關聯之委派的 <see cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" /> 物件。</param>
        <summary>引發 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 啟動、 註冊或從共同作業基礎結構取消註冊應用程式時，就會發生應用程式變更。  對等加入或離開共同作業工作階段，或變更網路端點位置時，它們也會發生。  對等範圍變更也可能會影響應用程式中的變更。  
  
 繼承自這個類別的類別可以覆寫這個方法，以在事件發生時執行其他工作。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在衍生類別中，請務必呼叫基底類別實作，這個方法，讓已註冊的委派收到事件。</para></block>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectChanged (System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs objChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectChanged(class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs objChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectChanged (objChangedArgs As ObjectChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectChanged(System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^ objChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnObjectChanged : System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs -&gt; unit&#xA;override this.OnObjectChanged : System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs -&gt; unit" Usage="peerContact.OnObjectChanged objChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objChangedArgs" Type="System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="objChangedArgs"><see cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" /> 所指定的物件變更類型。</param>
        <summary>當遠端對等新增、更新或移除 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 時，會引發 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" /> 事件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerObject.SynchronizingObject" />
      </Docs>
    </Member>
    <Member MemberName="OnPresenceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPresenceChanged (System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs presenceChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPresenceChanged(class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs presenceChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPresenceChanged (presenceChangedArgs As PresenceChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPresenceChanged(System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^ presenceChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnPresenceChanged : System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs -&gt; unit&#xA;override this.OnPresenceChanged : System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs -&gt; unit" Usage="peerContact.OnPresenceChanged presenceChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presenceChangedArgs" Type="System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="presenceChangedArgs">要傳遞給與 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> 事件關聯之委派的 <see cref="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" /> 物件。</param>
        <summary>當對等的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 變更時，引發 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 目前狀態變更發生時應用程式對等登出、 註冊或取消註冊的共同作業基礎結構中，從應用程式或對等取消訂閱<xref:System.Net.PeerToPeer.Collaboration.PeerContact>或<xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSubscribeCompleted">
      <MemberSignature Language="C#" Value="protected void OnSubscribeCompleted (System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSubscribeCompleted(class System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSubscribeCompleted (e As SubscribeCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSubscribeCompleted(System::Net::PeerToPeer::Collaboration::SubscribeCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnSubscribeCompleted : System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs -&gt; unit" Usage="peerContact.OnSubscribeCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" /> 或 <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" /> 物件與 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> 事件相關聯。</param>
        <summary>引發 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 繼承自這個類別的類別可以覆寫此方法，以執行其他工作時<xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted>就會發生事件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>在衍生的類別必須呼叫這個方法的基底類別實作，使已註冊的委派收到事件。</para></block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PeerEndPoints">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PeerEndPoints As PeerEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ PeerEndPoints { System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerEndPoints : System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與這個 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 關聯的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</summary>
        <value>與這個 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 相關聯的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 集合。 這個屬性的預設值為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 是否<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>本機對等電腦、 遠端對等電腦，或是否存在此執行個體所表示的對等連絡人的主對等無關<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>在其中一個端點<xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection>或<xref:System.Net.PeerToPeer.Collaboration.ContactManager>。  
  
   
  
## Examples  
 下列程式碼範例說明的正確用法<xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints%2A>屬性：  
  
 [!code-csharp[NCLPNRPContacts#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件已被處置。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與 <see cref="T:System.Net.PeerToPeer.PeerName" /> 相關聯的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</summary>
        <value><see cref="T:System.String" />，代表 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。 除非明確指定，否則參考型別 (Reference Type) 的所有屬性預設值都是 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通訊錄中的任何兩個連絡人可以具有相同<xref:System.Net.PeerToPeer.PeerName>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件已被處置。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PresenceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PresenceChanged As EventHandler(Of PresenceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^&gt; ^ PresenceChanged;" />
      <MemberSignature Language="F#" Value="member this.PresenceChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " Usage="member this.PresenceChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 變更狀態時，就會引發這個事件。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件已被處置。</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public virtual void Subscribe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subscribe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subscribe ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subscribe();" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : unit -&gt; unit&#xA;override this.Subscribe : unit -&gt; unit" Usage="peerContact.Subscribe " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>訂閱 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的呼叫對等，如此一來，對等將可接收與 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 相關聯的任何未來 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> 以非同步方式之後發生更新<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>方法已成功。 如此一來，就可能<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint>要加入至集合<xref:System.Net.PeerToPeer.Collaboration.PeerContact>相關聯之前<xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name%2A>提供。  
  
 若要監視這些變更，建議使用者訂閱相關的事件;比方說， <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged>。  
  
 呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState.Unrestricted>。 對等共同作業工作階段開始時，會建立此狀態。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">呼叫對等未登入 [近端分享]。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件已經處置。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">無法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" /> 作業。 失敗可能是因為無法建立對等的 TCP 連線。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeAllowed">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.SubscriptionType SubscribeAllowed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.PeerToPeer.Collaboration.SubscriptionType SubscribeAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Property SubscribeAllowed As SubscriptionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Collaboration::SubscriptionType SubscribeAllowed { System::Net::PeerToPeer::Collaboration::SubscriptionType get(); void set(System::Net::PeerToPeer::Collaboration::SubscriptionType value); };" />
      <MemberSignature Language="F#" Value="member this.SubscribeAllowed : System.Net.PeerToPeer.Collaboration.SubscriptionType with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.SubscriptionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 是否公開至與對等電腦或應用程式相關聯的共同作業事件，而這個對等電腦或應用程式具有 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 的擁有權，此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件就在其中。</summary>
        <value><see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" /> 列舉值，指定這個 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 是否公開至屬於對等主應用程式或裝載應用程式的共同作業事件。 除非明確指定，否則參考型別 (Reference Type) 的所有屬性預設值都是 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 將此屬性設定為<xref:System.Net.PeerToPeer.Collaboration.SubscriptionType.Allowed>表示遠端對等電腦，並指定由此<xref:System.Net.PeerToPeer.Collaboration.PeerContact>可以看到已註冊的應用程式、 物件和目前狀態資訊的使用者或擁有的應用程式<xref:System.Net.PeerToPeer.Collaboration.ContactManager>這個<xref:System.Net.PeerToPeer.Collaboration.PeerContact>物件位於此項目。  
  
 這個屬性並不會影響<xref:System.Net.PeerToPeer.Collaboration.PeerContact>代表本機或連絡人，「 我 」，因為連絡人一律訂閱至其本身的執行個體。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">這個 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />  
  
物件已經過處置。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeAsync">
      <MemberSignature Language="C#" Value="public virtual void SubscribeAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubscribeAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SubscribeAsync (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SubscribeAsync(System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="abstract member SubscribeAsync : obj -&gt; unit&#xA;override this.SubscribeAsync : obj -&gt; unit" Usage="peerContact.SubscribeAsync userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">使用者定義的 <see cref="T:System.Object" />，它包含 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" /> 作業的相關資訊。</param>
        <summary>非同步地訂閱 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的呼叫對等，如此一來，對等將可接收與 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 相關聯的任何未來 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted>這項作業完成時引發事件。 如果是非同步的不需要共同作業活動<xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>應該改為使用方法。  
  
 呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState.Unrestricted>。 對等共同作業工作階段開始時，會建立此狀態。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="UserToken" /> 不可以是 <see langword="null." /></exception>
        <exception cref="T:System.InvalidOperationException">呼叫對等未登入 [近端分享]。</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件已經處置。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">重複 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" /> 識別項。</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; SubscribeCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; SubscribeCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubscribeCompleted As EventHandler(Of SubscribeCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::SubscribeCompletedEventArgs ^&gt; ^ SubscribeCompleted;" />
      <MemberSignature Language="F#" Value="member this.SubscribeCompleted : EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; " Usage="member this.SubscribeCompleted : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>訂閱作業完成時引發。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 會引發這個事件、 錯誤屬性<xref:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs>應該檢查物件，以判斷是否<xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync%2A>程序順利完成。  
  
 呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState.Unrestricted>。 對等共同作業工作階段開始時，會建立此狀態。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件已被處置。</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">保留與 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件相關聯的序列化資料。</param>
        <param name="context">包含與 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件相關聯之序列化資料流的目的地。</param>
        <summary>實作 <see cref="T:System.Runtime.Serialization.ISerializable" /> 介面，並傳回序列化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 執行個體所需的資料。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="peerContact.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回與 <see cref="T:System.String" /> 相關聯之 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 表示。</summary>
        <returns><see cref="T:System.String" /> 的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" /> 表示。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public string ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXml();" />
      <MemberSignature Language="F#" Value="member this.ToXml : unit -&gt; string" Usage="peerContact.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 序列化為 XML 字串，以便用於持續性儲存體 (Persistent Storage) 或網路傳輸。</summary>
        <returns><see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的 XML 編碼。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">無法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" /> 作業。</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermission" />
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe">
      <MemberSignature Language="C#" Value="public virtual void Unsubscribe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unsubscribe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Unsubscribe ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Unsubscribe();" />
      <MemberSignature Language="F#" Value="abstract member Unsubscribe : unit -&gt; unit&#xA;override this.Unsubscribe : unit -&gt; unit" Usage="peerContact.Unsubscribe " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>移除 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的訂閱，使呼叫的對等不會再收到與 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />關聯的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果呼叫的對等未訂閱<xref:System.Net.PeerToPeer.Collaboration.PeerContact>指定結果就是執行任何作業。 呼叫的對等可以驗證是否它識別對等電腦與這個執行個體訂閱事件<xref:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed%2A>屬性。  
  
 呼叫這個方法需要<xref:System.Security.Permissions.PermissionState>的<xref:System.Security.Permissions.PermissionState.Unrestricted>。 對等共同作業工作階段開始時，會建立此狀態。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 物件已被處置。</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" />
      </Docs>
    </Member>
  </Members>
</Type>