<Type Name="BasicHttpMessageSecurity" FullName="System.ServiceModel.BasicHttpMessageSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ff436b2be0025d6c9f973eee583cb43cf572e8af" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37451336" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BasicHttpMessageSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BasicHttpMessageSecurity extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.BasicHttpMessageSecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BasicHttpMessageSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class BasicHttpMessageSecurity sealed" />
  <TypeSignature Language="F#" Value="type BasicHttpMessageSecurity = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c60be-101">設定 <see cref="T:System.ServiceModel.BasicHttpBinding" />的訊息層級安全性組態。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c60be-101">Configures message-level security settings for <see cref="T:System.ServiceModel.BasicHttpBinding" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEBasicHttpBinding#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/snippets.cs#5)]
 [!code-vb[S_UEBasicHttpBinding#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebasichttpbinding/vb/snippets.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BasicHttpMessageSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpMessageSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BasicHttpMessageSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c60be-102">初始化 <see cref="T:System.ServiceModel.BasicHttpMessageSecurity" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c60be-102">Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpMessageSecurity" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlgorithmSuite">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpMessageSecurity.AlgorithmSuite" />
      <MemberSignature Language="VB.NET" Value="Public Property AlgorithmSuite As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::SecurityAlgorithmSuite ^ AlgorithmSuite { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); void set(System::ServiceModel::Security::SecurityAlgorithmSuite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmSuite : System.ServiceModel.Security.SecurityAlgorithmSuite with get, set" Usage="System.ServiceModel.BasicHttpMessageSecurity.AlgorithmSuite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c60be-103">指定和 <see cref="T:System.ServiceModel.BasicHttpMessageSecurity" />一起使用的演算法套件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c60be-103">Specifies the algorithm suite to use with <see cref="T:System.ServiceModel.BasicHttpMessageSecurity" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c60be-104">
            <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c60be-104">A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span>
          </span>
          <span data-ttu-id="c60be-105">預設值是 <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c60be-105">The default value is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c60be-106">傳回的 <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> 物件含有許多可用來指定在特定情況下使用之安全性演算法的屬性。</span><span class="sxs-lookup"><span data-stu-id="c60be-106">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> object that is returned contains numerous properties that specify security algorithms to use in specific conditions.</span></span> <span data-ttu-id="c60be-107">它還會描述服務的各種安全性功能。</span><span class="sxs-lookup"><span data-stu-id="c60be-107">It also describes various security capabilities of the service.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEBasicHttpBinding#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/snippets.cs#7)]
 [!code-vb[S_UEBasicHttpBinding#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebasichttpbinding/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCredentialType">
      <MemberSignature Language="C#" Value="public System.ServiceModel.BasicHttpMessageCredentialType ClientCredentialType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.BasicHttpMessageCredentialType ClientCredentialType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpMessageSecurity.ClientCredentialType" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCredentialType As BasicHttpMessageCredentialType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::BasicHttpMessageCredentialType ClientCredentialType { System::ServiceModel::BasicHttpMessageCredentialType get(); void set(System::ServiceModel::BasicHttpMessageCredentialType value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCredentialType : System.ServiceModel.BasicHttpMessageCredentialType with get, set" Usage="System.ServiceModel.BasicHttpMessageSecurity.ClientCredentialType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.BasicHttpMessageCredentialType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c60be-108">指定用戶端要加以驗證的認證型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c60be-108">Specifies the type of credential with which the client authenticates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c60be-109">
            <see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" /> 列舉的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c60be-109">A member of the <see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" /> enumeration.</span>
          </span>
          <span data-ttu-id="c60be-110">預設值是 <see cref="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c60be-110">The default value is <see cref="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c60be-111">傳回值可以是下列其中一個列舉成員：</span><span class="sxs-lookup"><span data-stu-id="c60be-111">The return value can be one of the following enumeration members:</span></span>  
  
-   <xref:System.ServiceModel.BasicHttpMessageCredentialType.Certificate>  
  
-   <xref:System.ServiceModel.BasicHttpMessageCredentialType.UserName>  
  
   
  
## Examples  
 [!code-csharp[S_UEBasicHttpBinding#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/snippets.cs#6)]
 [!code-vb[S_UEBasicHttpBinding#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebasichttpbinding/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAlgorithmSuite">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeAlgorithmSuite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeAlgorithmSuite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpMessageSecurity.ShouldSerializeAlgorithmSuite" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeAlgorithmSuite () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeAlgorithmSuite();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeAlgorithmSuite : unit -&gt; bool" Usage="basicHttpMessageSecurity.ShouldSerializeAlgorithmSuite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c60be-112">傳回要用於保護 SOAP 層級之訊息的演算法套件是否應該序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c60be-112">Returns whether the algorithm suite to be used for securing messages at the SOAP level should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c60be-113">如果演算法套件應該序列化，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c60be-113">
              <see langword="true" /> if the algorithm suite should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeClientCredentialType">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeClientCredentialType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeClientCredentialType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpMessageSecurity.ShouldSerializeClientCredentialType" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeClientCredentialType () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeClientCredentialType();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeClientCredentialType : unit -&gt; bool" Usage="basicHttpMessageSecurity.ShouldSerializeClientCredentialType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c60be-114">傳回用戶端認證類型是否應該序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c60be-114">Returns whether the client credential type should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c60be-115">如果用戶端認證類型應該序列化，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c60be-115">
              <see langword="true" /> if the client credential type should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c60be-116">用戶端認證類型的兩個範例是：識別與傳輸。</span><span class="sxs-lookup"><span data-stu-id="c60be-116">Two examples of client credential types are:  identity and transport.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>