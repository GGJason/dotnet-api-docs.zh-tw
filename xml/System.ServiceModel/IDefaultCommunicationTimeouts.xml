<Type Name="IDefaultCommunicationTimeouts" FullName="System.ServiceModel.IDefaultCommunicationTimeouts">
  <TypeSignature Language="C#" Value="public interface IDefaultCommunicationTimeouts" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDefaultCommunicationTimeouts" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.IDefaultCommunicationTimeouts" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDefaultCommunicationTimeouts" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDefaultCommunicationTimeouts" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8b776-101">定義通道、通道管理員 (例如通道接聽項與通道處理站和服務主機) 用來指定通訊逾時的介面。</span><span class="sxs-lookup"><span data-stu-id="8b776-101">Defines the interface for specifying communication timeouts used by channels, channel managers such as channel listeners and channel factories, and service hosts.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b776-102">此介面有四個唯讀屬性，為 Open、Send、Receive 和 Close 方法提供預設逾時值。這些方法可在通訊物件上呼叫。</span><span class="sxs-lookup"><span data-stu-id="8b776-102">This interface has four read-only properties that provide default timeout values for the open, send, receive, and close methods that can be called on a communication object.</span></span> <span data-ttu-id="8b776-103">每個實作都負責以實作適當方式取得預設值。</span><span class="sxs-lookup"><span data-stu-id="8b776-103">Each implementation is responsible for obtaining the default values in whatever manner is appropriate for the implementation.</span></span> <span data-ttu-id="8b776-104">此介面由 <xref:System.ServiceModel.Channels.ChannelBase> 實作，撰寫自訂通道的基礎實作，以及 <xref:System.ServiceModel.Channels.ChannelManagerBase><xref:System.ServiceModel.Channels.ChannelFactoryBase>撰寫自訂通道管理員並且衍生至 <xref:System.ServiceModel.Channels.ChannelListenerBase> 及 。</span><span class="sxs-lookup"><span data-stu-id="8b776-104">This interface is implemented by <xref:System.ServiceModel.Channels.ChannelBase>, the base implementation for writing custom channels, and the <xref:System.ServiceModel.Channels.ChannelManagerBase>, the base implementation for writing custom channel managers which derive from <xref:System.ServiceModel.Channels.ChannelFactoryBase> and <xref:System.ServiceModel.Channels.ChannelListenerBase>.</span></span> <span data-ttu-id="8b776-105">介面也是由 <xref:System.ServiceModel.Channels.Binding> 類別實作，然後從那裡由 <xref:System.ServiceModel.Channels.CustomBinding> 繼承，以及系統提供的繫結，例如 <xref:System.ServiceModel.BasicHttpBinding>。</span><span class="sxs-lookup"><span data-stu-id="8b776-105">The interface is also implemented by the <xref:System.ServiceModel.Channels.Binding> class and then inherited from there by <xref:System.ServiceModel.Channels.CustomBinding> and the system-provided bindings, such as <xref:System.ServiceModel.BasicHttpBinding>.</span></span>  
  
 <span data-ttu-id="8b776-106">當您直接使用通道時，您可根據每通道或每作業基礎，或任何其他的自訂基礎明確指定逾時。</span><span class="sxs-lookup"><span data-stu-id="8b776-106">When you use channels directly, you have the ability to explicitly specify timeouts on a per-channel or per-operation-basis, or on any other custom basis.</span></span> <span data-ttu-id="8b776-107">使用通道模型時，若要控制大致可使用到逾時。</span><span class="sxs-lookup"><span data-stu-id="8b776-107">When using the channel model, timeouts are quite accessible when you want to control them.</span></span>  
  
 <span data-ttu-id="8b776-108">另一方面，使用服務模型時，您針對服務與合約撰寫程式，逾時比較是在背景部分。</span><span class="sxs-lookup"><span data-stu-id="8b776-108">When using the service model, on the other hand, you program against services and contracts, and timeouts are more in the background.</span></span> <span data-ttu-id="8b776-109">它們是由代表您在各處流動逾時的基礎結構機制所控制。</span><span class="sxs-lookup"><span data-stu-id="8b776-109">They are controlled by the infrastructure machinery which flows timeouts from place to place on your behalf.</span></span> <span data-ttu-id="8b776-110"><xref:System.ServiceModel.IDefaultCommunicationTimeouts> 就是提供此資料流的機制之一。</span><span class="sxs-lookup"><span data-stu-id="8b776-110"><xref:System.ServiceModel.IDefaultCommunicationTimeouts> is one mechanism for providing that flow.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CloseTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan CloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CloseTimeout { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b776-111">取得通訊物件叫用之關閉方法逾時前所經過的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8b776-111">Gets the interval of time after which the close method, invoked by a communication object, times out.</span></span></summary>
        <value><span data-ttu-id="8b776-112"><see cref="T:System.TimeSpan" />，其指定在關閉方法逾時之前所等待的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8b776-112">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the close method to time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b776-113">執行時間可能較長的所有作業都必須有逾時值。</span><span class="sxs-lookup"><span data-stu-id="8b776-113">All operations that are potentially lengthy must have a timeout.</span></span> <span data-ttu-id="8b776-114">不使用明確逾時、必須將這些方法委派至使用預設逾期或是不可以執行任何會封鎖之工作的方法。</span><span class="sxs-lookup"><span data-stu-id="8b776-114">Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.</span></span> <span data-ttu-id="8b776-115">逾時值是其所要完成之高階作業的寬限時間總量，因此任何重試作業都必須受限於先前所做嘗試尚未用掉的時間。</span><span class="sxs-lookup"><span data-stu-id="8b776-115">Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan OpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan OpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan OpenTimeout { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b776-116">取得通訊物件叫用之開啟方法逾時前所經過的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8b776-116">Gets the interval of time after which the open method, invoked by a communication object, times out.</span></span></summary>
        <value><span data-ttu-id="8b776-117"><see cref="T:System.TimeSpan" />，其指定在開啟方法逾時之前所等待的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8b776-117">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the open method to time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b776-118">執行時間可能較長的所有作業都必須有逾時值。</span><span class="sxs-lookup"><span data-stu-id="8b776-118">All operations that are potentially lengthy must have a timeout.</span></span> <span data-ttu-id="8b776-119">不使用明確逾時、必須將這些方法委派至使用預設逾期或是不可以執行任何會封鎖之工作的方法。</span><span class="sxs-lookup"><span data-stu-id="8b776-119">Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.</span></span> <span data-ttu-id="8b776-120">逾時值是其所要完成之高階作業的寬限時間總量，因此任何重試作業都必須受限於先前所做嘗試尚未用掉的時間。</span><span class="sxs-lookup"><span data-stu-id="8b776-120">Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ReceiveTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiveTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ReceiveTimeout { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b776-121">取得通訊物件叫用之接收方法逾時前所經過的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8b776-121">Gets the interval of time after which the receive method, invoked by a communication object, times out.</span></span></summary>
        <value><span data-ttu-id="8b776-122"><see cref="T:System.TimeSpan" />，其指定在接收方法逾時之前所等待的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8b776-122">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the receive method to time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b776-123">執行時間可能較長的所有作業都必須有逾時值。</span><span class="sxs-lookup"><span data-stu-id="8b776-123">All operations that are potentially lengthy must have a timeout.</span></span> <span data-ttu-id="8b776-124">不使用明確逾時、必須將這些方法委派至使用預設逾期或是不可以執行任何會封鎖之工作的方法。</span><span class="sxs-lookup"><span data-stu-id="8b776-124">Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.</span></span> <span data-ttu-id="8b776-125">逾時值是其所要完成之高階作業的寬限時間總量，因此任何重試作業都必須受限於先前所做嘗試尚未用掉的時間。</span><span class="sxs-lookup"><span data-stu-id="8b776-125">Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan SendTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SendTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SendTimeout { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b776-126">取得通訊物件叫用之傳送方法逾時前所經過的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8b776-126">Gets the interval of time after which the send method, invoked by a communication object, times out.</span></span></summary>
        <value><span data-ttu-id="8b776-127"><see cref="T:System.TimeSpan" />，其指定在傳送方法逾時之前所等待的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8b776-127">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the send method to time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b776-128">執行時間可能較長的所有作業都必須有逾時值。</span><span class="sxs-lookup"><span data-stu-id="8b776-128">All operations that are potentially lengthy must have a timeout.</span></span> <span data-ttu-id="8b776-129">不使用明確逾時、必須將這些方法委派至使用預設逾期或是不可以執行任何會封鎖之工作的方法。</span><span class="sxs-lookup"><span data-stu-id="8b776-129">Methods that don't take explicit timeouts, must delegate to those that do with default timeouts or must not do any work that blocks.</span></span> <span data-ttu-id="8b776-130">逾時值是其所要完成之高階作業的寬限時間總量，因此任何重試作業都必須受限於先前所做嘗試尚未用掉的時間。</span><span class="sxs-lookup"><span data-stu-id="8b776-130">Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already consumed by earlier tries.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>