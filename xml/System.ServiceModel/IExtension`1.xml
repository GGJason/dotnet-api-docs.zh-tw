<Type Name="IExtension&lt;T&gt;" FullName="System.ServiceModel.IExtension&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fba9f09bd6a9ef2908e9552442a0e71002f3b860" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37612773" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IExtension&lt;T&gt; where T : IExtensibleObject&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExtension`1&lt;(class System.ServiceModel.IExtensibleObject`1&lt;!T&gt;) T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.IExtension`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExtension(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : IExtensibleObject&lt;T&gt;public interface class IExtension" />
  <TypeSignature Language="F#" Value="type IExtension&lt;'T (requires 'T :&gt; IExtensibleObject&lt;'T&gt;)&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <InterfaceName>System.ServiceModel.IExtensibleObject&lt;T&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="4a0a6-101">參與自訂行為的物件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a0a6-101">The object that participates in the custom behavior.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="4a0a6-102">讓物件可以透過彙總 (Aggregation) 擴充另一個物件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a0a6-102">Enables an object to extend another object through aggregation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a0a6-103">WCF 可讓您擴充<xref:System.ServiceModel.IExtensibleObject%601?displayProperty=nameWithType>物件 ( <xref:System.ServiceModel.IContextChannel?displayProperty=nameWithType>， <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>， <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType>，和<xref:System.ServiceModel.OperationContext?displayProperty=nameWithType>類別) 使用其可擴充物件模式加入新狀態或行為。</span><span class="sxs-lookup"><span data-stu-id="4a0a6-103">WCF allows you to extend <xref:System.ServiceModel.IExtensibleObject%601?displayProperty=nameWithType> objects (the <xref:System.ServiceModel.IContextChannel?displayProperty=nameWithType>, <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>, <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType>, and <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType> classes) by adding a new state or behavior by using its extensible object pattern.</span></span> <span data-ttu-id="4a0a6-104">可擴充物件模式可在 WCF 中，搭配來擴充現有的執行階段類別的新功能，或新增狀態功能到物件。</span><span class="sxs-lookup"><span data-stu-id="4a0a6-104">The extensible object pattern is used in WCF to either extend existing run-time classes with new functionality or to add new state features to an object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (T owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(!T owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IExtension`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (owner As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(T owner);" />
      <MemberSignature Language="F#" Value="abstract member Attach : 'T -&gt; unit" Usage="iExtension.Attach owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="T" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="4a0a6-105">彚總此擴充的可擴充物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a0a6-105">The extensible object that aggregates this extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a0a6-106">讓擴充物件可以找出它被彚總的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a0a6-106">Enables an extension object to find out when it has been aggregated.</span>
          </span>
          <span data-ttu-id="4a0a6-107">當擴充加入至 <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> 屬性時呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a0a6-107">Called when the extension is added to the <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a0a6-108">您可以使用這個方法來追蹤 <xref:System.ServiceModel.IExtensibleObject%601> 物件，亦即目前的擴充執行個體所屬的物件。</span><span class="sxs-lookup"><span data-stu-id="4a0a6-108">Use this method to keep track of the <xref:System.ServiceModel.IExtensibleObject%601> object to which the current instance of the extension belongs.</span></span> <span data-ttu-id="4a0a6-109">這個呼叫可讓擴充有機會處理事件，或檢查其擁有者的屬性。</span><span class="sxs-lookup"><span data-stu-id="4a0a6-109">This call gives extensions a chance to handle events or inspect properties of their owner.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a0a6-110">下列範例程式碼示範如何使用這個方法來追蹤 <xref:System.ServiceModel.IExtensibleObject%601> 物件 (亦即目前的擴充執行個體所屬的物件)。</span><span class="sxs-lookup"><span data-stu-id="4a0a6-110">The following example code shows how this method can be used to keep track of the <xref:System.ServiceModel.IExtensibleObject%601> object to which the current instance of the extension belongs.</span></span>  
  
```csharp  
InstanceContext owner;  
  
public void Attach(InstanceContext owner)  
{  
  this.owner = owner;   
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach (T owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Detach(!T owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IExtension`1.Detach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach (owner As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Detach(T owner);" />
      <MemberSignature Language="F#" Value="abstract member Detach : 'T -&gt; unit" Usage="iExtension.Detach owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="T" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="4a0a6-111">彚總此擴充的可擴充物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a0a6-111">The extensible object that aggregates this extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a0a6-112">讓擴充物件可以找出它不再被彚總的時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a0a6-112">Enables an object to find out when it is no longer aggregated.</span>
          </span>
          <span data-ttu-id="4a0a6-113">當擴充從 <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> 屬性中移除時呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a0a6-113">Called when an extension is removed from the <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a0a6-114">您可以使用 <xref:System.ServiceModel.IExtension%601.Detach%2A> 方法來找出移除擴充的時間。</span><span class="sxs-lookup"><span data-stu-id="4a0a6-114">Use the <xref:System.ServiceModel.IExtension%601.Detach%2A> method to find out when the extension has been removed.</span></span> <span data-ttu-id="4a0a6-115">擴充可以使用這個時間，取消攔截可擴充物件上的事件。</span><span class="sxs-lookup"><span data-stu-id="4a0a6-115">An extension can use this to unhook events on the extensible object.</span></span> <span data-ttu-id="4a0a6-116">擴充也可以從這個方法擲回 <xref:System.InvalidOperationException?displayProperty=nameWithType>，表示一旦加入，擴充便不可移除。</span><span class="sxs-lookup"><span data-stu-id="4a0a6-116">An extension can also throw <xref:System.InvalidOperationException?displayProperty=nameWithType> from this method to indicate that, once added, the extension cannot be removed.</span></span>  
  
 <span data-ttu-id="4a0a6-117">請注意，當擁有者物件已處置或關閉時，就不會呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="4a0a6-117">Note that this method is not called when the owner object is disposed or closed.</span></span> <span data-ttu-id="4a0a6-118">如有需要，則由擴充或加入擴充的程式碼來攔截 (Hook) 適當的 <xref:System.ServiceModel.ICommunicationObject?displayProperty=nameWithType> 事件，或實作適當介面 (做為 <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType>)，藉以觀察擁有者的開發週期。</span><span class="sxs-lookup"><span data-stu-id="4a0a6-118">If needed, it is up to the extension or the code adding the extension to hook the appropriate <xref:System.ServiceModel.ICommunicationObject?displayProperty=nameWithType> events or implement the appropriate interfaces (for <xref:System.ServiceModel.OperationContext?displayProperty=nameWithType>) to observe the lifecycle of the owner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>