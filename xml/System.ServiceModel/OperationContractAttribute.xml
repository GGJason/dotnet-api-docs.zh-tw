<Type Name="OperationContractAttribute" FullName="System.ServiceModel.OperationContractAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="75472b63336374749d7b91980d81d6330412894b" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52911229" /></Metadata><TypeSignature Language="C#" Value="public sealed class OperationContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type OperationContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="13a59-101">表示某個方法定義了一個作業，此作業是 Windows Communication Foundation (WCF) 應用程式中服務合約的一部分。</span><span class="sxs-lookup"><span data-stu-id="13a59-101">Indicates that a method defines an operation that is part of a service contract in a Windows Communication Foundation (WCF) application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a59-102">將 <xref:System.ServiceModel.OperationContractAttribute> 套用至方法，以表示該方法實作了某個服務作業，做為服務合約的一部分 (由 <xref:System.ServiceModel.ServiceContractAttribute> 屬性指定)。</span><span class="sxs-lookup"><span data-stu-id="13a59-102">Apply the <xref:System.ServiceModel.OperationContractAttribute> to a method to indicate that the method implements a service operation as part of a service contract (specified by a <xref:System.ServiceModel.ServiceContractAttribute> attribute).</span></span>  
  
 <span data-ttu-id="13a59-103">使用 <xref:System.ServiceModel.OperationContractAttribute> 屬性控制作業結構，以及中繼資料表示的值︰</span><span class="sxs-lookup"><span data-stu-id="13a59-103">Use the <xref:System.ServiceModel.OperationContractAttribute> properties to control the structure of the operation and the values expressed in metadata:</span></span>  
  
-   <span data-ttu-id="13a59-104"><xref:System.ServiceModel.OperationContractAttribute.Action%2A> 屬性指定唯一識別此作業的動作。</span><span class="sxs-lookup"><span data-stu-id="13a59-104">The <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property specifies the action that uniquely identifies this operation.</span></span> <span data-ttu-id="13a59-105">WCF 會分派要求訊息，以根據其動作的方法。</span><span class="sxs-lookup"><span data-stu-id="13a59-105">WCF dispatches request messages to methods based on their action.</span></span>  
  
-   <span data-ttu-id="13a59-106"><xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> 屬性表示該作業使用 Begin/End 方法組實作，或可使用 Begin/End 方法組以非同步方式呼叫該作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-106">The <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property indicates that the operation is implemented or can be called asynchronously using a Begin/End method pair.</span></span>  
  
-   <span data-ttu-id="13a59-107"><xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A> 屬性表示是否已明確設定 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="13a59-107">The <xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A> property indicates whether the <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> property has been explicitly set.</span></span>  
  
-   <span data-ttu-id="13a59-108"><xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> 屬性表示作業僅由一個輸入訊息組成。</span><span class="sxs-lookup"><span data-stu-id="13a59-108">The <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property indicates that the operation only consists of a single input message.</span></span> <span data-ttu-id="13a59-109">作業沒有相關的輸出訊息。</span><span class="sxs-lookup"><span data-stu-id="13a59-109">The operation has no associated output message.</span></span>  
  
-   <span data-ttu-id="13a59-110"><xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 屬性指定此作業是否可成為工作階段中的初始作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-110">The <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property specifies whether this operation can be the initial operation in a session.</span></span>  
  
-   <span data-ttu-id="13a59-111"><xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A>屬性會指定 WCF 是否會嘗試終止目前的工作階段在作業完成之後。</span><span class="sxs-lookup"><span data-stu-id="13a59-111">The <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> property specifies whether WCF attempts to terminate the current session after the operation completes.</span></span>  
  
-   <span data-ttu-id="13a59-112"><xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> 屬性指定作業在執行階段所需的訊息層級安全性。</span><span class="sxs-lookup"><span data-stu-id="13a59-112">The <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> property specifies the message-level security that an operation requires at run time.</span></span>  
  
-   <span data-ttu-id="13a59-113"><xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> 屬性指定該作業的回覆訊息動作。</span><span class="sxs-lookup"><span data-stu-id="13a59-113">The <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> property specifies the action of the reply message for the operation.</span></span>  
  
 <span data-ttu-id="13a59-114"><xref:System.ServiceModel.OperationContractAttribute> 屬性宣告某個方法是服務合約中的作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-114">The <xref:System.ServiceModel.OperationContractAttribute> attribute declares that a method is an operation in a service contract.</span></span> <span data-ttu-id="13a59-115">只有含 <xref:System.ServiceModel.OperationContractAttribute> 屬性的方法才會公開成為服務作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-115">Only methods attributed with the <xref:System.ServiceModel.OperationContractAttribute> are exposed as service operations.</span></span> <span data-ttu-id="13a59-116">若服務合約中，沒有任何方法以 <xref:System.ServiceModel.OperationContractAttribute> 標記，則不會公開任何作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-116">A service contract without any methods marked with the <xref:System.ServiceModel.OperationContractAttribute> exposes no operations.</span></span>  
  
 <span data-ttu-id="13a59-117"><xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A>屬性表示一組`Begin` \< *methodName*> 並`End` \< *methodName*> 方法形成單一作業以非同步方式實作 （不論是在用戶端或服務）。</span><span class="sxs-lookup"><span data-stu-id="13a59-117">The <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property indicates that a pair of `Begin`\<*methodName*> and `End`\<*methodName*> methods form a single operation implemented asynchronously (whether on the client or the service).</span></span> <span data-ttu-id="13a59-118">服務是否能採用非同步方式實作作業，是服務實作的細節，不會公開在中繼資料上 (如 Web 服務描述語言 (WSDL))。</span><span class="sxs-lookup"><span data-stu-id="13a59-118">The ability of a service to implement operations asynchronously is a service implementation detail and is not exposed in metadata (such as Web Services Description Language (WSDL)).</span></span>  
  
 <span data-ttu-id="13a59-119">同樣地，用戶端可選擇以非同步方式叫用作業，不論服務方法的實作方式為何。</span><span class="sxs-lookup"><span data-stu-id="13a59-119">Similarly, clients can choose to invoke operations asynchronously independent of how the service method is implemented.</span></span> <span data-ttu-id="13a59-120">若服務方法的執行需要一些時間，但必須直接傳回資訊給用戶端，則建議用戶端以非同步方式呼叫服務作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-120">Calling service operations asynchronously in the client is recommended when a service method takes some time but must return information directly to the client.</span></span> <span data-ttu-id="13a59-121">如需詳細資訊，請參閱 <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A>。</span><span class="sxs-lookup"><span data-stu-id="13a59-121">For details, see <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A>.</span></span>  
  
 <span data-ttu-id="13a59-122"><xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> 屬性表示某個方法不會傳回任何值，包括空的基礎回應訊息。</span><span class="sxs-lookup"><span data-stu-id="13a59-122">The <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property indicates that a method does not return any value at all, including an empty underlying response message.</span></span> <span data-ttu-id="13a59-123">這種類型的方法對通知或事件型通訊很有用。</span><span class="sxs-lookup"><span data-stu-id="13a59-123">This type of method is useful for notifications or event-style communication.</span></span> <span data-ttu-id="13a59-124">這種方法不能傳回回覆訊息，所以方法宣告必須傳回 `void`。</span><span class="sxs-lookup"><span data-stu-id="13a59-124">Methods of this kind cannot return a reply message so the method's declaration must return `void`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="13a59-125">在以程式設計方式擷取這個屬性中的資訊存放區時，使用<xref:System.ServiceModel.Description.ContractDescription>類別而不是反映。</span><span class="sxs-lookup"><span data-stu-id="13a59-125">When programmatically retrieving the information store in this attribute, use the <xref:System.ServiceModel.Description.ContractDescription> class instead of reflection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13a59-126">如果 <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> 屬性設為 `false` (預設值)，那麼就算該方法傳回 `void`，在基礎訊息層級一樣是雙向方法。</span><span class="sxs-lookup"><span data-stu-id="13a59-126">If the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property is set to `false`, (the default), even methods that return `void` are two-way methods at the underlying message level.</span></span> <span data-ttu-id="13a59-127">在此情況下，基礎結構會建立並傳送空白訊息，向呼叫者指出方法已傳回 </span><span class="sxs-lookup"><span data-stu-id="13a59-127">In this case, the infrastructure creates and sends an empty message to indicate to the caller that the method has returned.</span></span> <span data-ttu-id="13a59-128">此方式可讓應用程式與基礎結構將錯誤資訊 (例如 SOAP 錯誤) 傳回給用戶端。</span><span class="sxs-lookup"><span data-stu-id="13a59-128">Using this approach enables the application and the infrastructure to send error information (such as a SOAP fault) back to the client.</span></span> <span data-ttu-id="13a59-129">將 <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> 設為 `true` 是避免建立與分派回覆訊息的唯一方法。</span><span class="sxs-lookup"><span data-stu-id="13a59-129">Setting <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> to `true` is the only way to prevent the creation and dispatch of a reply message.</span></span> <span data-ttu-id="13a59-130">如需詳細資訊，請參閱 <<c0> [ 單向服務](~/docs/framework/wcf/feature-details/one-way-services.md)。</span><span class="sxs-lookup"><span data-stu-id="13a59-130">For more information, see [One-Way Services](~/docs/framework/wcf/feature-details/one-way-services.md).</span></span>  
  
 <span data-ttu-id="13a59-131"><xref:System.ServiceModel.OperationContractAttribute.Action%2A> 與 <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> 屬性不只可用來修改 SOAP 訊息的預設動作，亦可建立處理常式來處理無法辨認的訊息，或停用直接訊息程式設計的加入動作。</span><span class="sxs-lookup"><span data-stu-id="13a59-131">The <xref:System.ServiceModel.OperationContractAttribute.Action%2A> and <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> properties can be used not only to modify the default action of SOAP messages but also to create handlers for unrecognized messages or to disable adding actions for direct message programming.</span></span> <span data-ttu-id="13a59-132">使用 <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 屬性，避免用戶端在呼叫其他作業之前，先行呼叫某個特定服務作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-132">Use the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property to prevent clients from calling a particular service operation prior to other operations.</span></span> <span data-ttu-id="13a59-133">使用<xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A>屬性，讓 WCF 用戶端呼叫某個特定服務作業之後關閉通道。</span><span class="sxs-lookup"><span data-stu-id="13a59-133">Use the <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> property to have WCF close the channel after clients call a particular service operation.</span></span> <span data-ttu-id="13a59-134">如需詳細資訊，請參閱 <<c0> [ 使用工作階段的](~/docs/framework/wcf/using-sessions.md)。</span><span class="sxs-lookup"><span data-stu-id="13a59-134">For more information, see [Using Sessions](~/docs/framework/wcf/using-sessions.md).</span></span>  
  
 <span data-ttu-id="13a59-135"><xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> 屬性可讓您在作業合約上，指定作業訊息是否簽署、加密，或同時採用簽署與加密。</span><span class="sxs-lookup"><span data-stu-id="13a59-135">The <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> property enables you to specify on the operation contract whether the operation messages are signed, encrypted, or signed and encrypted.</span></span> <span data-ttu-id="13a59-136">若繫結無法提供合約所需的安全性層級，在執行階段就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="13a59-136">If a binding cannot provide the security level required by the contract, an exception is thrown at run time.</span></span> <span data-ttu-id="13a59-137">如需詳細資訊，請參閱 <<c0> <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> 並[了解保護層級](~/docs/framework/wcf/understanding-protection-level.md)。</span><span class="sxs-lookup"><span data-stu-id="13a59-137">For more information, see <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> and [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13a59-138">下列程式碼範例是一個簡單的服務合約，裡面只有一個作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-138">The following code example shows a simple service contract with one operation.</span></span>  
  
 [!code-csharp[OperationContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute/cs/services.cs#1)]
 [!code-vb[OperationContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontractattribute/vb/services.vb#1)]  
  
 <span data-ttu-id="13a59-139">下列範例是一個實作隱含服務合約的服務，此合約指定三個作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-139">The following example is a service that implements an implicit service contract that specifies three operations.</span></span> <span data-ttu-id="13a59-140">其中兩個作業是雙向作業，不論其傳回值為何，它們都會傳回基礎回應訊息給呼叫者。</span><span class="sxs-lookup"><span data-stu-id="13a59-140">Two of the operations are two-way operations, which return underlying response messages to the caller no matter what the return value is.</span></span> <span data-ttu-id="13a59-141">第三個作業接收一個呼叫 (基礎傳入訊息)，但不傳回基礎回應訊息。</span><span class="sxs-lookup"><span data-stu-id="13a59-141">The third operation receives a call, an underlying inbound message, but returns no underlying response message.</span></span>  
  
```csharp  
[ServiceContractAttribute]  
public class OneAndTwoWay  
{  
  // The client waits until a response message appears.  
  [OperationContractAttribute]  
  public int MethodOne (int x, out int y)  
  {  
    y = 34;  
    return 0;  
  }  
  
  // The client waits until an empty response message appears.  
  [OperationContractAttribute]  
  public void MethodTwo (int x)  
  {  
    return;  
  }  
  
  // The client returns as soon as an outbound message  
  // is dispatched to the service; no response  
  // message is generated or sent from the service.  
  [OperationContractAttribute(IsOneWay=true)]  
  public void MethodThree (int x)  
  {  
    return;  
  }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13a59-142">初始化 <see cref="T:System.ServiceModel.OperationContractAttribute" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="13a59-142">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContractAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.ServiceModel.OperationContractAttribute.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13a59-143">取得或設定要求訊息的 WS-Addressing 動作。</span><span class="sxs-lookup"><span data-stu-id="13a59-143">Gets or sets the WS-Addressing action of the request message.</span></span></summary>
        <value><span data-ttu-id="13a59-144">用來產生 WS-Addressing 動作標頭的動作。</span><span class="sxs-lookup"><span data-stu-id="13a59-144">The action to use in generating the WS-Addressing Action header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a59-145">使用<xref:System.ServiceModel.OperationContractAttribute.Action%2A>屬性，即可控制方法的動作的輸入訊息。</span><span class="sxs-lookup"><span data-stu-id="13a59-145">Use the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property to control the action of the method's input message.</span></span> <span data-ttu-id="13a59-146">WCF 會使用這項動作來分派傳入訊息給適當的方法，因為合約作業內使用的訊息必須要有唯一的動作。</span><span class="sxs-lookup"><span data-stu-id="13a59-146">Because WCF uses this action to dispatch an incoming message to the appropriate method, messages used within a contract operation must have unique actions.</span></span> <span data-ttu-id="13a59-147">預設動作值是合約命名空間的組合 (預設值是"http://tempuri.org/」)，（介面名稱或類別名稱，如果沒有明確的服務介面） 的合約名稱、 作業名稱，以及為其他字串 ("Response") 如果訊息是相互關聯的回應。</span><span class="sxs-lookup"><span data-stu-id="13a59-147">The default action value is a combination of the contract namespace (the default value is "http://tempuri.org/"), the contract name (interface name or the class name, if no explicit service interface is used), the operation name, and an additional string ("Response") if the message is a correlated response.</span></span> <span data-ttu-id="13a59-148">您可用 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 屬性覆寫此預設。</span><span class="sxs-lookup"><span data-stu-id="13a59-148">You can override this default with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property.</span></span>  
  
 <span data-ttu-id="13a59-149">若要表示某個服務作業會處理該服務所收到、但無法導向至服務作業的所有訊息，請指定該值為 "\*" (星號)。</span><span class="sxs-lookup"><span data-stu-id="13a59-149">To indicate that a service operation handles all messages that the service receives but cannot be directed to a service operation, specify the value "\*" (an asterisk).</span></span> <span data-ttu-id="13a59-150">這種作業 (稱作無對應訊息處理常式) 的方法簽章必須為下列之一，否則會擲回 <xref:System.InvalidOperationException>︰</span><span class="sxs-lookup"><span data-stu-id="13a59-150">This type of operation, called an unmatched message handler, must have one of following method signatures, or a <xref:System.InvalidOperationException> is thrown:</span></span>  
  
-   <span data-ttu-id="13a59-151">服務作業只能讀取一個 <xref:System.ServiceModel.Channels.Message> 物件，並傳回一個 <xref:System.ServiceModel.Channels.Message> 物件。</span><span class="sxs-lookup"><span data-stu-id="13a59-151">The service operation can take only a <xref:System.ServiceModel.Channels.Message> object and return a <xref:System.ServiceModel.Channels.Message> object.</span></span>  
  
-   <span data-ttu-id="13a59-152">服務作業只能讀取一個 <xref:System.ServiceModel.Channels.Message> 物件，而不傳回任何東西 (也就是傳回 `void`)。</span><span class="sxs-lookup"><span data-stu-id="13a59-152">The service operation can take only a <xref:System.ServiceModel.Channels.Message> object and return nothing (that is, return `void`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13a59-153">服務合約中，只能有一個把 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 屬性設為 "\*" 的服務作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-153">A service contract can have only one service operation with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*".</span></span> <span data-ttu-id="13a59-154">裝載於服務類別實作之相同 listenUri 上的服務合約的任何群組可以有多個<xref:System.ServiceModel.OperationContractAttribute.Action%2A>屬性設定為"\*」 時<xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A>屬性設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="13a59-154">Any group of service contracts hosted at the same listenUri that a service class implements can have many service operations with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*" when the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property is set to `false`.</span></span> <span data-ttu-id="13a59-155">不過，只有其中一個服務作業可以有<xref:System.ServiceModel.OperationContractAttribute.Action%2A>屬性設定為"\*"和<xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A>屬性設定為 true。</span><span class="sxs-lookup"><span data-stu-id="13a59-155">However, only one of those service operations can have the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*" and the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property set to true.</span></span> <span data-ttu-id="13a59-156">如需詳細資訊，請參閱 <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A>。</span><span class="sxs-lookup"><span data-stu-id="13a59-156">For more details, see <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13a59-157">下列範例是一個服務，它使用 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 與 <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> 屬性來明確控制輸入與輸出 (或回覆) 訊息的 SOAP 動作，也使用 <xref:System.ServiceModel.OperationContractAttribute.Name%2A> 屬性控制中繼資料內的作業名稱。</span><span class="sxs-lookup"><span data-stu-id="13a59-157">The following example is a service that uses the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> and <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> properties to explicitly control the SOAP actions of both the input and output (or reply) messages, and the <xref:System.ServiceModel.OperationContractAttribute.Name%2A> property to control the name of the operation in metadata.</span></span> <span data-ttu-id="13a59-158">最後，應用程式亦使用一個 "\*" 的 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 值，表示用來處理無法辨認之訊息的方法。</span><span class="sxs-lookup"><span data-stu-id="13a59-158">Finally, the application also uses an <xref:System.ServiceModel.OperationContractAttribute.Action%2A> value of "\*" to indicate a method that handles unrecognized messages.</span></span>  
  
 [!code-csharp[OperationContractAttribute_Properties#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute_properties/cs/services.cs#1)]
 [!code-vb[OperationContractAttribute_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontractattribute_properties/vb/services.vb#1)]  
  
 <span data-ttu-id="13a59-159">實作此合約的服務會傳送如下範例所示的訊息︰</span><span class="sxs-lookup"><span data-stu-id="13a59-159">A service that implements this contract sends messages that look like the following example:</span></span>  
  
 [!code-csharp[OperationContractAttribute_Properties#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute_properties/cs/services.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13a59-160">值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="13a59-160">The value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsyncPattern">
      <MemberSignature Language="C#" Value="public bool AsyncPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsyncPattern" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.AsyncPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncPattern As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsyncPattern { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncPattern : bool with get, set" Usage="System.ServiceModel.OperationContractAttribute.AsyncPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13a59-161">表示某個作業採用服務合約中的 <see langword="Begin" />&lt;*methodName*&gt; 和 <see langword="End" />&lt;*methodName*&gt; 方法組，以非同步方式實作。</span><span class="sxs-lookup"><span data-stu-id="13a59-161">Indicates that an operation is implemented asynchronously using a <see langword="Begin" />&lt;*methodName*&gt; and <see langword="End" />&lt;*methodName*&gt; method pair in a service contract.</span></span></summary>
        <value><span data-ttu-id="13a59-162"><see langword="true" /> 如果<see langword="Begin" /> &lt; *methodName*&gt;所比對方法<see langword="End" /> &lt; *methodName* &gt;方法，可以藉由處理基礎結構即會實作成非同步方法組服務介面; 上的作業否則， <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="13a59-162"><see langword="true" /> if the <see langword="Begin" />&lt;*methodName*&gt;method is matched by an <see langword="End" />&lt;*methodName*&gt; method and can be treated by the infrastructure as an operation that is implemented as an asynchronous method pair on the service interface; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="13a59-163">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="13a59-163">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a59-164">使用 <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> 屬性建置服務作業，伺服器、用戶端或兩者上可非同步呼叫該作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-164">Use the <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property to build service operations that can be called asynchronously on the server, the client, or both.</span></span> <span data-ttu-id="13a59-165"><xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> 屬性通知執行階段某個 `Begin` 方法有符合的 `End` 方法，它們符合 .NET 架構的非同步方法設計模式。</span><span class="sxs-lookup"><span data-stu-id="13a59-165">The <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property informs the runtime that a `Begin` method has a matched `End` method that conforms to the .NET Framework asynchronous method design pattern.</span></span> <span data-ttu-id="13a59-166">建置實作服務作業的伺服器非同步方法，可提升伺服器延展性與效能，而不會影響服務用戶端。若某項服務作業必須傳回某些資訊給用戶端，但執行時間較長，又可採用非同步方式執行，則建議採用此種做法。</span><span class="sxs-lookup"><span data-stu-id="13a59-166">Building server asynchronous methods that implement a service operation increases server scalability and performance without affecting the clients of the service, and is recommended when a service operation must return something to the client after performing a lengthy operation that can be performed asynchronously.</span></span>  
  
 <span data-ttu-id="13a59-167">用戶端不受影響，因為伺服器上的非同步方法組是實作細節，不影響該作業的基礎 Web 服務描述語言 (WSDL) 描述。</span><span class="sxs-lookup"><span data-stu-id="13a59-167">Clients remain unaffected because the asynchronous method pair on the server is an implementation detail that does not affect the underlying Web Services Description Language (WSDL) description of the operation.</span></span> <span data-ttu-id="13a59-168">這類方法在用戶端以使用單一作業`<input>`相互關聯和`<output>`訊息。</span><span class="sxs-lookup"><span data-stu-id="13a59-168">Such methods appear to clients as a single operation with `<input>` and correlated `<output>` messages.</span></span> <span data-ttu-id="13a59-169">WCF 會自動將輸入的訊息路由傳送`Begin` \< *methodName*> 方法，並將路由的結果`End` \< *methodName*> 呼叫輸出的訊息。</span><span class="sxs-lookup"><span data-stu-id="13a59-169">WCF automatically routes inbound messages to the `Begin`\<*methodName*> method and routes the results of the `End`\<*methodName*> call to the outbound message.</span></span> <span data-ttu-id="13a59-170">因此，用戶端通道可將該方法組表示成單一同步作業或非同步作業組。</span><span class="sxs-lookup"><span data-stu-id="13a59-170">Client channels, therefore, can represent the method pair as either a single synchronous operation or as an asynchronous operation pair.</span></span> <span data-ttu-id="13a59-171">用戶端的表示方式絕對不會影響到伺服器上的非同步實作。</span><span class="sxs-lookup"><span data-stu-id="13a59-171">In no case does the client representation affect the asynchronous implementation on the server in any way.</span></span>  
  
 <span data-ttu-id="13a59-172">用戶端合約可使用 <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> 屬性表示一組非同步方法組，用戶端可使用此方法組以非同步方式叫用該作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-172">Client contracts can use the <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> property to indicate an asynchronous method pair that the client can use to invoke the operation asynchronously.</span></span> <span data-ttu-id="13a59-173">一般而言，用戶端應用程式使用[ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)工具並`/async`選項來產生`Begin` \< *methodName*>並`End` \< *methodName*> 方法配對，供用戶端可用來以非同步方式叫用作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-173">Typically, client applications use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) tool and the `/async` option to generate a `Begin`\<*methodName*> and `End`\<*methodName*> method pair that the client can use to invoke the operation asynchronously.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13a59-174">若服務作業同時有同步版與非同步版，則服務的預設行為是叫用同步版。</span><span class="sxs-lookup"><span data-stu-id="13a59-174">If a service operation has both an asynchronous and a synchronous version, the default behavior on the service is to invoke the synchronous version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13a59-175">下列程式碼範例示範用戶端通道至一個服務合約，該合約同時包含 `Add` 的同步版與非同步版。</span><span class="sxs-lookup"><span data-stu-id="13a59-175">The following code example shows a client channel to a service contract that includes both a synchronous version of `Add` and an asynchronous version.</span></span> <span data-ttu-id="13a59-176">若用戶端使用該合約介面，則 `BeginAdd` 與 `Add` 作業會叫用伺服器上的方法，而該方法可能是同步的，也可能是非同步的。</span><span class="sxs-lookup"><span data-stu-id="13a59-176">If the contract interface is used on the client, both the `BeginAdd` and the `Add` operation invoke a method on the server that may or may not be synchronous.</span></span> <span data-ttu-id="13a59-177">若使用該合約來實作服務，則傳入要求預設會分派給同步版方法。</span><span class="sxs-lookup"><span data-stu-id="13a59-177">If the contract is used to implement the service, the default is that incoming requests are dispatched to the synchronous method.</span></span>  
  
```csharp  
[ServiceContract]  
public interface IAddTwoNumbers  
{  
    // If the asynchronous method pair  
    // appears on the client channel, the client can call   
    // them asynchronously to prevent blocking.  
    [OperationContract (AsyncPattern=true)]  
    IAsyncResult BeginAdd(int a, int b, AsyncCallback cb, AsyncState s);  
  
    [OperationContract]  
    int EndAdd(IAsyncResult r);  
  
    // This is a synchronous version of the BeginAdd/EndAdd pair.  
    // It appears in the client channel code by default.   
    [OperationContract]  
    int Add(int a, int b);  
   }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasProtectionLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasProtectionLevel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasProtectionLevel : bool" Usage="System.ServiceModel.OperationContractAttribute.HasProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13a59-178">取得指出此作業的訊息是否必須加密及/或簽署的值。</span><span class="sxs-lookup"><span data-stu-id="13a59-178">Gets a value that indicates whether the messages for this operation must be encrypted, signed, or both.</span></span></summary>
        <value><span data-ttu-id="13a59-179">若 <see cref="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" /> 屬性設為 <see cref="F:System.Net.Security.ProtectionLevel.None" /> 以外的值，則為<see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="13a59-179"><see langword="true" /> if the <see cref="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" /> property is set to a value other than <see cref="F:System.Net.Security.ProtectionLevel.None" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="13a59-180">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="13a59-180">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a59-181">使用 <xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A> 屬性，判斷此作業的訊息是否需要特定的保護層級。</span><span class="sxs-lookup"><span data-stu-id="13a59-181">Use the <xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A> property to determine whether a specific protection level is required by the messages of this operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitiating">
      <MemberSignature Language="C#" Value="public bool IsInitiating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitiating" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.IsInitiating" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInitiating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitiating { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsInitiating : bool with get, set" Usage="System.ServiceModel.OperationContractAttribute.IsInitiating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13a59-182">取得或設定值，這個值表示某個方法是否實作了可以在伺服器上初始化工作階段的作業 (若這樣的工作階段存在的話)。</span><span class="sxs-lookup"><span data-stu-id="13a59-182">Gets or sets a value that indicates whether the method implements an operation that can initiate a session on the server (if such a session exists).</span></span></summary>
        <value><span data-ttu-id="13a59-183">如果允許作業在伺服器上初始化工作階段，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="13a59-183"><see langword="true" /> if the operation is permitted to initiate a session on the server, otherwise, <see langword="false" />.</span></span> <span data-ttu-id="13a59-184">預設值為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="13a59-184">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a59-185"><xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 屬性控制作業是否可在工作階段建立時，成為第一個被呼叫的作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-185">The <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property controls whether an operation can be the first operation called when a session is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13a59-186"><xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType> 的值必須為 <xref:System.ServiceModel.SessionMode.Allowed> 或 <xref:System.ServiceModel.SessionMode.Required>，而且使用的繫結必須要求或允許工作階段，<xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 屬性才能正常運作。</span><span class="sxs-lookup"><span data-stu-id="13a59-186">The value of <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType> must be either <xref:System.ServiceModel.SessionMode.Allowed> or <xref:System.ServiceModel.SessionMode.Required> and the binding used must require or allow sessions for the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property to work properly.</span></span>  
  
 <span data-ttu-id="13a59-187">預設為 `true`，表示作業可成為通道上第一個被呼叫的作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-187">The default is `true`, which means that an operation can be the first one called on a channel.</span></span> <span data-ttu-id="13a59-188">除了呼叫此方法，後續對初始化方法的呼叫就不再有效用。</span><span class="sxs-lookup"><span data-stu-id="13a59-188">Subsequent calls to the initiating method have no effect, other than to call the method.</span></span> <span data-ttu-id="13a59-189">不會再建立其他工作階段。</span><span class="sxs-lookup"><span data-stu-id="13a59-189">No other sessions are created.</span></span> <span data-ttu-id="13a59-190">若合約不使用工作階段，則將 <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 設為 `false` 的設定會忽略。</span><span class="sxs-lookup"><span data-stu-id="13a59-190">If the contract does not make use of a session, setting <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> to `false` is ignored.</span></span>  
  
 <span data-ttu-id="13a59-191">一般而言，您可將 <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 設為 `false`，強制用戶端在叫用此方法前，先呼叫服務上的另一個方法。</span><span class="sxs-lookup"><span data-stu-id="13a59-191">Typically, you set <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> to `false` to force clients to call another method on the service before they can invoke this one.</span></span> <span data-ttu-id="13a59-192">例如，若您的服務有一系列的作業，這些作業依存於一個訂單 ID 號碼，您可將 <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A>`true`服務作業的`GetOrderId``false` 設為 ，將其餘服務作業設為 。</span><span class="sxs-lookup"><span data-stu-id="13a59-192">For example, if your service has a series of operations that depend on an order ID number, you can set <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> to `true` for a `GetOrderId` service operation and set all remaining service operations to `false`.</span></span> <span data-ttu-id="13a59-193">這樣可確保每個新用戶端在使用服務所公開的其他方法之前，都先取得了訂單 ID。</span><span class="sxs-lookup"><span data-stu-id="13a59-193">This ensures that each new client obtains an order ID prior to using the other methods exposed by the service.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13a59-194"><xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> 與 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 屬性之間有互動。</span><span class="sxs-lookup"><span data-stu-id="13a59-194">There is an interaction between <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> and the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property.</span></span> <span data-ttu-id="13a59-195">服務合約中，只能有一個把 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 屬性設為 "\*" 的服務作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-195">A service contract can have only one service operation with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*".</span></span> <span data-ttu-id="13a59-196">裝載於相同接聽服務類別實作的 URI 上的服務合約的任何群組可以有多個<xref:System.ServiceModel.OperationContractAttribute.Action%2A>屬性設定為"\*」 時<xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A>屬性設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="13a59-196">Any group of service contracts hosted at the same listen URI that a service class implements can have many service operations with the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*" when the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property is set to `false`.</span></span> <span data-ttu-id="13a59-197">不過，只有其中一個服務方法可以有<xref:System.ServiceModel.OperationContractAttribute.Action%2A>屬性設定為"\*"，<xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A>屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="13a59-197">However, only one of those service methods can have the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property set to "\*" and the <xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A> property set to `true`.</span></span>  
  
 <span data-ttu-id="13a59-198">若服務收到一個非初始化作業的訊息，該服務會傳回 ActionNotSupported SOAP 錯誤。</span><span class="sxs-lookup"><span data-stu-id="13a59-198">If a service receives a message for a non-initiating operation, the service returns an ActionNotSupported SOAP fault.</span></span> <span data-ttu-id="13a59-199">用戶端會把它當做 <xref:System.ServiceModel.FaultException>。</span><span class="sxs-lookup"><span data-stu-id="13a59-199">The client experiences this as an <xref:System.ServiceModel.FaultException>.</span></span> <span data-ttu-id="13a59-200">若用戶端先呼叫非初始化作業，用戶端會擲回 <xref:System.InvalidOperationException?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="13a59-200">If a client calls a non-initiating operation first, the client runtime throws an <xref:System.InvalidOperationException?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="13a59-201">如需詳細資訊，請參閱 <<c0> [ 使用工作階段的](~/docs/framework/wcf/using-sessions.md)。</span><span class="sxs-lookup"><span data-stu-id="13a59-201">For more information, see [Using Sessions](~/docs/framework/wcf/using-sessions.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13a59-202">下列範例是一個實作服務合約的服務，此合約指定三個方法。</span><span class="sxs-lookup"><span data-stu-id="13a59-202">The following example is a service that implements a service contract that specifies three methods.</span></span> <span data-ttu-id="13a59-203">此服務需要工作階段。</span><span class="sxs-lookup"><span data-stu-id="13a59-203">The service requires a session.</span></span> <span data-ttu-id="13a59-204">若呼叫者先呼叫其他作業，而非 `MethodOne`，通道會拒絕並擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="13a59-204">If a caller's first call is to any operation other than `MethodOne`, the channel is refused and an exception is thrown.</span></span> <span data-ttu-id="13a59-205">當呼叫者呼叫 `MethodOne` 以初始化工作階段時，該呼叫者隨時可呼叫 `MethodThree` 終止通訊工作階段。</span><span class="sxs-lookup"><span data-stu-id="13a59-205">When a caller initiates a session by calling `MethodOne`, that caller can terminate the communication session at any time by calling `MethodThree`.</span></span> <span data-ttu-id="13a59-206">在工作階段期間，可任意呼叫 `MethodTwo`，次數不限。</span><span class="sxs-lookup"><span data-stu-id="13a59-206">`MethodTwo` can be called any number of times during a session.</span></span>  
  
```csharp  
[ServiceContract(SessionMode=SessionMode.Required)]  
public class InitializeAndTerminateService  
{  
  [OperationContract(  
    IsOneWay=true,  
    IsInitiating=true,  
    IsTerminating=false  
  )]  
  public void MethodOne()  
  {  
    return;  
  }  
  
  [OperationContract(  
    IsInitiating=false,  
    IsTerminating=false  
  )]  
  public int MethodTwo(int x, out int y)  
  {  
    y = 34;  
    return 0;  
  }  
  
  [OperationContract(  
    IsOneWay=true,  
    IsInitiating=false,  
    IsTerminating=true  
  )]  
  public void MethodThree()  
  {  
    return;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOneWay">
      <MemberSignature Language="C#" Value="public bool IsOneWay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOneWay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.IsOneWay" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOneWay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOneWay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsOneWay : bool with get, set" Usage="System.ServiceModel.OperationContractAttribute.IsOneWay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13a59-207">取得或設定值，這個值會指出作業是否傳回回覆訊息。</span><span class="sxs-lookup"><span data-stu-id="13a59-207">Gets or sets a value that indicates whether an operation returns a reply message.</span></span></summary>
        <value><span data-ttu-id="13a59-208">如果此方法接收要求訊息且不會傳回回覆訊息，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="13a59-208"><see langword="true" /> if this method receives a request message and returns no reply message; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="13a59-209">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="13a59-209">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a59-210">使用 <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> 屬性表示某個作業不會傳回回覆訊息。</span><span class="sxs-lookup"><span data-stu-id="13a59-210">Use the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property to indicate that an operation does not return a reply message.</span></span> <span data-ttu-id="13a59-211">這種類型的作業對通知或事件型通訊很有用，尤其是雙向通訊。</span><span class="sxs-lookup"><span data-stu-id="13a59-211">This type of operation is useful for notifications or event-style communication, especially in two-way communication.</span></span> <span data-ttu-id="13a59-212">由於呼叫者呼叫單向作業時，不會等待基礎回應訊息，因此呼叫者沒有直接的方式，可以偵測到處理要求訊息的失敗 </span><span class="sxs-lookup"><span data-stu-id="13a59-212">Without waiting for an underlying response message, callers of one-way operations have no direct way to detect a failure in processing the request message.</span></span> <span data-ttu-id="13a59-213">(使用可靠通道與單向作業的服務應用程式，可在通道層級偵測到訊息傳遞失敗。</span><span class="sxs-lookup"><span data-stu-id="13a59-213">(Service applications that use reliable channels and one-way operations can detect a message delivery failure at the channel level.</span></span> <span data-ttu-id="13a59-214">如需詳細資訊，請參閱 <<c0> [ 可靠工作階段概觀](~/docs/framework/wcf/feature-details/reliable-sessions-overview.md)。)</span><span class="sxs-lookup"><span data-stu-id="13a59-214">For details, see [Reliable Sessions Overview](~/docs/framework/wcf/feature-details/reliable-sessions-overview.md).)</span></span>  
  
 <span data-ttu-id="13a59-215">在雙工 (或雙向) 服務導向應用程式中，用戶端與伺服器彼此獨立地進行通訊，用戶端通道可在其方法上使用 <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> 屬性，表示該服務可對用戶端進行單向呼叫，用戶端會把它視為事件。</span><span class="sxs-lookup"><span data-stu-id="13a59-215">In duplex (or two-way) service-oriented applications in which the client and server communicate with each other independently, a client channel can use the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property on its methods to indicate that the service can make one-way calls to the client that the client can treat as events.</span></span> <span data-ttu-id="13a59-216">不會產生傳回呼叫或訊息，因為該服務不期待任何回應訊息。</span><span class="sxs-lookup"><span data-stu-id="13a59-216">No return call or message is generated because the service does not expect any response message.</span></span>  
  
 <span data-ttu-id="13a59-217">若 <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> 屬性設為 `false` (預設值)，那麼就算方法的傳回值為 `void`，一樣會產生回覆訊息。</span><span class="sxs-lookup"><span data-stu-id="13a59-217">If the <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> property is set to `false` (the default), even methods that return `void` result in a reply message.</span></span> <span data-ttu-id="13a59-218">在此情況下，基礎結構會建立並傳送空白訊息，向呼叫者指出方法已傳回 </span><span class="sxs-lookup"><span data-stu-id="13a59-218">In this case, the infrastructure creates and sends an empty message to indicate to the caller that the method has returned.</span></span> <span data-ttu-id="13a59-219">(此方式可讓基礎結構將 SOAP 錯誤傳回給用戶端)。將 <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> 設為 `true` 是取消建立與分派回應訊息的唯一方法。</span><span class="sxs-lookup"><span data-stu-id="13a59-219">(Using this approach enables the infrastructure to send SOAP faults back to the client.) Setting <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> to `true` is the only way to cancel the creation and dispatch of a response message.</span></span>  
  
 <span data-ttu-id="13a59-220">單向方法不能有傳回值或擁有 `ref` 或 `out` 參數，否則會擲回 <xref:System.InvalidOperationException?displayProperty=nameWithType> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="13a59-220">One-way methods must not return a value or have `ref` or `out` parameters; otherwise a <xref:System.InvalidOperationException?displayProperty=nameWithType> exception is thrown.</span></span>  
  
 <span data-ttu-id="13a59-221">指定某個作業為單向作業，只是表示它沒有回應訊息。</span><span class="sxs-lookup"><span data-stu-id="13a59-221">Specifying that an operation is a one-way operation means only that there is no response message.</span></span> <span data-ttu-id="13a59-222">若無法建立連線、傳出訊息過大，或該服務無法快速的讀取資訊，該作業仍可能封鎖。</span><span class="sxs-lookup"><span data-stu-id="13a59-222">It is possible to block if a connection cannot be made, or the outbound message is very large, or if the service cannot read inbound information fast enough.</span></span> <span data-ttu-id="13a59-223">若用戶端需要不會封鎖的呼叫，請產生 <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> 作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-223">If a client requires a non-blocking call, generate <xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A> operations.</span></span> <span data-ttu-id="13a59-224">如需詳細資訊，請參閱 <<c0> [ 單向服務](~/docs/framework/wcf/feature-details/one-way-services.md)並[使用 WCF 用戶端存取服務](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)。</span><span class="sxs-lookup"><span data-stu-id="13a59-224">For more information, see [One-Way Services](~/docs/framework/wcf/feature-details/one-way-services.md) and [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13a59-225">下列範例是一個實作服務合約的服務，此合約指定三個作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-225">The following example is a service that implements a service contract that specifies three operations.</span></span> <span data-ttu-id="13a59-226">其中兩個方法實作雙向作業，不論其傳回值為何，它們都會傳回基礎回應訊息給呼叫者。</span><span class="sxs-lookup"><span data-stu-id="13a59-226">Two of the methods implement two-way operations, which return underlying response messages to the caller no matter what the return value is.</span></span> <span data-ttu-id="13a59-227">第三個方法實作一個接收呼叫的作業 (基礎傳入訊息)，但不傳回基礎回應訊息。</span><span class="sxs-lookup"><span data-stu-id="13a59-227">The third method implements an operation that receives a call (an underlying inbound message) but returns no underlying response message.</span></span>  
  
```csharp  
[ServiceContract]  
public class OneAndTwoWay  
{  
  // The client waits until a response message appears.  
  [OperationContract]  
  public int MethodOne (int x, out int y)  
  {  
    y = 34;  
    return 0;  
  }  
  
  // The client waits until an empty response message appears.  
  [OperationContract]  
  public void MethodTwo (int x)  
  {  
    return;  
  }  
  
  // The client returns as soon as an outbound message  
  // is queued for dispatch to the service; no response  
  // message is generated or sent.  
  [OperationContract(IsOneWay=true)]  
  public void MethodThree (int x)  
  {  
    return;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTerminating">
      <MemberSignature Language="C#" Value="public bool IsTerminating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTerminating" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.IsTerminating" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTerminating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTerminating { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTerminating : bool with get, set" Usage="System.ServiceModel.OperationContractAttribute.IsTerminating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13a59-228">取得或設定值，這個值表示服務作業在傳送回覆訊息 (如果有的話) 之後，是否導致伺服器關閉該工作階段。</span><span class="sxs-lookup"><span data-stu-id="13a59-228">Gets or sets a value that indicates whether the service operation causes the server to close the session after the reply message, if any, is sent.</span></span></summary>
        <value><span data-ttu-id="13a59-229">如果作業會導致伺服器關閉工作階段，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="13a59-229"><see langword="true" /> if the operation causes the server to close the session, otherwise, <see langword="false" />.</span></span> <span data-ttu-id="13a59-230">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="13a59-230">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a59-231">使用 <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> 屬性，表示呼叫某個服務作業會終止通訊工作階段。</span><span class="sxs-lookup"><span data-stu-id="13a59-231">Use the <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> property to indicate that calling a service operation terminates the communication session.</span></span>  
  
 <span data-ttu-id="13a59-232">用戶端應用程式中，值為<xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A>設定為`true`會指示 WCF 在回覆到達之後關閉通道。</span><span class="sxs-lookup"><span data-stu-id="13a59-232">In a client application, a value of <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A> set to `true` instructs WCF to close the channel after the reply arrives.</span></span>  
  
 <span data-ttu-id="13a59-233">服務中會設定計時器，若用戶端沒有在該時段內關閉通道，通道就會中止。</span><span class="sxs-lookup"><span data-stu-id="13a59-233">In a service, a timer is set and the channel aborts if the client does not close the channel within that period.</span></span>  
  
 <span data-ttu-id="13a59-234">如需使用此屬性的工作階段的詳細資訊，請參閱[使用工作階段的](~/docs/framework/wcf/using-sessions.md)。</span><span class="sxs-lookup"><span data-stu-id="13a59-234">For more information about using this property with sessions, see [Using Sessions](~/docs/framework/wcf/using-sessions.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13a59-235">如果呼叫者正在接聽 <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType> 作業的 <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType> 事件，當收到回應時，它可能會封鎖。</span><span class="sxs-lookup"><span data-stu-id="13a59-235">If a caller is listening for the <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType> event for an <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType> operation, it is possible to block when the response is received.</span></span> <span data-ttu-id="13a59-236">處理這種情況的正確方式是，當引發 <xref:System.ServiceModel.OperationContext.OperationCompleted> 時在另一個執行緒上排程工作，然後立即從該事件處理常式傳回。</span><span class="sxs-lookup"><span data-stu-id="13a59-236">The proper way to handle this is to schedule work on another thread when <xref:System.ServiceModel.OperationContext.OperationCompleted> is raised and then immediately return from that event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13a59-237">下列範例是一個實作服務合約的服務，此合約指定三個作業。</span><span class="sxs-lookup"><span data-stu-id="13a59-237">The following example is a service that implements a service contract that specifies three operations.</span></span> <span data-ttu-id="13a59-238">此服務需要一個可設定狀態的連線。</span><span class="sxs-lookup"><span data-stu-id="13a59-238">The service requires a stateful connection.</span></span> <span data-ttu-id="13a59-239">若呼叫者先呼叫其他作業，而非 `MethodOne`，通道會拒絕並擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="13a59-239">If a caller's first call is to any operation other than `MethodOne`, the channel is refused and an exception is thrown.</span></span> <span data-ttu-id="13a59-240">當呼叫者呼叫 `MethodOne` 以初始化工作階段時，該呼叫者隨時可呼叫 `MethodThree` 終止通訊工作階段。</span><span class="sxs-lookup"><span data-stu-id="13a59-240">When a caller initiates a session by calling `MethodOne`, that caller can terminate the communication session at any time by calling `MethodThree`.</span></span> <span data-ttu-id="13a59-241">在工作階段期間，可任意呼叫 `MethodTwo`，次數不限。</span><span class="sxs-lookup"><span data-stu-id="13a59-241">`MethodTwo` can be called any number of times during a session.</span></span>  
  
```csharp  
[ServiceContractAttribute(SessionMode=SessionMode.Required)]  
public class InitializeAndTerminateService  
{  
  [OperationContract(  
    IsOneWay=true,  
    IsInitiating=true,  
    IsTerminating=false  
  )]  
  public void MethodOne()  
  {  
    return;  
  }  
  
  [OperationContract(  
    IsInitiating=false,  
    IsTerminating=false  
  )]  
  public int MethodTwo(int x, out int y)  
  {  
    y = 34;  
    return 0;  
  }  
  
  [OperationContract(  
    IsOneWay=true,  
    IsInitiating=false  
    IsTerminating=true  
  )]  
  public void MethodThree()  
  {  
    return;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.OperationContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13a59-242">取得或設定作業的名稱。</span><span class="sxs-lookup"><span data-stu-id="13a59-242">Gets or sets the name of the operation.</span></span></summary>
        <value><span data-ttu-id="13a59-243">作業的名稱。</span><span class="sxs-lookup"><span data-stu-id="13a59-243">The name of the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a59-244">使用<xref:System.ServiceModel.OperationContractAttribute.Name%2A>屬性來覆寫 <`operation`> WSDL 中的項目名稱。</span><span class="sxs-lookup"><span data-stu-id="13a59-244">Use the <xref:System.ServiceModel.OperationContractAttribute.Name%2A> property to override the <`operation`> element name in WSDL.</span></span> <span data-ttu-id="13a59-245">預設作業名稱是實作方法的名稱。</span><span class="sxs-lookup"><span data-stu-id="13a59-245">The default operation name is the name of the implementing method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13a59-246">下列程式碼範例使用 <xref:System.ServiceModel.OperationContractAttribute.Name%2A> 屬性來宣告中繼資料內所公開的作業名稱。</span><span class="sxs-lookup"><span data-stu-id="13a59-246">The following code example uses the <xref:System.ServiceModel.OperationContractAttribute.Name%2A> property to declare the name of the operation as exposed in metadata.</span></span>  
  
 [!code-csharp[OperationContractAttribute_Properties#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute_properties/cs/services.cs#1)]
 [!code-vb[OperationContractAttribute_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontractattribute_properties/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13a59-247"><see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="13a59-247"><see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="13a59-248">值為空字串。</span><span class="sxs-lookup"><span data-stu-id="13a59-248">The value is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionLevel : System.Net.Security.ProtectionLevel with get, set" Usage="System.ServiceModel.OperationContractAttribute.ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13a59-249">取得或設定值，此值指定某個作業的訊息是否須加密、簽署，或兩者都進行。</span><span class="sxs-lookup"><span data-stu-id="13a59-249">Gets or sets a value that specifies whether the messages of an operation must be encrypted, signed, or both.</span></span></summary>
        <value><span data-ttu-id="13a59-250">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值。</span><span class="sxs-lookup"><span data-stu-id="13a59-250">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span></span> <span data-ttu-id="13a59-251">預設值為 <see cref="F:System.Net.Security.ProtectionLevel.None" />。</span><span class="sxs-lookup"><span data-stu-id="13a59-251">The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a59-252">使用 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> 屬性，來控制某個作業的訊息是否需加密、簽署，或兩者都進行。</span><span class="sxs-lookup"><span data-stu-id="13a59-252">Use the <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> property to control whether the messages of an operation must be encrypted, signed, or both.</span></span> <span data-ttu-id="13a59-253">除非較窄的範圍覆寫了此值，否則這裡設定的值，會成為本作業指定的所有訊息的預設值。</span><span class="sxs-lookup"><span data-stu-id="13a59-253">The value set here is the default value for all messages specified for this operation unless a narrower scope overrides this value.</span></span>  
  
 <span data-ttu-id="13a59-254">請記住，執行階段的保護行為，是以下屬性的保護層級設定值的組合，這點很重要。</span><span class="sxs-lookup"><span data-stu-id="13a59-254">It is important to remember that the protection behavior at runtime is the combination of the protection-level values set on the following properties.</span></span> <span data-ttu-id="13a59-255">這些屬性有階層式結構。</span><span class="sxs-lookup"><span data-stu-id="13a59-255">These properties have a hierarchical structure.</span></span> <span data-ttu-id="13a59-256">除非針對較窄的範圍明確設定不同的值，否則，設定最外層的值會建立所有較窄範圍的預設值。</span><span class="sxs-lookup"><span data-stu-id="13a59-256">Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</span></span> <span data-ttu-id="13a59-257">在此情況下，外部值仍為所有較窄範圍的預設值 (特別設定的範圍除外)。</span><span class="sxs-lookup"><span data-stu-id="13a59-257">In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</span></span>  
  
 <span data-ttu-id="13a59-258">例如，如果 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> 設定為 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> 而且沒有其他更窄的範圍具有保護層級設定，則會加密並簽署作業合約中的所有訊息。</span><span class="sxs-lookup"><span data-stu-id="13a59-258">For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> is set to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</span></span> <span data-ttu-id="13a59-259">但是，如果這些其中一個作業已將 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> 設定為 <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>，則會簽署該作業的訊息，但是合約中的其他所有訊息都會經過加密並簽署。</span><span class="sxs-lookup"><span data-stu-id="13a59-259">If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A> set to <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</span></span>  
  
 <span data-ttu-id="13a59-260">如需保護層級及其假設和範圍的詳細資訊，請參閱[了解保護層級](~/docs/framework/wcf/understanding-protection-level.md)。</span><span class="sxs-lookup"><span data-stu-id="13a59-260">For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span></span>  
  
 <span data-ttu-id="13a59-261">設定這些值的範圍如下：</span><span class="sxs-lookup"><span data-stu-id="13a59-261">The scopes at which these values are set are:</span></span>  
  
 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="13a59-262"><xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> 的 <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType> 屬性。</span><span class="sxs-lookup"><span data-stu-id="13a59-262">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="13a59-263"><xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> 的 <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType> 屬性。</span><span class="sxs-lookup"><span data-stu-id="13a59-263">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="13a59-264">當合約上未明確指定保護層級，而且基礎繫結可支援安全性 (不論是在傳輸層級或訊息層級) 時，整個合約的有效保護層級會是 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="13a59-264">When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span> <span data-ttu-id="13a59-265">如果繫結不支援安全性 (例如，<xref:System.ServiceModel.BasicHttpBinding>)，整個合約的有效 <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> 為 <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="13a59-265">If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> for the whole contract.</span></span> <span data-ttu-id="13a59-266">結果便是根據端點繫結的不同，用戶端可以要求不同的訊息或傳輸層級的安全性保護，即使當合約指定 <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> 時亦然。</span><span class="sxs-lookup"><span data-stu-id="13a59-266">The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="13a59-267">該值不是其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值。</span><span class="sxs-lookup"><span data-stu-id="13a59-267">The value is not one of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReplyAction">
      <MemberSignature Language="C#" Value="public string ReplyAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplyAction" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContractAttribute.ReplyAction" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplyAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ReplyAction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReplyAction : string with get, set" Usage="System.ServiceModel.OperationContractAttribute.ReplyAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13a59-268">取得或設定作業之回覆訊息的 SOAP 動作值。</span><span class="sxs-lookup"><span data-stu-id="13a59-268">Gets or sets the value of the SOAP action for the reply message of the operation.</span></span></summary>
        <value><span data-ttu-id="13a59-269">回覆訊息的 SOAP 動作值。</span><span class="sxs-lookup"><span data-stu-id="13a59-269">The value of the SOAP action for the reply message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a59-270">除了指定回覆訊息的動作標頭之特定值之外，您亦可指定 "\*" (星號) 字串。</span><span class="sxs-lookup"><span data-stu-id="13a59-270">In addition to specifying a particular value for the action header of the reply message, you can also specify the string "\*" (an asterisk).</span></span> <span data-ttu-id="13a59-271">指定在服務中的星號會指示 WCF 在不到訊息，這非常有用，如果您對訊息進行程式設計直接新增回覆動作。</span><span class="sxs-lookup"><span data-stu-id="13a59-271">Specifying an asterisk in the service instructs WCF not to add a reply action to the message, which is useful if you are programming against messages directly.</span></span> <span data-ttu-id="13a59-272">用戶端應用程式中指定星號會指示 WCF 在不去驗證回覆動作。</span><span class="sxs-lookup"><span data-stu-id="13a59-272">Specifying an asterisk in a client application instructs WCF not to validate the reply action.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13a59-273">下列範例中的服務使用 <xref:System.ServiceModel.OperationContractAttribute.Action%2A> 與 <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> 屬性，明確控制輸入與輸出 (或回覆) 訊息的 SOAP 動作。</span><span class="sxs-lookup"><span data-stu-id="13a59-273">The following example is a service that uses the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> and <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> properties to explicitly control the SOAP actions of both the input and output (or reply) messages.</span></span> <span data-ttu-id="13a59-274">它亦使用 <xref:System.ServiceModel.OperationContractAttribute.Name%2A> 屬性來宣告中繼資料內所公開的作業名稱。</span><span class="sxs-lookup"><span data-stu-id="13a59-274">It also uses the <xref:System.ServiceModel.OperationContractAttribute.Name%2A> property to declare the name of the operation as exposed in metadata.</span></span>  
  
 [!code-csharp[OperationContractAttribute_Properties#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontractattribute_properties/cs/services.cs#1)]
 [!code-vb[OperationContractAttribute_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontractattribute_properties/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13a59-275"><see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="13a59-275"><see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>