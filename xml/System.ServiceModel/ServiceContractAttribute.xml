<Type Name="ServiceContractAttribute" FullName="System.ServiceModel.ServiceContractAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc7da9c7d356483570677d227277a7a50b6d8755" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48775686" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ServiceContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ServiceContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3b249-101">表示某個介面或類別定義了 Windows Communication Foundation (WCF) 應用程式中的服務合約。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b249-101">Indicates that an interface or a class defines a service contract in a Windows Communication Foundation (WCF) application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b249-102">使用介面 (或類別) 上的 <xref:System.ServiceModel.ServiceContractAttribute> 屬性來定義服務合約。</span><span class="sxs-lookup"><span data-stu-id="3b249-102">Use the <xref:System.ServiceModel.ServiceContractAttribute> attribute on an interface (or class) to define a service contract.</span></span> <span data-ttu-id="3b249-103">接著使用一個或多個類別 (或介面) 方法上的 <xref:System.ServiceModel.OperationContractAttribute> 屬性，定義合約的服務作業。</span><span class="sxs-lookup"><span data-stu-id="3b249-103">Then use the <xref:System.ServiceModel.OperationContractAttribute> attribute on one or more of the class (or interface) methods to define the contract's service operations.</span></span> <span data-ttu-id="3b249-104">當服務合約實作且結合[繫結](~/docs/framework/wcf/bindings.md)和<xref:System.ServiceModel.EndpointAddress>物件時，服務合約由使用用戶端。</span><span class="sxs-lookup"><span data-stu-id="3b249-104">When the service contract is implemented and combined with a [Bindings](~/docs/framework/wcf/bindings.md) and an <xref:System.ServiceModel.EndpointAddress> object, the service contract is exposed for use by clients.</span></span> <span data-ttu-id="3b249-105">如需使用簡單的範例程序的概觀，請參閱 <<c0> [ 入門教學課程](~/docs/framework/wcf/getting-started-tutorial.md)。</span><span class="sxs-lookup"><span data-stu-id="3b249-105">For an overview of the process using simple examples, see [Getting Started Tutorial](~/docs/framework/wcf/getting-started-tutorial.md).</span></span> <span data-ttu-id="3b249-106">如需建立服務合約的詳細資訊，請參閱 <<c0> [ 設計與實作服務](~/docs/framework/wcf/designing-and-implementing-services.md)。</span><span class="sxs-lookup"><span data-stu-id="3b249-106">For more information about creating service contracts, see [Designing and Implementing Services](~/docs/framework/wcf/designing-and-implementing-services.md).</span></span>  
  
 <span data-ttu-id="3b249-107">由 <xref:System.ServiceModel.ServiceContractAttribute> 表示的資訊及其介面與 Web 服務描述語言 (WSDL) 的 `<portType>` 項目鬆散相關。</span><span class="sxs-lookup"><span data-stu-id="3b249-107">The information expressed by a <xref:System.ServiceModel.ServiceContractAttribute> and its interface is loosely related to the Web Services Description Language (WSDL) `<portType>` element.</span></span> <span data-ttu-id="3b249-108">服務端會使用服務合約，來指定要公開哪些服務端點給呼叫者。</span><span class="sxs-lookup"><span data-stu-id="3b249-108">A service contract is used on the service side to specify what the service’s endpoint exposes to callers.</span></span> <span data-ttu-id="3b249-109">用戶端亦會使用服務合約，來指定該用戶端所通訊之端點的合約，而在雙工合約中，也會指定用戶端必須實作的回呼合約 (使用 <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> 屬性)，以參與雙工對談。</span><span class="sxs-lookup"><span data-stu-id="3b249-109">It is also used on the client side to specify the contract of the endpoint with which the client communicates and, in the case of duplex contracts, to specify the callback contract (using the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property) that the client must implement in order to participate in a duplex conversation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3b249-110">以 <xref:System.ServiceModel.ServiceContractAttribute> 裝飾的介面或類別至少要有一個以 <xref:System.ServiceModel.OperationContractAttribute> 屬性標記的方法，才能公開其功能。</span><span class="sxs-lookup"><span data-stu-id="3b249-110">An interface or class that is decorated with <xref:System.ServiceModel.ServiceContractAttribute> must also have at least one method marked with the <xref:System.ServiceModel.OperationContractAttribute> attribute to expose any functionality.</span></span> <span data-ttu-id="3b249-111">請參閱＜範例＞一節中，使用這兩個屬性來定義並實作服務的最簡單程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="3b249-111">See the Examples section for a code example of the simplest use of the two attributes to define and implement a service.</span></span>  
  
 <span data-ttu-id="3b249-112">使用 <xref:System.ServiceModel.ServiceContractAttribute> 屬性修改服務合約。</span><span class="sxs-lookup"><span data-stu-id="3b249-112">Use the <xref:System.ServiceModel.ServiceContractAttribute> properties to modify the service contract.</span></span>  
  
-   <span data-ttu-id="3b249-113"><xref:System.ServiceModel.ServiceContractAttribute.ConfigurationName%2A> 屬性指定了所使用組態檔中服務項目的名稱。</span><span class="sxs-lookup"><span data-stu-id="3b249-113">The <xref:System.ServiceModel.ServiceContractAttribute.ConfigurationName%2A> property specifies the name of the service element in the configuration file to use.</span></span>  
  
-   <span data-ttu-id="3b249-114"><xref:System.ServiceModel.ServiceContractAttribute.Name%2A> 與 <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> 屬性控制了 WSDL `<portType>` 元素中的合約名稱與合約命名空間。</span><span class="sxs-lookup"><span data-stu-id="3b249-114">The <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties control the name and namespace of the contract in the WSDL `<portType>` element.</span></span>  
  
-   <span data-ttu-id="3b249-115"><xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> 屬性指定合約是否需要支援工作階段的繫結。</span><span class="sxs-lookup"><span data-stu-id="3b249-115">The <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property specifies whether the contract requires a binding that supports sessions.</span></span>  
  
-   <span data-ttu-id="3b249-116"><xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> 屬性指定雙向 (雙工) 對談的傳回合約。</span><span class="sxs-lookup"><span data-stu-id="3b249-116">The <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property specifies the return contract in a two-way (duplex) conversation.</span></span>  
  
-   <span data-ttu-id="3b249-117"><xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> 與 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> 屬性表示支援合約的所有訊息是否有明確的 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> 值，若有，其值為何。</span><span class="sxs-lookup"><span data-stu-id="3b249-117">The <xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> and <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> properties indicate whether all messages supporting the contract have a explicit <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> value, and if so, what that level is.</span></span>  
  
 <span data-ttu-id="3b249-118">服務會實作服務合約，代表服務類型支援的資料交換。</span><span class="sxs-lookup"><span data-stu-id="3b249-118">Services implement service contracts, which represent the data exchange that a service type supports.</span></span> <span data-ttu-id="3b249-119">服務類別可實作服務合約 (藉由實作以 <xref:System.ServiceModel.ServiceContractAttribute> 標記的介面，此介面有以 <xref:System.ServiceModel.OperationContractAttribute> 標記的方法)，或可用 <xref:System.ServiceModel.ServiceContractAttribute> 標記此類別，並套用 <xref:System.ServiceModel.OperationContractAttribute> 屬性至此類別的方法 </span><span class="sxs-lookup"><span data-stu-id="3b249-119">A service class can implement a service contract (by implementing an interface marked with <xref:System.ServiceModel.ServiceContractAttribute> that has methods marked with <xref:System.ServiceModel.OperationContractAttribute>) or it can be marked with the <xref:System.ServiceModel.ServiceContractAttribute> and apply the <xref:System.ServiceModel.OperationContractAttribute> attribute to its own methods.</span></span> <span data-ttu-id="3b249-120">(若類別實作以 <xref:System.ServiceModel.ServiceContractAttribute> 標記的介面，則此類別本身便不能以 <xref:System.ServiceModel.ServiceContractAttribute> 標記)。在服務類型中以 <xref:System.ServiceModel.OperationContractAttribute> 標記的方法，會視為預設服務合約的一部分 (此合約由該服務類型自行指定)。</span><span class="sxs-lookup"><span data-stu-id="3b249-120">(If a class implements an interface marked with <xref:System.ServiceModel.ServiceContractAttribute>, it cannot be itself marked with <xref:System.ServiceModel.ServiceContractAttribute>.) Methods on service types that are marked with the <xref:System.ServiceModel.OperationContractAttribute> are treated as part of a default service contract specified by the service type itself.</span></span> <span data-ttu-id="3b249-121">如需服務作業的詳細資訊，請參閱 <xref:System.ServiceModel.OperationContractAttribute>。</span><span class="sxs-lookup"><span data-stu-id="3b249-121">For details about service operations, see <xref:System.ServiceModel.OperationContractAttribute>.</span></span>  
  
 <span data-ttu-id="3b249-122">根據預設，<xref:System.ServiceModel.ServiceContractAttribute.Name%2A> 與 <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> 屬性分別為合約類型名稱與 `http://tempuri.org` 的名稱，而 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> 則為 <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3b249-122">By default, the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties are the name of the contract type and `http://tempuri.org`, respectively, and <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3b249-123">建議您使用這些屬性，明確設定服務合約的名稱、命名空間與保護層級。</span><span class="sxs-lookup"><span data-stu-id="3b249-123">It is recommended that service contracts explicitly set their names, namespaces, and protection levels using these properties.</span></span> <span data-ttu-id="3b249-124">如此可達成兩個目標，</span><span class="sxs-lookup"><span data-stu-id="3b249-124">Doing so accomplishes two goals.</span></span> <span data-ttu-id="3b249-125">首先，它會建置一份不會與 Managed 型別資訊直接連接的合約，可讓您在不破壞 WSDL 所表示的合約下，重構 Managed 程式碼與命名空間。</span><span class="sxs-lookup"><span data-stu-id="3b249-125">First, it builds a contract that is not directly connected to the managed type information, enabling you to refactor your managed code and namespaces without breaking the contract as it is expressed in WSDL.</span></span> <span data-ttu-id="3b249-126">還有，在合約內明確要求某種保護層級，可讓執行階段驗證該繫結組態是否支援該安全性層級，避免因組態設定不當而洩漏敏感資訊。</span><span class="sxs-lookup"><span data-stu-id="3b249-126">Second, explicitly requiring a certain level of protection on the contract itself enables the runtime to validate whether the binding configuration supports that level of security, preventing poor configuration from exposing sensitive information.</span></span> <span data-ttu-id="3b249-127">如需有關保護層級的詳細資訊，請參閱[了解保護層級](~/docs/framework/wcf/understanding-protection-level.md)。</span><span class="sxs-lookup"><span data-stu-id="3b249-127">For more information about protection levels, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span></span>  
  
 <span data-ttu-id="3b249-128">若要公開使用的服務用戶端應用程式，建立主應用程式與 Windows Communication Foundation (WCF) 中註冊您的服務端點。</span><span class="sxs-lookup"><span data-stu-id="3b249-128">To expose a service for use by client applications, create a host application to register your service endpoint with Windows Communication Foundation (WCF).</span></span> <span data-ttu-id="3b249-129">您可以裝載在主控台應用程式、 Windows 服務應用程式、 ASP.NET 應用程式、 Windows Forms 應用程式或任何其他種類的應用程式定義域中使用 Windows Activation Services (WAS) 的 WCF 服務。</span><span class="sxs-lookup"><span data-stu-id="3b249-129">You can host WCF services using Windows Activation Services (WAS), in console applications, Windows Service applications, ASP.NET applications, Windows Forms applications, or any other kind of application domain.</span></span>  
  
 <span data-ttu-id="3b249-130">在 WAS 裝載的方式與建立 ASP.NET 應用程式非常相似。</span><span class="sxs-lookup"><span data-stu-id="3b249-130">Hosting in the WAS is very similar to creating an ASP.NET application.</span></span> <span data-ttu-id="3b249-131">如需詳細資訊，請參閱 <<c0> [ 如何： 將 WCF 服務裝載於 IIS](~/docs/framework/wcf/feature-details/how-to-host-a-wcf-service-in-iis.md)。</span><span class="sxs-lookup"><span data-stu-id="3b249-131">For details, see [How to: Host a WCF Service in IIS](~/docs/framework/wcf/feature-details/how-to-host-a-wcf-service-in-iis.md).</span></span>  
  
 <span data-ttu-id="3b249-132">用戶端使用服務合約介面 (以 <xref:System.ServiceModel.ServiceContractAttribute> 標示的介面) 建立通往服務的通道，或使用用戶端物件 (結合了服務合約介面的型別資訊與 <xref:System.ServiceModel.ClientBase%601> 類別) 與您的服務通訊。</span><span class="sxs-lookup"><span data-stu-id="3b249-132">Clients either use the service contract interface (the interface marked with <xref:System.ServiceModel.ServiceContractAttribute>) to create a channel to the service or they use the client objects (which combine the type information of the service contract interface with the <xref:System.ServiceModel.ClientBase%601> class) to communicate with your service.</span></span> <span data-ttu-id="3b249-133">如需服務的用戶端通道的詳細資訊，請參閱<xref:System.ServiceModel.ChannelFactory%601>類別以及[WCF Client Overview](~/docs/framework/wcf/wcf-client-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="3b249-133">For details on client channels to services, see the <xref:System.ServiceModel.ChannelFactory%601> class and [WCF Client Overview](~/docs/framework/wcf/wcf-client-overview.md).</span></span>  
  
 <span data-ttu-id="3b249-134">使用 <xref:System.ServiceModel.ServiceContractAttribute> 類別或介面來繼承另一個延伸了父合約的 <xref:System.ServiceModel.ServiceContractAttribute> 類別或介面。</span><span class="sxs-lookup"><span data-stu-id="3b249-134">Using a <xref:System.ServiceModel.ServiceContractAttribute> class or interface to inherit from another <xref:System.ServiceModel.ServiceContractAttribute> class or interface extends the parent contract.</span></span> <span data-ttu-id="3b249-135">例如，如果 `IChildContract` 介面以 <xref:System.ServiceModel.ServiceContractAttribute> 標記，並繼承了另一個服務合約介面 `IParentContract`，則 `IChildContract` 服務合約就包含了 `IParentContract` 與 `IChildContract` 的方法。</span><span class="sxs-lookup"><span data-stu-id="3b249-135">For example, if an `IChildContract` interface is marked with <xref:System.ServiceModel.ServiceContractAttribute> and inherited from another service contract interface, `IParentContract`, the `IChildContract` service contract contains the methods of both `IParentContract` and `IChildContract`.</span></span> <span data-ttu-id="3b249-136">延伸合約 (在類別或介面上) 與延伸 Managed 類別與介面非常相似。</span><span class="sxs-lookup"><span data-stu-id="3b249-136">Extending contracts (whether on classes or interfaces) is very similar to extending managed classes and interfaces.</span></span>  
  
 <span data-ttu-id="3b249-137">建立服務最有彈性的方式，是先定義服務合約介面，再讓您的服務類別實作該介面 </span><span class="sxs-lookup"><span data-stu-id="3b249-137">The most flexible approach to creating services is to define service contract interfaces first and then have your service class implement that interface.</span></span> <span data-ttu-id="3b249-138">(若您必須實作由別人定義的服務合約，那麼這也是建立服務最簡單的方式)。若服務只公開一個合約 (但該合約可被多個端點公開)，則可直接將某個類別以 <xref:System.ServiceModel.ServiceContractAttribute> 標記，其方法以 <xref:System.ServiceModel.OperationContractAttribute> 標記，來建置出服務。</span><span class="sxs-lookup"><span data-stu-id="3b249-138">(This is also the simplest way to build your services if you must implement service contracts that have been defined by others.) Building services directly by marking a class with <xref:System.ServiceModel.ServiceContractAttribute> and its methods with <xref:System.ServiceModel.OperationContractAttribute> works when the service exposes only one contract (but that contract can be exposed by more than one endpoint).</span></span>  
  
 <span data-ttu-id="3b249-139">使用<xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>屬性來表示，當繫結在一起的原始服務合約定義兩種方式可以獨立地流動的訊息交換的另一個服務合約。</span><span class="sxs-lookup"><span data-stu-id="3b249-139">Use the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property to indicate another service contract that, when bound together with the original service contract, define a message exchange that can flow in two ways independently.</span></span> <span data-ttu-id="3b249-140">如需詳細資訊，請參閱 <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>。</span><span class="sxs-lookup"><span data-stu-id="3b249-140">For details, see <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b249-141">下列程式碼範例會示範如何將 <xref:System.ServiceModel.ServiceContractAttribute> 套用至介面，定義出含有一個服務方法的服務合約，此服務方法由 <xref:System.ServiceModel.OperationContractAttribute> 表示。</span><span class="sxs-lookup"><span data-stu-id="3b249-141">The following code example shows how to apply the <xref:System.ServiceModel.ServiceContractAttribute> to an interface to define a service contract with one service method, indicated by the <xref:System.ServiceModel.OperationContractAttribute>.</span></span> <span data-ttu-id="3b249-142">在此情況下，所有訊息之繫結所要求的保護層級為 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3b249-142">In this case, the protection level required of bindings for all messages is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3b249-143">程式碼範例接著在 `SampleService` 類別上實作該合約。</span><span class="sxs-lookup"><span data-stu-id="3b249-143">The code example then implements that contract on the `SampleService` class.</span></span>  
  
 [!code-csharp[ServiceContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicecontractattribute/cs/services.cs#1)]
 [!code-vb[ServiceContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicecontractattribute/vb/services.vb#1)]  
  
 <span data-ttu-id="3b249-144">下列程式碼範例是前述服務的一個簡單組態檔，此服務會建立一個端點。</span><span class="sxs-lookup"><span data-stu-id="3b249-144">The following code example shows a simple configuration file for the preceding service that creates one endpoint.</span></span>  
  
 [!code-xml[ServiceContractAttribute#2](~/samples/snippets/csharp/VS_Snippets_CFX/servicecontractattribute/cs/hostapplication.exe.config#2)]   
  
 <span data-ttu-id="3b249-145">下列程式碼範例示範叫用前述 `SampleService` 的簡單用戶端。</span><span class="sxs-lookup"><span data-stu-id="3b249-145">The following code example shows a simple client that invokes the preceding `SampleService`.</span></span>  
  
 [!code-csharp[ServiceContractAttribute#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicecontractattribute/cs/client.cs#3)]
 [!code-vb[ServiceContractAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicecontractattribute/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.OperationContractAttribute" />
    <related type="Article" href="http://msdn.microsoft.com/library/036fae20-7c55-4002-b71d-ac4466e167a3">
      <span data-ttu-id="3b249-146">定義服務合約</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b249-146">Defining Service Contracts</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/192be927-6be2-4fda-98f0-e513c4881acc">
      <span data-ttu-id="3b249-147">裝載的服務</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b249-147">Hosting a Service</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/7cf21bfe-23bd-46aa-8033-609f851dbf76">
      <span data-ttu-id="3b249-148">服務建立概觀</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b249-148">Service Creation Overview</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/28dfff47-d95b-4cc2-9d5c-b3b9ba71fd50">
      <span data-ttu-id="3b249-149">建置用戶端</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b249-149">Building a Client</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/d780af9f-73c5-42db-9e52-077a5e4de7fe">
      <span data-ttu-id="3b249-150">Proxy 建立概觀</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b249-150">Proxy Creation Overview</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3b249-151">初始化 <see cref="T:System.ServiceModel.ServiceContractAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-151">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceContractAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b249-152">建構函式使用預設名稱與命名空間，且沒有工作階段需求與回呼合約，來建立屬性的執行個體。</span><span class="sxs-lookup"><span data-stu-id="3b249-152">The constructor creates an instance of the attribute with no session requirements, no callback contract, and the default name and namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallbackContract">
      <MemberSignature Language="C#" Value="public Type CallbackContract { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CallbackContract" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" />
      <MemberSignature Language="VB.NET" Value="Public Property CallbackContract As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ CallbackContract { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CallbackContract : Type with get, set" Usage="System.ServiceModel.ServiceContractAttribute.CallbackContract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3b249-153">當合約是雙工合約時，取得或設定回呼合約的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-153">Gets or sets the type of callback contract when the contract is a duplex contract.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3b249-154">表示回呼合約的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-154">A <see cref="T:System.Type" /> that indicates the callback contract.</span>
          </span>
          <span data-ttu-id="3b249-155">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-155">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b249-156">指定 <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> 屬性中的介面，代表雙向 (或雙工) 訊息交換中所需的反向合約。</span><span class="sxs-lookup"><span data-stu-id="3b249-156">Specify an interface in the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property that represents the required opposite contract in a two-way (or duplex) message exchange.</span></span> <span data-ttu-id="3b249-157">這可讓用戶端應用程式接聽傳入作業呼叫，伺服器端服務應用程式可傳送該呼叫給用戶端，不論用戶端的活動為何。</span><span class="sxs-lookup"><span data-stu-id="3b249-157">This enables client applications to listen for inbound operation calls that the server-side service application can send independently of client activity.</span></span> <span data-ttu-id="3b249-158">擁有單向作業的回呼合約，代表從服務端的呼叫，用戶端可處理此呼叫。</span><span class="sxs-lookup"><span data-stu-id="3b249-158">Callback contracts that have one-way operations represent calls from the service that the client can handle.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3b249-159">回呼合約上的 <xref:System.ServiceModel.ServiceContractAttribute> 屬性會忽略。</span><span class="sxs-lookup"><span data-stu-id="3b249-159">The <xref:System.ServiceModel.ServiceContractAttribute> attribute is ignored on callback contracts.</span></span> <span data-ttu-id="3b249-160">若要設定回呼物件的執行階段行為，請使用 <xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3b249-160">To configure runtime behavior of callback objects, use the <xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b249-161">下列程式碼範例示範指定了回呼合約的服務，此回呼合約表示 `IDuplexHello``IHelloCallbackContract`型別的服務必須有一個對等項，此對等項實作了  型別的服務。</span><span class="sxs-lookup"><span data-stu-id="3b249-161">The following code example shows a service that specifies a callback contract, which indicates that a service of type `IDuplexHello` must have a correspondent that implements a service of type `IHelloCallbackContract`.</span></span> <span data-ttu-id="3b249-162">此外，`IHelloCallbackContract` 實作一個單向回呼方法，可讓服務呼叫用戶端，而不需等待用戶端回覆，以支援分散式事件驅動用戶端。</span><span class="sxs-lookup"><span data-stu-id="3b249-162">In addition, `IHelloCallbackContract` implements a one-way callback method, enabling the service to call the client without waiting for a reply to support a distributed, event-driven client.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationName">
      <MemberSignature Language="C#" Value="public string ConfigurationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigurationName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigurationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConfigurationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConfigurationName : string with get, set" Usage="System.ServiceModel.ServiceContractAttribute.ConfigurationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3b249-163">取得或設定用來在應用程式組態檔中尋找服務的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-163">Gets or sets the name used to locate the service in an application configuration file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3b249-164">用來在應用程式組態檔中尋找服務項目的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-164">The name used to locate the service element in an application configuration file.</span>
          </span>
          <span data-ttu-id="3b249-165">預設為服務實作類別的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-165">The default is the name of the service implementation class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b249-166">若要設定組態系統用來在組態檔中尋找合約值的數值，請參閱 <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>。</span><span class="sxs-lookup"><span data-stu-id="3b249-166">To set the value by which the configuration system locates a contract value in the configuration file, see <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b249-167">值為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-167">The value is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b249-168">值為空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-168">The value is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasProtectionLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasProtectionLevel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasProtectionLevel : bool" Usage="System.ServiceModel.ServiceContractAttribute.HasProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3b249-169">取得指出成員是否已指派保護層級的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-169">Gets a value that indicates whether the member has a protection level assigned.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3b249-170">如果 <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> 屬性不為 <see cref="F:System.Net.Security.ProtectionLevel.None" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-170">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> property is not <see cref="F:System.Net.Security.ProtectionLevel.None" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3b249-171">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-171">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b249-172"><xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> 屬性表示合約是否設定了 `false` 以外的保護層級值。</span><span class="sxs-lookup"><span data-stu-id="3b249-172">The <xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> property indicates whether a protection level value other than `false` has been set for the contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.ServiceContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3b249-173">取得或設定 Web 服務描述語言 (WSDL) 中的 <see langword="&lt;portType&gt;" /> 項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-173">Gets or sets the name for the <see langword="&lt;portType&gt;" /> element in Web Services Description Language (WSDL).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3b249-174">預設值是套用 <see cref="T:System.ServiceModel.ServiceContractAttribute" /> 之類別或介面的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-174">The default value is the name of the class or interface to which the <see cref="T:System.ServiceModel.ServiceContractAttribute" /> is applied.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b249-175">使用 <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> 與 <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> 屬性，來控制 WSDL 中 `<portType>` 元素的名稱與命名空間。</span><span class="sxs-lookup"><span data-stu-id="3b249-175">Use the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and the <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties to control the name and namespace of the `<portType>` element in WSDL.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b249-176">在下列程式碼範例中，會示範如何使用 <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> 的 <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> 與 <xref:System.ServiceModel.ServiceContractAttribute> 屬性來設定 WSDL 中相對應的值。</span><span class="sxs-lookup"><span data-stu-id="3b249-176">The following code example shows how to use the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties of the <xref:System.ServiceModel.ServiceContractAttribute> to set the corresponding values in WSDL.</span></span>  
  
 [!code-csharp[SCA.Names#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/services.cs#1)]
 [!code-vb[SCA.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/services.vb#1)]  
  
 <span data-ttu-id="3b249-177">下列程式碼範例顯示前述服務的 Windows Communication Foundation (WCF) 用戶端的匯入 WSDL 方法使用[ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="3b249-177">The following code example shows an Windows Communication Foundation (WCF) client for the preceding service that imported WSDL using the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md).</span></span> <span data-ttu-id="3b249-178">此用戶端使用 `HelloWorldProxy` 用戶端，而非 `SampleServiceProxy` 用戶端 (與 <xref:System.ServiceModel.ServiceContractAttribute> 之＜範例＞一節的範例一樣)。</span><span class="sxs-lookup"><span data-stu-id="3b249-178">This client uses a `HelloWorldProxy` client rather than a `SampleServiceProxy` client (as is the case with the sample in the Example section of <xref:System.ServiceModel.ServiceContractAttribute>).</span></span>  
  
 [!code-csharp[SCA.Names#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/client.cs#3)]
 [!code-vb[SCA.Names#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b249-179">值為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-179">The value is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b249-180">值為空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-180">The value is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.ServiceModel.ServiceContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3b249-181">取得或設定 Web 服務描述語言 (WSDL) 中的 <see langword="&lt;portType&gt;" /> 項目命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-181">Gets or sets the namespace of the <see langword="&lt;portType&gt;" /> element in Web Services Description Language (WSDL).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3b249-182">
            <see langword="&lt;portType&gt;" /> 元素的 WSDL 命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-182">The WSDL namespace of the <see langword="&lt;portType&gt;" /> element.</span>
          </span>
          <span data-ttu-id="3b249-183">預設值為 "http://tempuri.org"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-183">The default value is "http://tempuri.org".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3b249-184">在下列程式碼範例中，會示範如何使用 <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> 的 <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> 與 <xref:System.ServiceModel.ServiceContractAttribute> 屬性來設定 WSDL 中相對應的值。</span><span class="sxs-lookup"><span data-stu-id="3b249-184">The following code example shows how to use the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties of the <xref:System.ServiceModel.ServiceContractAttribute> to set the corresponding values in WSDL.</span></span>  
  
 [!code-csharp[SCA.Names#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/services.cs#1)]
 [!code-vb[SCA.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/services.vb#1)]  
  
 <span data-ttu-id="3b249-185">下列程式碼範例顯示前述服務的 Windows Communication Foundation (WCF) 用戶端的匯入 WSDL 方法使用[ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="3b249-185">The following code example shows an Windows Communication Foundation (WCF) client for the preceding service that imported WSDL using the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md).</span></span> <span data-ttu-id="3b249-186">此用戶端使用 `HelloWorldClient` 用戶端，而非 `SampleServiceClient` 用戶端 (與 <xref:System.ServiceModel.ServiceContractAttribute> 之＜範例＞一節的範例一樣)。</span><span class="sxs-lookup"><span data-stu-id="3b249-186">This client uses a `HelloWorldClient` client rather than a `SampleServiceClient` client (as is the case with the sample in the Example section of <xref:System.ServiceModel.ServiceContractAttribute>).</span></span>  
  
 [!code-csharp[SCA.Names#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/client.cs#3)]
 [!code-vb[SCA.Names#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionLevel : System.Net.Security.ProtectionLevel with get, set" Usage="System.ServiceModel.ServiceContractAttribute.ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3b249-187">指定合約繫結是否必須支援 <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> 屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-187">Specifies whether the binding for the contract must support the value of the <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3b249-188">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-188">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span>
          </span>
          <span data-ttu-id="3b249-189">預設值為 <see cref="F:System.Net.Security.ProtectionLevel.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-189">The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b249-190">使用 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> 屬性指定公開合約的端點中，合約繫結是否需要加密、數位簽章或兩者均進行。</span><span class="sxs-lookup"><span data-stu-id="3b249-190">Use the <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> property to specify the degree to which the contract binding requires encryption, digital signatures, or both for endpoints that expose the contract.</span></span> <span data-ttu-id="3b249-191">這裡設定的值，會成為所有作業訊息 (包括錯誤) 的預設值。</span><span class="sxs-lookup"><span data-stu-id="3b249-191">The value set here is the default value for all operation messages including faults.</span></span>  
  
 <span data-ttu-id="3b249-192">請記住，執行階段的保護行為，是以下屬性的保護層級設定值的組合，這點很重要。</span><span class="sxs-lookup"><span data-stu-id="3b249-192">It is important to remember that the protection behavior at runtime is the combination of the protection-level values set on the following properties.</span></span> <span data-ttu-id="3b249-193">這些屬性有階層式結構。</span><span class="sxs-lookup"><span data-stu-id="3b249-193">These properties have a hierarchical structure.</span></span> <span data-ttu-id="3b249-194">除非針對較窄的範圍明確設定不同的值，否則，設定最外層的值會建立所有較窄範圍的預設值。</span><span class="sxs-lookup"><span data-stu-id="3b249-194">Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</span></span> <span data-ttu-id="3b249-195">在此情況下，外部值仍為所有較窄範圍的預設值 (特別設定的範圍除外)。</span><span class="sxs-lookup"><span data-stu-id="3b249-195">In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</span></span>  
  
 <span data-ttu-id="3b249-196">例如，如果 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> 設定為 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> 而且沒有其他更窄的範圍具有保護層級設定，則會加密並簽署作業合約中的所有訊息。</span><span class="sxs-lookup"><span data-stu-id="3b249-196">For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> is set to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</span></span> <span data-ttu-id="3b249-197">但是，如果這些其中一個作業已將 <xref:System.ServiceModel.OperationContractAttribute> 設定為 <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>，則會簽署該作業的訊息，但是合約中的其他所有訊息都會經過加密並簽署。</span><span class="sxs-lookup"><span data-stu-id="3b249-197">If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</span></span>  
  
 <span data-ttu-id="3b249-198">如需保護層級及其假設和範圍的詳細資訊，請參閱[了解保護層級](~/docs/framework/wcf/understanding-protection-level.md)。</span><span class="sxs-lookup"><span data-stu-id="3b249-198">For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span></span>  
  
 <span data-ttu-id="3b249-199">設定這些值的範圍如下：</span><span class="sxs-lookup"><span data-stu-id="3b249-199">The scopes at which these values are set are:</span></span>  
  
 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="3b249-200"><xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> 的 <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType> 屬性。</span><span class="sxs-lookup"><span data-stu-id="3b249-200">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3b249-201"><xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> 的 <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType> 屬性。</span><span class="sxs-lookup"><span data-stu-id="3b249-201">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3b249-202">當合約上未明確指定保護層級，而且基礎繫結可支援安全性 (不論是在傳輸層級或訊息層級) 時，整個合約的有效保護層級會是 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3b249-202">When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3b249-203">如果繫結不支援安全性 (例如，<xref:System.ServiceModel.BasicHttpBinding>)，整個合約的有效 <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> 為 <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3b249-203">If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> for the whole contract.</span></span> <span data-ttu-id="3b249-204">結果便是根據端點繫結的不同，用戶端可以要求不同的訊息或傳輸層級的安全性保護，即使當合約指定 <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> 時亦然。</span><span class="sxs-lookup"><span data-stu-id="3b249-204">The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b249-205">該值不是其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-205">The value is not one of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SessionMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.SessionMode SessionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.SessionMode SessionMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.SessionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SessionMode As SessionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::SessionMode SessionMode { System::ServiceModel::SessionMode get(); void set(System::ServiceModel::SessionMode value); };" />
      <MemberSignature Language="F#" Value="member this.SessionMode : System.ServiceModel.SessionMode with get, set" Usage="System.ServiceModel.ServiceContractAttribute.SessionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.SessionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3b249-206">取得或設定是否允許工作階段、不允許工作階段，或需要工作階段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-206">Gets or sets whether sessions are allowed, not allowed or required.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3b249-207">
            <see cref="T:System.ServiceModel.SessionMode" />，表示是否允許工作階段、不允許工作階段，或需要工作階段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-207">A <see cref="T:System.ServiceModel.SessionMode" /> that indicates whether sessions are allowed, not allowed, or required.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b249-208">使用 <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> 屬性要求可支援端點間工作階段的繫結。</span><span class="sxs-lookup"><span data-stu-id="3b249-208">Use the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property to require bindings that support sessions between endpoints.</span></span> <span data-ttu-id="3b249-209">工作階段是一種將兩個 (或更多) 端點間所交換的一組訊息予以關聯的方式。</span><span class="sxs-lookup"><span data-stu-id="3b249-209">A session is a way of correlating a set of messages exchanged between two or more endpoints.</span></span> <span data-ttu-id="3b249-210">若您的服務支援通道工作階段，便可使用 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 屬性，來指定您的服務合約實作之執行個體與通道工作階段間的關係。</span><span class="sxs-lookup"><span data-stu-id="3b249-210">If your service supports channel sessions, you can then use the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property to specify the relationship between instances your service contract implementation and the channel session.</span></span> <span data-ttu-id="3b249-211">若繫結不支援工作階段，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3b249-211">If a binding does not support sessions, an exception is thrown.</span></span>  
  
 <span data-ttu-id="3b249-212">例如，若 <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> 屬性設為 <xref:System.ServiceModel.SessionMode.Required?displayProperty=nameWithType>，且 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 屬性設為 <xref:System.ServiceModel.InstanceContextMode.PerSession>，用戶端可使用相同連線，對相同服務物件進行重複呼叫。</span><span class="sxs-lookup"><span data-stu-id="3b249-212">For example, if the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property is set to <xref:System.ServiceModel.SessionMode.Required?displayProperty=nameWithType> and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property is set to <xref:System.ServiceModel.InstanceContextMode.PerSession>, clients can use the same connection to make repeated calls to the same service object.</span></span>  
  
 <span data-ttu-id="3b249-213">如需有關工作階段和服務執行個體的詳細資訊，請參閱 <<c0> [ 使用的工作階段](~/docs/framework/wcf/using-sessions.md)並[工作階段，Instancing，and Concurrency](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)。</span><span class="sxs-lookup"><span data-stu-id="3b249-213">For more information about sessions and service instances, see [Using Sessions](~/docs/framework/wcf/using-sessions.md) and [Sessions, Instancing, and Concurrency](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3b249-214">支援工作階段的通道，可支援服務執行個體與特定工作階段之間的預設關聯。</span><span class="sxs-lookup"><span data-stu-id="3b249-214">A channel that supports sessions supports the default association of a service instance with a particular session.</span></span> <span data-ttu-id="3b249-215">但是，除了工作階段的執行個體控制外，不同工作階段實作會支援不同功能。</span><span class="sxs-lookup"><span data-stu-id="3b249-215">However, different session implementations support different features in addition to session-based instancing control.</span></span> <span data-ttu-id="3b249-216">WCF 會提供四種可用來提供工作階段的應用程式的行為; 的工作階段每種類型的工作階段提供該工作階段類型特有的其他行為。</span><span class="sxs-lookup"><span data-stu-id="3b249-216">WCF provides four types of sessions that you can use to provide sessionful application behavior; each type of session provides additional behavior specific to the type of session it is.</span></span>  
  
1.  <span data-ttu-id="3b249-217"><xref:System.ServiceModel.Channels.SecurityBindingElement?displayProperty=nameWithType> 支援安全性工作階段，通訊兩端均同意加密與/或數位簽章程序，所有訊息都與該特定安全對談相關。</span><span class="sxs-lookup"><span data-stu-id="3b249-217">The <xref:System.ServiceModel.Channels.SecurityBindingElement?displayProperty=nameWithType> supports security sessions, in which both ends of communication have agreed upon an encryption and/or digital signature process; all messages are correlated with that specific secure conversation.</span></span> <span data-ttu-id="3b249-218">如需詳細資訊，請參閱 < [Securing Services](~/docs/framework/wcf/securing-services.md)。</span><span class="sxs-lookup"><span data-stu-id="3b249-218">For more information, see [Securing Services](~/docs/framework/wcf/securing-services.md).</span></span> <span data-ttu-id="3b249-219">例如，<xref:System.ServiceModel.WSHttpBinding?displayProperty=nameWithType> 同時支援安全性工作階段與可靠工作階段，但根據預設，只會使用安全工作階段，它會對訊息加密並進行數位簽章。</span><span class="sxs-lookup"><span data-stu-id="3b249-219">For example, the <xref:System.ServiceModel.WSHttpBinding?displayProperty=nameWithType>, which contains support for both security sessions and reliable sessions, by default uses only a secure session which encrypts and digitally signs messages.</span></span>  
  
2.  <span data-ttu-id="3b249-220"><xref:System.ServiceModel.NetTcpBinding?displayProperty=nameWithType> 支援 TCP/IP 連接所公開的工作階段，可確保所有訊息都在通訊端層級由連線工作階段建立相互關聯。</span><span class="sxs-lookup"><span data-stu-id="3b249-220">The <xref:System.ServiceModel.NetTcpBinding?displayProperty=nameWithType> supports the sessions exposed by the TCP/IP connections to ensure that all messages are correlated by the connection session at the socket level.</span></span>  
  
3.  <span data-ttu-id="3b249-221"><xref:System.ServiceModel.Channels.ReliableSessionBindingElement?displayProperty=nameWithType>，它實作了 WS-ReliableMessaging 規格，提供可靠工作階段支援，讓訊息依序傳遞且只傳遞一次，可提供信賴度，即使訊息在對談期間流經多個節點亦然。</span><span class="sxs-lookup"><span data-stu-id="3b249-221">The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement?displayProperty=nameWithType>, which implements the WS-ReliableMessaging specification, provides support for reliable sessions in which messages are delivered in order and exactly once, enabling confidence even when messages travel across multiple nodes during the conversation.</span></span> <span data-ttu-id="3b249-222">如需詳細資訊，請參閱 <<c0> [ 可靠工作階段](~/docs/framework/wcf/feature-details/reliable-sessions.md)。</span><span class="sxs-lookup"><span data-stu-id="3b249-222">For more information, see [Reliable Sessions](~/docs/framework/wcf/feature-details/reliable-sessions.md).</span></span>  
  
4.  <span data-ttu-id="3b249-223"><xref:System.ServiceModel.NetMsmqBinding?displayProperty=nameWithType> 提供 MSMQ 資料包工作階段。</span><span class="sxs-lookup"><span data-stu-id="3b249-223">The <xref:System.ServiceModel.NetMsmqBinding?displayProperty=nameWithType> provides MSMQ datagram sessions.</span></span> <span data-ttu-id="3b249-224">如需詳細資訊，請參閱 < [WCF 中的佇列](~/docs/framework/wcf/feature-details/queues-in-wcf.md)。</span><span class="sxs-lookup"><span data-stu-id="3b249-224">For more information, see [Queues in WCF](~/docs/framework/wcf/feature-details/queues-in-wcf.md).</span></span>  
  
 <span data-ttu-id="3b249-225">記得，設定 <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> 屬性不會指定合約所需的工作階段型別，只代表它需要工作階段。</span><span class="sxs-lookup"><span data-stu-id="3b249-225">Remember that setting the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property does not specify the type of session the contract requires, only that it requires one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b249-226">下列服務合約要求在與 `SampleDuplexHello` 服務實作互動時，設定的繫結要使用工作階段。</span><span class="sxs-lookup"><span data-stu-id="3b249-226">The following service contract requires that configured bindings use sessions when interacting with `SampleDuplexHello` service implementations.</span></span>  
  
 [!code-csharp[SCA.Session#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.session/cs/services.cs#1)]
 [!code-vb[SCA.Session#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.session/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b249-227">該值不是其中一個 <see cref="T:System.ServiceModel.SessionMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b249-227">The value is not one of the <see cref="T:System.ServiceModel.SessionMode" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>