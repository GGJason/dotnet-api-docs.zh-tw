<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceContractAttribute.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac523e56316bd9a8661f771e3708b920518208d4cbb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23e56316bd9a8661f771e3708b920518208d4cbb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Indicates that an interface or a class defines a service contract in a Windows Communication Foundation (WCF) application.</source>
          <target state="translated">表示某個介面或類別定義了 Windows Communication Foundation (WCF) 應用程式中的服務合約。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> attribute on an interface (or class) to define a service contract.</source>
          <target state="translated">使用介面 (或類別) 上的 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 屬性來定義服務合約。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Then use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> attribute on one or more of the class (or interface) methods to define the contract's service operations.</source>
          <target state="translated">接著使用一個或多個類別 (或介面) 方法上的 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> 屬性，定義合約的服務作業。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>When the service contract is implemented and combined with a <bpt id="p1">[</bpt>Bindings<ept id="p1">](~/docs/framework/wcf/bindings.md)</ept> and an <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> object, the service contract is exposed for use by clients.</source>
          <target state="translated">當服務合約實作及結合<bpt id="p1">[</bpt>繫結<ept id="p1">](~/docs/framework/wcf/bindings.md)</ept>和<ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph>物件時，服務合約由使用用戶端。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>For an overview of the process using simple examples, see <bpt id="p1">[</bpt>Getting Started Tutorial<ept id="p1">](~/docs/framework/wcf/getting-started-tutorial.md)</ept>.</source>
          <target state="translated">如需使用簡單的範例程序的概觀，請參閱<bpt id="p1">[</bpt>入門教學課程<ept id="p1">](~/docs/framework/wcf/getting-started-tutorial.md)</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>For more information about creating service contracts, see <bpt id="p1">[</bpt>Designing and Implementing Services<ept id="p1">](~/docs/framework/wcf/designing-and-implementing-services.md)</ept>.</source>
          <target state="translated">如需有關如何建立服務合約的詳細資訊，請參閱<bpt id="p1">[</bpt>設計與實作服務<ept id="p1">](~/docs/framework/wcf/designing-and-implementing-services.md)</ept>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The information expressed by a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> and its interface is loosely related to the Web Services Description Language (WSDL) <ph id="ph2">`&lt;portType&gt;`</ph> element.</source>
          <target state="translated">由 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 表示的資訊及其介面與 Web 服務描述語言 (WSDL) 的 <ph id="ph2">`&lt;portType&gt;`</ph> 項目鬆散相關。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>A service contract is used on the service side to specify what the service’s endpoint exposes to callers.</source>
          <target state="translated">服務端會使用服務合約，來指定要公開哪些服務端點給呼叫者。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>It is also used on the client side to specify the contract of the endpoint with which the client communicates and, in the case of duplex contracts, to specify the callback contract (using the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph> property) that the client must implement in order to participate in a duplex conversation.</source>
          <target state="translated">用戶端亦會使用服務合約，來指定該用戶端所通訊之端點的合約，而在雙工合約中，也會指定用戶端必須實作的回呼合約 (使用 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph> 屬性)，以參與雙工對談。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>An interface or class that is decorated with <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> must also have at least one method marked with the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> attribute to expose any functionality.</source>
          <target state="translated">以 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 裝飾的介面或類別至少要有一個以 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> 屬性標記的方法，才能公開其功能。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>See the Examples section for a code example of the simplest use of the two attributes to define and implement a service.</source>
          <target state="translated">請參閱＜範例＞一節中，使用這兩個屬性來定義並實作服務的最簡單程式碼範例。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> properties to modify the service contract.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 屬性修改服務合約。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ConfigurationName%2A&gt;</ph> property specifies the name of the service element in the configuration file to use.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ConfigurationName%2A&gt;</ph> 屬性指定了所使用組態檔中服務項目的名稱。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> properties control the name and namespace of the contract in the WSDL <ph id="ph3">`&lt;portType&gt;`</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> 與 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> 屬性控制了 WSDL <ph id="ph3">`&lt;portType&gt;`</ph> 元素中的合約名稱與合約命名空間。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> property specifies whether the contract requires a binding that supports sessions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> 屬性指定合約是否需要支援工作階段的繫結。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph> property specifies the return contract in a two-way (duplex) conversation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph> 屬性指定雙向 (雙工) 對談的傳回合約。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> properties indicate whether all messages supporting the contract have a explicit <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> value, and if so, what that level is.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A&gt;</ph> 與 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> 屬性表示支援合約的所有訊息是否有明確的 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> 值，若有，其值為何。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Services implement service contracts, which represent the data exchange that a service type supports.</source>
          <target state="translated">服務會實作服務合約，代表服務類型支援的資料交換。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>A service class can implement a service contract (by implementing an interface marked with <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> that has methods marked with <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>) or it can be marked with the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> and apply the <ph id="ph4">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> attribute to its own methods.</source>
          <target state="translated">服務類別可實作服務合約 (藉由實作以 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 標記的介面，此介面有以 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> 標記的方法)，或可用 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 標記此類別，並套用 <ph id="ph4">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> 屬性至此類別的方法 </target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>(If a class implements an interface marked with <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>, it cannot be itself marked with <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>.) Methods on service types that are marked with the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> are treated as part of a default service contract specified by the service type itself.</source>
          <target state="translated">(若類別實作以 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 標記的介面，則此類別本身便不能以 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 標記)。在服務類型中以 <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> 標記的方法，會視為預設服務合約的一部分 (此合約由該服務類型自行指定)。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>For details about service operations, see <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>.</source>
          <target state="translated">如需服務作業的詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>By default, the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> properties are the name of the contract type and <ph id="ph3">`http://tempuri.org`</ph>, respectively, and <ph id="ph4">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> is <ph id="ph5">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> 與 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> 屬性分別為合約類型名稱與 <ph id="ph3">`http://tempuri.org`</ph> 的名稱，而 <ph id="ph4">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> 則為 <ph id="ph5">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>It is recommended that service contracts explicitly set their names, namespaces, and protection levels using these properties.</source>
          <target state="translated">建議您使用這些屬性，明確設定服務合約的名稱、命名空間與保護層級。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Doing so accomplishes two goals.</source>
          <target state="translated">如此可達成兩個目標，</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>First, it builds a contract that is not directly connected to the managed type information, enabling you to refactor your managed code and namespaces without breaking the contract as it is expressed in WSDL.</source>
          <target state="translated">首先，它會建置一份不會與 Managed 型別資訊直接連接的合約，可讓您在不破壞 WSDL 所表示的合約下，重構 Managed 程式碼與命名空間。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Second, explicitly requiring a certain level of protection on the contract itself enables the runtime to validate whether the binding configuration supports that level of security, preventing poor configuration from exposing sensitive information.</source>
          <target state="translated">還有，在合約內明確要求某種保護層級，可讓執行階段驗證該繫結組態是否支援該安全性層級，避免因組態設定不當而洩漏敏感資訊。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>For more information about protection levels, see <bpt id="p1">[</bpt>Understanding Protection Level<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</source>
          <target state="translated">如需保護層級的詳細資訊，請參閱<bpt id="p1">[</bpt>了解保護層級<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>To expose a service for use by client applications, create a host application to register your service endpoint with <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</source>
          <target state="translated">若要公開服務供用戶端應用程式使用，請建立主機應用程式在 <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 註冊您的服務端點。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>You can host <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> services using Windows Activation Services (WAS), in console applications, Windows Service applications, ASP.NET applications, Windows Forms applications, or any other kind of application domain.</source>
          <target state="translated">您可使用 Windows Activation Services (WAS)，將 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 服務裝載於主控台應用程式、Windows 服務應用程式、ASP.NET 應用程式、Windows Forms 應用程式，或任何其他種類的應用程式定義域。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Hosting in the WAS is very similar to creating an ASP.NET application.</source>
          <target state="translated">在 WAS 裝載的方式與建立 ASP.NET 應用程式非常相似。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>For details, see <bpt id="p1">[</bpt>How to: Host a WCF Service in IIS<ept id="p1">](~/docs/framework/wcf/feature-details/how-to-host-a-wcf-service-in-iis.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>How to： 將 WCF 服務裝載於 IIS<ept id="p1">](~/docs/framework/wcf/feature-details/how-to-host-a-wcf-service-in-iis.md)</ept>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Clients either use the service contract interface (the interface marked with <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>) to create a channel to the service or they use the client objects (which combine the type information of the service contract interface with the <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class) to communicate with your service.</source>
          <target state="translated">用戶端使用服務合約介面 (以 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 標示的介面) 建立通往服務的通道，或使用用戶端物件 (結合了服務合約介面的型別資訊與 <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> 類別) 與您的服務通訊。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>For details on client channels to services, see the <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph> class and <bpt id="p1">[</bpt>WCF Client Overview<ept id="p1">](~/docs/framework/wcf/wcf-client-overview.md)</ept>.</source>
          <target state="translated">如需用戶端通道連至服務的詳細資訊，請參閱<ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph>類別和<bpt id="p1">[</bpt>WCF 用戶端概觀<ept id="p1">](~/docs/framework/wcf/wcf-client-overview.md)</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Using a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> class or interface to inherit from another <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> class or interface extends the parent contract.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 類別或介面來繼承另一個延伸了父合約的 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 類別或介面。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>For example, if an <ph id="ph1">`IChildContract`</ph> interface is marked with <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> and inherited from another service contract interface, <ph id="ph3">`IParentContract`</ph>, the <ph id="ph4">`IChildContract`</ph> service contract contains the methods of both <ph id="ph5">`IParentContract`</ph> and <ph id="ph6">`IChildContract`</ph>.</source>
          <target state="translated">例如，如果 <ph id="ph1">`IChildContract`</ph> 介面以 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 標記，並繼承了另一個服務合約介面 <ph id="ph3">`IParentContract`</ph>，則 <ph id="ph4">`IChildContract`</ph> 服務合約就包含了 <ph id="ph5">`IParentContract`</ph> 與 <ph id="ph6">`IChildContract`</ph> 的方法。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Extending contracts (whether on classes or interfaces) is very similar to extending managed classes and interfaces.</source>
          <target state="translated">延伸合約 (在類別或介面上) 與延伸 Managed 類別與介面非常相似。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The most flexible approach to creating services is to define service contract interfaces first and then have your service class implement that interface.</source>
          <target state="translated">建立服務最有彈性的方式，是先定義服務合約介面，再讓您的服務類別實作該介面 </target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>(This is also the simplest way to build your services if you must implement service contracts that have been defined by others.) Building services directly by marking a class with <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> and its methods with <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> works when the service exposes only one contract (but that contract can be exposed by more than one endpoint).</source>
          <target state="translated">(若您必須實作由別人定義的服務合約，那麼這也是建立服務最簡單的方式)。若服務只公開一個合約 (但該合約可被多個端點公開)，則可直接將某個類別以 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 標記，其方法以 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> 標記，來建置出服務。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph> property to indicate another service contract that, when bound together with the original service contract, define a message exchange that can flow in two ways independently.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph>屬性，表示另一個服務合約，當繫結在一起原始的服務合約定義兩種方式可以獨立傳送的訊息交換。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>For details, see <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The following code example shows how to apply the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> to an interface to define a service contract with one service method, indicated by the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph>.</source>
          <target state="translated">下列程式碼範例會示範如何將 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 套用至介面，定義出含有一個服務方法的服務合約，此服務方法由 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> 表示。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>In this case, the protection level required of bindings for all messages is <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">在此情況下，所有訊息之繫結所要求的保護層級為 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The code example then implements that contract on the <ph id="ph1">`SampleService`</ph> class.</source>
          <target state="translated">程式碼範例接著在 <ph id="ph1">`SampleService`</ph> 類別上實作該合約。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The following code example shows a simple configuration file for the preceding service that creates one endpoint.</source>
          <target state="translated">下列程式碼範例是前述服務的一個簡單組態檔，此服務會建立一個端點。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceContractAttribute">
          <source>The following code example shows a simple client that invokes the preceding <ph id="ph1">`SampleService`</ph>.</source>
          <target state="translated">下列程式碼範例示範叫用前述 <ph id="ph1">`SampleService`</ph> 的簡單用戶端。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceContractAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceContractAttribute" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceContractAttribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceContractAttribute.#ctor">
          <source>The constructor creates an instance of the attribute with no session requirements, no callback contract, and the default name and namespace.</source>
          <target state="translated">建構函式使用預設名稱與命名空間，且沒有工作階段需求與回呼合約，來建立屬性的執行個體。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>Gets or sets the type of callback contract when the contract is a duplex contract.</source>
          <target state="translated">當合約是雙工合約時，取得或設定回呼合約的型別。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that indicates the callback contract.</source>
          <target state="translated">表示回呼合約的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>Specify an interface in the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph> property that represents the required opposite contract in a two-way (or duplex) message exchange.</source>
          <target state="translated">指定 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A&gt;</ph> 屬性中的介面，代表雙向 (或雙工) 訊息交換中所需的反向合約。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>This enables client applications to listen for inbound operation calls that the server-side service application can send independently of client activity.</source>
          <target state="translated">這可讓用戶端應用程式接聽傳入作業呼叫，伺服器端服務應用程式可傳送該呼叫給用戶端，不論用戶端的活動為何。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>Callback contracts that have one-way operations represent calls from the service that the client can handle.</source>
          <target state="translated">擁有單向作業的回呼合約，代表從服務端的呼叫，用戶端可處理此呼叫。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> attribute is ignored on callback contracts.</source>
          <target state="translated">回呼合約上的 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 屬性會忽略。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>To configure runtime behavior of callback objects, use the <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">若要設定回呼物件的執行階段行為，請使用 <ph id="ph1">&lt;xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>The following code example shows a service that specifies a callback contract, which indicates that a service of type <ph id="ph1">`IDuplexHello`</ph> must have a correspondent that implements a service of type <ph id="ph2">`IHelloCallbackContract`</ph>.</source>
          <target state="translated">下列程式碼範例示範指定了回呼合約的服務，此回呼合約表示 <ph id="ph1">`IDuplexHello`</ph><ph id="ph2">`IHelloCallbackContract`</ph>型別的服務必須有一個對等項，此對等項實作了  型別的服務。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
          <source>In addition, <ph id="ph1">`IHelloCallbackContract`</ph> implements a one-way callback method, enabling the service to call the client without waiting for a reply to support a distributed, event-driven client.</source>
          <target state="translated">此外，<ph id="ph1">`IHelloCallbackContract`</ph> 實作一個單向回呼方法，可讓服務呼叫用戶端，而不需等待用戶端回覆，以支援分散式事件驅動用戶端。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
          <source>Gets or sets the name used to locate the service in an application configuration file.</source>
          <target state="translated">取得或設定用來在應用程式組態檔中尋找服務的名稱。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
          <source>The name used to locate the service element in an application configuration file.</source>
          <target state="translated">用來在應用程式組態檔中尋找服務項目的名稱。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
          <source>The default is the name of the service implementation class.</source>
          <target state="translated">預設為服務實作類別的名稱。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
          <source>To set the value by which the configuration system locates a contract value in the configuration file, see <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A&gt;</ph>.</source>
          <target state="translated">若要設定組態系統用來在組態檔中尋找合約值的數值，請參閱 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
          <source>The value is null.</source>
          <target state="translated">值為 null。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
          <source>The value is an empty string.</source>
          <target state="translated">值為空字串。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel">
          <source>Gets a value that indicates whether the member has a protection level assigned.</source>
          <target state="translated">取得指出成員是否已指派保護層級的值。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /&gt;</ph> property is not <ph id="ph3">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /&gt;</ph> 屬性不為 <ph id="ph3">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph> 則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A&gt;</ph> property indicates whether a protection level value other than <ph id="ph2">`false`</ph> has been set for the contract.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A&gt;</ph> 屬性表示合約是否設定了 <ph id="ph2">`false`</ph> 以外的保護層級值。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.Name">
          <source>Gets or sets the name for the <ph id="ph1">&lt;see langword="&amp;lt;portType&amp;gt;" /&gt;</ph> element in Web Services Description Language (WSDL).</source>
          <target state="translated">取得或設定 Web 服務描述語言 (WSDL) 中的 <ph id="ph1">&lt;see langword="&amp;lt;portType&amp;gt;" /&gt;</ph> 項目名稱。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Name">
          <source>The default value is the name of the class or interface to which the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceContractAttribute" /&gt;</ph> is applied.</source>
          <target state="translated">預設值是套用 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceContractAttribute" /&gt;</ph> 之類別或介面的名稱。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Name">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> properties to control the name and namespace of the <ph id="ph3">`&lt;portType&gt;`</ph> element in WSDL.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> 與 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> 屬性，來控制 WSDL 中 <ph id="ph3">`&lt;portType&gt;`</ph> 元素的名稱與命名空間。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Name">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> to set the corresponding values in WSDL.</source>
          <target state="translated">在下列程式碼範例中，會示範如何使用 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> 的 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> 與 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 屬性來設定 WSDL 中相對應的值。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Name">
          <source>The following code example shows an <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client for the preceding service that imported WSDL using the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>.</source>
          <target state="translated">下列程式碼範例示範<ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>前述服務使用 WSDL 匯入的用戶端<bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Name">
          <source>This client uses a <ph id="ph1">`HelloWorldProxy`</ph> client rather than a <ph id="ph2">`SampleServiceProxy`</ph> client (as is the case with the sample in the Example section of <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>).</source>
          <target state="translated">此用戶端使用 <ph id="ph1">`HelloWorldProxy`</ph> 用戶端，而非 <ph id="ph2">`SampleServiceProxy`</ph> 用戶端 (與 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 之＜範例＞一節的範例一樣)。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.Name">
          <source>The value is null.</source>
          <target state="translated">值為 null。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.Name">
          <source>The value is an empty string.</source>
          <target state="translated">值為空字串。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.Namespace">
          <source>Gets or sets the namespace of the <ph id="ph1">&lt;see langword="&amp;lt;portType&amp;gt;" /&gt;</ph> element in Web Services Description Language (WSDL).</source>
          <target state="translated">取得或設定 Web 服務描述語言 (WSDL) 中的 <ph id="ph1">&lt;see langword="&amp;lt;portType&amp;gt;" /&gt;</ph> 項目命名空間。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Namespace">
          <source>The WSDL namespace of the <ph id="ph1">&lt;see langword="&amp;lt;portType&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="&amp;lt;portType&amp;gt;" /&gt;</ph> 元素的 WSDL 命名空間。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Namespace">
          <source>The default value is "<ph id="ph1">http://tempuri.org</ph>".</source>
          <target state="translated">預設值為 "<ph id="ph1">http://tempuri.org</ph>"。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Namespace">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> to set the corresponding values in WSDL.</source>
          <target state="translated">在下列程式碼範例中，會示範如何使用 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.Name%2A&gt;</ph> 的 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A&gt;</ph> 與 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 屬性來設定 WSDL 中相對應的值。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Namespace">
          <source>The following code example shows an <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client for the preceding service that imported WSDL using the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>.</source>
          <target state="translated">下列程式碼範例示範<ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>前述服務使用 WSDL 匯入的用戶端<bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.Namespace">
          <source>This client uses a <ph id="ph1">`HelloWorldClient`</ph> client rather than a <ph id="ph2">`SampleServiceClient`</ph> client (as is the case with the sample in the Example section of <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>).</source>
          <target state="translated">此用戶端使用 <ph id="ph1">`HelloWorldClient`</ph> 用戶端，而非 <ph id="ph2">`SampleServiceClient`</ph> 用戶端 (與 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 之＜範例＞一節的範例一樣)。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>Specifies whether the binding for the contract must support the value of the <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /&gt;</ph> property.</source>
          <target state="translated">指定合約繫結是否必須支援 <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /&gt;</ph> 屬性的值。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> property to specify the degree to which the contract binding requires encryption, digital signatures, or both for endpoints that expose the contract.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A&gt;</ph> 屬性指定公開合約的端點中，合約繫結是否需要加密、數位簽章或兩者均進行。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>The value set here is the default value for all operation messages including faults.</source>
          <target state="translated">這裡設定的值，會成為所有作業訊息 (包括錯誤) 的預設值。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>It is important to remember that the protection behavior at runtime is the combination of the protection-level values set on the following properties.</source>
          <target state="translated">請記住，執行階段的保護行為，是以下屬性的保護層級設定值的組合，這點很重要。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>These properties have a hierarchical structure.</source>
          <target state="translated">這些屬性有階層式結構。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</source>
          <target state="translated">除非針對較窄的範圍明確設定不同的值，否則，設定最外層的值會建立所有較窄範圍的預設值。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</source>
          <target state="translated">在此情況下，外部值仍為所有較窄範圍的預設值 (特別設定的範圍除外)。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>For example, if <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</source>
          <target state="translated">例如，如果 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> 設定為 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> 而且沒有其他更窄的範圍具有保護層級設定，則會加密並簽署作業合約中的所有訊息。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>If, however, one of those operations has the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</source>
          <target state="translated">但是，如果這些其中一個作業已將 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> 設定為 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>，則會簽署該作業的訊息，但是合約中的其他所有訊息都會經過加密並簽署。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>For details about protection levels and their assumptions and scopes, see <bpt id="p1">[</bpt>Understanding Protection Level<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</source>
          <target state="translated">如需保護層級及其假設和範圍的詳細資訊，請參閱<bpt id="p1">[</bpt>了解保護層級<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>The scopes at which these values are set are:</source>
          <target state="translated">設定這些值的範圍如下：</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> 的 <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> 的 <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">當合約上未明確指定保護層級，而且基礎繫結可支援安全性 (不論是在傳輸層級或訊息層級) 時，整個合約的有效保護層級會是 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>If the binding does not support security (such as <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>), the effective <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType&gt;</ph> is <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph> for the whole contract.</source>
          <target state="translated">如果繫結不支援安全性 (例如，<ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>)，整個合約的有效 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType&gt;</ph> 為 <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">結果便是根據端點繫結的不同，用戶端可以要求不同的訊息或傳輸層級的安全性保護，即使當合約指定 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph> 時亦然。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
          <source>The value is not one of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values.</source>
          <target state="translated">該值不是其中一個 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>Gets or sets whether sessions are allowed, not allowed or required.</source>
          <target state="translated">取得或設定是否允許工作階段、不允許工作階段，或需要工作階段。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.SessionMode" /&gt;</ph> that indicates whether sessions are allowed, not allowed, or required.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.SessionMode" /&gt;</ph>，表示是否允許工作階段、不允許工作階段，或需要工作階段。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> property to require bindings that support sessions between endpoints.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> 屬性要求可支援端點間工作階段的繫結。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>A session is a way of correlating a set of messages exchanged between two or more endpoints.</source>
          <target state="translated">工作階段是一種將兩個 (或更多) 端點間所交換的一組訊息予以關聯的方式。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>If your service supports channel sessions, you can then use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> property to specify the relationship between instances your service contract implementation and the channel session.</source>
          <target state="translated">若您的服務支援通道工作階段，便可使用 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> 屬性，來指定您的服務合約實作之執行個體與通道工作階段間的關係。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>If a binding does not support sessions, an exception is thrown.</source>
          <target state="translated">若繫結不支援工作階段，就會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>For example, if the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.ServiceModel.SessionMode.Required?displayProperty=nameWithType&gt;</ph> and the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.ServiceModel.InstanceContextMode.PerSession&gt;</ph>, clients can use the same connection to make repeated calls to the same service object.</source>
          <target state="translated">例如，若 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> 屬性設為 <ph id="ph2">&lt;xref:System.ServiceModel.SessionMode.Required?displayProperty=nameWithType&gt;</ph>，且 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> 屬性設為 <ph id="ph4">&lt;xref:System.ServiceModel.InstanceContextMode.PerSession&gt;</ph>，用戶端可使用相同連線，對相同服務物件進行重複呼叫。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>For more information about sessions and service instances, see <bpt id="p1">[</bpt>Using Sessions<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept> and <bpt id="p2">[</bpt>Sessions, Instancing, and Concurrency<ept id="p2">](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)</ept>.</source>
          <target state="translated">如需有關工作階段與服務執行個體的詳細資訊，請參閱<bpt id="p1">[</bpt>Sessions&lt;<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>和<bpt id="p2">[</bpt>工作階段、 執行個體，以及並行<ept id="p2">](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)</ept>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>A channel that supports sessions supports the default association of a service instance with a particular session.</source>
          <target state="translated">支援工作階段的通道，可支援服務執行個體與特定工作階段之間的預設關聯。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>However, different session implementations support different features in addition to session-based instancing control.</source>
          <target state="translated">但是，除了工作階段的執行個體控制外，不同工作階段實作會支援不同功能。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> provides four types of sessions that you can use to provide sessionful application behavior; each type of session provides additional behavior specific to the type of session it is.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 提供四種工作階段，您可使用它們提供工作階段應用程式行為，每一種工作階段提供該工作階段特有的額外行為。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement?displayProperty=nameWithType&gt;</ph> supports security sessions, in which both ends of communication have agreed upon an encryption and/or digital signature process; all messages are correlated with that specific secure conversation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement?displayProperty=nameWithType&gt;</ph> 支援安全性工作階段，通訊兩端均同意加密與/或數位簽章程序，所有訊息都與該特定安全對談相關。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>For more information, see <bpt id="p1">[</bpt>Securing Services<ept id="p1">](~/docs/framework/wcf/securing-services.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>保護 Services<ept id="p1">](~/docs/framework/wcf/securing-services.md)</ept>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>For example, the <ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding?displayProperty=nameWithType&gt;</ph>, which contains support for both security sessions and reliable sessions, by default uses only a secure session which encrypts and digitally signs messages.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.ServiceModel.WSHttpBinding?displayProperty=nameWithType&gt;</ph> 同時支援安全性工作階段與可靠工作階段，但根據預設，只會使用安全工作階段，它會對訊息加密並進行數位簽章。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.NetTcpBinding?displayProperty=nameWithType&gt;</ph> supports the sessions exposed by the TCP/IP connections to ensure that all messages are correlated by the connection session at the socket level.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.NetTcpBinding?displayProperty=nameWithType&gt;</ph> 支援 TCP/IP 連接所公開的工作階段，可確保所有訊息都在通訊端層級由連線工作階段建立相互關聯。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement?displayProperty=nameWithType&gt;</ph>, which implements the WS-ReliableMessaging specification, provides support for reliable sessions in which messages are delivered in order and exactly once, enabling confidence even when messages travel across multiple nodes during the conversation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement?displayProperty=nameWithType&gt;</ph>，它實作了 WS-ReliableMessaging 規格，提供可靠工作階段支援，讓訊息依序傳遞且只傳遞一次，可提供信賴度，即使訊息在對談期間流經多個節點亦然。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>For more information, see <bpt id="p1">[</bpt>Reliable Sessions<ept id="p1">](~/docs/framework/wcf/feature-details/reliable-sessions.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>可靠工作階段<ept id="p1">](~/docs/framework/wcf/feature-details/reliable-sessions.md)</ept>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.NetMsmqBinding?displayProperty=nameWithType&gt;</ph> provides MSMQ datagram sessions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.NetMsmqBinding?displayProperty=nameWithType&gt;</ph> 提供 MSMQ 資料包工作階段。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>For more information, see <bpt id="p1">[</bpt>Queues in WCF<ept id="p1">](~/docs/framework/wcf/feature-details/queues-in-wcf.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>WCF 中的佇列<ept id="p1">](~/docs/framework/wcf/feature-details/queues-in-wcf.md)</ept>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>Remember that setting the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> property does not specify the type of session the contract requires, only that it requires one.</source>
          <target state="translated">記得，設定 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A&gt;</ph> 屬性不會指定合約所需的工作階段型別，只代表它需要工作階段。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>The following service contract requires that configured bindings use sessions when interacting with <ph id="ph1">`SampleDuplexHello`</ph> service implementations.</source>
          <target state="translated">下列服務合約要求在與 <ph id="ph1">`SampleDuplexHello`</ph> 服務實作互動時，設定的繫結要使用工作階段。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
          <source>The value is not one of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.SessionMode" /&gt;</ph> values.</source>
          <target state="translated">該值不是其中一個 <ph id="ph1">&lt;see cref="T:System.ServiceModel.SessionMode" /&gt;</ph> 值。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>