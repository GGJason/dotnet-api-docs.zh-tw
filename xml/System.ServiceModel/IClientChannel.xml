<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IClientChannel.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59037899c1b8cc7ed8fb49595e1bc5fc5db233ec7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9037899c1b8cc7ed8fb49595e1bc5fc5db233ec7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.IClientChannel">
          <source>Defines the behavior of outbound request and request/reply channels used by client applications.</source>
          <target state="translated">定義用戶端應用程式所使用之傳出要求和要求/回覆通道的行為。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IClientChannel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> interface defines the operations supported by all channels returned by a call to <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> 介面會定義由 <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> 的呼叫所傳回之所有通道支援的作業。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IClientChannel">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> methods and properties to inspect and modify the outbound typed channel.</source>
          <target state="translated">您可以使用 <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> 方法和屬性來檢查並修改傳出型別通道。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IClientChannel">
          <source>The <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> exports both a <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class and a service contract interface by creating a contract interface that inherits from both the target service contract and <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph>, enabling you to use the extended contract as both the proxy to the service and to access the client channel.</source>
          <target state="translated"><bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>匯出<ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph>類別並藉由建立繼承自目標服務合約的合約介面的服務合約介面和<ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph>，可讓您使用做為服務 proxy 的擴充的合約，以及存取用戶端通道。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IClientChannel">
          <source>For more information, see <bpt id="p1">[</bpt>WCF Client Architecture<ept id="p1">](~/docs/framework/wcf/feature-details/client-architecture.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>WCF 用戶端架構<ept id="p1">](~/docs/framework/wcf/feature-details/client-architecture.md)</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.IClientChannel">
          <source>For examples of its appearance in generated client code files, see <bpt id="p1">[</bpt>Understanding Generated Client Code<ept id="p1">](~/docs/framework/wcf/feature-details/understanding-generated-client-code.md)</ept>.</source>
          <target state="translated">部分在產生的用戶端程式碼檔案中的範例，請參閱<bpt id="p1">[</bpt>了解產生的用戶端程式碼<ept id="p1">](~/docs/framework/wcf/feature-details/understanding-generated-client-code.md)</ept>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
          <source>Gets or sets a value indicating whether <ph id="ph1">&lt;see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /&gt;</ph> attempts to call the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /&gt;</ph> objects in the <ph id="ph3">&lt;see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /&gt;</ph> property or throws if that collection is not empty.</source>
          <target state="translated">取得或設定值，這個值表示 <ph id="ph1">&lt;see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /&gt;</ph> 是否嘗試呼叫 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /&gt;</ph> 屬性中的 <ph id="ph3">&lt;see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /&gt;</ph> 物件，或者是否擲回 (如果該集合不是空白的話)。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> is permitted to invoke interactive channel initializers; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果允許 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 叫用互動式通道初始設定式，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
          <source>Set this to <ph id="ph1">`false`</ph> if you want to throw an exception rather than display an initialization dialog.</source>
          <target state="translated">如果您想要擲回例外狀況 (Exception)，而非顯示初始化對話方塊，請將它設定為 <ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
          <source>This is useful in a middle-tier scenario in which you want to guarantee that no dialog appears even if the application is configured to display one.</source>
          <target state="translated">在中介層 (Middle Tier) 案例中，如果您想要確保不會出現對話方塊 (即使應用程式已設定為顯示對話方塊)，這將很有用。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
          <source>For details, see <bpt id="p1">[</bpt>Accessing Services Using a WCF Client<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept> and <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>使用 WCF 用戶端存取服務<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept>和<ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>The method that is called when this method completes.</source>
          <target state="translated">當這個方法完成時所呼叫的方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>Information about the state of the channel.</source>
          <target state="translated">通道狀態的相關資訊。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>An asynchronous call to begin using a user interface to obtain credential information.</source>
          <target state="translated">要開始使用使用者介面來取得認證資訊的非同步呼叫。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> to use to call back when processing has completed.</source>
          <target state="translated">要在處理完成時用於回呼的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur.</source>
          <target state="translated">您可以呼叫這個方法，讓任何互動式通道進行初始化 (例如 CardSpace 卡選取範圍)。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>This happens automatically if the channel is used without explicitly calling <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph>, so for many applications this call is optional.</source>
          <target state="translated">如果在未明確呼叫 <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> 的情況下使用通道，則會自動呼叫這個方法，因此，對許多應用程式而言，這個呼叫是選擇性的。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>However, if the user takes a long time in the selection process, the operation that automatically called this may time out. To prevent this, call <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A&gt;</ph> explicitly.</source>
          <target state="translated">不過，如果使用者在選取程序花了很長時間，則自動呼叫這個方法的作業可能會逾時。為避免逾時，請明確呼叫 <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A&gt;</ph> (或 <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A&gt;</ph> 和 <ph id="ph3">&lt;xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>These operations do not time out and allow you to control exactly where in your application this dialog comes up.</source>
          <target state="translated">這些作業不會逾時，並且可讓您精確控制這個對話方塊要出現在應用程式的哪個位置。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>This method only brings up a dialog if the application is configured to do so.</source>
          <target state="translated">只有在應用程式已設定為顯示對話方塊時，這個方法才會顯示對話方塊。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.</source>
          <target state="translated">當應用程式未設定為使用 CardSpace 或另一個互動式通道初始設定式時，這個呼叫會傳回，而不會有任何動作。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <source>If you call this method explicitly, you must also explicitly open the channel before using it.</source>
          <target state="translated">如果您明確呼叫這個方法，則在使用通道之前，也必須明確開啟該通道。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
          <source>Gets a value indicating whether a call was done to a user interface to obtain credential information.</source>
          <target state="translated">取得值，這個值表示是否已呼叫使用者介面，以取得認證資訊。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /&gt;</ph> method was called (or the <ph id="ph3">&lt;see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /&gt;</ph> and <ph id="ph4">&lt;see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" /&gt;</ph> methods; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已呼叫 <ph id="ph2">&lt;see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /&gt;</ph> 方法 (或 <ph id="ph3">&lt;see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /&gt;</ph> 和 <ph id="ph4">&lt;see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" /&gt;</ph> 方法)，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
          <source>If operations are called on an <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> without calling <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph>, these methods are called automatically.</source>
          <target state="translated">在未呼叫 <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A&gt;</ph> 的情況下，如果在 <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> 上呼叫作業，則會自動呼叫這些方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
          <source>For details, see <bpt id="p1">[</bpt>Accessing Services Using a WCF Client<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept> and <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>使用 WCF 用戶端存取服務<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept>和<ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <source>A call to a user interface to obtain credential information.</source>
          <target state="translated">呼叫使用者介面來取得認證資訊。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <source>Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur.</source>
          <target state="translated">您可以呼叫這個方法，讓任何互動式通道進行初始化 (例如 CardSpace 卡選取範圍)。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <source>This happens automatically if the channel is used without explicitly calling <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph>, so for many applications this call is optional.</source>
          <target state="translated">如果在未明確呼叫 <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> 的情況下使用通道，則會自動呼叫這個方法，因此，對許多應用程式而言，這個呼叫是選擇性的。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <source>However, if the user takes a long time in the selection process, the operation that automatically called this may time out. To prevent this, call <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A&gt;</ph> explicitly.</source>
          <target state="translated">不過，如果使用者在選取程序花了很長時間，則自動呼叫這個方法的作業可能會逾時。為避免逾時，請明確呼叫 <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A&gt;</ph> (或 <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A&gt;</ph> 和 <ph id="ph3">&lt;xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <source>These operations do not time out and allow you to control exactly where in your application this dialog comes up.</source>
          <target state="translated">這些作業不會逾時，並且可讓您精確控制這個對話方塊要出現在應用程式的哪個位置。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <source>This method only brings up a dialog if the application is configured to do so.</source>
          <target state="translated">只有在應用程式已設定為顯示對話方塊時，這個方法才會顯示對話方塊。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <source>When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.</source>
          <target state="translated">當應用程式未設定為使用 CardSpace 或另一個互動式通道初始設定式時，這個呼叫會傳回，而不會有任何動作。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <source>If you call this method explicitly, you must also explicitly open the channel before using it.</source>
          <target state="translated">如果您明確呼叫這個方法，則在使用通道之前，也必須明確開啟該通道。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <source>For details, see <bpt id="p1">[</bpt>Accessing Services Using a WCF Client<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept> and <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>使用 WCF 用戶端存取服務<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept>和<ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
          <source>Called when the call to <ph id="ph1">&lt;see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /&gt;</ph> has finished.</source>
          <target state="translated">當呼叫 <ph id="ph1">&lt;see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /&gt;</ph> 已完成時呼叫。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
          <source>This is a reserved event.</source>
          <target state="translated">這是保留的事件。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.IClientChannel.Via">
          <source>Gets the URI that contains the transport address to which messages are sent on the client channel.</source>
          <target state="translated">取得包含在用戶端通道上傳送訊息之目標傳輸位址的 URI。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.Via">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the transport address to which messages are sent on the channel.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>，包含在通道上傳送訊息的目標傳輸位址。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.Via">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> serves as both the ultimate destination and the physical address if a <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.Via%2A&gt;</ph> is not specified.</source>
          <target state="translated">如果沒有指定 <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph>，<ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.Via%2A&gt;</ph> 會同時當做最終目的端和實體位址。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.Via">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel.Via%2A&gt;</ph> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</source>
          <target state="translated">如果指定了 <ph id="ph1">&lt;xref:System.ServiceModel.IClientChannel.Via%2A&gt;</ph>，這就是訊息傳送的實際實體目標位址，而且訊息必須透過這個位址，才能到達目的端。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.IClientChannel.Via">
          <source>This value can be set from a configuration file using the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">您可以使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=nameWithType&gt;</ph> 從組態檔設定這個值。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>