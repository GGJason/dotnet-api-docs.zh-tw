<Type Name="WSHttpBindingBase" FullName="System.ServiceModel.WSHttpBindingBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b1973b8d62b1eb396e24d1b7ec240d881f666d8c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WSHttpBindingBase : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WSHttpBindingBase extends System.ServiceModel.Channels.Binding implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.WSHttpBindingBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WSHttpBindingBase&#xA;Inherits Binding&#xA;Implements IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSHttpBindingBase abstract : System::ServiceModel::Channels::Binding, System::ServiceModel::Channels::IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IBindingRuntimePreferences</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="7db29-101">提供成員通用於 <see cref="T:System.ServiceModel.WSHttpBinding" /> 和 <see cref="T:System.ServiceModel.WSFederationHttpBinding" /> 的基底類別 (Base Class)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7db29-101">Provides the base class with members common to the <see cref="T:System.ServiceModel.WSHttpBinding" /> and the <see cref="T:System.ServiceModel.WSFederationHttpBinding" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7db29-102"><xref:System.ServiceModel.WSHttpBindingBase> 提供一些用來設定安全性、可靠、互通 Web 服務所使用之繫結的基本功能，例如 <xref:System.ServiceModel.WSHttpBinding> 針對非雙工服務合約的實作，還有特別針對支援 WS-Federation 通訊協定所實作的安全與互通 <xref:System.ServiceModel.WSFederationHttpBinding>。</span><span class="sxs-lookup"><span data-stu-id="7db29-102">The <xref:System.ServiceModel.WSHttpBindingBase> provides some basic functionality for the bindings used to configure secure, reliable, and interoperable Web services, such as that implemented by the <xref:System.ServiceModel.WSHttpBinding> for non-duplex service contracts, and more particularly, for the secure and interoperable <xref:System.ServiceModel.WSFederationHttpBinding> that supports the WS-Federation protocol.</span></span>  
  
 <span data-ttu-id="7db29-103">根據預設，它會產生使用 WS-Security 訊息安全性和驗證、HTTP 訊息傳遞以及 Text/XML 訊息編碼的執行階段堆疊。</span><span class="sxs-lookup"><span data-stu-id="7db29-103">By default it generates a run-time stack that uses WS-Security for message security and authentication, HTTP for message delivery, and a Text/XML message encoding.</span></span> <span data-ttu-id="7db29-104">它也可以設定使用 WS-ReliableMessaging 加強可靠性。</span><span class="sxs-lookup"><span data-stu-id="7db29-104">It can be configured to also use WS-ReliableMessaging for reliability.</span></span>  
  
 <span data-ttu-id="7db29-105">您可以使用選擇性的 `reliableSessionEnabled` 參數，設定是否要使用 WS-ReliableMessaging。</span><span class="sxs-lookup"><span data-stu-id="7db29-105">The use of WS-ReliableMessaging is configurable using the optional `reliableSessionEnabled` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7db29-106">下列範例會示範如何使用具有衍生類別 (<xref:System.ServiceModel.WSHttpBindingBase> 和 <xref:System.ServiceModel.WSHttpBinding> ) 的 <xref:System.ServiceModel.WSFederationHttpBinding> 類別所提供的功能。</span><span class="sxs-lookup"><span data-stu-id="7db29-106">The following example shows how to use the functionality provided by the <xref:System.ServiceModel.WSHttpBindingBase> class with the derived classes, <xref:System.ServiceModel.WSHttpBinding> and <xref:System.ServiceModel.WSFederationHttpBinding>.</span></span>  
  
 [!code-csharp[WSHttpBindingBase#0](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbindingbase/cs/service.cs#0)]
 [!code-vb[WSHttpBindingBase#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbindingbase/vb/service.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7db29-107">初始化 <see cref="T:System.ServiceModel.WSHttpBindingBase" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-107">Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBindingBase" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WSHttpBindingBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBindingBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WSHttpBindingBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7db29-108">初始化 <see cref="T:System.ServiceModel.WSHttpBindingBase" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-108">Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBindingBase" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7db29-109">這個範例會示範如何使用預設建構函式。</span><span class="sxs-lookup"><span data-stu-id="7db29-109">This example shows how to use the default constructor.</span></span>  
  
 [!code-csharp[WSHttpBindingBase#1](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbindingbase/cs/service.cs#1)]
 [!code-vb[WSHttpBindingBase#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbindingbase/vb/service.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WSHttpBindingBase (bool reliableSessionEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool reliableSessionEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBindingBase.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (reliableSessionEnabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WSHttpBindingBase(bool reliableSessionEnabled);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reliableSessionEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reliableSessionEnabled">
          <span data-ttu-id="7db29-110">如果已啟用可靠工作階段，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-110">
              <see langword="true" />, if a reliable session is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7db29-111">以指示可靠工作階段是否啟用的值，初始化 <see cref="T:System.ServiceModel.WSHttpBindingBase" /> 類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-111">Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBindingBase" /> class with a value that indicates whether a reliable session is enabled.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BypassProxyOnLocal">
      <MemberSignature Language="C#" Value="public bool BypassProxyOnLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BypassProxyOnLocal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassProxyOnLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BypassProxyOnLocal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7db29-112">取得或設定值，這個值會指出是否對本機位址略過 Proxy 伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-112">Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7db29-113">若要對本機位址略過 Proxy 伺服器，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-113">
              <see langword="true" /> to bypass the proxy server for local addresses; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7db29-114">預設值是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-114">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7db29-115">如果網際網路資源有本機位址，則此資源為本機資源。</span><span class="sxs-lookup"><span data-stu-id="7db29-115">An Internet resource is local if it has a local address.</span></span> <span data-ttu-id="7db29-116">本機位址是指所在的同一部電腦、 本機 LAN 或內部網路，而且會識別語法上沒有句號 （.），例如 Uri"http://webserver/"和"http://localhost/"。</span><span class="sxs-lookup"><span data-stu-id="7db29-116">A local address is one that is on same computer, the local LAN or intranet and is identified, syntactically, by the lack of a period (.) as in the URIs "http://webserver/" and "http://localhost/".</span></span>  
  
 <span data-ttu-id="7db29-117">設定 <xref:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal%2A> 屬性即可決定以 <xref:System.ServiceModel.WSHttpBindingBase> 設定的端點在存取本機資源時，是否使用 Proxy 伺服器。</span><span class="sxs-lookup"><span data-stu-id="7db29-117">Setting the <xref:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal%2A> property determines whether endpoints configured with the <xref:System.ServiceModel.WSHttpBindingBase> use the proxy server when accessing local resources.</span></span>  
  
 <span data-ttu-id="7db29-118">若 <xref:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal%2A> 為 `true`，則對於本機網際網路資源的要求不會使用 Proxy 伺服器。</span><span class="sxs-lookup"><span data-stu-id="7db29-118">If <xref:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal%2A> is `true`, requests to local Internet resources do not use the proxy server.</span></span> <span data-ttu-id="7db29-119">若 <xref:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal%2A> 為 `false`，則所有的網際網路要求都會經過 Proxy 伺服器。</span><span class="sxs-lookup"><span data-stu-id="7db29-119">When <xref:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal%2A> is `false`, all Internet requests are made through the proxy server.</span></span>  
  
   
  
## Examples  
  
 <span data-ttu-id="7db29-120">下列範例會將這個屬性設為表示應略過本機資源的 Proxy。</span><span class="sxs-lookup"><span data-stu-id="7db29-120">The following example sets this property to indicate that the proxy should be bypassed for local resources.</span></span>  
  
 [!code-csharp[WSHttpBindingBase#3](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbindingbase/cs/service.cs#3)]
 [!code-vb[WSHttpBindingBase#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbindingbase/vb/service.vb#3)]  
  
 <span data-ttu-id="7db29-121">這個屬性的值也可以在組態檔中設定。</span><span class="sxs-lookup"><span data-stu-id="7db29-121">The value of this property can also be set in the configuration file.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBindingBase.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7db29-122">傳回包含在目前繫結中繫結項目的已排序集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-122">Returns an ordered collection of binding elements contained in the current binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7db29-123">包含繫結之 <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> 物件的 <see cref="T:System.ServiceModel.Channels.BindingElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-123">A <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the <see cref="T:System.ServiceModel.Channels.BindingElement" /> objects for the binding.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7db29-124">繫結項目的順序很重要。</span><span class="sxs-lookup"><span data-stu-id="7db29-124">The order of the binding elements is important.</span></span> <span data-ttu-id="7db29-125">它會反映建構及堆疊通訊協定和傳輸通道的順序。</span><span class="sxs-lookup"><span data-stu-id="7db29-125">It reflects the order in which the protocol and transport channels are constructed and stacked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7db29-126">這個範例會示範如何取得訊息的大小上限。</span><span class="sxs-lookup"><span data-stu-id="7db29-126">This example shows how to get the maximum size for a message.</span></span>  
  
 [!code-csharp[WSHttpBindingBase#16](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbindingbase/cs/service.cs#16)]
 [!code-vb[WSHttpBindingBase#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbindingbase/vb/service.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageSecurity">
      <MemberSignature Language="C#" Value="protected abstract System.ServiceModel.Channels.SecurityBindingElement CreateMessageSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Channels.SecurityBindingElement CreateMessageSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBindingBase.CreateMessageSecurity" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateMessageSecurity () As SecurityBindingElement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::ServiceModel::Channels::SecurityBindingElement ^ CreateMessageSecurity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SecurityBindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7db29-127">在衍生類別中實作時，自目前繫結傳回 <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-127">When implemented in a derived class, returns the <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> from the current binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7db29-128">來自目前繫結的 <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-128">A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> from the current binding.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EnvelopeVersion EnvelopeVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpBindingBase.EnvelopeVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvelopeVersion As EnvelopeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EnvelopeVersion ^ EnvelopeVersion { System::ServiceModel::EnvelopeVersion ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EnvelopeVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7db29-129">取得 SOAP 的版本，這個版本是用於由此繫結處理的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-129">Gets the version of SOAP that is used for messages that are processed by this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7db29-130">搭配此繫結使用的 <see cref="T:System.ServiceModel.EnvelopeVersion" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-130">The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding.</span>
          </span>
          <span data-ttu-id="7db29-131">該值一律為 SOAP 1.2。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-131">The value is always SOAP 1.2.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7db29-132">這個範例會示範如何取得信封版本。</span><span class="sxs-lookup"><span data-stu-id="7db29-132">This example shows how to get the envelope version.</span></span>  
  
 [!code-csharp[WSHttpBindingBase#4](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbindingbase/cs/service.cs#4)]
 [!code-vb[WSHttpBindingBase#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbindingbase/vb/service.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransport">
      <MemberSignature Language="C#" Value="protected abstract System.ServiceModel.Channels.TransportBindingElement GetTransport ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Channels.TransportBindingElement GetTransport() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBindingBase.GetTransport" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetTransport () As TransportBindingElement" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::ServiceModel::Channels::TransportBindingElement ^ GetTransport();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.TransportBindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7db29-133">在衍生類別中實作時，自目前繫結傳回傳輸繫結項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-133">When implemented in a derived class, returns the transport binding element from the current binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7db29-134">來自目前繫結的 <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-134">The <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> from the current binding.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7db29-135">取得或設定值，這個值會指出在比對 URI 時此主機名稱是否會用來取用服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-135">Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7db29-136">
            <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> 值，指出在比對 URI 時此主機名稱是否會用來取用服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-136">The <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI.</span>
          </span>
          <span data-ttu-id="7db29-137">預設值為 <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />，表示比對時忽略主機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-137">The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7db29-138">這個範例會示範如何取得 <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="7db29-138">This example shows how to get the <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode%2A> value.</span></span>  
  
 [!code-csharp[WSHttpBindingBase#5](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbindingbase/cs/service.cs#5)]
 [!code-vb[WSHttpBindingBase#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbindingbase/vb/service.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(524288)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7db29-139">取得或設定配置供訊息緩衝區管理員使用的最大記憶體量 (以位元組為單位)，緩衝區管理員管理使用此繫結之端點所需緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-139">Gets or sets the maximum amount of memory allocated, in bytes, for the buffer manager that manages the buffers required by endpoints using this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7db29-140">使用此繫結設定之端點所使用緩衝區集區的大小上限，單位為位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-140">The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding.</span>
          </span>
          <span data-ttu-id="7db29-141">預設值為 524,288 個位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-141">The default value is 524,288 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7db29-142"><xref:System.ServiceModel.Channels.BufferManager> 會嘗試利用緩衝集區將使用緩衝區的成本降至最低。</span><span class="sxs-lookup"><span data-stu-id="7db29-142">The <xref:System.ServiceModel.Channels.BufferManager> tries to minimize the cost of using buffers with a buffer pool.</span></span> <span data-ttu-id="7db29-143">當訊息從通道送出時，服務將需要緩衝區來處理訊息。</span><span class="sxs-lookup"><span data-stu-id="7db29-143">Buffers are required to process messages by the service when they come out of the channel.</span></span> <span data-ttu-id="7db29-144">如果緩衝區集區中沒有足夠的記憶體可以處理訊息負載，<xref:System.ServiceModel.Channels.BufferManager> 就必須從 CLR 堆積配置額外的記憶體，進而增加記憶體回收負荷。</span><span class="sxs-lookup"><span data-stu-id="7db29-144">If there is not sufficient memory in the buffer pool to process the message load, the <xref:System.ServiceModel.Channels.BufferManager> must allocate additional memory from the CLR heap, which increases the garbage collection overhead.</span></span> <span data-ttu-id="7db29-145">從 CLR 記憶體回收堆積所產生的大量配置表示緩衝區集區太小，而提高 <xref:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize%2A> 上限來提供較大的配置便可改善效能。</span><span class="sxs-lookup"><span data-stu-id="7db29-145">Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the <xref:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize%2A> limit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7db29-146">這個範例會示範如何取得 <xref:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="7db29-146">This example shows how to get the <xref:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize%2A> value.</span></span>  
  
 [!code-csharp[WSHttpBindingBase#6](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbindingbase/cs/service.cs#6)]
 [!code-vb[WSHttpBindingBase#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbindingbase/vb/service.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7db29-147">取得或設定可由繫結處理之訊息的大小上限 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-147">Gets or sets the maximum size, in bytes, for a message that can be processed by the binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7db29-148">由此繫結處理之訊息的大小上限，單位為位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-148">The maximum size, in bytes, for a message that is processed by the binding.</span>
          </span>
          <span data-ttu-id="7db29-149">預設值為 65,536 位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-149">The default value is 65,536 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7db29-150">服務可使用 <xref:System.ServiceModel.WSHttpBindingBase> 從網路收到的訊息大小受限於配置給各訊息的記憶體量，</span><span class="sxs-lookup"><span data-stu-id="7db29-150">The size of the messages that can be received on the wire by services using the <xref:System.ServiceModel.WSHttpBindingBase> is bounded by the amount of memory allocated for each message.</span></span> <span data-ttu-id="7db29-151">這項關於訊息大小的限制是為了避免受到阻絕服務 (DoS) 攻擊。</span><span class="sxs-lookup"><span data-stu-id="7db29-151">This bound on message size is intended to limit exposure to denial of service (DoS) attacks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7db29-152">這個範例會示範如何取得訊息的大小上限。</span><span class="sxs-lookup"><span data-stu-id="7db29-152">This example shows how to get the maximum size for a message</span></span>  
  
 [!code-csharp[WSHttpBindingBase#7](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbindingbase/cs/service.cs#7)]
 [!code-vb[WSHttpBindingBase#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbindingbase/vb/service.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7db29-153">這個值小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-153">The value is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="7db29-154">訊息超出所配置的大小上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-154">A message exceeded the maximum size allocated.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MessageEncoding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSMessageEncoding MessageEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.WSMessageEncoding MessageEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpBindingBase.MessageEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageEncoding As WSMessageEncoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSMessageEncoding MessageEncoding { System::ServiceModel::WSMessageEncoding get(); void set(System::ServiceModel::WSMessageEncoding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WSMessageEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7db29-155">取得或設定是否要使用 MTOM 或 Text/XML 來編碼 SOAP 訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-155">Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7db29-156">
            <see cref="T:System.ServiceModel.WSMessageEncoding" /> 的值，指出 MTOM 或 Text 是否要用來編碼 SOAP 訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-156">The value of <see cref="T:System.ServiceModel.WSMessageEncoding" /> that indicates whether MTOM or Text is used to encode SOAP messages.</span>
          </span>
          <span data-ttu-id="7db29-157">預設值是 <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-157">The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7db29-158">這個範例會示範如何取得訊息的大小上限。</span><span class="sxs-lookup"><span data-stu-id="7db29-158">This example shows how to get the maximum size for a message</span></span>  
  
 [!code-csharp[WSHttpBindingBase#8](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbindingbase/cs/service.cs#8)]
 [!code-vb[WSHttpBindingBase#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbindingbase/vb/service.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyAddress">
      <MemberSignature Language="C#" Value="public Uri ProxyAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ProxyAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpBindingBase.ProxyAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ProxyAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7db29-159">取得或設定 HTTP Proxy 的 URI 位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-159">Gets or sets the URI address of the HTTP proxy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7db29-160">當做 HTTP Proxy 之位址使用的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-160">A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy.</span>
          </span>
          <span data-ttu-id="7db29-161">預設值是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-161">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7db29-162">若 <xref:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy%2A> 設定為 `true`，則會忽略 <xref:System.ServiceModel.WSHttpBindingBase.ProxyAddress%2A> 的值。</span><span class="sxs-lookup"><span data-stu-id="7db29-162">If the <xref:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy%2A> is set to `true`, the value of <xref:System.ServiceModel.WSHttpBindingBase.ProxyAddress%2A> is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7db29-163">這個範例會示範如何取得訊息的大小上限。</span><span class="sxs-lookup"><span data-stu-id="7db29-163">This example shows how to get the maximum size for a message.</span></span>  
  
 [!code-csharp[WSHttpBindingBase#9](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbindingbase/cs/service.cs#9)]
 [!code-vb[WSHttpBindingBase#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbindingbase/vb/service.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7db29-164">取得或設定 SOAP 訊息複雜性的條件約束，而這些條件約束可由以此繫結所設定的端點處理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-164">Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7db29-165">指定複雜性條件約束的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-165">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7db29-166">複雜性條件約束的包含項目，包括最大項目深度，或是訊息內的最大字串內容長度。</span><span class="sxs-lookup"><span data-stu-id="7db29-166">The complexity constraints include items like a maximum element depth, a maximum length for string content within the message.</span></span> <span data-ttu-id="7db29-167">這些條件約束可以防止嘗試使用訊息複雜性困住端點處理資源的阻絕服務 (DoS) 攻擊類別。</span><span class="sxs-lookup"><span data-stu-id="7db29-167">The constraints protect against a class of denial of service (DoS) attacks that attempt to use message complexity to tie up endpoint processing resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7db29-168">這個範例會示範如何取得訊息的大小上限。</span><span class="sxs-lookup"><span data-stu-id="7db29-168">This example shows how to get the maximum size for a message.</span></span>  
  
 [!code-csharp[WSHttpBindingBase#10](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbindingbase/cs/service.cs#10)]
 [!code-vb[WSHttpBindingBase#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbindingbase/vb/service.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReliableSession">
      <MemberSignature Language="C#" Value="public System.ServiceModel.OptionalReliableSession ReliableSession { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.OptionalReliableSession ReliableSession" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" />
      <MemberSignature Language="VB.NET" Value="Public Property ReliableSession As OptionalReliableSession" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::OptionalReliableSession ^ ReliableSession { System::ServiceModel::OptionalReliableSession ^ get(); void set(System::ServiceModel::OptionalReliableSession ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.OptionalReliableSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7db29-169">取得物件，這個物件可方便您存取可靠工作階段繫結項目的屬性，只要使用其中一個系統提供的繫結，就可以使用這些屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-169">Gets an object that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7db29-170">
            <see cref="T:System.ServiceModel.ReliableSession" />，可方便您存取可靠工作階段繫結項目的屬性，只要使用其中一個系統提供的繫結，就可以使用這些屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-170">The <see cref="T:System.ServiceModel.ReliableSession" /> that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7db29-171">以 <xref:System.ServiceModel.WSHttpBindingBase.%23ctor%28System.Boolean%29> 建構函式啟用可靠工作階段。</span><span class="sxs-lookup"><span data-stu-id="7db29-171">Reliable sessions are enabled with the <xref:System.ServiceModel.WSHttpBindingBase.%23ctor%28System.Boolean%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7db29-172">這個範例會示範如何取得可靠工作階段繫結的屬性。</span><span class="sxs-lookup"><span data-stu-id="7db29-172">This example shows how to get the properties of a reliable session binding.</span></span>  
  
 [!code-csharp[WSHttpBindingBase#11](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbindingbase/cs/service.cs#11)]
 [!code-vb[WSHttpBindingBase#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbindingbase/vb/service.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpBindingBase.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7db29-173">取得使用這項繫結所設定之通道與接聽程式的 URI 傳輸配置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-173">Gets the URI transport scheme for the channels and listeners that are configured with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7db29-174">若傳輸繫結項目的安全性模式設為 <see cref="F:System.ServiceModel.SecurityMode.None" /> 時為 "http"；若安全性模式另設為 <see cref="F:System.ServiceModel.SecurityMode.Message" />，則是 "https"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-174">"http" if the security mode of the transport binding element is set to <see cref="F:System.ServiceModel.SecurityMode.None" /> or <see cref="F:System.ServiceModel.SecurityMode.Message" />; "https" if the security mode is set otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7db29-175">這個範例會示範如何取得訊息的大小上限。</span><span class="sxs-lookup"><span data-stu-id="7db29-175">This example shows how to get the maximum size for a message.</span></span>  
  
 [!code-csharp[WSHttpBindingBase#12](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbindingbase/cs/service.cs#12)]
 [!code-vb[WSHttpBindingBase#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbindingbase/vb/service.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7db29-176">傳回值，這個值表示 <see cref="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" /> 屬性是否已變更為非預設值且應該序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-176">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" /> property has changed from its default value and should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7db29-177">如果應序列化 <see cref="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" /> 屬性值，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-177">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReliableSession">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReliableSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReliableSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReliableSession () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReliableSession();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7db29-178">傳回值，這個值表示 <see cref="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" /> 屬性是否已變更為非預設值且應該序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-178">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" /> property has changed from its default value and should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7db29-179">如果應序列化 <see cref="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" /> 屬性值，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-179">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTextEncoding">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTextEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTextEncoding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTextEncoding () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTextEncoding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7db29-180">傳回值，這個值表示 <see cref="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" /> 屬性是否已變更為非預設值且應該序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-180">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" /> property has changed from its default value and should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7db29-181">如果應序列化 <see cref="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" /> 屬性值，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-181">
              <see langword="true" /> if the <see cref="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7db29-182">取得值，這個值會指出要以同步或非同步方式處理傳入要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-182">Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7db29-183">如果是以同步方式處理要求，則為 <see langword="true" />，如果是以非同步方式處理要求，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-183">
              <see langword="true" /> if requests are handled synchronously; <see langword="false" /> if handled asynchronously.</span>
          </span>
          <span data-ttu-id="7db29-184">預設為 <see langword="false" />，這樣會以非同步方式處理要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-184">The default is <see langword="false" />, to handle requests asynchronously.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7db29-185">這個範例會示範如何使用 ReceiveSynchronously 成員。</span><span class="sxs-lookup"><span data-stu-id="7db29-185">This example shows how to use the ReceiveSynchronously member.</span></span>  
  
 [!code-csharp[WSHttpBindingBase#19](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbindingbase/cs/service.cs#19)]
 [!code-vb[WSHttpBindingBase#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbindingbase/vb/service.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding TextEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding TextEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property TextEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ TextEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.EncodingConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7db29-186">取得或設定用於訊息文字的字元編碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-186">Gets or sets the character encoding that is used for the message text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7db29-187">
            <see cref="T:System.Text.Encoding" />，表示所使用的字元編碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-187">The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used.</span>
          </span>
          <span data-ttu-id="7db29-188">預設值為 <see cref="T:System.Text.UTF8Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-188">The default is <see cref="T:System.Text.UTF8Encoding" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7db29-189">這個範例會示範如何取得訊息的大小上限。</span><span class="sxs-lookup"><span data-stu-id="7db29-189">This example shows how to get the maximum size for a message.</span></span>  
  
 [!code-csharp[WSHttpBindingBase#13](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbindingbase/cs/service.cs#13)]
 [!code-vb[WSHttpBindingBase#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbindingbase/vb/service.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionFlow">
      <MemberSignature Language="C#" Value="public bool TransactionFlow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionFlow" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionFlow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionFlow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7db29-190">取得或設定值，這個值會指出此繫結程序是否應支援流動 WS-Transactions。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-190">Gets or sets a value that indicates whether this binding should support flowing WS-Transactions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7db29-191">如果支援交易流動，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-191">
              <see langword="true" /> if the flowing of transactions is supported; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7db29-192">預設值是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-192">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7db29-193">這個範例會示範如何取得訊息的大小上限。</span><span class="sxs-lookup"><span data-stu-id="7db29-193">This example shows how to get the maximum size for a message.</span></span>  
  
 [!code-csharp[WSHttpBindingBase#14](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbindingbase/cs/service.cs#14)]
 [!code-vb[WSHttpBindingBase#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbindingbase/vb/service.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultWebProxy">
      <MemberSignature Language="C#" Value="public bool UseDefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultWebProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultWebProxy { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7db29-194">取得或設定值，這個值會指出是否應使用系統自動設定的 HTTP Proxy (如果有的話)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-194">Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7db29-195">如果應使用系統自動設定的 HTTP Proxy (如果有的話)，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-195">
              <see langword="true" /> if the auto-configured HTTP proxy of the system should be used, if available; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7db29-196">預設值是 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7db29-196">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7db29-197">如果這個值是 `true` 且 <xref:System.ServiceModel.WSHttpBindingBase.ProxyAddress%2A> 不是 `null`，則代表有錯誤。</span><span class="sxs-lookup"><span data-stu-id="7db29-197">It is an error for this to be `true` and <xref:System.ServiceModel.WSHttpBindingBase.ProxyAddress%2A> to be non-`null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7db29-198">這個範例會示範如何取得訊息的大小上限。</span><span class="sxs-lookup"><span data-stu-id="7db29-198">This example shows how to get the maximum size for a message.</span></span>  
  
 [!code-csharp[WSHttpBindingBase#15](~/samples/snippets/csharp/VS_Snippets_CFX/wshttpbindingbase/cs/service.cs#15)]
 [!code-vb[WSHttpBindingBase#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/wshttpbindingbase/vb/service.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>