<Type Name="MessageSecurityOverMsmq" FullName="System.ServiceModel.MessageSecurityOverMsmq">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6946a6ec0a64980610c3930bf56c0458ab16ecb7" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48769641" /></Metadata><TypeSignature Language="C#" Value="public sealed class MessageSecurityOverMsmq" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MessageSecurityOverMsmq extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MessageSecurityOverMsmq" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MessageSecurityOverMsmq" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageSecurityOverMsmq sealed" />
  <TypeSignature Language="F#" Value="type MessageSecurityOverMsmq = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="61ac8-101">可在 <see cref="T:System.ServiceModel.NetMsmqBinding" /> 繫結上設定訊息層級的安全性屬性。</span><span class="sxs-lookup"><span data-stu-id="61ac8-101">Enables setting message-level security properties on the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61ac8-102">您可以透過 <xref:System.ServiceModel.NetMsmqBinding.Security%2A> 屬性 (此屬性傳回 <xref:System.ServiceModel.NetMsmqSecurity> 物件)，從繫結中存取這個物件。</span><span class="sxs-lookup"><span data-stu-id="61ac8-102">This object is accessed from the binding by means of the <xref:System.ServiceModel.NetMsmqBinding.Security%2A> property, which returns a <xref:System.ServiceModel.NetMsmqSecurity> object.</span></span> <span data-ttu-id="61ac8-103">此物件有一個 <xref:System.ServiceModel.NetMsmqSecurity.Message%2A> 屬性，此屬性提供一個 <xref:System.ServiceModel.MessageSecurityOverMsmq> 物件的參考。</span><span class="sxs-lookup"><span data-stu-id="61ac8-103">This object has a <xref:System.ServiceModel.NetMsmqSecurity.Message%2A> property that provides a reference to the <xref:System.ServiceModel.MessageSecurityOverMsmq> object.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMessageSecurityOverMsmq#1](~/samples/snippets/csharp/VS_Snippets_CFX/uemessagesecurityovermsmq/cs/program.cs#1)]
 [!code-vb[UEMessageSecurityOverMsmq#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemessagesecurityovermsmq/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageSecurityOverMsmq ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageSecurityOverMsmq.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageSecurityOverMsmq();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61ac8-104">初始化 <see cref="T:System.ServiceModel.MessageSecurityOverMsmq" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="61ac8-104">Initializes a new instance of the <see cref="T:System.ServiceModel.MessageSecurityOverMsmq" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlgorithmSuite">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite" />
      <MemberSignature Language="VB.NET" Value="Public Property AlgorithmSuite As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::SecurityAlgorithmSuite ^ AlgorithmSuite { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); void set(System::ServiceModel::Security::SecurityAlgorithmSuite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmSuite : System.ServiceModel.Security.SecurityAlgorithmSuite with get, set" Usage="System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.ServiceModel.Security.SecurityAlgorithmSuite), "Default")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61ac8-105">指定用於 SOAP 層級之安全性訊息的演算法套件。</span><span class="sxs-lookup"><span data-stu-id="61ac8-105">Specifies the algorithm suite used for security messages at the SOAP level.</span></span></summary>
        <value><span data-ttu-id="61ac8-106">透過 <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> 繫結所傳送訊息的 <see cref="T:System.ServiceModel.NetMsmqBinding" /> 設定。</span><span class="sxs-lookup"><span data-stu-id="61ac8-106">The <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> setting for messages sent over the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61ac8-107"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> 會定義各種不同的演算法，例如標準化、摘要式、KeyWrap、簽章、加密和 KeyDerivation 演算法。</span><span class="sxs-lookup"><span data-stu-id="61ac8-107"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> defines of a variety of algorithms such as Canonicalization, Digest, KeyWrap, Signature, Encryption, and KeyDerivation algorithms.</span></span> <span data-ttu-id="61ac8-108">當使用的平台是利用一組和預設值不同的演算法時，這個屬性的存在就非常重要。</span><span class="sxs-lookup"><span data-stu-id="61ac8-108">This property is most relevant when working with a platform that uses a set of algorithms different than the default.</span></span> <span data-ttu-id="61ac8-109">在修改這個屬性時，您應該了解相關演算法的優點和缺點。</span><span class="sxs-lookup"><span data-stu-id="61ac8-109">You should be aware of the strengths and weaknesses of the relevant algorithms when making modifications to this property.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMessageSecurityOverMsmq#2](~/samples/snippets/csharp/VS_Snippets_CFX/uemessagesecurityovermsmq/cs/program.cs#2)]
 [!code-vb[UEMessageSecurityOverMsmq#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemessagesecurityovermsmq/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCredentialType">
      <MemberSignature Language="C#" Value="public System.ServiceModel.MessageCredentialType ClientCredentialType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.MessageCredentialType ClientCredentialType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCredentialType As MessageCredentialType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::MessageCredentialType ClientCredentialType { System::ServiceModel::MessageCredentialType get(); void set(System::ServiceModel::MessageCredentialType value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCredentialType : System.ServiceModel.MessageCredentialType with get, set" Usage="System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.MessageCredentialType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61ac8-110">取得或設定透過 MSMQ 傳輸傳送之訊息的 <see cref="T:System.ServiceModel.MessageCredentialType" /> 安全性設定。</span><span class="sxs-lookup"><span data-stu-id="61ac8-110">Gets or sets the <see cref="T:System.ServiceModel.MessageCredentialType" /> security setting for messages sent over the MSMQ transport.</span></span></summary>
        <value><span data-ttu-id="61ac8-111">透過 MSMQ 傳輸傳送的訊息的 <see cref="T:System.ServiceModel.MessageCredentialType" /> 安全性設定。</span><span class="sxs-lookup"><span data-stu-id="61ac8-111">The <see cref="T:System.ServiceModel.MessageCredentialType" /> security setting for messages sent over the MSMQ transport.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61ac8-112">這個屬性可以設定為下列其中一個值：</span><span class="sxs-lookup"><span data-stu-id="61ac8-112">This property can be set to one of the following values:</span></span>  
  
-   <span data-ttu-id="61ac8-113">**無**： 這可讓服務與匿名用戶端互動。</span><span class="sxs-lookup"><span data-stu-id="61ac8-113">**None**: This allows the service to interact with anonymous clients.</span></span> <span data-ttu-id="61ac8-114">服務和用戶端都不需要認證。</span><span class="sxs-lookup"><span data-stu-id="61ac8-114">Neither the service nor the client requires a credential.</span></span>  
  
-   <span data-ttu-id="61ac8-115">**Windows**： 這可讓 SOAP 交換加入 Windows 認證的已驗證的內容。</span><span class="sxs-lookup"><span data-stu-id="61ac8-115">**Windows**: This allows the SOAP exchanges to be under the authenticated context of a Windows credential.</span></span> <span data-ttu-id="61ac8-116">如此一定會執行 Kerberos 驗證。</span><span class="sxs-lookup"><span data-stu-id="61ac8-116">This always performs Kerberos-based authentication.</span></span>  
  
-   <span data-ttu-id="61ac8-117">**使用者名稱**： 這可讓服務要求使用 UserName 認證來驗證用戶端。</span><span class="sxs-lookup"><span data-stu-id="61ac8-117">**UserName**: This allows the service to require that the client be authenticated using a UserName credential.</span></span> <span data-ttu-id="61ac8-118">這個認證必須使用 <xref:System.ServiceModel.Description.ClientCredentials> 類別來指定。</span><span class="sxs-lookup"><span data-stu-id="61ac8-118">This credential must be specified using <xref:System.ServiceModel.Description.ClientCredentials> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61ac8-119">WCF 不支援傳送密碼摘要或衍生金鑰使用的密碼，並使用訊息安全性這類金鑰。</span><span class="sxs-lookup"><span data-stu-id="61ac8-119">WCF does not support sending a password digest or deriving keys using password and using such keys for message security.</span></span> <span data-ttu-id="61ac8-120">因此，WCF 會強制使用 UserName 認證時，保護交換。</span><span class="sxs-lookup"><span data-stu-id="61ac8-120">As such, WCF enforces that the exchange is secured when using UserName credentials.</span></span> <span data-ttu-id="61ac8-121">這個模式需要使用在用戶端上，指定服務憑證`ClientCredential`行為和`serviceCertificate`:</span><span class="sxs-lookup"><span data-stu-id="61ac8-121">This mode requires that the service certificate be specified on the client using `ClientCredential` behavior and `serviceCertificate`:</span></span>  
  
-   <span data-ttu-id="61ac8-122">`Certificate`：這會讓服務要求用戶端使用憑證進行驗證。</span><span class="sxs-lookup"><span data-stu-id="61ac8-122">`Certificate`: This allows the service to require that the client be authenticated using a certificate.</span></span> <span data-ttu-id="61ac8-123">此案例中的用戶端認證必須使用 <xref:System.ServiceModel.Description.ClientCredentials> 類別或 `ClientCredentials` 行為來指定。</span><span class="sxs-lookup"><span data-stu-id="61ac8-123">The client credential in this case must be specified using <xref:System.ServiceModel.Description.ClientCredentials> class or `ClientCredentials` behavior.</span></span> <span data-ttu-id="61ac8-124">此案例中的服務認證必須使用 <xref:System.ServiceModel.Description.ClientCredentials> 類別或藉由指定 `ClientCredentials` 以使用 `serviceCertificate` 行為來指定。</span><span class="sxs-lookup"><span data-stu-id="61ac8-124">The service credential in this case must be specified using <xref:System.ServiceModel.Description.ClientCredentials> class or `ClientCredentials` behavior by specifying the `serviceCertificate`.</span></span>  
  
-   <span data-ttu-id="61ac8-125">`InfoCard`：這會讓服務要求用戶端使用 InfoCard 來進行驗證。</span><span class="sxs-lookup"><span data-stu-id="61ac8-125">`InfoCard`: This allows the service to require that the client be authenticated using an InfoCard.</span></span> <span data-ttu-id="61ac8-126">`serviceCertificate` 行為中必須提供 `ClientCredential`。</span><span class="sxs-lookup"><span data-stu-id="61ac8-126">The `serviceCertificate` must be provisioned in the `ClientCredential` behavior.</span></span>  
  
-   <span data-ttu-id="61ac8-127">只有當安全性模式設定為 `MessageSecurityOverMsmq` 或 `Both` 時，才與 `Message` 的 Certificate 認證有關。</span><span class="sxs-lookup"><span data-stu-id="61ac8-127">The Certificate credential for the `MessageSecurityOverMsmq` is relevant only when the security mode is set to `Both` or `Message`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEMessageSecurityOverMsmq#3](~/samples/snippets/csharp/VS_Snippets_CFX/uemessagesecurityovermsmq/cs/program.cs#3)]
 [!code-vb[UEMessageSecurityOverMsmq#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/uemessagesecurityovermsmq/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>